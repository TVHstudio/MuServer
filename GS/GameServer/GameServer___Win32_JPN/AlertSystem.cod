; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\AlertSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?AlertSystem@@3VcAlertSystem@@A			; AlertSystem
_BSS	SEGMENT
?AlertSystem@@3VcAlertSystem@@A DB 0132cH DUP (?)	; AlertSystem
_BSS	ENDS
PUBLIC	??_C@_0L@DHBPCNNH@?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ ; `string'
PUBLIC	??_C@_0O@BCJPJIHJ@?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ ; `string'
PUBLIC	??_C@_0BE@JNJNPECB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ ; `string'
PUBLIC	??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0BP@GKMEMBLN@?4?4?2Data?2ZtData?2AlertSystem?4ini?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Load@cAlertSystem@@QAEXXZ			; cAlertSystem::Load
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Zt_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Zt_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0L@DHBPCNNH@?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
; File e:\work\tranet_version\gs\gameserver\alertsystem.cpp
CONST	SEGMENT
??_C@_0L@DHBPCNNH@?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ DB '%d "%[^"]"'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BCJPJIHJ@?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
CONST	SEGMENT
??_C@_0O@BCJPJIHJ@?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ DB '%d '
	DB	'%d "%[^"]"', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JNJNPECB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
CONST	SEGMENT
??_C@_0BE@JNJNPECB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ DB '%'
	DB	'd %d %d %d "%[^"]"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@ DB 'LOAD FILE ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GKMEMBLN@?4?4?2Data?2ZtData?2AlertSystem?4ini?$AA@
CONST	SEGMENT
??_C@_0BP@GKMEMBLN@?4?4?2Data?2ZtData?2AlertSystem?4ini?$AA@ DB '..\Data\'
	DB	'ZtData\AlertSystem.ini', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@cAlertSystem@@QAEXXZ
_TEXT	SEGMENT
_n$187741 = -400					; size = 4
_n$187736 = -396					; size = 8
_n$187746 = -388					; size = 4
_file$ = -384						; size = 4
_Flag$ = -380						; size = 4
_n$187731 = -376					; size = 16
_Buff$ = -360						; size = 256
_str$187747 = -104					; size = 100
_str$187742 = -104					; size = 100
_str$187737 = -104					; size = 100
_str$187732 = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?Load@cAlertSystem@@QAEXXZ PROC				; cAlertSystem::Load, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 01 00
	00		 sub	 esp, 400		; 00000190H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 11   : 	this->Enable = GetPrivateProfileInt("Common","Enable",0,ALERT_SYSTEM_DIR);

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GKMEMBLN@?4?4?2Data?2ZtData?2AlertSystem?4ini?$AA@
  0001b	33 ff		 xor	 edi, edi
  0001d	57		 push	 edi
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00028	8b f1		 mov	 esi, ecx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16

; 12   : 	
; 13   : 
; 14   : 	FILE * file = fopen(ALERT_SYSTEM_DIR,"r");

  00030	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GKMEMBLN@?4?4?2Data?2ZtData?2AlertSystem?4ini?$AA@
  0003a	89 06		 mov	 DWORD PTR [esi], eax
  0003c	e8 00 00 00 00	 call	 _fopen
  00041	83 c4 08	 add	 esp, 8
  00044	89 85 80 fe ff
	ff		 mov	 DWORD PTR _file$[ebp], eax

; 15   : 	if(file == NULL)

  0004a	3b c7		 cmp	 eax, edi
  0004c	75 14		 jne	 SHORT $LN27@Load

; 16   : 	{
; 17   : 		MessageBoxA(0,ALERT_SYSTEM_DIR,"LOAD FILE ERROR",0);

  0004e	57		 push	 edi
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GKMEMBLN@?4?4?2Data?2ZtData?2AlertSystem?4ini?$AA@
  00059	57		 push	 edi
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 18   : 		this->Enable = false;

  00060	89 3e		 mov	 DWORD PTR [esi], edi
$LN27@Load:

; 19   : 	}
; 20   : 
; 21   : 	char Buff[256];
; 22   : 	int Flag = 0;
; 23   : 	this->CountDateMessage = 0;
; 24   : 	this->CountEveryDayMessage = 0;
; 25   : 	this->CountIntervalMessage = 0;
; 26   : 
; 27   : 	this->m_iNoticeID = 0;
; 28   : 	this->m_iNoticeCount = 0;
; 29   : 	this->m_iNotickeTick = 0;
; 30   : 
; 31   : 	for (int i = 0; i < MAX_ALERT_SYSTEM_INTERVAL; i++){this->Interval[i] = 0;}

  00062	33 c0		 xor	 eax, eax
  00064	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00067	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  0006a	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  0006d	89 be 28 13 00
	00		 mov	 DWORD PTR [esi+4904], edi
  00073	89 be 20 13 00
	00		 mov	 DWORD PTR [esi+4896], edi
  00079	89 be 24 13 00
	00		 mov	 DWORD PTR [esi+4900], edi
  0007f	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00082	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00085	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00088	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0008b	89 46 20	 mov	 DWORD PTR [esi+32], eax
  0008e	89 46 24	 mov	 DWORD PTR [esi+36], eax
  00091	89 46 28	 mov	 DWORD PTR [esi+40], eax
  00094	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  00097	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0009a	89 46 34	 mov	 DWORD PTR [esi+52], eax
  0009d	89 46 38	 mov	 DWORD PTR [esi+56], eax
  000a0	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  000a3	89 46 40	 mov	 DWORD PTR [esi+64], eax
  000a6	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000a9	89 46 48	 mov	 DWORD PTR [esi+72], eax
  000ac	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  000af	89 46 50	 mov	 DWORD PTR [esi+80], eax
  000b2	89 46 54	 mov	 DWORD PTR [esi+84], eax
  000b5	89 bd 84 fe ff
	ff		 mov	 DWORD PTR _Flag$[ebp], edi
  000bb	89 46 58	 mov	 DWORD PTR [esi+88], eax
  000be	89 46 5c	 mov	 DWORD PTR [esi+92], eax

; 32   : 
; 33   : 	for (int i = 0; i < MAX_ALERT_SYSTEM_DATE; i++)

  000c1	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  000c4	8d 58 14	 lea	 ebx, DWORD PTR [eax+20]
$LL23@Load:

; 34   : 	{
; 35   : 		this->DateMessage[i].Day = 0;

  000c7	33 c0		 xor	 eax, eax
  000c9	89 47 38	 mov	 DWORD PTR [edi+56], eax

; 36   : 		this->DateMessage[i].Hour = 0;

  000cc	89 47 3c	 mov	 DWORD PTR [edi+60], eax

; 37   : 		ZeroMemory(this->DateMessage[i].Message, strlen(this->DateMessage[i].Message));

  000cf	8b c7		 mov	 eax, edi
  000d1	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL54@Load:
  000d4	8a 08		 mov	 cl, BYTE PTR [eax]
  000d6	40		 inc	 eax
  000d7	84 c9		 test	 cl, cl
  000d9	75 f9		 jne	 SHORT $LL54@Load
  000db	2b c2		 sub	 eax, edx
  000dd	50		 push	 eax
  000de	6a 00		 push	 0
  000e0	57		 push	 edi
  000e1	e8 00 00 00 00	 call	 _memset

; 38   : 		this->DateMessage[i].Minutes = 0;

  000e6	33 c0		 xor	 eax, eax
  000e8	89 47 40	 mov	 DWORD PTR [edi+64], eax

; 39   : 		this->DateMessage[i].Month = 0;		

  000eb	89 47 34	 mov	 DWORD PTR [edi+52], eax
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f1	83 c7 44	 add	 edi, 68			; 00000044H
  000f4	4b		 dec	 ebx
  000f5	75 d0		 jne	 SHORT $LL23@Load

; 40   : 	}
; 41   : 	for (int i = 0; i < MAX_ALERT_SYSTEM_DAY; i++)

  000f7	8d be b0 05 00
	00		 lea	 edi, DWORD PTR [esi+1456]
  000fd	8d 58 14	 lea	 ebx, DWORD PTR [eax+20]
$LL20@Load:

; 42   : 	{
; 43   : 		this->EveryDayMessage[i].Hour = 0;

  00100	33 c0		 xor	 eax, eax
  00102	89 47 34	 mov	 DWORD PTR [edi+52], eax

; 44   : 		this->EveryDayMessage[i].Minutes = 0;

  00105	89 47 38	 mov	 DWORD PTR [edi+56], eax

; 45   : 		ZeroMemory(this->EveryDayMessage[i].Message, strlen(this->EveryDayMessage[i].Message));

  00108	8b c7		 mov	 eax, edi
  0010a	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0010d	8d 49 00	 npad	 3
$LL55@Load:
  00110	8a 08		 mov	 cl, BYTE PTR [eax]
  00112	40		 inc	 eax
  00113	84 c9		 test	 cl, cl
  00115	75 f9		 jne	 SHORT $LL55@Load
  00117	2b c2		 sub	 eax, edx
  00119	50		 push	 eax
  0011a	6a 00		 push	 0
  0011c	57		 push	 edi
  0011d	e8 00 00 00 00	 call	 _memset
  00122	83 c4 0c	 add	 esp, 12			; 0000000cH
  00125	83 c7 3c	 add	 edi, 60			; 0000003cH
  00128	4b		 dec	 ebx
  00129	75 d5		 jne	 SHORT $LL20@Load

; 46   : 	}
; 47   : 	for (int i = 0; i < MAX_ALERT_SYSTEM_INTERVAL; i++)

  0012b	8d be 60 0a 00
	00		 lea	 edi, DWORD PTR [esi+2656]
  00131	bb 14 00 00 00	 mov	 ebx, 20			; 00000014H
  00136	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL17@Load:

; 48   : 	{
; 49   : 		this->IntervalMessage[i].Interval = 0;
; 50   : 		ZeroMemory(this->IntervalMessage[i].Message, strlen(this->IntervalMessage[i].Message));

  00140	8b c7		 mov	 eax, edi
  00142	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0
  00149	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0014c	8d 64 24 00	 npad	 4
$LL56@Load:
  00150	8a 08		 mov	 cl, BYTE PTR [eax]
  00152	40		 inc	 eax
  00153	84 c9		 test	 cl, cl
  00155	75 f9		 jne	 SHORT $LL56@Load
  00157	2b c2		 sub	 eax, edx
  00159	50		 push	 eax
  0015a	6a 00		 push	 0
  0015c	57		 push	 edi
  0015d	e8 00 00 00 00	 call	 _memset
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH
  00165	83 c7 38	 add	 edi, 56			; 00000038H
  00168	4b		 dec	 ebx
  00169	75 d5		 jne	 SHORT $LL17@Load

; 51   : 	}
; 52   : 	for (int i = 0; i < MAX_ALERT_SYSTEM_INTERVAL; i++)

  0016b	8d be c0 0e 00
	00		 lea	 edi, DWORD PTR [esi+3776]
  00171	bb 14 00 00 00	 mov	 ebx, 20			; 00000014H
  00176	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL14@Load:

; 53   : 	{
; 54   : 		this->NoticeMessage[i].Interval = 0;
; 55   : 		ZeroMemory(this->NoticeMessage[i].Message, strlen(this->NoticeMessage[i].Message));

  00180	8b c7		 mov	 eax, edi
  00182	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0
  00189	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0018c	8d 64 24 00	 npad	 4
$LL57@Load:
  00190	8a 08		 mov	 cl, BYTE PTR [eax]
  00192	40		 inc	 eax
  00193	84 c9		 test	 cl, cl
  00195	75 f9		 jne	 SHORT $LL57@Load
  00197	2b c2		 sub	 eax, edx
  00199	50		 push	 eax
  0019a	6a 00		 push	 0
  0019c	57		 push	 edi
  0019d	e8 00 00 00 00	 call	 _memset
  001a2	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a5	83 c7 38	 add	 edi, 56			; 00000038H
  001a8	4b		 dec	 ebx
  001a9	75 d5		 jne	 SHORT $LL14@Load

; 56   : 	}
; 57   : 
; 58   : 	while(!feof(file))

  001ab	8b bd 80 fe ff
	ff		 mov	 edi, DWORD PTR _file$[ebp]
  001b1	57		 push	 edi
  001b2	e8 00 00 00 00	 call	 _feof
  001b7	83 c4 04	 add	 esp, 4
  001ba	85 c0		 test	 eax, eax
  001bc	0f 85 aa 02 00
	00		 jne	 $LN60@Load
$LL11@Load:

; 59   : 	{
; 60   : 		fgets(Buff,256,file);

  001c2	57		 push	 edi
  001c3	8d 85 98 fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  001c9	68 00 01 00 00	 push	 256			; 00000100H
  001ce	50		 push	 eax
  001cf	e8 00 00 00 00	 call	 _fgets

; 61   : 		if(Zt_IsBadFileLine(Buff, Flag))

  001d4	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _Flag$[ebp]
  001da	51		 push	 ecx
  001db	8d 95 98 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  001e1	52		 push	 edx
  001e2	e8 00 00 00 00	 call	 ?Zt_IsBadFileLine@@YA_NPADAAH@Z ; Zt_IsBadFileLine
  001e7	83 c4 14	 add	 esp, 20			; 00000014H
  001ea	84 c0		 test	 al, al
  001ec	0f 85 63 02 00
	00		 jne	 $LN59@Load

; 62   : 			continue;
; 63   : 		if(Flag == 1)

  001f2	bf 01 00 00 00	 mov	 edi, 1

; 64   : 		{
; 65   : 			if(this->CountDateMessage == MAX_ALERT_SYSTEM_DATE) break;

  001f7	8d 5f 13	 lea	 ebx, DWORD PTR [edi+19]
  001fa	39 bd 84 fe ff
	ff		 cmp	 DWORD PTR _Flag$[ebp], edi
  00200	0f 85 b9 00 00
	00		 jne	 $LN8@Load
  00206	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  00209	0f 84 5d 02 00
	00		 je	 $LN60@Load

; 66   : 			int n[4];
; 67   : 			char str[100];
; 68   : 			sscanf(Buff, "%d %d %d %d \"%[^\"]\"", &n[0], &n[1], &n[2], &n[3], &str);

  0020f	8d 45 98	 lea	 eax, DWORD PTR _str$187732[ebp]
  00212	50		 push	 eax
  00213	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _n$187731[ebp+12]
  00219	51		 push	 ecx
  0021a	8d 95 90 fe ff
	ff		 lea	 edx, DWORD PTR _n$187731[ebp+8]
  00220	52		 push	 edx
  00221	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR _n$187731[ebp+4]
  00227	50		 push	 eax
  00228	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR _n$187731[ebp]
  0022e	51		 push	 ecx
  0022f	8d 95 98 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00235	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JNJNPECB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
  0023a	52		 push	 edx
  0023b	e8 00 00 00 00	 call	 _sscanf

; 69   : 			this->DateMessage[this->CountDateMessage].Month = n[0];

  00240	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00243	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _n$187731[ebp]
  00249	8b c8		 mov	 ecx, eax
  0024b	c1 e1 04	 shl	 ecx, 4
  0024e	03 c8		 add	 ecx, eax
  00250	89 94 8e 94 00
	00 00		 mov	 DWORD PTR [esi+ecx*4+148], edx

; 70   : 			this->DateMessage[this->CountDateMessage].Day = n[1];

  00257	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0025a	8b 95 8c fe ff
	ff		 mov	 edx, DWORD PTR _n$187731[ebp+4]
  00260	8b c8		 mov	 ecx, eax
  00262	c1 e1 04	 shl	 ecx, 4
  00265	03 c8		 add	 ecx, eax
  00267	89 94 8e 98 00
	00 00		 mov	 DWORD PTR [esi+ecx*4+152], edx

; 71   : 			this->DateMessage[this->CountDateMessage].Hour = n[2];

  0026e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00271	8b 95 90 fe ff
	ff		 mov	 edx, DWORD PTR _n$187731[ebp+8]
  00277	8b c8		 mov	 ecx, eax
  00279	c1 e1 04	 shl	 ecx, 4
  0027c	03 c8		 add	 ecx, eax
  0027e	89 94 8e 9c 00
	00 00		 mov	 DWORD PTR [esi+ecx*4+156], edx

; 72   : 			this->DateMessage[this->CountDateMessage].Minutes = n[3];

  00285	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00288	8b 95 94 fe ff
	ff		 mov	 edx, DWORD PTR _n$187731[ebp+12]
  0028e	8b c8		 mov	 ecx, eax
  00290	c1 e1 04	 shl	 ecx, 4
  00293	03 c8		 add	 ecx, eax
  00295	89 94 8e a0 00
	00 00		 mov	 DWORD PTR [esi+ecx*4+160], edx

; 73   : 			strcpy(DateMessage[this->CountDateMessage].Message,str);

  0029c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0029f	8b d0		 mov	 edx, eax
  002a1	c1 e2 04	 shl	 edx, 4
  002a4	83 c4 1c	 add	 esp, 28			; 0000001cH
  002a7	03 d0		 add	 edx, eax
  002a9	8d 4d 98	 lea	 ecx, DWORD PTR _str$187732[ebp]
  002ac	8d 54 96 60	 lea	 edx, DWORD PTR [esi+edx*4+96]
$LL30@Load:
  002b0	8a 01		 mov	 al, BYTE PTR [ecx]
  002b2	88 02		 mov	 BYTE PTR [edx], al
  002b4	03 cf		 add	 ecx, edi
  002b6	03 d7		 add	 edx, edi
  002b8	84 c0		 test	 al, al
  002ba	75 f4		 jne	 SHORT $LL30@Load

; 74   : 			this->CountDateMessage++;

  002bc	01 7e 04	 add	 DWORD PTR [esi+4], edi
$LN8@Load:

; 75   : 		}
; 76   : 		if(Flag == 2)

  002bf	83 bd 84 fe ff
	ff 02		 cmp	 DWORD PTR _Flag$[ebp], 2
  002c6	0f 85 83 00 00
	00		 jne	 $LN6@Load

; 77   : 		{
; 78   : 			if(this->CountDateMessage == MAX_ALERT_SYSTEM_DAY) break;

  002cc	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  002cf	0f 84 97 01 00
	00		 je	 $LN60@Load

; 79   : 			int n[2];
; 80   : 			char str[100];
; 81   : 			sscanf(Buff, "%d %d \"%[^\"]\"", &n[0], &n[1], &str);

  002d5	8d 45 98	 lea	 eax, DWORD PTR _str$187737[ebp]
  002d8	50		 push	 eax
  002d9	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _n$187736[ebp+4]
  002df	51		 push	 ecx
  002e0	8d 95 74 fe ff
	ff		 lea	 edx, DWORD PTR _n$187736[ebp]
  002e6	52		 push	 edx
  002e7	8d 85 98 fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  002ed	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BCJPJIHJ@?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
  002f2	50		 push	 eax
  002f3	e8 00 00 00 00	 call	 _sscanf

; 82   : 			this->EveryDayMessage[this->CountEveryDayMessage].Hour = n[0];

  002f8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  002fb	8b 95 74 fe ff
	ff		 mov	 edx, DWORD PTR _n$187736[ebp]
  00301	8b c8		 mov	 ecx, eax
  00303	c1 e1 04	 shl	 ecx, 4
  00306	2b c8		 sub	 ecx, eax
  00308	89 94 8e e4 05
	00 00		 mov	 DWORD PTR [esi+ecx*4+1508], edx

; 83   : 			this->EveryDayMessage[this->CountEveryDayMessage].Minutes = n[1];

  0030f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00312	8b 95 78 fe ff
	ff		 mov	 edx, DWORD PTR _n$187736[ebp+4]
  00318	8b c8		 mov	 ecx, eax
  0031a	c1 e1 04	 shl	 ecx, 4
  0031d	2b c8		 sub	 ecx, eax
  0031f	89 94 8e e8 05
	00 00		 mov	 DWORD PTR [esi+ecx*4+1512], edx

; 84   : 			strcpy(EveryDayMessage[this->CountEveryDayMessage].Message,str);

  00326	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00329	8b d0		 mov	 edx, eax
  0032b	c1 e2 04	 shl	 edx, 4
  0032e	83 c4 14	 add	 esp, 20			; 00000014H
  00331	2b d0		 sub	 edx, eax
  00333	8d 4d 98	 lea	 ecx, DWORD PTR _str$187737[ebp]
  00336	8d 94 96 b0 05
	00 00		 lea	 edx, DWORD PTR [esi+edx*4+1456]
  0033d	8d 49 00	 npad	 3
$LL31@Load:
  00340	8a 01		 mov	 al, BYTE PTR [ecx]
  00342	88 02		 mov	 BYTE PTR [edx], al
  00344	03 cf		 add	 ecx, edi
  00346	03 d7		 add	 edx, edi
  00348	84 c0		 test	 al, al
  0034a	75 f4		 jne	 SHORT $LL31@Load

; 85   : 			this->CountEveryDayMessage++;

  0034c	01 7e 08	 add	 DWORD PTR [esi+8], edi
$LN6@Load:

; 86   : 		}
; 87   : 		if(Flag == 3)

  0034f	83 bd 84 fe ff
	ff 03		 cmp	 DWORD PTR _Flag$[ebp], 3
  00356	75 77		 jne	 SHORT $LN4@Load

; 88   : 		{
; 89   : 			if(this->CountDateMessage == MAX_ALERT_SYSTEM_INTERVAL) break;

  00358	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  0035b	0f 84 0b 01 00
	00		 je	 $LN60@Load

; 90   : 			int n;
; 91   : 			char str[100];
; 92   : 			sscanf(Buff, "%d \"%[^\"]\"", &n, &str);

  00361	8d 45 98	 lea	 eax, DWORD PTR _str$187742[ebp]
  00364	50		 push	 eax
  00365	8d 8d 70 fe ff
	ff		 lea	 ecx, DWORD PTR _n$187741[ebp]
  0036b	51		 push	 ecx
  0036c	8d 95 98 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00372	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DHBPCNNH@?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
  00377	52		 push	 edx
  00378	e8 00 00 00 00	 call	 _sscanf

; 93   : 			this->IntervalMessage[this->CountIntervalMessage].Interval = n * 60;

  0037d	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _n$187741[ebp]
  00383	8b c8		 mov	 ecx, eax
  00385	c1 e1 04	 shl	 ecx, 4
  00388	2b c8		 sub	 ecx, eax
  0038a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0038d	03 c9		 add	 ecx, ecx
  0038f	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00396	2b d0		 sub	 edx, eax
  00398	03 c9		 add	 ecx, ecx
  0039a	89 8c d6 94 0a
	00 00		 mov	 DWORD PTR [esi+edx*8+2708], ecx

; 94   : 			strcpy(IntervalMessage[this->CountIntervalMessage].Message,str);

  003a1	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  003a4	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  003ab	83 c4 10	 add	 esp, 16			; 00000010H
  003ae	2b d0		 sub	 edx, eax
  003b0	8d 4d 98	 lea	 ecx, DWORD PTR _str$187742[ebp]
  003b3	8d 94 d6 60 0a
	00 00		 lea	 edx, DWORD PTR [esi+edx*8+2656]
  003ba	8d 9b 00 00 00
	00		 npad	 6
$LL32@Load:
  003c0	8a 01		 mov	 al, BYTE PTR [ecx]
  003c2	88 02		 mov	 BYTE PTR [edx], al
  003c4	03 cf		 add	 ecx, edi
  003c6	03 d7		 add	 edx, edi
  003c8	84 c0		 test	 al, al
  003ca	75 f4		 jne	 SHORT $LL32@Load

; 95   : 			this->CountIntervalMessage++;

  003cc	01 7e 0c	 add	 DWORD PTR [esi+12], edi
$LN4@Load:

; 96   : 		}
; 97   : 
; 98   : 		//this->m_iNextNoticeTime = 0;
; 99   : 
; 100  : 		if(Flag == 4)

  003cf	83 bd 84 fe ff
	ff 04		 cmp	 DWORD PTR _Flag$[ebp], 4
  003d6	75 7d		 jne	 SHORT $LN59@Load

; 101  : 		{
; 102  : 			if(this->m_iNoticeCount == MAX_ALERT_SYSTEM_INTERVAL) break;

  003d8	39 9e 20 13 00
	00		 cmp	 DWORD PTR [esi+4896], ebx
  003de	0f 84 88 00 00
	00		 je	 $LN60@Load

; 103  : 			int n;
; 104  : 			char str[100];
; 105  : 			sscanf(Buff, "%d \"%[^\"]\"", &n, &str);

  003e4	8d 45 98	 lea	 eax, DWORD PTR _str$187747[ebp]
  003e7	50		 push	 eax
  003e8	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _n$187746[ebp]
  003ee	51		 push	 ecx
  003ef	8d 95 98 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  003f5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DHBPCNNH@?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
  003fa	52		 push	 edx
  003fb	e8 00 00 00 00	 call	 _sscanf

; 106  : 			this->NoticeMessage[this->m_iNoticeCount].Interval = n * 60;

  00400	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _n$187746[ebp]
  00406	8b c8		 mov	 ecx, eax
  00408	c1 e1 04	 shl	 ecx, 4
  0040b	2b c8		 sub	 ecx, eax
  0040d	8b 86 20 13 00
	00		 mov	 eax, DWORD PTR [esi+4896]
  00413	03 c9		 add	 ecx, ecx
  00415	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0041c	2b d0		 sub	 edx, eax
  0041e	03 c9		 add	 ecx, ecx
  00420	89 8c d6 f4 0e
	00 00		 mov	 DWORD PTR [esi+edx*8+3828], ecx

; 107  : 			strcpy(NoticeMessage[this->m_iNoticeCount].Message,str);

  00427	8b 86 20 13 00
	00		 mov	 eax, DWORD PTR [esi+4896]
  0042d	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00434	83 c4 10	 add	 esp, 16			; 00000010H
  00437	2b d0		 sub	 edx, eax
  00439	8d 4d 98	 lea	 ecx, DWORD PTR _str$187747[ebp]
  0043c	8d 94 d6 c0 0e
	00 00		 lea	 edx, DWORD PTR [esi+edx*8+3776]
$LL33@Load:
  00443	8a 01		 mov	 al, BYTE PTR [ecx]
  00445	88 02		 mov	 BYTE PTR [edx], al
  00447	03 cf		 add	 ecx, edi
  00449	03 d7		 add	 edx, edi
  0044b	84 c0		 test	 al, al
  0044d	75 f4		 jne	 SHORT $LL33@Load

; 108  : 			this->m_iNoticeCount++;

  0044f	01 be 20 13 00
	00		 add	 DWORD PTR [esi+4896], edi
$LN59@Load:

; 56   : 	}
; 57   : 
; 58   : 	while(!feof(file))

  00455	8b bd 80 fe ff
	ff		 mov	 edi, DWORD PTR _file$[ebp]
  0045b	57		 push	 edi
  0045c	e8 00 00 00 00	 call	 _feof
  00461	83 c4 04	 add	 esp, 4
  00464	85 c0		 test	 eax, eax
  00466	0f 84 56 fd ff
	ff		 je	 $LL11@Load
$LN60@Load:

; 109  : 		}
; 110  : 
; 111  : 	}
; 112  : 	fclose(file);

  0046c	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _file$[ebp]
  00472	50		 push	 eax
  00473	e8 00 00 00 00	 call	 _fclose

; 113  : }

  00478	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0047b	83 c4 04	 add	 esp, 4
  0047e	5f		 pop	 edi
  0047f	5e		 pop	 esi
  00480	33 cd		 xor	 ecx, ebp
  00482	5b		 pop	 ebx
  00483	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00488	8b e5		 mov	 esp, ebp
  0048a	5d		 pop	 ebp
  0048b	c3		 ret	 0
?Load@cAlertSystem@@QAEXXZ ENDP				; cAlertSystem::Load
_TEXT	ENDS
PUBLIC	?PlayMessage@cAlertSystem@@QAEXHH@Z		; cAlertSystem::PlayMessage
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
; Function compile flags: /Ogtp
;	COMDAT ?PlayMessage@cAlertSystem@@QAEXHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_type$ = 12						; size = 4
?PlayMessage@cAlertSystem@@QAEXHH@Z PROC		; cAlertSystem::PlayMessage, COMDAT
; _this$ = ecx

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 116  : 	switch (type)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00006	83 f8 03	 cmp	 eax, 3
  00009	77 7c		 ja	 SHORT $LN5@PlayMessag
  0000b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@PlayMessag[eax*4]
$LN4@PlayMessag:

; 117  : 	{
; 118  : 	case DateAlert:
; 119  : 		MessaageAllGlobal(this->DateMessage[id].Message);

  00012	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00015	8b d0		 mov	 edx, eax
  00017	c1 e2 04	 shl	 edx, 4
  0001a	03 d0		 add	 edx, eax
  0001c	8d 44 91 60	 lea	 eax, DWORD PTR [ecx+edx*4+96]

; 126  : 		break;
; 127  : 	case NoticeAlert:
; 128  : 		MessaageAllGlobal(this->NoticeMessage[id].Message);

  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00026	83 c4 04	 add	 esp, 4

; 129  : 		break;
; 130  : 	}
; 131  : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
$LN3@PlayMessag:

; 120  : 		break;
; 121  : 	case EveryDayAlert:
; 122  : 		MessaageAllGlobal(this->EveryDayMessage[id].Message);

  0002d	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00030	8b d0		 mov	 edx, eax
  00032	c1 e2 04	 shl	 edx, 4
  00035	2b d0		 sub	 edx, eax
  00037	8d 84 91 b0 05
	00 00		 lea	 eax, DWORD PTR [ecx+edx*4+1456]

; 126  : 		break;
; 127  : 	case NoticeAlert:
; 128  : 		MessaageAllGlobal(this->NoticeMessage[id].Message);

  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00044	83 c4 04	 add	 esp, 4

; 129  : 		break;
; 130  : 	}
; 131  : }

  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
$LN2@PlayMessag:

; 123  : 		break;
; 124  : 	case IntervalAlert:
; 125  : 		MessaageAllGlobal(this->IntervalMessage[id].Message);

  0004b	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0004e	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00055	2b d0		 sub	 edx, eax
  00057	8d 84 d1 60 0a
	00 00		 lea	 eax, DWORD PTR [ecx+edx*8+2656]

; 126  : 		break;
; 127  : 	case NoticeAlert:
; 128  : 		MessaageAllGlobal(this->NoticeMessage[id].Message);

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00064	83 c4 04	 add	 esp, 4

; 129  : 		break;
; 130  : 	}
; 131  : }

  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
$LN1@PlayMessag:

; 126  : 		break;
; 127  : 	case NoticeAlert:
; 128  : 		MessaageAllGlobal(this->NoticeMessage[id].Message);

  0006b	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0006e	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00075	2b d0		 sub	 edx, eax
  00077	8d 84 d1 c0 0e
	00 00		 lea	 eax, DWORD PTR [ecx+edx*8+3776]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00084	83 c4 04	 add	 esp, 4
$LN5@PlayMessag:

; 129  : 		break;
; 130  : 	}
; 131  : }

  00087	5d		 pop	 ebp
  00088	c2 08 00	 ret	 8
  0008b	90		 npad	 1
$LN10@PlayMessag:
  0008c	00 00 00 00	 DD	 $LN4@PlayMessag
  00090	00 00 00 00	 DD	 $LN3@PlayMessag
  00094	00 00 00 00	 DD	 $LN2@PlayMessag
  00098	00 00 00 00	 DD	 $LN1@PlayMessag
?PlayMessage@cAlertSystem@@QAEXHH@Z ENDP		; cAlertSystem::PlayMessage
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?TickTime@cAlertSystem@@QAEXXZ			; cAlertSystem::TickTime
EXTRN	?GetSecond@CTimerZt@@QAEHXZ:PROC		; CTimerZt::GetSecond
EXTRN	?g_TimerZt@@3VCTimerZt@@A:DWORD			; g_TimerZt
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?TickTime@cAlertSystem@@QAEXXZ
_TEXT	SEGMENT
tv596 = -24						; size = 4
_t$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?TickTime@cAlertSystem@@QAEXXZ PROC			; cAlertSystem::TickTime, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 134  : 	if (!this->Enable) return;

  00013	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00016	0f 84 45 01 00
	00		 je	 $LN2@TickTime

; 135  : 	SYSTEMTIME t;
; 136  : 	GetLocalTime(&t);

  0001c	53		 push	 ebx
  0001d	57		 push	 edi
  0001e	8d 45 ec	 lea	 eax, DWORD PTR _t$[ebp]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 137  : 	int i;
; 138  : 	for (i = 0; i < this->CountDateMessage; i++)

  00028	33 ff		 xor	 edi, edi
  0002a	39 7e 04	 cmp	 DWORD PTR [esi+4], edi
  0002d	7e 49		 jle	 SHORT $LN27@TickTime

; 135  : 	SYSTEMTIME t;
; 136  : 	GetLocalTime(&t);

  0002f	8d 9e 94 00 00
	00		 lea	 ebx, DWORD PTR [esi+148]
$LL16@TickTime:

; 139  : 	{
; 140  : 		if(t.wDay == this->DateMessage[i].Day && t.wMonth == this->DateMessage[i].Month && t.wHour == this->DateMessage[i].Hour && t.wMinute == this->DateMessage[i].Minutes && 		
; 141  : #if(NEWTIMEREX)
; 142  : 			g_TimerZt.GetSecond() == 00)

  00035	0f b7 4d f2	 movzx	 ecx, WORD PTR _t$[ebp+6]
  00039	3b 4b 04	 cmp	 ecx, DWORD PTR [ebx+4]
  0003c	75 31		 jne	 SHORT $LN15@TickTime
  0003e	0f b7 55 ee	 movzx	 edx, WORD PTR _t$[ebp+2]
  00042	3b 13		 cmp	 edx, DWORD PTR [ebx]
  00044	75 29		 jne	 SHORT $LN15@TickTime
  00046	0f b7 45 f4	 movzx	 eax, WORD PTR _t$[ebp+8]
  0004a	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  0004d	75 20		 jne	 SHORT $LN15@TickTime
  0004f	0f b7 4d f6	 movzx	 ecx, WORD PTR _t$[ebp+10]
  00053	3b 4b 0c	 cmp	 ecx, DWORD PTR [ebx+12]
  00056	75 17		 jne	 SHORT $LN15@TickTime
  00058	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerZt@@3VCTimerZt@@A ; g_TimerZt
  0005d	e8 00 00 00 00	 call	 ?GetSecond@CTimerZt@@QAEHXZ ; CTimerZt::GetSecond
  00062	85 c0		 test	 eax, eax
  00064	75 09		 jne	 SHORT $LN15@TickTime

; 143  : #else		
; 144  : 			t.wSecond == 00)
; 145  : #endif
; 146  : 		{
; 147  : 				this->PlayMessage(i,DateAlert);

  00066	50		 push	 eax
  00067	57		 push	 edi
  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?PlayMessage@cAlertSystem@@QAEXHH@Z ; cAlertSystem::PlayMessage
$LN15@TickTime:

; 137  : 	int i;
; 138  : 	for (i = 0; i < this->CountDateMessage; i++)

  0006f	47		 inc	 edi
  00070	83 c3 44	 add	 ebx, 68			; 00000044H
  00073	3b 7e 04	 cmp	 edi, DWORD PTR [esi+4]
  00076	7c bd		 jl	 SHORT $LL16@TickTime
$LN27@TickTime:

; 148  : 		}
; 149  : 	}
; 150  : 	for (i = 0; i < this->CountEveryDayMessage; i++)

  00078	33 ff		 xor	 edi, edi
  0007a	39 7e 08	 cmp	 DWORD PTR [esi+8], edi
  0007d	7e 38		 jle	 SHORT $LN10@TickTime
  0007f	8d 9e e8 05 00
	00		 lea	 ebx, DWORD PTR [esi+1512]
$LL12@TickTime:

; 151  : 	{
; 152  : 		if( t.wHour == this->EveryDayMessage[i].Hour && t.wMinute == this->EveryDayMessage[i].Minutes &&
; 153  : #if(NEWTIMEREX)
; 154  : 			g_TimerZt.GetSecond() == 00)

  00085	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  00089	3b 53 fc	 cmp	 edx, DWORD PTR [ebx-4]
  0008c	75 20		 jne	 SHORT $LN11@TickTime
  0008e	0f b7 45 f6	 movzx	 eax, WORD PTR _t$[ebp+10]
  00092	3b 03		 cmp	 eax, DWORD PTR [ebx]
  00094	75 18		 jne	 SHORT $LN11@TickTime
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerZt@@3VCTimerZt@@A ; g_TimerZt
  0009b	e8 00 00 00 00	 call	 ?GetSecond@CTimerZt@@QAEHXZ ; CTimerZt::GetSecond
  000a0	85 c0		 test	 eax, eax
  000a2	75 0a		 jne	 SHORT $LN11@TickTime

; 155  : #else		
; 156  : 			t.wSecond == 00)
; 157  : #endif
; 158  : 		{
; 159  : 				this->PlayMessage(i,EveryDayAlert);

  000a4	6a 01		 push	 1
  000a6	57		 push	 edi
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?PlayMessage@cAlertSystem@@QAEXHH@Z ; cAlertSystem::PlayMessage
$LN11@TickTime:

; 148  : 		}
; 149  : 	}
; 150  : 	for (i = 0; i < this->CountEveryDayMessage; i++)

  000ae	47		 inc	 edi
  000af	83 c3 3c	 add	 ebx, 60			; 0000003cH
  000b2	3b 7e 08	 cmp	 edi, DWORD PTR [esi+8]
  000b5	7c ce		 jl	 SHORT $LL12@TickTime
$LN10@TickTime:

; 160  : 		}
; 161  : 	}
; 162  : 	for (i = 0; i < this->CountIntervalMessage; i++)

  000b7	33 db		 xor	 ebx, ebx
  000b9	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  000bc	7e 3d		 jle	 SHORT $LN6@TickTime
  000be	8d 8e 94 0a 00
	00		 lea	 ecx, DWORD PTR [esi+2708]
  000c4	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  000c7	89 4d e8	 mov	 DWORD PTR tv596[ebp], ecx
  000ca	8d 9b 00 00 00
	00		 npad	 6
$LL8@TickTime:

; 163  : 	{
; 164  : 		if(this->IntervalMessage[i].Interval <= this->Interval[i])

  000d0	8b 07		 mov	 eax, DWORD PTR [edi]
  000d2	8b 55 e8	 mov	 edx, DWORD PTR tv596[ebp]
  000d5	39 02		 cmp	 DWORD PTR [edx], eax
  000d7	7f 12		 jg	 SHORT $LN5@TickTime

; 165  : 		{
; 166  : 				this->PlayMessage(i,IntervalAlert);

  000d9	6a 02		 push	 2
  000db	53		 push	 ebx
  000dc	8b ce		 mov	 ecx, esi
  000de	e8 00 00 00 00	 call	 ?PlayMessage@cAlertSystem@@QAEXHH@Z ; cAlertSystem::PlayMessage

; 167  : 				this->Interval[i] = 0;

  000e3	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 168  : 		}
; 169  : 		else

  000e9	eb 03		 jmp	 SHORT $LN7@TickTime
$LN5@TickTime:

; 170  : 		{
; 171  : 			this->Interval[i]++;

  000eb	40		 inc	 eax
  000ec	89 07		 mov	 DWORD PTR [edi], eax
$LN7@TickTime:

; 160  : 		}
; 161  : 	}
; 162  : 	for (i = 0; i < this->CountIntervalMessage; i++)

  000ee	83 45 e8 38	 add	 DWORD PTR tv596[ebp], 56 ; 00000038H
  000f2	43		 inc	 ebx
  000f3	83 c7 04	 add	 edi, 4
  000f6	3b 5e 0c	 cmp	 ebx, DWORD PTR [esi+12]
  000f9	7c d5		 jl	 SHORT $LL8@TickTime
$LN6@TickTime:

; 172  : 		}
; 173  : 	}
; 174  : 
; 175  : 	if(this->m_iNoticeCount > 0)

  000fb	83 be 20 13 00
	00 00		 cmp	 DWORD PTR [esi+4896], 0
  00102	7e 5b		 jle	 SHORT $LN31@TickTime

; 176  : 	{
; 177  : 		this->m_iNotickeTick++;
; 178  : 		if(this->m_iNotickeTick > this->NoticeMessage[this->m_iNoticeID].Interval)

  00104	8b 86 28 13 00
	00		 mov	 eax, DWORD PTR [esi+4904]
  0010a	bf 01 00 00 00	 mov	 edi, 1
  0010f	01 be 24 13 00
	00		 add	 DWORD PTR [esi+4900], edi
  00115	8b 8e 24 13 00
	00		 mov	 ecx, DWORD PTR [esi+4900]
  0011b	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00122	2b d0		 sub	 edx, eax
  00124	3b 8c d6 f4 0e
	00 00		 cmp	 ecx, DWORD PTR [esi+edx*8+3828]
  0012b	7e 32		 jle	 SHORT $LN31@TickTime

; 179  : 		{
; 180  : 			this->PlayMessage(this->m_iNoticeID, NoticeAlert);

  0012d	6a 03		 push	 3
  0012f	50		 push	 eax
  00130	8b ce		 mov	 ecx, esi
  00132	e8 00 00 00 00	 call	 ?PlayMessage@cAlertSystem@@QAEXHH@Z ; cAlertSystem::PlayMessage

; 181  : 
; 182  : 			this->m_iNoticeID++;

  00137	01 be 28 13 00
	00		 add	 DWORD PTR [esi+4904], edi
  0013d	8b 86 28 13 00
	00		 mov	 eax, DWORD PTR [esi+4904]

; 183  : 			if(this->m_iNoticeID >= this->m_iNoticeCount)

  00143	3b 86 20 13 00
	00		 cmp	 eax, DWORD PTR [esi+4896]
  00149	7c 0a		 jl	 SHORT $LN30@TickTime

; 184  : 			{
; 185  : 				this->m_iNoticeID = 0;

  0014b	c7 86 28 13 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+4904], 0
$LN30@TickTime:

; 186  : 			}
; 187  : 
; 188  : 			this->m_iNotickeTick = 0;

  00155	c7 86 24 13 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+4900], 0
$LN31@TickTime:
  0015f	5f		 pop	 edi
  00160	5b		 pop	 ebx
$LN2@TickTime:

; 189  : 		}
; 190  : 	}
; 191  : }

  00161	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00164	33 cd		 xor	 ecx, ebp
  00166	5e		 pop	 esi
  00167	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c3		 ret	 0
?TickTime@cAlertSystem@@QAEXXZ ENDP			; cAlertSystem::TickTime
_TEXT	ENDS
END
