; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\BuffManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CBuffManager@@6B@				; CBuffManager::`vftable'
PUBLIC	??0CBuffManager@@QAE@XZ				; CBuffManager::CBuffManager
PUBLIC	??_R4CBuffManager@@6B@				; CBuffManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBuffManager@@@8			; CBuffManager `RTTI Type Descriptor'
PUBLIC	??_R3CBuffManager@@8				; CBuffManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBuffManager@@8				; CBuffManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBuffManager@@8			; CBuffManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECBuffManager@@UAEPAXI@Z:PROC		; CBuffManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CBuffManager@@8
; File e:\work\tranet_version\gs\gameserver\buffmanager.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CBuffManager@@8 DD FLAT:??_R0?AVCBuffManager@@@8 ; CBuffManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBuffManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CBuffManager@@8
rdata$r	SEGMENT
??_R2CBuffManager@@8 DD FLAT:??_R1A@?0A@EA@CBuffManager@@8 ; CBuffManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBuffManager@@8
rdata$r	SEGMENT
??_R3CBuffManager@@8 DD 00H				; CBuffManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBuffManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBuffManager@@@8
_DATA	SEGMENT
??_R0?AVCBuffManager@@@8 DD FLAT:??_7type_info@@6B@	; CBuffManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBuffManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBuffManager@@6B@
rdata$r	SEGMENT
??_R4CBuffManager@@6B@ DD 00H				; CBuffManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBuffManager@@@8
	DD	FLAT:??_R3CBuffManager@@8
rdata$r	ENDS
;	COMDAT ??_7CBuffManager@@6B@
CONST	SEGMENT
??_7CBuffManager@@6B@ DD FLAT:??_R4CBuffManager@@6B@	; CBuffManager::`vftable'
	DD	FLAT:??_ECBuffManager@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CBuffManager@@QAE@XZ
_TEXT	SEGMENT
??0CBuffManager@@QAE@XZ PROC				; CBuffManager::CBuffManager, COMDAT
; _this$ = ecx

; 21   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBuffManager@@6B@

; 22   : 
; 23   : }

  00008	c3		 ret	 0
??0CBuffManager@@QAE@XZ ENDP				; CBuffManager::CBuffManager
_TEXT	ENDS
PUBLIC	??1CBuffManager@@UAE@XZ				; CBuffManager::~CBuffManager
; Function compile flags: /Ogtp
;	COMDAT ??1CBuffManager@@UAE@XZ
_TEXT	SEGMENT
??1CBuffManager@@UAE@XZ PROC				; CBuffManager::~CBuffManager, COMDAT
; _this$ = ecx

; 26   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBuffManager@@6B@

; 27   : 
; 28   : }

  00006	c3		 ret	 0
??1CBuffManager@@UAE@XZ ENDP				; CBuffManager::~CBuffManager
_TEXT	ENDS
PUBLIC	?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
EXTRN	?RemoveBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CViewportSkillState::RemoveBuffEffect
EXTRN	?g_ViewportSkillState@@3VCViewportSkillState@@A:DWORD ; g_ViewportSkillState
EXTRN	?IsValidIndex@CBuffEffect@@QAE_NE@Z:PROC	; CBuffEffect::IsValidIndex
EXTRN	?g_BuffEffect@@3VCBuffEffect@@A:BYTE		; g_BuffEffect
; Function compile flags: /Ogtp
;	COMDAT ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_btResult$ = -1						; size = 1
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::ClearEffect, COMDAT
; _this$ = ecx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 120  : 	BYTE btResult = 0;
; 121  : 
; 122  : 	if(lpObj == NULL)

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00008	c6 45 ff 00	 mov	 BYTE PTR _btResult$[ebp], 0
  0000c	85 ff		 test	 edi, edi
  0000e	75 09		 jne	 SHORT $LN9@ClearEffec
$LN14@ClearEffec:

; 123  : 	{
; 124  : 		return 0;

  00010	32 c0		 xor	 al, al
  00012	5f		 pop	 edi

; 158  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
$LN9@ClearEffec:

; 125  : 	}
; 126  : 	
; 127  : 	if(lpObj->Connected < PLAYER_PLAYING)

  00019	83 7f 04 03	 cmp	 DWORD PTR [edi+4], 3

; 128  : 	{
; 129  : 		return 0;

  0001d	7c f1		 jl	 SHORT $LN14@ClearEffec

; 130  : 	}
; 131  : 
; 132  : 	if(g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE)

  0001f	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00022	50		 push	 eax
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00028	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  0002d	84 c0		 test	 al, al

; 133  : 	{
; 134  : 		return 0;

  0002f	74 df		 je	 SHORT $LN14@ClearEffec

; 135  : 	}
; 136  : 
; 137  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00031	53		 push	 ebx
  00032	56		 push	 esi
  00033	33 db		 xor	 ebx, ebx
  00035	8d b7 28 02 00
	00		 lea	 esi, DWORD PTR [edi+552]
  0003b	eb 03 8d 49 00	 npad	 5
$LL6@ClearEffec:

; 138  : 	{
; 139  : 		if(btResult == 1)

  00040	80 7d ff 01	 cmp	 BYTE PTR _btResult$[ebp], 1
  00044	75 36		 jne	 SHORT $LN2@ClearEffec

; 140  : 		{
; 141  : 			if( (lpObj->m_BuffEffectState[i].btBuffIndex != 0) && (i > 0) )

  00046	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00049	74 31		 je	 SHORT $LN2@ClearEffec
  0004b	85 db		 test	 ebx, ebx
  0004d	7e 2d		 jle	 SHORT $LN2@ClearEffec

; 142  : 			{
; 143  : 				memcpy(&lpObj->m_BuffEffectState[i-1],&lpObj->m_BuffEffectState[i],sizeof(lpObj->m_BuffEffectState[i])); //Change the Buff Slot to the removed one...

  0004f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00051	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00054	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00057	89 4e ec	 mov	 DWORD PTR [esi-20], ecx
  0005a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005d	89 56 f0	 mov	 DWORD PTR [esi-16], edx
  00060	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00063	89 46 f4	 mov	 DWORD PTR [esi-12], eax
  00066	89 4e f8	 mov	 DWORD PTR [esi-8], ecx

; 144  : 				memset(&lpObj->m_BuffEffectState[i],0,sizeof(lpObj->m_BuffEffectState[i]));

  00069	33 c0		 xor	 eax, eax
  0006b	89 56 fc	 mov	 DWORD PTR [esi-4], edx
  0006e	89 06		 mov	 DWORD PTR [esi], eax
  00070	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00073	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00076	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00079	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN2@ClearEffec:

; 145  : 			}
; 146  : 		}
; 147  : 		
; 148  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex ) //Will Clear the Effect

  0007c	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  0007f	3b 45 0c	 cmp	 eax, DWORD PTR _iEffectIndex$[ebp]
  00082	75 3c		 jne	 SHORT $LN5@ClearEffec

; 149  : 		{
; 150  : 			g_ViewportSkillState.RemoveBuffEffect(lpObj,lpObj->m_BuffEffectState[i].btEffectType1,lpObj->m_BuffEffectState[i].iValue1);

  00084	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00087	0f b6 56 02	 movzx	 edx, BYTE PTR [esi+2]
  0008b	51		 push	 ecx
  0008c	52		 push	 edx
  0008d	57		 push	 edi
  0008e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00093	e8 00 00 00 00	 call	 ?RemoveBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::RemoveBuffEffect

; 151  : 			g_ViewportSkillState.RemoveBuffEffect(lpObj,lpObj->m_BuffEffectState[i].btEffectType2,lpObj->m_BuffEffectState[i].iValue2);

  00098	0f b6 4e 03	 movzx	 ecx, BYTE PTR [esi+3]
  0009c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0009f	50		 push	 eax
  000a0	51		 push	 ecx
  000a1	57		 push	 edi
  000a2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  000a7	e8 00 00 00 00	 call	 ?RemoveBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::RemoveBuffEffect

; 152  : 			memset(&lpObj->m_BuffEffectState[i],0,sizeof(lpObj->m_BuffEffectState[i]));

  000ac	33 c0		 xor	 eax, eax
  000ae	89 06		 mov	 DWORD PTR [esi], eax
  000b0	89 46 04	 mov	 DWORD PTR [esi+4], eax
  000b3	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b6	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  000b9	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 153  : 			btResult = 1;

  000bc	c6 45 ff 01	 mov	 BYTE PTR _btResult$[ebp], 1
$LN5@ClearEffec:

; 135  : 	}
; 136  : 
; 137  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  000c0	43		 inc	 ebx
  000c1	83 c6 14	 add	 esi, 20			; 00000014H
  000c4	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000c7	0f 8c 73 ff ff
	ff		 jl	 $LL6@ClearEffec

; 154  : 		}
; 155  : 	}
; 156  : 
; 157  : 	return btResult;

  000cd	8a 45 ff	 mov	 al, BYTE PTR _btResult$[ebp]
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	5f		 pop	 edi

; 158  : }

  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 08 00	 ret	 8
?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::ClearEffect
_TEXT	ENDS
PUBLIC	?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchActiveEffect
; Function compile flags: /Ogtp
;	COMDAT ?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::SearchActiveEffect, COMDAT
; _this$ = ecx

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 163  : 	if( g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _iEffectIndex$[ebp]
  00007	56		 push	 esi
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  0000d	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  00012	84 c0		 test	 al, al

; 164  : 	{
; 165  : 		return 0;

  00014	74 1b		 je	 SHORT $LN2@SearchActi

; 166  : 	}
; 167  : 
; 168  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00019	33 c0		 xor	 eax, eax
  0001b	81 c1 28 02 00
	00		 add	 ecx, 552		; 00000228H
$LL4@SearchActi:

; 169  : 	{
; 170  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  00021	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00024	3b d6		 cmp	 edx, esi
  00026	74 10		 je	 SHORT $LN9@SearchActi

; 166  : 	}
; 167  : 
; 168  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00028	40		 inc	 eax
  00029	83 c1 14	 add	 ecx, 20			; 00000014H
  0002c	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002f	7c f0		 jl	 SHORT $LL4@SearchActi
$LN2@SearchActi:

; 173  : 		}
; 174  : 	}
; 175  : 
; 176  : 	return 0;

  00031	32 c0		 xor	 al, al
  00033	5e		 pop	 esi

; 177  : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN9@SearchActi:

; 171  : 		{
; 172  : 			return 1;

  00038	b0 01		 mov	 al, 1
  0003a	5e		 pop	 esi

; 177  : }

  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::SearchActiveEffect
_TEXT	ENDS
PUBLIC	?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z ; CBuffManager::RemoveIceEffect
; Function compile flags: /Ogtp
;	COMDAT ?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::RemoveIceEffect, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 	int iEffectID = iEffectIndex;
; 183  : 
; 184  : 	if(iEffectID != AT_ICE) //56	28	255	255	Ice	1	1	1	Diminui velocidade de mobilidade

  00003	83 7d 0c 38	 cmp	 DWORD PTR _iEffectIndex$[ebp], 56 ; 00000038H
  00007	75 17		 jne	 SHORT $LN2@RemoveIceE

; 185  : 	{
; 186  : 		return;
; 187  : 	}
; 188  : 
; 189  : 	lpObj->DelayActionTime = 0;

  00009	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	89 88 c0 03 00
	00		 mov	 DWORD PTR [eax+960], ecx

; 190  : 	lpObj->DelayLevel = 0;

  00014	88 88 c4 03 00
	00		 mov	 BYTE PTR [eax+964], cl

; 191  : 	lpObj->m_IceType = 0;

  0001a	88 88 c6 03 00
	00		 mov	 BYTE PTR [eax+966], cl
$LN2@RemoveIceE:

; 192  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::RemoveIceEffect
_TEXT	ENDS
PUBLIC	?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchAndClearEffect
EXTRN	?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z:PROC ; CBuffEffect::GetBuffData
; Function compile flags: /Ogtp
;	COMDAT ?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_loc3$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectClearType$ = 12					; size = 4
?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::SearchAndClearEffect, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 197  : 	LPBUFF_EFFECT_DATA pEffect = NULL;
; 198  : 
; 199  : 	int loc3 = 0; //clear count

  00006	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00009	57		 push	 edi
  0000a	33 ff		 xor	 edi, edi
  0000c	8b d9		 mov	 ebx, ecx
  0000e	89 7d fc	 mov	 DWORD PTR _loc3$[ebp], edi
  00011	81 c6 28 02 00
	00		 add	 esi, 552		; 00000228H
$LL16@SearchAndC:

; 202  : 	{
; 203  : 		if( this->SearchActiveEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE )

  00017	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0001d	50		 push	 eax
  0001e	51		 push	 ecx
  0001f	8b cb		 mov	 ecx, ebx
  00021	e8 00 00 00 00	 call	 ?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchActiveEffect
  00026	3c 01		 cmp	 al, 1
  00028	75 66		 jne	 SHORT $LN10@SearchAndC

; 204  : 		{
; 205  : 			pEffect = g_BuffEffect.GetBuffData(lpObj->m_BuffEffectState[i].btBuffIndex); //Get Buff Info

  0002a	0f b6 16	 movzx	 edx, BYTE PTR [esi]
  0002d	52		 push	 edx
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00033	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData

; 206  : 
; 207  : 			if(pEffect == NULL)

  00038	85 c0		 test	 eax, eax
  0003a	74 54		 je	 SHORT $LN10@SearchAndC

; 208  : 			{
; 209  : 				continue;
; 210  : 			}
; 211  : 
; 212  : 			if(pEffect->btClearType == iEffectClearType)

  0003c	0f b6 40 1a	 movzx	 eax, BYTE PTR [eax+26]
  00040	3b 45 0c	 cmp	 eax, DWORD PTR _iEffectClearType$[ebp]
  00043	75 1a		 jne	 SHORT $LN17@SearchAndC

; 213  : 			{
; 214  : 				if( this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00045	0f b6 0e	 movzx	 ecx, BYTE PTR [esi]
  00048	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0004b	51		 push	 ecx
  0004c	52		 push	 edx
  0004d	8b cb		 mov	 ecx, ebx
  0004f	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  00054	3c 01		 cmp	 al, 1
  00056	75 07		 jne	 SHORT $LN17@SearchAndC

; 215  : 				{
; 216  : 					loc3 += 1;

  00058	ff 45 fc	 inc	 DWORD PTR _loc3$[ebp]

; 217  : 					i -= 1;

  0005b	4f		 dec	 edi
  0005c	83 ee 14	 sub	 esi, 20			; 00000014H
$LN17@SearchAndC:

; 218  : 				}
; 219  : 			}
; 220  : 
; 221  : 			if(iEffectClearType == AT_GENERAL)

  0005f	8b 45 0c	 mov	 eax, DWORD PTR _iEffectClearType$[ebp]
  00062	83 f8 02	 cmp	 eax, 2
  00065	75 0a		 jne	 SHORT $LN3@SearchAndC

; 222  : 			{
; 223  : 				if( this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex ) == TRUE)

  00067	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0006d	50		 push	 eax
  0006e	51		 push	 ecx

; 224  : 				{
; 225  : 					loc3 += 1;
; 226  : 					i -= 1;
; 227  : 				}
; 228  : 			}
; 229  : 
; 230  : 			if(iEffectClearType == AT_MONSTER_GENERAL)

  0006f	eb 0d		 jmp	 SHORT $LN21@SearchAndC
$LN3@SearchAndC:
  00071	83 f8 01	 cmp	 eax, 1
  00074	75 1a		 jne	 SHORT $LN10@SearchAndC

; 231  : 			{
; 232  : 				if( this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00076	0f b6 16	 movzx	 edx, BYTE PTR [esi]
  00079	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0007c	52		 push	 edx
  0007d	50		 push	 eax
$LN21@SearchAndC:
  0007e	8b cb		 mov	 ecx, ebx
  00080	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  00085	3c 01		 cmp	 al, 1
  00087	75 07		 jne	 SHORT $LN10@SearchAndC

; 233  : 				{
; 234  : 					loc3 += 1;

  00089	ff 45 fc	 inc	 DWORD PTR _loc3$[ebp]

; 235  : 					i -= 1;

  0008c	4f		 dec	 edi
  0008d	83 ee 14	 sub	 esi, 20			; 00000014H
$LN10@SearchAndC:

; 200  : 	
; 201  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00090	47		 inc	 edi
  00091	83 c6 14	 add	 esi, 20			; 00000014H
  00094	83 ff 10	 cmp	 edi, 16			; 00000010H
  00097	0f 8c 7a ff ff
	ff		 jl	 $LL16@SearchAndC

; 236  : 				}
; 237  : 			}
; 238  : 		}
; 239  : 	}
; 240  : 	return loc3;

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _loc3$[ebp]
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx

; 241  : }

  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 08 00	 ret	 8
?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::SearchAndClearEffect
_TEXT	ENDS
PUBLIC	?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
; Function compile flags: /Ogtp
;	COMDAT ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z
_TEXT	SEGMENT
_iEffectIndex$ = 8					; size = 4
?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z PROC ; CBuffManager::GetBuffInfo, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 246  : 	LPBUFF_EFFECT_DATA pEffect = NULL;
; 247  : 
; 248  : 	if(g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iEffectIndex$[ebp]
  00007	56		 push	 esi
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  0000d	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  00012	84 c0		 test	 al, al
  00014	75 07		 jne	 SHORT $LN1@GetBuffInf

; 249  : 	{
; 250  : 		return NULL;

  00016	33 c0		 xor	 eax, eax
  00018	5e		 pop	 esi

; 254  : 
; 255  : 	return pEffect;
; 256  : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
$LN1@GetBuffInf:

; 251  : 	}
; 252  : 	
; 253  : 	pEffect = g_BuffEffect.GetBuffData(iEffectIndex);

  0001d	56		 push	 esi
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00023	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  00028	5e		 pop	 esi

; 254  : 
; 255  : 	return pEffect;
; 256  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ENDP ; CBuffManager::GetBuffInfo
_TEXT	ENDS
PUBLIC	?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z ; CBuffManager::GetEffectDataFromItemCode
EXTRN	?GetBuffDataFromItemCode@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@G@Z:PROC ; CBuffEffect::GetBuffDataFromItemCode
; Function compile flags: /Ogtp
;	COMDAT ?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z
_TEXT	SEGMENT
_wItemCode$ = 8						; size = 2
?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z PROC ; CBuffManager::GetEffectDataFromItemCode, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 260  : 	BUFF_EFFECT_DATA* lpBuffData = 0;
; 261  : 
; 262  : 	lpBuffData = g_BuffEffect.GetBuffDataFromItemCode(wItemCode);

  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect

; 263  : 	return lpBuffData;
; 264  : }

  00008	5d		 pop	 ebp

; 260  : 	BUFF_EFFECT_DATA* lpBuffData = 0;
; 261  : 
; 262  : 	lpBuffData = g_BuffEffect.GetBuffDataFromItemCode(wItemCode);

  00009	e9 00 00 00 00	 jmp	 ?GetBuffDataFromItemCode@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@G@Z ; CBuffEffect::GetBuffDataFromItemCode
?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z ENDP ; CBuffManager::GetEffectDataFromItemCode
_TEXT	ENDS
PUBLIC	?GetBuffClearType@CBuffManager@@QAEHE@Z		; CBuffManager::GetBuffClearType
; Function compile flags: /Ogtp
;	COMDAT ?GetBuffClearType@CBuffManager@@QAEHE@Z
_TEXT	SEGMENT
_btEffectIndex$ = 8					; size = 1
?GetBuffClearType@CBuffManager@@QAEHE@Z PROC		; CBuffManager::GetBuffClearType, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 269  : 	LPBUFF_EFFECT_DATA pEffect = NULL;
; 270  : 
; 271  : 	if(g_BuffEffect.IsValidIndex(btEffectIndex) == FALSE)

  00004	8b 75 08	 mov	 esi, DWORD PTR _btEffectIndex$[ebp]
  00007	56		 push	 esi
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  0000d	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  00012	84 c0		 test	 al, al
  00014	75 08		 jne	 SHORT $LN1@GetBuffCle

; 272  : 	{
; 273  : 		return -1;

  00016	83 c8 ff	 or	 eax, -1
  00019	5e		 pop	 esi

; 279  : }

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
$LN1@GetBuffCle:

; 274  : 	}
; 275  : 
; 276  : 	pEffect = g_BuffEffect.GetBuffData(btEffectIndex);

  0001e	56		 push	 esi
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00024	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData

; 277  : 
; 278  : 	return pEffect->btClearType;

  00029	0f b6 40 1a	 movzx	 eax, BYTE PTR [eax+26]
  0002d	5e		 pop	 esi

; 279  : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?GetBuffClearType@CBuffManager@@QAEHE@Z ENDP		; CBuffManager::GetBuffClearType
_TEXT	ENDS
PUBLIC	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC	; gObjSearchActiveEffect, COMDAT

; 748  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 749  : 	if(lpObj == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00006	85 c9		 test	 ecx, ecx

; 750  : 	{
; 751  : 		return 0;

  00008	74 1e		 je	 SHORT $LN1@gObjSearch

; 752  : 	}
; 753  : 
; 754  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	85 c0		 test	 eax, eax
  0000e	78 18		 js	 SHORT $LN1@gObjSearch
  00010	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  00015	7f 11		 jg	 SHORT $LN1@gObjSearch

; 757  : 	}
; 758  : 
; 759  : 	return g_BuffManager.SearchActiveEffect(lpObj, iEffectIndex);

  00017	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00021	e8 00 00 00 00	 call	 ?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchActiveEffect

; 760  : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN1@gObjSearch:

; 755  : 	{
; 756  : 		return 0;

  00028	32 c0		 xor	 al, al

; 760  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP	; gObjSearchActiveEffect
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z ; gObjApplyBuffEffectDamageType
EXTRN	?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CViewportSkillState::SetDamageType
; Function compile flags: /Ogtp
;	COMDAT ?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z PROC ; gObjApplyBuffEffectDamageType, COMDAT

; 800  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 801  : 	int loc1 = 0; //??
; 802  : 
; 803  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00006	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00009	8d b7 2c 02 00
	00		 lea	 esi, DWORD PTR [edi+556]
  0000f	bb 10 00 00 00	 mov	 ebx, 16			; 00000010H
$LL4@gObjApplyB:

; 804  : 	{
; 805  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex != NULL)

  00014	80 7e fc 00	 cmp	 BYTE PTR [esi-4], 0
  00018	74 27		 je	 SHORT $LN3@gObjApplyB

; 806  : 		{
; 807  : 			g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType1, lpObj->m_BuffEffectState[i].iValue1);

  0001a	0f b6 4e fe	 movzx	 ecx, BYTE PTR [esi-2]
  0001e	8b 06		 mov	 eax, DWORD PTR [esi]
  00020	50		 push	 eax
  00021	51		 push	 ecx
  00022	57		 push	 edi
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00028	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType

; 808  : 			g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType2, lpObj->m_BuffEffectState[i].iValue2);

  0002d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00030	0f b6 46 ff	 movzx	 eax, BYTE PTR [esi-1]
  00034	52		 push	 edx
  00035	50		 push	 eax
  00036	57		 push	 edi
  00037	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  0003c	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType
$LN3@gObjApplyB:

; 801  : 	int loc1 = 0; //??
; 802  : 
; 803  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00041	83 c6 14	 add	 esi, 20			; 00000014H
  00044	4b		 dec	 ebx
  00045	75 cd		 jne	 SHORT $LL4@gObjApplyB
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx

; 809  : 		}
; 810  : 	}
; 811  : }

  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; gObjApplyBuffEffectDamageType
_TEXT	ENDS
PUBLIC	?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z ; gObjCountAppliedBuffEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_btEffectIndex$ = 12					; size = 4
?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z PROC ; gObjCountAppliedBuffEffect, COMDAT

; 815  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 816  : 	if(lpObj == NULL)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	75 06		 jne	 SHORT $LN12@gObjCountA
$LN28@gObjCountA:

; 817  : 	{
; 818  : 		return -1;

  0000b	83 c8 ff	 or	 eax, -1
  0000e	5f		 pop	 edi

; 847  : 			break;
; 848  : 		}		
; 849  : 	}
; 850  : 
; 851  : 	return count;
; 852  : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN12@gObjCountA:

; 819  : 	}
; 820  : 
; 821  : 	if(lpObj->Connected < PLAYER_PLAYING)

  00011	83 7f 04 03	 cmp	 DWORD PTR [edi+4], 3

; 822  : 	{
; 823  : 		return -1;

  00015	7c f4		 jl	 SHORT $LN28@gObjCountA

; 824  : 	}
; 825  : 
; 826  : 	int count = 0; //loc1 ebp-4

  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	8b 75 0c	 mov	 esi, DWORD PTR _btEffectIndex$[ebp]
  0001c	33 c0		 xor	 eax, eax

; 827  : 
; 828  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0001e	33 db		 xor	 ebx, ebx
  00020	8d 97 3c 02 00
	00		 lea	 edx, DWORD PTR [edi+572]
$LL10@gObjCountA:

; 829  : 	{
; 830  : 		if(count >= MAX_STATE_COUNT || count >= lpObj->m_btViewStateCount)

  00026	83 f8 10	 cmp	 eax, 16			; 00000010H
  00029	7d 71		 jge	 SHORT $LN19@gObjCountA
  0002b	0f b6 8f 27 02
	00 00		 movzx	 ecx, BYTE PTR [edi+551]
  00032	3b c1		 cmp	 eax, ecx
  00034	7d 66		 jge	 SHORT $LN19@gObjCountA

; 831  : 		{
; 832  : 			break;
; 833  : 		}
; 834  : 
; 835  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  00036	8a 4a ec	 mov	 cl, BYTE PTR [edx-20]
  00039	84 c9		 test	 cl, cl
  0003b	74 04		 je	 SHORT $LN9@gObjCountA

; 836  : 		{
; 837  : 			continue;
; 838  : 		}
; 839  : 
; 840  : 		switch(lpObj->m_BuffEffectState[i].btBuffIndex)
; 841  : 		{
; 842  : 		case 0: //NULL
; 843  : 			break;
; 844  : 		default:
; 845  : 			btEffectIndex[count] = lpObj->m_BuffEffectState[i].btBuffIndex;

  0003d	88 0c 30	 mov	 BYTE PTR [eax+esi], cl

; 846  : 			count++;

  00040	40		 inc	 eax
$LN9@gObjCountA:

; 829  : 	{
; 830  : 		if(count >= MAX_STATE_COUNT || count >= lpObj->m_btViewStateCount)

  00041	83 f8 10	 cmp	 eax, 16			; 00000010H
  00044	7d 56		 jge	 SHORT $LN19@gObjCountA
  00046	0f b6 8f 27 02
	00 00		 movzx	 ecx, BYTE PTR [edi+551]
  0004d	3b c1		 cmp	 eax, ecx
  0004f	7d 4b		 jge	 SHORT $LN19@gObjCountA

; 831  : 		{
; 832  : 			break;
; 833  : 		}
; 834  : 
; 835  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  00051	8a 0a		 mov	 cl, BYTE PTR [edx]
  00053	84 c9		 test	 cl, cl
  00055	74 04		 je	 SHORT $LN18@gObjCountA

; 836  : 		{
; 837  : 			continue;
; 838  : 		}
; 839  : 
; 840  : 		switch(lpObj->m_BuffEffectState[i].btBuffIndex)
; 841  : 		{
; 842  : 		case 0: //NULL
; 843  : 			break;
; 844  : 		default:
; 845  : 			btEffectIndex[count] = lpObj->m_BuffEffectState[i].btBuffIndex;

  00057	88 0c 30	 mov	 BYTE PTR [eax+esi], cl

; 846  : 			count++;

  0005a	40		 inc	 eax
$LN18@gObjCountA:

; 829  : 	{
; 830  : 		if(count >= MAX_STATE_COUNT || count >= lpObj->m_btViewStateCount)

  0005b	83 f8 10	 cmp	 eax, 16			; 00000010H
  0005e	7d 3c		 jge	 SHORT $LN19@gObjCountA
  00060	0f b6 8f 27 02
	00 00		 movzx	 ecx, BYTE PTR [edi+551]
  00067	3b c1		 cmp	 eax, ecx
  00069	7d 31		 jge	 SHORT $LN19@gObjCountA

; 831  : 		{
; 832  : 			break;
; 833  : 		}
; 834  : 
; 835  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  0006b	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0006e	84 c9		 test	 cl, cl
  00070	74 04		 je	 SHORT $LN21@gObjCountA

; 836  : 		{
; 837  : 			continue;
; 838  : 		}
; 839  : 
; 840  : 		switch(lpObj->m_BuffEffectState[i].btBuffIndex)
; 841  : 		{
; 842  : 		case 0: //NULL
; 843  : 			break;
; 844  : 		default:
; 845  : 			btEffectIndex[count] = lpObj->m_BuffEffectState[i].btBuffIndex;

  00072	88 0c 30	 mov	 BYTE PTR [eax+esi], cl

; 846  : 			count++;

  00075	40		 inc	 eax
$LN21@gObjCountA:

; 829  : 	{
; 830  : 		if(count >= MAX_STATE_COUNT || count >= lpObj->m_btViewStateCount)

  00076	83 f8 10	 cmp	 eax, 16			; 00000010H
  00079	7d 21		 jge	 SHORT $LN19@gObjCountA
  0007b	0f b6 8f 27 02
	00 00		 movzx	 ecx, BYTE PTR [edi+551]
  00082	3b c1		 cmp	 eax, ecx
  00084	7d 16		 jge	 SHORT $LN19@gObjCountA

; 831  : 		{
; 832  : 			break;
; 833  : 		}
; 834  : 
; 835  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  00086	8a 4a 28	 mov	 cl, BYTE PTR [edx+40]
  00089	84 c9		 test	 cl, cl
  0008b	74 04		 je	 SHORT $LN24@gObjCountA

; 836  : 		{
; 837  : 			continue;
; 838  : 		}
; 839  : 
; 840  : 		switch(lpObj->m_BuffEffectState[i].btBuffIndex)
; 841  : 		{
; 842  : 		case 0: //NULL
; 843  : 			break;
; 844  : 		default:
; 845  : 			btEffectIndex[count] = lpObj->m_BuffEffectState[i].btBuffIndex;

  0008d	88 0c 30	 mov	 BYTE PTR [eax+esi], cl

; 846  : 			count++;

  00090	40		 inc	 eax
$LN24@gObjCountA:

; 824  : 	}
; 825  : 
; 826  : 	int count = 0; //loc1 ebp-4

  00091	83 c3 04	 add	 ebx, 4
  00094	83 c2 50	 add	 edx, 80			; 00000050H

; 827  : 
; 828  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00097	83 fb 10	 cmp	 ebx, 16			; 00000010H
  0009a	7c 8a		 jl	 SHORT $LL10@gObjCountA
$LN19@gObjCountA:
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	5f		 pop	 edi

; 847  : 			break;
; 848  : 		}		
; 849  : 	}
; 850  : 
; 851  : 	return count;
; 852  : }

  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z ENDP ; gObjCountAppliedBuffEffect
_TEXT	ENDS
PUBLIC	?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z ; gObjCheckBuffEffectValue
; Function compile flags: /Ogtp
;	COMDAT ?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iValue1$ = 16						; size = 4
_iValue2$ = 20						; size = 4
?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z PROC ; gObjCheckBuffEffectValue, COMDAT

; 856  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 857  : 	if(lpObj == NULL)

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 04		 jne	 SHORT $LN8@gObjCheckB
$LN18@gObjCheckB:

; 858  : 	{
; 859  : 		return 0;

  0000a	32 c0		 xor	 al, al

; 884  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
$LN8@gObjCheckB:

; 860  : 	}
; 861  : 
; 862  : 	if(lpObj->Connected < PLAYER_PLAYING)

  0000e	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3

; 863  : 	{
; 864  : 		return 0;

  00012	7c f6		 jl	 SHORT $LN18@gObjCheckB

; 865  : 	}
; 866  : 
; 867  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00014	8b 55 14	 mov	 edx, DWORD PTR _iValue2$[ebp]
  00017	56		 push	 esi
  00018	8b 75 10	 mov	 esi, DWORD PTR _iValue1$[ebp]
  0001b	57		 push	 edi
  0001c	8b 7d 0c	 mov	 edi, DWORD PTR _iEffectIndex$[ebp]
  0001f	33 c9		 xor	 ecx, ecx
  00021	05 2c 02 00 00	 add	 eax, 556		; 0000022cH
  00026	53		 push	 ebx
$LL6@gObjCheckB:

; 868  : 	{
; 869  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  00027	0f b6 58 fc	 movzx	 ebx, BYTE PTR [eax-4]
  0002b	3b df		 cmp	 ebx, edi
  0002d	75 09		 jne	 SHORT $LN5@gObjCheckB

; 870  : 		{
; 871  : 			if(lpObj->m_BuffEffectState[i].iValue1 > iValue1)

  0002f	39 30		 cmp	 DWORD PTR [eax], esi
  00031	7f 15		 jg	 SHORT $LN13@gObjCheckB

; 872  : 			{
; 873  : 				return 1;
; 874  : 			}
; 875  : 
; 876  : 			if(lpObj->m_BuffEffectState[i].iValue2 > iValue2)

  00033	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  00036	7f 10		 jg	 SHORT $LN13@gObjCheckB
$LN5@gObjCheckB:

; 865  : 	}
; 866  : 
; 867  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00038	41		 inc	 ecx
  00039	83 c0 14	 add	 eax, 20			; 00000014H
  0003c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003f	7c e6		 jl	 SHORT $LL6@gObjCheckB

; 879  : 			}			
; 880  : 		}
; 881  : 	}
; 882  : 
; 883  : 	return 0;

  00041	5b		 pop	 ebx
  00042	5f		 pop	 edi
  00043	32 c0		 xor	 al, al
  00045	5e		 pop	 esi

; 884  : }

  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN13@gObjCheckB:
  00048	5b		 pop	 ebx
  00049	5f		 pop	 edi

; 877  : 			{
; 878  : 				return 1;

  0004a	b0 01		 mov	 al, 1
  0004c	5e		 pop	 esi

; 884  : }

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z ENDP ; gObjCheckBuffEffectValue
_TEXT	ENDS
PUBLIC	?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z	; gObjGetActiveEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectType$ = 12					; size = 4
?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z PROC	; gObjGetActiveEffect, COMDAT

; 888  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 889  : 	if(lpObj == NULL)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]

; 890  : 	{
; 891  : 		return 0;

  00006	33 c0		 xor	 eax, eax
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 84 8f 00 00
	00		 je	 $LN9@gObjGetAct

; 892  : 	}
; 893  : 
; 894  : 	if(lpObj->Connected < PLAYER_PLAYING)

  00010	83 79 04 03	 cmp	 DWORD PTR [ecx+4], 3

; 895  : 	{
; 896  : 		return 0;

  00014	0f 8c 85 00 00
	00		 jl	 $LN9@gObjGetAct

; 897  : 	}
; 898  : 
; 899  : 	int iIndex = 0;

  0001a	8b 55 0c	 mov	 edx, DWORD PTR _iEffectType$[ebp]
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	81 c1 2a 02 00
	00		 add	 ecx, 554		; 0000022aH
  00025	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
$LL6@gObjGetAct:

; 902  : 	{
; 903  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  00028	80 79 fe 00	 cmp	 BYTE PTR [ecx-2], 0
  0002c	74 15		 je	 SHORT $LN5@gObjGetAct

; 904  : 		{
; 905  : 			continue;
; 906  : 		}
; 907  : 
; 908  : 		if(lpObj->m_BuffEffectState[i].btEffectType1 == iEffectType)

  0002e	0f b6 39	 movzx	 edi, BYTE PTR [ecx]
  00031	3b fa		 cmp	 edi, edx
  00033	75 03		 jne	 SHORT $LN2@gObjGetAct

; 909  : 		{
; 910  : 			iIndex += lpObj->m_BuffEffectState[i].iValue1;

  00035	03 41 02	 add	 eax, DWORD PTR [ecx+2]
$LN2@gObjGetAct:

; 911  : 		}
; 912  : 
; 913  : 		if(lpObj->m_BuffEffectState[i].btEffectType2 == iEffectType)

  00038	0f b6 79 01	 movzx	 edi, BYTE PTR [ecx+1]
  0003c	3b fa		 cmp	 edi, edx
  0003e	75 03		 jne	 SHORT $LN5@gObjGetAct

; 914  : 		{
; 915  : 			iIndex += lpObj->m_BuffEffectState[i].iValue2;

  00040	03 41 06	 add	 eax, DWORD PTR [ecx+6]
$LN5@gObjGetAct:

; 902  : 	{
; 903  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  00043	80 79 12 00	 cmp	 BYTE PTR [ecx+18], 0
  00047	74 16		 je	 SHORT $LN15@gObjGetAct

; 904  : 		{
; 905  : 			continue;
; 906  : 		}
; 907  : 
; 908  : 		if(lpObj->m_BuffEffectState[i].btEffectType1 == iEffectType)

  00049	0f b6 79 14	 movzx	 edi, BYTE PTR [ecx+20]
  0004d	3b fa		 cmp	 edi, edx
  0004f	75 03		 jne	 SHORT $LN14@gObjGetAct

; 909  : 		{
; 910  : 			iIndex += lpObj->m_BuffEffectState[i].iValue1;

  00051	03 41 16	 add	 eax, DWORD PTR [ecx+22]
$LN14@gObjGetAct:

; 911  : 		}
; 912  : 
; 913  : 		if(lpObj->m_BuffEffectState[i].btEffectType2 == iEffectType)

  00054	0f b6 79 15	 movzx	 edi, BYTE PTR [ecx+21]
  00058	3b fa		 cmp	 edi, edx
  0005a	75 03		 jne	 SHORT $LN15@gObjGetAct

; 914  : 		{
; 915  : 			iIndex += lpObj->m_BuffEffectState[i].iValue2;

  0005c	03 41 1a	 add	 eax, DWORD PTR [ecx+26]
$LN15@gObjGetAct:

; 902  : 	{
; 903  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  0005f	80 79 26 00	 cmp	 BYTE PTR [ecx+38], 0
  00063	74 16		 je	 SHORT $LN17@gObjGetAct

; 904  : 		{
; 905  : 			continue;
; 906  : 		}
; 907  : 
; 908  : 		if(lpObj->m_BuffEffectState[i].btEffectType1 == iEffectType)

  00065	0f b6 79 28	 movzx	 edi, BYTE PTR [ecx+40]
  00069	3b fa		 cmp	 edi, edx
  0006b	75 03		 jne	 SHORT $LN16@gObjGetAct

; 909  : 		{
; 910  : 			iIndex += lpObj->m_BuffEffectState[i].iValue1;

  0006d	03 41 2a	 add	 eax, DWORD PTR [ecx+42]
$LN16@gObjGetAct:

; 911  : 		}
; 912  : 
; 913  : 		if(lpObj->m_BuffEffectState[i].btEffectType2 == iEffectType)

  00070	0f b6 79 29	 movzx	 edi, BYTE PTR [ecx+41]
  00074	3b fa		 cmp	 edi, edx
  00076	75 03		 jne	 SHORT $LN17@gObjGetAct

; 914  : 		{
; 915  : 			iIndex += lpObj->m_BuffEffectState[i].iValue2;

  00078	03 41 2e	 add	 eax, DWORD PTR [ecx+46]
$LN17@gObjGetAct:

; 902  : 	{
; 903  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  0007b	80 79 3a 00	 cmp	 BYTE PTR [ecx+58], 0
  0007f	74 16		 je	 SHORT $LN19@gObjGetAct

; 904  : 		{
; 905  : 			continue;
; 906  : 		}
; 907  : 
; 908  : 		if(lpObj->m_BuffEffectState[i].btEffectType1 == iEffectType)

  00081	0f b6 79 3c	 movzx	 edi, BYTE PTR [ecx+60]
  00085	3b fa		 cmp	 edi, edx
  00087	75 03		 jne	 SHORT $LN18@gObjGetAct

; 909  : 		{
; 910  : 			iIndex += lpObj->m_BuffEffectState[i].iValue1;

  00089	03 41 3e	 add	 eax, DWORD PTR [ecx+62]
$LN18@gObjGetAct:

; 911  : 		}
; 912  : 
; 913  : 		if(lpObj->m_BuffEffectState[i].btEffectType2 == iEffectType)

  0008c	0f b6 79 3d	 movzx	 edi, BYTE PTR [ecx+61]
  00090	3b fa		 cmp	 edi, edx
  00092	75 03		 jne	 SHORT $LN19@gObjGetAct

; 914  : 		{
; 915  : 			iIndex += lpObj->m_BuffEffectState[i].iValue2;

  00094	03 41 42	 add	 eax, DWORD PTR [ecx+66]
$LN19@gObjGetAct:

; 897  : 	}
; 898  : 
; 899  : 	int iIndex = 0;

  00097	83 c1 50	 add	 ecx, 80			; 00000050H

; 900  : 
; 901  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0009a	4e		 dec	 esi
  0009b	75 8b		 jne	 SHORT $LL6@gObjGetAct
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
$LN9@gObjGetAct:

; 916  : 		}
; 917  : 	}
; 918  : 
; 919  : 	return iIndex;
; 920  : }

  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z ENDP	; gObjGetActiveEffect
_TEXT	ENDS
PUBLIC	?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z ; gObjUpdateAppliedBuffEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iValue1$ = 16						; size = 4
_iValue2$ = 20						; size = 4
?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z PROC ; gObjUpdateAppliedBuffEffect, COMDAT

; 924  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 925  : 	if(lpObj == NULL)

  00003	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	75 04		 jne	 SHORT $LN7@gObjUpdate
$LN15@gObjUpdate:

; 926  : 	{
; 927  : 		return 0;

  0000a	32 c0		 xor	 al, al

; 951  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
$LN7@gObjUpdate:

; 928  : 	}
; 929  : 
; 930  : 	if(lpObj->Connected < PLAYER_PLAYING)

  0000e	83 7a 04 03	 cmp	 DWORD PTR [edx+4], 3

; 931  : 	{
; 932  : 		return 0;

  00012	7c f6		 jl	 SHORT $LN15@gObjUpdate

; 933  : 	}
; 934  : 
; 935  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _iEffectIndex$[ebp]
  00018	33 c0		 xor	 eax, eax
  0001a	8d 8a 28 02 00
	00		 lea	 ecx, DWORD PTR [edx+552]
  00020	57		 push	 edi
$LL5@gObjUpdate:

; 936  : 	{
; 937  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  00021	0f b6 39	 movzx	 edi, BYTE PTR [ecx]
  00024	3b fe		 cmp	 edi, esi
  00026	74 0f		 je	 SHORT $LN11@gObjUpdate

; 933  : 	}
; 934  : 
; 935  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00028	40		 inc	 eax
  00029	83 c1 14	 add	 ecx, 20			; 00000014H
  0002c	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002f	7c f0		 jl	 SHORT $LL5@gObjUpdate

; 947  : 		}
; 948  : 	}
; 949  : 
; 950  : 	return 0;

  00031	5f		 pop	 edi
  00032	32 c0		 xor	 al, al
  00034	5e		 pop	 esi

; 951  : }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN11@gObjUpdate:

; 938  : 		{
; 939  : 			*iValue1 = lpObj->m_BuffEffectState[i].iValue1;

  00037	8b 75 10	 mov	 esi, DWORD PTR _iValue1$[ebp]
  0003a	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  0003d	8b 8c 8a 2c 02
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+556]
  00044	89 0e		 mov	 DWORD PTR [esi], ecx

; 940  : 
; 941  : 			if(iValue2 != 0)

  00046	8b 4d 14	 mov	 ecx, DWORD PTR _iValue2$[ebp]
  00049	85 c9		 test	 ecx, ecx
  0004b	74 0c		 je	 SHORT $LN1@gObjUpdate

; 942  : 			{
; 943  : 				*iValue2 = lpObj->m_BuffEffectState[i].iValue2;

  0004d	8d 84 80 8c 00
	00 00		 lea	 eax, DWORD PTR [eax+eax*4+140]
  00054	8b 14 82	 mov	 edx, DWORD PTR [edx+eax*4]
  00057	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@gObjUpdate:

; 944  : 			}
; 945  : 
; 946  : 			return 1;

  00059	5f		 pop	 edi
  0005a	b0 01		 mov	 al, 1
  0005c	5e		 pop	 esi

; 951  : }

  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z ENDP ; gObjUpdateAppliedBuffEffect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z	; GCUseBuffEffect
EXTRN	?GCDisplayBuffeffectPartyMember@@YAXH@Z:PROC	; GCDisplayBuffeffectPartyMember
EXTRN	?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z:PROC	; GCStateInfoSend
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_btEffectIndex$ = 12					; size = 1
_btEffectUseOption$ = 16				; size = 1
_wOptionType$ = 20					; size = 2
_wEffectType$ = 24					; size = 2
_iLeftTime$ = 28					; size = 4
?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z PROC	; GCUseBuffEffect, COMDAT

; 955  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 956  : 	PMSG_SEND_BUFF_ICON pMsg;
; 957  : 
; 958  : 	PHeadSetB((LPBYTE)&pMsg, 0x2D, sizeof(PMSG_SEND_BUFF_ICON));

  00015	6a 14		 push	 20			; 00000014H
  00017	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0001a	6a 2d		 push	 45			; 0000002dH
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 959  : 
; 960  : 	pMsg.btEffectIndex = btEffectIndex;
; 961  : 	pMsg.byEffectOption = btEffectUseOption;

  00022	8a 4d 10	 mov	 cl, BYTE PTR _btEffectUseOption$[ebp]
  00025	8b 5d 0c	 mov	 ebx, DWORD PTR _btEffectIndex$[ebp]

; 962  : 	pMsg.wOptionType = wOptionType;

  00028	66 8b 55 14	 mov	 dx, WORD PTR _wOptionType$[ebp]

; 963  : 	pMsg.wEffectType = wEffectType;

  0002c	66 8b 45 18	 mov	 ax, WORD PTR _wEffectType$[ebp]
  00030	88 4d f0	 mov	 BYTE PTR _pMsg$[ebp+8], cl

; 964  : 	pMsg.iLeftTime = iLeftTime;

  00033	8b 4d 1c	 mov	 ecx, DWORD PTR _iLeftTime$[ebp]
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 965  : 
; 966  : 	if ( lpObj->Type == OBJ_USER )

  00039	66 83 7e 68 01	 cmp	 WORD PTR [esi+104], 1
  0003e	88 5d f8	 mov	 BYTE PTR _pMsg$[ebp+16], bl
  00041	66 89 55 ec	 mov	 WORD PTR _pMsg$[ebp+4], dx
  00045	66 89 45 ee	 mov	 WORD PTR _pMsg$[ebp+6], ax
  00049	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  0004c	75 14		 jne	 SHORT $LN3@GCUseBuffE

; 967  : 	{
; 968  : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  0004e	0f b6 55 e9	 movzx	 edx, BYTE PTR _pMsg$[ebp+1]
  00052	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00054	52		 push	 edx
  00055	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GCUseBuffE:

; 969  : 	}
; 970  : 
; 971  : 	if(btEffectUseOption == 0)

  00062	80 7d 10 00	 cmp	 BYTE PTR _btEffectUseOption$[ebp], 0

; 972  : 	{
; 973  : 		GCStateInfoSend(lpObj, 1, btEffectIndex);

  00066	53		 push	 ebx
  00067	75 04		 jne	 SHORT $LN2@GCUseBuffE
  00069	6a 01		 push	 1

; 974  : 	}
; 975  : 	else

  0006b	eb 02		 jmp	 SHORT $LN6@GCUseBuffE
$LN2@GCUseBuffE:

; 976  : 	{
; 977  : 		GCStateInfoSend(lpObj, 0, btEffectIndex);

  0006d	6a 00		 push	 0
$LN6@GCUseBuffE:
  0006f	56		 push	 esi
  00070	e8 00 00 00 00	 call	 ?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z ; GCStateInfoSend

; 978  : 	}
; 979  : #ifdef _ZT_DEV_BUFF_PT_
; 980  : 	//GCUseBuffEffect
; 981  : 	//GCDisplayBuffeffectPartyMember(v10);
; 982  : 	GCDisplayBuffeffectPartyMember(lpObj->m_Index);

  00075	8b 16		 mov	 edx, DWORD PTR [esi]
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	52		 push	 edx
  0007b	e8 00 00 00 00	 call	 ?GCDisplayBuffeffectPartyMember@@YAXH@Z ; GCDisplayBuffeffectPartyMember

; 983  : #endif
; 984  : }

  00080	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00083	83 c4 04	 add	 esp, 4
  00086	5e		 pop	 esi
  00087	33 cd		 xor	 ecx, ebp
  00089	5b		 pop	 ebx
  0008a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ENDP	; GCUseBuffEffect
_TEXT	ENDS
PUBLIC	?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUserViewportBuffEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z PROC ; gObjNotifyUserViewportBuffEffect, COMDAT

; 988  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 989  : 	if(lpObj == NULL)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 38		 je	 SHORT $LN2@gObjNotify

; 990  : 	{
; 991  : 		return;
; 992  : 	}
; 993  : 
; 994  : 	if(lpObj->Type != OBJ_USER)

  0000b	66 83 7f 68 01	 cmp	 WORD PTR [edi+104], 1
  00010	75 31		 jne	 SHORT $LN2@gObjNotify

; 995  : 	{
; 996  : 		return;
; 997  : 	}
; 998  : 
; 999  : 	if(lpObj->m_btViewStateCount <= 0)

  00012	80 bf 27 02 00
	00 00		 cmp	 BYTE PTR [edi+551], 0
  00019	76 28		 jbe	 SHORT $LN2@gObjNotify

; 1000 : 	{
; 1001 : 		return;
; 1002 : 	}
; 1003 : 
; 1004 : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0001b	53		 push	 ebx
  0001c	56		 push	 esi
  0001d	8d b7 28 02 00
	00		 lea	 esi, DWORD PTR [edi+552]
  00023	bb 10 00 00 00	 mov	 ebx, 16			; 00000010H
$LL4@gObjNotify:

; 1005 : 	{
; 1006 : 		if(lpObj->m_BuffEffectState[i].btBuffIndex != NULL)

  00028	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  0002b	84 c0		 test	 al, al
  0002d	74 0c		 je	 SHORT $LN3@gObjNotify

; 1007 : 		{
; 1008 : 			GCStateInfoSend(lpObj, 1, lpObj->m_BuffEffectState[i].btBuffIndex);

  0002f	50		 push	 eax
  00030	6a 01		 push	 1
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z ; GCStateInfoSend
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@gObjNotify:

; 1000 : 	{
; 1001 : 		return;
; 1002 : 	}
; 1003 : 
; 1004 : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0003b	83 c6 14	 add	 esi, 20			; 00000014H
  0003e	4b		 dec	 ebx
  0003f	75 e7		 jne	 SHORT $LL4@gObjNotify
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
$LN2@gObjNotify:
  00043	5f		 pop	 edi

; 1009 : 		}
; 1010 : 	}
; 1011 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; gObjNotifyUserViewportBuffEffect
_TEXT	ENDS
PUBLIC	?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z ; gObjSealUserSetExp
EXTRN	?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z:PROC ; CMasterLevelSystem::CheckIsMasterLevelCharacter
EXTRN	?g_MasterLevelSystem@@3VCMasterLevelSystem@@A:BYTE ; g_MasterLevelSystem
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
; Function compile flags: /Ogtp
;	COMDAT ?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z
_TEXT	SEGMENT
_iCAL_EXP$ = -8						; size = 8
_lpObj$ = 8						; size = 4
_Experience$ = 12					; size = 4
_bDisableExtraGainExp$ = 16				; size = 4
?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z PROC	; gObjSealUserSetExp, COMDAT

; 1043 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1044 : 	__int64 iCAL_EXP = Experience; //loc2
; 1045 : 
; 1046 : 	if( gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_SUSTENANCE) != FALSE || //Seal of Sustenance
; 1047 : 		gObjSearchActiveEffect(lpObj, AT_PCBANG_SEAL_OF_SUSTENANCE) != FALSE) 

  00008	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0000b	57		 push	 edi
  0000c	8b 7d 0c	 mov	 edi, DWORD PTR _Experience$[ebp]
  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00014	6a 2a		 push	 42			; 0000002aH
  00016	56		 push	 esi
  00017	89 45 fc	 mov	 DWORD PTR _iCAL_EXP$[ebp+4], eax
  0001a	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0001f	83 c4 08	 add	 esp, 8
  00022	84 c0		 test	 al, al
  00024	0f 85 10 01 00
	00		 jne	 $LN14@gObjSealUs
  0002a	6a 1f		 push	 31			; 0000001fH
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00032	83 c4 08	 add	 esp, 8
  00035	84 c0		 test	 al, al
  00037	0f 85 fd 00 00
	00		 jne	 $LN14@gObjSealUs

; 1050 : 	}
; 1051 : 	else if( gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_ASCENSION) != FALSE || 
; 1052 : 		     gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_WEALTH) != FALSE ||
; 1053 : 			 
; 1054 : 			 //Season 4.5 fix
; 1055 : 			 gObjSearchActiveEffect(lpObj, AT_PCBANG_SEAL_OF_ASCENSION) != FALSE ||
; 1056 : 			 gObjSearchActiveEffect(lpObj, AT_PCBANG_SEAL_OF_WEALTH) != FALSE ||
; 1057 : 			
; 1058 : 			 gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_HEALING) != FALSE ||
; 1059 : 
; 1060 : 			 //Season 4.5 update
; 1061 : 			 gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_ASCENSION) != FALSE ||
; 1062 : 			 gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_WEALTH) != FALSE ) //Seal of Ascension & Seal of Wealth & Seal of Healing

  0003d	6a 28		 push	 40			; 00000028H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00045	83 c4 08	 add	 esp, 8
  00048	84 c0		 test	 al, al
  0004a	75 5e		 jne	 SHORT $LN11@gObjSealUs
  0004c	6a 29		 push	 41			; 00000029H
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00054	83 c4 08	 add	 esp, 8
  00057	84 c0		 test	 al, al
  00059	75 4f		 jne	 SHORT $LN11@gObjSealUs
  0005b	6a 1d		 push	 29			; 0000001dH
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00063	83 c4 08	 add	 esp, 8
  00066	84 c0		 test	 al, al
  00068	75 40		 jne	 SHORT $LN11@gObjSealUs
  0006a	6a 1e		 push	 30			; 0000001eH
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00072	83 c4 08	 add	 esp, 8
  00075	84 c0		 test	 al, al
  00077	75 31		 jne	 SHORT $LN11@gObjSealUs
  00079	6a 57		 push	 87			; 00000057H
  0007b	56		 push	 esi
  0007c	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00081	83 c4 08	 add	 esp, 8
  00084	84 c0		 test	 al, al
  00086	75 22		 jne	 SHORT $LN11@gObjSealUs
  00088	6a 65		 push	 101			; 00000065H
  0008a	56		 push	 esi
  0008b	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00090	83 c4 08	 add	 esp, 8
  00093	84 c0		 test	 al, al
  00095	75 13		 jne	 SHORT $LN11@gObjSealUs
  00097	6a 66		 push	 102			; 00000066H
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0009f	83 c4 08	 add	 esp, 8
  000a2	84 c0		 test	 al, al
  000a4	0f 84 95 00 00
	00		 je	 $LN12@gObjSealUs
$LN11@gObjSealUs:

; 1063 : 	{
; 1064 : 		int iGAIN_EXP = 0; //Set Gain Exp Disable (Dangerous should be 100 = Default)
; 1065 : 
; 1066 : 		iGAIN_EXP = gObjGetActiveEffect(lpObj, ADD_OPTION_EXPERIENCE); //#define ADD_OPTION_EXPERIENCE	6

  000aa	6a 06		 push	 6
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 ?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z ; gObjGetActiveEffect
  000b2	83 c4 08	 add	 esp, 8

; 1067 : 
; 1068 : 		int iMasterLevelCharacter = g_MasterLevelSystem.CheckIsMasterLevelCharacter(lpObj); //season 4.5 add-on

  000b5	56		 push	 esi
  000b6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  000bb	8b f8		 mov	 edi, eax
  000bd	e8 00 00 00 00	 call	 ?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; CMasterLevelSystem::CheckIsMasterLevelCharacter

; 1069 : 
; 1070 : 		if( iMasterLevelCharacter != 0 )
; 1071 : 		{
; 1072 : 			if(gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_ASCENSION) != FALSE || 
; 1073 : 				gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_WEALTH) != FALSE)

  000c2	6a 65		 push	 101			; 00000065H
  000c4	56		 push	 esi
  000c5	85 c0		 test	 eax, eax
  000c7	74 1d		 je	 SHORT $LN10@gObjSealUs
  000c9	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  000ce	83 c4 08	 add	 esp, 8
  000d1	84 c0		 test	 al, al
  000d3	75 2c		 jne	 SHORT $LN8@gObjSealUs
  000d5	6a 66		 push	 102			; 00000066H
  000d7	56		 push	 esi
  000d8	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  000dd	83 c4 08	 add	 esp, 8
  000e0	84 c0		 test	 al, al

; 1074 : 			{
; 1075 : 				if(bDisableExtraGainExp != FALSE)
; 1076 : 				{
; 1077 : 					iGAIN_EXP = 100; //100% Gain EXP from g_MLAddExperience (Default value) if using Master Seal and bDisableExtraGainExp = TRUE
; 1078 : 				}
; 1079 : 				//else will be X by ItemAddOption :)
; 1080 : 			}
; 1081 : 			else //in case of not Using Master Seal T_T = default EXP
; 1082 : 			{
; 1083 : 				iGAIN_EXP = 100; //100% Gain EXP from g_MLAddExperience (Default value)

  000e2	74 23		 je	 SHORT $LN3@gObjSealUs

; 1084 : 			}
; 1085 : 		}
; 1086 : 		else if(gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_ASCENSION) != FALSE || 

  000e4	eb 1b		 jmp	 SHORT $LN8@gObjSealUs
$LN10@gObjSealUs:

; 1087 : 				gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_WEALTH) != FALSE)

  000e6	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  000eb	83 c4 08	 add	 esp, 8
  000ee	84 c0		 test	 al, al
  000f0	75 15		 jne	 SHORT $LN3@gObjSealUs
  000f2	6a 66		 push	 102			; 00000066H
  000f4	56		 push	 esi
  000f5	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  000fa	83 c4 08	 add	 esp, 8
  000fd	84 c0		 test	 al, al
  000ff	75 06		 jne	 SHORT $LN3@gObjSealUs
$LN8@gObjSealUs:

; 1090 : 		}
; 1091 : 		else if(bDisableExtraGainExp != FALSE)

  00101	83 7d 10 00	 cmp	 DWORD PTR _bDisableExtraGainExp$[ebp], 0
  00105	74 05		 je	 SHORT $LN18@gObjSealUs
$LN3@gObjSealUs:

; 1088 : 		{
; 1089 : 			iGAIN_EXP = 100; //100% Gain EXP from gAddExperience (Default value) if using Master Seal and not Master Character

  00107	bf 64 00 00 00	 mov	 edi, 100		; 00000064H
$LN18@gObjSealUs:

; 1092 : 		{
; 1093 : 			iGAIN_EXP = 100; //100% Gain EXP from gAddExperience (Default value) if is not Master Character and bDisableExtraGainExp = TRUE
; 1094 : 		}
; 1095 : 
; 1096 : 		iCAL_EXP = iCAL_EXP * iGAIN_EXP / 100;

  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _iCAL_EXP$[ebp+4]
  0010f	51		 push	 ecx
  00110	8b c7		 mov	 eax, edi
  00112	99		 cdq
  00113	53		 push	 ebx
  00114	52		 push	 edx
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 __allmul
  0011b	6a 00		 push	 0
  0011d	6a 64		 push	 100			; 00000064H
  0011f	52		 push	 edx
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 __alldiv
  00126	8b 7d 0c	 mov	 edi, DWORD PTR _Experience$[ebp]
  00129	8b d8		 mov	 ebx, eax

; 1097 : 	}
; 1098 : 
; 1099 : 	Experience = iCAL_EXP; //Apply the new Experience

  0012b	89 1f		 mov	 DWORD PTR [edi], ebx
  0012d	89 57 04	 mov	 DWORD PTR [edi+4], edx
  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
  00132	89 55 fc	 mov	 DWORD PTR _iCAL_EXP$[ebp+4], edx
  00135	5b		 pop	 ebx

; 1100 : }

  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
$LN14@gObjSealUs:

; 1048 : 	{
; 1049 : 		iCAL_EXP = 0;

  0013a	33 db		 xor	 ebx, ebx
  0013c	89 5d fc	 mov	 DWORD PTR _iCAL_EXP$[ebp+4], ebx
$LN12@gObjSealUs:

; 1097 : 	}
; 1098 : 
; 1099 : 	Experience = iCAL_EXP; //Apply the new Experience

  0013f	8b 55 fc	 mov	 edx, DWORD PTR _iCAL_EXP$[ebp+4]
  00142	89 1f		 mov	 DWORD PTR [edi], ebx
  00144	89 57 04	 mov	 DWORD PTR [edi+4], edx
  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx

; 1100 : }

  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c3		 ret	 0
?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z ENDP	; gObjSealUserSetExp
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCBuffManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBuffManager@@UAEPAXI@Z PROC			; CBuffManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBuffManager@@UAE@XZ	; CBuffManager::~CBuffManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCBuffManager@@UAEPAXI@Z ENDP			; CBuffManager::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect
EXTRN	?AddBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CViewportSkillState::AddBuffEffect
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Ogtp
;	COMDAT ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_loc6$ = -8						; size = 4
_pEffectIndex$ = -4					; size = 4
_i$203068 = 8						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_btEffectType1$ = 16					; size = 1
_btEffectType2$ = 20					; size = 1
_iValue1$ = 24						; size = 4
_iValue2$ = 28						; size = 4
_iDuration$ = 32					; size = 4
?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z PROC ; CBuffManager::InsertEffect, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	57		 push	 edi

; 33   : 	LPBUFF_EFFECT_DATA pEffectIndex = 0; //loc2
; 34   : 	LPBUFF_EFFECT_DATA pEffectIndex2 = 0; //loc3
; 35   : 
; 36   : 	int loc4 = 0;
; 37   : 	int loc5 = 0;
; 38   : 	int loc6 = 0;
; 39   : 
; 40   : 	if(lpObj == NULL)

  00008	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000b	33 db		 xor	 ebx, ebx
  0000d	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00010	89 5d f8	 mov	 DWORD PTR _loc6$[ebp], ebx
  00013	3b fb		 cmp	 edi, ebx
  00015	75 0b		 jne	 SHORT $LN18@InsertEffe
$LN31@InsertEffe:
  00017	5f		 pop	 edi

; 41   : 	{
; 42   : 		return -1;

  00018	83 c8 ff	 or	 eax, -1
  0001b	5b		 pop	 ebx

; 115  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 1c 00	 ret	 28			; 0000001cH
$LN18@InsertEffe:

; 43   : 	}
; 44   : 
; 45   : 	if(lpObj->Connected < PLAYER_PLAYING)

  00022	83 7f 04 03	 cmp	 DWORD PTR [edi+4], 3

; 46   : 	{
; 47   : 		return -1;

  00026	7c ef		 jl	 SHORT $LN31@InsertEffe

; 48   : 	}
; 49   : 
; 50   : 	if(g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE)

  00028	56		 push	 esi
  00029	8b 75 0c	 mov	 esi, DWORD PTR _iEffectIndex$[ebp]
  0002c	56		 push	 esi
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00032	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  00037	84 c0		 test	 al, al

; 51   : 	{
; 52   : 		return -1;

  00039	74 12		 je	 SHORT $LN30@InsertEffe

; 53   : 	}
; 54   : 
; 55   : 	pEffectIndex = g_BuffEffect.GetBuffData(iEffectIndex);

  0003b	56		 push	 esi
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00041	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  00046	89 45 fc	 mov	 DWORD PTR _pEffectIndex$[ebp], eax

; 56   : 
; 57   : 	if(pEffectIndex == NULL)

  00049	3b c3		 cmp	 eax, ebx
  0004b	75 0c		 jne	 SHORT $LN15@InsertEffe
$LN30@InsertEffe:
  0004d	5e		 pop	 esi
  0004e	5f		 pop	 edi

; 58   : 	{
; 59   : 		return -1;

  0004f	83 c8 ff	 or	 eax, -1
  00052	5b		 pop	 ebx

; 115  : }

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 1c 00	 ret	 28			; 0000001cH
$LN15@InsertEffe:

; 60   : 	}
; 61   : 
; 62   : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00059	89 5d 08	 mov	 DWORD PTR _i$203068[ebp], ebx
  0005c	8d 9f 28 02 00
	00		 lea	 ebx, DWORD PTR [edi+552]
$LL14@InsertEffe:

; 63   : 	{
; 64   : 		if( lpObj->m_BuffEffectState[i].btBuffIndex != NULL )

  00062	0f b6 03	 movzx	 eax, BYTE PTR [ebx]
  00065	84 c0		 test	 al, al
  00067	74 3b		 je	 SHORT $LN13@InsertEffe

; 65   : 		{
; 66   : 			pEffectIndex2 = g_BuffEffect.GetBuffData(lpObj->m_BuffEffectState[i].btBuffIndex);

  00069	50		 push	 eax
  0006a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  0006f	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  00074	8b f0		 mov	 esi, eax

; 67   : 
; 68   : 			if(pEffectIndex2 == NULL) //season4 add-on (wz fix)

  00076	85 f6		 test	 esi, esi
  00078	74 2a		 je	 SHORT $LN13@InsertEffe

; 69   : 			{
; 70   : 				continue;
; 71   : 			}
; 72   : 			
; 73   : 			if(pEffectIndex2->btViewPortIndex == pEffectIndex->btViewPortIndex )

  0007a	8a 46 01	 mov	 al, BYTE PTR [esi+1]
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _pEffectIndex$[ebp]
  00080	3a 41 01	 cmp	 al, BYTE PTR [ecx+1]
  00083	75 13		 jne	 SHORT $LN9@InsertEffe

; 74   : 			{
; 75   : 				this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex);

  00085	0f b6 13	 movzx	 edx, BYTE PTR [ebx]
  00088	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	52		 push	 edx
  0008c	57		 push	 edi
  0008d	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect

; 76   : 				loc6 = pEffectIndex2->btIndex;

  00092	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00095	89 45 f8	 mov	 DWORD PTR _loc6$[ebp], eax
$LN9@InsertEffe:

; 77   : 			}
; 78   : 
; 79   : 			if(pEffectIndex2->btType == 0)
; 80   : 			{
; 81   : 				loc4 +=1;
; 82   : 			}
; 83   : 			else if(pEffectIndex2->btType == 1)
; 84   : 			{
; 85   : 				loc5 += 1;	
; 86   : 			}
; 87   : 
; 88   : 			if(i > lpObj->m_btViewStateCount)

  00098	0f b6 8f 27 02
	00 00		 movzx	 ecx, BYTE PTR [edi+551]
  0009f	39 4d 08	 cmp	 DWORD PTR _i$203068[ebp], ecx
  000a2	7f 0f		 jg	 SHORT $LN28@InsertEffe
$LN13@InsertEffe:

; 60   : 	}
; 61   : 
; 62   : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  000a4	8b 45 08	 mov	 eax, DWORD PTR _i$203068[ebp]
  000a7	40		 inc	 eax
  000a8	83 c3 14	 add	 ebx, 20			; 00000014H
  000ab	89 45 08	 mov	 DWORD PTR _i$203068[ebp], eax
  000ae	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b1	7c af		 jl	 SHORT $LL14@InsertEffe
$LN28@InsertEffe:

; 89   : 			{
; 90   : 				break;
; 91   : 			}
; 92   : 		}
; 93   : 	}
; 94   : 
; 95   : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  000b3	33 c0		 xor	 eax, eax
  000b5	8d 8f 28 02 00
	00		 lea	 ecx, DWORD PTR [edi+552]
  000bb	eb 03 8d 49 00	 npad	 5
$LL4@InsertEffe:

; 96   : 	{
; 97   : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  000c0	80 39 00	 cmp	 BYTE PTR [ecx], 0
  000c3	74 15		 je	 SHORT $LN24@InsertEffe

; 89   : 			{
; 90   : 				break;
; 91   : 			}
; 92   : 		}
; 93   : 	}
; 94   : 
; 95   : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  000c5	40		 inc	 eax
  000c6	83 c1 14	 add	 ecx, 20			; 00000014H
  000c9	83 f8 10	 cmp	 eax, 16			; 00000010H
  000cc	7c f2		 jl	 SHORT $LL4@InsertEffe

; 110  : 			break;
; 111  : 		}
; 112  : 	}
; 113  : 
; 114  : 	return loc6;

  000ce	8b 45 f8	 mov	 eax, DWORD PTR _loc6$[ebp]
  000d1	5e		 pop	 esi
  000d2	5f		 pop	 edi
  000d3	5b		 pop	 ebx

; 115  : }

  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 1c 00	 ret	 28			; 0000001cH
$LN24@InsertEffe:

; 98   : 		{
; 99   : 			lpObj->m_BuffEffectState[i].btBuffIndex = iEffectIndex;

  000da	8a 4d 0c	 mov	 cl, BYTE PTR _iEffectIndex$[ebp]

; 100  : 			lpObj->m_BuffEffectState[i].btVpIndex = pEffectIndex->btViewPortIndex;
; 101  : 			lpObj->m_BuffEffectState[i].btEffectType1 = btEffectType1;

  000dd	8b 5d 10	 mov	 ebx, DWORD PTR _btEffectType1$[ebp]
  000e0	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  000e3	8d 34 97	 lea	 esi, DWORD PTR [edi+edx*4]
  000e6	8b 55 fc	 mov	 edx, DWORD PTR _pEffectIndex$[ebp]
  000e9	88 8e 28 02 00
	00		 mov	 BYTE PTR [esi+552], cl
  000ef	0f b6 4a 01	 movzx	 ecx, BYTE PTR [edx+1]

; 102  : 			lpObj->m_BuffEffectState[i].btEffectType2 = btEffectType2;

  000f3	8a 55 14	 mov	 dl, BYTE PTR _btEffectType2$[ebp]
  000f6	88 8e 29 02 00
	00		 mov	 BYTE PTR [esi+553], cl

; 103  : 			lpObj->m_BuffEffectState[i].iValue1 = iValue1;

  000fc	8b 4d 18	 mov	 ecx, DWORD PTR _iValue1$[ebp]
  000ff	88 96 2b 02 00
	00		 mov	 BYTE PTR [esi+555], dl

; 104  : 			lpObj->m_BuffEffectState[i].iValue2 = iValue2;

  00105	8d 94 80 8c 00
	00 00		 lea	 edx, DWORD PTR [eax+eax*4+140]
  0010c	8b 45 1c	 mov	 eax, DWORD PTR _iValue2$[ebp]
  0010f	89 8e 2c 02 00
	00		 mov	 DWORD PTR [esi+556], ecx

; 105  : 			lpObj->m_BuffEffectState[i].iDuration = iDuration;

  00115	8b 4d 20	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  00118	88 9e 2a 02 00
	00		 mov	 BYTE PTR [esi+554], bl
  0011e	89 04 97	 mov	 DWORD PTR [edi+edx*4], eax
  00121	89 8e 38 02 00
	00		 mov	 DWORD PTR [esi+568], ecx

; 106  : 			lpObj->m_BuffEffectState[i].dwBuffTickCount = GetTickCount();

  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 107  : 
; 108  : 			g_ViewportSkillState.AddBuffEffect(lpObj,btEffectType1,iValue1); //first

  0012d	8b 55 18	 mov	 edx, DWORD PTR _iValue1$[ebp]
  00130	52		 push	 edx
  00131	53		 push	 ebx
  00132	57		 push	 edi
  00133	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00138	89 86 34 02 00
	00		 mov	 DWORD PTR [esi+564], eax
  0013e	e8 00 00 00 00	 call	 ?AddBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::AddBuffEffect

; 109  : 			g_ViewportSkillState.AddBuffEffect(lpObj,btEffectType2,iValue2); //second

  00143	8b 45 1c	 mov	 eax, DWORD PTR _iValue2$[ebp]
  00146	8b 4d 14	 mov	 ecx, DWORD PTR _btEffectType2$[ebp]
  00149	50		 push	 eax
  0014a	51		 push	 ecx
  0014b	57		 push	 edi
  0014c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00151	e8 00 00 00 00	 call	 ?AddBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::AddBuffEffect

; 110  : 			break;
; 111  : 		}
; 112  : 	}
; 113  : 
; 114  : 	return loc6;

  00156	8b 45 f8	 mov	 eax, DWORD PTR _loc6$[ebp]
  00159	5e		 pop	 esi
  0015a	5f		 pop	 edi
  0015b	5b		 pop	 ebx

; 115  : }

  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 1c 00	 ret	 28			; 0000001cH
?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ENDP ; CBuffManager::InsertEffect
_TEXT	ENDS
PUBLIC	?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z	; gObjSetItemEffect
EXTRN	?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z:PROC ; CItemAddOption::SearchItemEffectType1
EXTRN	?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z:PROC ; CItemAddOption::SearchForClearItemEffect
EXTRN	?g_ItemAddOption@@3VCItemAddOption@@A:BYTE	; g_ItemAddOption
; Function compile flags: /Ogtp
;	COMDAT ?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC	; gObjSetItemEffect, COMDAT

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 340  : 	if(lpObj == NULL)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	75 05		 jne	 SHORT $LN8@gObjSetIte
$LN6@gObjSetIte:

; 341  : 	{
; 342  : 		return 0;

  0000b	32 c0		 xor	 al, al
  0000d	5f		 pop	 edi

; 394  : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN8@gObjSetIte:

; 343  : 	}
; 344  : 
; 345  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00010	8b 07		 mov	 eax, DWORD PTR [edi]
  00012	85 c0		 test	 eax, eax
  00014	78 f5		 js	 SHORT $LN6@gObjSetIte
  00016	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001b	7f ee		 jg	 SHORT $LN6@gObjSetIte

; 346  : 	{
; 347  : 		return 0;
; 348  : 	}
; 349  : 
; 350  : 	int iEffectOption = 0; //loc1
; 351  : 	LPITEMEFFECT lpItemEffect = NULL; //loc2
; 352  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc3
; 353  : 
; 354  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  0001d	53		 push	 ebx
  0001e	8b 5d 0c	 mov	 ebx, DWORD PTR _iEffectIndex$[ebp]
  00021	53		 push	 ebx
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00027	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo

; 355  : 
; 356  : 	if(pEffect == NULL)

  0002c	85 c0		 test	 eax, eax
  0002e	75 06		 jne	 SHORT $LN5@gObjSetIte

; 357  : 	{
; 358  : 		return 0;

  00030	5b		 pop	 ebx
  00031	32 c0		 xor	 al, al
  00033	5f		 pop	 edi

; 394  : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN5@gObjSetIte:
  00036	56		 push	 esi

; 359  : 	}
; 360  : 
; 361  : 	iEffectOption = (pEffect->btItemType << 9) + pEffect->btItemIndex;

  00037	0f b6 70 02	 movzx	 esi, BYTE PTR [eax+2]
  0003b	0f b6 40 03	 movzx	 eax, BYTE PTR [eax+3]
  0003f	c1 e6 09	 shl	 esi, 9
  00042	03 f0		 add	 esi, eax

; 362  : 
; 363  : #ifdef DEBUG_CODE
; 364  : 	LogAddC(1,"Type: %d, Index: %d iEffectOption: %d",pEffect->btItemType,pEffect->btItemIndex,iEffectOption);
; 365  : #endif
; 366  : 
; 367  : 	if(g_ItemAddOption.SearchForClearItemEffect(iEffectOption) == FALSE)

  00044	56		 push	 esi
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  0004a	e8 00 00 00 00	 call	 ?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
  0004f	84 c0		 test	 al, al

; 368  : 	{
; 369  : 		return 0;

  00051	74 74		 je	 SHORT $LN3@gObjSetIte

; 370  : 	}
; 371  : 
; 372  : 	lpItemEffect = g_ItemAddOption.SearchItemEffectType1(iEffectOption);

  00053	56		 push	 esi
  00054	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00059	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  0005e	8b f0		 mov	 esi, eax

; 373  : 
; 374  : 	int InsertEffectResult = 0; //loc4
; 375  : 
; 376  : 	InsertEffectResult = g_BuffManager.InsertEffect(lpObj, iEffectIndex, lpItemEffect->wEffectType1, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue1, lpItemEffect->iEffectValue2, lpItemEffect->iEffectValidTime);

  00060	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00063	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00066	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00069	51		 push	 ecx
  0006a	0f b6 4e 04	 movzx	 ecx, BYTE PTR [esi+4]
  0006e	52		 push	 edx
  0006f	0f b6 56 02	 movzx	 edx, BYTE PTR [esi+2]
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	52		 push	 edx
  00076	53		 push	 ebx
  00077	57		 push	 edi
  00078	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0007d	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect

; 377  : 
; 378  : 	if(InsertEffectResult != -1)

  00082	83 f8 ff	 cmp	 eax, -1
  00085	74 40		 je	 SHORT $LN3@gObjSetIte

; 379  : 	{
; 380  : 		if(InsertEffectResult > 0)

  00087	85 c0		 test	 eax, eax
  00089	7e 16		 jle	 SHORT $LN2@gObjSetIte

; 381  : 		{
; 382  : 			GCUseBuffEffect(lpObj, InsertEffectResult, 2, lpItemEffect->wOptionType, 0, 0);

  0008b	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  0008e	6a 00		 push	 0
  00090	6a 00		 push	 0
  00092	51		 push	 ecx
  00093	6a 02		 push	 2
  00095	50		 push	 eax
  00096	57		 push	 edi
  00097	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  0009c	83 c4 18	 add	 esp, 24			; 00000018H

; 383  : 		}
; 384  : 		else

  0009f	eb 06		 jmp	 SHORT $LN1@gObjSetIte
$LN2@gObjSetIte:

; 385  : 		{
; 386  : 			lpObj->m_btViewStateCount++;

  000a1	fe 87 27 02 00
	00		 inc	 BYTE PTR [edi+551]
$LN1@gObjSetIte:

; 387  : 		}
; 388  : 
; 389  : 		GCUseBuffEffect(lpObj, iEffectIndex, 0, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, lpItemEffect->iEffectValidTime);

  000a7	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  000aa	0f b7 46 02	 movzx	 eax, WORD PTR [esi+2]
  000ae	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  000b1	52		 push	 edx
  000b2	50		 push	 eax
  000b3	51		 push	 ecx
  000b4	6a 00		 push	 0
  000b6	53		 push	 ebx
  000b7	57		 push	 edi
  000b8	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  000bd	83 c4 18	 add	 esp, 24			; 00000018H
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx

; 390  : 		return 1;

  000c2	b0 01		 mov	 al, 1
  000c4	5f		 pop	 edi

; 394  : }

  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
$LN3@gObjSetIte:
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx

; 391  : 	}
; 392  : 	
; 393  : 	return 0;

  000c9	32 c0		 xor	 al, al
  000cb	5f		 pop	 edi

; 394  : }

  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP	; gObjSetItemEffect
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
; Function compile flags: /Ogtp
;	COMDAT ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_btEffectType1$ = 16					; size = 1
_iValue1$ = 20						; size = 4
_btEffectType2$ = 24					; size = 1
_iValue2$ = 28						; size = 4
_iDuration$ = 32					; size = 4
?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z PROC ; gObjApplyBuffEffectDuration, COMDAT

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 399  : 	if(lpObj == NULL)

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	75 05		 jne	 SHORT $LN6@gObjApplyB@2
$LN4@gObjApplyB@2:

; 400  : 	{
; 401  : 		return 0;

  0000b	32 c0		 xor	 al, al
  0000d	5e		 pop	 esi

; 449  : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN6@gObjApplyB@2:

; 402  : 	}
; 403  : 
; 404  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	85 c0		 test	 eax, eax
  00014	78 f5		 js	 SHORT $LN4@gObjApplyB@2
  00016	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001b	7f ee		 jg	 SHORT $LN4@gObjApplyB@2

; 405  : 	{
; 406  : 		return 0;
; 407  : 	}
; 408  : 
; 409  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc1
; 410  : 
; 411  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  0001d	53		 push	 ebx
  0001e	57		 push	 edi
  0001f	8b 7d 0c	 mov	 edi, DWORD PTR _iEffectIndex$[ebp]
  00022	57		 push	 edi
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00028	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo

; 412  : 
; 413  : 	int InsertEffectResult = 0; //loc2
; 414  : 
; 415  : 	InsertEffectResult = g_BuffManager.InsertEffect(lpObj, iEffectIndex, btEffectType1, btEffectType2, iValue1, iValue2, iDuration);

  0002d	8b 4d 1c	 mov	 ecx, DWORD PTR _iValue2$[ebp]
  00030	8b 55 14	 mov	 edx, DWORD PTR _iValue1$[ebp]
  00033	8b d8		 mov	 ebx, eax
  00035	8b 45 20	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00038	50		 push	 eax
  00039	8b 45 18	 mov	 eax, DWORD PTR _btEffectType2$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR _btEffectType1$[ebp]
  00040	52		 push	 edx
  00041	50		 push	 eax
  00042	51		 push	 ecx
  00043	57		 push	 edi
  00044	56		 push	 esi
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0004a	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect

; 416  : 
; 417  : 	if(InsertEffectResult != -1)

  0004f	83 f8 ff	 cmp	 eax, -1
  00052	74 42		 je	 SHORT $LN3@gObjApplyB@2

; 418  : 	{
; 419  : 		if(InsertEffectResult > 0)

  00054	85 c0		 test	 eax, eax
  00056	7e 17		 jle	 SHORT $LN2@gObjApplyB@2

; 420  : 		{
; 421  : 			GCUseBuffEffect(lpObj, InsertEffectResult, 2, pEffect->btViewPortIndex, 0, 0);

  00058	0f b6 4b 01	 movzx	 ecx, BYTE PTR [ebx+1]
  0005c	6a 00		 push	 0
  0005e	6a 00		 push	 0
  00060	51		 push	 ecx
  00061	6a 02		 push	 2
  00063	50		 push	 eax
  00064	56		 push	 esi
  00065	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  0006a	83 c4 18	 add	 esp, 24			; 00000018H

; 422  : 		}
; 423  : 		else

  0006d	eb 06		 jmp	 SHORT $LN1@gObjApplyB@2
$LN2@gObjApplyB@2:

; 424  : 		{
; 425  : 			lpObj->m_btViewStateCount++;

  0006f	fe 86 27 02 00
	00		 inc	 BYTE PTR [esi+551]
$LN1@gObjApplyB@2:

; 426  : 		}
; 427  : 
; 428  : 		GCUseBuffEffect(lpObj, iEffectIndex, 0, pEffect->btViewPortIndex, btEffectType1, iDuration);

  00075	8b 55 20	 mov	 edx, DWORD PTR _iDuration$[ebp]
  00078	0f b6 4d 10	 movzx	 ecx, BYTE PTR _btEffectType1$[ebp]
  0007c	0f b6 43 01	 movzx	 eax, BYTE PTR [ebx+1]
  00080	52		 push	 edx
  00081	51		 push	 ecx
  00082	50		 push	 eax
  00083	6a 00		 push	 0
  00085	57		 push	 edi
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	5f		 pop	 edi
  00090	5b		 pop	 ebx

; 429  : #if(DEBUG_BUFF_EFFECT == 1)
; 430  : 	char szTemp[256];
; 431  : 	sprintf(szTemp, "[BUFFMANAGER] Insert Common-Buff Name %s Effect1[%d] Value1[%d] Effect2[%d] Value2[%d] Dur[%d]", pEffect->szBuffName, btEffectType1, iValue1, btEffectType2, iValue2, iDuration);
; 432  : 	LogAddTD(szTemp);
; 433  : 
; 434  : 	switch(lpObj->Type)
; 435  : 	{
; 436  : 	case OBJ_USER:
; 437  : 		GCServerMsgStringSend(szTemp, lpObj->m_Index, 1);
; 438  : 		break;
; 439  : 	case OBJ_MONSTER:
; 440  : 	case OBJ_NPC:
; 441  : 		GCServerMsgStringSend(szTemp, lpObj->lpAttackObj->m_Index, 1);
; 442  : 		break;
; 443  : 	}
; 444  : #endif
; 445  : 		return 1;

  00091	b0 01		 mov	 al, 1
  00093	5e		 pop	 esi

; 449  : }

  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN3@gObjApplyB@2:
  00096	5f		 pop	 edi
  00097	5b		 pop	 ebx

; 446  : 	}
; 447  : 
; 448  : 	return 0;

  00098	32 c0		 xor	 al, al
  0009a	5e		 pop	 esi

; 449  : }

  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ENDP ; gObjApplyBuffEffectDuration
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
; Function compile flags: /Ogtp
;	COMDAT ?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iDuration$ = 16					; size = 4
?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z PROC ; gObjApplyBuffEffectItemPeriod, COMDAT

; 453  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 454  : 	if(lpObj == NULL)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	75 05		 jne	 SHORT $LN8@gObjApplyB@3
$LN6@gObjApplyB@3:

; 455  : 	{
; 456  : 		return 0;

  0000b	32 c0		 xor	 al, al
  0000d	5f		 pop	 edi

; 520  : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN8@gObjApplyB@3:

; 457  : 	}
; 458  : 
; 459  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00010	8b 07		 mov	 eax, DWORD PTR [edi]
  00012	85 c0		 test	 eax, eax
  00014	78 f5		 js	 SHORT $LN6@gObjApplyB@3
  00016	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001b	7f ee		 jg	 SHORT $LN6@gObjApplyB@3

; 460  : 	{
; 461  : 		return 0;
; 462  : 	}
; 463  : 
; 464  : 	int iEffectOption = 0; //loc1
; 465  : 	LPITEMEFFECT lpItemEffect = NULL; //loc2
; 466  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc3
; 467  : 
; 468  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  0001d	53		 push	 ebx
  0001e	8b 5d 0c	 mov	 ebx, DWORD PTR _iEffectIndex$[ebp]
  00021	53		 push	 ebx
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00027	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo

; 469  : 
; 470  : 	if(pEffect == NULL)

  0002c	85 c0		 test	 eax, eax
  0002e	75 06		 jne	 SHORT $LN5@gObjApplyB@3

; 471  : 	{
; 472  : 		return 0;

  00030	5b		 pop	 ebx
  00031	32 c0		 xor	 al, al
  00033	5f		 pop	 edi

; 520  : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN5@gObjApplyB@3:
  00036	56		 push	 esi

; 473  : 	}
; 474  : 
; 475  : 	iEffectOption = (pEffect->btItemType << 9) + pEffect->btItemIndex;

  00037	0f b6 70 02	 movzx	 esi, BYTE PTR [eax+2]
  0003b	0f b6 40 03	 movzx	 eax, BYTE PTR [eax+3]
  0003f	c1 e6 09	 shl	 esi, 9
  00042	03 f0		 add	 esi, eax

; 476  : 
; 477  : 	if(g_ItemAddOption.SearchForClearItemEffect(iEffectOption) == FALSE)

  00044	56		 push	 esi
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  0004a	e8 00 00 00 00	 call	 ?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
  0004f	84 c0		 test	 al, al

; 478  : 	{
; 479  : 		return 0;

  00051	74 74		 je	 SHORT $LN3@gObjApplyB@3

; 480  : 	}
; 481  : 
; 482  : 	lpItemEffect = g_ItemAddOption.SearchItemEffectType1(iEffectOption);

  00053	56		 push	 esi
  00054	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00059	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1

; 483  : 
; 484  : 	int InsertEffectResult = 0; //loc4
; 485  : 
; 486  : 	InsertEffectResult = g_BuffManager.InsertEffect(lpObj, iEffectIndex, lpItemEffect->wEffectType1, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue1, lpItemEffect->iEffectValue2, iDuration);

  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  00061	51		 push	 ecx
  00062	8b f0		 mov	 esi, eax
  00064	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00067	0f b6 4e 04	 movzx	 ecx, BYTE PTR [esi+4]
  0006b	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0006e	52		 push	 edx
  0006f	0f b6 56 02	 movzx	 edx, BYTE PTR [esi+2]
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	52		 push	 edx
  00076	53		 push	 ebx
  00077	57		 push	 edi
  00078	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0007d	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect

; 487  : 
; 488  : 	if(InsertEffectResult != -1)

  00082	83 f8 ff	 cmp	 eax, -1
  00085	74 40		 je	 SHORT $LN3@gObjApplyB@3

; 489  : 	{
; 490  : 		if(InsertEffectResult > 0)

  00087	85 c0		 test	 eax, eax
  00089	7e 16		 jle	 SHORT $LN2@gObjApplyB@3

; 491  : 		{
; 492  : 			GCUseBuffEffect(lpObj, InsertEffectResult, 2, lpItemEffect->wOptionType, 0, 0);

  0008b	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  0008e	6a 00		 push	 0
  00090	6a 00		 push	 0
  00092	51		 push	 ecx
  00093	6a 02		 push	 2
  00095	50		 push	 eax
  00096	57		 push	 edi
  00097	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  0009c	83 c4 18	 add	 esp, 24			; 00000018H

; 493  : 		}
; 494  : 		else

  0009f	eb 06		 jmp	 SHORT $LN1@gObjApplyB@3
$LN2@gObjApplyB@3:

; 495  : 		{
; 496  : 			lpObj->m_btViewStateCount++;

  000a1	fe 87 27 02 00
	00		 inc	 BYTE PTR [edi+551]
$LN1@gObjApplyB@3:

; 497  : 		}
; 498  : 
; 499  : 		GCUseBuffEffect(lpObj, iEffectIndex, 0, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, iDuration);

  000a7	8b 55 10	 mov	 edx, DWORD PTR _iDuration$[ebp]
  000aa	0f b7 46 02	 movzx	 eax, WORD PTR [esi+2]
  000ae	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  000b1	52		 push	 edx
  000b2	50		 push	 eax
  000b3	51		 push	 ecx
  000b4	6a 00		 push	 0
  000b6	53		 push	 ebx
  000b7	57		 push	 edi
  000b8	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  000bd	83 c4 18	 add	 esp, 24			; 00000018H
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx

; 500  : #if(DEBUG_BUFF_EFFECT == 1)
; 501  : 	char szTemp[256];
; 502  : 	sprintf(szTemp, "[BUFFMANAGER] Insert CashShop-Buff Name %s ItemAddOption-IDX[%d] Effect1[%d] Value1[%d] Effect2[%d] Value2[%d] Dur[%d]", pEffect->szBuffName, iEffectOption, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2, iDuration);
; 503  : 	LogAddTD(szTemp);
; 504  : 
; 505  : 	switch(lpObj->Type)
; 506  : 	{
; 507  : 	case OBJ_USER:
; 508  : 		GCServerMsgStringSend(szTemp, lpObj->m_Index, 1);
; 509  : 		break;
; 510  : 	case OBJ_MONSTER:
; 511  : 	case OBJ_NPC:
; 512  : 		GCServerMsgStringSend(szTemp, lpObj->lpAttackObj->m_Index, 1);
; 513  : 		break;
; 514  : 	}
; 515  : #endif
; 516  : 		return 1;

  000c2	b0 01		 mov	 al, 1
  000c4	5f		 pop	 edi

; 520  : }

  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
$LN3@gObjApplyB@3:
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx

; 517  : 	}
; 518  : 
; 519  : 	return 0;

  000c9	32 c0		 xor	 al, al
  000cb	5f		 pop	 edi

; 520  : }

  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ENDP ; gObjApplyBuffEffectItemPeriod
_TEXT	ENDS
PUBLIC	?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z	; gObjRemoveBuffEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC	; gObjRemoveBuffEffect, COMDAT

; 524  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 525  : 	if(lpObj == NULL)

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	75 05		 jne	 SHORT $LN5@gObjRemove
$LN3@gObjRemove:

; 526  : 	{
; 527  : 		return 0;

  0000b	32 c0		 xor	 al, al
  0000d	5e		 pop	 esi

; 569  : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN5@gObjRemove:

; 528  : 	}
; 529  : 
; 530  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	85 c0		 test	 eax, eax
  00014	78 f5		 js	 SHORT $LN3@gObjRemove
  00016	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001b	7f ee		 jg	 SHORT $LN3@gObjRemove

; 531  : 	{
; 532  : 		return 0;
; 533  : 	}
; 534  : 
; 535  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc1
; 536  : 
; 537  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  0001d	53		 push	 ebx
  0001e	57		 push	 edi
  0001f	8b 7d 0c	 mov	 edi, DWORD PTR _iEffectIndex$[ebp]
  00022	57		 push	 edi
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00028	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  0002d	8b d8		 mov	 ebx, eax

; 538  : 
; 539  : 	if(pEffect == NULL)

  0002f	85 db		 test	 ebx, ebx

; 540  : 	{
; 541  : 		return 0;

  00031	74 3e		 je	 SHORT $LN1@gObjRemove

; 542  : 	}
; 543  : 
; 544  : 	if(g_BuffManager.ClearEffect(lpObj, iEffectIndex) == TRUE)

  00033	57		 push	 edi
  00034	56		 push	 esi
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0003a	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  0003f	3c 01		 cmp	 al, 1
  00041	75 2e		 jne	 SHORT $LN1@gObjRemove

; 545  : 	{
; 546  : 		g_BuffManager.RemoveIceEffect(lpObj, iEffectIndex); //For Ice Effect Only

  00043	57		 push	 edi
  00044	56		 push	 esi
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0004a	e8 00 00 00 00	 call	 ?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z ; CBuffManager::RemoveIceEffect

; 547  : 		lpObj->m_btViewStateCount--;

  0004f	fe 8e 27 02 00
	00		 dec	 BYTE PTR [esi+551]

; 548  : 		GCUseBuffEffect(lpObj, iEffectIndex, 1, 0, pEffect->btViewPortIndex, 0);

  00055	0f b6 4b 01	 movzx	 ecx, BYTE PTR [ebx+1]
  00059	6a 00		 push	 0
  0005b	51		 push	 ecx
  0005c	6a 00		 push	 0
  0005e	6a 01		 push	 1
  00060	57		 push	 edi
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00067	83 c4 18	 add	 esp, 24			; 00000018H
  0006a	5f		 pop	 edi
  0006b	5b		 pop	 ebx

; 549  : #if(DEBUG_BUFF_EFFECT == 1)
; 550  : 	char szTemp[256];
; 551  : 	sprintf(szTemp, "[BUFFMANAGER] Remove Buff Name %s", pEffect->szBuffName);
; 552  : 	LogAddTD(szTemp);
; 553  : 
; 554  : 	switch(lpObj->Type)
; 555  : 	{
; 556  : 	case OBJ_USER:
; 557  : 		GCServerMsgStringSend(szTemp, lpObj->m_Index, 1);
; 558  : 		break;
; 559  : 	case OBJ_MONSTER:
; 560  : 	case OBJ_NPC:
; 561  : 		GCServerMsgStringSend(szTemp, lpObj->lpAttackObj->m_Index, 1);
; 562  : 		break;
; 563  : 	}
; 564  : #endif
; 565  : 		return 1;

  0006c	b0 01		 mov	 al, 1
  0006e	5e		 pop	 esi

; 569  : }

  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
$LN1@gObjRemove:
  00071	5f		 pop	 edi
  00072	5b		 pop	 ebx

; 566  : 	}
; 567  : 
; 568  : 	return 0;

  00073	32 c0		 xor	 al, al
  00075	5e		 pop	 esi

; 569  : }

  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP	; gObjRemoveBuffEffect
_TEXT	ENDS
PUBLIC	?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjClearStandardBuffEffect
; Function compile flags: /Ogtp
;	COMDAT ?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectClearType$ = 12					; size = 4
?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC ; gObjClearStandardBuffEffect, COMDAT

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 574  : 	if(lpObj == NULL)

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00007	85 db		 test	 ebx, ebx

; 575  : 	{
; 576  : 		return 0;

  00009	0f 84 45 01 00
	00		 je	 $LN38@gObjClearS

; 577  : 	}
; 578  : 
; 579  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  0000f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00011	85 c0		 test	 eax, eax
  00013	0f 88 3b 01 00
	00		 js	 $LN38@gObjClearS
  00019	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001e	0f 8f 30 01 00
	00		 jg	 $LN38@gObjClearS

; 582  : 	}
; 583  : 
; 584  : 	int RemovedCount = 0; //ebp-4
; 585  : 	int i = 0; //ebp-8
; 586  : 	
; 587  : 	switch(iEffectClearType)

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _iEffectClearType$[ebp]
  00027	8d 41 fe	 lea	 eax, DWORD PTR [ecx-2]
  0002a	56		 push	 esi
  0002b	57		 push	 edi
  0002c	83 f8 05	 cmp	 eax, 5
  0002f	0f 87 f3 00 00
	00		 ja	 $LN3@gObjClearS
  00035	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN56@gObjClearS[eax*4]
$LN35@gObjClearS:

; 588  : 	{
; 589  : 	case AT_SIEGE_GENERAL: //Siege ??
; 590  : 		{
; 591  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  0003c	33 ff		 xor	 edi, edi
  0003e	8d b3 28 02 00
	00		 lea	 esi, DWORD PTR [ebx+552]
$LL34@gObjClearS:

; 592  : 			{
; 593  : 				switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  00044	8a 06		 mov	 al, BYTE PTR [esi]
  00046	8d 48 f2	 lea	 ecx, DWORD PTR [eax-14]
  00049	80 f9 03	 cmp	 cl, 3
  0004c	77 15		 ja	 SHORT $LN33@gObjClearS

; 594  : 				{
; 595  : 				case AT_WATCHING_TOWER:
; 596  : 				case AT_ATTACKING_GUILD1:
; 597  : 				case AT_ATTACKING_GUILD2:
; 598  : 				case AT_ATTACKING_GUILD3:
; 599  : 					{
; 600  : 						if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  0004e	0f b6 d0	 movzx	 edx, al
  00051	52		 push	 edx
  00052	53		 push	 ebx
  00053	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00058	83 c4 08	 add	 esp, 8
  0005b	3c 01		 cmp	 al, 1
  0005d	75 04		 jne	 SHORT $LN33@gObjClearS

; 601  : 						{
; 602  : 							RemovedCount++;
; 603  : 							i--;

  0005f	4f		 dec	 edi
  00060	83 ee 14	 sub	 esi, 20			; 00000014H
$LN33@gObjClearS:

; 588  : 	{
; 589  : 	case AT_SIEGE_GENERAL: //Siege ??
; 590  : 		{
; 591  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00063	47		 inc	 edi
  00064	83 c6 14	 add	 esi, 20			; 00000014H
  00067	83 ff 10	 cmp	 edi, 16			; 00000010H
  0006a	7c d8		 jl	 SHORT $LL34@gObjClearS

; 604  : 						}
; 605  : 					}
; 606  : 					break;
; 607  : 				default:
; 608  : 					{
; 609  : 						break;
; 610  : 					}
; 611  : 					break;
; 612  : 				}
; 613  : 			}
; 614  : 		}
; 615  : 		break;

  0006c	e9 c3 00 00 00	 jmp	 $LN36@gObjClearS
$LN26@gObjClearS:

; 616  : 	case AT_PCBANG_GENERAL://PcBang General
; 617  : 		{
; 618  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00071	33 f6		 xor	 esi, esi
  00073	8d bb 28 02 00
	00		 lea	 edi, DWORD PTR [ebx+552]
  00079	8d a4 24 00 00
	00 00		 npad	 7
$LL25@gObjClearS:

; 619  : 			{
; 620  : 				switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  00080	8a 07		 mov	 al, BYTE PTR [edi]
  00082	3c 1d		 cmp	 al, 29			; 0000001dH
  00084	72 1d		 jb	 SHORT $LN24@gObjClearS
  00086	3c 1f		 cmp	 al, 31			; 0000001fH
  00088	76 04		 jbe	 SHORT $LN20@gObjClearS
  0008a	3c 68		 cmp	 al, 104			; 00000068H
  0008c	75 15		 jne	 SHORT $LN24@gObjClearS
$LN20@gObjClearS:

; 621  : 				{
; 622  : 				case AT_PCBANG_SEAL_OF_ASCENSION:
; 623  : 				case AT_PCBANG_SEAL_OF_WEALTH:
; 624  : 				case AT_PCBANG_SEAL_OF_SUSTENANCE:
; 625  : 				case AT_PCBANG_SEAL_OF_BALANCE: //season 4.5 add-on
; 626  : 					{
; 627  : 						if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  0008e	0f b6 c0	 movzx	 eax, al
  00091	50		 push	 eax
  00092	53		 push	 ebx
  00093	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00098	83 c4 08	 add	 esp, 8
  0009b	3c 01		 cmp	 al, 1
  0009d	75 04		 jne	 SHORT $LN24@gObjClearS

; 628  : 						{
; 629  : 							RemovedCount++;
; 630  : 							i--;

  0009f	4e		 dec	 esi
  000a0	83 ef 14	 sub	 edi, 20			; 00000014H
$LN24@gObjClearS:

; 616  : 	case AT_PCBANG_GENERAL://PcBang General
; 617  : 		{
; 618  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  000a3	46		 inc	 esi
  000a4	83 c7 14	 add	 edi, 20			; 00000014H
  000a7	83 fe 10	 cmp	 esi, 16			; 00000010H
  000aa	7c d4		 jl	 SHORT $LL25@gObjClearS

; 631  : 						}
; 632  : 					}
; 633  : 					break;
; 634  : 				default:
; 635  : 					{
; 636  : 						break;
; 637  : 					}
; 638  : 					break;
; 639  : 				}
; 640  : 			}
; 641  : 		}
; 642  : 		break;

  000ac	e9 83 00 00 00	 jmp	 $LN36@gObjClearS
$LN17@gObjClearS:

; 643  : 	case AT_GENERAL_NOPERIOD_ITEM: //CashShop + PcBang General
; 644  : 		{
; 645  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  000b1	33 ff		 xor	 edi, edi
  000b3	8d b3 28 02 00
	00		 lea	 esi, DWORD PTR [ebx+552]
  000b9	8d a4 24 00 00
	00 00		 npad	 7
$LL16@gObjClearS:

; 646  : 			{
; 647  : 				switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  000c0	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  000c3	8d 48 e3	 lea	 ecx, DWORD PTR [eax-29]
  000c6	81 f9 a6 00 00
	00		 cmp	 ecx, 166		; 000000a6H
  000cc	77 0e		 ja	 SHORT $LN10@gObjClearS
  000ce	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN51@gObjClearS[ecx]
  000d5	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN57@gObjClearS[ecx*4]
$LN10@gObjClearS:

; 648  : 				{
; 649  : 				case AT_PCBANG_SEAL_OF_ASCENSION:
; 650  : 				case AT_PCBANG_SEAL_OF_WEALTH:
; 651  : 				case AT_PCBANG_SEAL_OF_SUSTENANCE:
; 652  : 
; 653  : 				case AT_CSHOP_SEAL_OF_ASCENSION:
; 654  : 				case AT_CSHOP_SEAL_OF_WEALTH:
; 655  : 				case AT_CSHOP_SEAL_OF_SUSTENANCE:
; 656  : 				case AT_CSHOP_SEAL_OF_MOBILITY:
; 657  : 
; 658  : 				case AT_CSHOP_SCROLL_OF_QUICKNESS:
; 659  : 				case AT_CSHOP_SCROLL_OF_DEFENSE:
; 660  : 				case AT_CSHOP_SCROLL_OF_WRATH:
; 661  : 				case AT_CSHOP_SCROLL_OF_WIZARDRY:
; 662  : 				case AT_CSHOP_SCROLL_OF_HEALTH:
; 663  : 				case AT_CSHOP_SCROLL_OF_MANA:
; 664  : 
; 665  : 				case AT_CSHOP_LEAP_OF_STRENGTH:
; 666  : 				case AT_CSHOP_LEAP_OF_QUICKNESS:
; 667  : 				case AT_CSHOP_LEAP_OF_HEALTH:
; 668  : 				case AT_CSHOP_LEAP_OF_ENERGY:
; 669  : 				case AT_CSHOP_LEAP_OF_CONTROL:
; 670  : 
; 671  : 				case AT_CSHOP_SEAL_OF_HEALING:
; 672  : 				case AT_CSHOP_SEAL_OF_DIVINITY:
; 673  : 
; 674  : 				case AT_CSHOP_SCROLL_OF_BATTLE:
; 675  : 				case AT_CSHOP_SCROLL_OF_STRENGTHENER:
; 676  : 
; 677  : 					//Season 4.5 add-on
; 678  : 				case AT_CSHOP_GUARDIAN_AMULET:
; 679  : 				case AT_CSHOP_PROTECT_AMULET:
; 680  : 				case AT_CSHOP_MASTER_SEAL_OF_ASCENSION:
; 681  : 				case AT_CSHOP_MASTER_SEAL_OF_WEALTH:
; 682  : 				case AT_PCBANG_SEAL_OF_BALANCE:
; 683  : 				case AT_BT_BROTHERHOOD_BUFF:
; 684  : 
; 685  : 				case AT_VIP_SILVER:
; 686  : 				case AT_VIP_GOLD:
; 687  : 				case AT_VIP_PLATINUM:
; 688  : 				case AT_GUILD_BUFF:
; 689  : 				case AT_NPC_BUFF_EXP:
; 690  : 				case AT_NPC_BUFF_DAMAGE:
; 691  : 				case AT_NPC_BUFF_DEFENCE:
; 692  : 				case AT_NPC_BUFF_EXL_CRIT:
; 693  : 				case AT_NPC_BUFF_DROP:
; 694  : 				case AT_NPC_BUFF_DOUBLE:
; 695  : 				case AT_NOOB_BUFF:
; 696  : 				case AT_QUEST_BUFF:
; 697  : 				case AT_DUNGEON_BUFF:
; 698  : 				case AT_MARRI_BUFF:
; 699  : 				case AT_MARRI_BUFF2:
; 700  : 				//
; 701  : 				case AT_MMOTOP_BUFF:
; 702  : 				case AT_QTOP_BUFF:
; 703  : 					break;
; 704  : 				default:
; 705  : 					{
; 706  : 						if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  000dc	50		 push	 eax
  000dd	53		 push	 ebx
  000de	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  000e3	83 c4 08	 add	 esp, 8
  000e6	3c 01		 cmp	 al, 1
  000e8	75 04		 jne	 SHORT $LN15@gObjClearS

; 707  : 						{
; 708  : 							RemovedCount++;
; 709  : 							i--;

  000ea	4f		 dec	 edi
  000eb	83 ee 14	 sub	 esi, 20			; 00000014H
$LN15@gObjClearS:

; 643  : 	case AT_GENERAL_NOPERIOD_ITEM: //CashShop + PcBang General
; 644  : 		{
; 645  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  000ee	47		 inc	 edi
  000ef	83 c6 14	 add	 esi, 20			; 00000014H
  000f2	83 ff 10	 cmp	 edi, 16			; 00000010H
  000f5	7c c9		 jl	 SHORT $LL16@gObjClearS

; 710  : 						}
; 711  : 					}
; 712  : 					break;
; 713  : 				}
; 714  : 			}
; 715  : 		}
; 716  : 		break;

  000f7	eb 3b		 jmp	 SHORT $LN36@gObjClearS
$LN8@gObjClearS:

; 717  : 	case AT_GENERAL: //All??
; 718  : 		{
; 719  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  000f9	33 f6		 xor	 esi, esi
  000fb	8d bb 28 02 00
	00		 lea	 edi, DWORD PTR [ebx+552]
$LL7@gObjClearS:

; 720  : 			{
; 721  : 				if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00101	0f b6 17	 movzx	 edx, BYTE PTR [edi]
  00104	52		 push	 edx
  00105	53		 push	 ebx
  00106	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  0010b	83 c4 08	 add	 esp, 8
  0010e	3c 01		 cmp	 al, 1
  00110	75 04		 jne	 SHORT $LN6@gObjClearS

; 722  : 				{
; 723  : 					RemovedCount++;
; 724  : 					i--;

  00112	4e		 dec	 esi
  00113	83 ef 14	 sub	 edi, 20			; 00000014H
$LN6@gObjClearS:

; 717  : 	case AT_GENERAL: //All??
; 718  : 		{
; 719  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00116	46		 inc	 esi
  00117	83 c7 14	 add	 edi, 20			; 00000014H
  0011a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0011d	7c e2		 jl	 SHORT $LL7@gObjClearS

; 725  : 				}
; 726  : 			}
; 727  : 			lpObj->m_btViewStateCount = 0;

  0011f	c6 83 27 02 00
	00 00		 mov	 BYTE PTR [ebx+551], 0

; 728  : 		}
; 729  : 		break;

  00126	eb 0c		 jmp	 SHORT $LN36@gObjClearS
$LN3@gObjClearS:

; 730  : 	default: //Other
; 731  : 		{
; 732  : 			RemovedCount = g_BuffManager.SearchAndClearEffect(lpObj, iEffectClearType);

  00128	51		 push	 ecx
  00129	53		 push	 ebx
  0012a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0012f	e8 00 00 00 00	 call	 ?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchAndClearEffect
$LN36@gObjClearS:

; 733  : 		}
; 734  : 		break;
; 735  : 	}
; 736  : 
; 737  : 	if(lpObj->m_btViewStateCount < 0 || lpObj->m_btViewStateCount > MAX_STATE_COUNT)

  00134	80 bb 27 02 00
	00 10		 cmp	 BYTE PTR [ebx+551], 16	; 00000010H
  0013b	5f		 pop	 edi
  0013c	5e		 pop	 esi
  0013d	76 07		 jbe	 SHORT $LN2@gObjClearS

; 738  : 	{
; 739  : 		lpObj->m_btViewStateCount = 0;

  0013f	c6 83 27 02 00
	00 00		 mov	 BYTE PTR [ebx+551], 0
$LN2@gObjClearS:

; 740  : 	}
; 741  : 
; 742  : 	gObjNotifyUserViewportBuffEffect(lpObj);

  00146	53		 push	 ebx
  00147	e8 00 00 00 00	 call	 ?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUserViewportBuffEffect
  0014c	83 c4 04	 add	 esp, 4

; 743  : 	return 1;

  0014f	b0 01		 mov	 al, 1
  00151	5b		 pop	 ebx

; 744  : }

  00152	5d		 pop	 ebp
  00153	c3		 ret	 0
$LN38@gObjClearS:

; 580  : 	{
; 581  : 		return 0;

  00154	32 c0		 xor	 al, al
  00156	5b		 pop	 ebx

; 744  : }

  00157	5d		 pop	 ebp
  00158	c3		 ret	 0
  00159	8d 49 00	 npad	 3
$LN56@gObjClearS:
  0015c	00 00 00 00	 DD	 $LN8@gObjClearS
  00160	00 00 00 00	 DD	 $LN3@gObjClearS
  00164	00 00 00 00	 DD	 $LN3@gObjClearS
  00168	00 00 00 00	 DD	 $LN26@gObjClearS
  0016c	00 00 00 00	 DD	 $LN17@gObjClearS
  00170	00 00 00 00	 DD	 $LN35@gObjClearS
$LN57@gObjClearS:
  00174	00 00 00 00	 DD	 $LN15@gObjClearS
  00178	00 00 00 00	 DD	 $LN10@gObjClearS
$LN51@gObjClearS:
  0017c	00		 DB	 0
  0017d	00		 DB	 0
  0017e	00		 DB	 0
  0017f	01		 DB	 1
  00180	01		 DB	 1
  00181	01		 DB	 1
  00182	01		 DB	 1
  00183	01		 DB	 1
  00184	01		 DB	 1
  00185	01		 DB	 1
  00186	01		 DB	 1
  00187	00		 DB	 0
  00188	00		 DB	 0
  00189	00		 DB	 0
  0018a	00		 DB	 0
  0018b	00		 DB	 0
  0018c	00		 DB	 0
  0018d	00		 DB	 0
  0018e	00		 DB	 0
  0018f	00		 DB	 0
  00190	00		 DB	 0
  00191	00		 DB	 0
  00192	00		 DB	 0
  00193	00		 DB	 0
  00194	00		 DB	 0
  00195	00		 DB	 0
  00196	01		 DB	 1
  00197	01		 DB	 1
  00198	01		 DB	 1
  00199	01		 DB	 1
  0019a	01		 DB	 1
  0019b	01		 DB	 1
  0019c	01		 DB	 1
  0019d	01		 DB	 1
  0019e	01		 DB	 1
  0019f	01		 DB	 1
  001a0	01		 DB	 1
  001a1	01		 DB	 1
  001a2	01		 DB	 1
  001a3	01		 DB	 1
  001a4	01		 DB	 1
  001a5	01		 DB	 1
  001a6	01		 DB	 1
  001a7	01		 DB	 1
  001a8	01		 DB	 1
  001a9	01		 DB	 1
  001aa	01		 DB	 1
  001ab	01		 DB	 1
  001ac	01		 DB	 1
  001ad	01		 DB	 1
  001ae	01		 DB	 1
  001af	01		 DB	 1
  001b0	01		 DB	 1
  001b1	01		 DB	 1
  001b2	01		 DB	 1
  001b3	01		 DB	 1
  001b4	01		 DB	 1
  001b5	01		 DB	 1
  001b6	00		 DB	 0
  001b7	00		 DB	 0
  001b8	00		 DB	 0
  001b9	00		 DB	 0
  001ba	01		 DB	 1
  001bb	01		 DB	 1
  001bc	01		 DB	 1
  001bd	01		 DB	 1
  001be	01		 DB	 1
  001bf	01		 DB	 1
  001c0	01		 DB	 1
  001c1	01		 DB	 1
  001c2	00		 DB	 0
  001c3	00		 DB	 0
  001c4	00		 DB	 0
  001c5	00		 DB	 0
  001c6	01		 DB	 1
  001c7	00		 DB	 0
  001c8	01		 DB	 1
  001c9	01		 DB	 1
  001ca	01		 DB	 1
  001cb	01		 DB	 1
  001cc	01		 DB	 1
  001cd	01		 DB	 1
  001ce	01		 DB	 1
  001cf	01		 DB	 1
  001d0	01		 DB	 1
  001d1	01		 DB	 1
  001d2	01		 DB	 1
  001d3	01		 DB	 1
  001d4	01		 DB	 1
  001d5	01		 DB	 1
  001d6	01		 DB	 1
  001d7	01		 DB	 1
  001d8	01		 DB	 1
  001d9	01		 DB	 1
  001da	01		 DB	 1
  001db	01		 DB	 1
  001dc	01		 DB	 1
  001dd	01		 DB	 1
  001de	01		 DB	 1
  001df	01		 DB	 1
  001e0	01		 DB	 1
  001e1	01		 DB	 1
  001e2	01		 DB	 1
  001e3	01		 DB	 1
  001e4	01		 DB	 1
  001e5	01		 DB	 1
  001e6	01		 DB	 1
  001e7	01		 DB	 1
  001e8	01		 DB	 1
  001e9	01		 DB	 1
  001ea	01		 DB	 1
  001eb	01		 DB	 1
  001ec	01		 DB	 1
  001ed	01		 DB	 1
  001ee	01		 DB	 1
  001ef	01		 DB	 1
  001f0	01		 DB	 1
  001f1	01		 DB	 1
  001f2	01		 DB	 1
  001f3	01		 DB	 1
  001f4	01		 DB	 1
  001f5	01		 DB	 1
  001f6	01		 DB	 1
  001f7	01		 DB	 1
  001f8	01		 DB	 1
  001f9	01		 DB	 1
  001fa	01		 DB	 1
  001fb	01		 DB	 1
  001fc	01		 DB	 1
  001fd	01		 DB	 1
  001fe	01		 DB	 1
  001ff	01		 DB	 1
  00200	01		 DB	 1
  00201	01		 DB	 1
  00202	01		 DB	 1
  00203	01		 DB	 1
  00204	01		 DB	 1
  00205	01		 DB	 1
  00206	01		 DB	 1
  00207	01		 DB	 1
  00208	01		 DB	 1
  00209	01		 DB	 1
  0020a	01		 DB	 1
  0020b	01		 DB	 1
  0020c	01		 DB	 1
  0020d	00		 DB	 0
  0020e	00		 DB	 0
  0020f	00		 DB	 0
  00210	00		 DB	 0
  00211	00		 DB	 0
  00212	00		 DB	 0
  00213	00		 DB	 0
  00214	00		 DB	 0
  00215	00		 DB	 0
  00216	00		 DB	 0
  00217	00		 DB	 0
  00218	00		 DB	 0
  00219	01		 DB	 1
  0021a	01		 DB	 1
  0021b	01		 DB	 1
  0021c	01		 DB	 1
  0021d	00		 DB	 0
  0021e	00		 DB	 0
  0021f	00		 DB	 0
  00220	00		 DB	 0
  00221	00		 DB	 0
  00222	00		 DB	 0
?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP ; gObjClearStandardBuffEffect
_TEXT	ENDS
PUBLIC	?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjUpdateSpecificBuffEffectDuration
; Function compile flags: /Ogtp
;	COMDAT ?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iDuration$ = 16					; size = 4
?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z PROC ; gObjUpdateSpecificBuffEffectDuration, COMDAT

; 764  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 765  : 	if(lpObj == NULL)

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	75 05		 jne	 SHORT $LN8@gObjUpdate@2
$LN17@gObjUpdate@2:

; 766  : 	{
; 767  : 		return 0;

  0000b	32 c0		 xor	 al, al
  0000d	5e		 pop	 esi

; 796  : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN8@gObjUpdate@2:

; 768  : 	}
; 769  : 
; 770  : 	if(lpObj->Connected < PLAYER_PLAYING)

  00010	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3

; 771  : 	{
; 772  : 		return 0;

  00014	7c f5		 jl	 SHORT $LN17@gObjUpdate@2

; 773  : 	}
; 774  : 
; 775  : 	DWORD dwTick = GetTickCount(); //loc1

  00016	57		 push	 edi
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 776  : 
; 777  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0001d	0f b6 96 27 02
	00 00		 movzx	 edx, BYTE PTR [esi+551]
  00024	8b 7d 0c	 mov	 edi, DWORD PTR _iEffectIndex$[ebp]
  00027	33 c0		 xor	 eax, eax
  00029	8d 8e 28 02 00
	00		 lea	 ecx, DWORD PTR [esi+552]
  0002f	53		 push	 ebx
$LL6@gObjUpdate@2:

; 778  : 	{
; 779  : 		if(i > lpObj->m_btViewStateCount)

  00030	3b c2		 cmp	 eax, edx
  00032	7f 10		 jg	 SHORT $LN4@gObjUpdate@2

; 780  : 		{
; 781  : 			return 0;
; 782  : 		}
; 783  : 
; 784  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  00034	0f b6 19	 movzx	 ebx, BYTE PTR [ecx]
  00037	3b df		 cmp	 ebx, edi
  00039	74 10		 je	 SHORT $LN13@gObjUpdate@2

; 776  : 
; 777  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0003b	40		 inc	 eax
  0003c	83 c1 14	 add	 ecx, 20			; 00000014H
  0003f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00042	7c ec		 jl	 SHORT $LL6@gObjUpdate@2
$LN4@gObjUpdate@2:
  00044	5b		 pop	 ebx
  00045	5f		 pop	 edi

; 793  : 		}
; 794  : 	}
; 795  : 	return 0;

  00046	32 c0		 xor	 al, al
  00048	5e		 pop	 esi

; 796  : }

  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
$LN13@gObjUpdate@2:

; 785  : 		{
; 786  : 			lpObj->m_BuffEffectState[i].iDuration += iDuration;

  0004b	8b 4d 10	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  0004e	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00051	01 8c 86 38 02
	00 00		 add	 DWORD PTR [esi+eax*4+568], ecx
  00058	8d 84 86 38 02
	00 00		 lea	 eax, DWORD PTR [esi+eax*4+568]

; 787  : 
; 788  : 			if(lpObj->m_BuffEffectState[i].iDuration < 0)

  0005f	79 0a		 jns	 SHORT $LN1@gObjUpdate@2

; 789  : 			{
; 790  : 				gObjRemoveBuffEffect(lpObj, iEffectIndex);

  00061	57		 push	 edi
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00068	83 c4 08	 add	 esp, 8
$LN1@gObjUpdate@2:

; 791  : 			}
; 792  : 			return 1;

  0006b	5b		 pop	 ebx
  0006c	5f		 pop	 edi
  0006d	b0 01		 mov	 al, 1
  0006f	5e		 pop	 esi

; 796  : }

  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z ENDP ; gObjUpdateSpecificBuffEffectDuration
_TEXT	ENDS
PUBLIC	?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z ; gObjGiveRewardBuff
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
;	COMDAT ?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z
_TEXT	SEGMENT
_iIndex$203423 = -4					; size = 4
_lpObj$ = 8						; size = 4
_dis$ = 12						; size = 4
_count$ = 16						; size = 4
_EffectIndex$ = 20					; size = 4
_btEffectType1$ = 24					; size = 1
_iValue1$ = 28						; size = 4
_btEffectType2$ = 32					; size = 1
_iValue2$ = 36						; size = 4
_iDuration$ = 40					; size = 4
?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z PROC ; gObjGiveRewardBuff, COMDAT

; 1015 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1016 : 	if(lpObj == NULL)

  00004	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00008	75 06		 jne	 SHORT $LN7@gObjGiveRe

; 1017 : 	{
; 1018 : 		return FALSE;

  0000a	33 c0		 xor	 eax, eax

; 1033 : 				}
; 1034 : 			}
; 1035 : 		}
; 1036 : 	}
; 1037 : 	return TRUE;
; 1038 : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN7@gObjGiveRe:
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi

; 1019 : 	}
; 1020 : 
; 1021 : 	for(int iIndex = OBJ_STARTUSERINDZT; iIndex < OBJMAX; iIndex++)

  00013	8b 7d 10	 mov	 edi, DWORD PTR _count$[ebp]
  00016	c7 45 fc b0 36
	00 00		 mov	 DWORD PTR _iIndex$203423[ebp], 14000 ; 000036b0H
  0001d	bb 00 a7 40 09	 mov	 ebx, 155232000		; 0940a700H
$LL6@gObjGiveRe:

; 1022 : 	{
; 1023 : 		LPOBJ lpTargetObj = &gObj[iIndex];

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1024 : 
; 1025 : 		if(lpTargetObj->Type == OBJ_USER && gObjIsConnected(iIndex) != FALSE)

  00027	66 83 7c 03 68
	01		 cmp	 WORD PTR [ebx+eax+104], 1
  0002d	8d 34 03	 lea	 esi, DWORD PTR [ebx+eax]
  00030	75 53		 jne	 SHORT $LN5@gObjGiveRe
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _iIndex$203423[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0003b	83 c4 04	 add	 esp, 4
  0003e	85 c0		 test	 eax, eax
  00040	74 43		 je	 SHORT $LN5@gObjGiveRe

; 1026 : 		{
; 1027 : 			if(lpTargetObj->MapNumber == lpObj->MapNumber)

  00042	8a 96 49 01 00
	00		 mov	 dl, BYTE PTR [esi+329]
  00048	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0004b	3a 90 49 01 00
	00		 cmp	 dl, BYTE PTR [eax+329]
  00051	75 32		 jne	 SHORT $LN5@gObjGiveRe

; 1028 : 			{
; 1029 : 				if(gObjCalDistance(lpObj, lpTargetObj) < dis)

  00053	56		 push	 esi
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0005a	83 c4 08	 add	 esp, 8
  0005d	3b 45 0c	 cmp	 eax, DWORD PTR _dis$[ebp]
  00060	7d 23		 jge	 SHORT $LN5@gObjGiveRe

; 1030 : 				{
; 1031 : 					gObjApplyBuffEffectDuration(lpTargetObj, EffectIndex, btEffectType1, iValue1, btEffectType2, iValue2, iDuration);

  00062	8b 45 28	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00065	8b 4d 24	 mov	 ecx, DWORD PTR _iValue2$[ebp]
  00068	8b 55 20	 mov	 edx, DWORD PTR _btEffectType2$[ebp]
  0006b	50		 push	 eax
  0006c	8b 45 1c	 mov	 eax, DWORD PTR _iValue1$[ebp]
  0006f	51		 push	 ecx
  00070	8b 4d 18	 mov	 ecx, DWORD PTR _btEffectType1$[ebp]
  00073	52		 push	 edx
  00074	8b 55 14	 mov	 edx, DWORD PTR _EffectIndex$[ebp]
  00077	50		 push	 eax
  00078	51		 push	 ecx
  00079	52		 push	 edx
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00080	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1032 : 					*count+= 1;

  00083	ff 07		 inc	 DWORD PTR [edi]
$LN5@gObjGiveRe:

; 1019 : 	}
; 1020 : 
; 1021 : 	for(int iIndex = OBJ_STARTUSERINDZT; iIndex < OBJMAX; iIndex++)

  00085	b8 01 00 00 00	 mov	 eax, 1
  0008a	01 45 fc	 add	 DWORD PTR _iIndex$203423[ebp], eax
  0008d	81 c3 50 2b 00
	00		 add	 ebx, 11088		; 00002b50H
  00093	81 fb 80 d7 e9
	09		 cmp	 ebx, 166320000		; 09e9d780H
  00099	7c 87		 jl	 SHORT $LL6@gObjGiveRe
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx

; 1033 : 				}
; 1034 : 			}
; 1035 : 		}
; 1036 : 	}
; 1037 : 	return TRUE;
; 1038 : }

  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z ENDP ; gObjGiveRewardBuff
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z ; gObjApplyBuffEffectDurationForInGameShop
EXTRN	?gObjCalCharacter@@YAXH@Z:PROC			; gObjCalCharacter
; Function compile flags: /Ogtp
;	COMDAT ?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_iDuration$ = 16					; size = 4
?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z PROC ; gObjApplyBuffEffectDurationForInGameShop, COMDAT

; 1103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 1104 : 	if(lpObj == NULL)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	75 05		 jne	 SHORT $LN8@gObjApplyB@4
$LN6@gObjApplyB@4:

; 1105 : 		return false;

  0000b	32 c0		 xor	 al, al
  0000d	5f		 pop	 edi

; 1146 : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN8@gObjApplyB@4:

; 1106 : 
; 1107 : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00010	8b 07		 mov	 eax, DWORD PTR [edi]
  00012	85 c0		 test	 eax, eax
  00014	78 f5		 js	 SHORT $LN6@gObjApplyB@4
  00016	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001b	7f ee		 jg	 SHORT $LN6@gObjApplyB@4

; 1108 : 		return false;
; 1109 : 
; 1110 : 	int iItemCode = 0;
; 1111 : 	LPITEMEFFECT lpItemEffectInfo = NULL;
; 1112 : 	LPBUFF_EFFECT_DATE lpBuffData = NULL;
; 1113 : 
; 1114 : 	lpBuffData = (LPBUFF_EFFECT_DATE)g_BuffManager.GetBuffInfo(wItemCode);	//nowork

  0001d	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  00021	53		 push	 ebx
  00022	50		 push	 eax
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00028	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  0002d	8b d8		 mov	 ebx, eax

; 1115 : 
; 1116 : 	if(lpBuffData == NULL)

  0002f	85 db		 test	 ebx, ebx
  00031	75 06		 jne	 SHORT $LN5@gObjApplyB@4

; 1117 : 		return false;

  00033	5b		 pop	 ebx
  00034	32 c0		 xor	 al, al
  00036	5f		 pop	 edi

; 1146 : }

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
$LN5@gObjApplyB@4:

; 1118 : 
; 1119 : 	iItemCode = (lpBuffData->btItemType << 9) + lpBuffData->btItemIndex;

  00039	0f b6 4b 03	 movzx	 ecx, BYTE PTR [ebx+3]
  0003d	56		 push	 esi
  0003e	0f b6 73 02	 movzx	 esi, BYTE PTR [ebx+2]
  00042	c1 e6 09	 shl	 esi, 9
  00045	03 f1		 add	 esi, ecx

; 1120 : 
; 1121 : 	if(g_ItemAddOption.SearchForClearItemEffect(iItemCode) == FALSE)

  00047	56		 push	 esi
  00048	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  0004d	e8 00 00 00 00	 call	 ?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
  00052	84 c0		 test	 al, al

; 1122 : 		return false;

  00054	0f 84 85 00 00
	00		 je	 $LN3@gObjApplyB@4

; 1123 : 
; 1124 : 	lpItemEffectInfo = g_ItemAddOption.SearchItemEffectType1(iItemCode);

  0005a	56		 push	 esi
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00060	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1

; 1125 : 
; 1126 : 	int iRemoveBuffIndex = 0;
; 1127 : 
; 1128 : 	iRemoveBuffIndex = g_BuffManager.InsertEffect(lpObj, lpBuffData->btIndex, lpItemEffectInfo->wEffectType1, lpItemEffectInfo->wEffectType2, lpItemEffectInfo->iEffectValue1, lpItemEffectInfo->iEffectValue2, iDuration);

  00065	8b 55 10	 mov	 edx, DWORD PTR _iDuration$[ebp]
  00068	52		 push	 edx
  00069	8b f0		 mov	 esi, eax
  0006b	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0006e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00071	0f b6 56 04	 movzx	 edx, BYTE PTR [esi+4]
  00075	50		 push	 eax
  00076	0f b6 46 02	 movzx	 eax, BYTE PTR [esi+2]
  0007a	51		 push	 ecx
  0007b	0f b6 0b	 movzx	 ecx, BYTE PTR [ebx]
  0007e	52		 push	 edx
  0007f	50		 push	 eax
  00080	51		 push	 ecx
  00081	57		 push	 edi
  00082	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00087	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect

; 1129 : 
; 1130 : 	if(iRemoveBuffIndex != -1)

  0008c	83 f8 ff	 cmp	 eax, -1
  0008f	74 4e		 je	 SHORT $LN3@gObjApplyB@4

; 1131 : 	{
; 1132 : 		if(iRemoveBuffIndex > 0)

  00091	85 c0		 test	 eax, eax
  00093	7e 16		 jle	 SHORT $LN2@gObjApplyB@4

; 1133 : 		{
; 1134 : 			GCUseBuffEffect(lpObj, iRemoveBuffIndex, 2, lpItemEffectInfo->wOptionType, 0, 0);

  00095	0f b7 16	 movzx	 edx, WORD PTR [esi]
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	52		 push	 edx
  0009d	6a 02		 push	 2
  0009f	50		 push	 eax
  000a0	57		 push	 edi
  000a1	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  000a6	83 c4 18	 add	 esp, 24			; 00000018H

; 1135 : 		}
; 1136 : 		else

  000a9	eb 11		 jmp	 SHORT $LN1@gObjApplyB@4
$LN2@gObjApplyB@4:

; 1137 : 		{
; 1138 : 			lpObj->m_btViewStateCount++;
; 1139 : 			gObjCalCharacter(lpObj->m_Index);

  000ab	8b 07		 mov	 eax, DWORD PTR [edi]
  000ad	fe 87 27 02 00
	00		 inc	 BYTE PTR [edi+551]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter
  000b9	83 c4 04	 add	 esp, 4
$LN1@gObjApplyB@4:

; 1140 : 		}
; 1141 : 
; 1142 : 		GCUseBuffEffect(lpObj, lpBuffData->btIndex, 0, lpItemEffectInfo->wOptionType, lpItemEffectInfo->wEffectType1, iDuration);

  000bc	8b 4d 10	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  000bf	0f b7 56 02	 movzx	 edx, WORD PTR [esi+2]
  000c3	0f b7 06	 movzx	 eax, WORD PTR [esi]
  000c6	51		 push	 ecx
  000c7	0f b6 0b	 movzx	 ecx, BYTE PTR [ebx]
  000ca	52		 push	 edx
  000cb	50		 push	 eax
  000cc	6a 00		 push	 0
  000ce	51		 push	 ecx
  000cf	57		 push	 edi
  000d0	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  000d5	83 c4 18	 add	 esp, 24			; 00000018H
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx

; 1143 : 		return true;

  000da	b0 01		 mov	 al, 1
  000dc	5f		 pop	 edi

; 1146 : }

  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
$LN3@gObjApplyB@4:
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx

; 1144 : 	}
; 1145 : 	return false;

  000e1	32 c0		 xor	 al, al
  000e3	5f		 pop	 edi

; 1146 : }

  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z ENDP ; gObjApplyBuffEffectDurationForInGameShop
_TEXT	ENDS
PUBLIC	?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z	; gObjBuffEffectUseProc
; Function compile flags: /Ogtp
;	COMDAT ?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z PROC	; gObjBuffEffectUseProc, COMDAT

; 283  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 284  : 	if(lpObj == NULL)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	0f 84 c9 00 00
	00		 je	 $LN15@gObjBuffEf

; 285  : 	{
; 286  : 		return;
; 287  : 	}
; 288  : 
; 289  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  0000f	8b 07		 mov	 eax, DWORD PTR [edi]
  00011	85 c0		 test	 eax, eax
  00013	0f 88 bf 00 00
	00		 js	 $LN15@gObjBuffEf
  00019	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  0001e	0f 8f b4 00 00
	00		 jg	 $LN15@gObjBuffEf

; 290  : 	{
; 291  : 		return;
; 292  : 	}
; 293  : 
; 294  : 	if( (lpObj->Type == OBJ_USER && lpObj->Connected >= PLAYER_PLAYING) || lpObj->Type == OBJ_MONSTER) //Connected Users or Monsters General

  00024	0f b7 47 68	 movzx	 eax, WORD PTR [edi+104]
  00028	83 f8 01	 cmp	 eax, 1
  0002b	75 06		 jne	 SHORT $LN12@gObjBuffEf
  0002d	83 7f 04 03	 cmp	 DWORD PTR [edi+4], 3
  00031	7d 09		 jge	 SHORT $LN13@gObjBuffEf
$LN12@gObjBuffEf:
  00033	83 f8 02	 cmp	 eax, 2
  00036	0f 85 9c 00 00
	00		 jne	 $LN15@gObjBuffEf
$LN13@gObjBuffEf:
  0003c	53		 push	 ebx
  0003d	56		 push	 esi

; 295  : 	{
; 296  : 		for(int i = 0; i < MAX_STATE_COUNT; i++)

  0003e	8d b7 2a 02 00
	00		 lea	 esi, DWORD PTR [edi+554]
  00044	bb 10 00 00 00	 mov	 ebx, 16			; 00000010H
  00049	8d a4 24 00 00
	00 00		 npad	 7
$LL11@gObjBuffEf:

; 297  : 		{
; 298  : 			if(lpObj->m_BuffEffectState[i].iDuration == -10) //Infinite Buff

  00050	8b 46 0e	 mov	 eax, DWORD PTR [esi+14]
  00053	83 f8 f6	 cmp	 eax, -10		; fffffff6H
  00056	74 74		 je	 SHORT $LN10@gObjBuffEf

; 299  : 			{
; 300  : 				continue;
; 301  : 			}
; 302  : 
; 303  : 			if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL) //No Buff in the Slot

  00058	8a 4e fe	 mov	 cl, BYTE PTR [esi-2]
  0005b	84 c9		 test	 cl, cl
  0005d	74 6d		 je	 SHORT $LN10@gObjBuffEf

; 304  : 			{
; 305  : 				continue;
; 306  : 			}
; 307  : 
; 308  : 			switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  0005f	80 f9 37	 cmp	 cl, 55			; 00000037H
  00062	74 1e		 je	 SHORT $LN4@gObjBuffEf

; 316  : 					}
; 317  : 				}
; 318  : 				break;
; 319  : 			default:
; 320  : 				{
; 321  : 					g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType1, lpObj->m_BuffEffectState[i].iValue1);

  00064	0f b6 0e	 movzx	 ecx, BYTE PTR [esi]
  00067	8b 46 02	 mov	 eax, DWORD PTR [esi+2]
  0006a	50		 push	 eax
  0006b	51		 push	 ecx
  0006c	57		 push	 edi
  0006d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00072	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType

; 322  : 					g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType2, lpObj->m_BuffEffectState[i].iValue2);

  00077	8b 56 06	 mov	 edx, DWORD PTR [esi+6]
  0007a	0f b6 46 01	 movzx	 eax, BYTE PTR [esi+1]
  0007e	52		 push	 edx
  0007f	50		 push	 eax

; 323  : 				}
; 324  : 				break;

  00080	eb 28		 jmp	 SHORT $LN23@gObjBuffEf
$LN4@gObjBuffEf:

; 309  : 			{
; 310  : 			case AT_POISON: //55	27	255	255	Poison	1	1	1	Poisoned status of condition
; 311  : 				{
; 312  : 					if((lpObj->m_BuffEffectState[i].iDuration % 3) == 0) //Rand type??

  00082	99		 cdq
  00083	b9 03 00 00 00	 mov	 ecx, 3
  00088	f7 f9		 idiv	 ecx
  0008a	85 d2		 test	 edx, edx
  0008c	75 27		 jne	 SHORT $LN3@gObjBuffEf

; 313  : 					{
; 314  : 						g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType1, lpObj->m_BuffEffectState[i].iValue1);

  0008e	8b 56 02	 mov	 edx, DWORD PTR [esi+2]
  00091	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00094	52		 push	 edx
  00095	50		 push	 eax
  00096	57		 push	 edi
  00097	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  0009c	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType

; 315  : 						g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType2, lpObj->m_BuffEffectState[i].iValue2);

  000a1	8b 4e 06	 mov	 ecx, DWORD PTR [esi+6]
  000a4	0f b6 56 01	 movzx	 edx, BYTE PTR [esi+1]
  000a8	51		 push	 ecx
  000a9	52		 push	 edx
$LN23@gObjBuffEf:
  000aa	57		 push	 edi
  000ab	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  000b0	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType
$LN3@gObjBuffEf:

; 325  : 			}
; 326  : 			
; 327  : 			lpObj->m_BuffEffectState[i].iDuration--; //Reduce Time per Second

  000b5	ff 4e 0e	 dec	 DWORD PTR [esi+14]

; 328  : 
; 329  : 			if(lpObj->m_BuffEffectState[i].iDuration <= 0) //Clear if Zero!

  000b8	83 7e 0e 00	 cmp	 DWORD PTR [esi+14], 0
  000bc	7f 0e		 jg	 SHORT $LN10@gObjBuffEf

; 330  : 			{
; 331  : 				gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex);

  000be	0f b6 46 fe	 movzx	 eax, BYTE PTR [esi-2]
  000c2	50		 push	 eax
  000c3	57		 push	 edi
  000c4	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  000c9	83 c4 08	 add	 esp, 8
$LN10@gObjBuffEf:

; 295  : 	{
; 296  : 		for(int i = 0; i < MAX_STATE_COUNT; i++)

  000cc	83 c6 14	 add	 esi, 20			; 00000014H
  000cf	4b		 dec	 ebx
  000d0	0f 85 7a ff ff
	ff		 jne	 $LL11@gObjBuffEf
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
$LN15@gObjBuffEf:
  000d8	5f		 pop	 edi

; 332  : 			}
; 333  : 		}
; 334  : 	}
; 335  : }

  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z ENDP	; gObjBuffEffectUseProc
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_BuffManager@@YAXXZ
text$yc	SEGMENT
??__Eg_BuffManager@@YAXXZ PROC				; `dynamic initializer for 'g_BuffManager'', COMDAT

; 18   : CBuffManager g_BuffManager;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00005	e8 00 00 00 00	 call	 ??0CBuffManager@@QAE@XZ	; CBuffManager::CBuffManager
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_BuffManager@@YAXXZ ; `dynamic atexit destructor for 'g_BuffManager''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_BuffManager@@YAXXZ ENDP				; `dynamic initializer for 'g_BuffManager''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_BuffManager@@YAXXZ
text$yd	SEGMENT
??__Fg_BuffManager@@YAXXZ PROC				; `dynamic atexit destructor for 'g_BuffManager'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00005	e9 00 00 00 00	 jmp	 ??1CBuffManager@@UAE@XZ	; CBuffManager::~CBuffManager
??__Fg_BuffManager@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_BuffManager''
text$yd	ENDS
PUBLIC	?g_BuffManager@@3VCBuffManager@@A		; g_BuffManager
_BSS	SEGMENT
?g_BuffManager@@3VCBuffManager@@A DD 01H DUP (?)	; g_BuffManager
_BSS	ENDS
CRT$XCU	SEGMENT
_g_BuffManager$initializer$ DD FLAT:??__Eg_BuffManager@@YAXXZ
CRT$XCU	ENDS
END
