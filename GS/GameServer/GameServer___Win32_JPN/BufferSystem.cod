; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\BufferSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_BufferSystem@@3VBufferSystem@@A		; g_BufferSystem
_BSS	SEGMENT
?g_BufferSystem@@3VBufferSystem@@A DB 074H DUP (?)	; g_BufferSystem
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@BufferSystem@@QAEXXZ			; BufferSystem::Init
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\buffersystem.cpp
;	COMDAT ?Init@BufferSystem@@QAEXXZ
_TEXT	SEGMENT
?Init@BufferSystem@@QAEXXZ PROC				; BufferSystem::Init, COMDAT
; _this$ = ecx

; 21   : 	this->Enable = false;

  00000	33 c0		 xor	 eax, eax
  00002	88 01		 mov	 BYTE PTR [ecx], al

; 22   : 	this->NPC_Class = 0;

  00004	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 23   : 	this->NPC_Map = 0;

  00007	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 24   : 	this->NPC_X = 0;

  0000a	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 25   : 	this->NPC_Y = 0;

  0000d	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 26   : 
; 27   : 	this->Buff1_ZenMoney = 0;

  00010	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 28   : 	this->Buff1_JewelOfBless = 0;

  00013	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 29   : 	this->Buff1_JewelOfSoul = 0;

  00016	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 30   : 	this->Buff1_Bonus = 0;

  00019	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 31   : 
; 32   : 	this->Buff2_ZenMoney = 0;

  0001c	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 33   : 	this->Buff2_JewelOfBless = 0;

  0001f	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 34   : 	this->Buff2_JewelOfSoul = 0;

  00022	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 35   : 	this->Buff2_Bonus = 0;

  00025	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 36   : 
; 37   : 	this->Buff3_ZenMoney = 0;

  00028	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 38   : 	this->Buff3_JewelOfBless = 0;

  0002b	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 39   : 	this->Buff3_JewelOfSoul = 0;

  0002e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 40   : 	this->Buff3_Bonus = 0;

  00031	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 41   : 
; 42   : 	this->Buff4_ZenMoney = 0;

  00034	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 43   : 	this->Buff4_JewelOfBless = 0;

  00037	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 44   : 	this->Buff4_JewelOfSoul = 0;

  0003a	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 45   : 	this->Buff4_Bonus = 0;

  0003d	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 46   : 
; 47   : 	this->Buff5_ZenMoney = 0;

  00040	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 48   : 	this->Buff5_JewelOfBless = 0;

  00043	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 49   : 	this->Buff5_JewelOfSoul = 0;

  00046	89 41 5c	 mov	 DWORD PTR [ecx+92], eax

; 50   : 	this->Buff5_Bonus = 0;

  00049	89 41 60	 mov	 DWORD PTR [ecx+96], eax

; 51   : 
; 52   : 	this->Buff6_ZenMoney = 0;

  0004c	89 41 64	 mov	 DWORD PTR [ecx+100], eax

; 53   : 	this->Buff6_JewelOfBless = 0;

  0004f	89 41 68	 mov	 DWORD PTR [ecx+104], eax

; 54   : 	this->Buff6_JewelOfSoul = 0;

  00052	89 41 6c	 mov	 DWORD PTR [ecx+108], eax

; 55   : 	this->Buff6_Bonus = 0;

  00055	89 41 70	 mov	 DWORD PTR [ecx+112], eax

; 56   : }

  00058	c3		 ret	 0
?Init@BufferSystem@@QAEXXZ ENDP				; BufferSystem::Init
_TEXT	ENDS
PUBLIC	??_C@_0M@GGJLOKLG@Buff6_Bonus?$AA@		; `string'
PUBLIC	??_C@_0BC@FFMFCOAG@Buff6_JewelOfSoul?$AA@	; `string'
PUBLIC	??_C@_0BD@CFGNFCBC@Buff6_JewelOfBless?$AA@	; `string'
PUBLIC	??_C@_0P@KCGGJLMI@Buff6_ZenMoney?$AA@		; `string'
PUBLIC	??_C@_0M@OIBEONFF@Buff5_Bonus?$AA@		; `string'
PUBLIC	??_C@_0BC@CJKEALNN@Buff5_JewelOfSoul?$AA@	; `string'
PUBLIC	??_C@_0BD@DEBADIGL@Buff5_JewelOfBless?$AA@	; `string'
PUBLIC	??_C@_0P@DLIEPNMJ@Buff5_ZenMoney?$AA@		; `string'
PUBLIC	??_C@_0M@CELOONML@Buff4_Bonus?$AA@		; `string'
PUBLIC	??_C@_0BC@LEKLOKKL@Buff4_JewelOfSoul?$AA@	; `string'
PUBLIC	??_C@_0BD@INOLODID@Buff4_JewelOfBless?$AA@	; `string'
PUBLIC	??_C@_0P@PKAKCCAJ@Buff4_ZenMoney?$AA@		; `string'
PUBLIC	??_C@_0M@COHLOENC@Buff3_Bonus?$AA@		; `string'
PUBLIC	??_C@_0BC@NBGGEAGL@Buff3_JewelOfSoul?$AA@	; `string'
PUBLIC	??_C@_0BD@BGOKOMJJ@Buff3_JewelOfBless?$AA@	; `string'
PUBLIC	??_C@_0P@NDDBDHIK@Buff3_ZenMoney?$AA@		; `string'
PUBLIC	??_C@_0M@OCNBOEEM@Buff2_Bonus?$AA@		; `string'
PUBLIC	??_C@_0BC@EMGJKBBN@Buff2_JewelOfSoul?$AA@	; `string'
PUBLIC	??_C@_0BD@KPBBDHHB@Buff2_JewelOfBless?$AA@	; `string'
PUBLIC	??_C@_0P@BCLPOIEK@Buff2_ZenMoney?$AA@		; `string'
PUBLIC	??_C@_0M@GMFOODKP@Buff1_Bonus?$AA@		; `string'
PUBLIC	??_C@_0BC@DAAIIEMG@Buff1_JewelOfSoul?$AA@	; `string'
PUBLIC	??_C@_0BD@LOGMFNAI@Buff1_JewelOfBless?$AA@	; `string'
PUBLIC	??_C@_0P@ILFNIOEL@Buff1_ZenMoney?$AA@		; `string'
PUBLIC	??_C@_05MGEEICMI@NPC_Y?$AA@			; `string'
PUBLIC	??_C@_05NPFPLDIJ@NPC_X?$AA@			; `string'
PUBLIC	??_C@_07LJMEGBCH@NPC_Map?$AA@			; `string'
PUBLIC	??_C@_09JIOKDDGI@NPC_Class?$AA@			; `string'
PUBLIC	??_C@_06CNKIADGI@ZtTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	?Read@BufferSystem@@QAEXPAD@Z			; BufferSystem::Read
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0M@GGJLOKLG@Buff6_Bonus?$AA@
CONST	SEGMENT
??_C@_0M@GGJLOKLG@Buff6_Bonus?$AA@ DB 'Buff6_Bonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FFMFCOAG@Buff6_JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0BC@FFMFCOAG@Buff6_JewelOfSoul?$AA@ DB 'Buff6_JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CFGNFCBC@Buff6_JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0BD@CFGNFCBC@Buff6_JewelOfBless?$AA@ DB 'Buff6_JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCGGJLMI@Buff6_ZenMoney?$AA@
CONST	SEGMENT
??_C@_0P@KCGGJLMI@Buff6_ZenMoney?$AA@ DB 'Buff6_ZenMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OIBEONFF@Buff5_Bonus?$AA@
CONST	SEGMENT
??_C@_0M@OIBEONFF@Buff5_Bonus?$AA@ DB 'Buff5_Bonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CJKEALNN@Buff5_JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0BC@CJKEALNN@Buff5_JewelOfSoul?$AA@ DB 'Buff5_JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DEBADIGL@Buff5_JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0BD@DEBADIGL@Buff5_JewelOfBless?$AA@ DB 'Buff5_JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLIEPNMJ@Buff5_ZenMoney?$AA@
CONST	SEGMENT
??_C@_0P@DLIEPNMJ@Buff5_ZenMoney?$AA@ DB 'Buff5_ZenMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CELOONML@Buff4_Bonus?$AA@
CONST	SEGMENT
??_C@_0M@CELOONML@Buff4_Bonus?$AA@ DB 'Buff4_Bonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LEKLOKKL@Buff4_JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0BC@LEKLOKKL@Buff4_JewelOfSoul?$AA@ DB 'Buff4_JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@INOLODID@Buff4_JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0BD@INOLODID@Buff4_JewelOfBless?$AA@ DB 'Buff4_JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PKAKCCAJ@Buff4_ZenMoney?$AA@
CONST	SEGMENT
??_C@_0P@PKAKCCAJ@Buff4_ZenMoney?$AA@ DB 'Buff4_ZenMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@COHLOENC@Buff3_Bonus?$AA@
CONST	SEGMENT
??_C@_0M@COHLOENC@Buff3_Bonus?$AA@ DB 'Buff3_Bonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NBGGEAGL@Buff3_JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0BC@NBGGEAGL@Buff3_JewelOfSoul?$AA@ DB 'Buff3_JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BGOKOMJJ@Buff3_JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0BD@BGOKOMJJ@Buff3_JewelOfBless?$AA@ DB 'Buff3_JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NDDBDHIK@Buff3_ZenMoney?$AA@
CONST	SEGMENT
??_C@_0P@NDDBDHIK@Buff3_ZenMoney?$AA@ DB 'Buff3_ZenMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OCNBOEEM@Buff2_Bonus?$AA@
CONST	SEGMENT
??_C@_0M@OCNBOEEM@Buff2_Bonus?$AA@ DB 'Buff2_Bonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EMGJKBBN@Buff2_JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0BC@EMGJKBBN@Buff2_JewelOfSoul?$AA@ DB 'Buff2_JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPBBDHHB@Buff2_JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0BD@KPBBDHHB@Buff2_JewelOfBless?$AA@ DB 'Buff2_JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BCLPOIEK@Buff2_ZenMoney?$AA@
CONST	SEGMENT
??_C@_0P@BCLPOIEK@Buff2_ZenMoney?$AA@ DB 'Buff2_ZenMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GMFOODKP@Buff1_Bonus?$AA@
CONST	SEGMENT
??_C@_0M@GMFOODKP@Buff1_Bonus?$AA@ DB 'Buff1_Bonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DAAIIEMG@Buff1_JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0BC@DAAIIEMG@Buff1_JewelOfSoul?$AA@ DB 'Buff1_JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LOGMFNAI@Buff1_JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0BD@LOGMFNAI@Buff1_JewelOfBless?$AA@ DB 'Buff1_JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ILFNIOEL@Buff1_ZenMoney?$AA@
CONST	SEGMENT
??_C@_0P@ILFNIOEL@Buff1_ZenMoney?$AA@ DB 'Buff1_ZenMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGEEICMI@NPC_Y?$AA@
CONST	SEGMENT
??_C@_05MGEEICMI@NPC_Y?$AA@ DB 'NPC_Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPFPLDIJ@NPC_X?$AA@
CONST	SEGMENT
??_C@_05NPFPLDIJ@NPC_X?$AA@ DB 'NPC_X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LJMEGBCH@NPC_Map?$AA@
CONST	SEGMENT
??_C@_07LJMEGBCH@NPC_Map?$AA@ DB 'NPC_Map', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JIOKDDGI@NPC_Class?$AA@
CONST	SEGMENT
??_C@_09JIOKDDGI@NPC_Class?$AA@ DB 'NPC_Class', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CNKIADGI@ZtTeam?$AA@
CONST	SEGMENT
??_C@_06CNKIADGI@ZtTeam?$AA@ DB 'ZtTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Read@BufferSystem@@QAEXPAD@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
?Read@BufferSystem@@QAEXPAD@Z PROC			; BufferSystem::Read, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 72   : 	this->Enable = GetPrivateProfileInt("ZtTeam", "Enable", 0, File);

  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetPrivateProfileIntA@16
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _File$[ebp]
  0000f	57		 push	 edi
  00010	6a 00		 push	 0
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0001c	8b f1		 mov	 esi, ecx
  0001e	ff d3		 call	 ebx

; 73   : 	this->NPC_Class = GetPrivateProfileInt("ZtTeam", "NPC_Class", 0, File);

  00020	57		 push	 edi
  00021	6a 00		 push	 0
  00023	85 c0		 test	 eax, eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_09JIOKDDGI@NPC_Class?$AA@
  0002a	0f 95 c0	 setne	 al
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00032	88 06		 mov	 BYTE PTR [esi], al
  00034	ff d3		 call	 ebx

; 74   : 	this->NPC_Map = GetPrivateProfileInt("ZtTeam", "NPC_Map", 0, File);

  00036	57		 push	 edi
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_07LJMEGBCH@NPC_Map?$AA@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00046	ff d3		 call	 ebx

; 75   : 	this->NPC_X = GetPrivateProfileInt("ZtTeam", "NPC_X", 0, File);

  00048	57		 push	 edi
  00049	6a 00		 push	 0
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05NPFPLDIJ@NPC_X?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00055	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00058	ff d3		 call	 ebx

; 76   : 	this->NPC_Y = GetPrivateProfileInt("ZtTeam", "NPC_Y", 0, File);

  0005a	57		 push	 edi
  0005b	6a 00		 push	 0
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_05MGEEICMI@NPC_Y?$AA@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00067	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0006a	ff d3		 call	 ebx

; 77   : 
; 78   : 	this->Buff1_ZenMoney = GetPrivateProfileInt("ZtTeam", "Buff1_ZenMoney", 0, File);

  0006c	57		 push	 edi
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ILFNIOEL@Buff1_ZenMoney?$AA@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00079	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0007c	ff d3		 call	 ebx

; 79   : 	this->Buff1_JewelOfBless = GetPrivateProfileInt("ZtTeam", "Buff1_JewelOfBless", 0, File);

  0007e	57		 push	 edi
  0007f	6a 00		 push	 0
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LOGMFNAI@Buff1_JewelOfBless?$AA@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0008b	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0008e	ff d3		 call	 ebx

; 80   : 	this->Buff1_JewelOfSoul = GetPrivateProfileInt("ZtTeam", "Buff1_JewelOfSoul", 0, File);

  00090	57		 push	 edi
  00091	6a 00		 push	 0
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DAAIIEMG@Buff1_JewelOfSoul?$AA@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0009d	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000a0	ff d3		 call	 ebx

; 81   : 	this->Buff1_Bonus = GetPrivateProfileInt("ZtTeam", "Buff1_Bonus", 0, File);

  000a2	57		 push	 edi
  000a3	6a 00		 push	 0
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GMFOODKP@Buff1_Bonus?$AA@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000af	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000b2	ff d3		 call	 ebx

; 82   : 
; 83   : 	this->Buff2_ZenMoney = GetPrivateProfileInt("ZtTeam", "Buff2_ZenMoney", 0, File);

  000b4	57		 push	 edi
  000b5	6a 00		 push	 0
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BCLPOIEK@Buff2_ZenMoney?$AA@
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000c1	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000c4	ff d3		 call	 ebx

; 84   : 	this->Buff2_JewelOfBless = GetPrivateProfileInt("ZtTeam", "Buff2_JewelOfBless", 0, File);

  000c6	57		 push	 edi
  000c7	6a 00		 push	 0
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPBBDHHB@Buff2_JewelOfBless?$AA@
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000d3	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000d6	ff d3		 call	 ebx

; 85   : 	this->Buff2_JewelOfSoul = GetPrivateProfileInt("ZtTeam", "Buff2_JewelOfSoul", 0, File);

  000d8	57		 push	 edi
  000d9	6a 00		 push	 0
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EMGJKBBN@Buff2_JewelOfSoul?$AA@
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000e5	89 46 28	 mov	 DWORD PTR [esi+40], eax
  000e8	ff d3		 call	 ebx
  000ea	89 46 2c	 mov	 DWORD PTR [esi+44], eax

; 86   : 	this->Buff2_Bonus = GetPrivateProfileInt("ZtTeam", "Buff2_Bonus", 0, File);

  000ed	57		 push	 edi
  000ee	6a 00		 push	 0
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OCNBOEEM@Buff2_Bonus?$AA@
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000fa	ff d3		 call	 ebx

; 87   : 
; 88   : 	this->Buff3_ZenMoney = GetPrivateProfileInt("ZtTeam", "Buff3_ZenMoney", 0, File);

  000fc	57		 push	 edi
  000fd	6a 00		 push	 0
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NDDBDHIK@Buff3_ZenMoney?$AA@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00109	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0010c	ff d3		 call	 ebx

; 89   : 	this->Buff3_JewelOfBless = GetPrivateProfileInt("ZtTeam", "Buff3_JewelOfBless", 0, File);

  0010e	57		 push	 edi
  0010f	6a 00		 push	 0
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BGOKOMJJ@Buff3_JewelOfBless?$AA@
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0011b	89 46 34	 mov	 DWORD PTR [esi+52], eax
  0011e	ff d3		 call	 ebx

; 90   : 	this->Buff3_JewelOfSoul = GetPrivateProfileInt("ZtTeam", "Buff3_JewelOfSoul", 0, File);

  00120	57		 push	 edi
  00121	6a 00		 push	 0
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NBGGEAGL@Buff3_JewelOfSoul?$AA@
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0012d	89 46 38	 mov	 DWORD PTR [esi+56], eax
  00130	ff d3		 call	 ebx

; 91   : 	this->Buff3_Bonus = GetPrivateProfileInt("ZtTeam", "Buff3_Bonus", 0, File);

  00132	57		 push	 edi
  00133	6a 00		 push	 0
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0M@COHLOENC@Buff3_Bonus?$AA@
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0013f	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00142	ff d3		 call	 ebx

; 92   : 
; 93   : 	this->Buff4_ZenMoney = GetPrivateProfileInt("ZtTeam", "Buff4_ZenMoney", 0, File);

  00144	57		 push	 edi
  00145	6a 00		 push	 0
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PKAKCCAJ@Buff4_ZenMoney?$AA@
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00151	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00154	ff d3		 call	 ebx

; 94   : 	this->Buff4_JewelOfBless = GetPrivateProfileInt("ZtTeam", "Buff4_JewelOfBless", 0, File);

  00156	57		 push	 edi
  00157	6a 00		 push	 0
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@INOLODID@Buff4_JewelOfBless?$AA@
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00163	89 46 44	 mov	 DWORD PTR [esi+68], eax
  00166	ff d3		 call	 ebx

; 95   : 	this->Buff4_JewelOfSoul = GetPrivateProfileInt("ZtTeam", "Buff4_JewelOfSoul", 0, File);

  00168	57		 push	 edi
  00169	6a 00		 push	 0
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LEKLOKKL@Buff4_JewelOfSoul?$AA@
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00175	89 46 48	 mov	 DWORD PTR [esi+72], eax
  00178	ff d3		 call	 ebx

; 96   : 	this->Buff4_Bonus = GetPrivateProfileInt("ZtTeam", "Buff4_Bonus", 0, File);

  0017a	57		 push	 edi
  0017b	6a 00		 push	 0
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CELOONML@Buff4_Bonus?$AA@
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00187	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  0018a	ff d3		 call	 ebx

; 97   : 
; 98   : 	this->Buff5_ZenMoney = GetPrivateProfileInt("ZtTeam", "Buff5_ZenMoney", 0, File);

  0018c	57		 push	 edi
  0018d	6a 00		 push	 0
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DLIEPNMJ@Buff5_ZenMoney?$AA@
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00199	89 46 50	 mov	 DWORD PTR [esi+80], eax
  0019c	ff d3		 call	 ebx

; 99   : 	this->Buff5_JewelOfBless = GetPrivateProfileInt("ZtTeam", "Buff5_JewelOfBless", 0, File);

  0019e	57		 push	 edi
  0019f	6a 00		 push	 0
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DEBADIGL@Buff5_JewelOfBless?$AA@
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001ab	89 46 54	 mov	 DWORD PTR [esi+84], eax
  001ae	ff d3		 call	 ebx

; 100  : 	this->Buff5_JewelOfSoul = GetPrivateProfileInt("ZtTeam", "Buff5_JewelOfSoul", 0, File);

  001b0	57		 push	 edi
  001b1	6a 00		 push	 0
  001b3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CJKEALNN@Buff5_JewelOfSoul?$AA@
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001bd	89 46 58	 mov	 DWORD PTR [esi+88], eax
  001c0	ff d3		 call	 ebx

; 101  : 	this->Buff5_Bonus = GetPrivateProfileInt("ZtTeam", "Buff5_Bonus", 0, File);

  001c2	57		 push	 edi
  001c3	6a 00		 push	 0
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OIBEONFF@Buff5_Bonus?$AA@
  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001cf	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  001d2	ff d3		 call	 ebx

; 102  : 
; 103  : 	this->Buff6_ZenMoney = GetPrivateProfileInt("ZtTeam", "Buff6_ZenMoney", 0, File);

  001d4	57		 push	 edi
  001d5	6a 00		 push	 0
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KCGGJLMI@Buff6_ZenMoney?$AA@
  001dc	89 46 60	 mov	 DWORD PTR [esi+96], eax
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001e4	ff d3		 call	 ebx

; 104  : 	this->Buff6_JewelOfBless = GetPrivateProfileInt("ZtTeam", "Buff6_JewelOfBless", 0, File);

  001e6	57		 push	 edi
  001e7	6a 00		 push	 0
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CFGNFCBC@Buff6_JewelOfBless?$AA@
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001f3	89 46 64	 mov	 DWORD PTR [esi+100], eax
  001f6	ff d3		 call	 ebx

; 105  : 	this->Buff6_JewelOfSoul = GetPrivateProfileInt("ZtTeam", "Buff6_JewelOfSoul", 0, File);

  001f8	57		 push	 edi
  001f9	6a 00		 push	 0
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FFMFCOAG@Buff6_JewelOfSoul?$AA@
  00200	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00205	89 46 68	 mov	 DWORD PTR [esi+104], eax
  00208	ff d3		 call	 ebx

; 106  : 	this->Buff6_Bonus = GetPrivateProfileInt("ZtTeam", "Buff6_Bonus", 0, File);

  0020a	57		 push	 edi
  0020b	6a 00		 push	 0
  0020d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GGJLOKLG@Buff6_Bonus?$AA@
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00217	89 46 6c	 mov	 DWORD PTR [esi+108], eax
  0021a	ff d3		 call	 ebx
  0021c	5f		 pop	 edi
  0021d	89 46 70	 mov	 DWORD PTR [esi+112], eax
  00220	5e		 pop	 esi
  00221	5b		 pop	 ebx

; 107  : }

  00222	5d		 pop	 ebp
  00223	c2 04 00	 ret	 4
?Read@BufferSystem@@QAEXPAD@Z ENDP			; BufferSystem::Read
_TEXT	ENDS
PUBLIC	?Check@BufferSystem@@QAE_NHH@Z			; BufferSystem::Check
EXTRN	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjSearchActiveEffect
EXTRN	?gObjGetItemCountInInventory@@YAHHHH@Z:PROC	; gObjGetItemCountInInventory
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?Check@BufferSystem@@QAE_NHH@Z
_TEXT	SEGMENT
_lpUser$ = -20						; size = 4
_idBuffer$ = -16					; size = 4
_iZenMoney$ = -12					; size = 4
_iBonusMoney$ = -8					; size = 4
_bResult$ = -1						; size = 1
_aIndex$ = 8						; size = 4
_type$ = 12						; size = 4
?Check@BufferSystem@@QAE_NHH@Z PROC			; BufferSystem::Check, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 192  : 	LPOBJ lpUser = &gObj[aIndex];

  00006	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00009	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0000f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	89 45 ec	 mov	 DWORD PTR _lpUser$[ebp], eax

; 193  : 
; 194  : 	BYTE bResult = 1;
; 195  : 
; 196  : 	int iZenMoney = 0;
; 197  : 	int iBlessMoney = 0;
; 198  : 	int iSoulMoney = 0;
; 199  : 	int iBonusMoney = 0;
; 200  : 
; 201  : 	int idBuffer = AT_NPC_BUFF_EXP;
; 202  : 
; 203  : 	if(type == 1)

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  0001d	57		 push	 edi
  0001e	33 db		 xor	 ebx, ebx
  00020	33 f6		 xor	 esi, esi
  00022	33 ff		 xor	 edi, edi
  00024	ba b0 00 00 00	 mov	 edx, 176		; 000000b0H
  00029	c6 45 ff 01	 mov	 BYTE PTR _bResult$[ebp], 1
  0002d	89 75 f4	 mov	 DWORD PTR _iZenMoney$[ebp], esi
  00030	89 5d f8	 mov	 DWORD PTR _iBonusMoney$[ebp], ebx
  00033	89 55 f0	 mov	 DWORD PTR _idBuffer$[ebp], edx
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 17		 jne	 SHORT $LN17@Check

; 204  : 	{
; 205  : 		iZenMoney = this->Buff1_ZenMoney;
; 206  : 		iBlessMoney = this->Buff1_JewelOfBless;
; 207  : 		iSoulMoney = this->Buff1_JewelOfSoul;
; 208  : 		iBonusMoney = this->Buff1_Bonus;

  0003b	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  0003e	8b 71 14	 mov	 esi, DWORD PTR [ecx+20]
  00041	8b 79 18	 mov	 edi, DWORD PTR [ecx+24]
  00044	8b 59 1c	 mov	 ebx, DWORD PTR [ecx+28]
  00047	89 45 f8	 mov	 DWORD PTR _iBonusMoney$[ebp], eax

; 209  : 		idBuffer = AT_NPC_BUFF_EXP;

  0004a	89 55 f0	 mov	 DWORD PTR _idBuffer$[ebp], edx

; 210  : 	}
; 211  : 	if(type == 2)

  0004d	e9 8c 00 00 00	 jmp	 $LN27@Check
$LN17@Check:
  00052	83 f8 02	 cmp	 eax, 2
  00055	75 18		 jne	 SHORT $LN16@Check

; 212  : 	{
; 213  : 		iZenMoney = this->Buff2_ZenMoney;

  00057	8b 71 24	 mov	 esi, DWORD PTR [ecx+36]

; 214  : 		iBlessMoney = this->Buff2_JewelOfBless;

  0005a	8b 79 28	 mov	 edi, DWORD PTR [ecx+40]

; 215  : 		iSoulMoney = this->Buff2_JewelOfSoul;

  0005d	8b 59 2c	 mov	 ebx, DWORD PTR [ecx+44]

; 216  : 		iBonusMoney = this->Buff2_Bonus;

  00060	8b 49 30	 mov	 ecx, DWORD PTR [ecx+48]
  00063	89 4d f8	 mov	 DWORD PTR _iBonusMoney$[ebp], ecx

; 217  : 		idBuffer = AT_NPC_BUFF_DAMAGE;

  00066	c7 45 f0 b1 00
	00 00		 mov	 DWORD PTR _idBuffer$[ebp], 177 ; 000000b1H

; 218  : 	}
; 219  : 	if(type == 3)

  0006d	eb 6f		 jmp	 SHORT $LN27@Check
$LN16@Check:
  0006f	83 f8 03	 cmp	 eax, 3
  00072	75 15		 jne	 SHORT $LN15@Check

; 220  : 	{
; 221  : 		iZenMoney = this->Buff3_ZenMoney;

  00074	8b 71 34	 mov	 esi, DWORD PTR [ecx+52]

; 222  : 		iBlessMoney = this->Buff3_JewelOfBless;

  00077	8b 79 38	 mov	 edi, DWORD PTR [ecx+56]

; 223  : 		iSoulMoney = this->Buff3_JewelOfSoul;

  0007a	8b 59 3c	 mov	 ebx, DWORD PTR [ecx+60]

; 224  : 		iBonusMoney = this->Buff3_Bonus;

  0007d	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]

; 225  : 		idBuffer = AT_NPC_BUFF_DEFENCE;

  00080	c7 45 f0 b2 00
	00 00		 mov	 DWORD PTR _idBuffer$[ebp], 178 ; 000000b2H

; 226  : 	}
; 227  : 	if(type == 4)

  00087	eb 52		 jmp	 SHORT $LN28@Check
$LN15@Check:
  00089	83 f8 04	 cmp	 eax, 4
  0008c	75 18		 jne	 SHORT $LN14@Check

; 228  : 	{
; 229  : 		iZenMoney = this->Buff4_ZenMoney;
; 230  : 		iBlessMoney = this->Buff4_JewelOfBless;
; 231  : 		iSoulMoney = this->Buff4_JewelOfSoul;
; 232  : 		iBonusMoney = this->Buff4_Bonus;

  0008e	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00091	8b 71 44	 mov	 esi, DWORD PTR [ecx+68]
  00094	8b 79 48	 mov	 edi, DWORD PTR [ecx+72]
  00097	8b 59 4c	 mov	 ebx, DWORD PTR [ecx+76]
  0009a	89 45 f8	 mov	 DWORD PTR _iBonusMoney$[ebp], eax

; 233  : 		idBuffer = AT_NPC_BUFF_EXL_CRIT;

  0009d	c7 45 f0 b3 00
	00 00		 mov	 DWORD PTR _idBuffer$[ebp], 179 ; 000000b3H

; 234  : 	}
; 235  : 	if(type == 5)

  000a4	eb 38		 jmp	 SHORT $LN27@Check
$LN14@Check:
  000a6	83 f8 05	 cmp	 eax, 5
  000a9	75 18		 jne	 SHORT $LN13@Check

; 236  : 	{
; 237  : 		iZenMoney = this->Buff5_ZenMoney;

  000ab	8b 71 54	 mov	 esi, DWORD PTR [ecx+84]

; 238  : 		iBlessMoney = this->Buff5_JewelOfBless;

  000ae	8b 79 58	 mov	 edi, DWORD PTR [ecx+88]

; 239  : 		iSoulMoney = this->Buff5_JewelOfSoul;

  000b1	8b 59 5c	 mov	 ebx, DWORD PTR [ecx+92]

; 240  : 		iBonusMoney = this->Buff5_Bonus;

  000b4	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  000b7	89 4d f8	 mov	 DWORD PTR _iBonusMoney$[ebp], ecx

; 241  : 		idBuffer = AT_NPC_BUFF_DROP;

  000ba	c7 45 f0 b4 00
	00 00		 mov	 DWORD PTR _idBuffer$[ebp], 180 ; 000000b4H

; 242  : 	}
; 243  : 	if(type == 6)

  000c1	eb 1b		 jmp	 SHORT $LN27@Check
$LN13@Check:
  000c3	83 f8 06	 cmp	 eax, 6
  000c6	75 19		 jne	 SHORT $LN12@Check

; 244  : 	{
; 245  : 		iZenMoney = this->Buff6_ZenMoney;

  000c8	8b 71 64	 mov	 esi, DWORD PTR [ecx+100]

; 246  : 		iBlessMoney = this->Buff6_JewelOfBless;

  000cb	8b 79 68	 mov	 edi, DWORD PTR [ecx+104]

; 247  : 		iSoulMoney = this->Buff6_JewelOfSoul;

  000ce	8b 59 6c	 mov	 ebx, DWORD PTR [ecx+108]

; 248  : 		iBonusMoney = this->Buff6_Bonus;

  000d1	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]

; 249  : 		idBuffer = AT_NPC_BUFF_DOUBLE;

  000d4	c7 45 f0 b5 00
	00 00		 mov	 DWORD PTR _idBuffer$[ebp], 181 ; 000000b5H
$LN28@Check:

; 248  : 		iBonusMoney = this->Buff6_Bonus;

  000db	89 55 f8	 mov	 DWORD PTR _iBonusMoney$[ebp], edx
$LN27@Check:

; 244  : 	{
; 245  : 		iZenMoney = this->Buff6_ZenMoney;

  000de	89 75 f4	 mov	 DWORD PTR _iZenMoney$[ebp], esi
$LN12@Check:

; 250  : 	}
; 251  : 
; 252  : 	if(g_ZtLicense.CheckUser(eZtUB::Local) || g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  000e1	6a 00		 push	 0
  000e3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000e8	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000ed	84 c0		 test	 al, al
  000ef	75 41		 jne	 SHORT $LN10@Check
  000f1	6a 20		 push	 32			; 00000020H
  000f3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000f8	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000fd	84 c0		 test	 al, al
  000ff	75 31		 jne	 SHORT $LN10@Check
  00101	6a 21		 push	 33			; 00000021H
  00103	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00108	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0010d	84 c0		 test	 al, al
  0010f	75 21		 jne	 SHORT $LN10@Check
  00111	6a 22		 push	 34			; 00000022H
  00113	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00118	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0011d	84 c0		 test	 al, al
  0011f	75 11		 jne	 SHORT $LN10@Check

; 257  : 		}
; 258  : 	}
; 259  : 	else
; 260  : 	{
; 261  : 		if(iZenMoney > 0 && iZenMoney > lpUser->Money)

  00121	85 f6		 test	 esi, esi
  00123	7e 2a		 jle	 SHORT $LN20@Check
  00125	8b 45 ec	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00128	3b b0 f0 00 00
	00		 cmp	 esi, DWORD PTR [eax+240]
  0012e	7e 1f		 jle	 SHORT $LN20@Check

; 262  : 		{
; 263  : 			bResult = 0;

  00130	eb 19		 jmp	 SHORT $LN29@Check
$LN10@Check:

; 253  : 	{
; 254  : 		if(iZenMoney > 0 && iZenMoney > lpUser->ZtCred)

  00132	85 f6		 test	 esi, esi
  00134	7e 19		 jle	 SHORT $LN20@Check
  00136	db 45 f4	 fild	 DWORD PTR _iZenMoney$[ebp]
  00139	8b 4d ec	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0013c	d9 81 a8 22 00
	00		 fld	 DWORD PTR [ecx+8872]
  00142	de d9		 fcompp
  00144	df e0		 fnstsw	 ax
  00146	f6 c4 05	 test	 ah, 5
  00149	7a 04		 jp	 SHORT $LN20@Check
$LN29@Check:

; 255  : 		{
; 256  : 			bResult = 0;

  0014b	c6 45 ff 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN20@Check:

; 264  : 		}
; 265  : 	}
; 266  : 
; 267  : 	if(iBlessMoney > 0)

  0014f	85 ff		 test	 edi, edi
  00151	7e 1b		 jle	 SHORT $LN22@Check

; 268  : 	{
; 269  : 		if( iBlessMoney > gObjGetItemCountInInventory(aIndex, ITEMGET(14,13), 0))

  00153	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00156	6a 00		 push	 0
  00158	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  0015d	52		 push	 edx
  0015e	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00163	83 c4 0c	 add	 esp, 12			; 0000000cH
  00166	3b f8		 cmp	 edi, eax
  00168	7e 04		 jle	 SHORT $LN22@Check

; 270  : 		{
; 271  : 			bResult = 0;

  0016a	c6 45 ff 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN22@Check:

; 272  : 		}
; 273  : 	}
; 274  : 
; 275  : 	if(iSoulMoney > 0)

  0016e	85 db		 test	 ebx, ebx
  00170	7e 1b		 jle	 SHORT $LN24@Check

; 276  : 	{
; 277  : 		if(iSoulMoney > gObjGetItemCountInInventory(aIndex, ITEMGET(14,14), 0))

  00172	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00175	6a 00		 push	 0
  00177	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  0017c	50		 push	 eax
  0017d	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00182	83 c4 0c	 add	 esp, 12			; 0000000cH
  00185	3b d8		 cmp	 ebx, eax
  00187	7e 04		 jle	 SHORT $LN24@Check

; 278  : 		{
; 279  : 			bResult = 0;

  00189	c6 45 ff 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN24@Check:

; 280  : 		}
; 281  : 	}
; 282  : 
; 283  : 	if(iBonusMoney > 0 && iBonusMoney > lpUser->GameShop.WCoinC)

  0018d	83 7d f8 00	 cmp	 DWORD PTR _iBonusMoney$[ebp], 0
  00191	5f		 pop	 edi
  00192	5e		 pop	 esi
  00193	5b		 pop	 ebx
  00194	7e 17		 jle	 SHORT $LN26@Check
  00196	db 45 f8	 fild	 DWORD PTR _iBonusMoney$[ebp]
  00199	8b 4d ec	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0019c	dc 99 00 23 00
	00		 fcomp	 QWORD PTR [ecx+8960]
  001a2	df e0		 fnstsw	 ax
  001a4	f6 c4 41	 test	 ah, 65			; 00000041H
  001a7	75 04		 jne	 SHORT $LN26@Check

; 284  : 	{
; 285  : 		bResult = 0;

  001a9	c6 45 ff 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN26@Check:

; 286  : 	}
; 287  : 
; 288  : 	//if(g_BuffManagerEx.CheckZtBuffData(aIndex, idBuffer) == TRUE )
; 289  : 	if( gObjSearchActiveEffect(lpUser,idBuffer) == TRUE)

  001ad	8b 55 f0	 mov	 edx, DWORD PTR _idBuffer$[ebp]
  001b0	8b 45 ec	 mov	 eax, DWORD PTR _lpUser$[ebp]
  001b3	52		 push	 edx
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  001ba	83 c4 08	 add	 esp, 8
  001bd	3c 01		 cmp	 al, 1
  001bf	75 0d		 jne	 SHORT $LN25@Check

; 290  : 	{
; 291  : 		bResult = 0;

  001c1	32 c0		 xor	 al, al

; 292  : 	}
; 293  : 
; 294  : 	return bResult;

  001c3	84 c0		 test	 al, al
  001c5	0f 95 c0	 setne	 al

; 295  : }

  001c8	8b e5		 mov	 esp, ebp
  001ca	5d		 pop	 ebp
  001cb	c2 08 00	 ret	 8
$LN25@Check:

; 290  : 	{
; 291  : 		bResult = 0;

  001ce	8a 45 ff	 mov	 al, BYTE PTR _bResult$[ebp]

; 292  : 	}
; 293  : 
; 294  : 	return bResult;

  001d1	84 c0		 test	 al, al
  001d3	0f 95 c0	 setne	 al

; 295  : }

  001d6	8b e5		 mov	 esp, ebp
  001d8	5d		 pop	 ebp
  001d9	c2 08 00	 ret	 8
?Check@BufferSystem@@QAE_NHH@Z ENDP			; BufferSystem::Check
_TEXT	ENDS
PUBLIC	??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BB@JOFPGEDD@BufferSystem?4cpp?$AA@	; `string'
PUBLIC	?Timer@BufferSystem@@QAEXH@Z			; BufferSystem::Timer
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
;	COMDAT ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@ DB 'error : %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOFPGEDD@BufferSystem?4cpp?$AA@
CONST	SEGMENT
??_C@_0BB@JOFPGEDD@BufferSystem?4cpp?$AA@ DB 'BufferSystem.cpp', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Timer@BufferSystem@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?Timer@BufferSystem@@QAEXH@Z PROC			; BufferSystem::Timer, COMDAT
; _this$ = ecx

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 460  : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 a9 00 00
	00		 je	 $LN1@Timer

; 461  : 	{
; 462  : 		return;
; 463  : 	}
; 464  : 
; 465  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  0000c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000f	85 c0		 test	 eax, eax
  00011	78 0e		 js	 SHORT $LN14@Timer
  00013	33 c9		 xor	 ecx, ecx
  00015	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001a	0f 9e c1	 setle	 cl
  0001d	85 c9		 test	 ecx, ecx
  0001f	75 1c		 jne	 SHORT $LN8@Timer
$LN14@Timer:

; 466  : 	{
; 467  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  00021	68 d3 01 00 00	 push	 467			; 000001d3H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JOFPGEDD@BufferSystem?4cpp?$AA@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 506  : 	}
; 507  : 	// --
; 508  : }

  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
$LN8@Timer:

; 468  : 		return;
; 469  : 	}
; 470  : 
; 471  : 	LPOBJ lpUser = &gObj[aIndex];

  0003d	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00043	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 472  : 
; 473  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00049	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0004d	7c 66		 jl	 SHORT $LN1@Timer

; 474  : 	{
; 475  : 		return;
; 476  : 	}
; 477  : 	// --
; 478  : 	if(lpUser->ExpBuffTime > 0)

  0004f	8b 88 90 28 00
	00		 mov	 ecx, DWORD PTR [eax+10384]
  00055	85 c9		 test	 ecx, ecx
  00057	74 07		 je	 SHORT $LN6@Timer

; 479  : 	{
; 480  : 		lpUser->ExpBuffTime--;

  00059	49		 dec	 ecx
  0005a	89 88 90 28 00
	00		 mov	 DWORD PTR [eax+10384], ecx
$LN6@Timer:

; 481  : 	}
; 482  : 	// --
; 483  : 	if(lpUser->DamageBuffTime > 0)

  00060	8b 88 94 28 00
	00		 mov	 ecx, DWORD PTR [eax+10388]
  00066	85 c9		 test	 ecx, ecx
  00068	74 07		 je	 SHORT $LN5@Timer

; 484  : 	{
; 485  : 		lpUser->DamageBuffTime--;

  0006a	49		 dec	 ecx
  0006b	89 88 94 28 00
	00		 mov	 DWORD PTR [eax+10388], ecx
$LN5@Timer:

; 486  : 	}
; 487  : 	// --
; 488  : 	if(lpUser->DefenceBuffTime > 0)

  00071	8b 88 98 28 00
	00		 mov	 ecx, DWORD PTR [eax+10392]
  00077	85 c9		 test	 ecx, ecx
  00079	74 07		 je	 SHORT $LN4@Timer

; 489  : 	{
; 490  : 		lpUser->DefenceBuffTime--;

  0007b	49		 dec	 ecx
  0007c	89 88 98 28 00
	00		 mov	 DWORD PTR [eax+10392], ecx
$LN4@Timer:

; 491  : 	}
; 492  : 	// --
; 493  : 	if(lpUser->BattleBuffTime > 0)

  00082	8b 88 9c 28 00
	00		 mov	 ecx, DWORD PTR [eax+10396]
  00088	85 c9		 test	 ecx, ecx
  0008a	74 07		 je	 SHORT $LN3@Timer

; 494  : 	{
; 495  : 		lpUser->BattleBuffTime--;

  0008c	49		 dec	 ecx
  0008d	89 88 9c 28 00
	00		 mov	 DWORD PTR [eax+10396], ecx
$LN3@Timer:

; 496  : 	}
; 497  : 	// --
; 498  : 	if(lpUser->DropBuffTime > 0)

  00093	8b 88 a0 28 00
	00		 mov	 ecx, DWORD PTR [eax+10400]
  00099	85 c9		 test	 ecx, ecx
  0009b	74 07		 je	 SHORT $LN2@Timer

; 499  : 	{
; 500  : 		lpUser->DropBuffTime--;

  0009d	49		 dec	 ecx
  0009e	89 88 a0 28 00
	00		 mov	 DWORD PTR [eax+10400], ecx
$LN2@Timer:

; 501  : 	}
; 502  : 	// --
; 503  : 	if(lpUser->DoubleBuffTime > 0)

  000a4	8b 88 a4 28 00
	00		 mov	 ecx, DWORD PTR [eax+10404]
  000aa	85 c9		 test	 ecx, ecx
  000ac	74 07		 je	 SHORT $LN1@Timer

; 504  : 	{
; 505  : 		lpUser->DoubleBuffTime--;

  000ae	49		 dec	 ecx
  000af	89 88 a4 28 00
	00		 mov	 DWORD PTR [eax+10404], ecx
$LN1@Timer:

; 506  : 	}
; 507  : 	// --
; 508  : }

  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
?Timer@BufferSystem@@QAEXH@Z ENDP			; BufferSystem::Timer
_TEXT	ENDS
PUBLIC	?UserConnect@BufferSystem@@QAEXH@Z		; BufferSystem::UserConnect
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
; Function compile flags: /Ogtp
;	COMDAT ?UserConnect@BufferSystem@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?UserConnect@BufferSystem@@QAEXH@Z PROC			; BufferSystem::UserConnect, COMDAT
; _this$ = ecx

; 512  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 513  : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 11 01 00
	00		 je	 $LN1@UserConnec

; 514  : 	{
; 515  : 		return;
; 516  : 	}
; 517  : 
; 518  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00010	85 f6		 test	 esi, esi
  00012	78 0f		 js	 SHORT $LN14@UserConnec
  00014	33 c0		 xor	 eax, eax
  00016	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  0001c	0f 9e c0	 setle	 al
  0001f	85 c0		 test	 eax, eax
  00021	75 1d		 jne	 SHORT $LN8@UserConnec
$LN14@UserConnec:

; 519  : 	{
; 520  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  00023	68 08 02 00 00	 push	 520			; 00000208H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JOFPGEDD@BufferSystem?4cpp?$AA@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	5e		 pop	 esi

; 566  : 	}
; 567  : 	// --
; 568  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN8@UserConnec:

; 521  : 		return;
; 522  : 	}
; 523  : 
; 524  : 	LPOBJ lpUser = &gObj[aIndex];

  00040	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00046	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 525  : 
; 526  : 	if(lpUser->Connected < PLAYER_PLAYING)

  0004c	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00050	0f 8c c6 00 00
	00		 jl	 $LN15@UserConnec

; 527  : 	{
; 528  : 		return;
; 529  : 	}
; 530  : 	
; 531  : 	// --
; 532  : 	if(lpUser->ExpBuffTime > 0)

  00056	8b 86 90 28 00
	00		 mov	 eax, DWORD PTR [esi+10384]
  0005c	85 c0		 test	 eax, eax
  0005e	74 17		 je	 SHORT $LN6@UserConnec

; 533  : 	{
; 534  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, AT_NPC_BUFF_EXP, lpUser->ExpBuffTime);
; 535  : 		gObjApplyBuffEffectDuration(lpUser, AT_NPC_BUFF_EXP, 0, 0, 0, 0, lpUser->ExpBuffTime);

  00060	50		 push	 eax
  00061	6a 00		 push	 0
  00063	6a 00		 push	 0
  00065	6a 00		 push	 0
  00067	6a 00		 push	 0
  00069	68 b0 00 00 00	 push	 176			; 000000b0H
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00074	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN6@UserConnec:

; 536  : 	}
; 537  : 	// --
; 538  : 	if(lpUser->DamageBuffTime > 0)

  00077	8b 86 94 28 00
	00		 mov	 eax, DWORD PTR [esi+10388]
  0007d	85 c0		 test	 eax, eax
  0007f	74 17		 je	 SHORT $LN5@UserConnec

; 539  : 	{
; 540  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, AT_NPC_BUFF_DAMAGE, lpUser->DamageBuffTime);
; 541  : 		gObjApplyBuffEffectDuration(lpUser, AT_NPC_BUFF_DAMAGE, 0, 0, 0, 0, lpUser->DamageBuffTime);

  00081	50		 push	 eax
  00082	6a 00		 push	 0
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	68 b1 00 00 00	 push	 177			; 000000b1H
  0008f	56		 push	 esi
  00090	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00095	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN5@UserConnec:

; 542  : 	}
; 543  : 	// --
; 544  : 	if(lpUser->DefenceBuffTime > 0)

  00098	8b 86 98 28 00
	00		 mov	 eax, DWORD PTR [esi+10392]
  0009e	85 c0		 test	 eax, eax
  000a0	74 17		 je	 SHORT $LN4@UserConnec

; 545  : 	{
; 546  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, AT_NPC_BUFF_DEFENCE, lpUser->DefenceBuffTime);
; 547  : 		gObjApplyBuffEffectDuration(lpUser, AT_NPC_BUFF_DEFENCE, 0, 0, 0, 0, lpUser->DefenceBuffTime);

  000a2	50		 push	 eax
  000a3	6a 00		 push	 0
  000a5	6a 00		 push	 0
  000a7	6a 00		 push	 0
  000a9	6a 00		 push	 0
  000ab	68 b2 00 00 00	 push	 178			; 000000b2H
  000b0	56		 push	 esi
  000b1	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  000b6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN4@UserConnec:

; 548  : 	}
; 549  : 	// --
; 550  : 	if(lpUser->BattleBuffTime > 0)

  000b9	8b 86 9c 28 00
	00		 mov	 eax, DWORD PTR [esi+10396]
  000bf	85 c0		 test	 eax, eax
  000c1	74 17		 je	 SHORT $LN3@UserConnec

; 551  : 	{
; 552  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, AT_NPC_BUFF_EXL_CRIT, lpUser->BattleBuffTime);
; 553  : 		gObjApplyBuffEffectDuration(lpUser, AT_NPC_BUFF_EXL_CRIT, 0, 0, 0, 0, lpUser->BattleBuffTime);

  000c3	50		 push	 eax
  000c4	6a 00		 push	 0
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	68 b3 00 00 00	 push	 179			; 000000b3H
  000d1	56		 push	 esi
  000d2	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  000d7	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN3@UserConnec:

; 554  : 	}
; 555  : 	// --
; 556  : 	if(lpUser->DropBuffTime > 0)

  000da	8b 86 a0 28 00
	00		 mov	 eax, DWORD PTR [esi+10400]
  000e0	85 c0		 test	 eax, eax
  000e2	74 17		 je	 SHORT $LN2@UserConnec

; 557  : 	{
; 558  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, AT_NPC_BUFF_DROP, lpUser->DropBuffTime);
; 559  : 		gObjApplyBuffEffectDuration(lpUser, AT_NPC_BUFF_DROP, 0, 0, 0, 0, lpUser->DropBuffTime);

  000e4	50		 push	 eax
  000e5	6a 00		 push	 0
  000e7	6a 00		 push	 0
  000e9	6a 00		 push	 0
  000eb	6a 00		 push	 0
  000ed	68 b4 00 00 00	 push	 180			; 000000b4H
  000f2	56		 push	 esi
  000f3	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  000f8	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN2@UserConnec:

; 560  : 	}
; 561  : 	// --
; 562  : 	if(lpUser->DoubleBuffTime > 0)

  000fb	8b 86 a4 28 00
	00		 mov	 eax, DWORD PTR [esi+10404]
  00101	85 c0		 test	 eax, eax
  00103	74 17		 je	 SHORT $LN15@UserConnec

; 563  : 	{
; 564  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, AT_NPC_BUFF_DOUBLE, lpUser->DoubleBuffTime);
; 565  : 		gObjApplyBuffEffectDuration(lpUser, AT_NPC_BUFF_DOUBLE, 0, 0, 0, 0, lpUser->DoubleBuffTime);

  00105	50		 push	 eax
  00106	6a 00		 push	 0
  00108	6a 00		 push	 0
  0010a	6a 00		 push	 0
  0010c	6a 00		 push	 0
  0010e	68 b5 00 00 00	 push	 181			; 000000b5H
  00113	56		 push	 esi
  00114	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00119	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN15@UserConnec:
  0011c	5e		 pop	 esi
$LN1@UserConnec:

; 566  : 	}
; 567  : 	// --
; 568  : }

  0011d	5d		 pop	 ebp
  0011e	c2 04 00	 ret	 4
?UserConnect@BufferSystem@@QAEXH@Z ENDP			; BufferSystem::UserConnect
_TEXT	ENDS
PUBLIC	??_C@_0BI@JNHOHLOB@ZtData?2BufferSystem?4ini?$AA@ ; `string'
PUBLIC	?Load@BufferSystem@@QAEXXZ			; BufferSystem::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
;	COMDAT ??_C@_0BI@JNHOHLOB@ZtData?2BufferSystem?4ini?$AA@
CONST	SEGMENT
??_C@_0BI@JNHOHLOB@ZtData?2BufferSystem?4ini?$AA@ DB 'ZtData\BufferSystem'
	DB	'.ini', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@BufferSystem@@QAEXXZ
_TEXT	SEGMENT
?Load@BufferSystem@@QAEXXZ PROC				; BufferSystem::Load, COMDAT
; _this$ = ecx

; 60   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 61   : 	this->Init();

  00003	e8 00 00 00 00	 call	 ?Init@BufferSystem@@QAEXXZ ; BufferSystem::Init

; 62   : 	if(!g_ZtLicense.user.NpcBuffer)

  00008	80 3d dd 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+221, 0
  0000f	74 17		 je	 SHORT $LN2@Load

; 63   : 	{
; 64   : 		return;
; 65   : 	}
; 66   : 	this->Read(gDirPath.GetNewPath("ZtData\\BufferSystem.ini"));

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JNHOHLOB@ZtData?2BufferSystem?4ini?$AA@
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0001b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00020	50		 push	 eax
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?Read@BufferSystem@@QAEXPAD@Z ; BufferSystem::Read
$LN2@Load:
  00028	5e		 pop	 esi

; 67   : }

  00029	c3		 ret	 0
?Load@BufferSystem@@QAEXXZ ENDP				; BufferSystem::Load
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GC_OpenWindow@BufferSystem@@QAEXH@Z		; BufferSystem::GC_OpenWindow
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GC_OpenWindow@BufferSystem@@QAEXH@Z
_TEXT	SEGMENT
_pSend$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GC_OpenWindow@BufferSystem@@QAEXH@Z PROC		; BufferSystem::GC_OpenWindow, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 140  : 	if(!this->Enable)

  00013	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00016	0f 84 30 01 00
	00		 je	 $LN2@GC_OpenWin

; 141  : 	{
; 142  :  		return;
; 143  : 	}
; 144  : 
; 145  : 	// ----
; 146  : 
; 147  : 	GC_BuffNpcOpen pSend = { NULL };

  0001c	57		 push	 edi
  0001d	6a 4f		 push	 79			; 0000004fH
  0001f	8d 45 ad	 lea	 eax, DWORD PTR _pSend$[ebp+1]
  00022	6a 00		 push	 0
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _memset

; 148  : 	pSend.h.set((LPBYTE)&pSend, 0xFB, 0x20, sizeof(pSend));
; 149  : 
; 150  : 	pSend.Result1 = this->Check(aIndex, 1);

  0002a	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	6a 01		 push	 1
  00032	57		 push	 edi
  00033	8b ce		 mov	 ecx, esi
  00035	c7 45 ac c1 50
	fb 20		 mov	 DWORD PTR _pSend$[ebp], 553341121 ; 20fb50c1H
  0003c	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check

; 151  : 	pSend.Zen1 = this->Buff1_ZenMoney;

  00041	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 152  : 	pSend.Bless1 = this->Buff1_JewelOfBless;

  00044	0f b7 56 18	 movzx	 edx, WORD PTR [esi+24]
  00048	89 4d b4	 mov	 DWORD PTR _pSend$[ebp+8], ecx

; 153  : 	pSend.Soul1 = this->Buff1_JewelOfSoul;
; 154  : 	pSend.Bonus1 = this->Buff1_Bonus;

  0004b	0f b7 4e 20	 movzx	 ecx, WORD PTR [esi+32]
  0004f	88 45 b0	 mov	 BYTE PTR _pSend$[ebp+4], al
  00052	0f b7 46 1c	 movzx	 eax, WORD PTR [esi+28]

; 155  : 
; 156  : 	pSend.Result2 = this->Check(aIndex, 2);

  00056	6a 02		 push	 2
  00058	66 89 4d bc	 mov	 WORD PTR _pSend$[ebp+16], cx
  0005c	57		 push	 edi
  0005d	8b ce		 mov	 ecx, esi
  0005f	66 89 55 b8	 mov	 WORD PTR _pSend$[ebp+12], dx
  00063	66 89 45 ba	 mov	 WORD PTR _pSend$[ebp+14], ax
  00067	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check

; 157  : 	pSend.Zen2 = this->Buff2_ZenMoney;

  0006c	8b 56 24	 mov	 edx, DWORD PTR [esi+36]

; 158  : 	pSend.Bless2 = this->Buff2_JewelOfBless;
; 159  : 	pSend.Soul2 = this->Buff2_JewelOfSoul;

  0006f	0f b7 4e 2c	 movzx	 ecx, WORD PTR [esi+44]
  00073	88 45 be	 mov	 BYTE PTR _pSend$[ebp+18], al
  00076	0f b7 46 28	 movzx	 eax, WORD PTR [esi+40]
  0007a	89 55 c0	 mov	 DWORD PTR _pSend$[ebp+20], edx

; 160  : 	pSend.Bonus2 = this->Buff2_Bonus;

  0007d	0f b7 56 30	 movzx	 edx, WORD PTR [esi+48]

; 161  : 
; 162  : 	pSend.Result3 = this->Check(aIndex, 3);

  00081	6a 03		 push	 3
  00083	66 89 4d c6	 mov	 WORD PTR _pSend$[ebp+26], cx
  00087	57		 push	 edi
  00088	8b ce		 mov	 ecx, esi
  0008a	66 89 45 c4	 mov	 WORD PTR _pSend$[ebp+24], ax
  0008e	66 89 55 c8	 mov	 WORD PTR _pSend$[ebp+28], dx
  00092	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check

; 163  : 	pSend.Zen3 = this->Buff3_ZenMoney;
; 164  : 	pSend.Bless3 = this->Buff3_JewelOfBless;

  00097	0f b7 4e 38	 movzx	 ecx, WORD PTR [esi+56]

; 165  : 	pSend.Soul3 = this->Buff3_JewelOfSoul;

  0009b	0f b7 56 3c	 movzx	 edx, WORD PTR [esi+60]
  0009f	88 45 ca	 mov	 BYTE PTR _pSend$[ebp+30], al
  000a2	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000a5	89 45 cc	 mov	 DWORD PTR _pSend$[ebp+32], eax

; 166  : 	pSend.Bonus3 = this->Buff3_Bonus;

  000a8	0f b7 46 40	 movzx	 eax, WORD PTR [esi+64]

; 167  : 
; 168  : 	pSend.Result4 = this->Check(aIndex, 4);

  000ac	6a 04		 push	 4
  000ae	66 89 4d d0	 mov	 WORD PTR _pSend$[ebp+36], cx
  000b2	57		 push	 edi
  000b3	8b ce		 mov	 ecx, esi
  000b5	66 89 55 d2	 mov	 WORD PTR _pSend$[ebp+38], dx
  000b9	66 89 45 d4	 mov	 WORD PTR _pSend$[ebp+40], ax
  000bd	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check

; 169  : 	pSend.Zen4 = this->Buff4_ZenMoney;

  000c2	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]

; 170  : 	pSend.Bless4 = this->Buff4_JewelOfBless;

  000c5	0f b7 56 48	 movzx	 edx, WORD PTR [esi+72]
  000c9	89 4d d8	 mov	 DWORD PTR _pSend$[ebp+44], ecx

; 171  : 	pSend.Soul4 = this->Buff4_JewelOfSoul;
; 172  : 	pSend.Bonus4 = this->Buff4_Bonus;

  000cc	0f b7 4e 50	 movzx	 ecx, WORD PTR [esi+80]
  000d0	88 45 d6	 mov	 BYTE PTR _pSend$[ebp+42], al
  000d3	0f b7 46 4c	 movzx	 eax, WORD PTR [esi+76]

; 173  : 
; 174  : 	pSend.Result5 = this->Check(aIndex,5);

  000d7	6a 05		 push	 5
  000d9	66 89 4d e0	 mov	 WORD PTR _pSend$[ebp+52], cx
  000dd	57		 push	 edi
  000de	8b ce		 mov	 ecx, esi
  000e0	66 89 55 dc	 mov	 WORD PTR _pSend$[ebp+48], dx
  000e4	66 89 45 de	 mov	 WORD PTR _pSend$[ebp+50], ax
  000e8	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check

; 175  : 	pSend.Zen5 = this->Buff5_ZenMoney;

  000ed	8b 56 54	 mov	 edx, DWORD PTR [esi+84]

; 176  : 	pSend.Bless5 = this->Buff5_JewelOfBless;
; 177  : 	pSend.Soul5 = this->Buff5_JewelOfSoul;

  000f0	0f b7 4e 5c	 movzx	 ecx, WORD PTR [esi+92]
  000f4	88 45 e2	 mov	 BYTE PTR _pSend$[ebp+54], al
  000f7	0f b7 46 58	 movzx	 eax, WORD PTR [esi+88]
  000fb	89 55 e4	 mov	 DWORD PTR _pSend$[ebp+56], edx

; 178  : 	pSend.Bonus5 = this->Buff5_Bonus;

  000fe	0f b7 56 60	 movzx	 edx, WORD PTR [esi+96]

; 179  : 
; 180  : 	pSend.Result6 = this->Check(aIndex,6);

  00102	6a 06		 push	 6
  00104	66 89 4d ea	 mov	 WORD PTR _pSend$[ebp+62], cx
  00108	57		 push	 edi
  00109	8b ce		 mov	 ecx, esi
  0010b	66 89 45 e8	 mov	 WORD PTR _pSend$[ebp+60], ax
  0010f	66 89 55 ec	 mov	 WORD PTR _pSend$[ebp+64], dx
  00113	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check
  00118	88 45 ee	 mov	 BYTE PTR _pSend$[ebp+66], al

; 181  : 	pSend.Zen6 = this->Buff6_ZenMoney;

  0011b	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  0011e	89 45 f0	 mov	 DWORD PTR _pSend$[ebp+68], eax

; 182  : 	pSend.Bless6 = this->Buff6_JewelOfBless;

  00121	0f b7 4e 68	 movzx	 ecx, WORD PTR [esi+104]

; 183  : 	pSend.Soul6 = this->Buff6_JewelOfSoul;

  00125	0f b7 56 6c	 movzx	 edx, WORD PTR [esi+108]

; 184  : 	pSend.Bonus6 = this->Buff6_Bonus;

  00129	0f b7 46 70	 movzx	 eax, WORD PTR [esi+112]
  0012d	66 89 4d f4	 mov	 WORD PTR _pSend$[ebp+72], cx

; 185  : 
; 186  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  00131	0f b6 4d ad	 movzx	 ecx, BYTE PTR _pSend$[ebp+1]
  00135	66 89 55 f6	 mov	 WORD PTR _pSend$[ebp+74], dx
  00139	51		 push	 ecx
  0013a	8d 55 ac	 lea	 edx, DWORD PTR _pSend$[ebp]
  0013d	52		 push	 edx
  0013e	57		 push	 edi
  0013f	66 89 45 f8	 mov	 WORD PTR _pSend$[ebp+76], ax
  00143	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00148	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014b	5f		 pop	 edi
$LN2@GC_OpenWin:

; 187  : }

  0014c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014f	33 cd		 xor	 ecx, ebp
  00151	5e		 pop	 esi
  00152	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 04 00	 ret	 4
?GC_OpenWindow@BufferSystem@@QAEXH@Z ENDP		; BufferSystem::GC_OpenWindow
_TEXT	ENDS
PUBLIC	?CG_ResultRecv@BufferSystem@@QAEXHPAUCG_BuffNpcResult@@@Z ; BufferSystem::CG_ResultRecv
EXTRN	?gObjCalCharacter@@YAXH@Z:PROC			; gObjCalCharacter
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?gObjDeleteItemsCount@@YAHHFFH@Z:PROC		; gObjDeleteItemsCount
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?gObjIsConnectedZt@@YA_NH@Z:PROC		; gObjIsConnectedZt
; Function compile flags: /Ogtp
;	COMDAT ?CG_ResultRecv@BufferSystem@@QAEXHPAUCG_BuffNpcResult@@@Z
_TEXT	SEGMENT
_iSoulMoney$ = -12					; size = 4
_iBlessMoney$ = -8					; size = 4
_iBonusMoney$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_iZenMoney$ = 12					; size = 4
_type$ = 12						; size = 4
_aRecv$ = 12						; size = 4
?CG_ResultRecv@BufferSystem@@QAEXHPAUCG_BuffNpcResult@@@Z PROC ; BufferSystem::CG_ResultRecv, COMDAT
; _this$ = ecx

; 299  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 300  : 	if(!this->Enable)

  00009	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0000c	0f 84 ae 02 00
	00		 je	 $LN22@CG_ResultR

; 301  : 	{
; 302  :  		return;
; 303  : 	}
; 304  : 
; 305  : 	if(!gObjIsConnectedZt(aIndex))

  00012	57		 push	 edi
  00013	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  0001c	83 c4 04	 add	 esp, 4
  0001f	84 c0		 test	 al, al
  00021	0f 84 98 02 00
	00		 je	 $LN29@CG_ResultR

; 306  : 	{
; 307  : 		return;
; 308  : 	}
; 309  : 
; 310  : 	if(aRecv->Result < 1 || aRecv->Result > 6)

  00027	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0002a	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  0002d	3c 01		 cmp	 al, 1
  0002f	0f 82 8a 02 00
	00		 jb	 $LN29@CG_ResultR
  00035	3c 06		 cmp	 al, 6
  00037	0f 87 82 02 00
	00		 ja	 $LN29@CG_ResultR

; 311  : 	{
; 312  : 		return;
; 313  : 	}
; 314  : 
; 315  : 	int type = aRecv->Result;

  0003d	0f b6 c0	 movzx	 eax, al

; 316  : 
; 317  : 	if(!this->Check(aIndex, type))

  00040	50		 push	 eax
  00041	57		 push	 edi
  00042	8b ce		 mov	 ecx, esi
  00044	89 45 0c	 mov	 DWORD PTR _type$[ebp], eax
  00047	e8 00 00 00 00	 call	 ?Check@BufferSystem@@QAE_NHH@Z ; BufferSystem::Check
  0004c	84 c0		 test	 al, al
  0004e	0f 84 6b 02 00
	00		 je	 $LN29@CG_ResultR

; 318  : 	{
; 319  : 		return;
; 320  : 	}
; 321  : 
; 322  : 	LPOBJ lpUser = &gObj[aIndex];
; 323  : 
; 324  : 	BYTE bResult = 1;
; 325  : 
; 326  : 	int iZenMoney = 0;
; 327  : 	int iBlessMoney = 0;
; 328  : 	int iSoulMoney = 0;
; 329  : 	int iBonusMoney = 0;
; 330  : 	int idBuffer = AT_NPC_BUFF_EXP;
; 331  : 
; 332  : 
; 333  : 	if(type == 1)

  00054	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00057	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  0005d	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00063	53		 push	 ebx
  00064	bb b0 00 00 00	 mov	 ebx, 176		; 000000b0H
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 1d		 jne	 SHORT $LN20@CG_ResultR

; 334  : 	{
; 335  : 		iZenMoney = this->Buff1_ZenMoney;

  0006e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 336  : 		iBlessMoney = this->Buff1_JewelOfBless;

  00071	8b 56 18	 mov	 edx, DWORD PTR [esi+24]

; 337  : 		iSoulMoney = this->Buff1_JewelOfSoul;

  00074	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00077	89 4d 0c	 mov	 DWORD PTR _iZenMoney$[ebp], ecx

; 338  : 		iBonusMoney = this->Buff1_Bonus;

  0007a	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0007d	89 55 f8	 mov	 DWORD PTR _iBlessMoney$[ebp], edx
  00080	89 45 f4	 mov	 DWORD PTR _iSoulMoney$[ebp], eax
  00083	89 4d fc	 mov	 DWORD PTR _iBonusMoney$[ebp], ecx

; 339  : 		idBuffer = AT_NPC_BUFF_EXP;
; 340  : 	}
; 341  : 	if(type == 2)

  00086	e9 b0 00 00 00	 jmp	 $LN15@CG_ResultR
$LN20@CG_ResultR:
  0008b	83 f8 02	 cmp	 eax, 2
  0008e	75 22		 jne	 SHORT $LN19@CG_ResultR

; 342  : 	{
; 343  : 		iZenMoney = this->Buff2_ZenMoney;

  00090	8b 56 24	 mov	 edx, DWORD PTR [esi+36]

; 344  : 		iBlessMoney = this->Buff2_JewelOfBless;

  00093	8b 46 28	 mov	 eax, DWORD PTR [esi+40]

; 345  : 		iSoulMoney = this->Buff2_JewelOfSoul;

  00096	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00099	89 55 0c	 mov	 DWORD PTR _iZenMoney$[ebp], edx

; 346  : 		iBonusMoney = this->Buff2_Bonus;

  0009c	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
  0009f	89 45 f8	 mov	 DWORD PTR _iBlessMoney$[ebp], eax
  000a2	89 4d f4	 mov	 DWORD PTR _iSoulMoney$[ebp], ecx
  000a5	89 55 fc	 mov	 DWORD PTR _iBonusMoney$[ebp], edx

; 347  : 		idBuffer = AT_NPC_BUFF_DAMAGE;

  000a8	bb b1 00 00 00	 mov	 ebx, 177		; 000000b1H

; 348  : 	}
; 349  : 	if(type == 3)

  000ad	e9 89 00 00 00	 jmp	 $LN15@CG_ResultR
$LN19@CG_ResultR:
  000b2	83 f8 03	 cmp	 eax, 3
  000b5	75 16		 jne	 SHORT $LN18@CG_ResultR

; 350  : 	{
; 351  : 		iZenMoney = this->Buff3_ZenMoney;

  000b7	8b 46 34	 mov	 eax, DWORD PTR [esi+52]

; 352  : 		iBlessMoney = this->Buff3_JewelOfBless;

  000ba	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]

; 353  : 		iSoulMoney = this->Buff3_JewelOfSoul;

  000bd	8b 56 3c	 mov	 edx, DWORD PTR [esi+60]
  000c0	89 45 0c	 mov	 DWORD PTR _iZenMoney$[ebp], eax

; 354  : 		iBonusMoney = this->Buff3_Bonus;

  000c3	8b 46 40	 mov	 eax, DWORD PTR [esi+64]

; 355  : 		idBuffer = AT_NPC_BUFF_DEFENCE;

  000c6	bb b2 00 00 00	 mov	 ebx, 178		; 000000b2H

; 356  : 	}
; 357  : 	if(type == 4)

  000cb	eb 65		 jmp	 SHORT $LN30@CG_ResultR
$LN18@CG_ResultR:
  000cd	83 f8 04	 cmp	 eax, 4
  000d0	75 1f		 jne	 SHORT $LN17@CG_ResultR

; 358  : 	{
; 359  : 		iZenMoney = this->Buff4_ZenMoney;

  000d2	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]

; 360  : 		iBlessMoney = this->Buff4_JewelOfBless;

  000d5	8b 56 48	 mov	 edx, DWORD PTR [esi+72]

; 361  : 		iSoulMoney = this->Buff4_JewelOfSoul;

  000d8	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000db	89 4d 0c	 mov	 DWORD PTR _iZenMoney$[ebp], ecx

; 362  : 		iBonusMoney = this->Buff4_Bonus;

  000de	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  000e1	89 55 f8	 mov	 DWORD PTR _iBlessMoney$[ebp], edx
  000e4	89 45 f4	 mov	 DWORD PTR _iSoulMoney$[ebp], eax
  000e7	89 4d fc	 mov	 DWORD PTR _iBonusMoney$[ebp], ecx

; 363  : 		idBuffer = AT_NPC_BUFF_EXL_CRIT;

  000ea	bb b3 00 00 00	 mov	 ebx, 179		; 000000b3H

; 364  : 	}
; 365  : 	if(type == 5)

  000ef	eb 4a		 jmp	 SHORT $LN15@CG_ResultR
$LN17@CG_ResultR:
  000f1	83 f8 05	 cmp	 eax, 5
  000f4	75 1f		 jne	 SHORT $LN16@CG_ResultR

; 366  : 	{
; 367  : 		iZenMoney = this->Buff5_ZenMoney;

  000f6	8b 56 54	 mov	 edx, DWORD PTR [esi+84]

; 368  : 		iBlessMoney = this->Buff5_JewelOfBless;

  000f9	8b 46 58	 mov	 eax, DWORD PTR [esi+88]

; 369  : 		iSoulMoney = this->Buff5_JewelOfSoul;

  000fc	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  000ff	89 55 0c	 mov	 DWORD PTR _iZenMoney$[ebp], edx

; 370  : 		iBonusMoney = this->Buff5_Bonus;

  00102	8b 56 60	 mov	 edx, DWORD PTR [esi+96]
  00105	89 45 f8	 mov	 DWORD PTR _iBlessMoney$[ebp], eax
  00108	89 4d f4	 mov	 DWORD PTR _iSoulMoney$[ebp], ecx
  0010b	89 55 fc	 mov	 DWORD PTR _iBonusMoney$[ebp], edx

; 371  : 		idBuffer = AT_NPC_BUFF_DROP;

  0010e	bb b4 00 00 00	 mov	 ebx, 180		; 000000b4H

; 372  : 	}
; 373  : 	if(type == 6)

  00113	eb 26		 jmp	 SHORT $LN15@CG_ResultR
$LN16@CG_ResultR:
  00115	83 f8 06	 cmp	 eax, 6
  00118	0f 85 01 01 00
	00		 jne	 $LN8@CG_ResultR

; 374  : 	{
; 375  : 		iZenMoney = this->Buff6_ZenMoney;

  0011e	8b 46 64	 mov	 eax, DWORD PTR [esi+100]

; 376  : 		iBlessMoney = this->Buff6_JewelOfBless;

  00121	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]

; 377  : 		iSoulMoney = this->Buff6_JewelOfSoul;

  00124	8b 56 6c	 mov	 edx, DWORD PTR [esi+108]
  00127	89 45 0c	 mov	 DWORD PTR _iZenMoney$[ebp], eax

; 378  : 		iBonusMoney = this->Buff6_Bonus;

  0012a	8b 46 70	 mov	 eax, DWORD PTR [esi+112]

; 379  : 		idBuffer = AT_NPC_BUFF_DOUBLE;

  0012d	bb b5 00 00 00	 mov	 ebx, 181		; 000000b5H
$LN30@CG_ResultR:

; 377  : 		iSoulMoney = this->Buff6_JewelOfSoul;

  00132	89 45 fc	 mov	 DWORD PTR _iBonusMoney$[ebp], eax
  00135	89 55 f4	 mov	 DWORD PTR _iSoulMoney$[ebp], edx
  00138	89 4d f8	 mov	 DWORD PTR _iBlessMoney$[ebp], ecx
$LN15@CG_ResultR:

; 380  : 	}
; 381  : 
; 382  : 	if(iZenMoney > 0)

  0013b	83 7d 0c 00	 cmp	 DWORD PTR _iZenMoney$[ebp], 0
  0013f	7e 79		 jle	 SHORT $LN11@CG_ResultR

; 383  : 	{
; 384  : 		if(g_ZtLicense.CheckUser(eZtUB::Local) || g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  00141	6a 00		 push	 0
  00143	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00148	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0014d	84 c0		 test	 al, al
  0014f	75 4e		 jne	 SHORT $LN12@CG_ResultR
  00151	6a 20		 push	 32			; 00000020H
  00153	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00158	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0015d	84 c0		 test	 al, al
  0015f	75 3e		 jne	 SHORT $LN12@CG_ResultR
  00161	6a 21		 push	 33			; 00000021H
  00163	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00168	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0016d	84 c0		 test	 al, al
  0016f	75 2e		 jne	 SHORT $LN12@CG_ResultR
  00171	6a 22		 push	 34			; 00000022H
  00173	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00178	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0017d	84 c0		 test	 al, al
  0017f	75 1e		 jne	 SHORT $LN12@CG_ResultR

; 388  : 		}
; 389  : 		else
; 390  : 		{
; 391  : 			lpUser->Money -= iZenMoney;

  00181	8b 4d 0c	 mov	 ecx, DWORD PTR _iZenMoney$[ebp]
  00184	29 8f f0 00 00
	00		 sub	 DWORD PTR [edi+240], ecx
  0018a	8b 87 f0 00 00
	00		 mov	 eax, DWORD PTR [edi+240]

; 392  : 			GCMoneySend(aIndex,lpUser->Money);

  00190	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00193	50		 push	 eax
  00194	52		 push	 edx
  00195	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  0019a	83 c4 08	 add	 esp, 8
  0019d	eb 1b		 jmp	 SHORT $LN11@CG_ResultR
$LN12@CG_ResultR:

; 385  : 		{
; 386  : 			lpUser->ZtCred -= iZenMoney;

  0019f	d9 87 a8 22 00
	00		 fld	 DWORD PTR [edi+8872]

; 387  : 			ZtUserDataSend(aIndex);

  001a5	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  001a8	da 65 0c	 fisub	 DWORD PTR _iZenMoney$[ebp]
  001ab	50		 push	 eax
  001ac	d9 9f a8 22 00
	00		 fstp	 DWORD PTR [edi+8872]
  001b2	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  001b7	83 c4 04	 add	 esp, 4
$LN11@CG_ResultR:

; 393  : 		}
; 394  : 	}
; 395  : 	if(iBlessMoney > 0)

  001ba	8b 45 f8	 mov	 eax, DWORD PTR _iBlessMoney$[ebp]
  001bd	85 c0		 test	 eax, eax
  001bf	7e 14		 jle	 SHORT $LN10@CG_ResultR

; 396  : 	{
; 397  : 		gObjDeleteItemsCount(aIndex, ITEMGET(14,13), 0, iBlessMoney);

  001c1	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  001c4	50		 push	 eax
  001c5	6a 00		 push	 0
  001c7	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  001cc	51		 push	 ecx
  001cd	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  001d2	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@CG_ResultR:

; 398  : 	}
; 399  : 	if(iSoulMoney > 0)

  001d5	8b 45 f4	 mov	 eax, DWORD PTR _iSoulMoney$[ebp]
  001d8	85 c0		 test	 eax, eax
  001da	7e 14		 jle	 SHORT $LN9@CG_ResultR

; 400  : 	{
; 401  : 		gObjDeleteItemsCount(aIndex, ITEMGET(14,14), 0, iSoulMoney);

  001dc	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  001df	50		 push	 eax
  001e0	6a 00		 push	 0
  001e2	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  001e7	52		 push	 edx
  001e8	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  001ed	83 c4 10	 add	 esp, 16			; 00000010H
$LN9@CG_ResultR:

; 402  : 	}
; 403  : 	if(iBonusMoney > 0)

  001f0	83 7d fc 00	 cmp	 DWORD PTR _iBonusMoney$[ebp], 0
  001f4	7e 29		 jle	 SHORT $LN8@CG_ResultR

; 404  : 	{
; 405  : 		lpUser->GameShop.WCoinC -= iBonusMoney;

  001f6	db 45 fc	 fild	 DWORD PTR _iBonusMoney$[ebp]

; 406  : 		gGameShop.GDSaveUserInfo(aIndex);

  001f9	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  001fc	50		 push	 eax
  001fd	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00202	dc af 00 23 00
	00		 fsubr	 QWORD PTR [edi+8960]
  00208	dd 9f 00 23 00
	00		 fstp	 QWORD PTR [edi+8960]
  0020e	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 407  : 		ZtUserDataSend(aIndex);

  00213	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00216	51		 push	 ecx
  00217	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0021c	83 c4 04	 add	 esp, 4
$LN8@CG_ResultR:

; 408  : 	}
; 409  : 
; 410  : 	//if(g_BuffManagerEx.CheckZtBuffData(aIndex, idBuffer) == FALSE )
; 411  : 	if( gObjSearchActiveEffect(lpUser,idBuffer) == FALSE)

  0021f	53		 push	 ebx
  00220	57		 push	 edi
  00221	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00226	83 c4 08	 add	 esp, 8
  00229	84 c0		 test	 al, al
  0022b	0f 85 81 00 00
	00		 jne	 $LN28@CG_ResultR

; 412  : 	{
; 413  : 		// --
; 414  : 		if(idBuffer == AT_NPC_BUFF_EXP)

  00231	b8 80 51 01 00	 mov	 eax, 86400		; 00015180H
  00236	81 fb b0 00 00
	00		 cmp	 ebx, 176		; 000000b0H
  0023c	75 08		 jne	 SHORT $LN6@CG_ResultR

; 415  : 		{
; 416  : 			lpUser->ExpBuffTime = 86400;

  0023e	89 87 90 28 00
	00		 mov	 DWORD PTR [edi+10384], eax

; 417  : 		}
; 418  : 		// --
; 419  : 		if(idBuffer == AT_NPC_BUFF_DAMAGE)

  00244	eb 4e		 jmp	 SHORT $LN1@CG_ResultR
$LN6@CG_ResultR:
  00246	81 fb b1 00 00
	00		 cmp	 ebx, 177		; 000000b1H
  0024c	75 08		 jne	 SHORT $LN5@CG_ResultR

; 420  : 		{
; 421  : 			lpUser->DamageBuffTime = 86400;

  0024e	89 87 94 28 00
	00		 mov	 DWORD PTR [edi+10388], eax

; 422  : 		}
; 423  : 		// --
; 424  : 		if(idBuffer == AT_NPC_BUFF_DEFENCE)

  00254	eb 3e		 jmp	 SHORT $LN1@CG_ResultR
$LN5@CG_ResultR:
  00256	81 fb b2 00 00
	00		 cmp	 ebx, 178		; 000000b2H
  0025c	75 08		 jne	 SHORT $LN4@CG_ResultR

; 425  : 		{
; 426  : 			lpUser->DefenceBuffTime = 86400;

  0025e	89 87 98 28 00
	00		 mov	 DWORD PTR [edi+10392], eax

; 427  : 		}
; 428  : 		// --
; 429  : 		if(idBuffer == AT_NPC_BUFF_EXL_CRIT)

  00264	eb 2e		 jmp	 SHORT $LN1@CG_ResultR
$LN4@CG_ResultR:
  00266	81 fb b3 00 00
	00		 cmp	 ebx, 179		; 000000b3H
  0026c	75 08		 jne	 SHORT $LN3@CG_ResultR

; 430  : 		{
; 431  : 			lpUser->BattleBuffTime = 86400;

  0026e	89 87 9c 28 00
	00		 mov	 DWORD PTR [edi+10396], eax

; 432  : 		}
; 433  : 		// --
; 434  : 		if(idBuffer == AT_NPC_BUFF_DROP)

  00274	eb 1e		 jmp	 SHORT $LN1@CG_ResultR
$LN3@CG_ResultR:
  00276	81 fb b4 00 00
	00		 cmp	 ebx, 180		; 000000b4H
  0027c	75 08		 jne	 SHORT $LN2@CG_ResultR

; 435  : 		{
; 436  : 			lpUser->DropBuffTime = 86400;

  0027e	89 87 a0 28 00
	00		 mov	 DWORD PTR [edi+10400], eax

; 437  : 		}
; 438  : 		// --
; 439  : 		if(idBuffer == AT_NPC_BUFF_DOUBLE)

  00284	eb 0e		 jmp	 SHORT $LN1@CG_ResultR
$LN2@CG_ResultR:
  00286	81 fb b5 00 00
	00		 cmp	 ebx, 181		; 000000b5H
  0028c	75 06		 jne	 SHORT $LN1@CG_ResultR

; 440  : 		{
; 441  : 			lpUser->DoubleBuffTime = 86400;

  0028e	89 87 a4 28 00
	00		 mov	 DWORD PTR [edi+10404], eax
$LN1@CG_ResultR:

; 442  : 		}
; 443  : 		// --
; 444  : 
; 445  : 		//g_BuffManagerEx.AddZtBuffData(aIndex, idBuffer, 86400);
; 446  : 		gObjApplyBuffEffectDuration(lpUser, idBuffer, 0, 0, 0, 0, 86400);

  00294	50		 push	 eax
  00295	6a 00		 push	 0
  00297	6a 00		 push	 0
  00299	6a 00		 push	 0
  0029b	6a 00		 push	 0
  0029d	53		 push	 ebx
  0029e	57		 push	 edi
  0029f	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration

; 447  : 
; 448  : 		this->GC_OpenWindow(aIndex);

  002a4	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  002a7	83 c4 1c	 add	 esp, 28			; 0000001cH
  002aa	52		 push	 edx
  002ab	8b ce		 mov	 ecx, esi
  002ad	e8 00 00 00 00	 call	 ?GC_OpenWindow@BufferSystem@@QAEXH@Z ; BufferSystem::GC_OpenWindow
$LN28@CG_ResultR:

; 449  : 	}
; 450  : 
; 451  : 	gObjCalCharacter(aIndex);

  002b2	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter
  002bb	83 c4 04	 add	 esp, 4
  002be	5b		 pop	 ebx
$LN29@CG_ResultR:
  002bf	5f		 pop	 edi
$LN22@CG_ResultR:
  002c0	5e		 pop	 esi

; 452  : 
; 453  : 	//g_ZtUser.UpdateCharEx(aIndex);
; 454  : 
; 455  : }

  002c1	8b e5		 mov	 esp, ebp
  002c3	5d		 pop	 ebp
  002c4	c2 08 00	 ret	 8
?CG_ResultRecv@BufferSystem@@QAEXHPAUCG_BuffNpcResult@@@Z ENDP ; BufferSystem::CG_ResultRecv
_TEXT	ENDS
PUBLIC	?Dialog@BufferSystem@@QAE_NHH@Z			; BufferSystem::Dialog
; Function compile flags: /Ogtp
;	COMDAT ?Dialog@BufferSystem@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?Dialog@BufferSystem@@QAE_NHH@Z PROC			; BufferSystem::Dialog, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	if(!this->Enable)

  00006	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00009	75 07		 jne	 SHORT $LN3@Dialog

; 113  : 	{
; 114  :  		return false;

  0000b	32 c0		 xor	 al, al
  0000d	5e		 pop	 esi

; 135  : }

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
$LN3@Dialog:
  00012	57		 push	 edi

; 115  : 	}
; 116  : 
; 117  : 	if(!gObjIsConnectedZt(aIndex))

  00013	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  0001c	83 c4 04	 add	 esp, 4
  0001f	84 c0		 test	 al, al

; 118  : 	{
; 119  : 		return false;

  00021	74 4f		 je	 SHORT $LN1@Dialog

; 120  : 	}
; 121  : 
; 122  : 	LPOBJ lpUser = &gObj[aIndex];
; 123  : 	LPOBJ lpNpc = &gObj[aNpcIndex];

  00023	8b 45 0c	 mov	 eax, DWORD PTR _aNpcIndex$[ebp]
  00026	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0002c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 124  : 
; 125  : 	if(		lpNpc->Class		== this->NPC_Class 
; 126  : 		&&	lpNpc->MapNumber	== this->NPC_Map
; 127  : 		&&	lpNpc->X			== this->NPC_X
; 128  : 		&&	lpNpc->Y			== this->NPC_Y )

  00032	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00039	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  0003c	75 34		 jne	 SHORT $LN1@Dialog
  0003e	0f b6 90 49 01
	00 00		 movzx	 edx, BYTE PTR [eax+329]
  00045	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  00048	75 28		 jne	 SHORT $LN1@Dialog
  0004a	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00051	3b 4e 0c	 cmp	 ecx, DWORD PTR [esi+12]
  00054	75 1c		 jne	 SHORT $LN1@Dialog
  00056	0f bf 90 46 01
	00 00		 movsx	 edx, WORD PTR [eax+326]
  0005d	3b 56 10	 cmp	 edx, DWORD PTR [esi+16]
  00060	75 10		 jne	 SHORT $LN1@Dialog

; 129  : 	{
; 130  : 		this->GC_OpenWindow(aIndex);

  00062	57		 push	 edi
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?GC_OpenWindow@BufferSystem@@QAEXH@Z ; BufferSystem::GC_OpenWindow
  0006a	5f		 pop	 edi

; 131  : 		return true;

  0006b	b0 01		 mov	 al, 1
  0006d	5e		 pop	 esi

; 135  : }

  0006e	5d		 pop	 ebp
  0006f	c2 08 00	 ret	 8
$LN1@Dialog:
  00072	5f		 pop	 edi

; 132  : 	}
; 133  : 	// ----
; 134  : 	return false;

  00073	32 c0		 xor	 al, al
  00075	5e		 pop	 esi

; 135  : }

  00076	5d		 pop	 ebp
  00077	c2 08 00	 ret	 8
?Dialog@BufferSystem@@QAE_NHH@Z ENDP			; BufferSystem::Dialog
_TEXT	ENDS
END
