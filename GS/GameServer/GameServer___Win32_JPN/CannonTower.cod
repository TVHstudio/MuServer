; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\CannonTower.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CCannonTower@@6B@				; CCannonTower::`vftable'
PUBLIC	??0CCannonTower@@QAE@XZ				; CCannonTower::CCannonTower
PUBLIC	??_R4CCannonTower@@6B@				; CCannonTower::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCannonTower@@@8			; CCannonTower `RTTI Type Descriptor'
PUBLIC	??_R3CCannonTower@@8				; CCannonTower::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCannonTower@@8				; CCannonTower::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCannonTower@@8			; CCannonTower::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCannonTower@@UAEPAXI@Z:PROC		; CCannonTower::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CCannonTower@@8
; File e:\work\tranet_version\gs\gameserver\cannontower.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CCannonTower@@8 DD FLAT:??_R0?AVCCannonTower@@@8 ; CCannonTower::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCannonTower@@8
rdata$r	ENDS
;	COMDAT ??_R2CCannonTower@@8
rdata$r	SEGMENT
??_R2CCannonTower@@8 DD FLAT:??_R1A@?0A@EA@CCannonTower@@8 ; CCannonTower::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCannonTower@@8
rdata$r	SEGMENT
??_R3CCannonTower@@8 DD 00H				; CCannonTower::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCannonTower@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCannonTower@@@8
_DATA	SEGMENT
??_R0?AVCCannonTower@@@8 DD FLAT:??_7type_info@@6B@	; CCannonTower `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCannonTower@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCannonTower@@6B@
rdata$r	SEGMENT
??_R4CCannonTower@@6B@ DD 00H				; CCannonTower::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCannonTower@@@8
	DD	FLAT:??_R3CCannonTower@@8
rdata$r	ENDS
;	COMDAT ??_7CCannonTower@@6B@
CONST	SEGMENT
??_7CCannonTower@@6B@ DD FLAT:??_R4CCannonTower@@6B@	; CCannonTower::`vftable'
	DD	FLAT:??_ECCannonTower@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CCannonTower@@QAE@XZ
_TEXT	SEGMENT
??0CCannonTower@@QAE@XZ PROC				; CCannonTower::CCannonTower, COMDAT
; _this$ = ecx

; 18   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCannonTower@@6B@

; 19   : 
; 20   : }

  00008	c3		 ret	 0
??0CCannonTower@@QAE@XZ ENDP				; CCannonTower::CCannonTower
_TEXT	ENDS
PUBLIC	??1CCannonTower@@UAE@XZ				; CCannonTower::~CCannonTower
; Function compile flags: /Ogtp
;	COMDAT ??1CCannonTower@@UAE@XZ
_TEXT	SEGMENT
??1CCannonTower@@UAE@XZ PROC				; CCannonTower::~CCannonTower, COMDAT
; _this$ = ecx

; 23   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCannonTower@@6B@

; 24   : 
; 25   : }

  00006	c3		 ret	 0
??1CCannonTower@@UAE@XZ ENDP				; CCannonTower::~CCannonTower
_TEXT	ENDS
PUBLIC	_iIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?CannonTowerAct@CCannonTower@@QAEXH@Z		; CCannonTower::CannonTowerAct
EXTRN	?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z:PROC	; MsgSendV2
EXTRN	?PHeadSetBE@@YAXPAEEH@Z:PROC			; PHeadSetBE
EXTRN	?CGBeattackRecv@@YAXPAEHH@Z:PROC		; CGBeattackRecv
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	_rand:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?CannonTowerAct@CCannonTower@@QAEXH@Z
_TEXT	SEGMENT
_iIndex$GSCopy$ = -292					; size = 4
tv424 = -288						; size = 4
tv369 = -284						; size = 4
_ASBOfs$ = -280						; size = 4
_pAttack$ = -276					; size = 3
_pSend$205726 = -272					; size = 10
_pCount$ = -272						; size = 9
_AttackSendBuff$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
?CannonTowerAct@CCannonTower@@QAEXH@Z PROC		; CCannonTower::CannonTowerAct, COMDAT
; _this$ = ecx

; 28   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]

; 68   : 						{
; 69   : 							pAttack.NumberH = SET_NUMBERH(tObjNum);

  00017	89 b5 dc fe ff
	ff		 mov	 DWORD PTR _iIndex$GSCopy$[ebp], esi
  0001d	e8 00 00 00 00	 call	 _rand
  00022	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  00027	79 05		 jns	 SHORT $LN20@CannonTowe

; 29   : 	if( ( rand() % 2 ) != 0 )

  00029	48		 dec	 eax
  0002a	83 c8 fe	 or	 eax, -2			; fffffffeH
  0002d	40		 inc	 eax
$LN20@CannonTowe:
  0002e	0f 85 9f 01 00
	00		 jne	 $LN1@CannonTowe

; 30   : 	{
; 31   : 		return;
; 32   : 	}
; 33   : 
; 34   : 	LPOBJ lpObj = &gObj[iIndex];

  00034	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0003a	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00040	53		 push	 ebx

; 35   : 	int tObjNum;
; 36   : 	int count = 0;
; 37   : 	PMSG_BEATTACK_COUNT pCount;
; 38   : 	PMSG_BEATTACK pAttack;
; 39   : 	BYTE AttackSendBuff[256];
; 40   : 	int ASBOfs;
; 41   : 
; 42   : 	ASBOfs = 0;
; 43   : 
; 44   : 	pCount.h.c = 0xC1;
; 45   : 	pCount.h.headcode = PROTOCOL_BEATTACK;
; 46   : 	pCount.h.size = 0x00;
; 47   : 	pCount.MagicNumberH = 0x00;
; 48   : 	pCount.MagicNumberL = 0x00;
; 49   : 	pCount.Count = 0x00;
; 50   : 	pCount.X = lpObj->X;
; 51   : 	pCount.Y = lpObj->Y;

  00041	8a 8e 46 01 00
	00		 mov	 cl, BYTE PTR [esi+326]
  00047	8a 86 44 01 00
	00		 mov	 al, BYTE PTR [esi+324]
  0004d	88 8d f6 fe ff
	ff		 mov	 BYTE PTR _pCount$[ebp+6], cl
  00053	8d 8e b0 08 00
	00		 lea	 ecx, DWORD PTR [esi+2224]
  00059	57		 push	 edi
  0005a	c6 85 f0 fe ff
	ff c1		 mov	 BYTE PTR _pCount$[ebp], 193 ; 000000c1H
  00061	c7 85 f1 fe ff
	ff 00 db 00 00	 mov	 DWORD PTR _pCount$[ebp+1], 56064 ; 0000db00H
  0006b	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _pCount$[ebp+8], 0
  00072	88 85 f5 fe ff
	ff		 mov	 BYTE PTR _pCount$[ebp+5], al

; 52   : 
; 53   : 	ASBOfs = sizeof(PMSG_BEATTACK_COUNT);

  00078	c7 85 e8 fe ff
	ff 09 00 00 00	 mov	 DWORD PTR _ASBOfs$[ebp], 9
  00082	8d bd 05 ff ff
	ff		 lea	 edi, DWORD PTR _AttackSendBuff$[ebp+9]
  00088	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv369[ebp], ecx
  0008e	c7 85 e0 fe ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv424[ebp], 75 ; 0000004bH
$LL9@CannonTowe:

; 54   : 
; 55   : 	while( true ) 
; 56   : 	{
; 57   : 		if( lpObj->VpPlayer2[count].state ) 

  00098	80 79 fc 00	 cmp	 BYTE PTR [ecx-4], 0
  0009c	74 6e		 je	 SHORT $LN18@CannonTowe

; 58   : 		{
; 59   : 			if( lpObj->VpPlayer2[count].type == OBJ_USER ) 

  0009e	80 39 01	 cmp	 BYTE PTR [ecx], 1
  000a1	75 69		 jne	 SHORT $LN18@CannonTowe

; 60   : 			{
; 61   : 				tObjNum = lpObj->VpPlayer2[count].number;

  000a3	0f bf 59 fe	 movsx	 ebx, WORD PTR [ecx-2]

; 62   : 
; 63   : 				if( tObjNum >= 0 ) 

  000a7	85 db		 test	 ebx, ebx
  000a9	78 61		 js	 SHORT $LN18@CannonTowe

; 64   : 				{
; 65   : 					if( gObj[tObjNum].m_btCsJoinSide != 1 )

  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000b0	8b d3		 mov	 edx, ebx
  000b2	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000b8	03 c2		 add	 eax, edx
  000ba	80 b8 02 1c 00
	00 01		 cmp	 BYTE PTR [eax+7170], 1
  000c1	74 49		 je	 SHORT $LN18@CannonTowe

; 66   : 					{
; 67   : 						if( gObjCalDistance(lpObj, &gObj[tObjNum]) < 7 ) 

  000c3	50		 push	 eax
  000c4	56		 push	 esi
  000c5	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  000ca	83 c4 08	 add	 esp, 8
  000cd	83 f8 07	 cmp	 eax, 7
  000d0	7d 34		 jge	 SHORT $LN16@CannonTowe

; 70   : 							pAttack.NumberL = SET_NUMBERL(tObjNum);
; 71   : 							memcpy( (AttackSendBuff+ASBOfs), (LPBYTE)&pAttack, sizeof(PMSG_BEATTACK));

  000d2	8a 85 ee fe ff
	ff		 mov	 al, BYTE PTR _pAttack$[ebp+2]

; 72   : 							ASBOfs += sizeof(PMSG_BEATTACK);

  000d8	83 85 e8 fe ff
	ff 03		 add	 DWORD PTR _ASBOfs$[ebp], 3
  000df	8b cb		 mov	 ecx, ebx
  000e1	c1 e9 08	 shr	 ecx, 8
  000e4	88 8d ec fe ff
	ff		 mov	 BYTE PTR _pAttack$[ebp], cl
  000ea	88 9d ed fe ff
	ff		 mov	 BYTE PTR _pAttack$[ebp+1], bl
  000f0	66 8b 95 ec fe
	ff ff		 mov	 dx, WORD PTR _pAttack$[ebp]
  000f7	66 89 17	 mov	 WORD PTR [edi], dx
  000fa	88 47 02	 mov	 BYTE PTR [edi+2], al
  000fd	83 c7 03	 add	 edi, 3

; 73   : 							pCount.Count++;

  00100	fe 85 f8 fe ff
	ff		 inc	 BYTE PTR _pCount$[ebp+8]
$LN16@CannonTowe:
  00106	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR tv369[ebp]
$LN18@CannonTowe:

; 74   : 						}
; 75   : 					}
; 76   : 				}
; 77   : 			}
; 78   : 		}
; 79   : 		count++;

  0010c	83 c1 0c	 add	 ecx, 12			; 0000000cH

; 80   : 
; 81   : 		if( count > MAX_VIEWPORT-1 ) break;

  0010f	ff 8d e0 fe ff
	ff		 dec	 DWORD PTR tv424[ebp]
  00115	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv369[ebp], ecx
  0011b	0f 85 77 ff ff
	ff		 jne	 $LL9@CannonTowe

; 82   : 	}
; 83   : 	if( pCount.Count > 0 ) 

  00121	8a 85 f8 fe ff
	ff		 mov	 al, BYTE PTR _pCount$[ebp+8]
  00127	5f		 pop	 edi
  00128	5b		 pop	 ebx
  00129	84 c0		 test	 al, al
  0012b	0f 84 a2 00 00
	00		 je	 $LN1@CannonTowe

; 84   : 	{
; 85   : 		pCount.h.size = ASBOfs;

  00131	8a 8d e8 fe ff
	ff		 mov	 cl, BYTE PTR _ASBOfs$[ebp]
  00137	88 8d f1 fe ff
	ff		 mov	 BYTE PTR _pCount$[ebp+1], cl

; 86   : 
; 87   : 		memcpy(AttackSendBuff, (LPBYTE)&pCount, sizeof(PMSG_BEATTACK_COUNT));

  0013d	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _pCount$[ebp]
  00143	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _pCount$[ebp+4]
  00149	88 85 04 ff ff
	ff		 mov	 BYTE PTR _AttackSendBuff$[ebp+8], al
  0014f	89 95 fc fe ff
	ff		 mov	 DWORD PTR _AttackSendBuff$[ebp], edx
  00155	89 8d 00 ff ff
	ff		 mov	 DWORD PTR _AttackSendBuff$[ebp+4], ecx

; 88   : 		CGBeattackRecv(AttackSendBuff, lpObj->m_Index, 1);

  0015b	8b 16		 mov	 edx, DWORD PTR [esi]
  0015d	6a 01		 push	 1
  0015f	52		 push	 edx
  00160	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _AttackSendBuff$[ebp]
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 ?CGBeattackRecv@@YAXPAEHH@Z ; CGBeattackRecv

; 89   : 
; 90   : 		PMSG_DURATION_MAGIC_SEND pSend;
; 91   : 		PHeadSetBE((LPBYTE)&pSend, 0x1E, sizeof(PMSG_DURATION_MAGIC_SEND));

  0016c	6a 0a		 push	 10			; 0000000aH
  0016e	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _pSend$205726[ebp]
  00174	6a 1e		 push	 30			; 0000001eH
  00176	51		 push	 ecx
  00177	e8 00 00 00 00	 call	 ?PHeadSetBE@@YAXPAEEH@Z	; PHeadSetBE

; 92   : 		pSend.MagicNumberH	= 0;
; 93   : 		pSend.MagicNumberL	= 0x32;
; 94   : 		pSend.X			= lpObj->X;

  0017c	8a 96 44 01 00
	00		 mov	 dl, BYTE PTR [esi+324]

; 95   : 		pSend.Y			= lpObj->Y;

  00182	8a 86 46 01 00
	00		 mov	 al, BYTE PTR [esi+326]
  00188	88 95 f7 fe ff
	ff		 mov	 BYTE PTR _pSend$205726[ebp+7], dl

; 96   : 		pSend.Dir		= 0;
; 97   : 		pSend.NumberH	= SET_NUMBERH(iIndex);
; 98   : 		pSend.NumberL	= SET_NUMBERL(iIndex);
; 99   : 			
; 100  : 		::MsgSendV2(lpObj, (LPBYTE)&pSend, pSend.h.size);

  0018e	0f b6 95 f1 fe
	ff ff		 movzx	 edx, BYTE PTR _pSend$205726[ebp+1]
  00195	88 85 f8 fe ff
	ff		 mov	 BYTE PTR _pSend$205726[ebp+8], al
  0019b	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _iIndex$GSCopy$[ebp]
  001a1	8b c8		 mov	 ecx, eax
  001a3	88 85 f6 fe ff
	ff		 mov	 BYTE PTR _pSend$205726[ebp+6], al
  001a9	52		 push	 edx
  001aa	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _pSend$205726[ebp]
  001b0	50		 push	 eax
  001b1	c1 e9 08	 shr	 ecx, 8
  001b4	56		 push	 esi
  001b5	66 c7 85 f3 fe
	ff ff 00 32	 mov	 WORD PTR _pSend$205726[ebp+3], 12800 ; 00003200H
  001be	c6 85 f9 fe ff
	ff 00		 mov	 BYTE PTR _pSend$205726[ebp+9], 0
  001c5	88 8d f5 fe ff
	ff		 mov	 BYTE PTR _pSend$205726[ebp+5], cl
  001cb	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  001d0	83 c4 24	 add	 esp, 36			; 00000024H
$LN1@CannonTowe:

; 101  : 
; 102  : 	}
; 103  : }

  001d3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d6	33 cd		 xor	 ecx, ebp
  001d8	5e		 pop	 esi
  001d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c2 04 00	 ret	 4
?CannonTowerAct@CCannonTower@@QAEXH@Z ENDP		; CCannonTower::CannonTowerAct
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCCannonTower@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCannonTower@@UAEPAXI@Z PROC			; CCannonTower::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CCannonTower@@UAE@XZ	; CCannonTower::~CCannonTower
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCCannonTower@@UAEPAXI@Z ENDP			; CCannonTower::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_CsNPC_CannonTower@@YAXXZ
text$yc	SEGMENT
??__Eg_CsNPC_CannonTower@@YAXXZ PROC			; `dynamic initializer for 'g_CsNPC_CannonTower'', COMDAT

; 12   : CCannonTower g_CsNPC_CannonTower;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CsNPC_CannonTower@@3VCCannonTower@@A ; g_CsNPC_CannonTower
  00005	e8 00 00 00 00	 call	 ??0CCannonTower@@QAE@XZ	; CCannonTower::CCannonTower
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_CsNPC_CannonTower@@YAXXZ ; `dynamic atexit destructor for 'g_CsNPC_CannonTower''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_CsNPC_CannonTower@@YAXXZ ENDP			; `dynamic initializer for 'g_CsNPC_CannonTower''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_CsNPC_CannonTower@@YAXXZ
text$yd	SEGMENT
??__Fg_CsNPC_CannonTower@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CsNPC_CannonTower'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CsNPC_CannonTower@@3VCCannonTower@@A ; g_CsNPC_CannonTower
  00005	e9 00 00 00 00	 jmp	 ??1CCannonTower@@UAE@XZ	; CCannonTower::~CCannonTower
??__Fg_CsNPC_CannonTower@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CsNPC_CannonTower''
text$yd	ENDS
PUBLIC	?g_CsNPC_CannonTower@@3VCCannonTower@@A		; g_CsNPC_CannonTower
_BSS	SEGMENT
?g_CsNPC_CannonTower@@3VCCannonTower@@A DD 01H DUP (?)	; g_CsNPC_CannonTower
_BSS	ENDS
CRT$XCU	SEGMENT
_g_CsNPC_CannonTower$initializer$ DD FLAT:??__Eg_CsNPC_CannonTower@@YAXXZ
CRT$XCU	ENDS
END
