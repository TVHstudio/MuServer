; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\Commands.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_sttBLOODCASTLE_LEVEL DD 0fH
	DD	050H
	DD	0aH
	DD	03cH
	DD	051H
	DD	082H
	DD	03dH
	DD	06eH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	014bH
	DD	03e8H
	DD	0137H
	DD	03e8H
	DD	0fH
	DD	04afH
	DD	0aH
	DD	04afH
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	?Ex_AddStr@@YAXHPAD@Z				; Ex_AddStr
EXTRN	?UpdateCharInfo@@YAXH@Z:PROC			; UpdateCharInfo
EXTRN	?GCManaSend@@YAXHHEEH@Z:PROC			; GCManaSend
EXTRN	?gObjSetBP@@YAXH@Z:PROC				; gObjSetBP
EXTRN	?GCReFillSend@@YAXHHEEH@Z:PROC			; GCReFillSend
EXTRN	?gObjCalCharacter@@YAXH@Z:PROC			; gObjCalCharacter
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?MsgNormal@@YAXHPADZZ:PROC			; MsgNormal
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
EXTRN	?ZtConfig@@3VcZtConfigs@@A:BYTE			; ZtConfig
EXTRN	_sscanf:PROC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
; File e:\work\tranet_version\gs\gameserver\commands.cpp
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Ex_AddStr@@YAXHPAD@Z
_TEXT	SEGMENT
_AddPoints$ = 8						; size = 4
_aIndex$ = 8						; size = 4
_msg$ = 12						; size = 4
?Ex_AddStr@@YAXHPAD@Z PROC				; Ex_AddStr, COMDAT

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 390  : 	LPOBJ lpObj = &gObj[aIndex];

  00005	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00008	8b f7		 mov	 esi, edi
  0000a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00010	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 391  : 	if(lpObj->LevelUpPoint == 0)

  00016	83 be c0 00 00
	00 00		 cmp	 DWORD PTR [esi+192], 0
  0001d	0f 84 4f 01 00
	00		 je	 $LN2@Ex_AddStr

; 392  : 		return;
; 393  : 	unsigned int AddPoints = 0;
; 394  : 	sscanf(msg,"%d",&AddPoints);

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _msg$[ebp]
  00026	8d 45 08	 lea	 eax, DWORD PTR _AddPoints$[ebp]
  00029	50		 push	 eax
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  0002f	51		 push	 ecx
  00030	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _AddPoints$[ebp], 0
  00037	e8 00 00 00 00	 call	 _sscanf

; 395  : 	if(lpObj->LevelUpPoint < AddPoints)

  0003c	8b 86 c0 00 00
	00		 mov	 eax, DWORD PTR [esi+192]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _AddPoints$[ebp]
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	3b c1		 cmp	 eax, ecx
  0004a	0f 82 22 01 00
	00		 jb	 $LN2@Ex_AddStr

; 396  : 		return;
; 397  : 	//int AddMoney = GetPrivateProfileInt("AddCommand","AddPriceZen",0,"..\\Data\\ZtData\\Commands.ini");
; 398  : 	if(ZtConfig.Command.AddMoney > lpObj->Money)

  00050	8b 15 cc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  00056	3b 96 f0 00 00
	00		 cmp	 edx, DWORD PTR [esi+240]
  0005c	7e 1b		 jle	 SHORT $LN4@Ex_AddStr

; 399  : 	{
; 400  : 		MsgNormal(aIndex, g_ZtText.GetText(126), ZtConfig.Command.AddMoney);

  0005e	52		 push	 edx
  0005f	6a 7e		 push	 126			; 0000007eH
  00061	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00066	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0006b	50		 push	 eax
  0006c	57		 push	 edi
  0006d	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi

; 424  : 	}
; 425  : }

  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN4@Ex_AddStr:

; 401  : 		return;
; 402  : 	}
; 403  : 	//int AddLeveL = GetPrivateProfileInt("AddCommand","AddPointLevel",1,"..\\Data\\ZtData\\Commands.ini");
; 404  : 	if(ZtConfig.Command.AddLeveL > lpObj->Level)

  00079	8b 15 d0 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1744
  0007f	53		 push	 ebx
  00080	0f bf 9e be 00
	00 00		 movsx	 ebx, WORD PTR [esi+190]
  00087	3b d3		 cmp	 edx, ebx
  00089	7e 1c		 jle	 SHORT $LN3@Ex_AddStr

; 405  : 	{
; 406  : 		MsgNormal(aIndex,g_ZtText.GetText(127),ZtConfig.Command.AddLeveL);

  0008b	52		 push	 edx
  0008c	6a 7f		 push	 127			; 0000007fH
  0008e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00093	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00098	50		 push	 eax
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	5b		 pop	 ebx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi

; 424  : 	}
; 425  : }

  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
$LN3@Ex_AddStr:

; 407  : 		return;
; 408  : 	}
; 409  : 	if (AddPoints>0 && AddPoints <= ZtConfig.Character.MaxStats)

  000a7	85 c9		 test	 ecx, ecx
  000a9	0f 84 c2 00 00
	00		 je	 $LN9@Ex_AddStr
  000af	3b 0d 80 01 00
	00		 cmp	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000b5	0f 87 b6 00 00
	00		 ja	 $LN9@Ex_AddStr

; 410  : 	{
; 411  : 		if((lpObj->Strength + AddPoints ) > ZtConfig.Character.MaxStats)

  000bb	0f b7 96 f4 00
	00 00		 movzx	 edx, WORD PTR [esi+244]
  000c2	8d 1c 11	 lea	 ebx, DWORD PTR [ecx+edx]
  000c5	3b 1d 80 01 00
	00		 cmp	 ebx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000cb	0f 87 a0 00 00
	00		 ja	 $LN9@Ex_AddStr

; 412  : 			return;
; 413  : 		lpObj->Strength += AddPoints;

  000d1	03 d1		 add	 edx, ecx
  000d3	66 89 96 f4 00
	00 00		 mov	 WORD PTR [esi+244], dx

; 414  : 		lpObj->LevelUpPoint -= AddPoints;

  000da	2b 45 08	 sub	 eax, DWORD PTR _AddPoints$[ebp]
  000dd	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax

; 415  : 		lpObj->Money -= ZtConfig.Command.AddMoney;

  000e3	8b 15 cc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  000e9	29 96 f0 00 00
	00		 sub	 DWORD PTR [esi+240], edx
  000ef	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]

; 416  : 		GCMoneySend(aIndex,lpObj->Money);

  000f5	50		 push	 eax
  000f6	57		 push	 edi
  000f7	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 417  : 		//ExUpdateStats(lpObj, AddPoints, 1);
; 418  : 		gObjCalCharacter(lpObj->m_Index);

  000fc	8b 06		 mov	 eax, DWORD PTR [esi]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter

; 419  : 		GCReFillSend(lpObj->m_Index,(lpObj->AddLife + lpObj->MaxLife), 0xFE, 0, (lpObj->iMaxShield + lpObj->iAddShield) );

  00104	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  0010a	8b 8e 5c 01 00
	00		 mov	 ecx, DWORD PTR [esi+348]
  00110	03 8e 58 01 00
	00		 add	 ecx, DWORD PTR [esi+344]
  00116	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  0011c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011f	51		 push	 ecx
  00120	6a 00		 push	 0
  00122	68 fe 00 00 00	 push	 254			; 000000feH
  00127	e8 00 00 00 00	 call	 __ftol2_sse
  0012c	8b 16		 mov	 edx, DWORD PTR [esi]
  0012e	50		 push	 eax
  0012f	52		 push	 edx
  00130	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend

; 420  : 		gObjSetBP(lpObj->m_Index);

  00135	8b 06		 mov	 eax, DWORD PTR [esi]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 421  : 		GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, lpObj->MaxBP);

  0013d	db 86 50 01 00
	00		 fild	 DWORD PTR [esi+336]
  00143	8b 8e 2c 01 00
	00		 mov	 ecx, DWORD PTR [esi+300]
  00149	83 c4 18	 add	 esp, 24			; 00000018H
  0014c	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  00152	51		 push	 ecx
  00153	6a 00		 push	 0
  00155	68 fe 00 00 00	 push	 254			; 000000feH
  0015a	e8 00 00 00 00	 call	 __ftol2_sse
  0015f	8b 16		 mov	 edx, DWORD PTR [esi]
  00161	50		 push	 eax
  00162	52		 push	 edx
  00163	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend

; 422  : 		//GCLevelUpMsgSend(gObj[aIndex].m_Index, 0);
; 423  : 		UpdateCharInfo(aIndex);

  00168	57		 push	 edi
  00169	e8 00 00 00 00	 call	 ?UpdateCharInfo@@YAXH@Z	; UpdateCharInfo
  0016e	83 c4 18	 add	 esp, 24			; 00000018H
$LN9@Ex_AddStr:
  00171	5b		 pop	 ebx
$LN2@Ex_AddStr:
  00172	5f		 pop	 edi
  00173	5e		 pop	 esi

; 424  : 	}
; 425  : }

  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
?Ex_AddStr@@YAXHPAD@Z ENDP				; Ex_AddStr
_TEXT	ENDS
PUBLIC	?Ex_AddAgi@@YAXHPAD@Z				; Ex_AddAgi
; Function compile flags: /Ogtp
;	COMDAT ?Ex_AddAgi@@YAXHPAD@Z
_TEXT	SEGMENT
_AddPoints$ = 8						; size = 4
_aIndex$ = 8						; size = 4
_msg$ = 12						; size = 4
?Ex_AddAgi@@YAXHPAD@Z PROC				; Ex_AddAgi, COMDAT

; 428  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 429  : 	LPOBJ lpObj = &gObj[aIndex];

  00005	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00008	8b f7		 mov	 esi, edi
  0000a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00010	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 430  : 	if(lpObj->LevelUpPoint == 0)

  00016	83 be c0 00 00
	00 00		 cmp	 DWORD PTR [esi+192], 0
  0001d	0f 84 4f 01 00
	00		 je	 $LN2@Ex_AddAgi

; 431  : 		return;
; 432  : 	unsigned int AddPoints = 0;
; 433  : 	sscanf(msg,"%d",&AddPoints);

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _msg$[ebp]
  00026	8d 45 08	 lea	 eax, DWORD PTR _AddPoints$[ebp]
  00029	50		 push	 eax
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  0002f	51		 push	 ecx
  00030	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _AddPoints$[ebp], 0
  00037	e8 00 00 00 00	 call	 _sscanf

; 434  : 	if(lpObj->LevelUpPoint < AddPoints)

  0003c	8b 86 c0 00 00
	00		 mov	 eax, DWORD PTR [esi+192]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _AddPoints$[ebp]
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	3b c1		 cmp	 eax, ecx
  0004a	0f 82 22 01 00
	00		 jb	 $LN2@Ex_AddAgi

; 435  : 		return;
; 436  : 	//int AddMoney = GetPrivateProfileInt("AddCommand","AddPriceZen",0,"..\\Data\\ZtData\\Commands.ini");
; 437  : 	if(ZtConfig.Command.AddMoney > lpObj->Money)

  00050	8b 15 cc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  00056	3b 96 f0 00 00
	00		 cmp	 edx, DWORD PTR [esi+240]
  0005c	7e 1b		 jle	 SHORT $LN4@Ex_AddAgi

; 438  : 	{
; 439  : 		MsgNormal(aIndex, g_ZtText.GetText(126),ZtConfig.Command.AddMoney);

  0005e	52		 push	 edx
  0005f	6a 7e		 push	 126			; 0000007eH
  00061	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00066	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0006b	50		 push	 eax
  0006c	57		 push	 edi
  0006d	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi

; 463  : 	}
; 464  : }

  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN4@Ex_AddAgi:

; 440  : 		return;
; 441  : 	}
; 442  : 	//int AddLeveL = GetPrivateProfileInt("AddCommand","AddPointLevel",1,"..\\Data\\ZtData\\Commands.ini");
; 443  : 	if(ZtConfig.Command.AddLeveL > lpObj->Level)

  00079	8b 15 d0 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1744
  0007f	53		 push	 ebx
  00080	0f bf 9e be 00
	00 00		 movsx	 ebx, WORD PTR [esi+190]
  00087	3b d3		 cmp	 edx, ebx
  00089	7e 1c		 jle	 SHORT $LN3@Ex_AddAgi

; 444  : 	{
; 445  : 		MsgNormal(aIndex,g_ZtText.GetText(127),ZtConfig.Command.AddLeveL);

  0008b	52		 push	 edx
  0008c	6a 7f		 push	 127			; 0000007fH
  0008e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00093	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00098	50		 push	 eax
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	5b		 pop	 ebx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi

; 463  : 	}
; 464  : }

  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
$LN3@Ex_AddAgi:

; 446  : 		return;
; 447  : 	}
; 448  : 	if (AddPoints>0 && AddPoints <= ZtConfig.Character.MaxStats)

  000a7	85 c9		 test	 ecx, ecx
  000a9	0f 84 c2 00 00
	00		 je	 $LN9@Ex_AddAgi
  000af	3b 0d 80 01 00
	00		 cmp	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000b5	0f 87 b6 00 00
	00		 ja	 $LN9@Ex_AddAgi

; 449  : 	{
; 450  : 		if ((lpObj->Dexterity + AddPoints) > ZtConfig.Character.MaxStats)

  000bb	0f b7 96 f6 00
	00 00		 movzx	 edx, WORD PTR [esi+246]
  000c2	8d 1c 11	 lea	 ebx, DWORD PTR [ecx+edx]
  000c5	3b 1d 80 01 00
	00		 cmp	 ebx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000cb	0f 87 a0 00 00
	00		 ja	 $LN9@Ex_AddAgi

; 451  : 			return;
; 452  : 		lpObj->Dexterity += AddPoints;

  000d1	03 d1		 add	 edx, ecx
  000d3	66 89 96 f6 00
	00 00		 mov	 WORD PTR [esi+246], dx

; 453  : 		lpObj->LevelUpPoint -= AddPoints;

  000da	2b 45 08	 sub	 eax, DWORD PTR _AddPoints$[ebp]
  000dd	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax

; 454  : 		lpObj->Money -= ZtConfig.Command.AddMoney;

  000e3	8b 15 cc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  000e9	29 96 f0 00 00
	00		 sub	 DWORD PTR [esi+240], edx
  000ef	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]

; 455  : 		GCMoneySend(aIndex,lpObj->Money);

  000f5	50		 push	 eax
  000f6	57		 push	 edi
  000f7	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 456  : 		//ExUpdateStats(lpObj, AddPoints, 2);
; 457  : 		gObjCalCharacter(lpObj->m_Index);

  000fc	8b 06		 mov	 eax, DWORD PTR [esi]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter

; 458  : 		GCReFillSend(lpObj->m_Index,(lpObj->AddLife + lpObj->MaxLife), 0xFE, 0, (lpObj->iMaxShield + lpObj->iAddShield) );

  00104	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  0010a	8b 8e 5c 01 00
	00		 mov	 ecx, DWORD PTR [esi+348]
  00110	03 8e 58 01 00
	00		 add	 ecx, DWORD PTR [esi+344]
  00116	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  0011c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011f	51		 push	 ecx
  00120	6a 00		 push	 0
  00122	68 fe 00 00 00	 push	 254			; 000000feH
  00127	e8 00 00 00 00	 call	 __ftol2_sse
  0012c	8b 16		 mov	 edx, DWORD PTR [esi]
  0012e	50		 push	 eax
  0012f	52		 push	 edx
  00130	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend

; 459  : 		gObjSetBP(lpObj->m_Index);

  00135	8b 06		 mov	 eax, DWORD PTR [esi]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 460  : 		GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, lpObj->MaxBP);

  0013d	db 86 50 01 00
	00		 fild	 DWORD PTR [esi+336]
  00143	8b 8e 2c 01 00
	00		 mov	 ecx, DWORD PTR [esi+300]
  00149	83 c4 18	 add	 esp, 24			; 00000018H
  0014c	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  00152	51		 push	 ecx
  00153	6a 00		 push	 0
  00155	68 fe 00 00 00	 push	 254			; 000000feH
  0015a	e8 00 00 00 00	 call	 __ftol2_sse
  0015f	8b 16		 mov	 edx, DWORD PTR [esi]
  00161	50		 push	 eax
  00162	52		 push	 edx
  00163	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend

; 461  : 		//GCLevelUpMsgSend(gObj[aIndex].m_Index, 0);
; 462  : 		UpdateCharInfo(aIndex);

  00168	57		 push	 edi
  00169	e8 00 00 00 00	 call	 ?UpdateCharInfo@@YAXH@Z	; UpdateCharInfo
  0016e	83 c4 18	 add	 esp, 24			; 00000018H
$LN9@Ex_AddAgi:
  00171	5b		 pop	 ebx
$LN2@Ex_AddAgi:
  00172	5f		 pop	 edi
  00173	5e		 pop	 esi

; 463  : 	}
; 464  : }

  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
?Ex_AddAgi@@YAXHPAD@Z ENDP				; Ex_AddAgi
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	?Ex_AddVit@@YAXHPAD@Z				; Ex_AddVit
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Ex_AddVit@@YAXHPAD@Z
_TEXT	SEGMENT
tv280 = -4						; size = 4
_AddPoints$ = 8						; size = 4
_aIndex$ = 8						; size = 4
_msg$ = 12						; size = 4
?Ex_AddVit@@YAXHPAD@Z PROC				; Ex_AddVit, COMDAT

; 467  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 468  : 	LPOBJ lpObj = &gObj[aIndex];

  00006	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00009	8b f7		 mov	 esi, edi
  0000b	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00011	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 469  : 	if(lpObj->LevelUpPoint == 0)

  00017	83 be c0 00 00
	00 00		 cmp	 DWORD PTR [esi+192], 0
  0001e	0f 84 76 01 00
	00		 je	 $LN2@Ex_AddVit

; 470  : 		return;
; 471  : 	unsigned int AddPoints = 0;
; 472  : 	sscanf(msg,"%d",&AddPoints);

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _msg$[ebp]
  00027	8d 45 08	 lea	 eax, DWORD PTR _AddPoints$[ebp]
  0002a	50		 push	 eax
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  00030	51		 push	 ecx
  00031	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _AddPoints$[ebp], 0
  00038	e8 00 00 00 00	 call	 _sscanf

; 473  : 	if(lpObj->LevelUpPoint < AddPoints)

  0003d	8b 86 c0 00 00
	00		 mov	 eax, DWORD PTR [esi+192]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _AddPoints$[ebp]
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	3b c1		 cmp	 eax, ecx
  0004b	0f 82 49 01 00
	00		 jb	 $LN2@Ex_AddVit

; 474  : 		return;
; 475  : 	//int AddMoney = GetPrivateProfileInt("AddCommand","AddPriceZen",0,"..\\Data\\ZtData\\Commands.ini");
; 476  : 	if(ZtConfig.Command.AddMoney > lpObj->Money)

  00051	8b 15 cc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  00057	3b 96 f0 00 00
	00		 cmp	 edx, DWORD PTR [esi+240]
  0005d	7e 1d		 jle	 SHORT $LN4@Ex_AddVit

; 477  : 	{
; 478  : 		MsgNormal(aIndex, g_ZtText.GetText(126),ZtConfig.Command.AddMoney);

  0005f	52		 push	 edx
  00060	6a 7e		 push	 126			; 0000007eH
  00062	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00067	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0006c	50		 push	 eax
  0006d	57		 push	 edi
  0006e	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi

; 507  : 	}
; 508  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN4@Ex_AddVit:

; 479  : 		return;
; 480  : 	}
; 481  : 	//int AddLeveL = GetPrivateProfileInt("AddCommand","AddPointLevel",1,"..\\Data\\ZtData\\Commands.ini");
; 482  : 	if(ZtConfig.Command.AddLeveL > lpObj->Level)

  0007c	8b 15 d0 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1744
  00082	53		 push	 ebx
  00083	0f bf 9e be 00
	00 00		 movsx	 ebx, WORD PTR [esi+190]
  0008a	3b d3		 cmp	 edx, ebx
  0008c	7e 1e		 jle	 SHORT $LN3@Ex_AddVit

; 483  : 	{
; 484  : 		MsgNormal(aIndex,g_ZtText.GetText(127),ZtConfig.Command.AddLeveL);

  0008e	52		 push	 edx
  0008f	6a 7f		 push	 127			; 0000007fH
  00091	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00096	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0009b	50		 push	 eax
  0009c	57		 push	 edi
  0009d	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a5	5b		 pop	 ebx
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi

; 507  : 	}
; 508  : }

  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
$LN3@Ex_AddVit:

; 485  : 		return;
; 486  : 	}
; 487  : 	if (AddPoints>0 && AddPoints <= ZtConfig.Character.MaxStats)

  000ac	85 c9		 test	 ecx, ecx
  000ae	0f 84 e5 00 00
	00		 je	 $LN9@Ex_AddVit
  000b4	3b 0d 80 01 00
	00		 cmp	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000ba	0f 87 d9 00 00
	00		 ja	 $LN9@Ex_AddVit

; 488  : 	{
; 489  : 		if ((lpObj->Vitality + AddPoints ) > ZtConfig.Character.MaxStats)

  000c0	0f b7 96 f8 00
	00 00		 movzx	 edx, WORD PTR [esi+248]
  000c7	8d 1c 11	 lea	 ebx, DWORD PTR [ecx+edx]
  000ca	3b 1d 80 01 00
	00		 cmp	 ebx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000d0	0f 87 c3 00 00
	00		 ja	 $LN9@Ex_AddVit

; 490  : 			return;
; 491  : 		lpObj->Vitality += AddPoints;
; 492  : 		lpObj->MaxLife += lpObj->VitalityToLife * AddPoints;

  000d6	d9 86 34 01 00
	00		 fld	 DWORD PTR [esi+308]
  000dc	03 d1		 add	 edx, ecx
  000de	66 89 96 f8 00
	00 00		 mov	 WORD PTR [esi+248], dx
  000e5	db 45 08	 fild	 DWORD PTR _AddPoints$[ebp]
  000e8	8b 55 08	 mov	 edx, DWORD PTR _AddPoints$[ebp]
  000eb	85 d2		 test	 edx, edx
  000ed	79 06		 jns	 SHORT $LN10@Ex_AddVit
  000ef	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN10@Ex_AddVit:
  000f5	de c9		 fmulp	 ST(1), ST(0)
  000f7	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  000fd	d9 9e 00 01 00
	00		 fstp	 DWORD PTR [esi+256]

; 493  : 		lpObj->LevelUpPoint -= AddPoints;

  00103	2b 45 08	 sub	 eax, DWORD PTR _AddPoints$[ebp]
  00106	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax

; 494  : 		lpObj->Money -= ZtConfig.Command.AddMoney;

  0010c	a1 cc 06 00 00	 mov	 eax, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  00111	29 86 f0 00 00
	00		 sub	 DWORD PTR [esi+240], eax
  00117	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]

; 495  : 		//if(lpObj->Type == CLASS_KNIGHT)
; 496  : 		//	lpObj->MaxLife += AddPoints * 3;
; 497  : 		//else
; 498  : 		//	lpObj->MaxLife += AddPoints * 2;
; 499  : 		GCMoneySend(aIndex,lpObj->Money);

  0011d	50		 push	 eax
  0011e	57		 push	 edi
  0011f	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 500  : 		//ExUpdateStats(lpObj, AddPoints, 3);
; 501  : 		gObjCalCharacter(lpObj->m_Index);

  00124	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter

; 502  : 		GCReFillSend(lpObj->m_Index,(lpObj->AddLife + lpObj->MaxLife), 0xFE, 0, (lpObj->iMaxShield + lpObj->iAddShield) );

  0012c	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  00132	8b 96 5c 01 00
	00		 mov	 edx, DWORD PTR [esi+348]
  00138	03 96 58 01 00
	00		 add	 edx, DWORD PTR [esi+344]
  0013e	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH
  00147	52		 push	 edx
  00148	6a 00		 push	 0
  0014a	68 fe 00 00 00	 push	 254			; 000000feH
  0014f	e8 00 00 00 00	 call	 __ftol2_sse
  00154	50		 push	 eax
  00155	8b 06		 mov	 eax, DWORD PTR [esi]
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend

; 503  : 		gObjSetBP(lpObj->m_Index);

  0015d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0015f	51		 push	 ecx
  00160	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 504  : 		GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, lpObj->MaxBP);

  00165	db 86 50 01 00
	00		 fild	 DWORD PTR [esi+336]
  0016b	8b 96 2c 01 00
	00		 mov	 edx, DWORD PTR [esi+300]
  00171	83 c4 18	 add	 esp, 24			; 00000018H
  00174	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  0017a	52		 push	 edx
  0017b	6a 00		 push	 0
  0017d	68 fe 00 00 00	 push	 254			; 000000feH
  00182	e8 00 00 00 00	 call	 __ftol2_sse
  00187	50		 push	 eax
  00188	8b 06		 mov	 eax, DWORD PTR [esi]
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend

; 505  : 		//GCLevelUpMsgSend(gObj[aIndex].m_Index, 0);
; 506  : 		UpdateCharInfo(aIndex);

  00190	57		 push	 edi
  00191	e8 00 00 00 00	 call	 ?UpdateCharInfo@@YAXH@Z	; UpdateCharInfo
  00196	83 c4 18	 add	 esp, 24			; 00000018H
$LN9@Ex_AddVit:
  00199	5b		 pop	 ebx
$LN2@Ex_AddVit:
  0019a	5f		 pop	 edi
  0019b	5e		 pop	 esi

; 507  : 	}
; 508  : }

  0019c	8b e5		 mov	 esp, ebp
  0019e	5d		 pop	 ebp
  0019f	c3		 ret	 0
?Ex_AddVit@@YAXHPAD@Z ENDP				; Ex_AddVit
_TEXT	ENDS
PUBLIC	?Ex_AddEne@@YAXHPAD@Z				; Ex_AddEne
; Function compile flags: /Ogtp
;	COMDAT ?Ex_AddEne@@YAXHPAD@Z
_TEXT	SEGMENT
tv275 = -8						; size = 4
_AddPoints$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_msg$ = 12						; size = 4
?Ex_AddEne@@YAXHPAD@Z PROC				; Ex_AddEne, COMDAT

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 512  : 	LPOBJ lpObj = &gObj[aIndex];

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  0000a	56		 push	 esi
  0000b	8b f3		 mov	 esi, ebx
  0000d	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00013	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 513  : 	if(lpObj->LevelUpPoint == 0)

  00019	83 be c0 00 00
	00 00		 cmp	 DWORD PTR [esi+192], 0
  00020	0f 84 82 01 00
	00		 je	 $LN2@Ex_AddEne

; 514  : 		return;
; 515  : 	unsigned int AddPoints = 0;
; 516  : 	sscanf(msg,"%d",&AddPoints);

  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _msg$[ebp]
  00029	8d 45 fc	 lea	 eax, DWORD PTR _AddPoints$[ebp]
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  00032	51		 push	 ecx
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _AddPoints$[ebp], 0
  0003a	e8 00 00 00 00	 call	 _sscanf

; 517  : 	if(lpObj->LevelUpPoint < AddPoints)

  0003f	8b 86 c0 00 00
	00		 mov	 eax, DWORD PTR [esi+192]
  00045	8b 55 fc	 mov	 edx, DWORD PTR _AddPoints$[ebp]
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	3b c2		 cmp	 eax, edx
  0004d	0f 82 55 01 00
	00		 jb	 $LN2@Ex_AddEne

; 518  : 		return;
; 519  : 	//int AddMoney = GetPrivateProfileInt("AddCommand","AddPriceZen",0,"..\\Data\\ZtData\\Commands.ini");
; 520  : 	if(ZtConfig.Command.AddMoney > lpObj->Money)

  00053	8b 8e f0 00 00
	00		 mov	 ecx, DWORD PTR [esi+240]
  00059	57		 push	 edi
  0005a	8b 3d cc 06 00
	00		 mov	 edi, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  00060	3b f9		 cmp	 edi, ecx
  00062	7e 1e		 jle	 SHORT $LN4@Ex_AddEne

; 521  : 	{
; 522  : 		MsgNormal(aIndex, g_ZtText.GetText(126),ZtConfig.Command.AddMoney);

  00064	57		 push	 edi
  00065	6a 7e		 push	 126			; 0000007eH
  00067	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0006c	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00071	50		 push	 eax
  00072	53		 push	 ebx
  00073	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx

; 547  : 	}
; 548  : }

  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
$LN4@Ex_AddEne:

; 523  : 		return;
; 524  : 	}
; 525  : 	//int AddLeveL = GetPrivateProfileInt("AddCommand","AddPointLevel",1,"..\\Data\\ZtData\\Commands.ini");
; 526  : 	if(ZtConfig.Command.AddLeveL > lpObj->Level)

  00082	0f bf 9e be 00
	00 00		 movsx	 ebx, WORD PTR [esi+190]
  00089	8b 3d d0 06 00
	00		 mov	 edi, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1744
  0008f	3b fb		 cmp	 edi, ebx
  00091	7e 21		 jle	 SHORT $LN3@Ex_AddEne

; 527  : 	{
; 528  : 		MsgNormal(aIndex,g_ZtText.GetText(127),ZtConfig.Command.AddLeveL);

  00093	57		 push	 edi
  00094	6a 7f		 push	 127			; 0000007fH
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0009b	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000a0	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  000a3	50		 push	 eax
  000a4	52		 push	 edx
  000a5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx

; 547  : 	}
; 548  : }

  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
$LN3@Ex_AddEne:

; 529  : 		return;
; 530  : 	}
; 531  : 	if (AddPoints>0 && AddPoints <= ZtConfig.Character.MaxStats)

  000b4	85 d2		 test	 edx, edx
  000b6	0f 84 eb 00 00
	00		 je	 $LN9@Ex_AddEne
  000bc	8b 1d 80 01 00
	00		 mov	 ebx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+384
  000c2	3b d3		 cmp	 edx, ebx
  000c4	0f 87 dd 00 00
	00		 ja	 $LN9@Ex_AddEne

; 532  : 	{
; 533  : 		if ((lpObj->Energy + AddPoints ) > ZtConfig.Character.MaxStats)

  000ca	0f b7 be fa 00
	00 00		 movzx	 edi, WORD PTR [esi+250]
  000d1	03 fa		 add	 edi, edx
  000d3	3b fb		 cmp	 edi, ebx
  000d5	0f 87 cc 00 00
	00		 ja	 $LN9@Ex_AddEne

; 534  : 			return;
; 535  : 		lpObj->Energy += AddPoints;

  000db	0f b7 be fa 00
	00 00		 movzx	 edi, WORD PTR [esi+250]
  000e2	03 fa		 add	 edi, edx
  000e4	66 89 be fa 00
	00 00		 mov	 WORD PTR [esi+250], di

; 536  : 		lpObj->LevelUpPoint -= AddPoints;

  000eb	2b 45 fc	 sub	 eax, DWORD PTR _AddPoints$[ebp]
  000ee	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax

; 537  : 		lpObj->Money -= ZtConfig.Command.AddMoney;

  000f4	2b 0d cc 06 00
	00		 sub	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  000fa	89 8e f0 00 00
	00		 mov	 DWORD PTR [esi+240], ecx

; 538  : 		lpObj->MaxMana += AddPoints * 2;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _AddPoints$[ebp]
  00103	8d 0c 00	 lea	 ecx, DWORD PTR [eax+eax]
  00106	89 4d f8	 mov	 DWORD PTR tv275[ebp], ecx
  00109	db 45 f8	 fild	 DWORD PTR tv275[ebp]
  0010c	85 c9		 test	 ecx, ecx
  0010e	79 06		 jns	 SHORT $LN10@Ex_AddEne
  00110	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN10@Ex_AddEne:

; 539  : 		GCMoneySend(aIndex,lpObj->Money);

  00116	8b 96 f0 00 00
	00		 mov	 edx, DWORD PTR [esi+240]
  0011c	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  00122	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00125	52		 push	 edx
  00126	57		 push	 edi
  00127	d9 9e 14 01 00
	00		 fstp	 DWORD PTR [esi+276]
  0012d	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 540  : 		//ExUpdateStats(lpObj, AddPoints, 4);
; 541  : 		gObjCalCharacter(lpObj->m_Index);

  00132	8b 06		 mov	 eax, DWORD PTR [esi]
  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter

; 542  : 		GCReFillSend(lpObj->m_Index,(lpObj->AddLife + lpObj->MaxLife), 0xFE, 0, (lpObj->iMaxShield + lpObj->iAddShield) );

  0013a	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  00140	8b 8e 5c 01 00
	00		 mov	 ecx, DWORD PTR [esi+348]
  00146	03 8e 58 01 00
	00		 add	 ecx, DWORD PTR [esi+344]
  0014c	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  00152	83 c4 0c	 add	 esp, 12			; 0000000cH
  00155	51		 push	 ecx
  00156	6a 00		 push	 0
  00158	68 fe 00 00 00	 push	 254			; 000000feH
  0015d	e8 00 00 00 00	 call	 __ftol2_sse
  00162	8b 16		 mov	 edx, DWORD PTR [esi]
  00164	50		 push	 eax
  00165	52		 push	 edx
  00166	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend

; 543  : 		gObjSetBP(lpObj->m_Index);

  0016b	8b 06		 mov	 eax, DWORD PTR [esi]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 544  : 		GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, lpObj->MaxBP);

  00173	db 86 50 01 00
	00		 fild	 DWORD PTR [esi+336]
  00179	8b 8e 2c 01 00
	00		 mov	 ecx, DWORD PTR [esi+300]
  0017f	83 c4 18	 add	 esp, 24			; 00000018H
  00182	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  00188	51		 push	 ecx
  00189	6a 00		 push	 0
  0018b	68 fe 00 00 00	 push	 254			; 000000feH
  00190	e8 00 00 00 00	 call	 __ftol2_sse
  00195	8b 16		 mov	 edx, DWORD PTR [esi]
  00197	50		 push	 eax
  00198	52		 push	 edx
  00199	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend

; 545  : 		//GCLevelUpMsgSend(gObj[aIndex].m_Index, 0);
; 546  : 		UpdateCharInfo(aIndex);

  0019e	57		 push	 edi
  0019f	e8 00 00 00 00	 call	 ?UpdateCharInfo@@YAXH@Z	; UpdateCharInfo
  001a4	83 c4 18	 add	 esp, 24			; 00000018H
$LN9@Ex_AddEne:
  001a7	5f		 pop	 edi
$LN2@Ex_AddEne:
  001a8	5e		 pop	 esi
  001a9	5b		 pop	 ebx

; 547  : 	}
; 548  : }

  001aa	8b e5		 mov	 esp, ebp
  001ac	5d		 pop	 ebp
  001ad	c3		 ret	 0
?Ex_AddEne@@YAXHPAD@Z ENDP				; Ex_AddEne
_TEXT	ENDS
PUBLIC	?Ex_AddCmd@@YAXHPAD@Z				; Ex_AddCmd
; Function compile flags: /Ogtp
;	COMDAT ?Ex_AddCmd@@YAXHPAD@Z
_TEXT	SEGMENT
_AddPoints$ = 8						; size = 4
_aIndex$ = 8						; size = 4
_msg$ = 12						; size = 4
?Ex_AddCmd@@YAXHPAD@Z PROC				; Ex_AddCmd, COMDAT

; 551  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 552  : 	LPOBJ lpObj = &gObj[aIndex];

  00005	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00008	8b f7		 mov	 esi, edi
  0000a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00010	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 553  : 	if(lpObj->Class != 4)

  00016	66 83 be b8 00
	00 00 04	 cmp	 WORD PTR [esi+184], 4
  0001e	0f 85 57 01 00
	00		 jne	 $LN2@Ex_AddCmd

; 554  : 		return;
; 555  : 	if(lpObj->LevelUpPoint == 0)

  00024	83 be c0 00 00
	00 00		 cmp	 DWORD PTR [esi+192], 0
  0002b	0f 84 4a 01 00
	00		 je	 $LN2@Ex_AddCmd

; 556  : 		return;
; 557  : 	unsigned int AddPoints = 0;
; 558  : 	sscanf(msg,"%d",&AddPoints);

  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _msg$[ebp]
  00034	8d 45 08	 lea	 eax, DWORD PTR _AddPoints$[ebp]
  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  0003d	51		 push	 ecx
  0003e	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _AddPoints$[ebp], 0
  00045	e8 00 00 00 00	 call	 _sscanf

; 559  : 	if(lpObj->LevelUpPoint < AddPoints)

  0004a	8b 86 c0 00 00
	00		 mov	 eax, DWORD PTR [esi+192]
  00050	8b 55 08	 mov	 edx, DWORD PTR _AddPoints$[ebp]
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH
  00056	3b c2		 cmp	 eax, edx
  00058	0f 82 1d 01 00
	00		 jb	 $LN2@Ex_AddCmd

; 560  : 		return;
; 561  : 	//int AddMoney = GetPrivateProfileInt("AddCommand","AddPriceZen",0,"..\\Data\\ZtData\\Commands.ini");
; 562  : 	if(ZtConfig.Command.AddMoney > lpObj->Money)

  0005e	8b 0d cc 06 00
	00		 mov	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  00064	3b 8e f0 00 00
	00		 cmp	 ecx, DWORD PTR [esi+240]
  0006a	7e 1b		 jle	 SHORT $LN4@Ex_AddCmd

; 563  : 	{
; 564  : 		MsgNormal(aIndex, g_ZtText.GetText(126),ZtConfig.Command.AddMoney);

  0006c	51		 push	 ecx
  0006d	6a 7e		 push	 126			; 0000007eH
  0006f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00074	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00079	50		 push	 eax
  0007a	57		 push	 edi
  0007b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi

; 588  : 	}
; 589  : }

  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN4@Ex_AddCmd:

; 565  : 		return;
; 566  : 	}
; 567  : 	//int AddLeveL = GetPrivateProfileInt("AddCommand","AddPointLevel",1,"..\\Data\\ZtData\\Commands.ini");
; 568  : 	if(ZtConfig.Command.AddLeveL > lpObj->Level)

  00087	8b 0d d0 06 00
	00		 mov	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1744
  0008d	53		 push	 ebx
  0008e	0f bf 9e be 00
	00 00		 movsx	 ebx, WORD PTR [esi+190]
  00095	3b cb		 cmp	 ecx, ebx
  00097	7e 1c		 jle	 SHORT $LN3@Ex_AddCmd

; 569  : 	{
; 570  : 		MsgNormal(aIndex,g_ZtText.GetText(127),ZtConfig.Command.AddLeveL);

  00099	51		 push	 ecx
  0009a	6a 7f		 push	 127			; 0000007fH
  0009c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000a1	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000a6	50		 push	 eax
  000a7	57		 push	 edi
  000a8	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b0	5b		 pop	 ebx
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi

; 588  : 	}
; 589  : }

  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
$LN3@Ex_AddCmd:

; 571  : 		return;
; 572  : 	}
; 573  : 	if(AddPoints>0 && AddPoints<=32767)

  000b5	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  000b8	81 f9 fe 7f 00
	00		 cmp	 ecx, 32766		; 00007ffeH
  000be	0f 87 b6 00 00
	00		 ja	 $LN10@Ex_AddCmd

; 574  : 	{
; 575  : 		if((lpObj->Leadership + AddPoints) > 32767)

  000c4	0f b7 8e 18 01
	00 00		 movzx	 ecx, WORD PTR [esi+280]
  000cb	8d 1c 0a	 lea	 ebx, DWORD PTR [edx+ecx]
  000ce	81 fb ff 7f 00
	00		 cmp	 ebx, 32767		; 00007fffH
  000d4	0f 87 a0 00 00
	00		 ja	 $LN10@Ex_AddCmd

; 576  : 			return;
; 577  : 		lpObj->Leadership += AddPoints;

  000da	03 ca		 add	 ecx, edx
  000dc	66 89 8e 18 01
	00 00		 mov	 WORD PTR [esi+280], cx

; 578  : 		lpObj->LevelUpPoint -= AddPoints;

  000e3	2b 45 08	 sub	 eax, DWORD PTR _AddPoints$[ebp]
  000e6	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax

; 579  : 		lpObj->Money -= ZtConfig.Command.AddMoney;

  000ec	8b 15 cc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1740
  000f2	29 96 f0 00 00
	00		 sub	 DWORD PTR [esi+240], edx
  000f8	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]

; 580  : 		GCMoneySend(aIndex,lpObj->Money);

  000fe	50		 push	 eax
  000ff	57		 push	 edi
  00100	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 581  : 		//ExUpdateStats(lpObj, AddPoints, 5);
; 582  : 		gObjCalCharacter(lpObj->m_Index);

  00105	8b 06		 mov	 eax, DWORD PTR [esi]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter

; 583  : 		GCReFillSend(lpObj->m_Index,(lpObj->AddLife + lpObj->MaxLife), 0xFE, 0, (lpObj->iMaxShield + lpObj->iAddShield) );

  0010d	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  00113	8b 8e 5c 01 00
	00		 mov	 ecx, DWORD PTR [esi+348]
  00119	03 8e 58 01 00
	00		 add	 ecx, DWORD PTR [esi+344]
  0011f	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  00125	83 c4 0c	 add	 esp, 12			; 0000000cH
  00128	51		 push	 ecx
  00129	6a 00		 push	 0
  0012b	68 fe 00 00 00	 push	 254			; 000000feH
  00130	e8 00 00 00 00	 call	 __ftol2_sse
  00135	8b 16		 mov	 edx, DWORD PTR [esi]
  00137	50		 push	 eax
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend

; 584  : 		gObjSetBP(lpObj->m_Index);

  0013e	8b 06		 mov	 eax, DWORD PTR [esi]
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 585  : 		GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, lpObj->MaxBP);

  00146	db 86 50 01 00
	00		 fild	 DWORD PTR [esi+336]
  0014c	8b 8e 2c 01 00
	00		 mov	 ecx, DWORD PTR [esi+300]
  00152	83 c4 18	 add	 esp, 24			; 00000018H
  00155	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  0015b	51		 push	 ecx
  0015c	6a 00		 push	 0
  0015e	68 fe 00 00 00	 push	 254			; 000000feH
  00163	e8 00 00 00 00	 call	 __ftol2_sse
  00168	8b 16		 mov	 edx, DWORD PTR [esi]
  0016a	50		 push	 eax
  0016b	52		 push	 edx
  0016c	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend

; 586  : 		//GCLevelUpMsgSend(gObj[aIndex].m_Index, 0);
; 587  : 		UpdateCharInfo(aIndex);

  00171	57		 push	 edi
  00172	e8 00 00 00 00	 call	 ?UpdateCharInfo@@YAXH@Z	; UpdateCharInfo
  00177	83 c4 18	 add	 esp, 24			; 00000018H
$LN10@Ex_AddCmd:
  0017a	5b		 pop	 ebx
$LN2@Ex_AddCmd:
  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi

; 588  : 	}
; 589  : }

  0017d	5d		 pop	 ebp
  0017e	c3		 ret	 0
?Ex_AddCmd@@YAXHPAD@Z ENDP				; Ex_AddCmd
_TEXT	ENDS
PUBLIC	??_C@_0BK@OIDDILMF@?$FLPkClear?$FN?5Need?5?$CFd?5Credits?$AA@ ; `string'
PUBLIC	??_C@_0CC@JDBEDODN@?$FLPkClear?$FN?5Success?5Cost?3?5Credit?5?$CF@ ; `string'
PUBLIC	?Zt_PkClear@@YAXH@Z				; Zt_PkClear
EXTRN	?GCPkLevelSend@@YAXHE@Z:PROC			; GCPkLevelSend
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
;	COMDAT ??_C@_0BK@OIDDILMF@?$FLPkClear?$FN?5Need?5?$CFd?5Credits?$AA@
CONST	SEGMENT
??_C@_0BK@OIDDILMF@?$FLPkClear?$FN?5Need?5?$CFd?5Credits?$AA@ DB '[PkClea'
	DB	'r] Need %d Credits', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JDBEDODN@?$FLPkClear?$FN?5Success?5Cost?3?5Credit?5?$CF@
CONST	SEGMENT
??_C@_0CC@JDBEDODN@?$FLPkClear?$FN?5Success?5Cost?3?5Credit?5?$CF@ DB '[P'
	DB	'kClear] Success Cost: Credit %d', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Zt_PkClear@@YAXH@Z
_TEXT	SEGMENT
tv281 = -4						; size = 4
_PkMoneyCredits$216475 = -4				; size = 4
_PkLevel$216469 = -4					; size = 4
_aIndex$ = 8						; size = 4
?Zt_PkClear@@YAXH@Z PROC				; Zt_PkClear, COMDAT

; 592  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 593  : 	//int Zt_PkClear_Enabled = GetPrivateProfileInt("PkClear","Enabled",1,"..\\Data\\ZtData\\Commands.ini");
; 594  : 	if(!ZtConfig.Command.Zt_PkClear_Enabled)

  00005	33 db		 xor	 ebx, ebx
  00007	39 1d d4 06 00
	00		 cmp	 DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1748, ebx
  0000d	0f 84 4c 02 00
	00		 je	 $LN1@Zt_PkClear

; 595  : 		return;
; 596  : 	LPOBJ lpObj = &gObj[aIndex];
; 597  : 	//int Zt_PkClearLevel = GetPrivateProfileInt("PkClear","PkClearLevel",0,"..\\Data\\ZtData\\Commands.ini");
; 598  : 	if(ZtConfig.Command.Zt_PkClearLevel > lpObj->Level)

  00013	a1 d8 06 00 00	 mov	 eax, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1752
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0001d	8b f7		 mov	 esi, edi
  0001f	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00025	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002b	0f bf 8e be 00
	00 00		 movsx	 ecx, WORD PTR [esi+190]
  00032	3b c1		 cmp	 eax, ecx
  00034	7e 0b		 jle	 SHORT $LN15@Zt_PkClear

; 599  : 	{
; 600  : 		MsgNormal(aIndex,g_ZtText.GetText(128),ZtConfig.Command.Zt_PkClearLevel);

  00036	50		 push	 eax
  00037	68 80 00 00 00	 push	 128			; 00000080H

; 601  : 		return;

  0003c	e9 1a 01 00 00	 jmp	 $LN23@Zt_PkClear
$LN15@Zt_PkClear:

; 602  : 	}
; 603  : 	//int Zt_PkClearMoney = GetPrivateProfileInt("PkClear","PkClearMoney",0,"..\\Data\\ZtData\\Commands.ini");
; 604  : 	//int Zt_PKClearType = GetPrivateProfileInt("PkClear","PKClearType",0,"..\\Data\\ZtData\\Commands.ini");
; 605  : 	if(lpObj->m_PK_Level <= 3)

  00041	8a 86 3d 01 00
	00		 mov	 al, BYTE PTR [esi+317]
  00047	3c 03		 cmp	 al, 3
  00049	0f 8e 0e 02 00
	00		 jle	 $LN19@Zt_PkClear

; 606  : 		return;
; 607  : 	if(ZtConfig.Command.Zt_PKClearType == 1)

  0004f	8b 0d e0 06 00
	00		 mov	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1760
  00055	83 f9 01	 cmp	 ecx, 1
  00058	0f 85 e1 00 00
	00		 jne	 $LN13@Zt_PkClear

; 608  : 	{
; 609  : 			int PkLevel = lpObj->m_PK_Level - 3;

  0005e	0f be c0	 movsx	 eax, al
  00061	83 e8 03	 sub	 eax, 3
  00064	89 45 fc	 mov	 DWORD PTR _PkLevel$216469[ebp], eax

; 610  : 			if(PkLevel == 0)

  00067	0f 84 f0 01 00
	00		 je	 $LN19@Zt_PkClear

; 611  : 				return;
; 612  : 			int PkMoney = PkLevel * ZtConfig.Command.Zt_PkClearMoney;

  0006d	8b 1d dc 06 00
	00		 mov	 ebx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1756
  00073	0f af d8	 imul	 ebx, eax

; 613  : 			if(PkMoney > lpObj->Money)

  00076	3b 9e f0 00 00
	00		 cmp	 ebx, DWORD PTR [esi+240]
  0007c	7e 06		 jle	 SHORT $LN11@Zt_PkClear

; 614  : 			{
; 615  : 				MsgNormal(aIndex,g_ZtText.GetText(129),PkMoney);

  0007e	53		 push	 ebx

; 616  : 				return;

  0007f	e9 d2 00 00 00	 jmp	 $LN22@Zt_PkClear
$LN11@Zt_PkClear:

; 617  : 			}
; 618  : #ifdef PK_CLEAR_TO_CREDITS
; 619  : 			if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2))

  00084	6a 1c		 push	 28			; 0000001cH
  00086	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0008b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00090	84 c0		 test	 al, al
  00092	75 20		 jne	 SHORT $LN9@Zt_PkClear
  00094	6a 07		 push	 7
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0009b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000a0	84 c0		 test	 al, al
  000a2	75 10		 jne	 SHORT $LN9@Zt_PkClear
  000a4	6a 08		 push	 8
  000a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000ab	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000b0	84 c0		 test	 al, al
  000b2	74 4d		 je	 SHORT $LN10@Zt_PkClear
$LN9@Zt_PkClear:

; 620  : 			{
; 621  : 				int PkMoneyCredits = PkLevel * ZtConfig.Command.Zt_PkClearCredits;

  000b4	8b 0d e4 06 00
	00		 mov	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1764
  000ba	0f af 4d fc	 imul	 ecx, DWORD PTR _PkLevel$216469[ebp]
  000be	89 4d fc	 mov	 DWORD PTR _PkMoneyCredits$216475[ebp], ecx

; 622  : 			
; 623  : 				if(PkMoneyCredits > lpObj->ZtCred)
; 624  : 				{
; 625  : 					MsgNormal(aIndex,"[PkClear] Need %d Credits",PkMoneyCredits);

  000c1	51		 push	 ecx
  000c2	db 45 fc	 fild	 DWORD PTR _PkMoneyCredits$216475[ebp]
  000c5	d9 5d fc	 fstp	 DWORD PTR tv281[ebp]
  000c8	d9 45 fc	 fld	 DWORD PTR tv281[ebp]
  000cb	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  000d1	de d9		 fcompp
  000d3	df e0		 fnstsw	 ax
  000d5	f6 c4 05	 test	 ah, 5

; 626  : 					return;

  000d8	0f 8b e3 00 00
	00		 jnp	 $LN21@Zt_PkClear

; 627  : 				}
; 628  : 				MsgNormal(aIndex,"[PkClear] Success Cost: Credit %d",PkMoneyCredits);

  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JDBEDODN@?$FLPkClear?$FN?5Success?5Cost?3?5Credit?5?$CF@
  000e3	57		 push	 edi
  000e4	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

; 629  : 					
; 630  : 				lpObj->ZtCred -= PkMoneyCredits;

  000e9	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  000ef	d8 65 fc	 fsub	 DWORD PTR tv281[ebp]

; 631  : 				ZtUserDataSend(aIndex);

  000f2	57		 push	 edi
  000f3	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  000f9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  000fe	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@Zt_PkClear:

; 632  : 			}
; 633  : 			
; 634  : #endif // PK_CLEAR_TO_CREDITS
; 635  : 
; 636  : 			lpObj->Money -= PkMoney;

  00101	29 9e f0 00 00
	00		 sub	 DWORD PTR [esi+240], ebx
  00107	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]

; 637  : 			lpObj->m_PK_Level = 3;
; 638  : 			lpObj->m_PK_Count = 0;
; 639  : #if(FIX_PKLEVEL)
; 640  : 			lpObj->m_PK_Time = 0;
; 641  : #endif
; 642  : 			GCMoneySend(aIndex,lpObj->Money);

  0010d	50		 push	 eax
  0010e	57		 push	 edi
  0010f	66 c7 86 3c 01
	00 00 00 03	 mov	 WORD PTR [esi+316], 768	; 00000300H
  00118	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0
  00122	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 643  : 			GCPkLevelSend(aIndex,lpObj->m_PK_Level);

  00127	0f b6 96 3d 01
	00 00		 movzx	 edx, BYTE PTR [esi+317]
  0012e	52		 push	 edx
  0012f	57		 push	 edi
  00130	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  00135	83 c4 10	 add	 esp, 16			; 00000010H
  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx

; 678  : 	}
; 679  : }

  0013b	8b e5		 mov	 esp, ebp
  0013d	5d		 pop	 ebp
  0013e	c3		 ret	 0
$LN13@Zt_PkClear:

; 644  : 	}
; 645  : 	else if(ZtConfig.Command.Zt_PKClearType == 2)

  0013f	83 f9 02	 cmp	 ecx, 2
  00142	0f 85 fb 00 00
	00		 jne	 $LN6@Zt_PkClear

; 646  : 	{
; 647  : 			if(ZtConfig.Command.Zt_PkClearMoney > lpObj->Money)

  00148	a1 dc 06 00 00	 mov	 eax, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1756
  0014d	3b 86 f0 00 00
	00		 cmp	 eax, DWORD PTR [esi+240]
  00153	7e 21		 jle	 SHORT $LN5@Zt_PkClear

; 648  : 			{
; 649  : 				MsgNormal(aIndex,g_ZtText.GetText(129),ZtConfig.Command.Zt_PkClearMoney);

  00155	50		 push	 eax
$LN22@Zt_PkClear:
  00156	68 81 00 00 00	 push	 129			; 00000081H
$LN23@Zt_PkClear:
  0015b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00160	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00165	50		 push	 eax
  00166	57		 push	 edi
  00167	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0016c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016f	5f		 pop	 edi
  00170	5e		 pop	 esi
  00171	5b		 pop	 ebx

; 678  : 	}
; 679  : }

  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
$LN5@Zt_PkClear:

; 650  : 				return;
; 651  : 			}
; 652  : #ifdef PK_CLEAR_TO_CREDITS
; 653  : 			if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2))

  00176	6a 1c		 push	 28			; 0000001cH
  00178	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0017d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00182	84 c0		 test	 al, al
  00184	75 20		 jne	 SHORT $LN3@Zt_PkClear
  00186	6a 07		 push	 7
  00188	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0018d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00192	84 c0		 test	 al, al
  00194	75 10		 jne	 SHORT $LN3@Zt_PkClear
  00196	6a 08		 push	 8
  00198	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0019d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001a2	84 c0		 test	 al, al
  001a4	74 5d		 je	 SHORT $LN4@Zt_PkClear
$LN3@Zt_PkClear:

; 654  : 			{
; 655  : 				if(ZtConfig.Command.Zt_PkClearCredits > lpObj->ZtCred)

  001a6	db 05 e4 06 00
	00		 fild	 DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1764
  001ac	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  001b2	de d9		 fcompp
  001b4	df e0		 fnstsw	 ax
  001b6	f6 c4 05	 test	 ah, 5
  001b9	7a 1b		 jp	 SHORT $LN2@Zt_PkClear

; 656  : 				{
; 657  : 					MsgNormal(aIndex,"[PkClear] Need %d Credits",ZtConfig.Command.Zt_PkClearCredits);

  001bb	a1 e4 06 00 00	 mov	 eax, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1764
  001c0	50		 push	 eax
$LN21@Zt_PkClear:
  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OIDDILMF@?$FLPkClear?$FN?5Need?5?$CFd?5Credits?$AA@
  001c6	57		 push	 edi
  001c7	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001cc	83 c4 0c	 add	 esp, 12			; 0000000cH
  001cf	5f		 pop	 edi
  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx

; 678  : 	}
; 679  : }

  001d2	8b e5		 mov	 esp, ebp
  001d4	5d		 pop	 ebp
  001d5	c3		 ret	 0
$LN2@Zt_PkClear:

; 658  : 					return;
; 659  : 				}
; 660  : 				MsgNormal(aIndex,"[PkClear] Success Cost: Credit %d",ZtConfig.Command.Zt_PkClearCredits);

  001d6	8b 0d e4 06 00
	00		 mov	 ecx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1764
  001dc	51		 push	 ecx
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JDBEDODN@?$FLPkClear?$FN?5Success?5Cost?3?5Credit?5?$CF@
  001e2	57		 push	 edi
  001e3	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

; 661  : 				lpObj->ZtCred -= ZtConfig.Command.Zt_PkClearCredits;

  001e8	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  001ee	da 25 e4 06 00
	00		 fisub	 DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1764

; 662  : 				ZtUserDataSend(aIndex);

  001f4	57		 push	 edi
  001f5	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  001fb	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00200	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@Zt_PkClear:

; 663  : 			}
; 664  : #endif // PK_CLEAR_TO_CREDITS
; 665  : 			lpObj->Money -= ZtConfig.Command.Zt_PkClearMoney;

  00203	8b 15 dc 06 00
	00		 mov	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+1756
  00209	29 96 f0 00 00
	00		 sub	 DWORD PTR [esi+240], edx

; 666  : 			lpObj->m_PK_Level = 3;
; 667  : 			lpObj->m_PK_Count = 0;
; 668  : 			lpObj->m_PK_Time = 0;
; 669  : 			GCMoneySend(aIndex,lpObj->Money);

  0020f	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  00215	50		 push	 eax
  00216	57		 push	 edi
  00217	66 c7 86 3c 01
	00 00 00 03	 mov	 WORD PTR [esi+316], 768	; 00000300H
  00220	89 9e 40 01 00
	00		 mov	 DWORD PTR [esi+320], ebx
  00226	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 670  : 			GCPkLevelSend(aIndex,lpObj->m_PK_Level);

  0022b	0f b6 8e 3d 01
	00 00		 movzx	 ecx, BYTE PTR [esi+317]
  00232	51		 push	 ecx
  00233	57		 push	 edi
  00234	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  00239	83 c4 10	 add	 esp, 16			; 00000010H
  0023c	5f		 pop	 edi
  0023d	5e		 pop	 esi
  0023e	5b		 pop	 ebx

; 678  : 	}
; 679  : }

  0023f	8b e5		 mov	 esp, ebp
  00241	5d		 pop	 ebp
  00242	c3		 ret	 0
$LN6@Zt_PkClear:

; 671  : 	}
; 672  : 	else
; 673  : 	{
; 674  : 			lpObj->m_PK_Level = 3;
; 675  : 			lpObj->m_PK_Count = 0;
; 676  : 			lpObj->m_PK_Time = 0;
; 677  : 			GCPkLevelSend(aIndex,lpObj->m_PK_Level);

  00243	6a 03		 push	 3
  00245	57		 push	 edi
  00246	66 c7 86 3c 01
	00 00 00 03	 mov	 WORD PTR [esi+316], 768	; 00000300H
  0024f	89 9e 40 01 00
	00		 mov	 DWORD PTR [esi+320], ebx
  00255	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  0025a	83 c4 08	 add	 esp, 8
$LN19@Zt_PkClear:
  0025d	5f		 pop	 edi
  0025e	5e		 pop	 esi
$LN1@Zt_PkClear:
  0025f	5b		 pop	 ebx

; 678  : 	}
; 679  : }

  00260	8b e5		 mov	 esp, ebp
  00262	5d		 pop	 ebp
  00263	c3		 ret	 0
?Zt_PkClear@@YAXH@Z ENDP				; Zt_PkClear
_TEXT	ENDS
PUBLIC	??_C@_07HIMEHGIB@?1offjow?$AA@			; `string'
PUBLIC	??_C@_09JCFDOCJK@?1?$LL?$PN?$LH?V?I?L?$LF?j?$AA@ ; `string'
PUBLIC	??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@ ; `string'
PUBLIC	??_C@_0BD@HFCCLAK@Period?5Item?5Reload?$AA@	; `string'
PUBLIC	??_C@_0M@DGDJPPIL@?1perioditem?$AA@		; `string'
PUBLIC	??_C@_08CNFDIDLI@URL?5Vote?$AA@			; `string'
PUBLIC	??_C@_08PKGKJKKA@?1urlvote?$AA@			; `string'
PUBLIC	??_C@_0O@NFLGICNC@ZtData?5Reload?$AA@		; `string'
PUBLIC	??_C@_09JPKPKMFM@?1exreload?$AA@		; `string'
PUBLIC	??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@	; `string'
PUBLIC	??_C@_07PJDINHCC@?1market?$AA@			; `string'
PUBLIC	_Protocol$GSCopy$
PUBLIC	_gObjId$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?ChatDataSend@@YAXKPAE@Z			; ChatDataSend
EXTRN	?ExResetSystemFunciton@cResetSystem@@QAEXH@Z:PROC ; cResetSystem::ExResetSystemFunciton
EXTRN	?gResetSystem@@3VcResetSystem@@A:BYTE		; gResetSystem
EXTRN	?ExGrandResetSystemFunciton@cGrandReset@@QAEXH@Z:PROC ; cGrandReset::ExGrandResetSystemFunciton
EXTRN	?gGrandReset@@3VcGrandReset@@A:BYTE		; gGrandReset
EXTRN	?CreateOffTrade@cOffTrade@@QAEXHH@Z:PROC	; cOffTrade::CreateOffTrade
EXTRN	?gOffTrade@@3VcOffTrade@@A:BYTE			; gOffTrade
EXTRN	?ChatDataSend@cTeleportManager@@QAEXHPAE@Z:PROC	; cTeleportManager::ChatDataSend
EXTRN	?gTeleportManager@@3VcTeleportManager@@A:BYTE	; gTeleportManager
EXTRN	?ChatSell@PremiumSystem@@QAEXHPAE@Z:PROC	; PremiumSystem::ChatSell
EXTRN	?Premium@@3VPremiumSystem@@A:BYTE		; Premium
EXTRN	?Initialize@CPeriodItemZt@@QAEXXZ:PROC		; CPeriodItemZt::Initialize
EXTRN	?g_PeriodItemZt@@3VCPeriodItemZt@@A:BYTE	; g_PeriodItemZt
EXTRN	?Anons@Voter@@QAEXXZ:PROC			; Voter::Anons
EXTRN	?Qtop@Voter@@QAEXXZ:PROC			; Voter::Qtop
EXTRN	?Mootop@Voter@@QAEXXZ:PROC			; Voter::Mootop
EXTRN	?gVoter@@3VVoter@@A:BYTE			; gVoter
EXTRN	?LoadConfigs@cZtConfigs@@QAEX_N@Z:PROC		; cZtConfigs::LoadConfigs
EXTRN	?CheckCommand@GMManager@@QAE_NHH@Z:PROC		; GMManager::CheckCommand
EXTRN	?g_GMManager@@3VGMManager@@A:BYTE		; g_GMManager
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?GDReqItemStatus@CItemMarket@@QAEXH@Z:PROC	; CItemMarket::GDReqItemStatus
EXTRN	?g_ItemMarket@@3VCItemMarket@@A:BYTE		; g_ItemMarket
EXTRN	?ChatData@cTvTEvent@@QAEXHPAE@Z:PROC		; cTvTEvent::ChatData
EXTRN	?TvT@@3VcTvTEvent@@A:BYTE			; TvT
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_07HIMEHGIB@?1offjow?$AA@
CONST	SEGMENT
??_C@_07HIMEHGIB@?1offjow?$AA@ DB '/offjow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JCFDOCJK@?1?$LL?$PN?$LH?V?I?L?$LF?j?$AA@
CONST	SEGMENT
??_C@_09JCFDOCJK@?1?$LL?$PN?$LH?V?I?L?$LF?j?$AA@ DB '/', 0bbH, 0fdH, 0b7H
	DB	0d6H, 0c9H, 0ccH, 0b5H, 0eaH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@
CONST	SEGMENT
??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@ DB '/', 0d4H, 0aaH, 0b1H
	DB	0a6H, 0c9H, 0ccH, 0b5H, 0eaH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HFCCLAK@Period?5Item?5Reload?$AA@
CONST	SEGMENT
??_C@_0BD@HFCCLAK@Period?5Item?5Reload?$AA@ DB 'Period Item Reload', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGDJPPIL@?1perioditem?$AA@
CONST	SEGMENT
??_C@_0M@DGDJPPIL@?1perioditem?$AA@ DB '/perioditem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNFDIDLI@URL?5Vote?$AA@
CONST	SEGMENT
??_C@_08CNFDIDLI@URL?5Vote?$AA@ DB 'URL Vote', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PKGKJKKA@?1urlvote?$AA@
CONST	SEGMENT
??_C@_08PKGKJKKA@?1urlvote?$AA@ DB '/urlvote', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NFLGICNC@ZtData?5Reload?$AA@
CONST	SEGMENT
??_C@_0O@NFLGICNC@ZtData?5Reload?$AA@ DB 'ZtData Reload', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JPKPKMFM@?1exreload?$AA@
CONST	SEGMENT
??_C@_09JPKPKMFM@?1exreload?$AA@ DB '/exreload', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@
CONST	SEGMENT
??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@ DB '/guildbank_kick', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PJDINHCC@?1market?$AA@
CONST	SEGMENT
??_C@_07PJDINHCC@?1market?$AA@ DB '/market', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?ChatDataSend@@YAXKPAE@Z
_TEXT	SEGMENT
_lpObj$ = -48						; size = 4
_Protocol$GSCopy$ = -44					; size = 4
tv1602 = -40						; size = 4
tv1244 = -40						; size = 4
_gObjId$GSCopy$ = -36					; size = 4
_CMDGuildBankKick$ = -32				; size = 16
_CommandOffTradeWcoinP$216344 = -28			; size = 10
_Periaod$216333 = -28					; size = 12
_CommandOffTradeLife$216366 = -16			; size = 8
_CommandOffTradeWcoin$216342 = -16			; size = 10
_ExReloadCMD$216329 = -16				; size = 9
_ExReloadCMD$216321 = -16				; size = 10
_szMarketCMD$ = -16					; size = 8
__$ArrayPad$ = -4					; size = 4
_gObjId$ = 8						; size = 4
_Protocol$ = 12						; size = 4
?ChatDataSend@@YAXKPAE@Z PROC				; ChatDataSend, COMDAT

; 39   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _gObjId$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _Protocol$[ebp]

; 104  : 						{
; 105  : 							for ( int i=0;i<MAX_USER_GUILD ; i++ )

  00018	89 5d dc	 mov	 DWORD PTR _gObjId$GSCopy$[ebp], ebx
  0001b	89 7d d4	 mov	 DWORD PTR _Protocol$GSCopy$[ebp], edi
  0001e	81 fb 97 3a 00
	00		 cmp	 ebx, 14999		; 00003a97H
  00024	0f 87 f2 0d 00
	00		 ja	 $LN56@ChatDataSe

; 40   : 	if (gObjId < 0 || gObjId > OBJMAX-1 )
; 41   : 	{
; 42   : 		return;
; 43   : 	}
; 44   : 
; 45   : 	LPOBJ lpObj = &gObj[gObjId];

  0002a	8b c3		 mov	 eax, ebx
  0002c	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00032	89 45 d8	 mov	 DWORD PTR tv1602[ebp], eax
  00035	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 46   : 
; 47   : 	if ( lpObj->CloseCount >= 0 )

  0003b	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  0003f	89 45 d0	 mov	 DWORD PTR _lpObj$[ebp], eax
  00042	0f 8d d4 0d 00
	00		 jge	 $LN56@ChatDataSe

; 48   : 	{
; 49   : 		return;
; 50   : 	}
; 51   : 
; 52   : 	if(g_ZtLicense.user.TvTEvent)

  00048	80 3d d1 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+209, 0
  0004f	74 0c		 je	 SHORT $LN54@ChatDataSe

; 53   : 	{
; 54   : 		TvT.ChatData(gObjId,Protocol);

  00051	57		 push	 edi
  00052	53		 push	 ebx
  00053	b9 00 00 00 00	 mov	 ecx, OFFSET ?TvT@@3VcTvTEvent@@A ; TvT
  00058	e8 00 00 00 00	 call	 ?ChatData@cTvTEvent@@QAEXHPAE@Z ; cTvTEvent::ChatData
$LN54@ChatDataSe:

; 55   : 	}
; 56   : 
; 57   : 	//char ExitProcessCMD[] = "/LVLUP";
; 58   : 
; 59   : 	//if(!memcmp(&Protocol[13],ExitProcessCMD,strlen(ExitProcessCMD)))
; 60   : 	//{
; 61   : 	//	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX; n++)
; 62   : 	//	{
; 63   : 	//		LPOBJ sObj = &gObj[n];
; 64   : 
; 65   : 	//		if(sObj->Connected >= PLAYER_PLAYING)
; 66   : 	//		{
; 67   : 	//			#if(ENABLE_NSGAME_UPDATE)
; 68   : 	//			for(int i = 0; i < 10; i++)
; 69   : 	//			{
; 70   : 	//				__int64 exp = gLevelExperience[sObj->Level];
; 71   : 	//				sObj->Experience = exp;
; 72   : 	//				gObjLevelUp(sObj, exp, sObj->Class, 0);
; 73   : 	//			}
; 74   : 	//			#endif
; 75   : 	//		}
; 76   : 	//	}
; 77   : 	//	//Sleep(3000);
; 78   : 	//	//g_ZtLicense.Exit = TRUE;
; 79   : 	//}
; 80   : 
; 81   : 	#if(DEV_PLAYERSHOP)
; 82   : 
; 83   : 	char szMarketCMD[] = "/market";

  0005d	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_07PJDINHCC@?1market?$AA@+4
  00062	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_07PJDINHCC@?1market?$AA@
  00068	89 45 f4	 mov	 DWORD PTR _szMarketCMD$[ebp+4], eax

; 84   : 
; 85   : 	if(!memcmp(&Protocol[13],szMarketCMD,strlen(szMarketCMD)))

  0006b	8d 45 f0	 lea	 eax, DWORD PTR _szMarketCMD$[ebp]
  0006e	89 55 f0	 mov	 DWORD PTR _szMarketCMD$[ebp], edx
  00071	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL270@ChatDataSe:
  00074	8a 08		 mov	 cl, BYTE PTR [eax]
  00076	40		 inc	 eax
  00077	84 c9		 test	 cl, cl
  00079	75 f9		 jne	 SHORT $LL270@ChatDataSe
  0007b	2b c2		 sub	 eax, edx
  0007d	56		 push	 esi
  0007e	8d 4d f0	 lea	 ecx, DWORD PTR _szMarketCMD$[ebp]
  00081	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
  00084	83 f8 04	 cmp	 eax, 4
  00087	72 1b		 jb	 SHORT $LN217@ChatDataSe
  00089	8d a4 24 00 00
	00 00		 npad	 7
$LL61@ChatDataSe:
  00090	8b 16		 mov	 edx, DWORD PTR [esi]
  00092	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00094	75 3d		 jne	 SHORT $LN53@ChatDataSe
  00096	83 e8 04	 sub	 eax, 4
  00099	83 c1 04	 add	 ecx, 4
  0009c	83 c6 04	 add	 esi, 4
  0009f	83 f8 04	 cmp	 eax, 4
  000a2	73 ec		 jae	 SHORT $LL61@ChatDataSe
$LN217@ChatDataSe:
  000a4	85 c0		 test	 eax, eax
  000a6	74 20		 je	 SHORT $LN63@ChatDataSe
  000a8	8a 11		 mov	 dl, BYTE PTR [ecx]
  000aa	3a 16		 cmp	 dl, BYTE PTR [esi]
  000ac	75 25		 jne	 SHORT $LN53@ChatDataSe
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	76 15		 jbe	 SHORT $LN63@ChatDataSe
  000b3	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  000b6	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  000b9	75 18		 jne	 SHORT $LN53@ChatDataSe
  000bb	83 f8 02	 cmp	 eax, 2
  000be	76 08		 jbe	 SHORT $LN63@ChatDataSe
  000c0	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  000c3	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  000c6	75 0b		 jne	 SHORT $LN53@ChatDataSe
$LN63@ChatDataSe:

; 86   : 	{
; 87   : 		g_ItemMarket.GDReqItemStatus(gObjId);

  000c8	53		 push	 ebx
  000c9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemMarket@@3VCItemMarket@@A ; g_ItemMarket
  000ce	e8 00 00 00 00	 call	 ?GDReqItemStatus@CItemMarket@@QAEXH@Z ; CItemMarket::GDReqItemStatus
$LN53@ChatDataSe:

; 88   : 	}
; 89   : 
; 90   : 	#endif
; 91   : 
; 92   : 		char CMDGuildBankKick[] = "/guildbank_kick";

  000d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@
  000d9	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@+8
  000de	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@+4
  000e4	89 4d e0	 mov	 DWORD PTR _CMDGuildBankKick$[ebp], ecx
  000e7	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BA@DCAHEDGH@?1guildbank_kick?$AA@+12
  000ed	89 45 e8	 mov	 DWORD PTR _CMDGuildBankKick$[ebp+8], eax

; 93   : 		if(!memcmp(&Protocol[13],CMDGuildBankKick,strlen(CMDGuildBankKick)))

  000f0	8d 45 e0	 lea	 eax, DWORD PTR _CMDGuildBankKick$[ebp]
  000f3	89 55 e4	 mov	 DWORD PTR _CMDGuildBankKick$[ebp+4], edx
  000f6	89 4d ec	 mov	 DWORD PTR _CMDGuildBankKick$[ebp+12], ecx
  000f9	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  000fc	8d 64 24 00	 npad	 4
$LL271@ChatDataSe:
  00100	8a 08		 mov	 cl, BYTE PTR [eax]
  00102	40		 inc	 eax
  00103	84 c9		 test	 cl, cl
  00105	75 f9		 jne	 SHORT $LL271@ChatDataSe
  00107	2b c2		 sub	 eax, edx
  00109	8d 4d e0	 lea	 ecx, DWORD PTR _CMDGuildBankKick$[ebp]
  0010c	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
  0010f	83 f8 04	 cmp	 eax, 4
  00112	72 18		 jb	 SHORT $LN303@ChatDataSe
$LL65@ChatDataSe:
  00114	8b 16		 mov	 edx, DWORD PTR [esi]
  00116	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00118	0f 85 de 00 00
	00		 jne	 $LN45@ChatDataSe
  0011e	83 e8 04	 sub	 eax, 4
  00121	83 c1 04	 add	 ecx, 4
  00124	83 c6 04	 add	 esi, 4
  00127	83 f8 04	 cmp	 eax, 4
  0012a	73 e8		 jae	 SHORT $LL65@ChatDataSe
$LN303@ChatDataSe:
  0012c	85 c0		 test	 eax, eax
  0012e	74 2c		 je	 SHORT $LN295@ChatDataSe
  00130	8a 11		 mov	 dl, BYTE PTR [ecx]
  00132	3a 16		 cmp	 dl, BYTE PTR [esi]
  00134	0f 85 c2 00 00
	00		 jne	 $LN45@ChatDataSe
  0013a	83 f8 01	 cmp	 eax, 1
  0013d	76 1d		 jbe	 SHORT $LN295@ChatDataSe
  0013f	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00142	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  00145	0f 85 b1 00 00
	00		 jne	 $LN45@ChatDataSe
  0014b	83 f8 02	 cmp	 eax, 2
  0014e	76 0c		 jbe	 SHORT $LN295@ChatDataSe
  00150	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00153	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00156	0f 85 a0 00 00
	00		 jne	 $LN45@ChatDataSe
$LN295@ChatDataSe:

; 94   : 		{
; 95   : 			if(gObj[gObjId].GuildNumber > 0)

  0015c	8b 45 d8	 mov	 eax, DWORD PTR tv1602[ebp]
  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00165	83 bc 08 34 04
	00 00 00	 cmp	 DWORD PTR [eax+ecx+1076], 0
  0016d	0f 8e 89 00 00
	00		 jle	 $LN45@ChatDataSe

; 96   : 			{
; 97   : 				if(gObj[gObjId].GuildStatus == GUILD_MASTER)

  00173	8b d1		 mov	 edx, ecx
  00175	81 bc 10 48 04
	00 00 80 00 00
	00		 cmp	 DWORD PTR [eax+edx+1096], 128 ; 00000080H
  00180	75 7a		 jne	 SHORT $LN45@ChatDataSe

; 98   : 				{
; 99   : 					_GUILD_INFO_STRUCT * lpGuild = gObj[gObjId].lpGuild;

  00182	8b bc 08 38 04
	00 00		 mov	 edi, DWORD PTR [eax+ecx+1080]

; 100  : 
; 101  : 					if ( lpGuild != NULL )	

  00189	85 ff		 test	 edi, edi
  0018b	74 6f		 je	 SHORT $LN45@ChatDataSe

; 102  : 					{
; 103  : 						if(lpGuild->WareOpen == 1)

  0018d	83 bf 44 07 00
	00 01		 cmp	 DWORD PTR [edi+1860], 1
  00194	75 66		 jne	 SHORT $LN45@ChatDataSe

; 104  : 						{
; 105  : 							for ( int i=0;i<MAX_USER_GUILD ; i++ )

  00196	8d 9f a0 03 00
	00		 lea	 ebx, DWORD PTR [edi+928]
  0019c	c7 45 d8 50 00
	00 00		 mov	 DWORD PTR tv1244[ebp], 80 ; 00000050H
$LL47@ChatDataSe:

; 106  : 							{
; 107  : 								if ( lpGuild->Index[i] >= 0 )

  001a3	0f b7 03	 movzx	 eax, WORD PTR [ebx]
  001a6	66 85 c0	 test	 ax, ax
  001a9	78 49		 js	 SHORT $LN46@ChatDataSe

; 108  : 								{
; 109  : 									int iIndex = lpGuild->Index[i];

  001ab	98		 cwde

; 110  : 
; 111  : 									if ( iIndex >= 0 && gObj[iIndex].m_bGuildBank == true && gObj[iIndex].TargetShopNumber == 100 )

  001ac	85 c0		 test	 eax, eax
  001ae	78 44		 js	 SHORT $LN46@ChatDataSe
  001b0	8b f0		 mov	 esi, eax
  001b2	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  001b8	80 bc 0e 25 2b
	00 00 01	 cmp	 BYTE PTR [esi+ecx+11045], 1
  001c0	75 32		 jne	 SHORT $LN46@ChatDataSe
  001c2	66 83 bc 0e 5a
	04 00 00 64	 cmp	 WORD PTR [esi+ecx+1114], 100 ; 00000064H
  001cb	75 27		 jne	 SHORT $LN46@ChatDataSe

; 112  : 									{
; 113  : 
; 114  : 										CloseClient(iIndex);

  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient

; 115  : 
; 116  : 										gObj[iIndex].m_bGuildBank = false;

  001d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d9	c6 84 16 25 2b
	00 00 00	 mov	 BYTE PTR [esi+edx+11045], 0

; 117  : 										lpGuild->WareOpen = 0;

  001e1	c7 87 44 07 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+1860], 0
  001eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001f1	83 c4 04	 add	 esp, 4
$LN46@ChatDataSe:

; 104  : 						{
; 105  : 							for ( int i=0;i<MAX_USER_GUILD ; i++ )

  001f4	83 c3 02	 add	 ebx, 2
  001f7	ff 4d d8	 dec	 DWORD PTR tv1244[ebp]
  001fa	75 a7		 jne	 SHORT $LL47@ChatDataSe
$LN45@ChatDataSe:

; 118  : 
; 119  : 									}
; 120  : 								}
; 121  : 							}
; 122  : 						}		
; 123  : 					}			
; 124  : 				}
; 125  : 			}
; 126  : 		}
; 127  : 
; 128  : #ifdef DEBUG_CODE
; 129  : 		char CMDDataTime[] = "/datatime";
; 130  : 		if(!memcmp(&Protocol[13],CMDDataTime,strlen(CMDDataTime)))
; 131  : 			MsgNormal(gObjId,"TIME: %d",time(NULL));
; 132  : #endif
; 133  : 
; 134  : #ifdef DEBUG_CODE
; 135  : 		char CMDMakeItem[] = "/makeitem";
; 136  : 		if(!memcmp(&Protocol[13],CMDMakeItem,strlen(CMDMakeItem)))
; 137  : 		{
; 138  : 			ItemSerialCreateSend(gObjId,235,0,0,ITEMGET(7,3),15,1,0,1,1,gObjId,0,5);
; 139  : 			ItemSerialCreateSend(gObjId,235,0,0,ITEMGET(8,3),15,1,0,1,1,gObjId,0,5);
; 140  : 			ItemSerialCreateSend(gObjId,235,0,0,ITEMGET(9,3),15,1,0,1,1,gObjId,0,5);
; 141  : 			ItemSerialCreateSend(gObjId,235,0,0,ITEMGET(10,3),15,1,0,1,1,gObjId,0,5);
; 142  : 			ItemSerialCreateSend(gObjId,235,0,0,ITEMGET(11,3),15,1,0,1,1,gObjId,0,5);
; 143  : 
; 144  : 		}
; 145  : 		
; 146  : #endif
; 147  : 
; 148  : 	if(lpObj->Authority == 8 || lpObj->Authority == 32)

  001fc	8b 45 d0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001ff	8b 80 0c 02 00
	00		 mov	 eax, DWORD PTR [eax+524]
  00205	83 f8 08	 cmp	 eax, 8
  00208	74 09		 je	 SHORT $LN41@ChatDataSe
  0020a	83 f8 20	 cmp	 eax, 32			; 00000020H
  0020d	0f 85 db 00 00
	00		 jne	 $LN36@ChatDataSe
$LN41@ChatDataSe:

; 149  : 	{
; 150  : 		char ExReloadCMD[] = "/exreload";

  00213	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_09JPKPKMFM@?1exreload?$AA@+8
  00219	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_09JPKPKMFM@?1exreload?$AA@+4
  0021f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_09JPKPKMFM@?1exreload?$AA@
  00225	66 89 45 f8	 mov	 WORD PTR _ExReloadCMD$216321[ebp+8], ax

; 151  : 		if(!memcmp(&Protocol[13],ExReloadCMD,strlen(ExReloadCMD)))

  00229	8d 45 f0	 lea	 eax, DWORD PTR _ExReloadCMD$216321[ebp]
  0022c	89 55 f4	 mov	 DWORD PTR _ExReloadCMD$216321[ebp+4], edx
  0022f	89 4d f0	 mov	 DWORD PTR _ExReloadCMD$216321[ebp], ecx
  00232	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL272@ChatDataSe:
  00235	8a 08		 mov	 cl, BYTE PTR [eax]
  00237	40		 inc	 eax
  00238	84 c9		 test	 cl, cl
  0023a	75 f9		 jne	 SHORT $LL272@ChatDataSe
  0023c	8b 75 d4	 mov	 esi, DWORD PTR _Protocol$GSCopy$[ebp]
  0023f	2b c2		 sub	 eax, edx
  00241	83 c6 0d	 add	 esi, 13			; 0000000dH
  00244	8d 4d f0	 lea	 ecx, DWORD PTR _ExReloadCMD$216321[ebp]
  00247	83 f8 04	 cmp	 eax, 4
  0024a	72 1c		 jb	 SHORT $LN219@ChatDataSe
  0024c	8d 64 24 00	 npad	 4
$LL69@ChatDataSe:
  00250	8b 16		 mov	 edx, DWORD PTR [esi]
  00252	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00254	0f 85 94 00 00
	00		 jne	 $LN36@ChatDataSe
  0025a	83 e8 04	 sub	 eax, 4
  0025d	83 c1 04	 add	 ecx, 4
  00260	83 c6 04	 add	 esi, 4
  00263	83 f8 04	 cmp	 eax, 4
  00266	73 e8		 jae	 SHORT $LL69@ChatDataSe
$LN219@ChatDataSe:
  00268	85 c0		 test	 eax, eax
  0026a	74 20		 je	 SHORT $LN296@ChatDataSe
  0026c	8a 11		 mov	 dl, BYTE PTR [ecx]
  0026e	3a 16		 cmp	 dl, BYTE PTR [esi]
  00270	75 7c		 jne	 SHORT $LN36@ChatDataSe
  00272	83 f8 01	 cmp	 eax, 1
  00275	76 15		 jbe	 SHORT $LN296@ChatDataSe
  00277	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0027a	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  0027d	75 6f		 jne	 SHORT $LN36@ChatDataSe
  0027f	83 f8 02	 cmp	 eax, 2
  00282	76 08		 jbe	 SHORT $LN296@ChatDataSe
  00284	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00287	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  0028a	75 62		 jne	 SHORT $LN36@ChatDataSe
$LN296@ChatDataSe:

; 152  : 		{
; 153  : 		// ----
; 154  : 			if(g_GMManager.CheckCommand(gObjId, egm_cmd_exreload))

  0028c	8b 75 dc	 mov	 esi, DWORD PTR _gObjId$GSCopy$[ebp]
  0028f	6a 05		 push	 5
  00291	56		 push	 esi
  00292	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  00297	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  0029c	84 c0		 test	 al, al
  0029e	74 4e		 je	 SHORT $LN36@ChatDataSe

; 155  : 			{
; 156  : 				MsgNormal(gObjId,"ZtData Reload");

  002a0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NFLGICNC@ZtData?5Reload?$AA@
  002a5	56		 push	 esi
  002a6	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  002ab	83 c4 08	 add	 esp, 8

; 157  : #ifdef ZT_RELOAD_RAGE_SILVER
; 158  : 				if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2))

  002ae	6a 1c		 push	 28			; 0000001cH
  002b0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  002b5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  002ba	84 c0		 test	 al, al
  002bc	75 24		 jne	 SHORT $LN37@ChatDataSe
  002be	6a 07		 push	 7
  002c0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  002c5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  002ca	84 c0		 test	 al, al
  002cc	75 14		 jne	 SHORT $LN37@ChatDataSe
  002ce	6a 08		 push	 8
  002d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  002d5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  002da	84 c0		 test	 al, al
  002dc	75 04		 jne	 SHORT $LN37@ChatDataSe

; 161  : 				}
; 162  : 				else
; 163  : 				{
; 164  : 					ZtConfig.LoadConfigs(false);

  002de	6a 00		 push	 0
  002e0	eb 02		 jmp	 SHORT $LN354@ChatDataSe
$LN37@ChatDataSe:

; 159  : 				{
; 160  : 					ZtConfig.LoadConfigs(true);

  002e2	6a 01		 push	 1
$LN354@ChatDataSe:
  002e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?ZtConfig@@3VcZtConfigs@@A ; ZtConfig
  002e9	e8 00 00 00 00	 call	 ?LoadConfigs@cZtConfigs@@QAEX_N@Z ; cZtConfigs::LoadConfigs
$LN36@ChatDataSe:

; 165  : 				}
; 166  : #else	
; 167  : 				ZtConfig.LoadConfigs();
; 168  : #endif
; 169  : 			}
; 170  : 		}
; 171  : 	}
; 172  : 
; 173  : 	//if(lpObj->Authority == 8 || lpObj->Authority == 32)
; 174  : 	{
; 175  : #ifdef _VOTER_
; 176  : 		char ExReloadCMD[] = "/urlvote";

  002ee	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08PKGKJKKA@?1urlvote?$AA@+8
  002f3	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_08PKGKJKKA@?1urlvote?$AA@+4
  002f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08PKGKJKKA@?1urlvote?$AA@
  002ff	88 45 f8	 mov	 BYTE PTR _ExReloadCMD$216329[ebp+8], al

; 177  : 		if(!memcmp(&Protocol[13],ExReloadCMD,strlen(ExReloadCMD)))

  00302	8d 45 f0	 lea	 eax, DWORD PTR _ExReloadCMD$216329[ebp]
  00305	89 55 f4	 mov	 DWORD PTR _ExReloadCMD$216329[ebp+4], edx
  00308	89 4d f0	 mov	 DWORD PTR _ExReloadCMD$216329[ebp], ecx
  0030b	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0030e	8b ff		 npad	 2
$LL273@ChatDataSe:
  00310	8a 08		 mov	 cl, BYTE PTR [eax]
  00312	40		 inc	 eax
  00313	84 c9		 test	 cl, cl
  00315	75 f9		 jne	 SHORT $LL273@ChatDataSe
  00317	8b 5d d4	 mov	 ebx, DWORD PTR _Protocol$GSCopy$[ebp]
  0031a	2b c2		 sub	 eax, edx
  0031c	8d 4d f0	 lea	 ecx, DWORD PTR _ExReloadCMD$216329[ebp]
  0031f	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00322	83 f8 04	 cmp	 eax, 4
  00325	72 14		 jb	 SHORT $LN220@ChatDataSe
$LL73@ChatDataSe:
  00327	8b 16		 mov	 edx, DWORD PTR [esi]
  00329	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0032b	75 61		 jne	 SHORT $LN299@ChatDataSe
  0032d	83 e8 04	 sub	 eax, 4
  00330	83 c1 04	 add	 ecx, 4
  00333	83 c6 04	 add	 esi, 4
  00336	83 f8 04	 cmp	 eax, 4
  00339	73 ec		 jae	 SHORT $LL73@ChatDataSe
$LN220@ChatDataSe:
  0033b	85 c0		 test	 eax, eax
  0033d	74 20		 je	 SHORT $LN297@ChatDataSe
  0033f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00341	3a 16		 cmp	 dl, BYTE PTR [esi]
  00343	75 49		 jne	 SHORT $LN299@ChatDataSe
  00345	83 f8 01	 cmp	 eax, 1
  00348	76 15		 jbe	 SHORT $LN297@ChatDataSe
  0034a	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0034d	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  00350	75 3c		 jne	 SHORT $LN299@ChatDataSe
  00352	83 f8 02	 cmp	 eax, 2
  00355	76 08		 jbe	 SHORT $LN297@ChatDataSe
  00357	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  0035a	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  0035d	75 2f		 jne	 SHORT $LN299@ChatDataSe
$LN297@ChatDataSe:

; 178  : 		{
; 179  : 			MsgNormal(gObjId,"URL Vote");

  0035f	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  00362	68 00 00 00 00	 push	 OFFSET ??_C@_08CNFDIDLI@URL?5Vote?$AA@
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0036d	83 c4 08	 add	 esp, 8

; 180  : 			gVoter.Mootop();

  00370	b9 00 00 00 00	 mov	 ecx, OFFSET ?gVoter@@3VVoter@@A ; gVoter
  00375	e8 00 00 00 00	 call	 ?Mootop@Voter@@QAEXXZ	; Voter::Mootop

; 181  : 			gVoter.Qtop();

  0037a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gVoter@@3VVoter@@A ; gVoter
  0037f	e8 00 00 00 00	 call	 ?Qtop@Voter@@QAEXXZ	; Voter::Qtop

; 182  : 			gVoter.Anons();

  00384	b9 00 00 00 00	 mov	 ecx, OFFSET ?gVoter@@3VVoter@@A ; gVoter
  00389	e8 00 00 00 00	 call	 ?Anons@Voter@@QAEXXZ	; Voter::Anons
$LN299@ChatDataSe:

; 183  : 		}
; 184  : #endif
; 185  : 		char Periaod[] = "/perioditem";

  0038e	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0M@DGDJPPIL@?1perioditem?$AA@+4
  00393	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0M@DGDJPPIL@?1perioditem?$AA@
  00399	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0M@DGDJPPIL@?1perioditem?$AA@+8
  0039f	89 45 e8	 mov	 DWORD PTR _Periaod$216333[ebp+4], eax

; 186  : 		if(!memcmp(&Protocol[13],Periaod,strlen(Periaod)))

  003a2	8d 45 e4	 lea	 eax, DWORD PTR _Periaod$216333[ebp]
  003a5	89 55 e4	 mov	 DWORD PTR _Periaod$216333[ebp], edx
  003a8	89 4d ec	 mov	 DWORD PTR _Periaod$216333[ebp+8], ecx
  003ab	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  003ae	8b ff		 npad	 2
$LL274@ChatDataSe:
  003b0	8a 08		 mov	 cl, BYTE PTR [eax]
  003b2	40		 inc	 eax
  003b3	84 c9		 test	 cl, cl
  003b5	75 f9		 jne	 SHORT $LL274@ChatDataSe
  003b7	2b c2		 sub	 eax, edx
  003b9	8d 4d e4	 lea	 ecx, DWORD PTR _Periaod$216333[ebp]
  003bc	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  003bf	83 f8 04	 cmp	 eax, 4
  003c2	72 14		 jb	 SHORT $LN221@ChatDataSe
$LL77@ChatDataSe:
  003c4	8b 16		 mov	 edx, DWORD PTR [esi]
  003c6	3b 11		 cmp	 edx, DWORD PTR [ecx]
  003c8	75 4d		 jne	 SHORT $LN307@ChatDataSe
  003ca	83 e8 04	 sub	 eax, 4
  003cd	83 c1 04	 add	 ecx, 4
  003d0	83 c6 04	 add	 esi, 4
  003d3	83 f8 04	 cmp	 eax, 4
  003d6	73 ec		 jae	 SHORT $LL77@ChatDataSe
$LN221@ChatDataSe:
  003d8	85 c0		 test	 eax, eax
  003da	74 20		 je	 SHORT $LN305@ChatDataSe
  003dc	8a 11		 mov	 dl, BYTE PTR [ecx]
  003de	3a 16		 cmp	 dl, BYTE PTR [esi]
  003e0	75 35		 jne	 SHORT $LN307@ChatDataSe
  003e2	83 f8 01	 cmp	 eax, 1
  003e5	76 15		 jbe	 SHORT $LN305@ChatDataSe
  003e7	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  003ea	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  003ed	75 28		 jne	 SHORT $LN307@ChatDataSe
  003ef	83 f8 02	 cmp	 eax, 2
  003f2	76 08		 jbe	 SHORT $LN305@ChatDataSe
  003f4	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  003f7	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  003fa	75 1b		 jne	 SHORT $LN307@ChatDataSe
$LN305@ChatDataSe:

; 187  : 		{
; 188  : 			MsgNormal(gObjId,"Period Item Reload");

  003fc	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  003ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HFCCLAK@Period?5Item?5Reload?$AA@
  00404	51		 push	 ecx
  00405	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0040a	83 c4 08	 add	 esp, 8

; 189  : 			g_PeriodItemZt.Initialize();

  0040d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PeriodItemZt@@3VCPeriodItemZt@@A ; g_PeriodItemZt
  00412	e8 00 00 00 00	 call	 ?Initialize@CPeriodItemZt@@QAEXXZ ; CPeriodItemZt::Initialize
$LN307@ChatDataSe:

; 190  : 		}
; 191  : 
; 192  : 	}
; 193  : 	
; 194  : 	//gCreditDonate.Chat(gObjId,Protocol);
; 195  : 
; 196  : 	Premium.ChatSell(gObjId,Protocol);

  00417	8b 75 dc	 mov	 esi, DWORD PTR _gObjId$GSCopy$[ebp]
  0041a	53		 push	 ebx
  0041b	56		 push	 esi
  0041c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Premium@@3VPremiumSystem@@A ; Premium
  00421	e8 00 00 00 00	 call	 ?ChatSell@PremiumSystem@@QAEXHPAE@Z ; PremiumSystem::ChatSell

; 197  : 
; 198  : 	gTeleportManager.ChatDataSend(gObjId,Protocol);

  00426	53		 push	 ebx
  00427	56		 push	 esi
  00428	b9 00 00 00 00	 mov	 ecx, OFFSET ?gTeleportManager@@3VcTeleportManager@@A ; gTeleportManager
  0042d	e8 00 00 00 00	 call	 ?ChatDataSend@cTeleportManager@@QAEXHPAE@Z ; cTeleportManager::ChatDataSend

; 199  : 
; 200  : #ifdef _OFFTRADE_
; 201  : //##################################################################################################
; 202  : //	OffTrade
; 203  : //--------------------------------------------------------------------------------------------------
; 204  : 	char CommandOffTradeZen[]		= "/offzen";
; 205  : 	char CommandOffTradeExPoint[]	= "/offcredit";
; 206  : #ifdef SNAKER_CMD_NAME
; 207  : 
; 208  : 	if (g_ZtLicense.CheckUser(eZtUB::snaker))

  00432	6a 1e		 push	 30			; 0000001eH
  00434	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00439	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0043e	84 c0		 test	 al, al
  00440	0f 84 0d 01 00
	00		 je	 $LN33@ChatDataSe

; 209  : 	{
; 210  : 		char CommandOffTradeWcoin[]		= "/元宝商店";

  00446	0f b7 0d 08 00
	00 00		 movzx	 ecx, WORD PTR ??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@+8
  0044d	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@+4
  00452	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@
  00458	89 45 f4	 mov	 DWORD PTR _CommandOffTradeWcoin$216342[ebp+4], eax

; 211  : 		char CommandOffTradeWcoinP[]	= "/积分商店";	

  0045b	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_09JCFDOCJK@?1?$LL?$PN?$LH?V?I?L?$LF?j?$AA@+4
  00460	89 55 f0	 mov	 DWORD PTR _CommandOffTradeWcoin$216342[ebp], edx
  00463	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_09JCFDOCJK@?1?$LL?$PN?$LH?V?I?L?$LF?j?$AA@
  00469	66 89 4d f8	 mov	 WORD PTR _CommandOffTradeWcoin$216342[ebp+8], cx
  0046d	0f b7 0d 08 00
	00 00		 movzx	 ecx, WORD PTR ??_C@_09JCFDOCJK@?1?$LL?$PN?$LH?V?I?L?$LF?j?$AA@+8
  00474	89 45 e8	 mov	 DWORD PTR _CommandOffTradeWcoinP$216344[ebp+4], eax

; 212  : 		if(!memcmp(&Protocol[13],CommandOffTradeWcoin,strlen(CommandOffTradeWcoin)))

  00477	8d 45 f0	 lea	 eax, DWORD PTR _CommandOffTradeWcoin$216342[ebp]
  0047a	89 55 e4	 mov	 DWORD PTR _CommandOffTradeWcoinP$216344[ebp], edx
  0047d	66 89 4d ec	 mov	 WORD PTR _CommandOffTradeWcoinP$216344[ebp+8], cx
  00481	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL275@ChatDataSe:
  00484	8a 08		 mov	 cl, BYTE PTR [eax]
  00486	40		 inc	 eax
  00487	84 c9		 test	 cl, cl
  00489	75 f9		 jne	 SHORT $LL275@ChatDataSe
  0048b	2b c2		 sub	 eax, edx
  0048d	8d 4d f0	 lea	 ecx, DWORD PTR _CommandOffTradeWcoin$216342[ebp]
  00490	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00493	83 f8 04	 cmp	 eax, 4
  00496	72 14		 jb	 SHORT $LN222@ChatDataSe
$LL81@ChatDataSe:
  00498	8b 16		 mov	 edx, DWORD PTR [esi]
  0049a	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0049c	75 42		 jne	 SHORT $LN309@ChatDataSe
  0049e	83 e8 04	 sub	 eax, 4
  004a1	83 c1 04	 add	 ecx, 4
  004a4	83 c6 04	 add	 esi, 4
  004a7	83 f8 04	 cmp	 eax, 4
  004aa	73 ec		 jae	 SHORT $LL81@ChatDataSe
$LN222@ChatDataSe:
  004ac	85 c0		 test	 eax, eax
  004ae	0f 84 8e 01 00
	00		 je	 $LN319@ChatDataSe
  004b4	8a 11		 mov	 dl, BYTE PTR [ecx]
  004b6	3a 16		 cmp	 dl, BYTE PTR [esi]
  004b8	75 26		 jne	 SHORT $LN309@ChatDataSe
  004ba	83 f8 01	 cmp	 eax, 1
  004bd	0f 86 7f 01 00
	00		 jbe	 $LN319@ChatDataSe
  004c3	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  004c6	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  004c9	75 15		 jne	 SHORT $LN309@ChatDataSe
  004cb	83 f8 02	 cmp	 eax, 2
  004ce	0f 86 6e 01 00
	00		 jbe	 $LN319@ChatDataSe
  004d4	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  004d7	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  004da	0f 84 62 01 00
	00		 je	 $LN319@ChatDataSe
$LN309@ChatDataSe:

; 213  : 			gOffTrade.CreateOffTrade(gObjId,OFFWC_DC);
; 214  : 		else if(!memcmp(&Protocol[13],CommandOffTradeWcoinP,strlen(CommandOffTradeWcoinP)))

  004e0	8d 45 e4	 lea	 eax, DWORD PTR _CommandOffTradeWcoinP$216344[ebp]
  004e3	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL276@ChatDataSe:
  004e6	8a 08		 mov	 cl, BYTE PTR [eax]
  004e8	40		 inc	 eax
  004e9	84 c9		 test	 cl, cl
  004eb	75 f9		 jne	 SHORT $LL276@ChatDataSe
  004ed	2b c2		 sub	 eax, edx
  004ef	8d 4d e4	 lea	 ecx, DWORD PTR _CommandOffTradeWcoinP$216344[ebp]
  004f2	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  004f5	83 f8 04	 cmp	 eax, 4
  004f8	72 1e		 jb	 SHORT $LN223@ChatDataSe
  004fa	8d 9b 00 00 00
	00		 npad	 6
$LL85@ChatDataSe:
  00500	8b 16		 mov	 edx, DWORD PTR [esi]
  00502	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00504	0f 85 48 01 00
	00		 jne	 $LN321@ChatDataSe
  0050a	83 e8 04	 sub	 eax, 4
  0050d	83 c1 04	 add	 ecx, 4
  00510	83 c6 04	 add	 esi, 4
  00513	83 f8 04	 cmp	 eax, 4
  00516	73 e8		 jae	 SHORT $LL85@ChatDataSe
$LN223@ChatDataSe:
  00518	85 c0		 test	 eax, eax
  0051a	74 2c		 je	 SHORT $LN311@ChatDataSe
  0051c	8a 11		 mov	 dl, BYTE PTR [ecx]
  0051e	3a 16		 cmp	 dl, BYTE PTR [esi]
  00520	0f 85 2c 01 00
	00		 jne	 $LN321@ChatDataSe
  00526	83 f8 01	 cmp	 eax, 1
  00529	76 1d		 jbe	 SHORT $LN311@ChatDataSe
  0052b	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0052e	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  00531	0f 85 1b 01 00
	00		 jne	 $LN321@ChatDataSe
  00537	83 f8 02	 cmp	 eax, 2
  0053a	76 0c		 jbe	 SHORT $LN311@ChatDataSe
  0053c	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  0053f	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00542	0f 85 0a 01 00
	00		 jne	 $LN321@ChatDataSe
$LN311@ChatDataSe:

; 215  : 			gOffTrade.CreateOffTrade(gObjId,OFFWP_DC);

  00548	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  0054b	6a 04		 push	 4
  0054d	51		 push	 ecx
  0054e	e9 f5 00 00 00	 jmp	 $LN355@ChatDataSe
$LN33@ChatDataSe:

; 216  : 	}
; 217  : 	else
; 218  : 	{
; 219  : 		char CommandOffTradeWcoin[]		= "/offwcoinc";
; 220  : 		char CommandOffTradeWcoinP[]	= "/offwcoinp";	
; 221  : 		if(!memcmp(&Protocol[13],g_ZtText.GetText(132),strlen(g_ZtText.GetText(132))))

  00553	68 84 00 00 00	 push	 132			; 00000084H
  00558	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0055d	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00562	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL277@ChatDataSe:
  00565	8a 08		 mov	 cl, BYTE PTR [eax]
  00567	40		 inc	 eax
  00568	84 c9		 test	 cl, cl
  0056a	75 f9		 jne	 SHORT $LL277@ChatDataSe
  0056c	2b c2		 sub	 eax, edx
  0056e	68 84 00 00 00	 push	 132			; 00000084H
  00573	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00578	8b f0		 mov	 esi, eax
  0057a	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0057f	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  00582	83 fe 04	 cmp	 esi, 4
  00585	72 14		 jb	 SHORT $LN224@ChatDataSe
$LL89@ChatDataSe:
  00587	8b 11		 mov	 edx, DWORD PTR [ecx]
  00589	3b 10		 cmp	 edx, DWORD PTR [eax]
  0058b	75 3e		 jne	 SHORT $LN315@ChatDataSe
  0058d	83 ee 04	 sub	 esi, 4
  00590	83 c0 04	 add	 eax, 4
  00593	83 c1 04	 add	 ecx, 4
  00596	83 fe 04	 cmp	 esi, 4
  00599	73 ec		 jae	 SHORT $LL89@ChatDataSe
$LN224@ChatDataSe:
  0059b	85 f6		 test	 esi, esi
  0059d	0f 84 9f 00 00
	00		 je	 $LN319@ChatDataSe
  005a3	8a 10		 mov	 dl, BYTE PTR [eax]
  005a5	3a 11		 cmp	 dl, BYTE PTR [ecx]
  005a7	75 22		 jne	 SHORT $LN315@ChatDataSe
  005a9	83 fe 01	 cmp	 esi, 1
  005ac	0f 86 90 00 00
	00		 jbe	 $LN319@ChatDataSe
  005b2	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  005b5	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  005b8	75 11		 jne	 SHORT $LN315@ChatDataSe
  005ba	83 fe 02	 cmp	 esi, 2
  005bd	0f 86 7f 00 00
	00		 jbe	 $LN319@ChatDataSe
  005c3	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  005c6	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  005c9	74 77		 je	 SHORT $LN319@ChatDataSe
$LN315@ChatDataSe:

; 223  : 		else if(!memcmp(&Protocol[13],g_ZtText.GetText(133),strlen(g_ZtText.GetText(133))))

  005cb	68 85 00 00 00	 push	 133			; 00000085H
  005d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  005d5	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  005da	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  005dd	8d 49 00	 npad	 3
$LL278@ChatDataSe:
  005e0	8a 08		 mov	 cl, BYTE PTR [eax]
  005e2	40		 inc	 eax
  005e3	84 c9		 test	 cl, cl
  005e5	75 f9		 jne	 SHORT $LL278@ChatDataSe
  005e7	2b c2		 sub	 eax, edx
  005e9	68 85 00 00 00	 push	 133			; 00000085H
  005ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  005f3	8b f0		 mov	 esi, eax
  005f5	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  005fa	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  005fd	83 fe 04	 cmp	 esi, 4
  00600	72 14		 jb	 SHORT $LN225@ChatDataSe
$LL93@ChatDataSe:
  00602	8b 11		 mov	 edx, DWORD PTR [ecx]
  00604	3b 10		 cmp	 edx, DWORD PTR [eax]
  00606	75 4a		 jne	 SHORT $LN321@ChatDataSe
  00608	83 ee 04	 sub	 esi, 4
  0060b	83 c0 04	 add	 eax, 4
  0060e	83 c1 04	 add	 ecx, 4
  00611	83 fe 04	 cmp	 esi, 4
  00614	73 ec		 jae	 SHORT $LL93@ChatDataSe
$LN225@ChatDataSe:
  00616	85 f6		 test	 esi, esi
  00618	74 20		 je	 SHORT $LN317@ChatDataSe
  0061a	8a 10		 mov	 dl, BYTE PTR [eax]
  0061c	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0061e	75 32		 jne	 SHORT $LN321@ChatDataSe
  00620	83 fe 01	 cmp	 esi, 1
  00623	76 15		 jbe	 SHORT $LN317@ChatDataSe
  00625	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00628	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  0062b	75 25		 jne	 SHORT $LN321@ChatDataSe
  0062d	83 fe 02	 cmp	 esi, 2
  00630	76 08		 jbe	 SHORT $LN317@ChatDataSe
  00632	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  00635	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00638	75 18		 jne	 SHORT $LN321@ChatDataSe
$LN317@ChatDataSe:

; 224  : 			gOffTrade.CreateOffTrade(gObjId,OFFWP_DC);

  0063a	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  0063d	6a 04		 push	 4
  0063f	51		 push	 ecx
  00640	eb 06		 jmp	 SHORT $LN355@ChatDataSe
$LN319@ChatDataSe:

; 222  : 			gOffTrade.CreateOffTrade(gObjId,OFFWC_DC);

  00642	8b 55 dc	 mov	 edx, DWORD PTR _gObjId$GSCopy$[ebp]
  00645	6a 03		 push	 3
  00647	52		 push	 edx
$LN355@ChatDataSe:
  00648	b9 00 00 00 00	 mov	 ecx, OFFSET ?gOffTrade@@3VcOffTrade@@A ; gOffTrade
  0064d	e8 00 00 00 00	 call	 ?CreateOffTrade@cOffTrade@@QAEXHH@Z ; cOffTrade::CreateOffTrade
$LN321@ChatDataSe:

; 225  : 	}
; 226  : #else
; 227  : 	char CommandOffTradeWcoin[]		= "/offwcoinc";
; 228  : 	char CommandOffTradeWcoinP[]	= "/offwcoinp";
; 229  : #endif
; 230  : 	char CommandOffTradeWcoinG[]	= "/offgoblin";
; 231  : 
; 232  : 	char CommandOffTradeChaos[]	= "/offchaos";
; 233  : 	char CommandOffTradeBless[]	= "/offbless";
; 234  : 	char CommandOffTradeSoul[]	= "/offsoul";
; 235  : 
; 236  : #ifdef PRIVATE_MODULE
; 237  : 	if(g_ZtLicense.CheckUser(eZtUB::Vadim))

  00652	6a 09		 push	 9
  00654	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00659	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0065e	84 c0		 test	 al, al
  00660	74 7e		 je	 SHORT $LN25@ChatDataSe

; 238  : 	{
; 239  : 		char CommandOffTradeLife[]	= "/offjow";

  00662	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_07HIMEHGIB@?1offjow?$AA@
  00667	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_07HIMEHGIB@?1offjow?$AA@+4
  0066d	89 45 f0	 mov	 DWORD PTR _CommandOffTradeLife$216366[ebp], eax

; 240  : 		if(!memcmp(&Protocol[13],CommandOffTradeLife,strlen(CommandOffTradeLife)))

  00670	8d 45 f0	 lea	 eax, DWORD PTR _CommandOffTradeLife$216366[ebp]
  00673	89 4d f4	 mov	 DWORD PTR _CommandOffTradeLife$216366[ebp+4], ecx
  00676	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00679	8d a4 24 00 00
	00 00		 npad	 7
$LL279@ChatDataSe:
  00680	8a 08		 mov	 cl, BYTE PTR [eax]
  00682	40		 inc	 eax
  00683	84 c9		 test	 cl, cl
  00685	75 f9		 jne	 SHORT $LL279@ChatDataSe
  00687	2b c2		 sub	 eax, edx
  00689	8d 4d f0	 lea	 ecx, DWORD PTR _CommandOffTradeLife$216366[ebp]
  0068c	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  0068f	83 f8 04	 cmp	 eax, 4
  00692	72 18		 jb	 SHORT $LN226@ChatDataSe
$LL97@ChatDataSe:
  00694	8b 16		 mov	 edx, DWORD PTR [esi]
  00696	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00698	0f 85 be 00 00
	00		 jne	 $LN329@ChatDataSe
  0069e	83 e8 04	 sub	 eax, 4
  006a1	83 c1 04	 add	 ecx, 4
  006a4	83 c6 04	 add	 esi, 4
  006a7	83 f8 04	 cmp	 eax, 4
  006aa	73 e8		 jae	 SHORT $LL97@ChatDataSe
$LN226@ChatDataSe:
  006ac	85 c0		 test	 eax, eax
  006ae	0f 84 98 00 00
	00		 je	 $LN327@ChatDataSe
  006b4	8a 11		 mov	 dl, BYTE PTR [ecx]
  006b6	3a 16		 cmp	 dl, BYTE PTR [esi]
  006b8	0f 85 9e 00 00
	00		 jne	 $LN329@ChatDataSe
  006be	83 f8 01	 cmp	 eax, 1
  006c1	0f 86 85 00 00
	00		 jbe	 $LN327@ChatDataSe
  006c7	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  006ca	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  006cd	0f 85 89 00 00
	00		 jne	 $LN329@ChatDataSe
  006d3	83 f8 02	 cmp	 eax, 2
  006d6	76 74		 jbe	 SHORT $LN327@ChatDataSe
  006d8	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  006db	3a 46 02	 cmp	 al, BYTE PTR [esi+2]

; 241  : 			gOffTrade.CreateOffTrade(gObjId,OFFLIFE_DC);
; 242  : 	}
; 243  : 	else

  006de	eb 6a		 jmp	 SHORT $LN356@ChatDataSe
$LN25@ChatDataSe:

; 244  : 	{
; 245  : 		char CommandOffTradeLife[]	= "/offlife";
; 246  : 		if(!memcmp(&Protocol[13],g_ZtText.GetText(138),strlen(g_ZtText.GetText(138))))

  006e0	68 8a 00 00 00	 push	 138			; 0000008aH
  006e5	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  006ea	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  006ef	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL280@ChatDataSe:
  006f2	8a 08		 mov	 cl, BYTE PTR [eax]
  006f4	40		 inc	 eax
  006f5	84 c9		 test	 cl, cl
  006f7	75 f9		 jne	 SHORT $LL280@ChatDataSe
  006f9	2b c2		 sub	 eax, edx
  006fb	68 8a 00 00 00	 push	 138			; 0000008aH
  00700	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00705	8b f0		 mov	 esi, eax
  00707	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0070c	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  0070f	83 fe 04	 cmp	 esi, 4
  00712	72 14		 jb	 SHORT $LN227@ChatDataSe
$LL101@ChatDataSe:
  00714	8b 11		 mov	 edx, DWORD PTR [ecx]
  00716	3b 10		 cmp	 edx, DWORD PTR [eax]
  00718	75 42		 jne	 SHORT $LN329@ChatDataSe
  0071a	83 ee 04	 sub	 esi, 4
  0071d	83 c0 04	 add	 eax, 4
  00720	83 c1 04	 add	 ecx, 4
  00723	83 fe 04	 cmp	 esi, 4
  00726	73 ec		 jae	 SHORT $LL101@ChatDataSe
$LN227@ChatDataSe:
  00728	85 f6		 test	 esi, esi
  0072a	74 20		 je	 SHORT $LN327@ChatDataSe
  0072c	8a 10		 mov	 dl, BYTE PTR [eax]
  0072e	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00730	75 2a		 jne	 SHORT $LN329@ChatDataSe
  00732	83 fe 01	 cmp	 esi, 1
  00735	76 15		 jbe	 SHORT $LN327@ChatDataSe
  00737	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0073a	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  0073d	75 1d		 jne	 SHORT $LN329@ChatDataSe
  0073f	83 fe 02	 cmp	 esi, 2
  00742	76 08		 jbe	 SHORT $LN327@ChatDataSe
  00744	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  00747	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
$LN356@ChatDataSe:
  0074a	75 10		 jne	 SHORT $LN329@ChatDataSe
$LN327@ChatDataSe:

; 247  : 			gOffTrade.CreateOffTrade(gObjId,OFFLIFE_DC);

  0074c	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  0074f	6a 09		 push	 9
  00751	51		 push	 ecx
  00752	b9 00 00 00 00	 mov	 ecx, OFFSET ?gOffTrade@@3VcOffTrade@@A ; gOffTrade
  00757	e8 00 00 00 00	 call	 ?CreateOffTrade@cOffTrade@@QAEXHH@Z ; cOffTrade::CreateOffTrade
$LN329@ChatDataSe:

; 248  : 	}
; 249  : #else
; 250  : 	char CommandOffTradeLife[]	= "/offlife";
; 251  : #endif
; 252  : 
; 253  : 	// OffTrade
; 254  : 	if(!memcmp(&Protocol[13],g_ZtText.GetText(130),strlen(g_ZtText.GetText(130))))

  0075c	68 82 00 00 00	 push	 130			; 00000082H
  00761	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00766	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0076b	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0076e	8b ff		 npad	 2
$LL281@ChatDataSe:
  00770	8a 08		 mov	 cl, BYTE PTR [eax]
  00772	40		 inc	 eax
  00773	84 c9		 test	 cl, cl
  00775	75 f9		 jne	 SHORT $LL281@ChatDataSe
  00777	2b c2		 sub	 eax, edx
  00779	68 82 00 00 00	 push	 130			; 00000082H
  0077e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00783	8b f0		 mov	 esi, eax
  00785	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0078a	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  0078d	83 fe 04	 cmp	 esi, 4
  00790	72 14		 jb	 SHORT $LN228@ChatDataSe
$LL105@ChatDataSe:
  00792	8b 11		 mov	 edx, DWORD PTR [ecx]
  00794	3b 10		 cmp	 edx, DWORD PTR [eax]
  00796	75 42		 jne	 SHORT $LN333@ChatDataSe
  00798	83 ee 04	 sub	 esi, 4
  0079b	83 c0 04	 add	 eax, 4
  0079e	83 c1 04	 add	 ecx, 4
  007a1	83 fe 04	 cmp	 esi, 4
  007a4	73 ec		 jae	 SHORT $LL105@ChatDataSe
$LN228@ChatDataSe:
  007a6	85 f6		 test	 esi, esi
  007a8	0f 84 c0 02 00
	00		 je	 $LN345@ChatDataSe
  007ae	8a 10		 mov	 dl, BYTE PTR [eax]
  007b0	3a 11		 cmp	 dl, BYTE PTR [ecx]
  007b2	75 26		 jne	 SHORT $LN333@ChatDataSe
  007b4	83 fe 01	 cmp	 esi, 1
  007b7	0f 86 b1 02 00
	00		 jbe	 $LN345@ChatDataSe
  007bd	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  007c0	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  007c3	75 15		 jne	 SHORT $LN333@ChatDataSe
  007c5	83 fe 02	 cmp	 esi, 2
  007c8	0f 86 a0 02 00
	00		 jbe	 $LN345@ChatDataSe
  007ce	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  007d1	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  007d4	0f 84 94 02 00
	00		 je	 $LN345@ChatDataSe
$LN333@ChatDataSe:

; 256  : 	else if(!memcmp(&Protocol[13],g_ZtText.GetText(131),strlen(g_ZtText.GetText(131))))

  007da	68 83 00 00 00	 push	 131			; 00000083H
  007df	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  007e4	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  007e9	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  007ec	8d 64 24 00	 npad	 4
$LL282@ChatDataSe:
  007f0	8a 08		 mov	 cl, BYTE PTR [eax]
  007f2	40		 inc	 eax
  007f3	84 c9		 test	 cl, cl
  007f5	75 f9		 jne	 SHORT $LL282@ChatDataSe
  007f7	2b c2		 sub	 eax, edx
  007f9	68 83 00 00 00	 push	 131			; 00000083H
  007fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00803	8b f0		 mov	 esi, eax
  00805	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0080a	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  0080d	83 fe 04	 cmp	 esi, 4
  00810	72 14		 jb	 SHORT $LN229@ChatDataSe
$LL109@ChatDataSe:
  00812	8b 11		 mov	 edx, DWORD PTR [ecx]
  00814	3b 10		 cmp	 edx, DWORD PTR [eax]
  00816	75 42		 jne	 SHORT $LN335@ChatDataSe
  00818	83 ee 04	 sub	 esi, 4
  0081b	83 c0 04	 add	 eax, 4
  0081e	83 c1 04	 add	 ecx, 4
  00821	83 fe 04	 cmp	 esi, 4
  00824	73 ec		 jae	 SHORT $LL109@ChatDataSe
$LN229@ChatDataSe:
  00826	85 f6		 test	 esi, esi
  00828	0f 84 38 02 00
	00		 je	 $LN343@ChatDataSe
  0082e	8a 10		 mov	 dl, BYTE PTR [eax]
  00830	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00832	75 26		 jne	 SHORT $LN335@ChatDataSe
  00834	83 fe 01	 cmp	 esi, 1
  00837	0f 86 29 02 00
	00		 jbe	 $LN343@ChatDataSe
  0083d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00840	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00843	75 15		 jne	 SHORT $LN335@ChatDataSe
  00845	83 fe 02	 cmp	 esi, 2
  00848	0f 86 18 02 00
	00		 jbe	 $LN343@ChatDataSe
  0084e	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  00851	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00854	0f 84 0c 02 00
	00		 je	 $LN343@ChatDataSe
$LN335@ChatDataSe:

; 258  : #ifdef SNAKER_CMD_NAME
; 259  : 
; 260  : #else // SNAKER_CMD_NAME
; 261  : 
; 262  : 	else if(!memcmp(&Protocol[13],CommandOffTradeWcoin,strlen(CommandOffTradeWcoin)))
; 263  : 		gOffTrade.CreateOffTrade(gObjId,OFFWC_DC);
; 264  : 	else if(!memcmp(&Protocol[13],CommandOffTradeWcoinP,strlen(CommandOffTradeWcoinP)))
; 265  : 		gOffTrade.CreateOffTrade(gObjId,OFFWP_DC);
; 266  : #endif
; 267  : 	else if(!memcmp(&Protocol[13],g_ZtText.GetText(134),strlen(g_ZtText.GetText(134))))

  0085a	68 86 00 00 00	 push	 134			; 00000086H
  0085f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00864	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00869	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0086c	8d 64 24 00	 npad	 4
$LL283@ChatDataSe:
  00870	8a 08		 mov	 cl, BYTE PTR [eax]
  00872	40		 inc	 eax
  00873	84 c9		 test	 cl, cl
  00875	75 f9		 jne	 SHORT $LL283@ChatDataSe
  00877	2b c2		 sub	 eax, edx
  00879	68 86 00 00 00	 push	 134			; 00000086H
  0087e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00883	8b f0		 mov	 esi, eax
  00885	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0088a	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  0088d	83 fe 04	 cmp	 esi, 4
  00890	72 14		 jb	 SHORT $LN230@ChatDataSe
$LL113@ChatDataSe:
  00892	8b 11		 mov	 edx, DWORD PTR [ecx]
  00894	3b 10		 cmp	 edx, DWORD PTR [eax]
  00896	75 42		 jne	 SHORT $LN336@ChatDataSe
  00898	83 ee 04	 sub	 esi, 4
  0089b	83 c0 04	 add	 eax, 4
  0089e	83 c1 04	 add	 ecx, 4
  008a1	83 fe 04	 cmp	 esi, 4
  008a4	73 ec		 jae	 SHORT $LL113@ChatDataSe
$LN230@ChatDataSe:
  008a6	85 f6		 test	 esi, esi
  008a8	0f 84 b0 01 00
	00		 je	 $LN342@ChatDataSe
  008ae	8a 10		 mov	 dl, BYTE PTR [eax]
  008b0	3a 11		 cmp	 dl, BYTE PTR [ecx]
  008b2	75 26		 jne	 SHORT $LN336@ChatDataSe
  008b4	83 fe 01	 cmp	 esi, 1
  008b7	0f 86 a1 01 00
	00		 jbe	 $LN342@ChatDataSe
  008bd	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  008c0	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  008c3	75 15		 jne	 SHORT $LN336@ChatDataSe
  008c5	83 fe 02	 cmp	 esi, 2
  008c8	0f 86 90 01 00
	00		 jbe	 $LN342@ChatDataSe
  008ce	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  008d1	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  008d4	0f 84 84 01 00
	00		 je	 $LN342@ChatDataSe
$LN336@ChatDataSe:

; 269  : 
; 270  : 	else if(!memcmp(&Protocol[13],g_ZtText.GetText(135),strlen(g_ZtText.GetText(135))))

  008da	68 87 00 00 00	 push	 135			; 00000087H
  008df	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  008e4	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  008e9	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  008ec	8d 64 24 00	 npad	 4
$LL284@ChatDataSe:
  008f0	8a 08		 mov	 cl, BYTE PTR [eax]
  008f2	40		 inc	 eax
  008f3	84 c9		 test	 cl, cl
  008f5	75 f9		 jne	 SHORT $LL284@ChatDataSe
  008f7	2b c2		 sub	 eax, edx
  008f9	68 87 00 00 00	 push	 135			; 00000087H
  008fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00903	8b f0		 mov	 esi, eax
  00905	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0090a	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  0090d	83 fe 04	 cmp	 esi, 4
  00910	72 14		 jb	 SHORT $LN231@ChatDataSe
$LL117@ChatDataSe:
  00912	8b 11		 mov	 edx, DWORD PTR [ecx]
  00914	3b 10		 cmp	 edx, DWORD PTR [eax]
  00916	75 42		 jne	 SHORT $LN337@ChatDataSe
  00918	83 ee 04	 sub	 esi, 4
  0091b	83 c0 04	 add	 eax, 4
  0091e	83 c1 04	 add	 ecx, 4
  00921	83 fe 04	 cmp	 esi, 4
  00924	73 ec		 jae	 SHORT $LL117@ChatDataSe
$LN231@ChatDataSe:
  00926	85 f6		 test	 esi, esi
  00928	0f 84 2c 01 00
	00		 je	 $LN341@ChatDataSe
  0092e	8a 10		 mov	 dl, BYTE PTR [eax]
  00930	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00932	75 26		 jne	 SHORT $LN337@ChatDataSe
  00934	83 fe 01	 cmp	 esi, 1
  00937	0f 86 1d 01 00
	00		 jbe	 $LN341@ChatDataSe
  0093d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00940	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00943	75 15		 jne	 SHORT $LN337@ChatDataSe
  00945	83 fe 02	 cmp	 esi, 2
  00948	0f 86 0c 01 00
	00		 jbe	 $LN341@ChatDataSe
  0094e	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  00951	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00954	0f 84 00 01 00
	00		 je	 $LN341@ChatDataSe
$LN337@ChatDataSe:

; 272  : 	else if(!memcmp(&Protocol[13],g_ZtText.GetText(136),strlen(g_ZtText.GetText(136))))

  0095a	68 88 00 00 00	 push	 136			; 00000088H
  0095f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00964	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00969	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0096c	8d 64 24 00	 npad	 4
$LL285@ChatDataSe:
  00970	8a 08		 mov	 cl, BYTE PTR [eax]
  00972	40		 inc	 eax
  00973	84 c9		 test	 cl, cl
  00975	75 f9		 jne	 SHORT $LL285@ChatDataSe
  00977	2b c2		 sub	 eax, edx
  00979	68 88 00 00 00	 push	 136			; 00000088H
  0097e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00983	8b f0		 mov	 esi, eax
  00985	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0098a	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  0098d	83 fe 04	 cmp	 esi, 4
  00990	72 14		 jb	 SHORT $LN232@ChatDataSe
$LL121@ChatDataSe:
  00992	8b 11		 mov	 edx, DWORD PTR [ecx]
  00994	3b 10		 cmp	 edx, DWORD PTR [eax]
  00996	75 42		 jne	 SHORT $LN338@ChatDataSe
  00998	83 ee 04	 sub	 esi, 4
  0099b	83 c0 04	 add	 eax, 4
  0099e	83 c1 04	 add	 ecx, 4
  009a1	83 fe 04	 cmp	 esi, 4
  009a4	73 ec		 jae	 SHORT $LL121@ChatDataSe
$LN232@ChatDataSe:
  009a6	85 f6		 test	 esi, esi
  009a8	0f 84 a4 00 00
	00		 je	 $LN340@ChatDataSe
  009ae	8a 10		 mov	 dl, BYTE PTR [eax]
  009b0	3a 11		 cmp	 dl, BYTE PTR [ecx]
  009b2	75 26		 jne	 SHORT $LN338@ChatDataSe
  009b4	83 fe 01	 cmp	 esi, 1
  009b7	0f 86 95 00 00
	00		 jbe	 $LN340@ChatDataSe
  009bd	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  009c0	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  009c3	75 15		 jne	 SHORT $LN338@ChatDataSe
  009c5	83 fe 02	 cmp	 esi, 2
  009c8	0f 86 84 00 00
	00		 jbe	 $LN340@ChatDataSe
  009ce	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  009d1	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  009d4	0f 84 78 00 00
	00		 je	 $LN340@ChatDataSe
$LN338@ChatDataSe:

; 274  : 	else if(!memcmp(&Protocol[13],g_ZtText.GetText(137),strlen(g_ZtText.GetText(137))))

  009da	68 89 00 00 00	 push	 137			; 00000089H
  009df	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  009e4	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  009e9	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  009ec	8d 64 24 00	 npad	 4
$LL286@ChatDataSe:
  009f0	8a 08		 mov	 cl, BYTE PTR [eax]
  009f2	40		 inc	 eax
  009f3	84 c9		 test	 cl, cl
  009f5	75 f9		 jne	 SHORT $LL286@ChatDataSe
  009f7	2b c2		 sub	 eax, edx
  009f9	68 89 00 00 00	 push	 137			; 00000089H
  009fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00a03	8b f0		 mov	 esi, eax
  00a05	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00a0a	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]
  00a0d	83 fe 04	 cmp	 esi, 4
  00a10	72 14		 jb	 SHORT $LN233@ChatDataSe
$LL125@ChatDataSe:
  00a12	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a14	3b 10		 cmp	 edx, DWORD PTR [eax]
  00a16	75 66		 jne	 SHORT $LN347@ChatDataSe
  00a18	83 ee 04	 sub	 esi, 4
  00a1b	83 c0 04	 add	 eax, 4
  00a1e	83 c1 04	 add	 ecx, 4
  00a21	83 fe 04	 cmp	 esi, 4
  00a24	73 ec		 jae	 SHORT $LL125@ChatDataSe
$LN233@ChatDataSe:
  00a26	85 f6		 test	 esi, esi
  00a28	74 20		 je	 SHORT $LN339@ChatDataSe
  00a2a	8a 10		 mov	 dl, BYTE PTR [eax]
  00a2c	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00a2e	75 4e		 jne	 SHORT $LN347@ChatDataSe
  00a30	83 fe 01	 cmp	 esi, 1
  00a33	76 15		 jbe	 SHORT $LN339@ChatDataSe
  00a35	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00a38	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00a3b	75 41		 jne	 SHORT $LN347@ChatDataSe
  00a3d	83 fe 02	 cmp	 esi, 2
  00a40	76 08		 jbe	 SHORT $LN339@ChatDataSe
  00a42	8a 40 02	 mov	 al, BYTE PTR [eax+2]
  00a45	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00a48	75 34		 jne	 SHORT $LN347@ChatDataSe
$LN339@ChatDataSe:

; 275  : 		gOffTrade.CreateOffTrade(gObjId,OFFSOUL_DC);

  00a4a	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  00a4d	6a 08		 push	 8
  00a4f	51		 push	 ecx
  00a50	eb 22		 jmp	 SHORT $LN357@ChatDataSe
$LN340@ChatDataSe:

; 273  : 		gOffTrade.CreateOffTrade(gObjId,OFFBLESS_DC);

  00a52	8b 55 dc	 mov	 edx, DWORD PTR _gObjId$GSCopy$[ebp]
  00a55	6a 07		 push	 7
  00a57	52		 push	 edx
  00a58	eb 1a		 jmp	 SHORT $LN357@ChatDataSe
$LN341@ChatDataSe:

; 271  : 		gOffTrade.CreateOffTrade(gObjId,OFFCHAOS_DC);

  00a5a	6a 06		 push	 6
  00a5c	eb 12		 jmp	 SHORT $LN358@ChatDataSe
$LN342@ChatDataSe:

; 268  : 		gOffTrade.CreateOffTrade(gObjId,OFFWG_DC);

  00a5e	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  00a61	6a 05		 push	 5
  00a63	51		 push	 ecx
  00a64	eb 0e		 jmp	 SHORT $LN357@ChatDataSe
$LN343@ChatDataSe:

; 257  : 		gOffTrade.CreateOffTrade(gObjId,OFFCR_DC);

  00a66	8b 55 dc	 mov	 edx, DWORD PTR _gObjId$GSCopy$[ebp]
  00a69	6a 02		 push	 2
  00a6b	52		 push	 edx
  00a6c	eb 06		 jmp	 SHORT $LN357@ChatDataSe
$LN345@ChatDataSe:

; 255  : 		gOffTrade.CreateOffTrade(gObjId,OFFZEN_DC);

  00a6e	6a 01		 push	 1
$LN358@ChatDataSe:
  00a70	8b 45 dc	 mov	 eax, DWORD PTR _gObjId$GSCopy$[ebp]
  00a73	50		 push	 eax
$LN357@ChatDataSe:
  00a74	b9 00 00 00 00	 mov	 ecx, OFFSET ?gOffTrade@@3VcOffTrade@@A ; gOffTrade
  00a79	e8 00 00 00 00	 call	 ?CreateOffTrade@cOffTrade@@QAEXHH@Z ; cOffTrade::CreateOffTrade
$LN347@ChatDataSe:

; 276  : #endif
; 277  : 
; 278  : 	if(!memcmp(&Protocol[13],gGrandReset.CommandGrandReset,strlen(gGrandReset.CommandGrandReset))) gGrandReset.ExGrandResetSystemFunciton(gObjId);

  00a7e	b8 4c 00 00 00	 mov	 eax, OFFSET ?gGrandReset@@3VcGrandReset@@A+76
  00a83	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL287@ChatDataSe:
  00a86	8a 08		 mov	 cl, BYTE PTR [eax]
  00a88	40		 inc	 eax
  00a89	84 c9		 test	 cl, cl
  00a8b	75 f9		 jne	 SHORT $LL287@ChatDataSe
  00a8d	2b c2		 sub	 eax, edx
  00a8f	b9 4c 00 00 00	 mov	 ecx, OFFSET ?gGrandReset@@3VcGrandReset@@A+76
  00a94	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00a97	83 f8 04	 cmp	 eax, 4
  00a9a	72 18		 jb	 SHORT $LN234@ChatDataSe
  00a9c	8d 64 24 00	 npad	 4
$LL129@ChatDataSe:
  00aa0	8b 16		 mov	 edx, DWORD PTR [esi]
  00aa2	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00aa4	75 40		 jne	 SHORT $LN349@ChatDataSe
  00aa6	83 e8 04	 sub	 eax, 4
  00aa9	83 c1 04	 add	 ecx, 4
  00aac	83 c6 04	 add	 esi, 4
  00aaf	83 f8 04	 cmp	 eax, 4
  00ab2	73 ec		 jae	 SHORT $LL129@ChatDataSe
$LN234@ChatDataSe:
  00ab4	85 c0		 test	 eax, eax
  00ab6	74 20		 je	 SHORT $LN348@ChatDataSe
  00ab8	8a 11		 mov	 dl, BYTE PTR [ecx]
  00aba	3a 16		 cmp	 dl, BYTE PTR [esi]
  00abc	75 28		 jne	 SHORT $LN349@ChatDataSe
  00abe	83 f8 01	 cmp	 eax, 1
  00ac1	76 15		 jbe	 SHORT $LN348@ChatDataSe
  00ac3	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00ac6	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  00ac9	75 1b		 jne	 SHORT $LN349@ChatDataSe
  00acb	83 f8 02	 cmp	 eax, 2
  00ace	76 08		 jbe	 SHORT $LN348@ChatDataSe
  00ad0	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00ad3	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00ad6	75 0e		 jne	 SHORT $LN349@ChatDataSe
$LN348@ChatDataSe:
  00ad8	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  00adb	51		 push	 ecx
  00adc	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGrandReset@@3VcGrandReset@@A ; gGrandReset
  00ae1	e8 00 00 00 00	 call	 ?ExGrandResetSystemFunciton@cGrandReset@@QAEXH@Z ; cGrandReset::ExGrandResetSystemFunciton
$LN349@ChatDataSe:

; 279  : 	if(!memcmp(&Protocol[13],gResetSystem.CommandReset,strlen(gResetSystem.CommandReset))) gResetSystem.ExResetSystemFunciton(gObjId);

  00ae6	b8 4d 00 00 00	 mov	 eax, OFFSET ?gResetSystem@@3VcResetSystem@@A+77
  00aeb	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00aee	8b ff		 npad	 2
$LL288@ChatDataSe:
  00af0	8a 08		 mov	 cl, BYTE PTR [eax]
  00af2	40		 inc	 eax
  00af3	84 c9		 test	 cl, cl
  00af5	75 f9		 jne	 SHORT $LL288@ChatDataSe
  00af7	2b c2		 sub	 eax, edx
  00af9	b9 4d 00 00 00	 mov	 ecx, OFFSET ?gResetSystem@@3VcResetSystem@@A+77
  00afe	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00b01	83 f8 04	 cmp	 eax, 4
  00b04	72 14		 jb	 SHORT $LN235@ChatDataSe
$LL133@ChatDataSe:
  00b06	8b 16		 mov	 edx, DWORD PTR [esi]
  00b08	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00b0a	75 40		 jne	 SHORT $LN351@ChatDataSe
  00b0c	83 e8 04	 sub	 eax, 4
  00b0f	83 c1 04	 add	 ecx, 4
  00b12	83 c6 04	 add	 esi, 4
  00b15	83 f8 04	 cmp	 eax, 4
  00b18	73 ec		 jae	 SHORT $LL133@ChatDataSe
$LN235@ChatDataSe:
  00b1a	85 c0		 test	 eax, eax
  00b1c	74 20		 je	 SHORT $LN350@ChatDataSe
  00b1e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00b20	3a 16		 cmp	 dl, BYTE PTR [esi]
  00b22	75 28		 jne	 SHORT $LN351@ChatDataSe
  00b24	83 f8 01	 cmp	 eax, 1
  00b27	76 15		 jbe	 SHORT $LN350@ChatDataSe
  00b29	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00b2c	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  00b2f	75 1b		 jne	 SHORT $LN351@ChatDataSe
  00b31	83 f8 02	 cmp	 eax, 2
  00b34	76 08		 jbe	 SHORT $LN350@ChatDataSe
  00b36	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00b39	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00b3c	75 0e		 jne	 SHORT $LN351@ChatDataSe
$LN350@ChatDataSe:
  00b3e	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  00b41	51		 push	 ecx
  00b42	b9 00 00 00 00	 mov	 ecx, OFFSET ?gResetSystem@@3VcResetSystem@@A ; gResetSystem
  00b47	e8 00 00 00 00	 call	 ?ExResetSystemFunciton@cResetSystem@@QAEXH@Z ; cResetSystem::ExResetSystemFunciton
$LN351@ChatDataSe:

; 280  : //--------------------------------------------------------------------------------------------------
; 281  : // CommandPkClear
; 282  : 	if(!memcmp(&Protocol[13],ZtConfig.Command.CommandPkClear,strlen(ZtConfig.Command.CommandPkClear)))

  00b4c	b8 88 05 00 00	 mov	 eax, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1416
  00b51	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL289@ChatDataSe:
  00b54	8a 08		 mov	 cl, BYTE PTR [eax]
  00b56	40		 inc	 eax
  00b57	84 c9		 test	 cl, cl
  00b59	75 f9		 jne	 SHORT $LL289@ChatDataSe
  00b5b	2b c2		 sub	 eax, edx
  00b5d	b9 88 05 00 00	 mov	 ecx, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1416
  00b62	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00b65	83 f8 04	 cmp	 eax, 4
  00b68	72 1a		 jb	 SHORT $LN236@ChatDataSe
  00b6a	8d 9b 00 00 00
	00		 npad	 6
$LL137@ChatDataSe:
  00b70	8b 16		 mov	 edx, DWORD PTR [esi]
  00b72	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00b74	75 3e		 jne	 SHORT $LN8@ChatDataSe
  00b76	83 e8 04	 sub	 eax, 4
  00b79	83 c1 04	 add	 ecx, 4
  00b7c	83 c6 04	 add	 esi, 4
  00b7f	83 f8 04	 cmp	 eax, 4
  00b82	73 ec		 jae	 SHORT $LL137@ChatDataSe
$LN236@ChatDataSe:
  00b84	85 c0		 test	 eax, eax
  00b86	74 20		 je	 SHORT $LN352@ChatDataSe
  00b88	8a 11		 mov	 dl, BYTE PTR [ecx]
  00b8a	3a 16		 cmp	 dl, BYTE PTR [esi]
  00b8c	75 26		 jne	 SHORT $LN8@ChatDataSe
  00b8e	83 f8 01	 cmp	 eax, 1
  00b91	76 15		 jbe	 SHORT $LN352@ChatDataSe
  00b93	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00b96	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  00b99	75 19		 jne	 SHORT $LN8@ChatDataSe
  00b9b	83 f8 02	 cmp	 eax, 2
  00b9e	76 08		 jbe	 SHORT $LN352@ChatDataSe
  00ba0	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00ba3	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00ba6	75 0c		 jne	 SHORT $LN8@ChatDataSe
$LN352@ChatDataSe:

; 283  : 		Zt_PkClear(gObjId);

  00ba8	8b 4d dc	 mov	 ecx, DWORD PTR _gObjId$GSCopy$[ebp]
  00bab	51		 push	 ecx
  00bac	e8 00 00 00 00	 call	 ?Zt_PkClear@@YAXH@Z	; Zt_PkClear
  00bb1	83 c4 04	 add	 esp, 4
$LN8@ChatDataSe:

; 284  : //--------------------------------------------------------------------------------------------------
; 285  : // CommandAddCmd
; 286  : 	if(!memcmp(&Protocol[13],ZtConfig.Command.CommandAddCmd,strlen(ZtConfig.Command.CommandAddCmd)))

  00bb4	b8 24 05 00 00	 mov	 eax, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1316
  00bb9	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00bbc	8d 64 24 00	 npad	 4
$LL290@ChatDataSe:
  00bc0	8a 08		 mov	 cl, BYTE PTR [eax]
  00bc2	40		 inc	 eax
  00bc3	84 c9		 test	 cl, cl
  00bc5	75 f9		 jne	 SHORT $LL290@ChatDataSe
  00bc7	2b c2		 sub	 eax, edx
  00bc9	8b f8		 mov	 edi, eax
  00bcb	8b c8		 mov	 ecx, eax
  00bcd	ba 24 05 00 00	 mov	 edx, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1316
  00bd2	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00bd5	83 ff 04	 cmp	 edi, 4
  00bd8	72 1a		 jb	 SHORT $LN237@ChatDataSe
  00bda	8d 9b 00 00 00
	00		 npad	 6
$LL141@ChatDataSe:
  00be0	8b 06		 mov	 eax, DWORD PTR [esi]
  00be2	3b 02		 cmp	 eax, DWORD PTR [edx]
  00be4	75 43		 jne	 SHORT $LN7@ChatDataSe
  00be6	83 e9 04	 sub	 ecx, 4
  00be9	83 c2 04	 add	 edx, 4
  00bec	83 c6 04	 add	 esi, 4
  00bef	83 f9 04	 cmp	 ecx, 4
  00bf2	73 ec		 jae	 SHORT $LL141@ChatDataSe
$LN237@ChatDataSe:
  00bf4	85 c9		 test	 ecx, ecx
  00bf6	74 20		 je	 SHORT $LN143@ChatDataSe
  00bf8	8a 02		 mov	 al, BYTE PTR [edx]
  00bfa	3a 06		 cmp	 al, BYTE PTR [esi]
  00bfc	75 2b		 jne	 SHORT $LN7@ChatDataSe
  00bfe	83 f9 01	 cmp	 ecx, 1
  00c01	76 15		 jbe	 SHORT $LN143@ChatDataSe
  00c03	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00c06	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00c09	75 1e		 jne	 SHORT $LN7@ChatDataSe
  00c0b	83 f9 02	 cmp	 ecx, 2
  00c0e	76 08		 jbe	 SHORT $LN143@ChatDataSe
  00c10	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  00c13	3a 4e 02	 cmp	 cl, BYTE PTR [esi+2]
  00c16	75 11		 jne	 SHORT $LN7@ChatDataSe
$LN143@ChatDataSe:

; 287  : 		Ex_AddCmd(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandAddCmd));

  00c18	8b 45 dc	 mov	 eax, DWORD PTR _gObjId$GSCopy$[ebp]
  00c1b	8d 54 1f 0d	 lea	 edx, DWORD PTR [edi+ebx+13]
  00c1f	52		 push	 edx
  00c20	50		 push	 eax
  00c21	e8 00 00 00 00	 call	 ?Ex_AddCmd@@YAXHPAD@Z	; Ex_AddCmd
  00c26	83 c4 08	 add	 esp, 8
$LN7@ChatDataSe:

; 288  : //--------------------------------------------------------------------------------------------------
; 289  : // CommandAddEne
; 290  : 	if(!memcmp(&Protocol[13],ZtConfig.Command.CommandAddEne,strlen(ZtConfig.Command.CommandAddEne)))

  00c29	b8 c0 04 00 00	 mov	 eax, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1216
  00c2e	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL291@ChatDataSe:
  00c31	8a 08		 mov	 cl, BYTE PTR [eax]
  00c33	40		 inc	 eax
  00c34	84 c9		 test	 cl, cl
  00c36	75 f9		 jne	 SHORT $LL291@ChatDataSe
  00c38	2b c2		 sub	 eax, edx
  00c3a	8b f8		 mov	 edi, eax
  00c3c	8b c8		 mov	 ecx, eax
  00c3e	ba c0 04 00 00	 mov	 edx, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1216
  00c43	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00c46	83 ff 04	 cmp	 edi, 4
  00c49	72 19		 jb	 SHORT $LN238@ChatDataSe
  00c4b	eb 03 8d 49 00	 npad	 5
$LL145@ChatDataSe:
  00c50	8b 06		 mov	 eax, DWORD PTR [esi]
  00c52	3b 02		 cmp	 eax, DWORD PTR [edx]
  00c54	75 43		 jne	 SHORT $LN6@ChatDataSe
  00c56	83 e9 04	 sub	 ecx, 4
  00c59	83 c2 04	 add	 edx, 4
  00c5c	83 c6 04	 add	 esi, 4
  00c5f	83 f9 04	 cmp	 ecx, 4
  00c62	73 ec		 jae	 SHORT $LL145@ChatDataSe
$LN238@ChatDataSe:
  00c64	85 c9		 test	 ecx, ecx
  00c66	74 20		 je	 SHORT $LN147@ChatDataSe
  00c68	8a 02		 mov	 al, BYTE PTR [edx]
  00c6a	3a 06		 cmp	 al, BYTE PTR [esi]
  00c6c	75 2b		 jne	 SHORT $LN6@ChatDataSe
  00c6e	83 f9 01	 cmp	 ecx, 1
  00c71	76 15		 jbe	 SHORT $LN147@ChatDataSe
  00c73	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00c76	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00c79	75 1e		 jne	 SHORT $LN6@ChatDataSe
  00c7b	83 f9 02	 cmp	 ecx, 2
  00c7e	76 08		 jbe	 SHORT $LN147@ChatDataSe
  00c80	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  00c83	3a 4e 02	 cmp	 cl, BYTE PTR [esi+2]
  00c86	75 11		 jne	 SHORT $LN6@ChatDataSe
$LN147@ChatDataSe:

; 291  : 		Ex_AddEne(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandAddEne));

  00c88	8b 45 dc	 mov	 eax, DWORD PTR _gObjId$GSCopy$[ebp]
  00c8b	8d 54 1f 0d	 lea	 edx, DWORD PTR [edi+ebx+13]
  00c8f	52		 push	 edx
  00c90	50		 push	 eax
  00c91	e8 00 00 00 00	 call	 ?Ex_AddEne@@YAXHPAD@Z	; Ex_AddEne
  00c96	83 c4 08	 add	 esp, 8
$LN6@ChatDataSe:

; 292  : //--------------------------------------------------------------------------------------------------
; 293  : // CommandAddVit
; 294  : 	if(!memcmp(&Protocol[13],ZtConfig.Command.CommandAddVit,strlen(ZtConfig.Command.CommandAddVit)))

  00c99	b8 5c 04 00 00	 mov	 eax, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1116
  00c9e	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL292@ChatDataSe:
  00ca1	8a 08		 mov	 cl, BYTE PTR [eax]
  00ca3	40		 inc	 eax
  00ca4	84 c9		 test	 cl, cl
  00ca6	75 f9		 jne	 SHORT $LL292@ChatDataSe
  00ca8	2b c2		 sub	 eax, edx
  00caa	8b f8		 mov	 edi, eax
  00cac	8b c8		 mov	 ecx, eax
  00cae	ba 5c 04 00 00	 mov	 edx, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1116
  00cb3	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00cb6	83 ff 04	 cmp	 edi, 4
  00cb9	72 19		 jb	 SHORT $LN239@ChatDataSe
  00cbb	eb 03 8d 49 00	 npad	 5
$LL149@ChatDataSe:
  00cc0	8b 06		 mov	 eax, DWORD PTR [esi]
  00cc2	3b 02		 cmp	 eax, DWORD PTR [edx]
  00cc4	75 43		 jne	 SHORT $LN5@ChatDataSe
  00cc6	83 e9 04	 sub	 ecx, 4
  00cc9	83 c2 04	 add	 edx, 4
  00ccc	83 c6 04	 add	 esi, 4
  00ccf	83 f9 04	 cmp	 ecx, 4
  00cd2	73 ec		 jae	 SHORT $LL149@ChatDataSe
$LN239@ChatDataSe:
  00cd4	85 c9		 test	 ecx, ecx
  00cd6	74 20		 je	 SHORT $LN151@ChatDataSe
  00cd8	8a 02		 mov	 al, BYTE PTR [edx]
  00cda	3a 06		 cmp	 al, BYTE PTR [esi]
  00cdc	75 2b		 jne	 SHORT $LN5@ChatDataSe
  00cde	83 f9 01	 cmp	 ecx, 1
  00ce1	76 15		 jbe	 SHORT $LN151@ChatDataSe
  00ce3	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00ce6	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00ce9	75 1e		 jne	 SHORT $LN5@ChatDataSe
  00ceb	83 f9 02	 cmp	 ecx, 2
  00cee	76 08		 jbe	 SHORT $LN151@ChatDataSe
  00cf0	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  00cf3	3a 4e 02	 cmp	 cl, BYTE PTR [esi+2]
  00cf6	75 11		 jne	 SHORT $LN5@ChatDataSe
$LN151@ChatDataSe:

; 295  : 		Ex_AddVit(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandAddVit));

  00cf8	8b 45 dc	 mov	 eax, DWORD PTR _gObjId$GSCopy$[ebp]
  00cfb	8d 54 1f 0d	 lea	 edx, DWORD PTR [edi+ebx+13]
  00cff	52		 push	 edx
  00d00	50		 push	 eax
  00d01	e8 00 00 00 00	 call	 ?Ex_AddVit@@YAXHPAD@Z	; Ex_AddVit
  00d06	83 c4 08	 add	 esp, 8
$LN5@ChatDataSe:

; 296  : //--------------------------------------------------------------------------------------------------
; 297  : // CommandAddAgi
; 298  : 	if(!memcmp(&Protocol[13],ZtConfig.Command.CommandAddAgi,strlen(ZtConfig.Command.CommandAddAgi)))

  00d09	b8 f8 03 00 00	 mov	 eax, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1016
  00d0e	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL293@ChatDataSe:
  00d11	8a 08		 mov	 cl, BYTE PTR [eax]
  00d13	40		 inc	 eax
  00d14	84 c9		 test	 cl, cl
  00d16	75 f9		 jne	 SHORT $LL293@ChatDataSe
  00d18	2b c2		 sub	 eax, edx
  00d1a	8b f8		 mov	 edi, eax
  00d1c	8b c8		 mov	 ecx, eax
  00d1e	ba f8 03 00 00	 mov	 edx, OFFSET ?ZtConfig@@3VcZtConfigs@@A+1016
  00d23	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00d26	83 ff 04	 cmp	 edi, 4
  00d29	72 19		 jb	 SHORT $LN240@ChatDataSe
  00d2b	eb 03 8d 49 00	 npad	 5
$LL153@ChatDataSe:
  00d30	8b 06		 mov	 eax, DWORD PTR [esi]
  00d32	3b 02		 cmp	 eax, DWORD PTR [edx]
  00d34	75 43		 jne	 SHORT $LN4@ChatDataSe
  00d36	83 e9 04	 sub	 ecx, 4
  00d39	83 c2 04	 add	 edx, 4
  00d3c	83 c6 04	 add	 esi, 4
  00d3f	83 f9 04	 cmp	 ecx, 4
  00d42	73 ec		 jae	 SHORT $LL153@ChatDataSe
$LN240@ChatDataSe:
  00d44	85 c9		 test	 ecx, ecx
  00d46	74 20		 je	 SHORT $LN155@ChatDataSe
  00d48	8a 02		 mov	 al, BYTE PTR [edx]
  00d4a	3a 06		 cmp	 al, BYTE PTR [esi]
  00d4c	75 2b		 jne	 SHORT $LN4@ChatDataSe
  00d4e	83 f9 01	 cmp	 ecx, 1
  00d51	76 15		 jbe	 SHORT $LN155@ChatDataSe
  00d53	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00d56	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00d59	75 1e		 jne	 SHORT $LN4@ChatDataSe
  00d5b	83 f9 02	 cmp	 ecx, 2
  00d5e	76 08		 jbe	 SHORT $LN155@ChatDataSe
  00d60	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  00d63	3a 4e 02	 cmp	 cl, BYTE PTR [esi+2]
  00d66	75 11		 jne	 SHORT $LN4@ChatDataSe
$LN155@ChatDataSe:

; 299  : 		Ex_AddAgi(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandAddAgi));

  00d68	8b 45 dc	 mov	 eax, DWORD PTR _gObjId$GSCopy$[ebp]
  00d6b	8d 54 1f 0d	 lea	 edx, DWORD PTR [edi+ebx+13]
  00d6f	52		 push	 edx
  00d70	50		 push	 eax
  00d71	e8 00 00 00 00	 call	 ?Ex_AddAgi@@YAXHPAD@Z	; Ex_AddAgi
  00d76	83 c4 08	 add	 esp, 8
$LN4@ChatDataSe:

; 300  : //--------------------------------------------------------------------------------------------------
; 301  : // CommandAddStr
; 302  : 	if(!memcmp(&Protocol[13],ZtConfig.Command.CommandAddStr,strlen(ZtConfig.Command.CommandAddStr)))

  00d79	b8 94 03 00 00	 mov	 eax, OFFSET ?ZtConfig@@3VcZtConfigs@@A+916
  00d7e	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL294@ChatDataSe:
  00d81	8a 08		 mov	 cl, BYTE PTR [eax]
  00d83	40		 inc	 eax
  00d84	84 c9		 test	 cl, cl
  00d86	75 f9		 jne	 SHORT $LL294@ChatDataSe
  00d88	2b c2		 sub	 eax, edx
  00d8a	8b f8		 mov	 edi, eax
  00d8c	8b c8		 mov	 ecx, eax
  00d8e	ba 94 03 00 00	 mov	 edx, OFFSET ?ZtConfig@@3VcZtConfigs@@A+916
  00d93	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00d96	83 ff 04	 cmp	 edi, 4
  00d99	72 19		 jb	 SHORT $LN241@ChatDataSe
  00d9b	eb 03 8d 49 00	 npad	 5
$LL157@ChatDataSe:
  00da0	8b 06		 mov	 eax, DWORD PTR [esi]
  00da2	3b 02		 cmp	 eax, DWORD PTR [edx]
  00da4	75 32		 jne	 SHORT $LN3@ChatDataSe
  00da6	83 e9 04	 sub	 ecx, 4
  00da9	83 c2 04	 add	 edx, 4
  00dac	83 c6 04	 add	 esi, 4
  00daf	83 f9 04	 cmp	 ecx, 4
  00db2	73 ec		 jae	 SHORT $LL157@ChatDataSe
$LN241@ChatDataSe:
  00db4	85 c9		 test	 ecx, ecx
  00db6	74 52		 je	 SHORT $LN159@ChatDataSe
  00db8	8a 02		 mov	 al, BYTE PTR [edx]
  00dba	3a 06		 cmp	 al, BYTE PTR [esi]
  00dbc	75 1a		 jne	 SHORT $LN3@ChatDataSe
  00dbe	83 f9 01	 cmp	 ecx, 1
  00dc1	76 47		 jbe	 SHORT $LN159@ChatDataSe
  00dc3	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00dc6	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00dc9	75 0d		 jne	 SHORT $LN3@ChatDataSe
  00dcb	83 f9 02	 cmp	 ecx, 2
  00dce	76 3a		 jbe	 SHORT $LN159@ChatDataSe
  00dd0	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  00dd3	3a 4e 02	 cmp	 cl, BYTE PTR [esi+2]
  00dd6	74 32		 je	 SHORT $LN159@ChatDataSe
$LN3@ChatDataSe:

; 305  : 	}
; 306  : 
; 307  : 	else if(!memcmp(&Protocol[13],"/元宝商店",strlen("/元宝商店")))

  00dd8	b9 09 00 00 00	 mov	 ecx, 9
  00ddd	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_09CGJIGOML@?1?T?$KK?$LB?$KG?I?L?$LF?j?$AA@
  00de2	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
$LL161@ChatDataSe:
  00de5	8b 06		 mov	 eax, DWORD PTR [esi]
  00de7	3b 02		 cmp	 eax, DWORD PTR [edx]
  00de9	75 30		 jne	 SHORT $LN353@ChatDataSe
  00deb	83 e9 04	 sub	 ecx, 4
  00dee	83 c2 04	 add	 edx, 4
  00df1	83 c6 04	 add	 esi, 4
  00df4	83 f9 04	 cmp	 ecx, 4
  00df7	73 ec		 jae	 SHORT $LL161@ChatDataSe
  00df9	8a 0a		 mov	 cl, BYTE PTR [edx]
  00dfb	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00dfd	75 1c		 jne	 SHORT $LN353@ChatDataSe

; 308  : 	{
; 309  : 
; 310  : 		Ex_AddStr(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandAddStr));

  00dff	8b 45 dc	 mov	 eax, DWORD PTR _gObjId$GSCopy$[ebp]
  00e02	8d 54 1f 0d	 lea	 edx, DWORD PTR [edi+ebx+13]
  00e06	52		 push	 edx
  00e07	50		 push	 eax
  00e08	eb 09		 jmp	 SHORT $LN359@ChatDataSe
$LN159@ChatDataSe:

; 303  : 	{
; 304  : 		Ex_AddStr(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandAddStr));

  00e0a	8b 55 dc	 mov	 edx, DWORD PTR _gObjId$GSCopy$[ebp]
  00e0d	8d 4c 1f 0d	 lea	 ecx, DWORD PTR [edi+ebx+13]
  00e11	51		 push	 ecx
  00e12	52		 push	 edx
$LN359@ChatDataSe:
  00e13	e8 00 00 00 00	 call	 ?Ex_AddStr@@YAXHPAD@Z	; Ex_AddStr
  00e18	83 c4 08	 add	 esp, 8
$LN353@ChatDataSe:
  00e1b	5e		 pop	 esi
$LN56@ChatDataSe:

; 311  : 	}
; 312  : //--------------------------------------------------------------------------------------------------
; 313  : //Command Post
; 314  : 	/*if(!memcmp(&Protocol[13],ZtConfig.Command.CommandPost,strlen(ZtConfig.Command.CommandPost)))
; 315  : 	PostMessage(gObjId,(char*)Protocol+13+strlen(ZtConfig.Command.CommandPost));*/
; 316  : 	
; 317  : }

  00e1c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e1f	5f		 pop	 edi
  00e20	33 cd		 xor	 ecx, ebp
  00e22	5b		 pop	 ebx
  00e23	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e28	8b e5		 mov	 esp, ebp
  00e2a	5d		 pop	 ebp
  00e2b	c3		 ret	 0
?ChatDataSend@@YAXKPAE@Z ENDP				; ChatDataSend
_TEXT	ENDS
END
