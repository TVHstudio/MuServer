; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\CrywolfUtil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?GetMapSvrGroup@CMapServerManager@@QAEHXZ	; CMapServerManager::GetMapSvrGroup
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\mapservermanager.h
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 50   : 		if ( this->m_lpThisMapSvrData != NULL )

  00000	8b 81 c0 32 01
	00		 mov	 eax, DWORD PTR [ecx+78528]
  00006	85 c0		 test	 eax, eax
  00008	74 05		 je	 SHORT $LN1@GetMapSvrG

; 51   : 		{
; 52   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  0000a	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]

; 55   : 	}

  0000e	c3		 ret	 0
$LN1@GetMapSvrG:

; 53   : 		}
; 54   : 		return -1;

  0000f	83 c8 ff	 or	 eax, -1

; 55   : 	}

  00012	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
PUBLIC	?_ARGB@@YAKEEEE@Z				; _ARGB
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\tnotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  00007	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  0000b	0f b6 55 10	 movzx	 edx, BYTE PTR _g$[ebp]
  0000f	c1 e0 08	 shl	 eax, 8
  00012	03 c1		 add	 eax, ecx
  00014	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  00018	c1 e0 08	 shl	 eax, 8
  0001b	03 c2		 add	 eax, edx
  0001d	c1 e0 08	 shl	 eax, 8
  00020	03 c1		 add	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
PUBLIC	??_7CCrywolfUtil@@6B@				; CCrywolfUtil::`vftable'
PUBLIC	??0CCrywolfUtil@@QAE@XZ				; CCrywolfUtil::CCrywolfUtil
PUBLIC	??_R4CCrywolfUtil@@6B@				; CCrywolfUtil::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCrywolfUtil@@@8			; CCrywolfUtil `RTTI Type Descriptor'
PUBLIC	??_R3CCrywolfUtil@@8				; CCrywolfUtil::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCrywolfUtil@@8				; CCrywolfUtil::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCrywolfUtil@@8			; CCrywolfUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCrywolfUtil@@UAEPAXI@Z:PROC		; CCrywolfUtil::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CCrywolfUtil@@8
; File e:\work\tranet_version\gs\gameserver\crywolfutil.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CCrywolfUtil@@8 DD FLAT:??_R0?AVCCrywolfUtil@@@8 ; CCrywolfUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_R2CCrywolfUtil@@8
rdata$r	SEGMENT
??_R2CCrywolfUtil@@8 DD FLAT:??_R1A@?0A@EA@CCrywolfUtil@@8 ; CCrywolfUtil::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCrywolfUtil@@8
rdata$r	SEGMENT
??_R3CCrywolfUtil@@8 DD 00H				; CCrywolfUtil::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCrywolfUtil@@@8
_DATA	SEGMENT
??_R0?AVCCrywolfUtil@@@8 DD FLAT:??_7type_info@@6B@	; CCrywolfUtil `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCrywolfUtil@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCrywolfUtil@@6B@
rdata$r	SEGMENT
??_R4CCrywolfUtil@@6B@ DD 00H				; CCrywolfUtil::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCrywolfUtil@@@8
	DD	FLAT:??_R3CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_7CCrywolfUtil@@6B@
CONST	SEGMENT
??_7CCrywolfUtil@@6B@ DD FLAT:??_R4CCrywolfUtil@@6B@	; CCrywolfUtil::`vftable'
	DD	FLAT:??_ECCrywolfUtil@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CCrywolfUtil@@QAE@XZ
_TEXT	SEGMENT
??0CCrywolfUtil@@QAE@XZ PROC				; CCrywolfUtil::CCrywolfUtil, COMDAT
; _this$ = ecx

; 21   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCrywolfUtil@@6B@

; 22   : 	return;
; 23   : }

  00008	c3		 ret	 0
??0CCrywolfUtil@@QAE@XZ ENDP				; CCrywolfUtil::CCrywolfUtil
_TEXT	ENDS
PUBLIC	??1CCrywolfUtil@@UAE@XZ				; CCrywolfUtil::~CCrywolfUtil
; Function compile flags: /Ogtp
;	COMDAT ??1CCrywolfUtil@@UAE@XZ
_TEXT	SEGMENT
??1CCrywolfUtil@@UAE@XZ PROC				; CCrywolfUtil::~CCrywolfUtil, COMDAT
; _this$ = ecx

; 26   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCrywolfUtil@@6B@

; 27   : 	return;
; 28   : }

  00006	c3		 ret	 0
??1CCrywolfUtil@@UAE@XZ ENDP				; CCrywolfUtil::~CCrywolfUtil
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ	; CCrywolfUtil::SendMapServerGroupMsg
EXTRN	?GS_GDReqMapSvrMsgMultiCast@@YAXHPAD@Z:PROC	; GS_GDReqMapSvrMsgMultiCast
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	_vsprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ
_TEXT	SEGMENT
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ PROC	; CCrywolfUtil::SendMapServerGroupMsg, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 32   : 	if ( !lpszMsg )

  00014	8b 75 0c	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	74 50		 je	 SHORT $LN2@SendMapSer

; 33   : 		return;
; 34   : 
; 35   : 	char szBuffer[512] = "";

  0001b	68 ff 01 00 00	 push	 511			; 000001ffH
  00020	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00026	6a 00		 push	 0
  00028	50		 push	 eax
  00029	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00030	e8 00 00 00 00	 call	 _memset

; 36   : 	va_list	pArguments;
; 37   : 
; 38   : 	va_start(pArguments, lpszMsg);
; 39   : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00035	8d 4d 10	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  00038	51		 push	 ecx
  00039	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  0003f	56		 push	 esi
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 _vsprintf

; 40   : 	va_end(pArguments);
; 41   : 
; 42   : 	GS_GDReqMapSvrMsgMultiCast(g_MapServerManager.GetMapSvrGroup(), szBuffer);

  00046	a1 c0 32 01 00	 mov	 eax, DWORD PTR ?g_MapServerManager@@3VCMapServerManager@@A+78528
  0004b	83 c4 18	 add	 esp, 24			; 00000018H
  0004e	85 c0		 test	 eax, eax
  00050	74 06		 je	 SHORT $LN4@SendMapSer
  00052	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
  00056	eb 03		 jmp	 SHORT $LN5@SendMapSer
$LN4@SendMapSer:
  00058	83 c8 ff	 or	 eax, -1
$LN5@SendMapSer:
  0005b	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  00061	51		 push	 ecx
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?GS_GDReqMapSvrMsgMultiCast@@YAXHPAD@Z ; GS_GDReqMapSvrMsgMultiCast
  00068	83 c4 08	 add	 esp, 8
$LN2@SendMapSer:

; 43   : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	5e		 pop	 esi
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ ENDP	; CCrywolfUtil::SendMapServerGroupMsg
_TEXT	ENDS
PUBLIC	?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z	; CCrywolfUtil::SendAllUserAnyData
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
;	COMDAT ?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z PROC	; CCrywolfUtil::SendAllUserAnyData, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	for ( int i=OBJ_STARTUSERINDZT;i<OBJMAX;i++)

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00013	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL5@SendAllUse:

; 48   : 	{
; 49   : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 1b		 jne	 SHORT $LN4@SendAllUse

; 50   : 		{
; 51   : 			if ( gObj[i].Type == OBJ_USER )

  0001f	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00025	75 13		 jne	 SHORT $LN4@SendAllUse

; 52   : 			{
; 53   : 				DataSend(i, lpMsg, iSize);

  00027	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0002a	53		 push	 ebx
  0002b	50		 push	 eax
  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@SendAllUse:

; 47   : 	for ( int i=OBJ_STARTUSERINDZT;i<OBJMAX;i++)

  0003a	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00040	47		 inc	 edi
  00041	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00047	7c cf		 jl	 SHORT $LL5@SendAllUse
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 54   : 			}
; 55   : 		}
; 56   : 	}
; 57   : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ENDP	; CCrywolfUtil::SendAllUserAnyData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ	; CCrywolfUtil::SendAllUserAnyMsg
EXTRN	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z:PROC	; TNotice::SetNoticeProperty
EXTRN	?SendNoticeToAllUser@TNotice@@SAXPAX@Z:PROC	; TNotice::SendNoticeToAllUser
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
; Function compile flags: /Ogtp
;	COMDAT ?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iType$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendAllUserAnyMsg, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 63   : 	if ( !lpszMsg )

  00014	8b 75 10	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	0f 84 a7 00 00
	00		 je	 $LN3@SendAllUse@2

; 64   : 		return;
; 65   : 
; 66   : 	char szBuffer[512] = "";

  0001f	68 ff 01 00 00	 push	 511			; 000001ffH
  00024	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002a	6a 00		 push	 0
  0002c	50		 push	 eax
  0002d	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00034	e8 00 00 00 00	 call	 _memset

; 67   : 	va_list	pArguments;
; 68   : 
; 69   : 	va_start(pArguments, lpszMsg);
; 70   : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00039	8d 4d 14	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  0003c	51		 push	 ecx
  0003d	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00043	56		 push	 esi
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 _vsprintf

; 71   : 	va_end(pArguments);
; 72   : 
; 73   : 	PMSG_NOTICE pNotice;
; 74   : 
; 75   : 	switch ( iType )

  0004a	8b 45 0c	 mov	 eax, DWORD PTR _iType$[ebp]
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	48		 dec	 eax
  00051	74 36		 je	 SHORT $LN2@SendAllUse@2
  00053	48		 dec	 eax
  00054	75 70		 jne	 SHORT $LN3@SendAllUse@2

; 81   : 			break;
; 82   : 
; 83   : 		case 2:
; 84   : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00056	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0005c	50		 push	 eax
  0005d	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00063	6a 00		 push	 0
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 85   : 			TNotice::SendNoticeToAllUser(&pNotice);

  0006b	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	5e		 pop	 esi

; 86   : 			break;
; 87   : 	}
; 88   : }

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007e	33 cd		 xor	 ecx, ebp
  00080	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
$LN2@SendAllUse@2:

; 76   : 	{
; 77   : 		case 1:
; 78   : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00089	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0008f	50		 push	 eax
  00090	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00096	6a 00		 push	 0
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 79   : 			TNotice::SetNoticeProperty(&pNotice, 10, _ARGB(255, 255, 200, 80), 1, 0, 20);

  0009e	6a 14		 push	 20			; 00000014H
  000a0	6a 00		 push	 0
  000a2	6a 01		 push	 1
  000a4	68 ff c8 50 ff	 push	 -11482881		; ff50c8ffH
  000a9	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  000af	6a 0a		 push	 10			; 0000000aH
  000b1	52		 push	 edx
  000b2	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty

; 80   : 			TNotice::SendNoticeToAllUser(&pNotice);

  000b7	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  000c3	83 c4 28	 add	 esp, 40			; 00000028H
$LN3@SendAllUse@2:

; 86   : 			break;
; 87   : 	}
; 88   : }

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c9	33 cd		 xor	 ecx, ebp
  000cb	5e		 pop	 esi
  000cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendAllUserAnyMsg
_TEXT	ENDS
PUBLIC	?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ; CCrywolfUtil::SendCrywolfUserAnyData
; Function compile flags: /Ogtp
;	COMDAT ?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z PROC	; CCrywolfUtil::SendCrywolfUserAnyData, COMDAT
; _this$ = ecx

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   : 	for ( int i=OBJ_STARTUSERINDZT;i<OBJMAX;i++)

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00013	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL6@SendCrywol:

; 93   : 	{
; 94   : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 25		 jne	 SHORT $LN5@SendCrywol

; 95   : 		{
; 96   : 			if ( gObj[i].Type == OBJ_USER )

  0001f	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00025	75 1d		 jne	 SHORT $LN5@SendCrywol

; 97   : 			{
; 98   : 				if ( gObj[i].MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  00027	80 bc 06 49 01
	00 00 22	 cmp	 BYTE PTR [esi+eax+329], 34 ; 00000022H
  0002f	75 13		 jne	 SHORT $LN5@SendCrywol

; 99   : 				{
; 100  : 					DataSend(i, lpMsg, iSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00034	53		 push	 ebx
  00035	50		 push	 eax
  00036	57		 push	 edi
  00037	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@SendCrywol:

; 92   : 	for ( int i=OBJ_STARTUSERINDZT;i<OBJMAX;i++)

  00044	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  0004a	47		 inc	 edi
  0004b	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00051	7c c5		 jl	 SHORT $LL6@SendCrywol
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx

; 101  : 				}
; 102  : 			}
; 103  : 		}
; 104  : 	}
; 105  : }

  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ENDP	; CCrywolfUtil::SendCrywolfUserAnyData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ	; CCrywolfUtil::SendCrywolfUserAnyMsg
; Function compile flags: /Ogtp
;	COMDAT ?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iType$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendCrywolfUserAnyMsg, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 109  : 	if ( !lpszMsg )

  00014	8b 75 10	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	0f 84 d8 00 00
	00		 je	 $LN4@SendCrywol@2

; 110  : 		return;
; 111  : 
; 112  : 	char szBuffer[512] = "";

  0001f	68 ff 01 00 00	 push	 511			; 000001ffH
  00024	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002a	6a 00		 push	 0
  0002c	50		 push	 eax
  0002d	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00034	e8 00 00 00 00	 call	 _memset

; 113  : 	va_list	pArguments;
; 114  : 
; 115  : 	va_start(pArguments, lpszMsg);
; 116  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00039	8d 4d 14	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  0003c	51		 push	 ecx
  0003d	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00043	56		 push	 esi
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 _vsprintf

; 117  : 	va_end(pArguments);
; 118  : 
; 119  : 	PMSG_NOTICE pNotice;
; 120  : 
; 121  : 	switch ( iType )

  0004a	8b 45 0c	 mov	 eax, DWORD PTR _iType$[ebp]
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	48		 dec	 eax
  00051	74 1d		 je	 SHORT $LN8@SendCrywol@2
  00053	48		 dec	 eax
  00054	75 4b		 jne	 SHORT $LN9@SendCrywol@2

; 126  : 			break;
; 127  : 
; 128  : 		case 2:
; 129  : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00056	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0005c	50		 push	 eax
  0005d	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00063	6a 00		 push	 0
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 130  : 			break;

  0006e	eb 31		 jmp	 SHORT $LN9@SendCrywol@2
$LN8@SendCrywol@2:

; 122  : 	{
; 123  : 		case 1:
; 124  : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00070	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00076	52		 push	 edx
  00077	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  0007d	6a 00		 push	 0
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 125  : 			TNotice::SetNoticeProperty(&pNotice, 10, _ARGB(255, 255, 200, 80), 1, 0, 20);

  00085	6a 14		 push	 20			; 00000014H
  00087	6a 00		 push	 0
  00089	6a 01		 push	 1
  0008b	68 ff c8 50 ff	 push	 -11482881		; ff50c8ffH
  00090	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00096	6a 0a		 push	 10			; 0000000aH
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty
  0009e	83 c4 24	 add	 esp, 36			; 00000024H
$LN9@SendCrywol@2:

; 131  : 	}
; 132  : 
; 133  : 	for ( int i=OBJ_STARTUSERINDZT;i<OBJMAX;i++)

  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a6	57		 push	 edi
  000a7	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  000ac	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL6@SendCrywol@2:

; 134  : 	{
; 135  : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  000b1	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  000b6	75 2f		 jne	 SHORT $LN5@SendCrywol@2

; 136  : 		{
; 137  : 			if ( gObj[i].Type == OBJ_USER )

  000b8	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  000be	75 27		 jne	 SHORT $LN5@SendCrywol@2

; 138  : 			{
; 139  : 				if ( gObj[i].MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  000c0	80 bc 06 49 01
	00 00 22	 cmp	 BYTE PTR [esi+eax+329], 34 ; 00000022H
  000c8	75 1d		 jne	 SHORT $LN5@SendCrywol@2

; 140  : 				{
; 141  : 					DataSend(i, (LPBYTE)&pNotice, pNotice.h.size);

  000ca	0f b6 95 ed fc
	ff ff		 movzx	 edx, BYTE PTR _pNotice$[ebp+1]
  000d1	52		 push	 edx
  000d2	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000d8	50		 push	 eax
  000d9	57		 push	 edi
  000da	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@SendCrywol@2:

; 131  : 	}
; 132  : 
; 133  : 	for ( int i=OBJ_STARTUSERINDZT;i<OBJMAX;i++)

  000e7	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  000ed	47		 inc	 edi
  000ee	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  000f4	7c bb		 jl	 SHORT $LL6@SendCrywol@2
  000f6	5f		 pop	 edi
$LN4@SendCrywol@2:

; 142  : 				}
; 143  : 			}
; 144  : 		}
; 145  : 	}
; 146  : 
; 147  : }

  000f7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fa	33 cd		 xor	 ecx, ebp
  000fc	5e		 pop	 esi
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendCrywolfUserAnyMsg
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ ; CCrywolfUtil::SendCrywolfChattingMsg
; Function compile flags: /Ogtp
;	COMDAT ?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iObjIndex$ = 12					; size = 4
_lpszMsg$ = 16						; size = 4
?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendCrywolfChattingMsg, COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00009	33 c5		 xor	 eax, ebp
  0000b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 151  : #if(TESTSERVER==0)
; 152  : 	return;
; 153  : #endif
; 154  : 
; 155  : 	if ( !lpszMsg )
; 156  : 	{
; 157  : 		return;
; 158  : 	}
; 159  : 
; 160  : 	if ( !OBJMAX_RANGE(iObjIndex))
; 161  : 	{
; 162  : 		return;
; 163  : 	}
; 164  : 
; 165  : 	LPOBJ lpObj = &gObj[iObjIndex];
; 166  : 	char szBuffer[512] = "";
; 167  : 	va_list pArguments;
; 168  : 
; 169  : 	va_start(pArguments, lpszMsg);
; 170  : 	vsprintf(szBuffer, lpszMsg, pArguments);
; 171  : 	va_end(pArguments);
; 172  : 
; 173  : 	char szChat[60] = {0};
; 174  : 	memcpy(szChat, szBuffer, sizeof(szChat)-1);
; 175  : 
; 176  : 	for(int i=0;i<MAX_VIEWPORT_MONSTER;i++)
; 177  : 	{
; 178  : 		if ( lpObj->VpPlayer2[i].state )
; 179  : 		{
; 180  : 			int iTargetNumber = lpObj->VpPlayer2[i].number;
; 181  : 
; 182  : 			if ( OBJMAX_RANGE(iTargetNumber) )
; 183  : 			{
; 184  : 				ChatTargetSend(lpObj, szChat, iTargetNumber);
; 185  : 			}
; 186  : 		}
; 187  : 	}
; 188  : }

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00011	33 cd		 xor	 ecx, ebp
  00013	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendCrywolfChattingMsg
_TEXT	ENDS
PUBLIC	??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@ ; `string'
PUBLIC	??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@ ; `string'
PUBLIC	??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@ ; `string'
PUBLIC	??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@ ; `string'
PUBLIC	??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z	; CCrywolfUtil::CrywolfMVPLevelUp
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	_sprintf:PROC
EXTRN	?gObjCalcMaxLifePower@@YAXH@Z:PROC		; gObjCalcMaxLifePower
EXTRN	?GCLevelUpMsgSend@@YAXHH@Z:PROC			; GCLevelUpMsgSend
EXTRN	?gObjSetBP@@YAXH@Z:PROC				; gObjSetBP
EXTRN	?gObjNextExpCal@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjNextExpCal
EXTRN	?DCInfo@@3Vclassdef@@A:BYTE			; DCInfo
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?ZtConfig@@3VcZtConfigs@@A:BYTE			; ZtConfig
EXTRN	?gObjSetExpPetItem@@YAXHH@Z:PROC		; gObjSetExpPetItem
EXTRN	?MasterLevelUp@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@AA_J_NH@Z:PROC ; CMasterLevelSystem::MasterLevelUp
EXTRN	?g_MasterLevelSystem@@3VCMasterLevelSystem@@A:BYTE ; g_MasterLevelSystem
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@
CONST	SEGMENT
??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@ DB ',(%s)(%s) ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@
CONST	SEGMENT
??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@ DB '4'
	DB	'00 LevelUp (%s)(%s) Party ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@
CONST	SEGMENT
??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@ DB '['
	DB	' Crywolf ][MVP Exp.] [%s][%s] LevelUp PlusStatQuest Clear Add'
	DB	'Stat %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@ DB 'E'
	DB	'xperience : Map[%d]-(%d,%d) [%s][%s](%d) %u %d MonsterIndex :'
	DB	' %d, EventType : %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ DB '['
	DB	' Crywolf ][MVP Exp.] : [%s][%s](%d) %u %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z
_TEXT	SEGMENT
tv325 = -264						; size = 4
_szMsg$211460 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_iUserIndex$ = 8					; size = 4
_iAddExp$ = 12						; size = 4
?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z PROC		; CCrywolfUtil::CrywolfMVPLevelUp, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _iUserIndex$[ebp]

; 192  : 	if ( !OBJMAX_RANGE(iUserIndex ) )

  00017	85 ff		 test	 edi, edi
  00019	78 0f		 js	 SHORT $LN21@CrywolfMVP
  0001b	33 c0		 xor	 eax, eax
  0001d	81 ff 97 3a 00
	00		 cmp	 edi, 14999		; 00003a97H
  00023	0f 9e c0	 setle	 al
  00026	85 c0		 test	 eax, eax
  00028	75 13		 jne	 SHORT $LN14@CrywolfMVP
$LN21@CrywolfMVP:

; 193  : 	{
; 194  : 		return 0;

  0002a	33 c0		 xor	 eax, eax
  0002c	5f		 pop	 edi

; 286  : 		}
; 287  : 	}
; 288  : 
; 289  : 	return iLEFT_EXP;
; 290  : }

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00030	33 cd		 xor	 ecx, ebp
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN14@CrywolfMVP:

; 195  : 	}
; 196  : 
; 197  : 	LogAddTD("[ Crywolf ][MVP Exp.] : [%s][%s](%d) %u %d", gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].Level, gObj[iUserIndex].Experience, iAddExp);

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00042	8b 4d 0c	 mov	 ecx, DWORD PTR _iAddExp$[ebp]
  00045	56		 push	 esi
  00046	8b f7		 mov	 esi, edi
  00048	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0004e	8b 94 06 c8 00
	00 00		 mov	 edx, DWORD PTR [esi+eax+200]
  00055	51		 push	 ecx
  00056	0f bf 8c 06 be
	00 00 00	 movsx	 ecx, WORD PTR [esi+eax+190]
  0005e	52		 push	 edx
  0005f	51		 push	 ecx
  00060	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  00064	52		 push	 edx
  00065	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  00069	50		 push	 eax
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 198  : 
; 199  : 	if(g_MasterLevelSystem.MasterLevelUp(&gObj[iUserIndex], (__int64&)iAddExp,1,0) != 0) //season3 add-on

  00075	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0007b	83 c4 18	 add	 esp, 24			; 00000018H
  0007e	6a 00		 push	 0
  00080	6a 01		 push	 1
  00082	8d 4d 0c	 lea	 ecx, DWORD PTR _iAddExp$[ebp]
  00085	51		 push	 ecx
  00086	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00089	50		 push	 eax
  0008a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  0008f	e8 00 00 00 00	 call	 ?MasterLevelUp@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@AA_J_NH@Z ; CMasterLevelSystem::MasterLevelUp
  00094	85 c0		 test	 eax, eax
  00096	74 14		 je	 SHORT $LN13@CrywolfMVP

; 200  : 	{
; 201  : 		return 0;

  00098	5e		 pop	 esi
  00099	33 c0		 xor	 eax, eax
  0009b	5f		 pop	 edi

; 286  : 		}
; 287  : 	}
; 288  : 
; 289  : 	return iLEFT_EXP;
; 290  : }

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009f	33 cd		 xor	 ecx, ebp
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 08 00	 ret	 8
$LN13@CrywolfMVP:

; 202  : 	}
; 203  : 
; 204  : 	gObjSetExpPetItem(iUserIndex, iAddExp);

  000ac	8b 4d 0c	 mov	 ecx, DWORD PTR _iAddExp$[ebp]
  000af	53		 push	 ebx
  000b0	51		 push	 ecx
  000b1	57		 push	 edi
  000b2	e8 00 00 00 00	 call	 ?gObjSetExpPetItem@@YAXHH@Z ; gObjSetExpPetItem

; 205  : 
; 206  : 	int iLEFT_EXP = 0;
; 207  : 
; 208  : 	LogAddTD("Experience : Map[%d]-(%d,%d) [%s][%s](%d) %u %d MonsterIndex : %d, EventType : %d", gObj[iUserIndex].MapNumber, gObj[iUserIndex].X, gObj[iUserIndex].X, gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].Level, gObj[iUserIndex].Experience, iAddExp, 0, EVENT_TYPE_CRYWOLF);

  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000bc	8b 55 0c	 mov	 edx, DWORD PTR _iAddExp$[ebp]
  000bf	0f bf 8c 06 44
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+324]
  000c7	6a 05		 push	 5
  000c9	33 db		 xor	 ebx, ebx
  000cb	53		 push	 ebx
  000cc	52		 push	 edx
  000cd	8b 94 06 c8 00
	00 00		 mov	 edx, DWORD PTR [esi+eax+200]
  000d4	52		 push	 edx
  000d5	0f bf 94 06 be
	00 00 00	 movsx	 edx, WORD PTR [esi+eax+190]
  000dd	52		 push	 edx
  000de	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  000e2	52		 push	 edx
  000e3	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  000e7	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  000ef	52		 push	 edx
  000f0	51		 push	 ecx
  000f1	51		 push	 ecx
  000f2	50		 push	 eax
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 209  : 
; 210  : 	#if(ENABLE_CHARLVL1000)
; 211  : 
; 212  : 	if ( gObj[iUserIndex].Level >= ZtConfig.ZtCustom.MaxLevel )

  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00104	0f bf 94 0e be
	00 00 00	 movsx	 edx, WORD PTR [esi+ecx+190]
  0010c	83 c4 34	 add	 esp, 52			; 00000034H
  0010f	3b 15 24 00 00
	00		 cmp	 edx, DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+36
  00115	7c 33		 jl	 SHORT $LN12@CrywolfMVP

; 213  : 	{
; 214  : 		GCServerMsgStringSend(lMsg.Get(MSGGET(4, 112)), gObj[iUserIndex].m_Index, 1);

  00117	8b 04 0e	 mov	 eax, DWORD PTR [esi+ecx]
  0011a	6a 01		 push	 1
  0011c	50		 push	 eax
  0011d	68 70 04 00 00	 push	 1136			; 00000470H
  00122	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00127	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00132	83 c4 0c	 add	 esp, 12			; 0000000cH
  00135	5b		 pop	 ebx
  00136	5e		 pop	 esi

; 215  : 		return 0;

  00137	33 c0		 xor	 eax, eax
  00139	5f		 pop	 edi

; 286  : 		}
; 287  : 	}
; 288  : 
; 289  : 	return iLEFT_EXP;
; 290  : }

  0013a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013d	33 cd		 xor	 ecx, ebp
  0013f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 08 00	 ret	 8
$LN12@CrywolfMVP:

; 216  : 	}
; 217  : 
; 218  : 	#else
; 219  : 
; 220  : 	if ( gObj[iUserIndex].Level >= MAX_CHAR_LEVEL )
; 221  : 	{
; 222  : 		GCServerMsgStringSend(lMsg.Get(MSGGET(4, 112)), gObj[iUserIndex].m_Index, 1);
; 223  : 		return 0;
; 224  : 	}
; 225  : 
; 226  : 
; 227  : 	#endif
; 228  : 
; 229  : 
; 230  : 	if ( (gObj[iUserIndex].Experience + iAddExp) < gObj[iUserIndex].NextExp )

  0014a	8b bc 0e c8 00
	00 00		 mov	 edi, DWORD PTR [esi+ecx+200]
  00151	8b 55 0c	 mov	 edx, DWORD PTR _iAddExp$[ebp]
  00154	8d 84 0e c8 00
	00 00		 lea	 eax, DWORD PTR [esi+ecx+200]
  0015b	8d 8c 0e cc 00
	00 00		 lea	 ecx, DWORD PTR [esi+ecx+204]
  00162	03 fa		 add	 edi, edx
  00164	3b 39		 cmp	 edi, DWORD PTR [ecx]
  00166	73 07		 jae	 SHORT $LN11@CrywolfMVP

; 231  : 	{
; 232  : 		gObj[iUserIndex].Experience += iAddExp;

  00168	01 10		 add	 DWORD PTR [eax], edx

; 233  : 	}
; 234  : 	else

  0016a	e9 2e 02 00 00	 jmp	 $LN5@CrywolfMVP
$LN11@CrywolfMVP:

; 235  : 	{
; 236  : 		iLEFT_EXP = gObj[iUserIndex].Experience + iAddExp - gObj[iUserIndex].NextExp;

  0016f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00171	8b 18		 mov	 ebx, DWORD PTR [eax]

; 237  : 		gObj[iUserIndex].Experience = gObj[iUserIndex].NextExp;

  00173	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		gObj[iUserIndex].Level++;

  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0017a	66 ff 84 06 be
	00 00 00	 inc	 WORD PTR [esi+eax+190]
  00182	2b d9		 sub	 ebx, ecx

; 239  : 
; 240  : 		if ( gObj[iUserIndex].Class == CLASS_DARKLORD || gObj[iUserIndex].Class == CLASS_MAGUMSA )

  00184	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0018a	0f b7 84 0e b8
	00 00 00	 movzx	 eax, WORD PTR [esi+ecx+184]
  00192	03 da		 add	 ebx, edx
  00194	83 f8 04	 cmp	 eax, 4
  00197	74 16		 je	 SHORT $LN8@CrywolfMVP
  00199	83 f8 03	 cmp	 eax, 3
  0019c	74 11		 je	 SHORT $LN8@CrywolfMVP

; 243  : 		}
; 244  : 		else
; 245  : 		{
; 246  : 			gObj[iUserIndex].LevelUpPoint += 5;

  0019e	83 84 0e c0 00
	00 00 05	 add	 DWORD PTR [esi+ecx+192], 5
  001a6	8d 84 0e c0 00
	00 00		 lea	 eax, DWORD PTR [esi+ecx+192]
  001ad	eb 0f		 jmp	 SHORT $LN7@CrywolfMVP
$LN8@CrywolfMVP:

; 241  : 		{
; 242  : 			gObj[iUserIndex].LevelUpPoint += 7;

  001af	83 84 0e c0 00
	00 00 07	 add	 DWORD PTR [esi+ecx+192], 7
  001b7	8d 84 0e c0 00
	00 00		 lea	 eax, DWORD PTR [esi+ecx+192]
$LN7@CrywolfMVP:

; 247  : 		}
; 248  : 
; 249  : 		if ( gObj[iUserIndex].PlusStatQuestClear != false )

  001be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001c4	80 bc 0e a5 00
	00 00 00	 cmp	 BYTE PTR [esi+ecx+165], 0
  001cc	74 39		 je	 SHORT $LN6@CrywolfMVP

; 250  : 		{
; 251  : 			gObj[iUserIndex].LevelUpPoint++;

  001ce	ff 84 0e c0 00
	00 00		 inc	 DWORD PTR [esi+ecx+192]
  001d5	8d 84 0e c0 00
	00 00		 lea	 eax, DWORD PTR [esi+ecx+192]

; 252  : 			LogAddTD("[ Crywolf ][MVP Exp.] [%s][%s] LevelUp PlusStatQuest Clear AddStat %d", gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].LevelUpPoint);

  001dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001e1	8b 8c 06 c0 00
	00 00		 mov	 ecx, DWORD PTR [esi+eax+192]
  001e8	51		 push	 ecx
  001e9	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  001ed	52		 push	 edx
  001ee	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  001f2	50		 push	 eax
  001f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@
  001f8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00204	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@CrywolfMVP:

; 253  : 		}
; 254  : 
; 255  : 		gObj[iUserIndex].MaxLife += DCInfo.DefClass[gObj[iUserIndex].Class].LevelLife;

  00207	8d 84 0e 00 01
	00 00		 lea	 eax, DWORD PTR [esi+ecx+256]
  0020e	0f b7 8c 0e b8
	00 00 00	 movzx	 ecx, WORD PTR [esi+ecx+184]
  00216	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  0021c	d9 81 10 00 00
	00		 fld	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+16]
  00222	d8 00		 fadd	 DWORD PTR [eax]
  00224	d9 18		 fstp	 DWORD PTR [eax]

; 256  : 		gObj[iUserIndex].MaxMana += DCInfo.DefClass[gObj[iUserIndex].Class].LevelMana;

  00226	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0022c	0f b7 94 0e b8
	00 00 00	 movzx	 edx, WORD PTR [esi+ecx+184]
  00234	69 d2 c8 0b 00
	00		 imul	 edx, 3016		; 00000bc8H
  0023a	8d 84 0e 14 01
	00 00		 lea	 eax, DWORD PTR [esi+ecx+276]
  00241	d9 82 1c 00 00
	00		 fld	 DWORD PTR ?DCInfo@@3Vclassdef@@A[edx+28]
  00247	d8 00		 fadd	 DWORD PTR [eax]
  00249	d9 18		 fstp	 DWORD PTR [eax]

; 257  : 		gObj[iUserIndex].Life = gObj[iUserIndex].MaxLife;

  0024b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00250	d9 84 06 00 01
	00 00		 fld	 DWORD PTR [esi+eax+256]
  00257	d9 9c 06 fc 00
	00 00		 fstp	 DWORD PTR [esi+eax+252]

; 258  : 		gObj[iUserIndex].Mana = gObj[iUserIndex].MaxMana;

  0025e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00263	d9 84 06 14 01
	00 00		 fld	 DWORD PTR [esi+eax+276]
  0026a	d9 9c 06 10 01
	00 00		 fstp	 DWORD PTR [esi+eax+272]

; 259  : 		gObjNextExpCal(&gObj[iUserIndex]);

  00271	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00276	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00279	51		 push	 ecx
  0027a	e8 00 00 00 00	 call	 ?gObjNextExpCal@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNextExpCal

; 260  : 		gObjSetBP(gObj[iUserIndex].m_Index);

  0027f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00285	8b 04 16	 mov	 eax, DWORD PTR [esi+edx]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 261  : 		GCLevelUpMsgSend(gObj[iUserIndex].m_Index, 1);

  0028e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00294	8b 14 0e	 mov	 edx, DWORD PTR [esi+ecx]
  00297	6a 01		 push	 1
  00299	52		 push	 edx
  0029a	e8 00 00 00 00	 call	 ?GCLevelUpMsgSend@@YAXHH@Z ; GCLevelUpMsgSend

; 262  : 		gObjCalcMaxLifePower(gObj[iUserIndex].m_Index);

  0029f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002a4	8b 0c 06	 mov	 ecx, DWORD PTR [esi+eax]
  002a7	51		 push	 ecx
  002a8	e8 00 00 00 00	 call	 ?gObjCalcMaxLifePower@@YAXH@Z ; gObjCalcMaxLifePower

; 263  : 
; 264  : 		LogAddTD(lMsg.Get(MSGGET(2, 8)), gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].Level);

  002ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002b2	0f bf 94 06 be
	00 00 00	 movsx	 edx, WORD PTR [esi+eax+190]
  002ba	83 c4 14	 add	 esp, 20			; 00000014H
  002bd	52		 push	 edx
  002be	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  002c2	51		 push	 ecx
  002c3	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  002c7	52		 push	 edx
  002c8	68 08 02 00 00	 push	 520			; 00000208H
  002cd	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  002d2	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  002d7	50		 push	 eax
  002d8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 265  : 
; 266  : 		//----------------------------------------------------------------------------------------------
; 267  : 
; 268  : 		if( gObj[iUserIndex].Level == 400 && gObj[iUserIndex].PartyNumber >= 0 ) //Season 2.5 add-on (Party Level 400 Display)

  002de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002e3	b9 90 01 00 00	 mov	 ecx, 400		; 00000190H
  002e8	83 c4 10	 add	 esp, 16			; 00000010H
  002eb	66 39 8c 06 be
	00 00 00	 cmp	 WORD PTR [esi+eax+190], cx
  002f3	0f 85 a4 00 00
	00		 jne	 $LN5@CrywolfMVP
  002f9	83 bc 06 2c 04
	00 00 00	 cmp	 DWORD PTR [esi+eax+1068], 0
  00301	0f 8c 96 00 00
	00		 jl	 $LN5@CrywolfMVP

; 269  : 		{
; 270  : 			int iPartyNumber = gObj[iUserIndex].PartyNumber;

  00307	8b bc 06 2c 04
	00 00		 mov	 edi, DWORD PTR [esi+eax+1068]

; 271  : 			char szMsg[256];
; 272  : 			sprintf(szMsg,"400 LevelUp (%s)(%s) Party ",gObj[iUserIndex].AccountID,gObj[iUserIndex].Name);

  0030e	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  00312	52		 push	 edx
  00313	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  00317	50		 push	 eax
  00318	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szMsg$211460[ebp]
  0031e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@
  00323	51		 push	 ecx
  00324	e8 00 00 00 00	 call	 _sprintf
  00329	6b ff 68	 imul	 edi, 104		; 00000068H
  0032c	83 c4 10	 add	 esp, 16			; 00000010H
  0032f	81 c7 0c 00 00
	00		 add	 edi, OFFSET ?gParty@@3VPartyClass@@A+12
  00335	c7 85 f8 fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv325[ebp], 10 ; 0000000aH
  0033f	90		 npad	 1
$LL4@CrywolfMVP:

; 276  : 			{
; 277  : 				iPartyNumIndex = gParty.m_PartyS[iPartyNumber].Number[i];

  00340	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 278  : 
; 279  : 				if( iPartyNumIndex >= 0  )

  00342	85 c9		 test	 ecx, ecx
  00344	78 3c		 js	 SHORT $LN3@CrywolfMVP

; 280  : 				{
; 281  : 					int iSize = strlen(szMsg);

  00346	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szMsg$211460[ebp]
  0034c	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0034f	90		 npad	 1
$LL22@CrywolfMVP:
  00350	8a 10		 mov	 dl, BYTE PTR [eax]
  00352	40		 inc	 eax
  00353	84 d2		 test	 dl, dl
  00355	75 f9		 jne	 SHORT $LL22@CrywolfMVP

; 282  : 					sprintf(&szMsg[iSize],",(%s)(%s) ",gObj[iPartyNumIndex].AccountID,gObj[iPartyNumIndex].Name);

  00357	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0035d	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00363	2b c6		 sub	 eax, esi
  00365	8d 51 77	 lea	 edx, DWORD PTR [ecx+119]
  00368	52		 push	 edx
  00369	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0036c	51		 push	 ecx
  0036d	8d 84 05 fc fe
	ff ff		 lea	 eax, DWORD PTR _szMsg$211460[ebp+eax]
  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@
  00379	50		 push	 eax
  0037a	e8 00 00 00 00	 call	 _sprintf
  0037f	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@CrywolfMVP:

; 273  : 			int iPartyNumIndex;
; 274  : 
; 275  : 			for( int i = 0; i<MAX_USER_IN_PARTY; i++ )

  00382	83 c7 04	 add	 edi, 4
  00385	ff 8d f8 fe ff
	ff		 dec	 DWORD PTR tv325[ebp]
  0038b	75 b3		 jne	 SHORT $LL4@CrywolfMVP

; 283  : 				}
; 284  : 			}
; 285  : 			LogAddTD(szMsg);

  0038d	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szMsg$211460[ebp]
  00393	51		 push	 ecx
  00394	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0039a	83 c4 04	 add	 esp, 4
$LN5@CrywolfMVP:

; 286  : 		}
; 287  : 	}
; 288  : 
; 289  : 	return iLEFT_EXP;
; 290  : }

  0039d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003a0	8b c3		 mov	 eax, ebx
  003a2	5b		 pop	 ebx
  003a3	5e		 pop	 esi
  003a4	33 cd		 xor	 ecx, ebp
  003a6	5f		 pop	 edi
  003a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003ac	8b e5		 mov	 esp, ebp
  003ae	5d		 pop	 ebp
  003af	c2 08 00	 ret	 8
?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z ENDP		; CCrywolfUtil::CrywolfMVPLevelUp
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCCrywolfUtil@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCrywolfUtil@@UAEPAXI@Z PROC			; CCrywolfUtil::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CCrywolfUtil@@UAE@XZ	; CCrywolfUtil::~CCrywolfUtil
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCCrywolfUtil@@UAEPAXI@Z ENDP			; CCrywolfUtil::`scalar deleting destructor'
_TEXT	ENDS
END
