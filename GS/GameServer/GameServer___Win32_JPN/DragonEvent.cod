; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\DragonEvent.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?SetMenualStart@CDragonEvent@@QAEXH@Z		; CDragonEvent::SetMenualStart
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\dragonevent.h
;	COMDAT ?SetMenualStart@CDragonEvent@@QAEXH@Z
_TEXT	SEGMENT
_bMenualStart$ = 8					; size = 4
?SetMenualStart@CDragonEvent@@QAEXH@Z PROC		; CDragonEvent::SetMenualStart, COMDAT
; _this$ = ecx

; 23   : 	void SetMenualStart(BOOL bMenualStart){this->m_bMenualStart = bMenualStart;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _bMenualStart$[ebp]
  00006	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetMenualStart@CDragonEvent@@QAEXH@Z ENDP		; CDragonEvent::SetMenualStart
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CDragonEvent@@6B@				; CDragonEvent::`vftable'
PUBLIC	??1CDragonEvent@@UAE@XZ				; CDragonEvent::~CDragonEvent
PUBLIC	??_R4CDragonEvent@@6B@				; CDragonEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDragonEvent@@@8			; CDragonEvent `RTTI Type Descriptor'
PUBLIC	??_R3CDragonEvent@@8				; CDragonEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDragonEvent@@8				; CDragonEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDragonEvent@@8			; CDragonEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECDragonEvent@@UAEPAXI@Z:PROC		; CDragonEvent::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CDragonEvent@@8
; File e:\work\tranet_version\gs\gameserver\dragonevent.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CDragonEvent@@8 DD FLAT:??_R0?AVCDragonEvent@@@8 ; CDragonEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDragonEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2CDragonEvent@@8
rdata$r	SEGMENT
??_R2CDragonEvent@@8 DD FLAT:??_R1A@?0A@EA@CDragonEvent@@8 ; CDragonEvent::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDragonEvent@@8
rdata$r	SEGMENT
??_R3CDragonEvent@@8 DD 00H				; CDragonEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDragonEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDragonEvent@@@8
_DATA	SEGMENT
??_R0?AVCDragonEvent@@@8 DD FLAT:??_7type_info@@6B@	; CDragonEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDragonEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDragonEvent@@6B@
rdata$r	SEGMENT
??_R4CDragonEvent@@6B@ DD 00H				; CDragonEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDragonEvent@@@8
	DD	FLAT:??_R3CDragonEvent@@8
rdata$r	ENDS
;	COMDAT ??_7CDragonEvent@@6B@
CONST	SEGMENT
??_7CDragonEvent@@6B@ DD FLAT:??_R4CDragonEvent@@6B@	; CDragonEvent::`vftable'
	DD	FLAT:??_ECDragonEvent@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CDragonEvent@@UAE@XZ
_TEXT	SEGMENT
??1CDragonEvent@@UAE@XZ PROC				; CDragonEvent::~CDragonEvent, COMDAT
; _this$ = ecx

; 14   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDragonEvent@@6B@

; 15   : 	return;
; 16   : }

  00006	c3		 ret	 0
??1CDragonEvent@@UAE@XZ ENDP				; CDragonEvent::~CDragonEvent
_TEXT	ENDS
PUBLIC	?Init@CDragonEvent@@QAEXXZ			; CDragonEvent::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
?Init@CDragonEvent@@QAEXXZ PROC				; CDragonEvent::Init, COMDAT
; _this$ = ecx

; 20   : 	this->EventState=0;

  00000	33 c0		 xor	 eax, eax
  00002	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 21   : 	this->EventStartTime =0;

  00005	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 22   : 	this->m_MapNumber =0;

  00008	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 23   : 	this->m_bMenualStart =0;

  0000b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 24   : }

  0000e	c3		 ret	 0
?Init@CDragonEvent@@QAEXXZ ENDP				; CDragonEvent::Init
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Start@CDragonEvent@@QAEXXZ			; CDragonEvent::Start
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	_rand:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Start@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
_map$ = -264						; size = 3
_szTemp$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?Start@CDragonEvent@@QAEXXZ PROC			; CDragonEvent::Start, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 28   : 	char szTemp[256];
; 29   : 	char map[3];
; 30   : 
; 31   : 	if ( this->EventState != 0 )

  00016	80 7b 04 00	 cmp	 BYTE PTR [ebx+4], 0
  0001a	0f 85 5b 01 00
	00		 jne	 $LN7@Start

; 32   : 	{
; 33   : 		return;
; 34   : 	}
; 35   : 
; 36   : 	this->Init();

  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	e8 00 00 00 00	 call	 ?Init@CDragonEvent@@QAEXXZ ; CDragonEvent::Init

; 37   : 
; 38   : 	//map[0]=MAP_INDEX_RORENCIA;
; 39   : 	//map[1]=MAP_INDEX_DEVIAS;
; 40   : 	//map[2]=MAP_INDEX_NORIA;
; 41   : 
; 42   : 	//season4.5 new
; 43   : 	map[0]=MAP_INDEX_NORIA;

  00027	66 c7 85 f8 fe
	ff ff 03 00	 mov	 WORD PTR _map$[ebp], 3

; 44   : 	map[1]=MAP_INDEX_RORENCIA;
; 45   : 
; 46   : 	this->EventState = 1;

  00030	c6 43 04 01	 mov	 BYTE PTR [ebx+4], 1

; 47   : 	this->m_MapNumber  = map [ rand()%2 ]; //season4.5 changed

  00034	e8 00 00 00 00	 call	 _rand
  00039	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  0003e	79 05		 jns	 SHORT $LN18@Start
  00040	48		 dec	 eax
  00041	83 c8 fe	 or	 eax, -2			; fffffffeH
  00044	40		 inc	 eax
$LN18@Start:
  00045	8a 84 05 f8 fe
	ff ff		 mov	 al, BYTE PTR _map$[ebp+eax]
  0004c	88 43 0c	 mov	 BYTE PTR [ebx+12], al

; 48   : 
; 49   : 	strcpy(szTemp, "¡Ù ");
; 50   : 
; 51   : 	switch ( this->m_MapNumber  )

  0004f	0f b6 c0	 movzx	 eax, al
  00052	83 e8 00	 sub	 eax, 0
  00055	c7 85 fc fe ff
	ff a1 d9 20 00	 mov	 DWORD PTR _szTemp$[ebp], 2152865 ; 0020d9a1H
  0005f	74 69		 je	 SHORT $LN3@Start
  00061	83 e8 02	 sub	 eax, 2
  00064	74 34		 je	 SHORT $LN2@Start
  00066	48		 dec	 eax
  00067	0f 85 9b 00 00
	00		 jne	 $LN4@Start

; 60   : 
; 61   : 		case MAP_INDEX_NORIA:
; 62   : 			strcat(szTemp, lMsg.Get(MSGGET(7, 211)) );

  0006d	68 d3 07 00 00	 push	 2003			; 000007d3H
  00072	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00077	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0007c	8b d0		 mov	 edx, eax
  0007e	8b ff		 npad	 2
$LL9@Start:
  00080	8a 08		 mov	 cl, BYTE PTR [eax]
  00082	40		 inc	 eax
  00083	84 c9		 test	 cl, cl
  00085	75 f9		 jne	 SHORT $LL9@Start
  00087	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szTemp$[ebp]
  0008d	2b c2		 sub	 eax, edx
  0008f	4f		 dec	 edi
$LL10@Start:
  00090	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00093	47		 inc	 edi
  00094	84 c9		 test	 cl, cl
  00096	75 f8		 jne	 SHORT $LL10@Start

; 63   : 			break;

  00098	eb 5e		 jmp	 SHORT $LN19@Start
$LN2@Start:

; 55   : 			break;
; 56   : 
; 57   : 		case MAP_INDEX_DEVIAS:
; 58   : 			strcat(szTemp, lMsg.Get(MSGGET(7, 210)) );

  0009a	68 d2 07 00 00	 push	 2002			; 000007d2H
  0009f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000a4	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000a9	8b d0		 mov	 edx, eax
  000ab	eb 03 8d 49 00	 npad	 5
$LL11@Start:
  000b0	8a 08		 mov	 cl, BYTE PTR [eax]
  000b2	40		 inc	 eax
  000b3	84 c9		 test	 cl, cl
  000b5	75 f9		 jne	 SHORT $LL11@Start
  000b7	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szTemp$[ebp]
  000bd	2b c2		 sub	 eax, edx
  000bf	4f		 dec	 edi
$LL12@Start:
  000c0	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  000c3	47		 inc	 edi
  000c4	84 c9		 test	 cl, cl
  000c6	75 f8		 jne	 SHORT $LL12@Start

; 59   : 			break;

  000c8	eb 2e		 jmp	 SHORT $LN19@Start
$LN3@Start:

; 52   : 	{
; 53   : 		case MAP_INDEX_RORENCIA:
; 54   : 			strcat(szTemp, lMsg.Get(MSGGET(7, 208)) );

  000ca	68 d0 07 00 00	 push	 2000			; 000007d0H
  000cf	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000d4	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000d9	8b d0		 mov	 edx, eax
  000db	eb 03 8d 49 00	 npad	 5
$LL13@Start:
  000e0	8a 08		 mov	 cl, BYTE PTR [eax]
  000e2	40		 inc	 eax
  000e3	84 c9		 test	 cl, cl
  000e5	75 f9		 jne	 SHORT $LL13@Start
  000e7	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szTemp$[ebp]
  000ed	2b c2		 sub	 eax, edx
  000ef	4f		 dec	 edi
$LL14@Start:
  000f0	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  000f3	47		 inc	 edi
  000f4	84 c9		 test	 cl, cl
  000f6	75 f8		 jne	 SHORT $LL14@Start
$LN19@Start:
  000f8	8b c8		 mov	 ecx, eax
  000fa	c1 e9 02	 shr	 ecx, 2
  000fd	8b f2		 mov	 esi, edx
  000ff	f3 a5		 rep movsd
  00101	8b c8		 mov	 ecx, eax
  00103	83 e1 03	 and	 ecx, 3
  00106	f3 a4		 rep movsb
$LN4@Start:

; 64   : 
; 65   : 	}
; 66   : 	
; 67   : 	strcat(szTemp, lMsg.Get(MSGGET(4, 132)) );

  00108	68 84 04 00 00	 push	 1156			; 00000484H
  0010d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00112	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00117	8b c8		 mov	 ecx, eax
  00119	8d a4 24 00 00
	00 00		 npad	 7
$LL15@Start:
  00120	8a 10		 mov	 dl, BYTE PTR [eax]
  00122	40		 inc	 eax
  00123	84 d2		 test	 dl, dl
  00125	75 f9		 jne	 SHORT $LL15@Start
  00127	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szTemp$[ebp]
  0012d	2b c1		 sub	 eax, ecx
  0012f	8b f1		 mov	 esi, ecx
  00131	4f		 dec	 edi
$LL16@Start:
  00132	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00135	47		 inc	 edi
  00136	84 c9		 test	 cl, cl
  00138	75 f8		 jne	 SHORT $LL16@Start
  0013a	8b c8		 mov	 ecx, eax
  0013c	c1 e9 02	 shr	 ecx, 2
  0013f	f3 a5		 rep movsd
  00141	8b c8		 mov	 ecx, eax
  00143	83 e1 03	 and	 ecx, 3
  00146	f3 a4		 rep movsb

; 68   : 	strcat(szTemp, " ¡Ù");

  00148	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szTemp$[ebp]
  0014e	4f		 dec	 edi
  0014f	90		 npad	 1
$LL17@Start:
  00150	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00153	47		 inc	 edi
  00154	84 c0		 test	 al, al
  00156	75 f8		 jne	 SHORT $LL17@Start

; 69   : 
; 70   : 	AllSendServerMsg(lMsg.Get(MSGGET(4, 132)));

  00158	68 84 04 00 00	 push	 1156			; 00000484H
  0015d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00162	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00167	50		 push	 eax
  00168	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0016d	83 c4 04	 add	 esp, 4

; 71   : 	this->EventStartTime  = GetTickCount();

  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00176	5f		 pop	 edi
  00177	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0017a	5e		 pop	 esi
$LN7@Start:

; 72   : }	

  0017b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017e	33 cd		 xor	 ecx, ebp
  00180	5b		 pop	 ebx
  00181	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c3		 ret	 0
?Start@CDragonEvent@@QAEXXZ ENDP			; CDragonEvent::Start
_TEXT	ENDS
PUBLIC	??_C@_0M@JPEAEJLO@Event?51?5End?$AA@		; `string'
PUBLIC	?End@CDragonEvent@@QAEXXZ			; CDragonEvent::End
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?GCMapEventStateSend@@YAXHEE@Z:PROC		; GCMapEventStateSend
;	COMDAT ??_C@_0M@JPEAEJLO@Event?51?5End?$AA@
CONST	SEGMENT
??_C@_0M@JPEAEJLO@Event?51?5End?$AA@ DB 'Event 1 End', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?End@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
?End@CDragonEvent@@QAEXXZ PROC				; CDragonEvent::End, COMDAT
; _this$ = ecx

; 75   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 76   : 	GCMapEventStateSend(this->m_MapNumber, 0, 1 );

  00003	0f b6 46 0c	 movzx	 eax, BYTE PTR [esi+12]
  00007	6a 01		 push	 1
  00009	6a 00		 push	 0
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ?GCMapEventStateSend@@YAXHEE@Z ; GCMapEventStateSend

; 77   : 	LogAdd("Event 1 End");

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JPEAEJLO@Event?51?5End?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0001c	83 c4 10	 add	 esp, 16			; 00000010H

; 78   : 	this->EventState=0;

  0001f	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00023	5e		 pop	 esi

; 79   : }

  00024	c3		 ret	 0
?End@CDragonEvent@@QAEXXZ ENDP				; CDragonEvent::End
_TEXT	ENDS
PUBLIC	?DragonActive@CDragonEvent@@QAEXXZ		; CDragonEvent::DragonActive
EXTRN	?GetBoxPosition@CMonsterSetBase@@QAEHHHHHHAAF0@Z:PROC ; CMonsterSetBase::GetBoxPosition
EXTRN	?gMSetBase@@3VCMonsterSetBase@@A:BYTE		; gMSetBase
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
;	COMDAT ?DragonActive@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
?DragonActive@CDragonEvent@@QAEXXZ PROC			; CDragonEvent::DragonActive, COMDAT
; _this$ = ecx

; 83   : 	for ( int n = 0; n<OBJ_MAXMONSTER ; n++)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	33 f6		 xor	 esi, esi
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
  0000f	90		 npad	 1
$LL22@DragonActi:

; 84   : 	{
; 85   : 		if ( gObj[n].Class == 44 )

  00010	66 83 bc 06 b8
	00 00 00 2c	 cmp	 WORD PTR [esi+eax+184], 44 ; 0000002cH
  00019	0f 85 6d 01 00
	00		 jne	 $LN16@DragonActi

; 86   : 		{
; 87   : 			gObj[n].Live = TRUE;

  0001f	88 5c 06 6a	 mov	 BYTE PTR [esi+eax+106], bl

; 88   : 			gObj[n].MapNumber = this->m_MapNumber;

  00023	8a 47 0c	 mov	 al, BYTE PTR [edi+12]
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	88 84 0e 49 01
	00 00		 mov	 BYTE PTR [esi+ecx+329], al

; 89   : 
; 90   : 			switch ( this->m_MapNumber )

  00033	0f b6 47 0c	 movzx	 eax, BYTE PTR [edi+12]
  00037	83 e8 00	 sub	 eax, 0
  0003a	0f 84 b4 00 00
	00		 je	 $LN11@DragonActi
  00040	83 e8 02	 sub	 eax, 2
  00043	74 60		 je	 SHORT $LN6@DragonActi
  00045	2b c3		 sub	 eax, ebx
  00047	0f 85 2d 01 00
	00		 jne	 $LN7@DragonActi

; 120  : 
; 121  : 				case MAP_INDEX_NORIA:
; 122  : 
; 123  : 					if ( (rand()%2) == 0 )

  0004d	e8 00 00 00 00	 call	 _rand
  00052	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  00057	79 05		 jns	 SHORT $LN23@DragonActi
  00059	48		 dec	 eax
  0005a	83 c8 fe	 or	 eax, -2			; fffffffeH
  0005d	40		 inc	 eax
$LN23@DragonActi:

; 124  : 					{
; 125  : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 198, 161, 223, 175, gObj[n].X, gObj[n].Y);

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00063	0f b6 4f 0c	 movzx	 ecx, BYTE PTR [edi+12]
  00067	8d 94 06 46 01
	00 00		 lea	 edx, DWORD PTR [esi+eax+326]
  0006e	52		 push	 edx
  0006f	8d 84 06 44 01
	00 00		 lea	 eax, DWORD PTR [esi+eax+324]
  00076	50		 push	 eax
  00077	75 19		 jne	 SHORT $LN2@DragonActi
  00079	68 af 00 00 00	 push	 175			; 000000afH
  0007e	68 df 00 00 00	 push	 223			; 000000dfH
  00083	68 a1 00 00 00	 push	 161			; 000000a1H
  00088	68 c6 00 00 00	 push	 198			; 000000c6H

; 126  : 					}
; 127  : 					else

  0008d	e9 dd 00 00 00	 jmp	 $LN25@DragonActi
$LN2@DragonActi:

; 128  : 					{
; 129  : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 136, 50, 164, 59, gObj[n].X, gObj[n].Y);

  00092	6a 3b		 push	 59			; 0000003bH
  00094	68 a4 00 00 00	 push	 164			; 000000a4H
  00099	6a 32		 push	 50			; 00000032H
  0009b	68 88 00 00 00	 push	 136			; 00000088H

; 130  : 					}
; 131  : 
; 132  : 					break;

  000a0	e9 ca 00 00 00	 jmp	 $LN25@DragonActi
$LN6@DragonActi:

; 104  : 					}
; 105  : 
; 106  : 					break;
; 107  : 
; 108  : 				case MAP_INDEX_DEVIAS:
; 109  : 					
; 110  : 					if ( (rand()%2) == 0 )

  000a5	e8 00 00 00 00	 call	 _rand
  000aa	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  000af	79 05		 jns	 SHORT $LN24@DragonActi
  000b1	48		 dec	 eax
  000b2	83 c8 fe	 or	 eax, -2			; fffffffeH
  000b5	40		 inc	 eax
$LN24@DragonActi:

; 111  : 					{
; 112  : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 155, 16, 169, 55, gObj[n].X, gObj[n].Y);

  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000bb	0f b6 4f 0c	 movzx	 ecx, BYTE PTR [edi+12]
  000bf	8d 94 06 46 01
	00 00		 lea	 edx, DWORD PTR [esi+eax+326]
  000c6	52		 push	 edx
  000c7	8d 84 06 44 01
	00 00		 lea	 eax, DWORD PTR [esi+eax+324]
  000ce	50		 push	 eax
  000cf	75 13		 jne	 SHORT $LN5@DragonActi
  000d1	6a 37		 push	 55			; 00000037H
  000d3	68 a9 00 00 00	 push	 169			; 000000a9H
  000d8	6a 10		 push	 16			; 00000010H
  000da	68 9b 00 00 00	 push	 155			; 0000009bH

; 113  : 					}
; 114  : 					else

  000df	e9 8b 00 00 00	 jmp	 $LN25@DragonActi
$LN5@DragonActi:

; 115  : 					{
; 116  : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 193, 110, 232, 126, gObj[n].X, gObj[n].Y);

  000e4	6a 7e		 push	 126			; 0000007eH
  000e6	68 e8 00 00 00	 push	 232			; 000000e8H
  000eb	6a 6e		 push	 110			; 0000006eH
  000ed	68 c1 00 00 00	 push	 193			; 000000c1H

; 117  : 					}
; 118  : 
; 119  : 					break;

  000f2	eb 7b		 jmp	 SHORT $LN25@DragonActi
$LN11@DragonActi:

; 91   : 			{
; 92   : 				case MAP_INDEX_RORENCIA:
; 93   : 					if ( (rand()%3) == 0 )

  000f4	e8 00 00 00 00	 call	 _rand
  000f9	99		 cdq
  000fa	b9 03 00 00 00	 mov	 ecx, 3
  000ff	f7 f9		 idiv	 ecx
  00101	85 d2		 test	 edx, edx
  00103	75 25		 jne	 SHORT $LN10@DragonActi

; 94   : 					{
; 95   : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 135, 61, 146, 70, gObj[n].X, gObj[n].Y);

  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0010a	8d 94 06 46 01
	00 00		 lea	 edx, DWORD PTR [esi+eax+326]
  00111	52		 push	 edx
  00112	8d 84 06 44 01
	00 00		 lea	 eax, DWORD PTR [esi+eax+324]
  00119	50		 push	 eax
  0011a	6a 46		 push	 70			; 00000046H
  0011c	68 92 00 00 00	 push	 146			; 00000092H
  00121	6a 3d		 push	 61			; 0000003dH
  00123	68 87 00 00 00	 push	 135			; 00000087H
  00128	eb 41		 jmp	 SHORT $LN26@DragonActi
$LN10@DragonActi:

; 96   : 					}
; 97   : 					else if ( (rand()%3) == 1 )

  0012a	e8 00 00 00 00	 call	 _rand
  0012f	99		 cdq
  00130	b9 03 00 00 00	 mov	 ecx, 3
  00135	f7 f9		 idiv	 ecx

; 98   : 					{
; 99   : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 120, 204, 126, 219, gObj[n].X, gObj[n].Y);

  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0013c	3b d3		 cmp	 edx, ebx
  0013e	8d 94 06 46 01
	00 00		 lea	 edx, DWORD PTR [esi+eax+326]
  00145	52		 push	 edx
  00146	8d 84 06 44 01
	00 00		 lea	 eax, DWORD PTR [esi+eax+324]
  0014d	50		 push	 eax
  0014e	75 10		 jne	 SHORT $LN8@DragonActi
  00150	68 db 00 00 00	 push	 219			; 000000dbH
  00155	6a 7e		 push	 126			; 0000007eH
  00157	68 cc 00 00 00	 push	 204			; 000000ccH
  0015c	6a 78		 push	 120			; 00000078H

; 100  : 					}
; 101  : 					else

  0015e	eb 0b		 jmp	 SHORT $LN26@DragonActi
$LN8@DragonActi:

; 102  : 					{
; 103  : 						gMSetBase.GetBoxPosition(this->m_MapNumber, 67, 116, 77, 131, gObj[n].X, gObj[n].Y);

  00160	68 83 00 00 00	 push	 131			; 00000083H
  00165	6a 4d		 push	 77			; 0000004dH
  00167	6a 74		 push	 116			; 00000074H
  00169	6a 43		 push	 67			; 00000043H
$LN26@DragonActi:
  0016b	0f b6 4f 0c	 movzx	 ecx, BYTE PTR [edi+12]
$LN25@DragonActi:
  0016f	51		 push	 ecx
  00170	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  00175	e8 00 00 00 00	 call	 ?GetBoxPosition@CMonsterSetBase@@QAEHHHHHHAAF0@Z ; CMonsterSetBase::GetBoxPosition
$LN7@DragonActi:

; 133  : 			}
; 134  : 
; 135  : 			gObj[n].m_State = 1;

  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00180	89 9c 16 20 02
	00 00		 mov	 DWORD PTR [esi+edx+544], ebx
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN16@DragonActi:

; 83   : 	for ( int n = 0; n<OBJ_MAXMONSTER ; n++)

  0018c	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00192	81 fe 80 76 97
	08		 cmp	 esi, 144144000		; 08977680H
  00198	0f 8c 72 fe ff
	ff		 jl	 $LL22@DragonActi

; 136  : 		}
; 137  : 	}
; 138  : }

  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	5b		 pop	 ebx
  001a1	c3		 ret	 0
?DragonActive@CDragonEvent@@QAEXXZ ENDP			; CDragonEvent::DragonActive
_TEXT	ENDS
PUBLIC	??_C@_0O@KHDGKEEO@Event?5Start?51?$AA@		; `string'
PUBLIC	?Run@CDragonEvent@@QAEXXZ			; CDragonEvent::Run
;	COMDAT ??_C@_0O@KHDGKEEO@Event?5Start?51?$AA@
CONST	SEGMENT
??_C@_0O@KHDGKEEO@Event?5Start?51?$AA@ DB 'Event Start 1', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Run@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
?Run@CDragonEvent@@QAEXXZ PROC				; CDragonEvent::Run, COMDAT
; _this$ = ecx

; 141  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 142  : 	if ( this->m_bMenualStart != FALSE )

  00003	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00007	75 4b		 jne	 SHORT $LN1@Run

; 143  : 	{
; 144  : 		return;
; 145  : 	}
; 146  : 
; 147  : 	if ( this->EventState == 0 )

  00009	8a 46 04	 mov	 al, BYTE PTR [esi+4]
  0000c	84 c0		 test	 al, al
  0000e	74 44		 je	 SHORT $LN1@Run

; 148  : 	{
; 149  : 		return;
; 150  : 	}
; 151  : 
; 152  : 	if ( this->EventState == 1 )

  00010	3c 01		 cmp	 al, 1
  00012	75 42		 jne	 SHORT $LN5@Run

; 153  : 	{
; 154  : 		if ( ( GetTickCount() - this->EventStartTime ) > 3000 )

  00014	57		 push	 edi
  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  0001b	ff d7		 call	 edi
  0001d	2b 46 08	 sub	 eax, DWORD PTR [esi+8]
  00020	3d b8 0b 00 00	 cmp	 eax, 3000		; 00000bb8H
  00025	76 2c		 jbe	 SHORT $LN10@Run

; 155  : 		{
; 156  : 			this->EventState = 2;
; 157  : 			GCMapEventStateSend(this->m_MapNumber , 1, 1 );

  00027	0f b6 46 0c	 movzx	 eax, BYTE PTR [esi+12]
  0002b	6a 01		 push	 1
  0002d	6a 01		 push	 1
  0002f	50		 push	 eax
  00030	c6 46 04 02	 mov	 BYTE PTR [esi+4], 2
  00034	e8 00 00 00 00	 call	 ?GCMapEventStateSend@@YAXHEE@Z ; GCMapEventStateSend

; 158  : 			LogAdd("Event Start 1");

  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KHDGKEEO@Event?5Start?51?$AA@
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 159  : 			this->DragonActive();

  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?DragonActive@CDragonEvent@@QAEXXZ ; CDragonEvent::DragonActive

; 160  : 			this->EventStartTime = GetTickCount();

  0004e	ff d7		 call	 edi
  00050	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN10@Run:
  00053	5f		 pop	 edi
$LN1@Run:
  00054	5e		 pop	 esi

; 171  : 			}
; 172  : 		}
; 173  : 	}
; 174  : }

  00055	c3		 ret	 0
$LN5@Run:

; 161  : 			return;
; 162  : 		}
; 163  : 	}
; 164  : 	else
; 165  : 	{
; 166  : 		if ( this->EventState == 2 )

  00056	3c 02		 cmp	 al, 2
  00058	75 fa		 jne	 SHORT $LN1@Run

; 167  : 		{
; 168  : 			if ( (GetTickCount() - this->EventStartTime ) > 300000 )

  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00060	2b 46 08	 sub	 eax, DWORD PTR [esi+8]
  00063	3d e0 93 04 00	 cmp	 eax, 300000		; 000493e0H
  00068	76 ea		 jbe	 SHORT $LN1@Run

; 169  : 			{
; 170  : 				this->End();

  0006a	8b ce		 mov	 ecx, esi
  0006c	5e		 pop	 esi
  0006d	e9 00 00 00 00	 jmp	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
?Run@CDragonEvent@@QAEXXZ ENDP				; CDragonEvent::Run
_TEXT	ENDS
PUBLIC	??_C@_0CN@HLGGPDEG@?$KB?$NL?$KB?$NM?$FLEvent?5Management?$FN?5?$FLStart?$FN?5D@ ; `string'
PUBLIC	?Start_Menual@CDragonEvent@@QAEXXZ		; CDragonEvent::Start_Menual
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
;	COMDAT ??_C@_0CN@HLGGPDEG@?$KB?$NL?$KB?$NM?$FLEvent?5Management?$FN?5?$FLStart?$FN?5D@
; File e:\work\tranet_version\gs\gameserver\dragonevent.h
CONST	SEGMENT
??_C@_0CN@HLGGPDEG@?$KB?$NL?$KB?$NM?$FLEvent?5Management?$FN?5?$FLStart?$FN?5D@ DB 0a1H
	DB	0dbH, 0a1H, 0dcH, '[Event Management] [Start] Dragon Event!', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\dragonevent.cpp
CONST	ENDS
;	COMDAT ?Start_Menual@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
?Start_Menual@CDragonEvent@@QAEXXZ PROC			; CDragonEvent::Start_Menual, COMDAT
; _this$ = ecx

; 177  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 178  : 	this->SetMenualStart(TRUE);
; 179  : 	LogAddTD("¡Û¡Ü[Event Management] [Start] Dragon Event!");

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@HLGGPDEG@?$KB?$NL?$KB?$NM?$FLEvent?5Management?$FN?5?$FLStart?$FN?5D@
  00008	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00015	83 c4 04	 add	 esp, 4

; 180  : 	this->EventState=0;

  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0

; 181  : 	this->Start();

  0001c	8b ce		 mov	 ecx, esi
  0001e	5e		 pop	 esi
  0001f	e9 00 00 00 00	 jmp	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
?Start_Menual@CDragonEvent@@QAEXXZ ENDP			; CDragonEvent::Start_Menual
_TEXT	ENDS
PUBLIC	?End_Menual@CDragonEvent@@QAEXXZ		; CDragonEvent::End_Menual
; Function compile flags: /Ogtp
;	COMDAT ?End_Menual@CDragonEvent@@QAEXXZ
_TEXT	SEGMENT
?End_Menual@CDragonEvent@@QAEXXZ PROC			; CDragonEvent::End_Menual, COMDAT
; _this$ = ecx

; 186  : 	this->SetMenualStart(FALSE);

  00000	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 187  : 	this->End();

  00007	e9 00 00 00 00	 jmp	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
?End_Menual@CDragonEvent@@QAEXXZ ENDP			; CDragonEvent::End_Menual
_TEXT	ENDS
PUBLIC	??0CDragonEvent@@QAE@XZ				; CDragonEvent::CDragonEvent
; Function compile flags: /Ogtp
;	COMDAT ??0CDragonEvent@@QAE@XZ
_TEXT	SEGMENT
??0CDragonEvent@@QAE@XZ PROC				; CDragonEvent::CDragonEvent, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDragonEvent@@6B@

; 10   : 	this->Init();

  00006	e8 00 00 00 00	 call	 ?Init@CDragonEvent@@QAEXXZ ; CDragonEvent::Init

; 11   : }

  0000b	8b c1		 mov	 eax, ecx
  0000d	c3		 ret	 0
??0CDragonEvent@@QAE@XZ ENDP				; CDragonEvent::CDragonEvent
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCDragonEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDragonEvent@@UAEPAXI@Z PROC			; CDragonEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDragonEvent@@UAE@XZ	; CDragonEvent::~CDragonEvent
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCDragonEvent@@UAEPAXI@Z ENDP			; CDragonEvent::`scalar deleting destructor'
_TEXT	ENDS
END
