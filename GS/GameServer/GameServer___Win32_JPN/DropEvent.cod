; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\DropEvent.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?DropEvent@@3VcDropEvent@@A			; DropEvent
_BSS	SEGMENT
?DropEvent@@3VcDropEvent@@A DB 02cc8H DUP (?)		; DropEvent
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CE@GJBNHJKJ@?4?4?2Data?2ZtData?2Events?2DropEvent?4@ ; `string'
PUBLIC	?LoadConfigs@cDropEvent@@QAEXXZ			; cDropEvent::LoadConfigs
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
; File e:\work\tranet_version\gs\gameserver\dropevent.cpp
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GJBNHJKJ@?4?4?2Data?2ZtData?2Events?2DropEvent?4@
CONST	SEGMENT
??_C@_0CE@GJBNHJKJ@?4?4?2Data?2ZtData?2Events?2DropEvent?4@ DB '..\Data\Z'
	DB	'tData\Events\DropEvent.ini', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadConfigs@cDropEvent@@QAEXXZ
_TEXT	SEGMENT
?LoadConfigs@cDropEvent@@QAEXXZ PROC			; cDropEvent::LoadConfigs, COMDAT
; _this$ = ecx

; 18   : {

  00000	56		 push	 esi

; 19   : 	Enable = GetPrivateProfileInt("Common","Enable",1,DROP_EVENT_DIR);

  00001	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@GJBNHJKJ@?4?4?2Data?2ZtData?2Events?2DropEvent?4@
  00006	6a 01		 push	 1
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00012	8b f1		 mov	 esi, ecx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0001a	89 06		 mov	 DWORD PTR [esi], eax
  0001c	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0001f	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  00024	33 c9		 xor	 ecx, ecx
$LL9@LoadConfig:

; 20   : 
; 21   : 	for(int i(0);i < DROP_EVENT_MAX; i++)
; 22   : 	{
; 23   : 		Item[i].Index = 0;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 24   : 		Item[i].Type  = 0;

  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 25   : 		Item[i].Level = 0;

  0002b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 26   : 		Item[i].Skill = 0;

  0002e	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 27   : 		Item[i].Luck  = 0;

  00031	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 28   : 		Item[i].Opt   = 0;

  00034	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 29   : 		Item[i].Exl	  = 0;

  00037	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 30   : 		Item[i].Anc   = 0;

  0003a	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  0003d	83 c0 20	 add	 eax, 32			; 00000020H
  00040	4a		 dec	 edx
  00041	75 e3		 jne	 SHORT $LL9@LoadConfig

; 31   : 	}
; 32   : 
; 33   : 	for(int j(0);j < DROP_EVENT_MAX; j++)

  00043	8d 86 08 20 00
	00		 lea	 eax, DWORD PTR [esi+8200]
  00049	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  0004e	8b ff		 npad	 2
$LL6@LoadConfig:

; 34   : 	{
; 35   : 		Time[j].Hour  = 0;

  00050	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 36   : 		Time[j].Min   = 0;

  00053	89 08		 mov	 DWORD PTR [eax], ecx
  00055	83 c0 08	 add	 eax, 8
  00058	4a		 dec	 edx
  00059	75 f5		 jne	 SHORT $LL6@LoadConfig

; 37   : 	}
; 38   : 
; 39   : 	for(int f=0;f<100;f++)

  0005b	8d 86 08 28 00
	00		 lea	 eax, DWORD PTR [esi+10248]
  00061	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00066	5e		 pop	 esi
$LL3@LoadConfig:

; 40   : 	{
; 41   : 		Cord[f].Map	= 0;

  00067	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 42   : 		Cord[f].X	= 0;

  0006a	89 08		 mov	 DWORD PTR [eax], ecx

; 43   : 		Cord[f].Y	= 0;

  0006c	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0006f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00072	4a		 dec	 edx
  00073	75 f2		 jne	 SHORT $LL3@LoadConfig

; 44   : 	}
; 45   : }

  00075	c3		 ret	 0
?LoadConfigs@cDropEvent@@QAEXXZ ENDP			; cDropEvent::LoadConfigs
_TEXT	ENDS
PUBLIC	??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?LoadFile@cDropEvent@@QAEXXZ			; cDropEvent::LoadFile
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Zt_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Zt_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@ DB '%d %d %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@ DB '%d %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@ DB 'LOAD FILE ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadFile@cDropEvent@@QAEXXZ
_TEXT	SEGMENT
_Flag$ = -332						; size = 4
_n$203998 = -328					; size = 12
_n$204001 = -316					; size = 16
_n$203995 = -300					; size = 40
_Buff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?LoadFile@cDropEvent@@QAEXXZ PROC			; cDropEvent::LoadFile, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b f1		 mov	 esi, ecx

; 49   : 	LoadConfigs();

  00017	e8 00 00 00 00	 call	 ?LoadConfigs@cDropEvent@@QAEXXZ ; cDropEvent::LoadConfigs

; 50   : 
; 51   : 	
; 52   : 
; 53   : 	FILE *file = fopen(DROP_EVENT_DIR,"r");

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@GJBNHJKJ@?4?4?2Data?2ZtData?2Events?2DropEvent?4@
  00026	e8 00 00 00 00	 call	 _fopen
  0002b	8b d8		 mov	 ebx, eax

; 54   : 
; 55   : 	if(file == NULL)

  0002d	33 c0		 xor	 eax, eax
  0002f	83 c4 08	 add	 esp, 8
  00032	3b d8		 cmp	 ebx, eax
  00034	75 1a		 jne	 SHORT $LN7@LoadFile

; 56   : 	{
; 57   : 		MessageBoxA(0,DROP_EVENT_DIR,"LOAD FILE ERROR",0);

  00036	50		 push	 eax
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@GJBNHJKJ@?4?4?2Data?2ZtData?2Events?2DropEvent?4@
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 58   : 		ExitProcess(1);

  00048	6a 01		 push	 1
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4
$LN13@LoadFile:
$LN7@LoadFile:

; 59   : 		return;
; 60   : 	}
; 61   : 
; 62   : 	char Buff[256];
; 63   : 	int Flag = 0;
; 64   : 
; 65   : 	Count[1] = 0;
; 66   : 	Count[2] = 0;
; 67   : 	Count[3] = 0;
; 68   : 
; 69   : 	while(!feof(file)) // Проверяем есть ли строка ?документ?

  00050	53		 push	 ebx
  00051	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _Flag$[ebp], eax
  00057	89 86 b8 2c 00
	00		 mov	 DWORD PTR [esi+11448], eax
  0005d	89 86 bc 2c 00
	00		 mov	 DWORD PTR [esi+11452], eax
  00063	89 86 c0 2c 00
	00		 mov	 DWORD PTR [esi+11456], eax
  00069	e8 00 00 00 00	 call	 _feof
  0006e	83 c4 04	 add	 esp, 4
  00071	85 c0		 test	 eax, eax
  00073	0f 85 11 02 00
	00		 jne	 $LN5@LoadFile
  00079	57		 push	 edi
  0007a	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0007d	8d 49 00	 npad	 3
$LL6@LoadFile:

; 70   : 	{
; 71   : 		fgets(Buff,256,file);//Функция читает текущу?строку

  00080	53		 push	 ebx
  00081	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  00087	68 00 01 00 00	 push	 256			; 00000100H
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _fgets

; 72   : 		if(Zt_IsBadFileLine(Buff, Flag)) //Вспомогательная функция

  00092	8d 8d b4 fe ff
	ff		 lea	 ecx, DWORD PTR _Flag$[ebp]
  00098	51		 push	 ecx
  00099	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?Zt_IsBadFileLine@@YA_NPADAAH@Z ; Zt_IsBadFileLine
  000a5	83 c4 14	 add	 esp, 20			; 00000014H
  000a8	84 c0		 test	 al, al
  000aa	0f 85 c8 01 00
	00		 jne	 $LN1@LoadFile

; 73   : 			continue;
; 74   : 		if(Flag == 1)

  000b0	39 bd b4 fe ff
	ff		 cmp	 DWORD PTR _Flag$[ebp], edi
  000b6	0f 85 eb 00 00
	00		 jne	 $LN3@LoadFile

; 75   : 		{
; 76   : 			int n[10];
; 77   : 			sscanf(Buff, "%d %d %d %d %d %d %d %d", &n[0], &n[1], &n[2], &n[3], &n[4], &n[5], &n[6], &n[7]);

  000bc	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _n$203995[ebp+28]
  000c2	50		 push	 eax
  000c3	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _n$203995[ebp+24]
  000c9	51		 push	 ecx
  000ca	8d 95 e8 fe ff
	ff		 lea	 edx, DWORD PTR _n$203995[ebp+20]
  000d0	52		 push	 edx
  000d1	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _n$203995[ebp+16]
  000d7	50		 push	 eax
  000d8	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _n$203995[ebp+12]
  000de	51		 push	 ecx
  000df	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _n$203995[ebp+8]
  000e5	52		 push	 edx
  000e6	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _n$203995[ebp+4]
  000ec	50		 push	 eax
  000ed	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _n$203995[ebp]
  000f3	51		 push	 ecx
  000f4	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
  000ff	52		 push	 edx
  00100	e8 00 00 00 00	 call	 _sscanf

; 78   : 
; 79   : 			Item[Count[1]].Type  = n[0];

  00105	8b 86 b8 2c 00
	00		 mov	 eax, DWORD PTR [esi+11448]
  0010b	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _n$203995[ebp]
  00111	c1 e0 05	 shl	 eax, 5
  00114	89 4c 30 08	 mov	 DWORD PTR [eax+esi+8], ecx

; 80   : 			Item[Count[1]].Index = n[1];

  00118	8b 96 b8 2c 00
	00		 mov	 edx, DWORD PTR [esi+11448]
  0011e	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _n$203995[ebp+4]
  00124	c1 e2 05	 shl	 edx, 5
  00127	89 44 32 04	 mov	 DWORD PTR [edx+esi+4], eax

; 81   : 			Item[Count[1]].Level = n[2];

  0012b	8b 8e b8 2c 00
	00		 mov	 ecx, DWORD PTR [esi+11448]
  00131	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR _n$203995[ebp+8]
  00137	c1 e1 05	 shl	 ecx, 5
  0013a	89 54 31 0c	 mov	 DWORD PTR [ecx+esi+12], edx

; 82   : 			Item[Count[1]].Skill = n[3];

  0013e	8b 86 b8 2c 00
	00		 mov	 eax, DWORD PTR [esi+11448]
  00144	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _n$203995[ebp+12]
  0014a	c1 e0 05	 shl	 eax, 5
  0014d	89 4c 30 10	 mov	 DWORD PTR [eax+esi+16], ecx

; 83   : 			Item[Count[1]].Luck  = n[4];

  00151	8b 96 b8 2c 00
	00		 mov	 edx, DWORD PTR [esi+11448]
  00157	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _n$203995[ebp+16]
  0015d	c1 e2 05	 shl	 edx, 5
  00160	89 44 32 14	 mov	 DWORD PTR [edx+esi+20], eax

; 84   : 			Item[Count[1]].Opt   = n[5];

  00164	8b 8e b8 2c 00
	00		 mov	 ecx, DWORD PTR [esi+11448]
  0016a	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _n$203995[ebp+20]
  00170	c1 e1 05	 shl	 ecx, 5
  00173	89 54 31 18	 mov	 DWORD PTR [ecx+esi+24], edx

; 85   : 			Item[Count[1]].Exl	 = n[6];

  00177	8b 86 b8 2c 00
	00		 mov	 eax, DWORD PTR [esi+11448]
  0017d	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _n$203995[ebp+24]
  00183	c1 e0 05	 shl	 eax, 5
  00186	89 4c 30 1c	 mov	 DWORD PTR [eax+esi+28], ecx

; 86   : 			Item[Count[1]].Anc   = n[7];

  0018a	8b 96 b8 2c 00
	00		 mov	 edx, DWORD PTR [esi+11448]
  00190	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _n$203995[ebp+28]
  00196	03 d7		 add	 edx, edi
  00198	c1 e2 05	 shl	 edx, 5
  0019b	83 c4 28	 add	 esp, 40			; 00000028H
  0019e	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 87   : 			Count[1]++;

  001a1	01 be b8 2c 00
	00		 add	 DWORD PTR [esi+11448], edi
$LN3@LoadFile:

; 88   : 		}
; 89   : 
; 90   : 		if(Flag == 2)

  001a7	83 bd b4 fe ff
	ff 02		 cmp	 DWORD PTR _Flag$[ebp], 2
  001ae	75 4e		 jne	 SHORT $LN2@LoadFile

; 91   : 		{
; 92   : 			int n[3];
; 93   : 			sscanf(Buff, "%d %d", &n[0], &n[1]);

  001b0	8d 8d bc fe ff
	ff		 lea	 ecx, DWORD PTR _n$203998[ebp+4]
  001b6	51		 push	 ecx
  001b7	8d 95 b8 fe ff
	ff		 lea	 edx, DWORD PTR _n$203998[ebp]
  001bd	52		 push	 edx
  001be	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  001c4	68 00 00 00 00	 push	 OFFSET ??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 _sscanf

; 94   : 			Time[Count[2]].Hour  = n[0];

  001cf	8b 8e bc 2c 00
	00		 mov	 ecx, DWORD PTR [esi+11452]
  001d5	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR _n$203998[ebp]
  001db	89 94 ce 04 20
	00 00		 mov	 DWORD PTR [esi+ecx*8+8196], edx

; 95   : 			Time[Count[2]].Min   = n[1];

  001e2	8b 86 bc 2c 00
	00		 mov	 eax, DWORD PTR [esi+11452]
  001e8	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR _n$203998[ebp+4]
  001ee	83 c4 10	 add	 esp, 16			; 00000010H
  001f1	89 8c c6 08 20
	00 00		 mov	 DWORD PTR [esi+eax*8+8200], ecx

; 96   : 			Count[2]++;

  001f8	01 be bc 2c 00
	00		 add	 DWORD PTR [esi+11452], edi
$LN2@LoadFile:

; 97   : 		}
; 98   : 
; 99   : 		if(Flag == 3)

  001fe	83 bd b4 fe ff
	ff 03		 cmp	 DWORD PTR _Flag$[ebp], 3
  00205	75 71		 jne	 SHORT $LN1@LoadFile

; 100  : 		{
; 101  : 			int n[4];
; 102  : 			sscanf(Buff, "%d %d %d", &n[0], &n[1], &n[2]);

  00207	8d 95 cc fe ff
	ff		 lea	 edx, DWORD PTR _n$204001[ebp+8]
  0020d	52		 push	 edx
  0020e	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _n$204001[ebp+4]
  00214	50		 push	 eax
  00215	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _n$204001[ebp]
  0021b	51		 push	 ecx
  0021c	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_08OOHKHLPO@?$CFd?5?$CFd?5?$CFd?$AA@
  00227	52		 push	 edx
  00228	e8 00 00 00 00	 call	 _sscanf

; 103  : 			Cord[Count[3]].Map  = n[0];

  0022d	8b 86 c0 2c 00
	00		 mov	 eax, DWORD PTR [esi+11456]
  00233	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _n$204001[ebp]
  00239	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0023c	89 8c 86 04 28
	00 00		 mov	 DWORD PTR [esi+eax*4+10244], ecx

; 104  : 			Cord[Count[3]].X	= n[1];

  00243	8b 86 c0 2c 00
	00		 mov	 eax, DWORD PTR [esi+11456]
  00249	8d 94 40 02 0a
	00 00		 lea	 edx, DWORD PTR [eax+eax*2+2562]
  00250	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _n$204001[ebp+4]
  00256	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax

; 105  : 			Cord[Count[3]].Y	= n[2];

  00259	8b 86 c0 2c 00
	00		 mov	 eax, DWORD PTR [esi+11456]
  0025f	8b 95 cc fe ff
	ff		 mov	 edx, DWORD PTR _n$204001[ebp+8]
  00265	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00268	83 c4 14	 add	 esp, 20			; 00000014H
  0026b	89 94 8e 0c 28
	00 00		 mov	 DWORD PTR [esi+ecx*4+10252], edx

; 106  : 			Count[3]++;

  00272	01 be c0 2c 00
	00		 add	 DWORD PTR [esi+11456], edi
$LN1@LoadFile:

; 59   : 		return;
; 60   : 	}
; 61   : 
; 62   : 	char Buff[256];
; 63   : 	int Flag = 0;
; 64   : 
; 65   : 	Count[1] = 0;
; 66   : 	Count[2] = 0;
; 67   : 	Count[3] = 0;
; 68   : 
; 69   : 	while(!feof(file)) // Проверяем есть ли строка ?документ?

  00278	53		 push	 ebx
  00279	e8 00 00 00 00	 call	 _feof
  0027e	83 c4 04	 add	 esp, 4
  00281	85 c0		 test	 eax, eax
  00283	0f 84 f7 fd ff
	ff		 je	 $LL6@LoadFile
  00289	5f		 pop	 edi
$LN5@LoadFile:

; 107  : 		}
; 108  : 	}
; 109  : 	fclose(file);

  0028a	53		 push	 ebx
  0028b	e8 00 00 00 00	 call	 _fclose

; 110  : }

  00290	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00293	83 c4 04	 add	 esp, 4
  00296	5e		 pop	 esi
  00297	33 cd		 xor	 ecx, ebp
  00299	5b		 pop	 ebx
  0029a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0029f	8b e5		 mov	 esp, ebp
  002a1	5d		 pop	 ebp
  002a2	c3		 ret	 0
$LN12@LoadFile:
?LoadFile@cDropEvent@@QAEXXZ ENDP			; cDropEvent::LoadFile
_TEXT	ENDS
PUBLIC	?StartEvent@cDropEvent@@QAEXXZ			; cDropEvent::StartEvent
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?GenExcOpt@@YAHH@Z:PROC				; GenExcOpt
EXTRN	_rand:PROC
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
; Function compile flags: /Ogtp
;	COMDAT ?StartEvent@cDropEvent@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$204006 = -8						; size = 4
_NewAnc$204012 = -4					; size = 4
?StartEvent@cDropEvent@@QAEXXZ PROC			; cDropEvent::StartEvent, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 113  : 	MessaageAllGlobal(g_ZtText.GetText(254));

  00009	68 fe 00 00 00	 push	 254			; 000000feH
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00013	89 75 f4	 mov	 DWORD PTR _this$[ebp], esi
  00016	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00021	83 c4 04	 add	 esp, 4

; 114  : 	for(int i=0;i<Count[3];i++)

  00024	83 be c0 2c 00
	00 00		 cmp	 DWORD PTR [esi+11456], 0
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$204006[ebp], 0
  00032	0f 8e 9e 00 00
	00		 jle	 $LN4@StartEvent

; 113  : 	MessaageAllGlobal(g_ZtText.GetText(254));

  00038	53		 push	 ebx
  00039	57		 push	 edi
  0003a	8d 9e 08 28 00
	00		 lea	 ebx, DWORD PTR [esi+10248]
  00040	eb 02		 jmp	 SHORT $LN6@StartEvent
$LL11@StartEvent:
  00042	8b f1		 mov	 esi, ecx
$LN6@StartEvent:

; 115  : 	{
; 116  : 		int Ran = rand()%Count[1];

  00044	e8 00 00 00 00	 call	 _rand
  00049	99		 cdq
  0004a	f7 be b8 2c 00
	00		 idiv	 DWORD PTR [esi+11448]

; 117  : 
; 118  : 		int NewExl = 0;

  00050	33 c0		 xor	 eax, eax

; 119  : 		int NewAnc = 0;

  00052	89 45 fc	 mov	 DWORD PTR _NewAnc$204012[ebp], eax

; 120  : 
; 121  : 		int DropItem = ITEMGET(Item[Ran].Type,Item[Ran].Index);

  00055	c1 e2 05	 shl	 edx, 5
  00058	8b 7c 16 08	 mov	 edi, DWORD PTR [esi+edx+8]
  0005c	03 f2		 add	 esi, edx
  0005e	c1 e7 09	 shl	 edi, 9
  00061	03 7e 04	 add	 edi, DWORD PTR [esi+4]

; 122  : 
; 123  : 		if(Item[Ran].Exl > 0)

  00064	39 46 1c	 cmp	 DWORD PTR [esi+28], eax
  00067	7e 0c		 jle	 SHORT $LN3@StartEvent

; 124  : 			NewExl = GenExcOpt(Item[Ran].Exl);

  00069	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?GenExcOpt@@YAHH@Z	; GenExcOpt
  00072	83 c4 04	 add	 esp, 4
$LN3@StartEvent:

; 125  : 
; 126  : 		if(Item[Ran].Anc == 5 || Item[Ran].Anc == 10)

  00075	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00078	83 f9 05	 cmp	 ecx, 5
  0007b	74 05		 je	 SHORT $LN1@StartEvent
  0007d	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00080	75 03		 jne	 SHORT $LN2@StartEvent
$LN1@StartEvent:

; 127  : 			NewAnc = Item[Ran].Anc;

  00082	89 4d fc	 mov	 DWORD PTR _NewAnc$204012[ebp], ecx
$LN2@StartEvent:

; 128  : 
; 129  : 		int CordMap = Cord[i].Map;
; 130  : 		int CordX = Cord[i].X;
; 131  : 		int CordY = Cord[i].Y;
; 132  : 
; 133  : 		ItemSerialCreateSend(NULL,CordMap,CordX,CordY,DropItem,Item[Ran].Level,0,Item[Ran].Skill,Item[Ran].Luck,Item[Ran].Opt,NULL,NewExl,NewAnc);

  00085	8b 4d fc	 mov	 ecx, DWORD PTR _NewAnc$204012[ebp]
  00088	0f b6 56 18	 movzx	 edx, BYTE PTR [esi+24]
  0008c	51		 push	 ecx
  0008d	0f b6 4e 10	 movzx	 ecx, BYTE PTR [esi+16]
  00091	50		 push	 eax
  00092	0f b6 46 14	 movzx	 eax, BYTE PTR [esi+20]
  00096	6a 00		 push	 0
  00098	52		 push	 edx
  00099	0f b6 56 0c	 movzx	 edx, BYTE PTR [esi+12]
  0009d	50		 push	 eax
  0009e	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
  000a2	51		 push	 ecx
  000a3	0f b6 0b	 movzx	 ecx, BYTE PTR [ebx]
  000a6	6a 00		 push	 0
  000a8	52		 push	 edx
  000a9	0f b6 53 fc	 movzx	 edx, BYTE PTR [ebx-4]
  000ad	57		 push	 edi
  000ae	50		 push	 eax
  000af	51		 push	 ecx
  000b0	52		 push	 edx
  000b1	6a 00		 push	 0
  000b3	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _i$204006[ebp]
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	40		 inc	 eax
  000bf	83 c4 34	 add	 esp, 52			; 00000034H
  000c2	83 c3 0c	 add	 ebx, 12			; 0000000cH
  000c5	89 45 f8	 mov	 DWORD PTR _i$204006[ebp], eax
  000c8	3b 81 c0 2c 00
	00		 cmp	 eax, DWORD PTR [ecx+11456]
  000ce	0f 8c 6e ff ff
	ff		 jl	 $LL11@StartEvent
  000d4	5f		 pop	 edi
  000d5	5b		 pop	 ebx
$LN4@StartEvent:
  000d6	5e		 pop	 esi

; 134  : 	}
; 135  : 	//MessaageAllGlobal("[Drop Event] End");
; 136  : }

  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?StartEvent@cDropEvent@@QAEXXZ ENDP			; cDropEvent::StartEvent
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?TickTime@cDropEvent@@QAEXXZ			; cDropEvent::TickTime
EXTRN	?ZtConfig@@3VcZtConfigs@@A:BYTE			; ZtConfig
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	?GetSecond@CTimerZt@@QAEHXZ:PROC		; CTimerZt::GetSecond
EXTRN	?g_TimerZt@@3VCTimerZt@@A:DWORD			; g_TimerZt
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?TickTime@cDropEvent@@QAEXXZ
_TEXT	SEGMENT
_t$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?TickTime@cDropEvent@@QAEXXZ PROC			; cDropEvent::TickTime, COMDAT
; _this$ = ecx

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 139  : 	if(!Enable)

  00013	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00016	0f 84 13 05 00
	00		 je	 $LN50@TickTime

; 140  : 		return;
; 141  : 
; 142  : 	SYSTEMTIME t;
; 143  : 	GetLocalTime(&t);

  0001c	8d 45 ec	 lea	 eax, DWORD PTR _t$[ebp]
  0001f	50		 push	 eax
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 144  : 
; 145  : #if(NEWTIMEREX)
; 146  : 	if(g_TimerZt.GetSecond() == 00)

  00026	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerZt@@3VCTimerZt@@A ; g_TimerZt
  0002b	e8 00 00 00 00	 call	 ?GetSecond@CTimerZt@@QAEHXZ ; CTimerZt::GetSecond
  00030	85 c0		 test	 eax, eax
  00032	0f 85 f7 04 00
	00		 jne	 $LN50@TickTime

; 147  : #else
; 148  : 	if(t.wSecond == 00)
; 149  : #endif
; 150  : 	{
; 151  : 		for(int i = 0; i < Count[2]; i++)

  00038	57		 push	 edi
  00039	33 ff		 xor	 edi, edi
  0003b	39 be bc 2c 00
	00		 cmp	 DWORD PTR [esi+11452], edi
  00041	0f 8e e7 04 00
	00		 jle	 $LN91@TickTime
  00047	53		 push	 ebx
  00048	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL70@TickTime:

; 152  : 		{
; 153  : #ifdef _MESSAGE_CONFIG_
; 154  : 			if(g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  00050	6a 20		 push	 32			; 00000020H
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00057	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0005c	84 c0		 test	 al, al
  0005e	0f 85 3a 04 00
	00		 jne	 $LN48@TickTime
  00064	6a 21		 push	 33			; 00000021H
  00066	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0006b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00070	84 c0		 test	 al, al
  00072	0f 85 26 04 00
	00		 jne	 $LN48@TickTime
  00078	6a 22		 push	 34			; 00000022H
  0007a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0007f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00084	84 c0		 test	 al, al
  00086	0f 85 12 04 00
	00		 jne	 $LN48@TickTime

; 165  : 				}
; 166  : 				
; 167  : 			}
; 168  : 			else
; 169  : 			{
; 170  : 				if(Time[i].Min > 5)

  0008c	8b 84 fe 08 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8200]
  00093	83 f8 05	 cmp	 eax, 5
  00096	7e 3f		 jle	 SHORT $LN41@TickTime

; 171  : 				{
; 172  : 					for(int j=1; j <= 5; j++)

  00098	bb 01 00 00 00	 mov	 ebx, 1
  0009d	8d 49 00	 npad	 3
$LL40@TickTime:

; 173  : 					{
; 174  : 			
; 175  : 						if(Time[i].Hour == t.wHour && (Time[i].Min-j) == t.wMinute)

  000a0	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  000a4	39 8c fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], ecx
  000ab	75 1f		 jne	 SHORT $LN39@TickTime
  000ad	8b 94 fe 08 20
	00 00		 mov	 edx, DWORD PTR [esi+edi*8+8200]
  000b4	0f b7 45 f6	 movzx	 eax, WORD PTR _t$[ebp+10]
  000b8	2b d3		 sub	 edx, ebx
  000ba	3b d0		 cmp	 edx, eax
  000bc	75 0e		 jne	 SHORT $LN39@TickTime

; 176  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, j);

  000be	53		 push	 ebx
  000bf	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  000c4	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  000c9	83 c4 08	 add	 esp, 8
$LN39@TickTime:

; 171  : 				{
; 172  : 					for(int j=1; j <= 5; j++)

  000cc	43		 inc	 ebx
  000cd	83 fb 05	 cmp	 ebx, 5
  000d0	7e ce		 jle	 SHORT $LL40@TickTime

; 177  : 					}
; 178  : 				}
; 179  : 				else if(Time[i].Min == 4)

  000d2	e9 17 04 00 00	 jmp	 $LN67@TickTime
$LN41@TickTime:
  000d7	83 f8 04	 cmp	 eax, 4
  000da	0f 85 b6 00 00
	00		 jne	 $LN35@TickTime

; 180  : 				{
; 181  : 						if(Time[i].Hour-1 == t.wHour && 59 == t.wMinute)

  000e0	8b 8c fe 04 20
	00 00		 mov	 ecx, DWORD PTR [esi+edi*8+8196]
  000e7	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  000eb	49		 dec	 ecx
  000ec	3b ca		 cmp	 ecx, edx
  000ee	75 1a		 jne	 SHORT $LN62@TickTime
  000f0	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000f5	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  000f9	75 0f		 jne	 SHORT $LN62@TickTime

; 182  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 5);

  000fb	6a 05		 push	 5
  000fd	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00102	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00107	83 c4 08	 add	 esp, 8
$LN62@TickTime:

; 183  : 						if(Time[i].Hour == t.wHour && 0 == t.wMinute)

  0010a	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  0010e	39 8c fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], ecx
  00115	75 17		 jne	 SHORT $LN78@TickTime
  00117	33 d2		 xor	 edx, edx
  00119	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  0011d	75 0f		 jne	 SHORT $LN78@TickTime

; 184  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 4);

  0011f	6a 04		 push	 4
  00121	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00126	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0012b	83 c4 08	 add	 esp, 8
$LN78@TickTime:

; 185  : 						if(Time[i].Hour == t.wHour && 1 == t.wMinute)

  0012e	0f b7 45 f4	 movzx	 eax, WORD PTR _t$[ebp+8]
  00132	39 84 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], eax
  00139	75 1a		 jne	 SHORT $LN72@TickTime
  0013b	b9 01 00 00 00	 mov	 ecx, 1
  00140	66 3b 4d f6	 cmp	 cx, WORD PTR _t$[ebp+10]
  00144	75 0f		 jne	 SHORT $LN72@TickTime

; 186  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 3);

  00146	6a 03		 push	 3
  00148	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  0014d	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00152	83 c4 08	 add	 esp, 8
$LN72@TickTime:

; 187  : 						if(Time[i].Hour == t.wHour && 2 == t.wMinute)

  00155	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  00159	39 94 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], edx
  00160	75 19		 jne	 SHORT $LN87@TickTime
  00162	b8 02 00 00 00	 mov	 eax, 2
  00167	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  0016b	75 0e		 jne	 SHORT $LN87@TickTime

; 188  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 2);

  0016d	50		 push	 eax
  0016e	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00173	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00178	83 c4 08	 add	 esp, 8
$LN87@TickTime:

; 189  : 						if(Time[i].Hour == t.wHour && 3 == t.wMinute)

  0017b	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  0017f	39 8c fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], ecx
  00186	0f 85 62 03 00
	00		 jne	 $LN67@TickTime
  0018c	ba 03 00 00 00	 mov	 edx, 3

; 190  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);
; 191  : 
; 192  : 				}

  00191	e9 43 03 00 00	 jmp	 $LN94@TickTime
$LN35@TickTime:

; 193  : 				else if(Time[i].Min == 3)

  00196	83 f8 03	 cmp	 eax, 3
  00199	0f 85 ba 00 00
	00		 jne	 $LN28@TickTime

; 194  : 				{
; 195  : 						if(Time[i].Hour-1 == t.wHour && 58 == t.wMinute)

  0019f	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  001a6	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  001aa	48		 dec	 eax
  001ab	3b c1		 cmp	 eax, ecx
  001ad	75 1a		 jne	 SHORT $LN63@TickTime
  001af	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  001b4	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  001b8	75 0f		 jne	 SHORT $LN63@TickTime

; 196  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 5);

  001ba	6a 05		 push	 5
  001bc	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  001c1	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  001c6	83 c4 08	 add	 esp, 8
$LN63@TickTime:

; 197  : 						if(Time[i].Hour-1 == t.wHour && 59 == t.wMinute)

  001c9	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  001d0	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  001d4	48		 dec	 eax
  001d5	3b c1		 cmp	 eax, ecx
  001d7	75 1a		 jne	 SHORT $LN79@TickTime
  001d9	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  001de	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  001e2	75 0f		 jne	 SHORT $LN79@TickTime

; 198  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 4);

  001e4	6a 04		 push	 4
  001e6	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  001eb	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  001f0	83 c4 08	 add	 esp, 8
$LN79@TickTime:

; 199  : 						if(Time[i].Hour == t.wHour && 0 == t.wMinute)

  001f3	0f b7 45 f4	 movzx	 eax, WORD PTR _t$[ebp+8]
  001f7	39 84 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], eax
  001fe	75 17		 jne	 SHORT $LN83@TickTime
  00200	33 c9		 xor	 ecx, ecx
  00202	66 3b 4d f6	 cmp	 cx, WORD PTR _t$[ebp+10]
  00206	75 0f		 jne	 SHORT $LN83@TickTime

; 200  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 3);

  00208	6a 03		 push	 3
  0020a	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  0020f	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00214	83 c4 08	 add	 esp, 8
$LN83@TickTime:

; 201  : 						if(Time[i].Hour == t.wHour && 1 == t.wMinute)

  00217	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  0021b	39 94 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], edx
  00222	75 1a		 jne	 SHORT $LN74@TickTime
  00224	b8 01 00 00 00	 mov	 eax, 1
  00229	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  0022d	75 0f		 jne	 SHORT $LN74@TickTime

; 202  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 2);

  0022f	6a 02		 push	 2
  00231	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00236	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0023b	83 c4 08	 add	 esp, 8
$LN74@TickTime:

; 203  : 						if(Time[i].Hour == t.wHour && 2 == t.wMinute)

  0023e	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  00242	39 8c fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], ecx
  00249	0f 85 9f 02 00
	00		 jne	 $LN67@TickTime
  0024f	ba 02 00 00 00	 mov	 edx, 2

; 204  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);
; 205  : 				}

  00254	e9 80 02 00 00	 jmp	 $LN94@TickTime
$LN28@TickTime:

; 206  : 				else if(Time[i].Min == 2)

  00259	83 f8 02	 cmp	 eax, 2
  0025c	0f 85 c1 00 00
	00		 jne	 $LN21@TickTime

; 207  : 				{
; 208  : 						if(Time[i].Hour-1 == t.wHour && 57 == t.wMinute)

  00262	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  00269	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  0026d	48		 dec	 eax
  0026e	3b c1		 cmp	 eax, ecx
  00270	75 1a		 jne	 SHORT $LN64@TickTime
  00272	ba 39 00 00 00	 mov	 edx, 57			; 00000039H
  00277	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  0027b	75 0f		 jne	 SHORT $LN64@TickTime

; 209  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 5);

  0027d	6a 05		 push	 5
  0027f	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00284	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00289	83 c4 08	 add	 esp, 8
$LN64@TickTime:

; 210  : 						if(Time[i].Hour-1 == t.wHour && 58 == t.wMinute)

  0028c	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  00293	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  00297	48		 dec	 eax
  00298	3b c1		 cmp	 eax, ecx
  0029a	75 1a		 jne	 SHORT $LN80@TickTime
  0029c	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  002a1	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  002a5	75 0f		 jne	 SHORT $LN80@TickTime

; 211  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 4);

  002a7	6a 04		 push	 4
  002a9	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  002ae	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  002b3	83 c4 08	 add	 esp, 8
$LN80@TickTime:

; 212  : 						if(Time[i].Hour-1 == t.wHour && 59 == t.wMinute)

  002b6	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  002bd	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  002c1	48		 dec	 eax
  002c2	3b c1		 cmp	 eax, ecx
  002c4	75 1a		 jne	 SHORT $LN84@TickTime
  002c6	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  002cb	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  002cf	75 0f		 jne	 SHORT $LN84@TickTime

; 213  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 3);

  002d1	6a 03		 push	 3
  002d3	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  002d8	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  002dd	83 c4 08	 add	 esp, 8
$LN84@TickTime:

; 214  : 						if(Time[i].Hour == t.wHour && 0 == t.wMinute)

  002e0	0f b7 45 f4	 movzx	 eax, WORD PTR _t$[ebp+8]
  002e4	39 84 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], eax
  002eb	75 17		 jne	 SHORT $LN88@TickTime
  002ed	33 c9		 xor	 ecx, ecx
  002ef	66 3b 4d f6	 cmp	 cx, WORD PTR _t$[ebp+10]
  002f3	75 0f		 jne	 SHORT $LN88@TickTime

; 215  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 2);

  002f5	6a 02		 push	 2
  002f7	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  002fc	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00301	83 c4 08	 add	 esp, 8
$LN88@TickTime:

; 216  : 						if(Time[i].Hour == t.wHour && 1 == t.wMinute)

  00304	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  00308	39 94 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], edx
  0030f	0f 85 d9 01 00
	00		 jne	 $LN67@TickTime
  00315	b8 01 00 00 00	 mov	 eax, 1
  0031a	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]

; 217  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);
; 218  : 				}

  0031e	e9 ba 01 00 00	 jmp	 $LN93@TickTime
$LN21@TickTime:

; 219  : 				else if(Time[i].Min == 1)

  00323	83 f8 01	 cmp	 eax, 1
  00326	0f 85 c0 00 00
	00		 jne	 $LN14@TickTime

; 220  : 				{
; 221  : 						if(Time[i].Hour-1 == t.wHour && 56 == t.wMinute)

  0032c	8b 8c fe 04 20
	00 00		 mov	 ecx, DWORD PTR [esi+edi*8+8196]
  00333	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  00337	49		 dec	 ecx
  00338	3b ca		 cmp	 ecx, edx
  0033a	75 1a		 jne	 SHORT $LN65@TickTime
  0033c	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00341	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  00345	75 0f		 jne	 SHORT $LN65@TickTime

; 222  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 5);

  00347	6a 05		 push	 5
  00349	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  0034e	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00353	83 c4 08	 add	 esp, 8
$LN65@TickTime:

; 223  : 						if(Time[i].Hour-1 == t.wHour && 57 == t.wMinute)

  00356	8b 8c fe 04 20
	00 00		 mov	 ecx, DWORD PTR [esi+edi*8+8196]
  0035d	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  00361	49		 dec	 ecx
  00362	3b ca		 cmp	 ecx, edx
  00364	75 1a		 jne	 SHORT $LN81@TickTime
  00366	b8 39 00 00 00	 mov	 eax, 57			; 00000039H
  0036b	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  0036f	75 0f		 jne	 SHORT $LN81@TickTime

; 224  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 4);

  00371	6a 04		 push	 4
  00373	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00378	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0037d	83 c4 08	 add	 esp, 8
$LN81@TickTime:

; 225  : 						if(Time[i].Hour-1 == t.wHour && 58 == t.wMinute)

  00380	8b 8c fe 04 20
	00 00		 mov	 ecx, DWORD PTR [esi+edi*8+8196]
  00387	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  0038b	49		 dec	 ecx
  0038c	3b ca		 cmp	 ecx, edx
  0038e	75 1a		 jne	 SHORT $LN85@TickTime
  00390	b8 3a 00 00 00	 mov	 eax, 58			; 0000003aH
  00395	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  00399	75 0f		 jne	 SHORT $LN85@TickTime

; 226  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 3);

  0039b	6a 03		 push	 3
  0039d	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  003a2	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  003a7	83 c4 08	 add	 esp, 8
$LN85@TickTime:

; 227  : 						if(Time[i].Hour-1 == t.wHour && 59 == t.wMinute)

  003aa	8b 8c fe 04 20
	00 00		 mov	 ecx, DWORD PTR [esi+edi*8+8196]
  003b1	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  003b5	49		 dec	 ecx
  003b6	3b ca		 cmp	 ecx, edx
  003b8	75 1a		 jne	 SHORT $LN89@TickTime
  003ba	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  003bf	66 3b 45 f6	 cmp	 ax, WORD PTR _t$[ebp+10]
  003c3	75 0f		 jne	 SHORT $LN89@TickTime

; 228  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 2);

  003c5	6a 02		 push	 2
  003c7	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  003cc	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  003d1	83 c4 08	 add	 esp, 8
$LN89@TickTime:

; 229  : 						if(Time[i].Hour == t.wHour && 0 == t.wMinute)

  003d4	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  003d8	39 8c fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], ecx
  003df	0f 85 09 01 00
	00		 jne	 $LN67@TickTime
  003e5	33 d2		 xor	 edx, edx

; 230  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);
; 231  : 				}

  003e7	e9 ed 00 00 00	 jmp	 $LN94@TickTime
$LN14@TickTime:

; 232  : 				else if(Time[i].Min == 0)

  003ec	85 c0		 test	 eax, eax
  003ee	0f 85 fa 00 00
	00		 jne	 $LN67@TickTime

; 233  : 				{
; 234  : 						if(Time[i].Hour-1 == t.wHour && 55 == t.wMinute)

  003f4	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  003fb	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  003ff	48		 dec	 eax
  00400	3b c1		 cmp	 eax, ecx
  00402	75 1a		 jne	 SHORT $LN66@TickTime
  00404	ba 37 00 00 00	 mov	 edx, 55			; 00000037H
  00409	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  0040d	75 0f		 jne	 SHORT $LN66@TickTime

; 235  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 5);

  0040f	6a 05		 push	 5
  00411	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00416	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0041b	83 c4 08	 add	 esp, 8
$LN66@TickTime:

; 236  : 						if(Time[i].Hour-1 == t.wHour && 56 == t.wMinute)

  0041e	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  00425	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  00429	48		 dec	 eax
  0042a	3b c1		 cmp	 eax, ecx
  0042c	75 1a		 jne	 SHORT $LN82@TickTime
  0042e	ba 38 00 00 00	 mov	 edx, 56			; 00000038H
  00433	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  00437	75 0f		 jne	 SHORT $LN82@TickTime

; 237  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 4);

  00439	6a 04		 push	 4
  0043b	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00440	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00445	83 c4 08	 add	 esp, 8
$LN82@TickTime:

; 238  : 						if(Time[i].Hour-1 == t.wHour && 57 == t.wMinute)

  00448	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  0044f	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  00453	48		 dec	 eax
  00454	3b c1		 cmp	 eax, ecx
  00456	75 1a		 jne	 SHORT $LN86@TickTime
  00458	ba 39 00 00 00	 mov	 edx, 57			; 00000039H
  0045d	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  00461	75 0f		 jne	 SHORT $LN86@TickTime

; 239  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 3);

  00463	6a 03		 push	 3
  00465	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  0046a	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0046f	83 c4 08	 add	 esp, 8
$LN86@TickTime:

; 240  : 						if(Time[i].Hour-1 == t.wHour && 58 == t.wMinute)

  00472	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  00479	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  0047d	48		 dec	 eax
  0047e	3b c1		 cmp	 eax, ecx
  00480	75 42		 jne	 SHORT $LN90@TickTime
  00482	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  00487	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
  0048b	75 37		 jne	 SHORT $LN90@TickTime

; 241  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 2);

  0048d	6a 02		 push	 2
  0048f	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  00494	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00499	83 c4 08	 add	 esp, 8

; 242  : 						if(Time[i].Hour-1 == t.wHour && 59 == t.wMinute)
; 243  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);

  0049c	eb 26		 jmp	 SHORT $LN90@TickTime
$LN48@TickTime:

; 155  : 			{
; 156  : 				if(Time[i].Min >= 1)

  0049e	8b 84 fe 08 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8200]
  004a5	83 f8 01	 cmp	 eax, 1
  004a8	7c 16		 jl	 SHORT $LN47@TickTime

; 157  : 				{			
; 158  : 						if(Time[i].Hour == t.wHour && ((Time[i].Min-1) == t.wMinute))

  004aa	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  004ae	39 8c fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], ecx
  004b5	75 37		 jne	 SHORT $LN67@TickTime
  004b7	0f b7 55 f6	 movzx	 edx, WORD PTR _t$[ebp+10]
  004bb	48		 dec	 eax
  004bc	3b c2		 cmp	 eax, edx

; 159  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);
; 160  : 				}

  004be	eb 1d		 jmp	 SHORT $LN93@TickTime
$LN47@TickTime:

; 161  : 				else if(Time[i].Min == 0)

  004c0	85 c0		 test	 eax, eax
  004c2	75 2a		 jne	 SHORT $LN67@TickTime
$LN90@TickTime:

; 162  : 				{
; 163  : 					if(Time[i].Hour-1 == t.wHour && (59 == t.wMinute))

  004c4	8b 84 fe 04 20
	00 00		 mov	 eax, DWORD PTR [esi+edi*8+8196]
  004cb	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  004cf	48		 dec	 eax
  004d0	3b c1		 cmp	 eax, ecx
  004d2	75 1a		 jne	 SHORT $LN67@TickTime
  004d4	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
$LN94@TickTime:
  004d9	66 3b 55 f6	 cmp	 dx, WORD PTR _t$[ebp+10]
$LN93@TickTime:
  004dd	75 0f		 jne	 SHORT $LN67@TickTime

; 164  : 							MessaageAllGlobal(ZtConfig.MessageConfig.DropEvent, 1);

  004df	6a 01		 push	 1
  004e1	68 cc 0a 00 00	 push	 OFFSET ?ZtConfig@@3VcZtConfigs@@A+2764
  004e6	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  004eb	83 c4 08	 add	 esp, 8
$LN67@TickTime:

; 244  : 				}
; 245  : 			}
; 246  : #endif
; 247  : 			if(Time[i].Hour == t.wHour && Time[i].Min == t.wMinute)

  004ee	0f b7 45 f4	 movzx	 eax, WORD PTR _t$[ebp+8]
  004f2	39 84 fe 04 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8196], eax
  004f9	75 0d		 jne	 SHORT $LN51@TickTime
  004fb	0f b7 4d f6	 movzx	 ecx, WORD PTR _t$[ebp+10]
  004ff	39 8c fe 08 20
	00 00		 cmp	 DWORD PTR [esi+edi*8+8200], ecx
  00506	74 1e		 je	 SHORT $LN59@TickTime
$LN51@TickTime:

; 147  : #else
; 148  : 	if(t.wSecond == 00)
; 149  : #endif
; 150  : 	{
; 151  : 		for(int i = 0; i < Count[2]; i++)

  00508	47		 inc	 edi
  00509	3b be bc 2c 00
	00		 cmp	 edi, DWORD PTR [esi+11452]
  0050f	0f 8c 3b fb ff
	ff		 jl	 $LL70@TickTime
  00515	5b		 pop	 ebx
  00516	5f		 pop	 edi
  00517	5e		 pop	 esi

; 251  : 				return;
; 252  : 			}
; 253  : 		}
; 254  : 	}
; 255  : }

  00518	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0051b	33 cd		 xor	 ecx, ebp
  0051d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00522	8b e5		 mov	 esp, ebp
  00524	5d		 pop	 ebp
  00525	c3		 ret	 0
$LN59@TickTime:

; 248  : 			{
; 249  : 
; 250  : 				this->StartEvent();

  00526	8b ce		 mov	 ecx, esi
  00528	e8 00 00 00 00	 call	 ?StartEvent@cDropEvent@@QAEXXZ ; cDropEvent::StartEvent
  0052d	5b		 pop	 ebx
$LN91@TickTime:
  0052e	5f		 pop	 edi
$LN50@TickTime:

; 251  : 				return;
; 252  : 			}
; 253  : 		}
; 254  : 	}
; 255  : }

  0052f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00532	33 cd		 xor	 ecx, ebp
  00534	5e		 pop	 esi
  00535	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0053a	8b e5		 mov	 esp, ebp
  0053c	5d		 pop	 ebp
  0053d	c3		 ret	 0
?TickTime@cDropEvent@@QAEXXZ ENDP			; cDropEvent::TickTime
_TEXT	ENDS
END
