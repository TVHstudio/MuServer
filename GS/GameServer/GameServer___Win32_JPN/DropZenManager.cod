; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\DropZenManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?DropZenManager@@3VcDropZenManager@@A		; DropZenManager
_BSS	SEGMENT
?DropZenManager@@3VcDropZenManager@@A DB 02a0H DUP (?)	; DropZenManager
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CC@CDLAMDMD@?4?4?2Data?2ZtData?2DropZenManager?4in@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?LoadConfig@cDropZenManager@@QAEXXZ		; cDropZenManager::LoadConfig
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Zt_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Zt_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@
; File e:\work\tranet_version\gs\gameserver\dropzenmanager.cpp
CONST	SEGMENT
??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@ DB '%d %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
CONST	SEGMENT
??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@ DB 'LOAD ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CDLAMDMD@?4?4?2Data?2ZtData?2DropZenManager?4in@
CONST	SEGMENT
??_C@_0CC@CDLAMDMD@?4?4?2Data?2ZtData?2DropZenManager?4in@ DB '..\Data\Zt'
	DB	'Data\DropZenManager.ini', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadConfig@cDropZenManager@@QAEXXZ
_TEXT	SEGMENT
_n$202126 = -272					; size = 8
_Flag$ = -264						; size = 4
_Buff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?LoadConfig@cDropZenManager@@QAEXXZ PROC		; cDropZenManager::LoadConfig, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 12   : 	this->Enable = GetPrivateProfileInt("Common","Enable",0,DROPZEN_DIR);

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@CDLAMDMD@?4?4?2Data?2ZtData?2DropZenManager?4in@
  0001b	33 db		 xor	 ebx, ebx
  0001d	53		 push	 ebx
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00028	8b f1		 mov	 esi, ecx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00030	89 06		 mov	 DWORD PTR [esi], eax

; 13   : 
; 14   : 	for(int i(0);i<MAX_NUMBER_MAP;i++)
; 15   : 	{
; 16   : 		this->Number[i].Map = 0;

  00032	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00035	b9 53 00 00 00	 mov	 ecx, 83			; 00000053H
  0003a	8d 9b 00 00 00
	00		 npad	 6
$LL9@LoadConfig:
  00040	89 58 fc	 mov	 DWORD PTR [eax-4], ebx

; 17   : 		this->Number[i].Zen = 0;

  00043	89 18		 mov	 DWORD PTR [eax], ebx
  00045	83 c0 08	 add	 eax, 8
  00048	49		 dec	 ecx
  00049	75 f5		 jne	 SHORT $LL9@LoadConfig

; 18   : 	}
; 19   : 	FILE * file = fopen(DROPZEN_DIR,"r");

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@CDLAMDMD@?4?4?2Data?2ZtData?2DropZenManager?4in@
  00055	e8 00 00 00 00	 call	 _fopen
  0005a	8b f8		 mov	 edi, eax
  0005c	83 c4 08	 add	 esp, 8

; 20   : 	if(file == NULL)

  0005f	3b fb		 cmp	 edi, ebx
  00061	75 25		 jne	 SHORT $LN6@LoadConfig

; 21   : 	{
; 22   : 		MessageBoxA(0,DROPZEN_DIR,"LOAD ERROR",0);

  00063	53		 push	 ebx
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@CDLAMDMD@?4?4?2Data?2ZtData?2DropZenManager?4in@
  0006e	53		 push	 ebx
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  00075	5f		 pop	 edi

; 23   : 		this->Enable = false;

  00076	89 1e		 mov	 DWORD PTR [esi], ebx
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx

; 46   : }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN6@LoadConfig:

; 24   : 	}
; 25   : 	if(!this->Enable)return;

  00088	39 1e		 cmp	 DWORD PTR [esi], ebx
  0008a	0f 84 bb 00 00
	00		 je	 $LN10@LoadConfig

; 26   : 
; 27   : 	char Buff[256];
; 28   : 	int Flag = 0;
; 29   : 	this->mCount = 0;
; 30   : 
; 31   : 	while(!feof(file)) // Проверяем есть ли строка ?документ?

  00090	57		 push	 edi
  00091	89 9d f8 fe ff
	ff		 mov	 DWORD PTR _Flag$[ebp], ebx
  00097	89 9e 9c 02 00
	00		 mov	 DWORD PTR [esi+668], ebx
  0009d	e8 00 00 00 00	 call	 _feof
  000a2	83 c4 04	 add	 esp, 4
  000a5	85 c0		 test	 eax, eax
  000a7	0f 85 95 00 00
	00		 jne	 $LN3@LoadConfig
  000ad	8d 49 00	 npad	 3
$LL4@LoadConfig:

; 32   : 	{
; 33   : 		fgets(Buff,256,file);//Функция читает текущу?строку

  000b0	57		 push	 edi
  000b1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  000b7	68 00 01 00 00	 push	 256			; 00000100H
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 _fgets

; 34   : 		if(Zt_IsBadFileLine(Buff, Flag)) //Вспомогательная функция

  000c2	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _Flag$[ebp]
  000c8	51		 push	 ecx
  000c9	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?Zt_IsBadFileLine@@YA_NPADAAH@Z ; Zt_IsBadFileLine
  000d5	83 c4 14	 add	 esp, 20			; 00000014H
  000d8	84 c0		 test	 al, al
  000da	75 55		 jne	 SHORT $LN1@LoadConfig

; 35   : 			continue;
; 36   : 		if(Flag == 1)

  000dc	bb 01 00 00 00	 mov	 ebx, 1
  000e1	39 9d f8 fe ff
	ff		 cmp	 DWORD PTR _Flag$[ebp], ebx
  000e7	75 48		 jne	 SHORT $LN1@LoadConfig

; 37   : 		{
; 38   : 			int n[2];
; 39   : 			sscanf(Buff, "%d %d", &n[0], &n[1]);

  000e9	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _n$202126[ebp+4]
  000ef	50		 push	 eax
  000f0	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _n$202126[ebp]
  000f6	51		 push	 ecx
  000f7	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@
  00102	52		 push	 edx
  00103	e8 00 00 00 00	 call	 _sscanf

; 40   : 			this->Number[this->mCount].Map = n[0];

  00108	8b 86 9c 02 00
	00		 mov	 eax, DWORD PTR [esi+668]
  0010e	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _n$202126[ebp]
  00114	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 41   : 			this->Number[this->mCount].Zen = n[1];

  00118	8b 96 9c 02 00
	00		 mov	 edx, DWORD PTR [esi+668]
  0011e	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _n$202126[ebp+4]
  00124	83 c4 10	 add	 esp, 16			; 00000010H
  00127	89 44 d6 08	 mov	 DWORD PTR [esi+edx*8+8], eax

; 42   : 			this->mCount++;

  0012b	01 9e 9c 02 00
	00		 add	 DWORD PTR [esi+668], ebx
$LN1@LoadConfig:

; 26   : 
; 27   : 	char Buff[256];
; 28   : 	int Flag = 0;
; 29   : 	this->mCount = 0;
; 30   : 
; 31   : 	while(!feof(file)) // Проверяем есть ли строка ?документ?

  00131	57		 push	 edi
  00132	e8 00 00 00 00	 call	 _feof
  00137	83 c4 04	 add	 esp, 4
  0013a	85 c0		 test	 eax, eax
  0013c	0f 84 6e ff ff
	ff		 je	 $LL4@LoadConfig
$LN3@LoadConfig:

; 43   : 		}
; 44   : 	}
; 45   : 	fclose(file);

  00142	57		 push	 edi
  00143	e8 00 00 00 00	 call	 _fclose
  00148	83 c4 04	 add	 esp, 4
$LN10@LoadConfig:

; 46   : }

  0014b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	33 cd		 xor	 ecx, ebp
  00152	5b		 pop	 ebx
  00153	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c3		 ret	 0
?LoadConfig@cDropZenManager@@QAEXXZ ENDP		; cDropZenManager::LoadConfig
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z ; cDropZenManager::Main
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_money$ = 12						; size = 4
?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z PROC	; cDropZenManager::Main, COMDAT
; _this$ = ecx

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 50   : 	if(!this->Enable) return;

  00003	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00006	74 40		 je	 SHORT $LN2@Main

; 51   : 	for(int i=0;i<this->mCount;i++)

  00008	56		 push	 esi
  00009	8b b1 9c 02 00
	00		 mov	 esi, DWORD PTR [ecx+668]
  0000f	33 c0		 xor	 eax, eax
  00011	85 f6		 test	 esi, esi
  00013	7e 32		 jle	 SHORT $LN11@Main
  00015	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00018	57		 push	 edi
  00019	0f b6 ba 49 01
	00 00		 movzx	 edi, BYTE PTR [edx+329]
  00020	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
$LL4@Main:

; 52   : 	{
; 53   : 		if(this->Number[i].Map == lpObj->MapNumber)

  00023	39 3a		 cmp	 DWORD PTR [edx], edi
  00025	74 0e		 je	 SHORT $LN9@Main

; 51   : 	for(int i=0;i<this->mCount;i++)

  00027	40		 inc	 eax
  00028	83 c2 08	 add	 edx, 8
  0002b	3b c6		 cmp	 eax, esi
  0002d	7c f4		 jl	 SHORT $LL4@Main
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 56   : 			return;
; 57   : 		}
; 58   : 	}
; 59   : }

  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
$LN9@Main:

; 54   : 		{
; 55   : 			money = (( money * this->Number[i].Zen ) / 100 );

  00035	db 44 c1 08	 fild	 DWORD PTR [ecx+eax*8+8]
  00039	8b 45 0c	 mov	 eax, DWORD PTR _money$[ebp]
  0003c	5f		 pop	 edi
  0003d	d8 08		 fmul	 DWORD PTR [eax]
  0003f	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  00045	d9 18		 fstp	 DWORD PTR [eax]
$LN11@Main:
  00047	5e		 pop	 esi
$LN2@Main:

; 56   : 			return;
; 57   : 		}
; 58   : 	}
; 59   : }

  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z ENDP	; cDropZenManager::Main
_TEXT	ENDS
END
