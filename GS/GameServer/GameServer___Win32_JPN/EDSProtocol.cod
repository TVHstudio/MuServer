; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\EDSProtocol.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gGuildListTotal@@3HA				; gGuildListTotal
PUBLIC	?gGuildListCount@@3HA				; gGuildListCount
PUBLIC	?GuildListhSts@@3PAUHWND__@@A			; GuildListhSts
PUBLIC	?GuildListhPrs@@3PAUHWND__@@A			; GuildListhPrs
PUBLIC	?GuildListhDlg@@3PAUHWND__@@A			; GuildListhDlg
_BSS	SEGMENT
?gGuildListTotal@@3HA DD 01H DUP (?)			; gGuildListTotal
?gGuildListCount@@3HA DD 01H DUP (?)			; gGuildListCount
?GuildListhSts@@3PAUHWND__@@A DD 01H DUP (?)		; GuildListhSts
?GuildListhPrs@@3PAUHWND__@@A DD 01H DUP (?)		; GuildListhPrs
?GuildListhDlg@@3PAUHWND__@@A DD 01H DUP (?)		; GuildListhDlg
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD@@QAEXPAEEE@Z			; PBMSG_HEAD::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD@@QAEXPAEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_size$ = 16						; size = 1
?set@PBMSG_HEAD@@QAEXPAEEE@Z PROC			; PBMSG_HEAD::set, COMDAT
; _this$ = ecx

; 80   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 81   : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 82   : 		lpBuf[1] = size;

  00006	8a 4d 10	 mov	 cl, BYTE PTR _size$[ebp]

; 83   : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  0000f	88 48 01	 mov	 BYTE PTR [eax+1], cl
  00012	88 50 02	 mov	 BYTE PTR [eax+2], dl

; 84   : 	};	// line : 22

  00015	5d		 pop	 ebp
  00016	c2 0c 00	 ret	 12			; 0000000cH
?set@PBMSG_HEAD@@QAEXPAEEE@Z ENDP			; PBMSG_HEAD::set
_TEXT	ENDS
PUBLIC	?setE@PBMSG_HEAD@@QAEXPAEEE@Z			; PBMSG_HEAD::setE
; Function compile flags: /Ogtp
;	COMDAT ?setE@PBMSG_HEAD@@QAEXPAEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_size$ = 16						; size = 1
?setE@PBMSG_HEAD@@QAEXPAEEE@Z PROC			; PBMSG_HEAD::setE, COMDAT
; _this$ = ecx

; 87   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 88   : 		lpBuf[0] = 0xC3;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 89   : 		lpBuf[1] = size;

  00006	8a 4d 10	 mov	 cl, BYTE PTR _size$[ebp]

; 90   : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	c6 00 c3	 mov	 BYTE PTR [eax], 195	; 000000c3H
  0000f	88 48 01	 mov	 BYTE PTR [eax+1], cl
  00012	88 50 02	 mov	 BYTE PTR [eax+2], dl

; 91   : 	};	// line : 29

  00015	5d		 pop	 ebp
  00016	c2 0c 00	 ret	 12			; 0000000cH
?setE@PBMSG_HEAD@@QAEXPAEEE@Z ENDP			; PBMSG_HEAD::setE
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	?set@PWMSG_HEAD@@QAEXPAEEH@Z			; PWMSG_HEAD::set
; Function compile flags: /Ogtp
;	COMDAT ?set@PWMSG_HEAD@@QAEXPAEEH@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_size$ = 16						; size = 4
?set@PWMSG_HEAD@@QAEXPAEEH@Z PROC			; PWMSG_HEAD::set, COMDAT
; _this$ = ecx

; 122  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 123  : 		lpBuf[0] = 0xC2;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 124  : 		lpBuf[1] = SET_NUMBERH(size);

  00006	8b 4d 10	 mov	 ecx, DWORD PTR _size$[ebp]
  00009	8b d1		 mov	 edx, ecx

; 125  : 		lpBuf[2] = SET_NUMBERL(size);

  0000b	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 126  : 		lpBuf[3] = head;

  0000e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00011	c1 ea 08	 shr	 edx, 8
  00014	c6 00 c2	 mov	 BYTE PTR [eax], 194	; 000000c2H
  00017	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0001a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 127  : 	};

  0001d	5d		 pop	 ebp
  0001e	c2 0c 00	 ret	 12			; 0000000cH
?set@PWMSG_HEAD@@QAEXPAEEH@Z ENDP			; PWMSG_HEAD::set
_TEXT	ENDS
PUBLIC	?setE@PWMSG_HEAD@@QAEXPAEEH@Z			; PWMSG_HEAD::setE
; Function compile flags: /Ogtp
;	COMDAT ?setE@PWMSG_HEAD@@QAEXPAEEH@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_size$ = 16						; size = 4
?setE@PWMSG_HEAD@@QAEXPAEEH@Z PROC			; PWMSG_HEAD::setE, COMDAT
; _this$ = ecx

; 130  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 131  : 		lpBuf[0] = 0xC4;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 132  : 		lpBuf[1] = SET_NUMBERH(size);

  00006	8b 4d 10	 mov	 ecx, DWORD PTR _size$[ebp]
  00009	8b d1		 mov	 edx, ecx

; 133  : 		lpBuf[2] = SET_NUMBERL(size);

  0000b	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 134  : 		lpBuf[3] = head;

  0000e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00011	c1 ea 08	 shr	 edx, 8
  00014	c6 00 c4	 mov	 BYTE PTR [eax], 196	; 000000c4H
  00017	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0001a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 135  : 	};

  0001d	5d		 pop	 ebp
  0001e	c2 0c 00	 ret	 12			; 0000000cH
?setE@PWMSG_HEAD@@QAEXPAEEH@Z ENDP			; PWMSG_HEAD::setE
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0char_ID@@QAE@PAD@Z				; char_ID::char_ID
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\common\winutil.h
;	COMDAT ??0char_ID@@QAE@PAD@Z
_TEXT	SEGMENT
_szName$ = 8						; size = 4
??0char_ID@@QAE@PAD@Z PROC				; char_ID::char_ID, COMDAT
; _this$ = ecx

; 31   : 	char_ID(LPSTR szName)	// line : 44

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 32   : 	{
; 33   : 		memset(this->Name, 0, sizeof(this->Name));

  00005	33 c9		 xor	 ecx, ecx
  00007	89 08		 mov	 DWORD PTR [eax], ecx
  00009	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000c	66 89 48 08	 mov	 WORD PTR [eax+8], cx
  00010	88 48 0a	 mov	 BYTE PTR [eax+10], cl

; 34   : 
; 35   : 		if ( szName != NULL )

  00013	8b 4d 08	 mov	 ecx, DWORD PTR _szName$[ebp]
  00016	85 c9		 test	 ecx, ecx
  00018	74 12		 je	 SHORT $LN1@char_ID

; 36   : 		{
; 37   : 			memcpy(this->Name, szName, MAX_ACCOUNT_LEN);

  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 10		 mov	 DWORD PTR [eax], edx
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	66 8b 49 08	 mov	 cx, WORD PTR [ecx+8]
  00028	66 89 48 08	 mov	 WORD PTR [eax+8], cx
$LN1@char_ID:

; 38   : 		}
; 39   : 	}	// line : 49

  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??0char_ID@@QAE@PAD@Z ENDP				; char_ID::char_ID
_TEXT	ENDS
PUBLIC	?GetBuffer@char_ID@@QAEPADXZ			; char_ID::GetBuffer
; Function compile flags: /Ogtp
;	COMDAT ?GetBuffer@char_ID@@QAEPADXZ
_TEXT	SEGMENT
?GetBuffer@char_ID@@QAEPADXZ PROC			; char_ID::GetBuffer, COMDAT
; _this$ = ecx

; 42   : 	{

  00000	8b c1		 mov	 eax, ecx

; 43   : 		return this->Name;
; 44   : 	}	// line : 54

  00002	c3		 ret	 0
?GetBuffer@char_ID@@QAEPADXZ ENDP			; char_ID::GetBuffer
_TEXT	ENDS
PUBLIC	?GetLength@char_ID@@QAEHXZ			; char_ID::GetLength
; Function compile flags: /Ogtp
;	COMDAT ?GetLength@char_ID@@QAEHXZ
_TEXT	SEGMENT
?GetLength@char_ID@@QAEHXZ PROC				; char_ID::GetLength, COMDAT
; _this$ = ecx

; 48   : 		return strlen(this->Name);

  00000	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL3@GetLength:
  00003	8a 01		 mov	 al, BYTE PTR [ecx]
  00005	41		 inc	 ecx
  00006	84 c0		 test	 al, al
  00008	75 f9		 jne	 SHORT $LL3@GetLength
  0000a	2b ca		 sub	 ecx, edx
  0000c	8b c1		 mov	 eax, ecx

; 49   : 	}	// line : 65

  0000e	c3		 ret	 0
?GetLength@char_ID@@QAEHXZ ENDP				; char_ID::GetLength
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ZtDataServerLogin@@YAXXZ			; ZtDataServerLogin
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?wsZtDbCli@@3VwsJoinServerCli@@A:BYTE		; wsZtDbCli
EXTRN	?szServerName@@3PADA:BYTE			; szServerName
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	?GameServerPort@@3HA:DWORD			; GameServerPort
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
;	COMDAT ?ZtDataServerLogin@@YAXXZ
_TEXT	SEGMENT
_pInfo$ = -64						; size = 58
__$ArrayPad$ = -4					; size = 4
?ZtDataServerLogin@@YAXXZ PROC				; ZtDataServerLogin, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 155  : 	SDHP_SERVERINFO pInfo;
; 156  : 
; 157  : 	pInfo.h.c = 0xC1;
; 158  : 	pInfo.h.size = sizeof(SDHP_SERVERINFO);
; 159  : 	pInfo.h.headcode = 0x00;
; 160  : 	pInfo.Port = GameServerPort;

  00010	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?GameServerPort@@3HA

; 161  : 	pInfo.Type = 0x01;
; 162  : 	pInfo.ServerCode = gGameServerCode;

  00016	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0001d	66 89 45 c4	 mov	 WORD PTR _pInfo$[ebp+4], ax
  00021	c7 45 c0 c1 3a
	00 01		 mov	 DWORD PTR _pInfo$[ebp], 16792257 ; 01003ac1H
  00028	66 89 4d f8	 mov	 WORD PTR _pInfo$[ebp+56], cx

; 163  : 	strcpy(pInfo.ServerName, szServerName);

  0002c	33 c0		 xor	 eax, eax
  0002e	8b ff		 npad	 2
$LL3@ZtDataServ:
  00030	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR ?szServerName@@3PADA[eax]
  00036	88 4c 05 c6	 mov	 BYTE PTR _pInfo$[ebp+eax+6], cl
  0003a	40		 inc	 eax
  0003b	84 c9		 test	 cl, cl
  0003d	75 f1		 jne	 SHORT $LL3@ZtDataServ

; 164  : 
; 165  : 	wsZtDbCli.DataSend((char*)&pInfo, pInfo.h.size);

  0003f	0f b6 55 c1	 movzx	 edx, BYTE PTR _pInfo$[ebp+1]
  00043	52		 push	 edx
  00044	8d 45 c0	 lea	 eax, DWORD PTR _pInfo$[ebp]
  00047	50		 push	 eax
  00048	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0004d	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 166  : }

  00052	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00055	33 cd		 xor	 ecx, ebp
  00057	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?ZtDataServerLogin@@YAXXZ ENDP				; ZtDataServerLogin
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDCharClose@@YAXHPAD0@Z			; GDCharClose
; Function compile flags: /Ogtp
;	COMDAT ?GDCharClose@@YAXHPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -28						; size = 22
__$ArrayPad$ = -4					; size = 4
_type$ = 8						; size = 4
_GuildName$ = 12					; size = 4
_Name$ = 16						; size = 4
?GDCharClose@@YAXHPAD0@Z PROC				; GDCharClose, COMDAT

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _Name$[ebp]
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _GuildName$[ebp]
  00016	53		 push	 ebx

; 170  : 	SDHP_USERCLOSE pMsg;
; 171  : 
; 172  : 	pMsg.h.c = 0xC1;
; 173  : 	pMsg.h.size = sizeof(pMsg);
; 174  : 	pMsg.h.headcode = 0x02;
; 175  : 	pMsg.Type = type;

  00017	8a 5d 08	 mov	 bl, BYTE PTR _type$[ebp]
  0001a	56		 push	 esi

; 176  : 	memcpy(pMsg.CharName, Name, sizeof(pMsg.CharName));

  0001b	8b 30		 mov	 esi, DWORD PTR [eax]
  0001d	89 75 e7	 mov	 DWORD PTR _pMsg$[ebp+3], esi
  00020	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00023	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  00027	89 75 eb	 mov	 DWORD PTR _pMsg$[ebp+7], esi
  0002a	66 89 45 ef	 mov	 WORD PTR _pMsg$[ebp+11], ax

; 177  : 	memset(pMsg.GuildName, 0, sizeof(pMsg.GuildName));

  0002e	33 c0		 xor	 eax, eax
  00030	5e		 pop	 esi
  00031	88 5d f9	 mov	 BYTE PTR _pMsg$[ebp+21], bl
  00034	b2 16		 mov	 dl, 22			; 00000016H
  00036	66 c7 45 e4 c1
	16		 mov	 WORD PTR _pMsg$[ebp], 5825 ; 000016c1H
  0003c	c6 45 e6 02	 mov	 BYTE PTR _pMsg$[ebp+2], 2
  00040	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  00043	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+17], eax
  00046	5b		 pop	 ebx

; 178  : 
; 179  : 	if ( GuildName != NULL )

  00047	85 c9		 test	 ecx, ecx
  00049	74 0b		 je	 SHORT $LN1@GDCharClos

; 180  : 	{
; 181  : 		memcpy(pMsg.GuildName, GuildName, sizeof(pMsg.GuildName));

  0004b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00050	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  00053	89 4d f5	 mov	 DWORD PTR _pMsg$[ebp+17], ecx
$LN1@GDCharClos:

; 182  : 	}
; 183  : 
; 184  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00056	0f b6 d2	 movzx	 edx, dl
  00059	52		 push	 edx
  0005a	8d 45 e4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0005d	50		 push	 eax
  0005e	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00063	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 185  : }

  00068	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006b	33 cd		 xor	 ecx, ebp
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?GDCharClose@@YAXHPAD0@Z ENDP				; GDCharClose
_TEXT	ENDS
PUBLIC	??_C@_0BL@PKGGHIAM@ZtDB?5Server?5Login?5Fail?3?5?$CFd?$AA@ ; `string'
PUBLIC	?ZtDataServerLoginResult@@YAXPAUSDHP_RESULT@@@Z	; ZtDataServerLoginResult
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedGP@@YAHH@Z:PROC			; gObjIsConnectedGP
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
;	COMDAT ??_C@_0BL@PKGGHIAM@ZtDB?5Server?5Login?5Fail?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BL@PKGGHIAM@ZtDB?5Server?5Login?5Fail?3?5?$CFd?$AA@ DB 'ZtDB Serve'
	DB	'r Login Fail: %d', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?ZtDataServerLoginResult@@YAXPAUSDHP_RESULT@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?ZtDataServerLoginResult@@YAXPAUSDHP_RESULT@@@Z PROC	; ZtDataServerLoginResult, COMDAT

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 189  : 	if ( lpMsg->Result == false )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	80 78 03 00	 cmp	 BYTE PTR [eax+3], 0
  0000a	75 12		 jne	 SHORT $LN6@ZtDataServ@2

; 190  : 	{
; 191  : 		LogAddTD("ZtDB Server Login Fail: %d", lpMsg->Result);

  0000c	6a 00		 push	 0
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PKGGHIAM@ZtDB?5Server?5Login?5Fail?3?5?$CFd?$AA@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00019	83 c4 08	 add	 esp, 8

; 202  : 			}
; 203  : 		}
; 204  : 	}
; 205  : 	
; 206  : }

  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN6@ZtDataServ@2:
  0001e	56		 push	 esi
  0001f	57		 push	 edi

; 192  : 		return;
; 193  : 	}
; 194  : 
; 195  : 	for (int i=0;i<OBJMAX;i++)

  00020	33 ff		 xor	 edi, edi
  00022	33 f6		 xor	 esi, esi
$LL5@ZtDataServ@2:

; 196  : 	{
; 197  : 		if ( gObjIsConnectedGP(i) == TRUE )

  00024	57		 push	 edi
  00025	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0002a	83 c4 04	 add	 esp, 4
  0002d	83 f8 01	 cmp	 eax, 1
  00030	75 17		 jne	 SHORT $LN4@ZtDataServ@2

; 198  : 		{
; 199  : 			if ( gObj[i].m_FriendServerOnline == FRIEND_SERVER_STATE_OFFLINE )

  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00037	80 bc 06 70 03
	00 00 01	 cmp	 BYTE PTR [esi+eax+880], 1
  0003f	75 08		 jne	 SHORT $LN4@ZtDataServ@2

; 200  : 			{
; 201  : 				gObj[i].m_FriendServerOnline = FALSE;

  00041	c6 84 06 70 03
	00 00 00	 mov	 BYTE PTR [esi+eax+880], 0
$LN4@ZtDataServ@2:

; 192  : 		return;
; 193  : 	}
; 194  : 
; 195  : 	for (int i=0;i<OBJMAX;i++)

  00049	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  0004f	47		 inc	 edi
  00050	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00056	7c cc		 jl	 SHORT $LL5@ZtDataServ@2
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi

; 202  : 			}
; 203  : 		}
; 204  : 	}
; 205  : 	
; 206  : }

  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?ZtDataServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ENDP	; ZtDataServerLoginResult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDCharCloseRecv@@YAXPAUSDHP_USERCLOSE@@@Z	; GDCharCloseRecv
EXTRN	?CloseMember@CGuildClass@@QAEHPAD0@Z:PROC	; CGuildClass::CloseMember
EXTRN	?Guild@@3VCGuildClass@@A:BYTE			; Guild
; Function compile flags: /Ogtp
;	COMDAT ?GDCharCloseRecv@@YAXPAUSDHP_USERCLOSE@@@Z
_TEXT	SEGMENT
_szGuildName$ = -28					; size = 9
_szName$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GDCharCloseRecv@@YAXPAUSDHP_USERCLOSE@@@Z PROC		; GDCharCloseRecv, COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 210  : 	char szName[MAX_ACCOUNT_LEN+1];
; 211  : 	char szGuildName[MAX_GUILD_LEN+1];
; 212  : 
; 213  : 	memset(szName, 0, sizeof(szName));
; 214  : 	memset(szGuildName, 0, sizeof(szGuildName));
; 215  : 	memcpy(szName, lpMsg->CharName, sizeof(lpMsg->CharName));

  00013	8b 50 07	 mov	 edx, DWORD PTR [eax+7]
  00016	33 c9		 xor	 ecx, ecx
  00018	89 4d f0	 mov	 DWORD PTR _szName$[ebp], ecx
  0001b	89 4d f4	 mov	 DWORD PTR _szName$[ebp+4], ecx
  0001e	66 89 4d f8	 mov	 WORD PTR _szName$[ebp+8], cx
  00022	89 4d e4	 mov	 DWORD PTR _szGuildName$[ebp], ecx
  00025	89 4d e8	 mov	 DWORD PTR _szGuildName$[ebp+4], ecx
  00028	88 4d fa	 mov	 BYTE PTR _szName$[ebp+10], cl
  0002b	88 4d ec	 mov	 BYTE PTR _szGuildName$[ebp+8], cl
  0002e	8b 48 03	 mov	 ecx, DWORD PTR [eax+3]
  00031	89 4d f0	 mov	 DWORD PTR _szName$[ebp], ecx
  00034	66 8b 48 0b	 mov	 cx, WORD PTR [eax+11]
  00038	89 55 f4	 mov	 DWORD PTR _szName$[ebp+4], edx

; 216  : 	memcpy(szGuildName, lpMsg->GuildName, sizeof(lpMsg->GuildName));

  0003b	8b 50 0d	 mov	 edx, DWORD PTR [eax+13]
  0003e	8b 40 11	 mov	 eax, DWORD PTR [eax+17]
  00041	66 89 4d f8	 mov	 WORD PTR _szName$[ebp+8], cx

; 217  : 
; 218  : 	Guild.CloseMember(szGuildName, szName);

  00045	8d 4d f0	 lea	 ecx, DWORD PTR _szName$[ebp]
  00048	89 55 e4	 mov	 DWORD PTR _szGuildName$[ebp], edx
  0004b	51		 push	 ecx
  0004c	8d 55 e4	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  0004f	52		 push	 edx
  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00055	89 45 e8	 mov	 DWORD PTR _szGuildName$[ebp+4], eax
  00058	e8 00 00 00 00	 call	 ?CloseMember@CGuildClass@@QAEHPAD0@Z ; CGuildClass::CloseMember

; 219  : }

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00060	33 cd		 xor	 ecx, ebp
  00062	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?GDCharCloseRecv@@YAXPAUSDHP_USERCLOSE@@@Z ENDP		; GDCharCloseRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildCreateSend@@YAXHPAD0PAEH@Z		; GDGuildCreateSend
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildCreateSend@@YAXHPAD0PAEH@Z
_TEXT	SEGMENT
_pMsg$ = -64						; size = 58
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_Name$ = 12						; size = 4
_Master$ = 16						; size = 4
_Mark$ = 20						; size = 4
_iGuildType$ = 24					; size = 4
?GDGuildCreateSend@@YAXHPAD0PAEH@Z PROC			; GDGuildCreateSend, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _Master$[ebp]
  00013	8b 55 0c	 mov	 edx, DWORD PTR _Name$[ebp]
  00016	56		 push	 esi
  00017	8b 75 14	 mov	 esi, DWORD PTR _Mark$[ebp]
  0001a	57		 push	 edi

; 234  : 	SDHP_GUILDCREATE pMsg;
; 235  : 
; 236  : 	pMsg.h.c = 0xC1;

  0001b	c6 45 c0 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H

; 237  : 	pMsg.h.headcode = 0x30;

  0001f	66 c7 45 c1 3a
	30		 mov	 WORD PTR _pMsg$[ebp+1], 12346 ; 0000303aH

; 238  : 	pMsg.h.size = sizeof(pMsg);
; 239  : 
; 240  : 	memcpy(pMsg.Mark, Mark, sizeof(pMsg.Mark));

  00025	b9 08 00 00 00	 mov	 ecx, 8
  0002a	8d 7d d7	 lea	 edi, DWORD PTR _pMsg$[ebp+23]
  0002d	f3 a5		 rep movsd

; 241  : 	pMsg.Master[MAX_ACCOUNT_LEN] = 0;

  0002f	32 c9		 xor	 cl, cl
  00031	88 4d d6	 mov	 BYTE PTR _pMsg$[ebp+22], cl

; 242  : 	pMsg.GuildName[MAX_GUILD_LEN] = 0;

  00034	88 4d cb	 mov	 BYTE PTR _pMsg$[ebp+11], cl

; 243  : 	memcpy(pMsg.Master, Master, MAX_ACCOUNT_LEN);

  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	89 4d cc	 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  0003c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003f	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  00043	89 4d d0	 mov	 DWORD PTR _pMsg$[ebp+16], ecx

; 244  : 	memcpy(pMsg.GuildName, Name, MAX_GUILD_LEN);

  00046	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00048	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0004b	66 89 45 d4	 mov	 WORD PTR _pMsg$[ebp+20], ax

; 245  : 	pMsg.NumberH = SET_NUMBERH(aIndex);

  0004f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00052	89 4d c3	 mov	 DWORD PTR _pMsg$[ebp+3], ecx
  00055	8b c8		 mov	 ecx, eax
  00057	c1 e9 08	 shr	 ecx, 8

; 246  : 	pMsg.NumberL = SET_NUMBERL(aIndex);

  0005a	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+56], al
  0005d	89 55 c7	 mov	 DWORD PTR _pMsg$[ebp+7], edx

; 247  : 	pMsg.btGuildType = iGuildType;

  00060	8a 55 18	 mov	 dl, BYTE PTR _iGuildType$[ebp]

; 248  : 
; 249  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00063	6a 3a		 push	 58			; 0000003aH
  00065	8d 45 c0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00068	88 4d f7	 mov	 BYTE PTR _pMsg$[ebp+55], cl
  0006b	50		 push	 eax
  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00071	88 55 f9	 mov	 BYTE PTR _pMsg$[ebp+57], dl
  00074	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 250  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	5f		 pop	 edi
  0007d	33 cd		 xor	 ecx, ebp
  0007f	5e		 pop	 esi
  00080	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
?GDGuildCreateSend@@YAXHPAD0PAEH@Z ENDP			; GDGuildCreateSend
_TEXT	ENDS
PUBLIC	??_C@_0DE@PMHJKKOP@?$FLU?4System?$FN?5Guild?5is?5Created?5?9?5Gu@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildCreateRecv@@YAXPAUSDHP_GUILDCREATE_RESULT@@@Z ; GDGuildCreateRecv
EXTRN	?GCGuildViewportNowPaint@@YAXHPADPAEH@Z:PROC	; GCGuildViewportNowPaint
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z:PROC ; CGuildClass::AddGuild
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
;	COMDAT ??_C@_0DE@PMHJKKOP@?$FLU?4System?$FN?5Guild?5is?5Created?5?9?5Gu@
CONST	SEGMENT
??_C@_0DE@PMHJKKOP@?$FLU?4System?$FN?5Guild?5is?5Created?5?9?5Gu@ DB '[U.'
	DB	'System] Guild is Created - Guild : %s / [%s][%s]', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?GDGuildCreateRecv@@YAXPAUSDHP_GUILDCREATE_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 5
tv368 = -36						; size = 4
_pResult$213913 = -36					; size = 5
_szMaster$ = -28					; size = 11
_szGuildName$ = -16					; size = 9
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GDGuildCreateRecv@@YAXPAUSDHP_GUILDCREATE_RESULT@@@Z PROC ; GDGuildCreateRecv, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 254  : 	int aIndex = -1;
; 255  : 	PMSG_GUILDCREATED_RESULT pMsg;
; 256  : 	_GUILD_INFO_STRUCT * lpNode;
; 257  : 	char szMaster[MAX_ACCOUNT_LEN+1];
; 258  : 	char szGuildName[MAX_GUILD_LEN+1];
; 259  : 
; 260  : 	szMaster[MAX_ACCOUNT_LEN] = 0;
; 261  : 	szGuildName[MAX_GUILD_LEN] = 0;
; 262  : 	memcpy(szMaster, lpMsg->Master, MAX_ACCOUNT_LEN);

  00015	8b 46 0e	 mov	 eax, DWORD PTR [esi+14]
  00018	8b 4e 12	 mov	 ecx, DWORD PTR [esi+18]
  0001b	66 8b 56 16	 mov	 dx, WORD PTR [esi+22]
  0001f	89 45 e4	 mov	 DWORD PTR _szMaster$[ebp], eax

; 263  : 	memcpy(szGuildName, lpMsg->GuildName, MAX_GUILD_LEN);

  00022	8b 46 19	 mov	 eax, DWORD PTR [esi+25]
  00025	89 4d e8	 mov	 DWORD PTR _szMaster$[ebp+4], ecx
  00028	8b 4e 1d	 mov	 ecx, DWORD PTR [esi+29]
  0002b	83 cb ff	 or	 ebx, -1

; 264  : 
; 265  : 	if (lpMsg->Result == 0 )

  0002e	80 7e 03 00	 cmp	 BYTE PTR [esi+3], 0
  00032	57		 push	 edi
  00033	c6 45 ee 00	 mov	 BYTE PTR _szMaster$[ebp+10], 0
  00037	c6 45 f8 00	 mov	 BYTE PTR _szGuildName$[ebp+8], 0
  0003b	66 89 55 ec	 mov	 WORD PTR _szMaster$[ebp+8], dx
  0003f	89 45 f0	 mov	 DWORD PTR _szGuildName$[ebp], eax
  00042	89 4d f4	 mov	 DWORD PTR _szGuildName$[ebp+4], ecx
  00045	0f 85 80 00 00
	00		 jne	 $LN8@GDGuildCre

; 266  : 	{
; 267  : 		aIndex = MAKE_NUMBERW(lpMsg->NumberH, lpMsg->NumberL);

  0004b	0f b6 56 0c	 movzx	 edx, BYTE PTR [esi+12]
  0004f	0f b6 46 0d	 movzx	 eax, BYTE PTR [esi+13]
  00053	66 c1 e2 08	 shl	 dx, 8

; 268  : 
; 269  : 		PMSG_GUILDCREATED_RESULT pResult;
; 270  : 
; 271  : 		PHeadSetB((LPBYTE)&pResult, 0x56, sizeof(pResult));

  00057	6a 05		 push	 5
  00059	0f b7 fa	 movzx	 edi, dx
  0005c	8d 4d dc	 lea	 ecx, DWORD PTR _pResult$213913[ebp]
  0005f	6a 56		 push	 86			; 00000056H
  00061	51		 push	 ecx
  00062	0b f8		 or	 edi, eax
  00064	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 272  : 		pResult.Result = G_ERROR_NONE;
; 273  : 		pResult.btGuildType = lpMsg->btGuildType;
; 274  : 
; 275  : 		DataSend(aIndex, (LPBYTE)&pResult, pResult.h.size);

  00069	0f b6 45 dd	 movzx	 eax, BYTE PTR _pResult$213913[ebp+1]
  0006d	8a 56 42	 mov	 dl, BYTE PTR [esi+66]
  00070	50		 push	 eax
  00071	8d 4d dc	 lea	 ecx, DWORD PTR _pResult$213913[ebp]
  00074	51		 push	 ecx
  00075	57		 push	 edi
  00076	c6 45 df 00	 mov	 BYTE PTR _pResult$213913[ebp+3], 0
  0007a	88 55 e0	 mov	 BYTE PTR _pResult$213913[ebp+4], dl
  0007d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 276  : 
; 277  : 		if ( gObj[aIndex].m_IfState.use != 0 && gObj[aIndex].m_IfState.type == 5 )

  00082	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0008e	8b 84 17 1c 0e
	00 00		 mov	 eax, DWORD PTR [edi+edx+3612]
  00095	8d 8c 17 1c 0e
	00 00		 lea	 ecx, DWORD PTR [edi+edx+3612]
  0009c	83 c4 18	 add	 esp, 24			; 00000018H
  0009f	a8 03		 test	 al, 3
  000a1	0f 84 a8 01 00
	00		 je	 $LN1@GDGuildCre
  000a7	25 c0 ff 00 00	 and	 eax, 65472		; 0000ffc0H
  000ac	3d 40 01 00 00	 cmp	 eax, 320		; 00000140H
  000b1	0f 85 98 01 00
	00		 jne	 $LN1@GDGuildCre

; 278  : 		{
; 279  : 			gObj[aIndex].m_IfState.use = 0;

  000b7	83 21 fc	 and	 DWORD PTR [ecx], -4	; fffffffcH
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx

; 325  : 		}
; 326  : 	}
; 327  : }

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c0	33 cd		 xor	 ecx, ebp
  000c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
$LN8@GDGuildCre:

; 280  : 		}
; 281  : 		return;
; 282  : 	}
; 283  : 
; 284  : 	if ( lpMsg->Flag == 1 )

  000cb	80 7e 04 01	 cmp	 BYTE PTR [esi+4], 1
  000cf	0f 85 89 00 00
	00		 jne	 $LN15@GDGuildCre

; 285  : 	{
; 286  : 		aIndex = MAKE_NUMBERW(lpMsg->NumberH, lpMsg->NumberL);

  000d5	0f b6 46 0c	 movzx	 eax, BYTE PTR [esi+12]
  000d9	0f b6 4e 0d	 movzx	 ecx, BYTE PTR [esi+13]
  000dd	66 c1 e0 08	 shl	 ax, 8
  000e1	0f b7 d8	 movzx	 ebx, ax
  000e4	0b d9		 or	 ebx, ecx

; 287  : 
; 288  : 		if ( gObjIsConnected(aIndex) == TRUE )

  000e6	53		 push	 ebx
  000e7	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  000ec	83 c4 04	 add	 esp, 4
  000ef	83 f8 01	 cmp	 eax, 1
  000f2	75 6a		 jne	 SHORT $LN15@GDGuildCre

; 289  : 		{
; 290  : 			if ( szMaster[0] == gObj[aIndex].Name[0] )

  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000f9	8b d3		 mov	 edx, ebx
  000fb	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00101	8d 4c 02 77	 lea	 ecx, DWORD PTR [edx+eax+119]
  00105	8a 55 e4	 mov	 dl, BYTE PTR _szMaster$[ebp]
  00108	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0010a	75 52		 jne	 SHORT $LN15@GDGuildCre

; 291  : 			{
; 292  : 				if ( strcmp(szMaster, gObj[aIndex].Name) == 0 )

  0010c	8d 45 e4	 lea	 eax, DWORD PTR _szMaster$[ebp]
  0010f	90		 npad	 1
$LL11@GDGuildCre:
  00110	8a 10		 mov	 dl, BYTE PTR [eax]
  00112	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00114	75 1a		 jne	 SHORT $LN12@GDGuildCre
  00116	84 d2		 test	 dl, dl
  00118	74 12		 je	 SHORT $LN13@GDGuildCre
  0011a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0011d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00120	75 0e		 jne	 SHORT $LN12@GDGuildCre
  00122	83 c0 02	 add	 eax, 2
  00125	83 c1 02	 add	 ecx, 2
  00128	84 d2		 test	 dl, dl
  0012a	75 e4		 jne	 SHORT $LL11@GDGuildCre
$LN13@GDGuildCre:
  0012c	33 c0		 xor	 eax, eax
  0012e	eb 05		 jmp	 SHORT $LN14@GDGuildCre
$LN12@GDGuildCre:
  00130	1b c0		 sbb	 eax, eax
  00132	83 d8 ff	 sbb	 eax, -1
$LN14@GDGuildCre:
  00135	85 c0		 test	 eax, eax
  00137	75 25		 jne	 SHORT $LN15@GDGuildCre

; 293  : 				{
; 294  : 					pMsg.h.c = 0xC1;
; 295  : 					pMsg.h.headcode = 0x56;
; 296  : 					pMsg.h.size = sizeof(pMsg);
; 297  : 					pMsg.Result = lpMsg->Result;

  00139	8a 46 03	 mov	 al, BYTE PTR [esi+3]

; 298  : 					pMsg.btGuildType = lpMsg->btGuildType;

  0013c	8a 4e 42	 mov	 cl, BYTE PTR [esi+66]

; 299  : 
; 300  : 					DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0013f	6a 05		 push	 5
  00141	8d 55 d4	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00144	52		 push	 edx
  00145	53		 push	 ebx
  00146	c6 45 d4 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  0014a	66 c7 45 d5 05
	56		 mov	 WORD PTR _pMsg$[ebp+1], 22021 ; 00005605H
  00150	88 45 d7	 mov	 BYTE PTR _pMsg$[ebp+3], al
  00153	88 4d d8	 mov	 BYTE PTR _pMsg$[ebp+4], cl
  00156	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0015b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@GDGuildCre:

; 301  : 				}
; 302  : 			}
; 303  : 		}
; 304  : 	}
; 305  : 
; 306  : 	if ( lpMsg->Result == 1 )

  0015e	80 7e 03 01	 cmp	 BYTE PTR [esi+3], 1
  00162	0f 85 e7 00 00
	00		 jne	 $LN1@GDGuildCre

; 307  : 	{
; 308  : 		lpNode = Guild.AddGuild(lpMsg->GuildNumber, szGuildName, lpMsg->Mark, szMaster, 0);

  00168	6a 00		 push	 0
  0016a	8d 4d e4	 lea	 ecx, DWORD PTR _szMaster$[ebp]
  0016d	51		 push	 ecx
  0016e	8d 46 22	 lea	 eax, DWORD PTR [esi+34]
  00171	50		 push	 eax
  00172	8d 55 f0	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  00175	89 45 dc	 mov	 DWORD PTR tv368[ebp], eax
  00178	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0017b	52		 push	 edx
  0017c	50		 push	 eax
  0017d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00182	e8 00 00 00 00	 call	 ?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z ; CGuildClass::AddGuild

; 309  : 
; 310  : 		if ( aIndex >= 0 && lpNode != NULL )

  00187	33 c9		 xor	 ecx, ecx
  00189	8b f8		 mov	 edi, eax
  0018b	3b d9		 cmp	 ebx, ecx
  0018d	0f 8c bc 00 00
	00		 jl	 $LN1@GDGuildCre
  00193	3b f9		 cmp	 edi, ecx
  00195	0f 84 b4 00 00
	00		 je	 $LN1@GDGuildCre

; 311  : 		{
; 312  : 			gObj[aIndex].lpGuild = lpNode;

  0019b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a1	8b c3		 mov	 eax, ebx
  001a3	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  001a9	89 bc 10 38 04
	00 00		 mov	 DWORD PTR [eax+edx+1080], edi

; 313  : 			gObj[aIndex].GuildNumber = lpMsg->GuildNumber;

  001b0	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  001b3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001b9	89 94 30 34 04
	00 00		 mov	 DWORD PTR [eax+esi+1076], edx

; 314  : 			gObj[aIndex].GuildStatus = G_MASTER;

  001c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001c6	c7 84 10 48 04
	00 00 80 00 00
	00		 mov	 DWORD PTR [eax+edx+1096], 128 ; 00000080H

; 315  : 			lpNode->iGuildRival = 0;

  001d1	89 8f 20 07 00
	00		 mov	 DWORD PTR [edi+1824], ecx

; 316  : 			lpNode->iGuildUnion = 0;

  001d7	89 8f 1c 07 00
	00		 mov	 DWORD PTR [edi+1820], ecx

; 317  : 			lpNode->iTimeStamp = 0;

  001dd	89 8f 24 07 00
	00		 mov	 DWORD PTR [edi+1828], ecx

; 318  : 			gObj[aIndex].iGuildUnionTimeStamp = 0;

  001e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001e9	89 8c 10 4c 04
	00 00		 mov	 DWORD PTR [eax+edx+1100], ecx

; 319  : 
; 320  : 			LogAddTD("[U.System] Guild is Created - Guild : %s / [%s][%s]",
; 321  : 				szGuildName, gObj[aIndex].AccountID, gObj[aIndex].Name);

  001f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001f6	8d 54 08 77	 lea	 edx, DWORD PTR [eax+ecx+119]
  001fa	52		 push	 edx
  001fb	8d 44 08 6c	 lea	 eax, DWORD PTR [eax+ecx+108]
  001ff	50		 push	 eax
  00200	8d 4d f0	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00203	51		 push	 ecx
  00204	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@PMHJKKOP@?$FLU?4System?$FN?5Guild?5is?5Created?5?9?5Gu@
  00209	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 322  : 
; 323  : 			LogAdd(lMsg.Get(MSGGET(1, 177)), lpNode->WarState, lpNode->WarDeclareState, szGuildName);

  0020f	0f b6 87 90 05
	00 00		 movzx	 eax, BYTE PTR [edi+1424]
  00216	0f b6 8f 91 05
	00 00		 movzx	 ecx, BYTE PTR [edi+1425]
  0021d	83 c4 10	 add	 esp, 16			; 00000010H
  00220	8d 55 f0	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  00223	52		 push	 edx
  00224	50		 push	 eax
  00225	51		 push	 ecx
  00226	68 b1 01 00 00	 push	 433			; 000001b1H
  0022b	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00230	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00235	50		 push	 eax
  00236	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 324  : 			::GCGuildViewportNowPaint(aIndex, szGuildName, lpMsg->Mark, TRUE);

  0023c	8b 55 dc	 mov	 edx, DWORD PTR tv368[ebp]
  0023f	6a 01		 push	 1
  00241	52		 push	 edx
  00242	8d 45 f0	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  00245	50		 push	 eax
  00246	53		 push	 ebx
  00247	e8 00 00 00 00	 call	 ?GCGuildViewportNowPaint@@YAXHPADPAEH@Z ; GCGuildViewportNowPaint
  0024c	83 c4 20	 add	 esp, 32			; 00000020H
$LN1@GDGuildCre:

; 325  : 		}
; 326  : 	}
; 327  : }

  0024f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00252	5f		 pop	 edi
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	5b		 pop	 ebx
  00257	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0025c	8b e5		 mov	 esp, ebp
  0025e	5d		 pop	 ebp
  0025f	c3		 ret	 0
?GDGuildCreateRecv@@YAXPAUSDHP_GUILDCREATE_RESULT@@@Z ENDP ; GDGuildCreateRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildDestroySend@@YAXHPAD0@Z			; GDGuildDestroySend
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildDestroySend@@YAXHPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -28						; size = 23
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_Name$ = 12						; size = 4
_Master$ = 16						; size = 4
?GDGuildDestroySend@@YAXHPAD0@Z PROC			; GDGuildDestroySend, COMDAT

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _Master$[ebp]

; 340  : 	SDHP_GUILDDESTROY pMsg;
; 341  : 
; 342  : 	pMsg.h.c = 0xC1;
; 343  : 	pMsg.h.headcode = 0x31;
; 344  : 	pMsg.h.size = sizeof(pMsg);
; 345  : 	pMsg.NumberH = SET_NUMBERH(aIndex);

  00013	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _Name$[ebp]
  00019	53		 push	 ebx
  0001a	8b da		 mov	 ebx, edx

; 346  : 	pMsg.NumberL = SET_NUMBERL(aIndex);

  0001c	88 55 e8	 mov	 BYTE PTR _pMsg$[ebp+4], dl

; 347  : 	memcpy(pMsg.Master, Master, sizeof(pMsg.Master));

  0001f	8b 10		 mov	 edx, DWORD PTR [eax]
  00021	89 55 f1	 mov	 DWORD PTR _pMsg$[ebp+13], edx
  00024	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00027	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0002b	89 55 f5	 mov	 DWORD PTR _pMsg$[ebp+17], edx

; 348  : 	memcpy(pMsg.GuildName, Name, sizeof(pMsg.GuildName));

  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+21], ax
  00034	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 349  : 
; 350  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00037	6a 17		 push	 23			; 00000017H
  00039	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0003c	51		 push	 ecx
  0003d	c1 eb 08	 shr	 ebx, 8
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00045	c6 45 e4 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00049	66 c7 45 e5 17
	31		 mov	 WORD PTR _pMsg$[ebp+1], 12567 ; 00003117H
  0004f	88 5d e7	 mov	 BYTE PTR _pMsg$[ebp+3], bl
  00052	89 55 e9	 mov	 DWORD PTR _pMsg$[ebp+5], edx
  00055	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  00058	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 351  : }

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00060	33 cd		 xor	 ecx, ebp
  00062	5b		 pop	 ebx
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?GDGuildDestroySend@@YAXHPAD0@Z ENDP			; GDGuildDestroySend
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildDestroyRecv@@YAXPAUSDHP_GUILDDESTROY_RESULT@@@Z ; GDGuildDestroyRecv
EXTRN	?DeleteGuild@CGuildClass@@QAEHPAD0@Z:PROC	; CGuildClass::DeleteGuild
EXTRN	?DelUnion@TUnion@@QAEHH@Z:PROC			; TUnion::DelUnion
EXTRN	?UnionManager@@3VTUnion@@A:BYTE			; UnionManager
EXTRN	?gObjNotifyUpdateUnionV2@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjNotifyUpdateUnionV2
EXTRN	?gObjNotifyUpdateUnionV1@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjNotifyUpdateUnionV1
EXTRN	?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z:PROC ; CGuildClass::SearchGuild_Number
EXTRN	?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z:PROC ; CGuildClass::SearchGuild
EXTRN	?GCGuildViewportDelNow@@YAXHH@Z:PROC		; GCGuildViewportDelNow
EXTRN	?GCResultSend@@YAXHEE@Z:PROC			; GCResultSend
EXTRN	?GDDelGuildWarehouseList@CGuildBank@@QAEXH@Z:PROC ; CGuildBank::GDDelGuildWarehouseList
EXTRN	?g_GuildBank@@3VCGuildBank@@A:BYTE		; g_GuildBank
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildDestroyRecv@@YAXPAUSDHP_GUILDDESTROY_RESULT@@@Z
_TEXT	SEGMENT
_lpGuild$213969 = -36					; size = 4
tv404 = -32						; size = 4
_szGuildName$ = -28					; size = 9
_szMaster$ = -16					; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GDGuildDestroyRecv@@YAXPAUSDHP_GUILDDESTROY_RESULT@@@Z PROC ; GDGuildDestroyRecv, COMDAT

; 354  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 355  : 	int aIndex = -1;
; 356  : 	char szMaster[MAX_ACCOUNT_LEN+1];
; 357  : 	char szGuildName[MAX_GUILD_LEN+1];
; 358  : 	szMaster[MAX_ACCOUNT_LEN] = 0;
; 359  : 	szGuildName[MAX_GUILD_LEN] = 0;
; 360  : 
; 361  : 	memcpy(szMaster, lpMsg->Master, MAX_ACCOUNT_LEN);
; 362  : 	memcpy(szGuildName, lpMsg->GuildName, MAX_GUILD_LEN);
; 363  : 
; 364  : 	if ( lpMsg->Flag == 1 )

  00014	80 7e 04 01	 cmp	 BYTE PTR [esi+4], 1
  00018	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0001b	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0001e	66 8b 56 18	 mov	 dx, WORD PTR [esi+24]
  00022	89 45 f0	 mov	 DWORD PTR _szMaster$[ebp], eax
  00025	8b 46 07	 mov	 eax, DWORD PTR [esi+7]
  00028	89 4d f4	 mov	 DWORD PTR _szMaster$[ebp+4], ecx
  0002b	8b 4e 0b	 mov	 ecx, DWORD PTR [esi+11]
  0002e	57		 push	 edi
  0002f	c6 45 fa 00	 mov	 BYTE PTR _szMaster$[ebp+10], 0
  00033	c6 45 ec 00	 mov	 BYTE PTR _szGuildName$[ebp+8], 0
  00037	66 89 55 f8	 mov	 WORD PTR _szMaster$[ebp+8], dx
  0003b	89 45 e4	 mov	 DWORD PTR _szGuildName$[ebp], eax
  0003e	89 4d e8	 mov	 DWORD PTR _szGuildName$[ebp+4], ecx
  00041	0f 85 97 00 00
	00		 jne	 $LN26@GDGuildDes

; 365  : 	{
; 366  : 		aIndex = MAKE_NUMBERW(lpMsg->NumberH, lpMsg->NumberL);

  00047	0f b6 56 05	 movzx	 edx, BYTE PTR [esi+5]
  0004b	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  0004f	66 c1 e2 08	 shl	 dx, 8
  00053	0f b7 fa	 movzx	 edi, dx
  00056	0b f8		 or	 edi, eax

; 367  : 
; 368  : 		if ( gObjIsConnected(aIndex) == TRUE )

  00058	57		 push	 edi
  00059	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0005e	83 c4 04	 add	 esp, 4
  00061	83 f8 01	 cmp	 eax, 1
  00064	75 78		 jne	 SHORT $LN26@GDGuildDes

; 369  : 		{
; 370  : 			if ( szMaster[0] == gObj[aIndex].Name[0] )

  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006c	8a 45 f0	 mov	 al, BYTE PTR _szMaster$[ebp]
  0006f	8b cf		 mov	 ecx, edi
  00071	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00077	3a 44 11 77	 cmp	 al, BYTE PTR [ecx+edx+119]
  0007b	8d 4c 11 77	 lea	 ecx, DWORD PTR [ecx+edx+119]
  0007f	75 5d		 jne	 SHORT $LN26@GDGuildDes

; 371  : 			{
; 372  : 				if ( strcmp(szMaster, gObj[aIndex].Name) == 0 )

  00081	8d 45 f0	 lea	 eax, DWORD PTR _szMaster$[ebp]
$LL21@GDGuildDes:
  00084	8a 10		 mov	 dl, BYTE PTR [eax]
  00086	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00088	75 1a		 jne	 SHORT $LN22@GDGuildDes
  0008a	84 d2		 test	 dl, dl
  0008c	74 12		 je	 SHORT $LN23@GDGuildDes
  0008e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00091	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00094	75 0e		 jne	 SHORT $LN22@GDGuildDes
  00096	83 c0 02	 add	 eax, 2
  00099	83 c1 02	 add	 ecx, 2
  0009c	84 d2		 test	 dl, dl
  0009e	75 e4		 jne	 SHORT $LL21@GDGuildDes
$LN23@GDGuildDes:
  000a0	33 c0		 xor	 eax, eax
  000a2	eb 05		 jmp	 SHORT $LN24@GDGuildDes
$LN22@GDGuildDes:
  000a4	1b c0		 sbb	 eax, eax
  000a6	83 d8 ff	 sbb	 eax, -1
$LN24@GDGuildDes:
  000a9	85 c0		 test	 eax, eax
  000ab	75 31		 jne	 SHORT $LN26@GDGuildDes

; 373  : 				{
; 374  : #if(DEV_GUILDBANK)					
; 375  : 					g_GuildBank.GDDelGuildWarehouseList(aIndex);

  000ad	57		 push	 edi
  000ae	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GuildBank@@3VCGuildBank@@A ; g_GuildBank
  000b3	e8 00 00 00 00	 call	 ?GDDelGuildWarehouseList@CGuildBank@@QAEXH@Z ; CGuildBank::GDDelGuildWarehouseList

; 376  : #endif					
; 377  : 					GCResultSend(aIndex, 0x53, lpMsg->Result);

  000b8	0f b6 4e 03	 movzx	 ecx, BYTE PTR [esi+3]
  000bc	51		 push	 ecx
  000bd	6a 53		 push	 83			; 00000053H
  000bf	57		 push	 edi
  000c0	e8 00 00 00 00	 call	 ?GCResultSend@@YAXHEE@Z	; GCResultSend

; 378  : 
; 379  : 					if ( lpMsg->Result == 1 || lpMsg->Result == 4 )

  000c5	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  000c8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cb	3c 01		 cmp	 al, 1
  000cd	74 04		 je	 SHORT $LN11@GDGuildDes
  000cf	3c 04		 cmp	 al, 4
  000d1	75 0b		 jne	 SHORT $LN26@GDGuildDes
$LN11@GDGuildDes:

; 380  : 					{
; 381  : 						GCGuildViewportDelNow(aIndex, TRUE);

  000d3	6a 01		 push	 1
  000d5	57		 push	 edi
  000d6	e8 00 00 00 00	 call	 ?GCGuildViewportDelNow@@YAXHH@Z ; GCGuildViewportDelNow
  000db	83 c4 08	 add	 esp, 8
$LN26@GDGuildDes:

; 382  : 					}
; 383  : 				}
; 384  : 			}
; 385  : 		}
; 386  : 	}
; 387  : 
; 388  : 	if ( lpMsg->Result == 1 || lpMsg->Result == 4)

  000de	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  000e1	3c 01		 cmp	 al, 1
  000e3	74 08		 je	 SHORT $LN9@GDGuildDes
  000e5	3c 04		 cmp	 al, 4
  000e7	0f 85 5d 01 00
	00		 jne	 $LN10@GDGuildDes
$LN9@GDGuildDes:

; 389  : 	{
; 390  : 		_GUILD_INFO_STRUCT * lpGuild = Guild.SearchGuild(szGuildName);

  000ed	8d 55 e4	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  000f0	52		 push	 edx
  000f1	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000f6	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  000fb	8b f0		 mov	 esi, eax

; 391  : 
; 392  : 		if ( lpGuild == NULL )

  000fd	33 ff		 xor	 edi, edi
  000ff	89 75 dc	 mov	 DWORD PTR _lpGuild$213969[ebp], esi
  00102	3b f7		 cmp	 esi, edi
  00104	0f 84 40 01 00
	00		 je	 $LN10@GDGuildDes

; 393  : 		{
; 394  : 			return;
; 395  : 		}
; 396  : 
; 397  : 		_GUILD_INFO_STRUCT * lpRival = Guild.SearchGuild_Number(lpGuild->iGuildRival);

  0010a	8b 86 20 07 00
	00		 mov	 eax, DWORD PTR [esi+1824]
  00110	50		 push	 eax
  00111	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00116	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number

; 398  : 
; 399  : 		if ( lpRival != NULL )

  0011b	3b c7		 cmp	 eax, edi
  0011d	74 0d		 je	 SHORT $LN7@GDGuildDes

; 400  : 		{
; 401  : 			lpRival->iGuildRival = 0;

  0011f	89 b8 20 07 00
	00		 mov	 DWORD PTR [eax+1824], edi

; 402  : 			lpRival->szGuildRivalName[0] = 0;

  00125	c6 80 28 07 00
	00 00		 mov	 BYTE PTR [eax+1832], 0
$LN7@GDGuildDes:

; 403  : 		}
; 404  : 
; 405  : 		lpGuild->iGuildUnion = 0;

  0012c	8d 8e a0 03 00
	00		 lea	 ecx, DWORD PTR [esi+928]
  00132	53		 push	 ebx
  00133	89 be 1c 07 00
	00		 mov	 DWORD PTR [esi+1820], edi

; 406  : 		lpGuild->iGuildRival = 0;

  00139	89 be 20 07 00
	00		 mov	 DWORD PTR [esi+1824], edi
  0013f	33 db		 xor	 ebx, ebx
  00141	89 4d e0	 mov	 DWORD PTR tv404[ebp], ecx
  00144	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL6@GDGuildDes:

; 409  : 		{
; 410  : 			int iGuildMemberIndex = lpGuild->Index[n];
; 411  : 
; 412  : 			if ( lpGuild->Use[n] > 0 && iGuildMemberIndex != -1 )

  00150	80 bc 3e 40 04
	00 00 00	 cmp	 BYTE PTR [esi+edi+1088], 0
  00158	8b 55 e0	 mov	 edx, DWORD PTR tv404[ebp]
  0015b	0f bf 02	 movsx	 eax, WORD PTR [edx]
  0015e	0f 86 8e 00 00
	00		 jbe	 $LN5@GDGuildDes
  00164	83 f8 ff	 cmp	 eax, -1
  00167	0f 84 85 00 00
	00		 je	 $LN5@GDGuildDes

; 413  : 			{
; 414  : 				LPOBJ lpObj = &gObj[iGuildMemberIndex];

  0016d	8b f0		 mov	 esi, eax
  0016f	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00175	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 415  : 				
; 416  : 				if ( lpObj == NULL )

  0017b	74 72		 je	 SHORT $LN27@GDGuildDes

; 417  : 				{
; 418  : 					continue;
; 419  : 				}
; 420  : 
; 421  : 				if ( gObjIsConnected(iGuildMemberIndex) == FALSE )

  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00183	83 c4 04	 add	 esp, 4
  00186	85 c0		 test	 eax, eax
  00188	74 65		 je	 SHORT $LN27@GDGuildDes

; 422  : 				{
; 423  : 					continue;
; 424  : 				}
; 425  : 
; 426  : 				gObjNotifyUpdateUnionV1(lpObj);

  0018a	56		 push	 esi
  0018b	e8 00 00 00 00	 call	 ?gObjNotifyUpdateUnionV1@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUpdateUnionV1

; 427  : 				gObjNotifyUpdateUnionV2(lpObj);

  00190	56		 push	 esi
  00191	e8 00 00 00 00	 call	 ?gObjNotifyUpdateUnionV2@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUpdateUnionV2

; 428  : 				lpObj->lpGuild = NULL;
; 429  : 				lpObj->GuildNumber = 0;
; 430  : 				lpObj->GuildStatus = -1;
; 431  : 				lpObj->iGuildUnionTimeStamp = 0;
; 432  : 
; 433  : 				GCResultSend(n,0x53, 1);

  00196	6a 01		 push	 1
  00198	33 c0		 xor	 eax, eax
  0019a	6a 53		 push	 83			; 00000053H
  0019c	57		 push	 edi
  0019d	89 86 38 04 00
	00		 mov	 DWORD PTR [esi+1080], eax
  001a3	89 86 34 04 00
	00		 mov	 DWORD PTR [esi+1076], eax
  001a9	c7 86 48 04 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+1096], -1
  001b3	89 86 4c 04 00
	00		 mov	 DWORD PTR [esi+1100], eax
  001b9	e8 00 00 00 00	 call	 ?GCResultSend@@YAXHEE@Z	; GCResultSend

; 434  : 				GCGuildViewportDelNow(lpObj->m_Index, FALSE);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	6a 00		 push	 0
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ?GCGuildViewportDelNow@@YAXHH@Z ; GCGuildViewportDelNow

; 435  : 
; 436  : 				LogAddTD(lMsg.Get(MSGGET(1, 178)), gObj[n].Name);

  001c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ce	83 c4 1c	 add	 esp, 28			; 0000001cH
  001d1	8d 54 0b 77	 lea	 edx, DWORD PTR [ebx+ecx+119]
  001d5	52		 push	 edx
  001d6	68 b2 01 00 00	 push	 434			; 000001b2H
  001db	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001e0	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001e5	50		 push	 eax
  001e6	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001ec	83 c4 08	 add	 esp, 8
$LN27@GDGuildDes:
  001ef	8b 75 dc	 mov	 esi, DWORD PTR _lpGuild$213969[ebp]
$LN5@GDGuildDes:

; 407  : 
; 408  : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  001f2	83 45 e0 02	 add	 DWORD PTR tv404[ebp], 2
  001f6	81 c3 50 2b 00
	00		 add	 ebx, 11088		; 00002b50H
  001fc	47		 inc	 edi
  001fd	81 fb 00 89 0d
	00		 cmp	 ebx, 887040		; 000d8900H
  00203	0f 8c 47 ff ff
	ff		 jl	 $LL6@GDGuildDes

; 437  : 			}
; 438  : 		}
; 439  : 
; 440  : 		UnionManager.DelUnion(lpGuild->Number);

  00209	8b 06		 mov	 eax, DWORD PTR [esi]
  0020b	50		 push	 eax
  0020c	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  00211	e8 00 00 00 00	 call	 ?DelUnion@TUnion@@QAEHH@Z ; TUnion::DelUnion

; 441  : 		Guild.DeleteGuild(szGuildName, szMaster);

  00216	8d 4d f0	 lea	 ecx, DWORD PTR _szMaster$[ebp]
  00219	51		 push	 ecx
  0021a	8d 55 e4	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  0021d	52		 push	 edx
  0021e	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00223	e8 00 00 00 00	 call	 ?DeleteGuild@CGuildClass@@QAEHPAD0@Z ; CGuildClass::DeleteGuild

; 442  : 
; 443  : 		LogAdd(lMsg.Get(MSGGET(1, 179)), szGuildName, szMaster);

  00228	8d 45 f0	 lea	 eax, DWORD PTR _szMaster$[ebp]
  0022b	50		 push	 eax
  0022c	8d 4d e4	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  0022f	51		 push	 ecx
  00230	68 b3 01 00 00	 push	 435			; 000001b3H
  00235	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0023a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0023f	50		 push	 eax
  00240	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00246	83 c4 0c	 add	 esp, 12			; 0000000cH
  00249	5b		 pop	 ebx
$LN10@GDGuildDes:

; 444  : 	}
; 445  : }

  0024a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024d	5f		 pop	 edi
  0024e	33 cd		 xor	 ecx, ebp
  00250	5e		 pop	 esi
  00251	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00256	8b e5		 mov	 esp, ebp
  00258	5d		 pop	 ebp
  00259	c3		 ret	 0
?GDGuildDestroyRecv@@YAXPAUSDHP_GUILDDESTROY_RESULT@@@Z ENDP ; GDGuildDestroyRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildMemberAdd@@YAXHPAD0@Z			; GDGuildMemberAdd
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildMemberAdd@@YAXHPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 25
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_Name$ = 12						; size = 4
_MemberId$ = 16						; size = 4
?GDGuildMemberAdd@@YAXHPAD0@Z PROC			; GDGuildMemberAdd, COMDAT

; 457  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _MemberId$[ebp]

; 458  : 	SDHP_GUILDMEMBERADD pMsg;
; 459  : 
; 460  : 	pMsg.h.c = 0xC1;
; 461  : 	pMsg.h.headcode = 0x32;
; 462  : 	pMsg.h.size = sizeof(pMsg);
; 463  : 	pMsg.NumberH = SET_NUMBERH(aIndex);

  00013	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _Name$[ebp]
  00019	53		 push	 ebx
  0001a	8b da		 mov	 ebx, edx

; 464  : 	pMsg.NumberL = SET_NUMBERL(aIndex);

  0001c	88 55 f8	 mov	 BYTE PTR _pMsg$[ebp+24], dl

; 465  : 	pMsg.MemberID[MAX_GUILD_LEN] = 0;
; 466  : 	pMsg.GuildName[MAX_ACCOUNT_LEN] = 0;
; 467  : 	memcpy(pMsg.MemberID, MemberId, MAX_ACCOUNT_LEN);

  0001f	8b 10		 mov	 edx, DWORD PTR [eax]
  00021	89 55 ec	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  00024	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00027	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0002b	89 55 f0	 mov	 DWORD PTR _pMsg$[ebp+16], edx

; 468  : 	memcpy(pMsg.GuildName, Name, MAX_GUILD_LEN);

  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+20], ax
  00034	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 469  : 
; 470  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00037	6a 19		 push	 25			; 00000019H
  00039	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0003c	51		 push	 ecx
  0003d	c1 eb 08	 shr	 ebx, 8
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00045	c6 45 e0 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00049	66 c7 45 e1 19
	32		 mov	 WORD PTR _pMsg$[ebp+1], 12825 ; 00003219H
  0004f	88 5d f7	 mov	 BYTE PTR _pMsg$[ebp+23], bl
  00052	89 55 e3	 mov	 DWORD PTR _pMsg$[ebp+3], edx
  00055	89 45 e7	 mov	 DWORD PTR _pMsg$[ebp+7], eax
  00058	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 471  : }

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00060	33 cd		 xor	 ecx, ebp
  00062	5b		 pop	 ebx
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?GDGuildMemberAdd@@YAXHPAD0@Z ENDP			; GDGuildMemberAdd
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildMemberAddResult@@YAXPAUSDHP_GUILDMEMBERADD_RESULT@@@Z ; GDGuildMemberAddResult
EXTRN	?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z:PROC ; CGuildClass::AddMember
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildMemberAddResult@@YAXPAUSDHP_GUILDMEMBERADD_RESULT@@@Z
_TEXT	SEGMENT
_HereUserIndex$ = -32					; size = 4
_szMember$ = -28					; size = 11
_szGuildName$ = -16					; size = 9
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GDGuildMemberAddResult@@YAXPAUSDHP_GUILDMEMBERADD_RESULT@@@Z PROC ; GDGuildMemberAddResult, COMDAT

; 474  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 475  : 	_GUILD_INFO_STRUCT * lpNode;
; 476  : 	int aIndex = -1;
; 477  : 	int HereUserIndex=-1;
; 478  : 	char szMember[MAX_ACCOUNT_LEN+1];
; 479  : 	char szGuildName[MAX_GUILD_LEN+1];
; 480  : 	szMember[MAX_ACCOUNT_LEN] = 0;
; 481  : 	szGuildName[MAX_GUILD_LEN] = 0;
; 482  : 
; 483  : 	memcpy(szMember, lpMsg->MemberID, MAX_ACCOUNT_LEN);

  00015	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00018	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0001b	66 8b 56 18	 mov	 dx, WORD PTR [esi+24]
  0001f	33 db		 xor	 ebx, ebx
  00021	57		 push	 edi
  00022	83 cf ff	 or	 edi, -1

; 484  : 	memcpy(szGuildName, lpMsg->GuildName, MAX_GUILD_LEN);
; 485  : 
; 486  : 	if ( lpMsg->Flag == 1 )

  00025	80 7e 04 01	 cmp	 BYTE PTR [esi+4], 1
  00029	89 45 e4	 mov	 DWORD PTR _szMember$[ebp], eax
  0002c	8b 46 07	 mov	 eax, DWORD PTR [esi+7]
  0002f	89 4d e8	 mov	 DWORD PTR _szMember$[ebp+4], ecx
  00032	8b 4e 0b	 mov	 ecx, DWORD PTR [esi+11]
  00035	89 7d e0	 mov	 DWORD PTR _HereUserIndex$[ebp], edi
  00038	88 5d ee	 mov	 BYTE PTR _szMember$[ebp+10], bl
  0003b	88 5d f8	 mov	 BYTE PTR _szGuildName$[ebp+8], bl
  0003e	66 89 55 ec	 mov	 WORD PTR _szMember$[ebp+8], dx
  00042	89 45 f0	 mov	 DWORD PTR _szGuildName$[ebp], eax
  00045	89 4d f4	 mov	 DWORD PTR _szGuildName$[ebp+4], ecx
  00048	75 72		 jne	 SHORT $LN12@GDGuildMem

; 487  : 	{
; 488  : 		aIndex = MAKE_NUMBERW(lpMsg->NumberH, lpMsg->NumberL);

  0004a	0f b6 56 05	 movzx	 edx, BYTE PTR [esi+5]
  0004e	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  00052	66 c1 e2 08	 shl	 dx, 8
  00056	0f b7 fa	 movzx	 edi, dx
  00059	0b f8		 or	 edi, eax

; 489  : 
; 490  : 		if ( gObjIsConnected(aIndex) == TRUE )

  0005b	57		 push	 edi
  0005c	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00061	83 c4 04	 add	 esp, 4
  00064	83 f8 01	 cmp	 eax, 1
  00067	75 53		 jne	 SHORT $LN12@GDGuildMem

; 491  : 		{
; 492  : 			if ( strcmp(szMember, gObj[aIndex].Name) == 0 )

  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006f	8b cf		 mov	 ecx, edi
  00071	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00077	8d 4c 11 77	 lea	 ecx, DWORD PTR [ecx+edx+119]
  0007b	8d 45 e4	 lea	 eax, DWORD PTR _szMember$[ebp]
  0007e	8b ff		 npad	 2
$LL8@GDGuildMem:
  00080	8a 10		 mov	 dl, BYTE PTR [eax]
  00082	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00084	75 1a		 jne	 SHORT $LN9@GDGuildMem
  00086	3a d3		 cmp	 dl, bl
  00088	74 12		 je	 SHORT $LN10@GDGuildMem
  0008a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0008d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00090	75 0e		 jne	 SHORT $LN9@GDGuildMem
  00092	83 c0 02	 add	 eax, 2
  00095	83 c1 02	 add	 ecx, 2
  00098	3a d3		 cmp	 dl, bl
  0009a	75 e4		 jne	 SHORT $LL8@GDGuildMem
$LN10@GDGuildMem:
  0009c	33 c0		 xor	 eax, eax
  0009e	eb 05		 jmp	 SHORT $LN11@GDGuildMem
$LN9@GDGuildMem:
  000a0	1b c0		 sbb	 eax, eax
  000a2	83 d8 ff	 sbb	 eax, -1
$LN11@GDGuildMem:
  000a5	3b c3		 cmp	 eax, ebx
  000a7	75 13		 jne	 SHORT $LN12@GDGuildMem

; 493  : 			{
; 494  : 				GCResultSend(aIndex, 0x51, lpMsg->Result);

  000a9	0f b6 46 03	 movzx	 eax, BYTE PTR [esi+3]
  000ad	50		 push	 eax
  000ae	6a 51		 push	 81			; 00000051H
  000b0	57		 push	 edi
  000b1	e8 00 00 00 00	 call	 ?GCResultSend@@YAXHEE@Z	; GCResultSend
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 495  : 				HereUserIndex = aIndex;

  000b9	89 7d e0	 mov	 DWORD PTR _HereUserIndex$[ebp], edi
$LN12@GDGuildMem:

; 496  : 			}
; 497  : 		}
; 498  : 	}
; 499  : 
; 500  : 	if ( lpMsg->Result == 1 )

  000bc	80 7e 03 01	 cmp	 BYTE PTR [esi+3], 1
  000c0	0f 85 82 00 00
	00		 jne	 $LN1@GDGuildMem

; 501  : 	{
; 502  : 		lpNode = Guild.AddMember(szGuildName, szMember, HereUserIndex, -1, 0, lpMsg->pServer);

  000c6	0f bf 4e 1c	 movsx	 ecx, WORD PTR [esi+28]
  000ca	8b 55 e0	 mov	 edx, DWORD PTR _HereUserIndex$[ebp]
  000cd	51		 push	 ecx
  000ce	53		 push	 ebx
  000cf	6a ff		 push	 -1
  000d1	52		 push	 edx
  000d2	8d 45 e4	 lea	 eax, DWORD PTR _szMember$[ebp]
  000d5	50		 push	 eax
  000d6	8d 4d f0	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  000d9	51		 push	 ecx
  000da	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000df	e8 00 00 00 00	 call	 ?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z ; CGuildClass::AddMember

; 503  : 
; 504  : 		if ( aIndex >= 0 && lpNode != NULL )

  000e4	3b fb		 cmp	 edi, ebx
  000e6	7c 60		 jl	 SHORT $LN1@GDGuildMem
  000e8	3b c3		 cmp	 eax, ebx
  000ea	74 5c		 je	 SHORT $LN1@GDGuildMem

; 505  : 		{
; 506  : 			gObj[aIndex].lpGuild = lpNode;

  000ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000f2	8b cf		 mov	 ecx, edi
  000f4	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  000fa	89 84 11 38 04
	00 00		 mov	 DWORD PTR [ecx+edx+1080], eax

; 507  : 			gObj[aIndex].GuildStatus = 0;

  00101	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00107	89 9c 11 48 04
	00 00		 mov	 DWORD PTR [ecx+edx+1096], ebx

; 508  : 			gObj[aIndex].GuildNumber = lpNode->Number;

  0010e	8b 00		 mov	 eax, DWORD PTR [eax]
  00110	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00116	89 84 11 34 04
	00 00		 mov	 DWORD PTR [ecx+edx+1076], eax

; 509  : 			gObj[aIndex].iGuildUnionTimeStamp = 0;

  0011d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00122	89 9c 01 4c 04
	00 00		 mov	 DWORD PTR [ecx+eax+1100], ebx

; 510  : 			GCGuildViewportNowPaint(aIndex, szGuildName, gObj[aIndex].lpGuild->Mark, FALSE);

  00129	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0012f	8b 84 11 38 04
	00 00		 mov	 eax, DWORD PTR [ecx+edx+1080]
  00136	53		 push	 ebx
  00137	83 c0 0d	 add	 eax, 13			; 0000000dH
  0013a	50		 push	 eax
  0013b	8d 4d f0	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  0013e	51		 push	 ecx
  0013f	57		 push	 edi
  00140	e8 00 00 00 00	 call	 ?GCGuildViewportNowPaint@@YAXHPADPAEH@Z ; GCGuildViewportNowPaint
  00145	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@GDGuildMem:

; 511  : 		}
; 512  : 	}
; 513  : }

  00148	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	33 cd		 xor	 ecx, ebp
  0014f	5b		 pop	 ebx
  00150	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c3		 ret	 0
?GDGuildMemberAddResult@@YAXPAUSDHP_GUILDMEMBERADD_RESULT@@@Z ENDP ; GDGuildMemberAddResult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildMemberDel@@YAXHPAD0@Z			; GDGuildMemberDel
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildMemberDel@@YAXHPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -28						; size = 23
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_Name$ = 12						; size = 4
_MemberId$ = 16						; size = 4
?GDGuildMemberDel@@YAXHPAD0@Z PROC			; GDGuildMemberDel, COMDAT

; 525  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _MemberId$[ebp]

; 526  : 	SDHP_GUILDMEMBERDEL pMsg;
; 527  : 
; 528  : 	pMsg.h.c = 0xC1;
; 529  : 	pMsg.h.headcode = 0x33;
; 530  : 	pMsg.h.size = sizeof(pMsg);
; 531  : 	pMsg.NumberH = SET_NUMBERH(aIndex);

  00013	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _Name$[ebp]
  00019	53		 push	 ebx
  0001a	8b da		 mov	 ebx, edx

; 532  : 	pMsg.NumberL = SET_NUMBERL(aIndex);

  0001c	88 55 e8	 mov	 BYTE PTR _pMsg$[ebp+4], dl

; 533  : 	memcpy(pMsg.MemberID, MemberId, MAX_ACCOUNT_LEN);

  0001f	8b 10		 mov	 edx, DWORD PTR [eax]
  00021	89 55 f1	 mov	 DWORD PTR _pMsg$[ebp+13], edx
  00024	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00027	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0002b	89 55 f5	 mov	 DWORD PTR _pMsg$[ebp+17], edx

; 534  : 	memcpy(pMsg.GuildName, Name, MAX_GUILD_LEN);

  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+21], ax
  00034	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 535  : 
; 536  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00037	6a 17		 push	 23			; 00000017H
  00039	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0003c	51		 push	 ecx
  0003d	c1 eb 08	 shr	 ebx, 8
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00045	c6 45 e4 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00049	66 c7 45 e5 17
	33		 mov	 WORD PTR _pMsg$[ebp+1], 13079 ; 00003317H
  0004f	88 5d e7	 mov	 BYTE PTR _pMsg$[ebp+3], bl
  00052	89 55 e9	 mov	 DWORD PTR _pMsg$[ebp+5], edx
  00055	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  00058	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 537  : }

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00060	33 cd		 xor	 ecx, ebp
  00062	5b		 pop	 ebx
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?GDGuildMemberDel@@YAXHPAD0@Z ENDP			; GDGuildMemberDel
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildMemberDelResult@@YAXPAUSDHP_GUILDMEMBERDEL_RESULT@@@Z ; GDGuildMemberDelResult
EXTRN	?DelMember@CGuildClass@@QAEHPAD0@Z:PROC		; CGuildClass::DelMember
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildMemberDelResult@@YAXPAUSDHP_GUILDMEMBERDEL_RESULT@@@Z
_TEXT	SEGMENT
_szGuildName$ = -28					; size = 9
_szMember$ = -16					; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GDGuildMemberDelResult@@YAXPAUSDHP_GUILDMEMBERDEL_RESULT@@@Z PROC ; GDGuildMemberDelResult, COMDAT

; 540  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 541  : 	int aIndex = -1;
; 542  : 	char szMember[MAX_ACCOUNT_LEN+1];
; 543  : 	char szGuildName[MAX_GUILD_LEN+1];
; 544  : 	szMember[MAX_ACCOUNT_LEN] = 0;
; 545  : 	szGuildName[MAX_GUILD_LEN] = 0;
; 546  : 
; 547  : 	memcpy(szMember, lpMsg->MemberID, MAX_ACCOUNT_LEN);

  00015	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00018	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0001b	66 8b 56 18	 mov	 dx, WORD PTR [esi+24]
  0001f	89 45 f0	 mov	 DWORD PTR _szMember$[ebp], eax

; 548  : 	memcpy(szGuildName, lpMsg->GuildName, MAX_GUILD_LEN);

  00022	8b 46 07	 mov	 eax, DWORD PTR [esi+7]
  00025	89 4d f4	 mov	 DWORD PTR _szMember$[ebp+4], ecx
  00028	8b 4e 0b	 mov	 ecx, DWORD PTR [esi+11]
  0002b	83 cb ff	 or	 ebx, -1

; 549  : 
; 550  : 	if ( lpMsg->Flag == 1 )

  0002e	80 7e 04 01	 cmp	 BYTE PTR [esi+4], 1
  00032	57		 push	 edi
  00033	c6 45 fa 00	 mov	 BYTE PTR _szMember$[ebp+10], 0
  00037	c6 45 ec 00	 mov	 BYTE PTR _szGuildName$[ebp+8], 0
  0003b	66 89 55 f8	 mov	 WORD PTR _szMember$[ebp+8], dx
  0003f	89 45 e4	 mov	 DWORD PTR _szGuildName$[ebp], eax
  00042	89 4d e8	 mov	 DWORD PTR _szGuildName$[ebp+4], ecx
  00045	0f 85 b9 00 00
	00		 jne	 $LN28@GDGuildMem@2

; 551  : 	{
; 552  : 		aIndex = MAKE_NUMBERW(lpMsg->NumberH, lpMsg->NumberL);

  0004b	0f b6 56 05	 movzx	 edx, BYTE PTR [esi+5]
  0004f	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  00053	66 c1 e2 08	 shl	 dx, 8
  00057	0f b7 da	 movzx	 ebx, dx
  0005a	0b d8		 or	 ebx, eax

; 553  : 
; 554  : 		if ( gObjIsConnected(aIndex) == TRUE )

  0005c	53		 push	 ebx
  0005d	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00062	83 c4 04	 add	 esp, 4
  00065	83 f8 01	 cmp	 eax, 1
  00068	75 6f		 jne	 SHORT $LN14@GDGuildMem@2

; 555  : 		{
; 556  : 			if ( strcmp(szMember, gObj[aIndex].Name) == 0 )

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00070	8b fb		 mov	 edi, ebx
  00072	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00078	8d 4c 0f 77	 lea	 ecx, DWORD PTR [edi+ecx+119]
  0007c	8d 45 f0	 lea	 eax, DWORD PTR _szMember$[ebp]
  0007f	90		 npad	 1
$LL20@GDGuildMem@2:
  00080	8a 10		 mov	 dl, BYTE PTR [eax]
  00082	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00084	75 1a		 jne	 SHORT $LN21@GDGuildMem@2
  00086	84 d2		 test	 dl, dl
  00088	74 12		 je	 SHORT $LN22@GDGuildMem@2
  0008a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0008d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00090	75 0e		 jne	 SHORT $LN21@GDGuildMem@2
  00092	83 c0 02	 add	 eax, 2
  00095	83 c1 02	 add	 ecx, 2
  00098	84 d2		 test	 dl, dl
  0009a	75 e4		 jne	 SHORT $LL20@GDGuildMem@2
$LN22@GDGuildMem@2:
  0009c	33 c0		 xor	 eax, eax
  0009e	eb 05		 jmp	 SHORT $LN23@GDGuildMem@2
$LN21@GDGuildMem@2:
  000a0	1b c0		 sbb	 eax, eax
  000a2	83 d8 ff	 sbb	 eax, -1
$LN23@GDGuildMem@2:
  000a5	85 c0		 test	 eax, eax
  000a7	75 21		 jne	 SHORT $LN13@GDGuildMem@2

; 557  : 			{
; 558  : 				GCResultSend(aIndex, 0x53, lpMsg->Result);

  000a9	0f b6 56 03	 movzx	 edx, BYTE PTR [esi+3]
  000ad	52		 push	 edx
  000ae	6a 53		 push	 83			; 00000053H
  000b0	53		 push	 ebx
  000b1	e8 00 00 00 00	 call	 ?GCResultSend@@YAXHEE@Z	; GCResultSend

; 559  : 				LogAdd(lMsg.Get(MSGGET(1, 180)), gObj[aIndex].Name);

  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000be	8d 4c 07 77	 lea	 ecx, DWORD PTR [edi+eax+119]
  000c2	51		 push	 ecx
  000c3	68 b4 01 00 00	 push	 436			; 000001b4H

; 560  : 			}
; 561  : 			else

  000c8	eb 26		 jmp	 SHORT $LN29@GDGuildMem@2
$LN13@GDGuildMem@2:

; 562  : 			{
; 563  : 				GCResultSend(aIndex, 0x53, 5);

  000ca	6a 05		 push	 5
  000cc	6a 53		 push	 83			; 00000053H
  000ce	53		 push	 ebx
  000cf	e8 00 00 00 00	 call	 ?GCResultSend@@YAXHEE@Z	; GCResultSend
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 564  : 			}
; 565  : 		}
; 566  : 		else

  000d7	eb 2b		 jmp	 SHORT $LN28@GDGuildMem@2
$LN14@GDGuildMem@2:

; 567  : 		{
; 568  : 			LogAdd(lMsg.Get(MSGGET(1, 181)), gObj[aIndex].Name);

  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000de	8b d3		 mov	 edx, ebx
  000e0	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000e6	8d 4c 02 77	 lea	 ecx, DWORD PTR [edx+eax+119]
  000ea	51		 push	 ecx
  000eb	68 b5 01 00 00	 push	 437			; 000001b5H
$LN29@GDGuildMem@2:
  000f0	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000f5	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000fa	50		 push	 eax
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00101	83 c4 08	 add	 esp, 8
$LN28@GDGuildMem@2:

; 569  : 		}
; 570  : 	}
; 571  : 
; 572  : 	if ( lpMsg->Result == 1 )

  00104	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  00107	3c 01		 cmp	 al, 1
  00109	0f 85 12 01 00
	00		 jne	 $LN10@GDGuildMem@2

; 573  : 	{
; 574  : 		int iMember = 0;

  0010f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00115	33 f6		 xor	 esi, esi
  00117	81 c7 34 04 00
	00		 add	 edi, 1076		; 00000434H
  0011d	8d 49 00	 npad	 3
$LL9@GDGuildMem@2:

; 575  : 
; 576  : 		while ( true )
; 577  : 		{
; 578  : 			if ( gObj[iMember].Connected > PLAYER_LOGGED)

  00120	83 bf d0 fb ff
	ff 02		 cmp	 DWORD PTR [edi-1072], 2
  00127	7e 50		 jle	 SHORT $LN4@GDGuildMem@2

; 579  : 			{
; 580  : 				if ( gObj[iMember].GuildNumber > 0 )

  00129	83 3f 00	 cmp	 DWORD PTR [edi], 0
  0012c	7e 4b		 jle	 SHORT $LN4@GDGuildMem@2

; 581  : 				{
; 582  : 					if ( gObj[iMember].Name[0] == szMember[0] && gObj[iMember].Name[1] == szMember[1] )

  0012e	8a 55 f0	 mov	 dl, BYTE PTR _szMember$[ebp]
  00131	38 97 43 fc ff
	ff		 cmp	 BYTE PTR [edi-957], dl
  00137	8d 87 43 fc ff
	ff		 lea	 eax, DWORD PTR [edi-957]
  0013d	75 3a		 jne	 SHORT $LN4@GDGuildMem@2
  0013f	8a 4d f1	 mov	 cl, BYTE PTR _szMember$[ebp+1]
  00142	38 8f 44 fc ff
	ff		 cmp	 BYTE PTR [edi-956], cl
  00148	75 2f		 jne	 SHORT $LN4@GDGuildMem@2

; 583  : 					{
; 584  : 						if ( strcmp(gObj[iMember].Name, szMember) == 0 )

  0014a	8d 4d f0	 lea	 ecx, DWORD PTR _szMember$[ebp]
  0014d	8d 49 00	 npad	 3
$LL24@GDGuildMem@2:
  00150	8a 10		 mov	 dl, BYTE PTR [eax]
  00152	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00154	75 1a		 jne	 SHORT $LN25@GDGuildMem@2
  00156	84 d2		 test	 dl, dl
  00158	74 12		 je	 SHORT $LN26@GDGuildMem@2
  0015a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0015d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00160	75 0e		 jne	 SHORT $LN25@GDGuildMem@2
  00162	83 c0 02	 add	 eax, 2
  00165	83 c1 02	 add	 ecx, 2
  00168	84 d2		 test	 dl, dl
  0016a	75 e4		 jne	 SHORT $LL24@GDGuildMem@2
$LN26@GDGuildMem@2:
  0016c	33 c0		 xor	 eax, eax
  0016e	eb 05		 jmp	 SHORT $LN27@GDGuildMem@2
$LN25@GDGuildMem@2:
  00170	1b c0		 sbb	 eax, eax
  00172	83 d8 ff	 sbb	 eax, -1
$LN27@GDGuildMem@2:
  00175	85 c0		 test	 eax, eax
  00177	74 15		 je	 SHORT $LN19@GDGuildMem@2
$LN4@GDGuildMem@2:

; 594  : 							break;
; 595  : 						}
; 596  : 					}
; 597  : 				}
; 598  : 			}
; 599  : 
; 600  : 			if ( iMember < OBJMAX-1 )

  00179	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  0017f	0f 8d 79 00 00
	00		 jge	 $LN3@GDGuildMem@2

; 601  : 			{
; 602  : 				iMember++;

  00185	46		 inc	 esi
  00186	81 c7 50 2b 00
	00		 add	 edi, 11088		; 00002b50H

; 603  : 			}
; 604  : 			else
; 605  : 			{
; 606  : 				break;
; 607  : 			}
; 608  : 		}

  0018c	eb 92		 jmp	 SHORT $LL9@GDGuildMem@2
$LN19@GDGuildMem@2:

; 585  : 						{
; 586  : 							GCGuildViewportDelNow(iMember, FALSE);

  0018e	33 ff		 xor	 edi, edi
  00190	57		 push	 edi
  00191	56		 push	 esi
  00192	e8 00 00 00 00	 call	 ?GCGuildViewportDelNow@@YAXHH@Z ; GCGuildViewportDelNow

; 587  : 							gObj[iMember].lpGuild = NULL;

  00197	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0019d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a3	89 bc 16 38 04
	00 00		 mov	 DWORD PTR [esi+edx+1080], edi

; 588  : 							gObj[iMember].GuildNumber = 0;

  001aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001af	89 bc 06 34 04
	00 00		 mov	 DWORD PTR [esi+eax+1076], edi

; 589  : 							gObj[iMember].GuildStatus = -1;

  001b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001bc	c7 84 0e 48 04
	00 00 ff ff ff
	ff		 mov	 DWORD PTR [esi+ecx+1096], -1

; 590  : 							gObjNotifyUpdateUnionV1(&gObj[iMember]);

  001c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001cd	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  001d0	50		 push	 eax
  001d1	e8 00 00 00 00	 call	 ?gObjNotifyUpdateUnionV1@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUpdateUnionV1

; 591  : 
; 592  : 							// User is ejected from guild %d %s
; 593  : 							LogAdd(lMsg.Get(MSGGET(1, 182)), aIndex, gObj[iMember].Name);

  001d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001dc	83 c4 0c	 add	 esp, 12			; 0000000cH
  001df	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  001e3	52		 push	 edx
  001e4	53		 push	 ebx
  001e5	68 b6 01 00 00	 push	 438			; 000001b6H
  001ea	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001ef	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001f4	50		 push	 eax
  001f5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  001fb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GDGuildMem@2:

; 609  : 
; 610  : 		Guild.DelMember(szGuildName, szMember);

  001fe	8d 45 f0	 lea	 eax, DWORD PTR _szMember$[ebp]
  00201	50		 push	 eax
  00202	8d 4d e4	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00205	51		 push	 ecx
  00206	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0020b	e8 00 00 00 00	 call	 ?DelMember@CGuildClass@@QAEHPAD0@Z ; CGuildClass::DelMember
  00210	5f		 pop	 edi
  00211	5e		 pop	 esi
  00212	5b		 pop	 ebx

; 615  : 	}
; 616  : }

  00213	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00216	33 cd		 xor	 ecx, ebp
  00218	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021d	8b e5		 mov	 esp, ebp
  0021f	5d		 pop	 ebp
  00220	c3		 ret	 0
$LN10@GDGuildMem@2:

; 611  : 	}
; 612  : 	else
; 613  : 	{
; 614  : 		LogAdd(lMsg.Get(MSGGET(1, 183)), szGuildName, lpMsg->Result);

  00221	0f b6 d0	 movzx	 edx, al
  00224	52		 push	 edx
  00225	8d 45 e4	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  00228	50		 push	 eax
  00229	68 b7 01 00 00	 push	 439			; 000001b7H
  0022e	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00233	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00238	50		 push	 eax
  00239	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 615  : 	}
; 616  : }

  0023f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00242	83 c4 0c	 add	 esp, 12			; 0000000cH
  00245	5f		 pop	 edi
  00246	5e		 pop	 esi
  00247	33 cd		 xor	 ecx, ebp
  00249	5b		 pop	 ebx
  0024a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024f	8b e5		 mov	 esp, ebp
  00251	5d		 pop	 ebp
  00252	c3		 ret	 0
?GDGuildMemberDelResult@@YAXPAUSDHP_GUILDMEMBERDEL_RESULT@@@Z ENDP ; GDGuildMemberDelResult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildUpdate@@YAXPAD0QAEHH@Z			; GDGuildUpdate
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildUpdate@@YAXPAD0QAEHH@Z
_TEXT	SEGMENT
_pMsg$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_Name$ = 8						; size = 4
_Master$ = 12						; size = 4
_Mark$ = 16						; size = 4
_score$ = 20						; size = 4
_count$ = 24						; size = 4
?GDGuildUpdate@@YAXPAD0QAEHH@Z PROC			; GDGuildUpdate, COMDAT

; 619  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _Name$[ebp]

; 620  : 	SDHP_GUILDUPDATE pMsg;
; 621  : 
; 622  : 	pMsg.h.c = 0xC1;
; 623  : 	pMsg.h.headcode = 0x34;
; 624  : 	pMsg.h.size = sizeof(pMsg);
; 625  : 	memcpy(pMsg.GuildName, Name, MAX_GUILD_LEN);

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00018	8b 45 0c	 mov	 eax, DWORD PTR _Master$[ebp]
  0001b	56		 push	 esi
  0001c	8b 75 10	 mov	 esi, DWORD PTR _Mark$[ebp]
  0001f	89 4d c3	 mov	 DWORD PTR _pMsg$[ebp+7], ecx
  00022	57		 push	 edi
  00023	89 55 bf	 mov	 DWORD PTR _pMsg$[ebp+3], edx

; 626  : 	memcpy(pMsg.Mark, Mark, sizeof(pMsg.Mark));
; 627  : 	memcpy(pMsg.Master, Master, MAX_ACCOUNT_LEN);

  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	c6 45 bc c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  0002c	66 c7 45 bd 40
	34		 mov	 WORD PTR _pMsg$[ebp+1], 13376 ; 00003440H
  00032	b9 08 00 00 00	 mov	 ecx, 8
  00037	8d 7d d3	 lea	 edi, DWORD PTR _pMsg$[ebp+23]
  0003a	f3 a5		 rep movsd
  0003c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003f	89 55 c8	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  00042	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

; 628  : 	pMsg.Score = score;

  00046	8b 45 14	 mov	 eax, DWORD PTR _score$[ebp]
  00049	89 4d cc	 mov	 DWORD PTR _pMsg$[ebp+16], ecx

; 629  : 	pMsg.Count = count;

  0004c	8a 4d 18	 mov	 cl, BYTE PTR _count$[ebp]
  0004f	66 89 55 d0	 mov	 WORD PTR _pMsg$[ebp+20], dx

; 630  : 
; 631  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00053	6a 40		 push	 64			; 00000040H
  00055	8d 55 bc	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00058	88 4d f8	 mov	 BYTE PTR _pMsg$[ebp+60], cl
  0005b	52		 push	 edx
  0005c	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00061	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+56], eax
  00064	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 632  : }

  00069	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006c	5f		 pop	 edi
  0006d	33 cd		 xor	 ecx, ebp
  0006f	5e		 pop	 esi
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?GDGuildUpdate@@YAXPAD0QAEHH@Z ENDP			; GDGuildUpdate
_TEXT	ENDS
PUBLIC	?GDGuildUpdateRecv@@YAXPAE@Z			; GDGuildUpdateRecv
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildUpdateRecv@@YAXPAE@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?GDGuildUpdateRecv@@YAXPAE@Z PROC			; GDGuildUpdateRecv, COMDAT

; 636  : 	return;
; 637  : }

  00000	c3		 ret	 0
?GDGuildUpdateRecv@@YAXPAE@Z ENDP			; GDGuildUpdateRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildMemberInfoRequest@@YAXH@Z		; DGGuildMemberInfoRequest
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildMemberInfoRequest@@YAXH@Z
_TEXT	SEGMENT
_pMsg$ = -20						; size = 15
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?DGGuildMemberInfoRequest@@YAXH@Z PROC			; DGGuildMemberInfoRequest, COMDAT

; 648  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]

; 649  : 	SDHP_GUILDMEMBER_INFO_REQUEST pMsg;
; 650  : 
; 651  : 	pMsg.h.set((LPBYTE)&pMsg, 0x35, sizeof(pMsg));
; 652  : 	pMsg.NumberH = SET_NUMBERH(aIndex);
; 653  : 	pMsg.NumberL = SET_NUMBERL(aIndex);
; 654  : 	memcpy(pMsg.MemberID, gObj[aIndex].Name, sizeof(pMsg.MemberID));

  00013	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00019	88 45 f0	 mov	 BYTE PTR _pMsg$[ebp+4], al
  0001c	8b c8		 mov	 ecx, eax
  0001e	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00024	c1 e9 08	 shr	 ecx, 8
  00027	88 4d ef	 mov	 BYTE PTR _pMsg$[ebp+3], cl
  0002a	8d 44 10 77	 lea	 eax, DWORD PTR [eax+edx+119]
  0002e	66 c7 45 ec c1
	0f		 mov	 WORD PTR _pMsg$[ebp], 4033 ; 00000fc1H
  00034	c6 45 ee 35	 mov	 BYTE PTR _pMsg$[ebp+2], 53 ; 00000035H
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d f1	 mov	 DWORD PTR _pMsg$[ebp+5], ecx
  0003d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 655  : 
; 656  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00040	6a 0f		 push	 15			; 0000000fH
  00042	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00045	89 55 f5	 mov	 DWORD PTR _pMsg$[ebp+9], edx
  00048	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0004c	51		 push	 ecx
  0004d	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00052	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+13], ax
  00056	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 657  : }

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005e	33 cd		 xor	 ecx, ebp
  00060	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?DGGuildMemberInfoRequest@@YAXH@Z ENDP			; DGGuildMemberInfoRequest
_TEXT	ENDS
PUBLIC	??_C@_0DK@MKLBBGMP@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLInfo?$FN?5G@ ; `string'
PUBLIC	_lpMsg$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildMemberInfo@@YAXPAUSDHP_GUILDMEMBER_INFO@@@Z ; DGGuildMemberInfo
EXTRN	?GCGuildWarDeclare@@YAXHPAD@Z:PROC		; GCGuildWarDeclare
EXTRN	?GCGuildWarScore@@YAXH@Z:PROC			; GCGuildWarScore
EXTRN	?GCGuildNumber@CDungeonSiege@@QAEXH@Z:PROC	; CDungeonSiege::GCGuildNumber
EXTRN	?g_DungeonSiege@@3VCDungeonSiege@@A:BYTE	; g_DungeonSiege
EXTRN	?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z:PROC ; CCastleSiegeSync::CheckCastleOwnerUnionMember
EXTRN	?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z:PROC ; CCastleSiegeSync::CheckCastleOwnerMember
EXTRN	?g_CastleSiegeSync@@3VCCastleSiegeSync@@A:BYTE	; g_CastleSiegeSync
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?ConnectUser@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@PAD1HH@Z:PROC ; CGuildClass::ConnectUser
EXTRN	?NotifySelfCsJoinSide@CCastleSiege@@QAEXH@Z:PROC ; CCastleSiege::NotifySelfCsJoinSide
EXTRN	?GetCsJoinSide@CCastleSiege@@QAEHPADPAEPA_N@Z:PROC ; CCastleSiege::GetCsJoinSide
EXTRN	?g_CastleSiege@@3VCCastleSiege@@A:BYTE		; g_CastleSiege
EXTRN	?SetServer@CGuildClass@@QAEHPAD0H@Z:PROC	; CGuildClass::SetServer
EXTRN	_memset:PROC
;	COMDAT ??_C@_0DK@MKLBBGMP@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLInfo?$FN?5G@
CONST	SEGMENT
??_C@_0DK@MKLBBGMP@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLInfo?$FN?5G@ DB '['
	DB	'U.System][Guild Status][Info] Guild : %s / [%s][%s] / %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGGuildMemberInfo@@YAXPAUSDHP_GUILDMEMBER_INFO@@@Z
_TEXT	SEGMENT
_lpMsg$GSCopy$ = -308					; size = 4
_pMsg$ = -304						; size = 12
tv585 = -292						; size = 4
tv448 = -292						; size = 4
tv210 = -292						; size = 4
_pGVCount$214142 = -292					; size = 5
_GuildInfoBuf$ = -284					; size = 256
_szName$ = -28						; size = 11
_szGuildName$ = -16					; size = 9
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGGuildMemberInfo@@YAXPAUSDHP_GUILDMEMBER_INFO@@@Z PROC ; DGGuildMemberInfo, COMDAT

; 660  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00018	57		 push	 edi

; 661  : 	BYTE GuildUserBuf[256] = {0};
; 662  : 	BYTE GuildInfoBuf[256] = {0};

  00019	68 ff 00 00 00	 push	 255			; 000000ffH
  0001e	8d 85 e5 fe ff
	ff		 lea	 eax, DWORD PTR _GuildInfoBuf$[ebp+1]
  00024	6a 00		 push	 0
  00026	50		 push	 eax

; 663  : 	PMSG_SIMPLE_GUILDVIEWPORT pMsg;
; 664  : 	char szGuildName[MAX_GUILD_LEN+1];
; 665  : 	char szName[MAX_ACCOUNT_LEN+1];
; 666  : 	
; 667  : 	szGuildName[MAX_GUILD_LEN] = 0;
; 668  : 	szName[MAX_ACCOUNT_LEN] = 0;
; 669  : 	memcpy(szGuildName, lpMsg->GuildName, MAX_GUILD_LEN);

  00027	89 b5 cc fe ff
	ff		 mov	 DWORD PTR _lpMsg$GSCopy$[ebp], esi
  0002d	c6 85 e4 fe ff
	ff 00		 mov	 BYTE PTR _GuildInfoBuf$[ebp], 0
  00034	e8 00 00 00 00	 call	 _memset
  00039	8b 4e 03	 mov	 ecx, DWORD PTR [esi+3]
  0003c	8b 56 07	 mov	 edx, DWORD PTR [esi+7]

; 676  : 	{
; 677  : 		if ( gObj[n].Connected > PLAYER_LOGGED )

  0003f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00045	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  00048	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv448[ebp], eax
  0004e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00051	89 4d f0	 mov	 DWORD PTR _szGuildName$[ebp], ecx
  00054	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00057	89 55 f4	 mov	 DWORD PTR _szGuildName$[ebp+4], edx
  0005a	66 8b 56 14	 mov	 dx, WORD PTR [esi+20]
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	c6 45 f8 00	 mov	 BYTE PTR _szGuildName$[ebp+8], 0
  00065	c6 45 ee 00	 mov	 BYTE PTR _szName$[ebp+10], 0
  00069	89 45 e4	 mov	 DWORD PTR _szName$[ebp], eax
  0006c	89 4d e8	 mov	 DWORD PTR _szName$[ebp+4], ecx
  0006f	66 89 55 ec	 mov	 WORD PTR _szName$[ebp+8], dx
  00073	bb b0 36 00 00	 mov	 ebx, 14000		; 000036b0H
  00078	81 c7 77 a7 40
	09		 add	 edi, 155232119		; 0940a777H
  0007e	8b ff		 npad	 2
$LL16@DGGuildMem:
  00080	83 7f 8d 02	 cmp	 DWORD PTR [edi-115], 2
  00084	7e 35		 jle	 SHORT $LN15@DGGuildMem

; 678  : 		{
; 679  : 			if ( gObj[n].Name[0] == lpMsg->MemberID[0] )

  00086	8a 07		 mov	 al, BYTE PTR [edi]
  00088	3a 46 0c	 cmp	 al, BYTE PTR [esi+12]
  0008b	75 2e		 jne	 SHORT $LN15@DGGuildMem

; 680  : 			{
; 681  : 				if ( strcmp(lpMsg->MemberID, gObj[n].Name ) == 0 )

  0008d	8b cf		 mov	 ecx, edi
  0008f	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
$LL24@DGGuildMem:
  00092	8a 10		 mov	 dl, BYTE PTR [eax]
  00094	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00096	75 1a		 jne	 SHORT $LN25@DGGuildMem
  00098	84 d2		 test	 dl, dl
  0009a	74 12		 je	 SHORT $LN26@DGGuildMem
  0009c	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0009f	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000a2	75 0e		 jne	 SHORT $LN25@DGGuildMem
  000a4	83 c0 02	 add	 eax, 2
  000a7	83 c1 02	 add	 ecx, 2
  000aa	84 d2		 test	 dl, dl
  000ac	75 e4		 jne	 SHORT $LL24@DGGuildMem
$LN26@DGGuildMem:
  000ae	33 c0		 xor	 eax, eax
  000b0	eb 05		 jmp	 SHORT $LN27@DGGuildMem
$LN25@DGGuildMem:
  000b2	1b c0		 sbb	 eax, eax
  000b4	83 d8 ff	 sbb	 eax, -1
$LN27@DGGuildMem:
  000b7	85 c0		 test	 eax, eax
  000b9	74 39		 je	 SHORT $LN22@DGGuildMem
$LN15@DGGuildMem:

; 670  : 	memcpy(szName, lpMsg->MemberID, MAX_ACCOUNT_LEN);
; 671  : 
; 672  : 	int GuildInfoOfs = sizeof(PMSG_SIMPLE_GUILDVIEWPORT_COUNT);
; 673  : 	int GuildUserOfs = sizeof(PMSG_SIMPLE_GUILDVIEWPORT_COUNT);
; 674  : 
; 675  : 	for ( int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  000bb	43		 inc	 ebx
  000bc	81 c7 50 2b 00
	00		 add	 edi, 11088		; 00002b50H
  000c2	81 fb 98 3a 00
	00		 cmp	 ebx, 15000		; 00003a98H
  000c8	7c b6		 jl	 SHORT $LL16@DGGuildMem

; 768  : 					}
; 769  : 
; 770  : 					return;
; 771  : 				}
; 772  : 			}
; 773  : 		}
; 774  : 	}
; 775  : 
; 776  : 	Guild.SetServer(szGuildName, szName, lpMsg->pServer);

  000ca	8b d6		 mov	 edx, esi
  000cc	0f bf 42 1a	 movsx	 eax, WORD PTR [edx+26]
  000d0	50		 push	 eax
  000d1	8d 4d e4	 lea	 ecx, DWORD PTR _szName$[ebp]
  000d4	51		 push	 ecx
  000d5	8d 55 f0	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  000d8	52		 push	 edx
  000d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000de	e8 00 00 00 00	 call	 ?SetServer@CGuildClass@@QAEHPAD0H@Z ; CGuildClass::SetServer
$LN17@DGGuildMem:
  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 777  : }

  000e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e9	33 cd		 xor	 ecx, ebp
  000eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
$LN22@DGGuildMem:

; 682  : 				{
; 683  : //#if(GS_CASTLE==1)
; 684  : 					szGuildName[8] = NULL;
; 685  : 					g_CastleSiege.GetCsJoinSide(szGuildName,&gObj[n].m_btCsJoinSide,&gObj[n].m_bCsGuildInvolved);

  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000f9	8b f3		 mov	 esi, ebx
  000fb	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00101	8d 8c 06 03 1c
	00 00		 lea	 ecx, DWORD PTR [esi+eax+7171]
  00108	51		 push	 ecx
  00109	8d 94 06 02 1c
	00 00		 lea	 edx, DWORD PTR [esi+eax+7170]
  00110	52		 push	 edx
  00111	8d 45 f0	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  00114	50		 push	 eax
  00115	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0011a	c6 45 f8 00	 mov	 BYTE PTR _szGuildName$[ebp+8], 0
  0011e	e8 00 00 00 00	 call	 ?GetCsJoinSide@CCastleSiege@@QAEHPADPAEPA_N@Z ; CCastleSiege::GetCsJoinSide

; 686  : 					g_CastleSiege.NotifySelfCsJoinSide(n);

  00123	53		 push	 ebx
  00124	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00129	e8 00 00 00 00	 call	 ?NotifySelfCsJoinSide@CCastleSiege@@QAEXH@Z ; CCastleSiege::NotifySelfCsJoinSide

; 687  : //#endif
; 688  : 					strcpy(gObj[n].GuildName, szGuildName);

  0012e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00134	8d 4d f0	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00137	8d 94 16 3c 04
	00 00		 lea	 edx, DWORD PTR [esi+edx+1084]
  0013e	8b ff		 npad	 2
$LL19@DGGuildMem:
  00140	8a 01		 mov	 al, BYTE PTR [ecx]
  00142	88 02		 mov	 BYTE PTR [edx], al
  00144	41		 inc	 ecx
  00145	42		 inc	 edx
  00146	84 c0		 test	 al, al
  00148	75 f6		 jne	 SHORT $LL19@DGGuildMem

; 689  : 					gObj[n].lpGuild = Guild.SearchGuild(gObj[n].GuildName);

  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0014f	8d 8c 06 3c 04
	00 00		 lea	 ecx, DWORD PTR [esi+eax+1084]
  00156	51		 push	 ecx
  00157	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0015c	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00161	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00167	89 84 16 38 04
	00 00		 mov	 DWORD PTR [esi+edx+1080], eax

; 690  : 
; 691  : 					if ( gObj[n].lpGuild != NULL )

  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00173	83 bc 06 38 04
	00 00 00	 cmp	 DWORD PTR [esi+eax+1080], 0
  0017b	0f 84 56 02 00
	00		 je	 $LN10@DGGuildMem

; 692  : 					{
; 693  : 						gObj[n].GuildStatus = lpMsg->btGuildStatus;

  00181	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _lpMsg$GSCopy$[ebp]
  00187	0f b6 51 17	 movzx	 edx, BYTE PTR [ecx+23]
  0018b	89 94 06 48 04
	00 00		 mov	 DWORD PTR [esi+eax+1096], edx

; 694  : 						gObj[n].GuildNumber = gObj[n].lpGuild->Number;

  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00197	8b 94 06 38 04
	00 00		 mov	 edx, DWORD PTR [esi+eax+1080]
  0019e	8b 12		 mov	 edx, DWORD PTR [edx]
  001a0	89 94 06 34 04
	00 00		 mov	 DWORD PTR [esi+eax+1076], edx

; 695  : 						Guild.ConnectUser(gObj[n].lpGuild, lpMsg->GuildName, gObj[n].Name, n,  lpMsg->pServer);

  001a7	0f bf 49 1a	 movsx	 ecx, WORD PTR [ecx+26]
  001ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001b0	51		 push	 ecx
  001b1	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv448[ebp]
  001b7	53		 push	 ebx
  001b8	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  001bc	52		 push	 edx
  001bd	8b 94 06 38 04
	00 00		 mov	 edx, DWORD PTR [esi+eax+1080]
  001c4	51		 push	 ecx
  001c5	52		 push	 edx
  001c6	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  001cb	e8 00 00 00 00	 call	 ?ConnectUser@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@PAD1HH@Z ; CGuildClass::ConnectUser

; 696  : 	
; 697  : 						if ( strlen(gObj[n].lpGuild->Notice) > 0 )

  001d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d6	8b bc 0e 38 04
	00 00		 mov	 edi, DWORD PTR [esi+ecx+1080]
  001dd	81 c7 9c 05 00
	00		 add	 edi, 1436		; 0000059cH
  001e3	8b c7		 mov	 eax, edi
  001e5	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  001e8	89 95 dc fe ff
	ff		 mov	 DWORD PTR tv585[ebp], edx
  001ee	8b ff		 npad	 2
$LL28@DGGuildMem:
  001f0	8a 10		 mov	 dl, BYTE PTR [eax]
  001f2	40		 inc	 eax
  001f3	84 d2		 test	 dl, dl
  001f5	75 f9		 jne	 SHORT $LL28@DGGuildMem
  001f7	2b 85 dc fe ff
	ff		 sub	 eax, DWORD PTR tv585[ebp]
  001fd	74 12		 je	 SHORT $LN9@DGGuildMem

; 698  : 						{
; 699  : 							GCServerMsgStringSend(gObj[n].lpGuild->Notice, n, 2);

  001ff	6a 02		 push	 2
  00201	53		 push	 ebx
  00202	57		 push	 edi
  00203	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00208	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0020e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@DGGuildMem:

; 700  : 						}
; 701  : 
; 702  : 						LogAddTD("[U.System][Guild Status][Info] Guild : %s / [%s][%s] / %d", szGuildName, gObj[n].AccountID, szName, gObj[n].GuildStatus);

  00211	8b 84 0e 48 04
	00 00		 mov	 eax, DWORD PTR [esi+ecx+1096]
  00218	50		 push	 eax
  00219	8d 55 e4	 lea	 edx, DWORD PTR _szName$[ebp]
  0021c	52		 push	 edx
  0021d	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  00221	50		 push	 eax
  00222	8d 4d f0	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00225	51		 push	 ecx
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MKLBBGMP@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLInfo?$FN?5G@
  0022b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 703  : 
; 704  : 						LogAddTD(lMsg.Get(MSGGET(1, 184)), gObj[n].AccountID, szName, szGuildName);

  00231	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00237	83 c4 14	 add	 esp, 20			; 00000014H
  0023a	8d 55 f0	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  0023d	52		 push	 edx
  0023e	8d 45 e4	 lea	 eax, DWORD PTR _szName$[ebp]
  00241	50		 push	 eax
  00242	8d 54 0e 6c	 lea	 edx, DWORD PTR [esi+ecx+108]
  00246	52		 push	 edx
  00247	68 b8 01 00 00	 push	 440			; 000001b8H
  0024c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00251	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00256	50		 push	 eax
  00257	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 705  : 
; 706  : 						pMsg.GuildNumber = gObj[n].GuildNumber;

  0025d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00263	8b 84 3e 34 04
	00 00		 mov	 eax, DWORD PTR [esi+edi+1076]

; 707  : 						pMsg.NumberH = SET_NUMBERH(n) & 0x7F;

  0026a	8b cb		 mov	 ecx, ebx
  0026c	c1 e9 08	 shr	 ecx, 8
  0026f	80 e1 7f	 and	 cl, 127			; 0000007fH
  00272	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _pMsg$[ebp], eax

; 708  : 						pMsg.NumberL = SET_NUMBERL(n);
; 709  : 
; 710  : 						if ( strcmp(gObj[n].lpGuild->Names[0], gObj[n].Name) == 0 ) // Case Guild Master

  00278	8b 84 3e 38 04
	00 00		 mov	 eax, DWORD PTR [esi+edi+1080]
  0027f	83 c4 10	 add	 esp, 16			; 00000010H
  00282	88 8d d7 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+7], cl
  00288	88 9d d8 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+8], bl
  0028e	8d 4c 3e 77	 lea	 ecx, DWORD PTR [esi+edi+119]
  00292	83 c0 2f	 add	 eax, 47			; 0000002fH
$LL29@DGGuildMem:
  00295	8a 10		 mov	 dl, BYTE PTR [eax]
  00297	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00299	75 1a		 jne	 SHORT $LN30@DGGuildMem
  0029b	84 d2		 test	 dl, dl
  0029d	74 12		 je	 SHORT $LN31@DGGuildMem
  0029f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  002a2	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  002a5	75 0e		 jne	 SHORT $LN30@DGGuildMem
  002a7	83 c0 02	 add	 eax, 2
  002aa	83 c1 02	 add	 ecx, 2
  002ad	84 d2		 test	 dl, dl
  002af	75 e4		 jne	 SHORT $LL29@DGGuildMem
$LN31@DGGuildMem:
  002b1	33 c0		 xor	 eax, eax
  002b3	eb 05		 jmp	 SHORT $LN32@DGGuildMem
$LN30@DGGuildMem:
  002b5	1b c0		 sbb	 eax, eax
  002b7	83 d8 ff	 sbb	 eax, -1
$LN32@DGGuildMem:
  002ba	85 c0		 test	 eax, eax
  002bc	75 07		 jne	 SHORT $LN8@DGGuildMem

; 711  : 						{
; 712  : 							pMsg.NumberH |= 0x80;

  002be	80 8d d7 fe ff
	ff 80		 or	 BYTE PTR _pMsg$[ebp+7], 128 ; 00000080H
$LN8@DGGuildMem:

; 713  : 						}
; 714  : 
; 715  : 						pMsg.btGuildStatus = gObj[n].GuildStatus;
; 716  : 
; 717  : 						if ( gObj[n].lpGuild != NULL )

  002c5	8b 84 3e 38 04
	00 00		 mov	 eax, DWORD PTR [esi+edi+1080]
  002cc	8a 94 3e 48 04
	00 00		 mov	 dl, BYTE PTR [esi+edi+1096]
  002d3	88 95 d4 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+4], dl
  002d9	85 c0		 test	 eax, eax
  002db	74 0e		 je	 SHORT $LN7@DGGuildMem

; 718  : 						{
; 719  : 							pMsg.btGuildType = gObj[n].lpGuild->btGuildType;

  002dd	8a 80 18 07 00
	00		 mov	 al, BYTE PTR [eax+1816]
  002e3	88 85 d5 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+5], al

; 720  : 						}
; 721  : 						else

  002e9	eb 07		 jmp	 SHORT $LN6@DGGuildMem
$LN7@DGGuildMem:

; 722  : 						{
; 723  : 							pMsg.btGuildType = G_TYPE_NONE;

  002eb	c6 85 d5 fe ff
	ff ff		 mov	 BYTE PTR _pMsg$[ebp+5], 255 ; 000000ffH
$LN6@DGGuildMem:

; 724  : 						}
; 725  : 
; 726  : 						//Season 4.5 Addon start
; 727  :                         if(g_CastleSiegeSync.CheckCastleOwnerMember(gObj[n].m_Index) == 1 ||
; 728  :                            g_CastleSiegeSync.CheckCastleOwnerUnionMember(gObj[n].m_Index) == 1)

  002f2	8b 0c 3e	 mov	 ecx, DWORD PTR [esi+edi]
  002f5	51		 push	 ecx
  002f6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  002fb	e8 00 00 00 00	 call	 ?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerMember
  00300	83 f8 01	 cmp	 eax, 1
  00303	74 20		 je	 SHORT $LN4@DGGuildMem
  00305	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0030b	8b 04 16	 mov	 eax, DWORD PTR [esi+edx]
  0030e	50		 push	 eax
  0030f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00314	e8 00 00 00 00	 call	 ?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerUnionMember

; 731  :                         }
; 732  :                         else
; 733  :                         {
; 734  :                             pMsg.btOwnerStatus = 0;

  00319	c6 85 d9 fe ff
	ff 00		 mov	 BYTE PTR _pMsg$[ebp+9], 0
  00320	83 f8 01	 cmp	 eax, 1
  00323	75 07		 jne	 SHORT $LN3@DGGuildMem
$LN4@DGGuildMem:

; 729  :                         {
; 730  :                             pMsg.btOwnerStatus = 1;

  00325	c6 85 d9 fe ff
	ff 01		 mov	 BYTE PTR _pMsg$[ebp+9], 1
$LN3@DGGuildMem:

; 735  :                         }
; 736  :                         //Season 4.5 Addon end
; 737  : 
; 738  : 						memcpy(&GuildInfoBuf[GuildInfoOfs], &pMsg, sizeof(PMSG_SIMPLE_GUILDVIEWPORT));

  0032c	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _pMsg$[ebp+4]
  00332	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _pMsg$[ebp+8]
  00338	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR _pMsg$[ebp]
  0033e	89 95 ed fe ff
	ff		 mov	 DWORD PTR _GuildInfoBuf$[ebp+9], edx

; 739  : 						GuildInfoOfs += sizeof(PMSG_SIMPLE_GUILDVIEWPORT);
; 740  : 
; 741  : 						PMSG_SIMPLE_GUILDVIEWPORT_COUNT pGVCount;
; 742  : 						
; 743  : 						pGVCount.h.c = 0xC2;
; 744  : 						pGVCount.h.headcode = 0x65;
; 745  : 						pGVCount.h.sizeH = SET_NUMBERH(GuildInfoOfs);
; 746  : 						pGVCount.h.sizeL = SET_NUMBERL(GuildInfoOfs);
; 747  : 						pGVCount.Count = 0x01;
; 748  : 						memcpy(GuildInfoBuf, &pGVCount, sizeof(PMSG_SIMPLE_GUILDVIEWPORT_COUNT));
; 749  : 
; 750  : 						DataSend(n, (LPBYTE)GuildInfoBuf, GuildInfoOfs);

  00344	6a 11		 push	 17			; 00000011H
  00346	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _GuildInfoBuf$[ebp]
  0034c	89 8d e9 fe ff
	ff		 mov	 DWORD PTR _GuildInfoBuf$[ebp+5], ecx
  00352	89 85 f1 fe ff
	ff		 mov	 DWORD PTR _GuildInfoBuf$[ebp+13], eax
  00358	52		 push	 edx
  00359	c7 85 dc fe ff
	ff c2 00 11 65	 mov	 DWORD PTR _pGVCount$214142[ebp], 1695613122 ; 651100c2H
  00363	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _pGVCount$214142[ebp]
  00369	b0 01		 mov	 al, 1
  0036b	53		 push	 ebx
  0036c	89 8d e4 fe ff
	ff		 mov	 DWORD PTR _GuildInfoBuf$[ebp], ecx
  00372	88 85 e8 fe ff
	ff		 mov	 BYTE PTR _GuildInfoBuf$[ebp+4], al
  00378	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0037d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 751  : #if(EVENT_DUNGEON_SIEGE)
; 752  : 						g_DungeonSiege.GCGuildNumber(n);

  00380	53		 push	 ebx
  00381	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_DungeonSiege@@3VCDungeonSiege@@A ; g_DungeonSiege
  00386	e8 00 00 00 00	 call	 ?GCGuildNumber@CDungeonSiege@@QAEXH@Z ; CDungeonSiege::GCGuildNumber

; 753  : #endif
; 754  : 
; 755  : 						if ( gObj[n].lpGuild->WarState != 0 )

  0038b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00390	8b 8c 06 38 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1080]
  00397	80 b9 91 05 00
	00 00		 cmp	 BYTE PTR [ecx+1425], 0
  0039e	0f 84 3f fd ff
	ff		 je	 $LN17@DGGuildMem

; 756  : 						{
; 757  : 							GCGuildWarScore(n);

  003a4	53		 push	 ebx
  003a5	e8 00 00 00 00	 call	 ?GCGuildWarScore@@YAXH@Z ; GCGuildWarScore

; 758  : 							GCGuildWarDeclare(n, gObj[n].lpGuild->TargetGuildName);

  003aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003b0	8b 84 16 38 04
	00 00		 mov	 eax, DWORD PTR [esi+edx+1080]
  003b7	05 e0 04 00 00	 add	 eax, 1248		; 000004e0H
  003bc	50		 push	 eax
  003bd	53		 push	 ebx
  003be	e8 00 00 00 00	 call	 ?GCGuildWarDeclare@@YAXHPAD@Z ; GCGuildWarDeclare
  003c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  003c6	5f		 pop	 edi
  003c7	5e		 pop	 esi
  003c8	5b		 pop	 ebx

; 777  : }

  003c9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003cc	33 cd		 xor	 ecx, ebp
  003ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003d3	8b e5		 mov	 esp, ebp
  003d5	5d		 pop	 ebp
  003d6	c3		 ret	 0
$LN10@DGGuildMem:

; 759  : 						}
; 760  : 					}
; 761  : 					else
; 762  : 					{
; 763  : //#if(GS_CASTLE==1)
; 764  : 						gObj[n].m_btCsJoinSide = 0;

  003d7	c6 84 06 02 1c
	00 00 00	 mov	 BYTE PTR [esi+eax+7170], 0

; 765  : 						gObj[n].m_bCsGuildInvolved = 0;

  003df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003e5	c6 84 0e 03 1c
	00 00 00	 mov	 BYTE PTR [esi+ecx+7171], 0

; 766  : //#endif
; 767  : 						LogAddTD(lMsg.Get(MSGGET(1, 185)));

  003ed	68 b9 01 00 00	 push	 441			; 000001b9H
  003f2	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  003f7	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  003fc	50		 push	 eax
  003fd	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 777  : }

  00403	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00406	83 c4 04	 add	 esp, 4
  00409	5f		 pop	 edi
  0040a	5e		 pop	 esi
  0040b	33 cd		 xor	 ecx, ebp
  0040d	5b		 pop	 ebx
  0040e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00413	8b e5		 mov	 esp, ebp
  00415	5d		 pop	 ebp
  00416	c3		 ret	 0
?DGGuildMemberInfo@@YAXPAUSDHP_GUILDMEMBER_INFO@@@Z ENDP ; DGGuildMemberInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildMasterListRecv@@YAXPAE@Z		; DGGuildMasterListRecv
EXTRN	?SetGuildType@CGuildClass@@QAEHPADH@Z:PROC	; CGuildClass::SetGuildType
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildMasterListRecv@@YAXPAE@Z
_TEXT	SEGMENT
_szGuildName$ = -28					; size = 9
_szMasterName$ = -16					; size = 11
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DGGuildMasterListRecv@@YAXPAE@Z PROC			; DGGuildMasterListRecv, COMDAT

; 802  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 803  : 	SDHP_GUILDALL_COUNT * lpCount;
; 804  : 	SDHP_GUILDALL * lpList;
; 805  : 	int lOfs = sizeof(SDHP_GUILDALL_COUNT);
; 806  : 	char szGuildName[MAX_GUILD_LEN+1];
; 807  : 	char szMasterName[MAX_ACCOUNT_LEN+1];
; 808  : 
; 809  : 	memset(szMasterName, 0, sizeof(szMasterName));

  00010	33 c0		 xor	 eax, eax
  00012	89 45 f0	 mov	 DWORD PTR _szMasterName$[ebp], eax
  00015	89 45 f4	 mov	 DWORD PTR _szMasterName$[ebp+4], eax
  00018	66 89 45 f8	 mov	 WORD PTR _szMasterName$[ebp+8], ax

; 810  : 	memset(szGuildName, 0, sizeof(szGuildName));

  0001c	89 45 e4	 mov	 DWORD PTR _szGuildName$[ebp], eax
  0001f	89 45 e8	 mov	 DWORD PTR _szGuildName$[ebp+4], eax
  00022	56		 push	 esi
  00023	8b 75 08	 mov	 esi, DWORD PTR _lpData$[ebp]

; 811  : 	lpCount = (SDHP_GUILDALL_COUNT *)lpData;
; 812  : 	memcpy(szGuildName, lpCount->GuildName, sizeof(lpCount->GuildName)-1);

  00026	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]

; 813  : 	memcpy(szMasterName, lpCount->Master, sizeof(lpCount->Master)-1);

  00029	8b 56 11	 mov	 edx, DWORD PTR [esi+17]
  0002c	88 45 fa	 mov	 BYTE PTR _szMasterName$[ebp+10], al
  0002f	88 45 ec	 mov	 BYTE PTR _szGuildName$[ebp+8], al
  00032	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00035	89 45 e4	 mov	 DWORD PTR _szGuildName$[ebp], eax
  00038	8b 46 15	 mov	 eax, DWORD PTR [esi+21]
  0003b	89 4d e8	 mov	 DWORD PTR _szGuildName$[ebp+4], ecx
  0003e	66 8b 4e 19	 mov	 cx, WORD PTR [esi+25]
  00042	89 45 f4	 mov	 DWORD PTR _szMasterName$[ebp+4], eax

; 814  : 
; 815  : 	if ( strlen(szGuildName) < 1 )

  00045	8d 45 e4	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  00048	89 55 f0	 mov	 DWORD PTR _szMasterName$[ebp], edx
  0004b	66 89 4d f8	 mov	 WORD PTR _szMasterName$[ebp+8], cx
  0004f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL13@DGGuildMas:
  00052	8a 08		 mov	 cl, BYTE PTR [eax]
  00054	40		 inc	 eax
  00055	84 c9		 test	 cl, cl
  00057	75 f9		 jne	 SHORT $LL13@DGGuildMas
  00059	2b c2		 sub	 eax, edx
  0005b	83 f8 01	 cmp	 eax, 1
  0005e	0f 82 c4 00 00
	00		 jb	 $LN11@DGGuildMas

; 816  : 	{
; 817  : 		return;
; 818  : 	}
; 819  : 
; 820  : 	if ( lpCount->Count < 1 )

  00064	80 7e 55 01	 cmp	 BYTE PTR [esi+85], 1
  00068	0f 82 ba 00 00
	00		 jb	 $LN11@DGGuildMas

; 821  : 	{
; 822  : 		return;
; 823  : 	}
; 824  : 
; 825  : 	Guild.AddGuild(lpCount->Number, szGuildName, lpCount->Mark, szMasterName, lpCount->score);

  0006e	8b 56 3c	 mov	 edx, DWORD PTR [esi+60]
  00071	52		 push	 edx
  00072	8d 45 f0	 lea	 eax, DWORD PTR _szMasterName$[ebp]
  00075	50		 push	 eax
  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0007c	51		 push	 ecx
  0007d	8d 55 e4	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  00080	52		 push	 edx
  00081	50		 push	 eax
  00082	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00087	e8 00 00 00 00	 call	 ?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z ; CGuildClass::AddGuild

; 826  : 	Guild.SetGuildType(szGuildName, lpCount->btGuildType);

  0008c	0f b6 4e 40	 movzx	 ecx, BYTE PTR [esi+64]
  00090	51		 push	 ecx
  00091	8d 55 e4	 lea	 edx, DWORD PTR _szGuildName$[ebp]
  00094	52		 push	 edx
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0009a	e8 00 00 00 00	 call	 ?SetGuildType@CGuildClass@@QAEHPADH@Z ; CGuildClass::SetGuildType

; 827  : 
; 828  : 	_GUILD_INFO_STRUCT * lpGuild = Guild.SearchGuild_Number(lpCount->Number);

  0009f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a2	50		 push	 eax
  000a3	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000a8	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number

; 829  : 
; 830  : 	if ( lpGuild != NULL )

  000ad	85 c0		 test	 eax, eax
  000af	74 24		 je	 SHORT $LN5@DGGuildMas

; 831  : 	{
; 832  : 		lpGuild->iGuildUnion = lpCount->iGuildUnion;

  000b1	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000b4	89 88 1c 07 00
	00		 mov	 DWORD PTR [eax+1820], ecx

; 833  : 		lpGuild->iGuildRival = lpCount->iGuildRival;

  000ba	8b 56 48	 mov	 edx, DWORD PTR [esi+72]
  000bd	89 90 20 07 00
	00		 mov	 DWORD PTR [eax+1824], edx

; 834  : 		memcpy(lpGuild->szGuildRivalName, lpCount->szGuildRivalName, sizeof(lpCount->szGuildRivalName)-1);

  000c3	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  000c6	89 88 28 07 00
	00		 mov	 DWORD PTR [eax+1832], ecx
  000cc	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  000cf	89 90 2c 07 00
	00		 mov	 DWORD PTR [eax+1836], edx
$LN5@DGGuildMas:

; 835  : 	}
; 836  : 
; 837  : 	for ( int n=0;n<lpCount->Count;n++)

  000d5	0f b6 46 55	 movzx	 eax, BYTE PTR [esi+85]
  000d9	53		 push	 ebx
  000da	33 db		 xor	 ebx, ebx
  000dc	85 c0		 test	 eax, eax
  000de	7e 47		 jle	 SHORT $LN14@DGGuildMas
  000e0	57		 push	 edi
  000e1	8d 7e 63	 lea	 edi, DWORD PTR [esi+99]
$LL4@DGGuildMas:

; 838  : 	{
; 839  : 		lpList = (SDHP_GUILDALL *)&lpData[lOfs];
; 840  : 
; 841  : 		memcpy(szMasterName, lpList->MemberID, sizeof(lpList->MemberID)-1);

  000e4	8b 4f f5	 mov	 ecx, DWORD PTR [edi-11]
  000e7	89 4d f0	 mov	 DWORD PTR _szMasterName$[ebp], ecx
  000ea	8b 57 f9	 mov	 edx, DWORD PTR [edi-7]
  000ed	89 55 f4	 mov	 DWORD PTR _szMasterName$[ebp+4], edx
  000f0	66 8b 4f fd	 mov	 cx, WORD PTR [edi-3]
  000f4	66 89 4d f8	 mov	 WORD PTR _szMasterName$[ebp+8], cx

; 842  : 		
; 843  : 		if ( Guild.AddMember(szGuildName, szMasterName, -1, lpCount->Count,lpList->btGuildStatus, lpList->pServer) == FALSE )

  000f8	0f bf 57 01	 movsx	 edx, WORD PTR [edi+1]
  000fc	0f b6 0f	 movzx	 ecx, BYTE PTR [edi]
  000ff	52		 push	 edx
  00100	51		 push	 ecx
  00101	50		 push	 eax
  00102	6a ff		 push	 -1
  00104	8d 55 f0	 lea	 edx, DWORD PTR _szMasterName$[ebp]
  00107	52		 push	 edx
  00108	8d 45 e4	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  0010b	50		 push	 eax
  0010c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00111	e8 00 00 00 00	 call	 ?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z ; CGuildClass::AddMember
  00116	85 c0		 test	 eax, eax
  00118	74 0c		 je	 SHORT $LN15@DGGuildMas

; 835  : 	}
; 836  : 
; 837  : 	for ( int n=0;n<lpCount->Count;n++)

  0011a	0f b6 46 55	 movzx	 eax, BYTE PTR [esi+85]
  0011e	43		 inc	 ebx

; 844  : 		{
; 845  : 			break;
; 846  : 		}
; 847  : 
; 848  : 		lOfs += sizeof(SDHP_GUILDALL);

  0011f	83 c7 0e	 add	 edi, 14			; 0000000eH
  00122	3b d8		 cmp	 ebx, eax
  00124	7c be		 jl	 SHORT $LL4@DGGuildMas
$LN15@DGGuildMas:
  00126	5f		 pop	 edi
$LN14@DGGuildMas:
  00127	5b		 pop	 ebx
$LN11@DGGuildMas:

; 849  : 	}
; 850  : }

  00128	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012b	33 cd		 xor	 ecx, ebp
  0012d	5e		 pop	 esi
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c3		 ret	 0
?DGGuildMasterListRecv@@YAXPAE@Z ENDP			; DGGuildMasterListRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildScoreUpdate@@YAXPADH@Z			; DGGuildScoreUpdate
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildScoreUpdate@@YAXPADH@Z
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_guildname$ = 8						; size = 4
_score$ = 12						; size = 4
?DGGuildScoreUpdate@@YAXPADH@Z PROC			; DGGuildScoreUpdate, COMDAT

; 853  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _guildname$[ebp]
  00014	57		 push	 edi

; 854  : 	SDHP_GUILDSCOREUPDATE pMsg;
; 855  : 
; 856  : 	pMsg.h.set((LPBYTE)&pMsg, 0x37, sizeof(SDHP_GUILDSCOREUPDATE));
; 857  : 	pMsg.Score = score;

  00015	8b 7d 0c	 mov	 edi, DWORD PTR _score$[ebp]

; 858  : 	strcpy(pMsg.GuildName, guildname);

  00018	8d 55 ef	 lea	 edx, DWORD PTR _pMsg$[ebp+3]
  0001b	66 c7 45 ec c1
	10		 mov	 WORD PTR _pMsg$[ebp], 4289 ; 000010c1H
  00021	c6 45 ee 37	 mov	 BYTE PTR _pMsg$[ebp+2], 55 ; 00000037H
  00025	89 7d f8	 mov	 DWORD PTR _pMsg$[ebp+12], edi
  00028	8b c6		 mov	 eax, esi
  0002a	2b d6		 sub	 edx, esi
  0002c	8d 64 24 00	 npad	 4
$LL3@DGGuildSco:
  00030	8a 08		 mov	 cl, BYTE PTR [eax]
  00032	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00035	40		 inc	 eax
  00036	84 c9		 test	 cl, cl
  00038	75 f6		 jne	 SHORT $LL3@DGGuildSco

; 859  : 
; 860  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  0003a	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0003e	50		 push	 eax
  0003f	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00042	51		 push	 ecx
  00043	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00048	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 861  : 
; 862  : 	LogAdd(lMsg.Get(MSGGET(1, 186)), guildname, score);

  0004d	57		 push	 edi
  0004e	56		 push	 esi
  0004f	68 ba 01 00 00	 push	 442			; 000001baH
  00054	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00059	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0005e	50		 push	 eax
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 863  : }

  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	5f		 pop	 edi
  0006c	33 cd		 xor	 ecx, ebp
  0006e	5e		 pop	 esi
  0006f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?DGGuildScoreUpdate@@YAXPADH@Z ENDP			; DGGuildScoreUpdate
_TEXT	ENDS
PUBLIC	?GDGuildScoreUpdateRecv@@YAXPAUSDHP_GUILDSCOREUPDATE@@@Z ; GDGuildScoreUpdateRecv
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildScoreUpdateRecv@@YAXPAUSDHP_GUILDSCOREUPDATE@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?GDGuildScoreUpdateRecv@@YAXPAUSDHP_GUILDSCOREUPDATE@@@Z PROC ; GDGuildScoreUpdateRecv, COMDAT

; 866  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 867  : 	_GUILD_INFO_STRUCT * lpNode = Guild.SearchGuild(lpMsg->GuildName);

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00007	57		 push	 edi
  00008	8d 7e 03	 lea	 edi, DWORD PTR [esi+3]
  0000b	57		 push	 edi
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00011	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

; 868  : 
; 869  : 	if ( lpNode == NULL )

  00016	85 c0		 test	 eax, eax
  00018	74 27		 je	 SHORT $LN2@GDGuildSco

; 870  : 	{
; 871  : 		return;
; 872  : 	}
; 873  : 
; 874  : 	lpNode->TotalScore = lpMsg->Score;

  0001a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0001d	89 88 98 05 00
	00		 mov	 DWORD PTR [eax+1432], ecx

; 875  : 	LogAdd(lMsg.Get(MSGGET(1, 187)), lpMsg->GuildName, lpMsg->Score);

  00023	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00026	52		 push	 edx
  00027	57		 push	 edi
  00028	68 bb 01 00 00	 push	 443			; 000001bbH
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00032	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GDGuildSco:
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi

; 876  : }

  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?GDGuildScoreUpdateRecv@@YAXPAUSDHP_GUILDSCOREUPDATE@@@Z ENDP ; GDGuildScoreUpdateRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildNoticeSave@@YAXPAD0@Z			; GDGuildNoticeSave
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildNoticeSave@@YAXPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -108						; size = 101
__$ArrayPad$ = -4					; size = 4
_guild_name$ = 8					; size = 4
_guild_notice$ = 12					; size = 4
?GDGuildNoticeSave@@YAXPAD0@Z PROC			; GDGuildNoticeSave, COMDAT

; 879  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 880  : 	SDHP_GUILDNOTICE pMsg;
; 881  : 
; 882  : 	int len = strlen((char*)guild_notice);

  00010	8b 45 0c	 mov	 eax, DWORD PTR _guild_notice$[ebp]
  00013	8b c8		 mov	 ecx, eax
  00015	56		 push	 esi
  00016	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL9@GDGuildNot:
  00020	8a 11		 mov	 dl, BYTE PTR [ecx]
  00022	41		 inc	 ecx
  00023	84 d2		 test	 dl, dl
  00025	75 f9		 jne	 SHORT $LL9@GDGuildNot
  00027	2b ce		 sub	 ecx, esi

; 883  : 
; 884  : 	if ( len < 1 )

  00029	49		 dec	 ecx
  0002a	83 f9 56	 cmp	 ecx, 86			; 00000056H
  0002d	77 3e		 ja	 SHORT $LN3@GDGuildNot

; 885  : 	{
; 886  : 		return;
; 887  : 	}
; 888  : 
; 889  : 	if ( len > MAX_CHAT_LEN-2 )
; 890  : 	{
; 891  : 		return;
; 892  : 	}
; 893  : 
; 894  : 	pMsg.h.c = 0xC1;
; 895  : 	pMsg.h.headcode = 0x38;
; 896  : 	pMsg.h.size = sizeof(SDHP_GUILDNOTICE);
; 897  : 	strcpy(pMsg.GuildName, guild_name);

  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _guild_name$[ebp]
  00032	8d 75 97	 lea	 esi, DWORD PTR _pMsg$[ebp+3]
  00035	c6 45 94 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00039	66 c7 45 95 65
	38		 mov	 WORD PTR _pMsg$[ebp+1], 14437 ; 00003865H
  0003f	2b f1		 sub	 esi, ecx
$LL5@GDGuildNot:
  00041	8a 11		 mov	 dl, BYTE PTR [ecx]
  00043	88 14 0e	 mov	 BYTE PTR [esi+ecx], dl
  00046	41		 inc	 ecx
  00047	84 d2		 test	 dl, dl
  00049	75 f6		 jne	 SHORT $LL5@GDGuildNot

; 898  : 	//memcpy(pMsg.szGuildNotice, guild_notice, MAX_CHAT_LEN_OLD-1); //for fix some
; 899  : 	strcpy(pMsg.szGuildNotice, guild_notice);

  0004b	8d 55 a0	 lea	 edx, DWORD PTR _pMsg$[ebp+12]
  0004e	2b d0		 sub	 edx, eax
$LL6@GDGuildNot:
  00050	8a 08		 mov	 cl, BYTE PTR [eax]
  00052	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00055	40		 inc	 eax
  00056	84 c9		 test	 cl, cl
  00058	75 f6		 jne	 SHORT $LL6@GDGuildNot

; 900  : 
; 901  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  0005a	0f b6 45 95	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0005e	50		 push	 eax
  0005f	8d 4d 94	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00062	51		 push	 ecx
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00068	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN3@GDGuildNot:

; 902  : }

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	5e		 pop	 esi
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?GDGuildNoticeSave@@YAXPAD0@Z ENDP			; GDGuildNoticeSave
_TEXT	ENDS
PUBLIC	?DGGuildNoticeRecv@@YAXPAUSDHP_GUILDNOTICE@@@Z	; DGGuildNoticeRecv
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildNoticeRecv@@YAXPAUSDHP_GUILDNOTICE@@@Z
_TEXT	SEGMENT
_lpNode$ = 8						; size = 4
_lpMsg$ = 8						; size = 4
?DGGuildNoticeRecv@@YAXPAUSDHP_GUILDNOTICE@@@Z PROC	; DGGuildNoticeRecv, COMDAT

; 905  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 906  : 	_GUILD_INFO_STRUCT * lpNode = Guild.SearchGuild(lpMsg->GuildName);

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8d 73 03	 lea	 esi, DWORD PTR [ebx+3]
  0000c	56		 push	 esi
  0000d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00012	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00017	8b f8		 mov	 edi, eax
  00019	89 7d 08	 mov	 DWORD PTR _lpNode$[ebp], edi

; 907  : 
; 908  : 	if ( lpNode == NULL )

  0001c	85 ff		 test	 edi, edi
  0001e	74 6d		 je	 SHORT $LN2@DGGuildNot@2

; 909  : 	{
; 910  : 		return;
; 911  : 	}
; 912  : 
; 913  : 	strcpy(lpNode->Notice, lpMsg->szGuildNotice);

  00020	83 c3 0c	 add	 ebx, 12			; 0000000cH
  00023	8d 97 9c 05 00
	00		 lea	 edx, DWORD PTR [edi+1436]
  00029	8b c3		 mov	 eax, ebx
  0002b	2b d3		 sub	 edx, ebx
  0002d	8d 49 00	 npad	 3
$LL8@DGGuildNot@2:
  00030	8a 08		 mov	 cl, BYTE PTR [eax]
  00032	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00035	40		 inc	 eax
  00036	84 c9		 test	 cl, cl
  00038	75 f6		 jne	 SHORT $LL8@DGGuildNot@2

; 914  : 	LogAddTD(lMsg.Get(MSGGET(1, 188)), lpMsg->GuildName, lpMsg->szGuildNotice);

  0003a	53		 push	 ebx
  0003b	56		 push	 esi
  0003c	68 bc 01 00 00	 push	 444			; 000001bcH
  00041	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00046	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0004b	50		 push	 eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 915  : 
; 916  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00055	33 f6		 xor	 esi, esi
  00057	81 c7 a0 03 00
	00		 add	 edi, 928		; 000003a0H
  0005d	8d 49 00	 npad	 3
$LL4@DGGuildNot@2:

; 917  : 	{
; 918  : 		if ( lpNode->Use[n] > 0 && lpNode->Index[n] >= 0 )

  00060	8b 45 08	 mov	 eax, DWORD PTR _lpNode$[ebp]
  00063	80 bc 30 40 04
	00 00 00	 cmp	 BYTE PTR [eax+esi+1088], 0
  0006b	76 17		 jbe	 SHORT $LN3@DGGuildNot@2
  0006d	0f b7 07	 movzx	 eax, WORD PTR [edi]
  00070	66 85 c0	 test	 ax, ax
  00073	78 0f		 js	 SHORT $LN3@DGGuildNot@2

; 919  : 		{
; 920  : 			GCServerMsgStringSend(lpMsg->szGuildNotice, lpNode->Index[n], 2);

  00075	0f bf c8	 movsx	 ecx, ax
  00078	6a 02		 push	 2
  0007a	51		 push	 ecx
  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@DGGuildNot@2:

; 915  : 
; 916  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00084	46		 inc	 esi
  00085	83 c7 02	 add	 edi, 2
  00088	83 fe 50	 cmp	 esi, 80			; 00000050H
  0008b	7c d3		 jl	 SHORT $LL4@DGGuildNot@2
$LN2@DGGuildNot@2:
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx

; 921  : 		}
; 922  : 	}
; 923  : }

  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
?DGGuildNoticeRecv@@YAXPAUSDHP_GUILDNOTICE@@@Z ENDP	; DGGuildNoticeRecv
_TEXT	ENDS
PUBLIC	?DGGuildListRequest@@YAXXZ			; DGGuildListRequest
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildListRequest@@YAXXZ
_TEXT	SEGMENT
_pMsg$ = -4						; size = 3
?DGGuildListRequest@@YAXXZ PROC				; DGGuildListRequest, COMDAT

; 931  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 932  : 	SDHP_GUILDLISTREQUEST pMsg;
; 933  : 
; 934  : 	pMsg.h.set((LPBYTE)&pMsg, 0x40, sizeof(SDHP_GUILDLISTREQUEST));
; 935  : 
; 936  : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00004	6a 03		 push	 3
  00006	8d 45 fc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00009	50		 push	 eax
  0000a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0000f	66 c7 45 fc c1
	03		 mov	 WORD PTR _pMsg$[ebp], 961 ; 000003c1H
  00015	c6 45 fe 40	 mov	 BYTE PTR _pMsg$[ebp+2], 64 ; 00000040H
  00019	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 937  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?DGGuildListRequest@@YAXXZ ENDP				; DGGuildListRequest
_TEXT	ENDS
PUBLIC	??_C@_0O@BNCDNIJM@?$CF8s?5?$FL?$CFd?5?1?5?$CFd?$FN?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildList@@YAXPAUSDHP_GUILDCREATED@@@Z	; DGGuildList
EXTRN	__imp__SetDlgItemTextA@12:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__SendMessageA@16:PROC
;	COMDAT ??_C@_0O@BNCDNIJM@?$CF8s?5?$FL?$CFd?5?1?5?$CFd?$FN?$AA@
CONST	SEGMENT
??_C@_0O@BNCDNIJM@?$CF8s?5?$FL?$CFd?5?1?5?$CFd?$FN?$AA@ DB '%8s [%d / %d]'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGGuildList@@YAXPAUSDHP_GUILDCREATED@@@Z
_TEXT	SEGMENT
_szTemp$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGGuildList@@YAXPAUSDHP_GUILDCREATED@@@Z PROC		; DGGuildList, COMDAT

; 940  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 941  : 	char szTemp[256];
; 942  : 
; 943  : 	Guild.AddGuild(lpMsg->Number, lpMsg->GuildName, lpMsg->Mark, lpMsg->Master, lpMsg->score);

  00016	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	8d 50 0f	 lea	 edx, DWORD PTR [eax+15]
  0001e	52		 push	 edx
  0001f	0f b7 50 04	 movzx	 edx, WORD PTR [eax+4]
  00023	8d 48 1a	 lea	 ecx, DWORD PTR [eax+26]
  00026	51		 push	 ecx
  00027	8d 70 06	 lea	 esi, DWORD PTR [eax+6]
  0002a	56		 push	 esi
  0002b	52		 push	 edx
  0002c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00031	e8 00 00 00 00	 call	 ?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z ; CGuildClass::AddGuild

; 944  : 
; 945  : 	if ( GuildListhDlg != NULL )

  00036	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A, 0 ; GuildListhDlg
  0003d	74 5c		 je	 SHORT $LN1@DGGuildLis

; 946  : 	{
; 947  : 		SendMessage(::GuildListhPrs, 0x402, gGuildListCount, 0);

  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gGuildListCount@@3HA ; gGuildListCount
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?GuildListhPrs@@3PAUHWND__@@A ; GuildListhPrs
  0004a	6a 00		 push	 0
  0004c	50		 push	 eax
  0004d	68 02 04 00 00	 push	 1026			; 00000402H
  00052	51		 push	 ecx
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 948  : 		gGuildListCount++;

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gGuildListCount@@3HA ; gGuildListCount

; 949  : 		wsprintf(szTemp, "%8s [%d / %d]", lpMsg->GuildName, gGuildListCount, gGuildListTotal);

  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gGuildListTotal@@3HA ; gGuildListTotal
  00064	52		 push	 edx
  00065	40		 inc	 eax
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	a3 00 00 00 00	 mov	 DWORD PTR ?gGuildListCount@@3HA, eax ; gGuildListCount
  0006d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szTemp$[ebp]
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BNCDNIJM@?$CF8s?5?$FL?$CFd?5?1?5?$CFd?$FN?$AA@
  00078	50		 push	 eax
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 950  : 		SetDlgItemText(GuildListhDlg, IDS_CURRENT_GUILD_NAME, szTemp);

  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A ; GuildListhDlg
  00085	83 c4 14	 add	 esp, 20			; 00000014H
  00088	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szTemp$[ebp]
  0008e	51		 push	 ecx
  0008f	68 e9 03 00 00	 push	 1001			; 000003e9H
  00094	52		 push	 edx
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12
$LN1@DGGuildLis:

; 951  : 	}
; 952  : }

  0009b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009e	33 cd		 xor	 ecx, ebp
  000a0	5e		 pop	 esi
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?DGGuildList@@YAXPAUSDHP_GUILDCREATED@@@Z ENDP		; DGGuildList
_TEXT	ENDS
PUBLIC	?GuildListDlgProc@@YGHPAUHWND__@@IIJ@Z		; GuildListDlgProc
EXTRN	__imp__EndDialog@8:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GuildListDlgProc@@YGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hDlg$ = 8						; size = 4
_iMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?GuildListDlgProc@@YGHPAUHWND__@@IIJ@Z PROC		; GuildListDlgProc, COMDAT

; 955  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 956  : 	switch (iMsg)

  00003	81 7d 0c 11 01
	00 00		 cmp	 DWORD PTR _iMsg$[ebp], 273 ; 00000111H
  0000a	75 1f		 jne	 SHORT $LN10@GuildListD

; 957  : 	{
; 958  : 		case 273:
; 959  : 
; 960  : 			switch ( wParam )

  0000c	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0000f	83 e8 02	 sub	 eax, 2
  00012	75 17		 jne	 SHORT $LN10@GuildListD

; 961  : 			{
; 962  : 				case 2:
; 963  : 					EndDialog(GuildListhDlg, 0);

  00014	50		 push	 eax
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A ; GuildListhDlg
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 964  : 					GuildListhDlg = NULL;

  00021	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A, 0 ; GuildListhDlg
$LN10@GuildListD:

; 965  : 					break;
; 966  : 			}
; 967  : 			break;
; 968  : 	}
; 969  : 
; 970  : 	return 0;

  0002b	33 c0		 xor	 eax, eax

; 971  : }

  0002d	5d		 pop	 ebp
  0002e	c2 10 00	 ret	 16			; 00000010H
?GuildListDlgProc@@YGHPAUHWND__@@IIJ@Z ENDP		; GuildListDlgProc
_TEXT	ENDS
PUBLIC	?DGGuildListState@@YAXPAUSDHP_GUILDLISTSTATE@@@Z ; DGGuildListState
EXTRN	?GameServerInfoSendStop@@YAXXZ:PROC		; GameServerInfoSendStop
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__CreateDialogParamA@20:PROC
EXTRN	?ghWnd@@3PAUHWND__@@A:DWORD			; ghWnd
EXTRN	?GameServerInfoSendStart@@YAXXZ:PROC		; GameServerInfoSendStart
EXTRN	__imp__IsWindow@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildListState@@YAXPAUSDHP_GUILDLISTSTATE@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?DGGuildListState@@YAXPAUSDHP_GUILDLISTSTATE@@@Z PROC	; DGGuildListState, COMDAT

; 974  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 975  : 	switch ( lpMsg->State )

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00007	0f b6 46 03	 movzx	 eax, BYTE PTR [esi+3]
  0000b	83 e8 00	 sub	 eax, 0
  0000e	74 34		 je	 SHORT $LN4@DGGuildLis@2
  00010	48		 dec	 eax
  00011	75 2e		 jne	 SHORT $LN3@DGGuildLis@2

; 988  : 			}
; 989  : 			break;
; 990  : 
; 991  : 		case 1:
; 992  : 			if ( IsWindow(GuildListhDlg) != FALSE )

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A ; GuildListhDlg
  00018	50		 push	 eax
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0001f	85 c0		 test	 eax, eax
  00021	74 1e		 je	 SHORT $LN3@DGGuildLis@2

; 993  : 			{
; 994  : 				EndDialog(GuildListhDlg, 0);

  00023	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A ; GuildListhDlg
  00029	6a 00		 push	 0
  0002b	51		 push	 ecx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 995  : 				GameServerInfoSendStart();

  00032	e8 00 00 00 00	 call	 ?GameServerInfoSendStart@@YAXXZ ; GameServerInfoSendStart

; 996  : 				GuildListhDlg = NULL;

  00037	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A, 0 ; GuildListhDlg
$LN3@DGGuildLis@2:
  00041	5e		 pop	 esi

; 997  : 			}
; 998  : 			break;
; 999  : 	}
; 1000 : 
; 1001 : }

  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
$LN4@DGGuildLis@2:

; 976  : 	{
; 977  : 		case 0:
; 978  : 			if ( IsWindow(GuildListhDlg) == FALSE )

  00044	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A ; GuildListhDlg
  0004a	52		 push	 edx
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00051	85 c0		 test	 eax, eax
  00053	75 ec		 jne	 SHORT $LN3@DGGuildLis@2

; 979  : 			{
; 980  : 				GuildListhDlg = CreateDialogParam(NULL, (LPCTSTR)IDD_GUILD_LIST_STATE, ghWnd, (DLGPROC)GuildListDlgProc, 0);

  00055	57		 push	 edi
  00056	50		 push	 eax
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0005c	68 00 00 00 00	 push	 OFFSET ?GuildListDlgProc@@YGHPAUHWND__@@IIJ@Z ; GuildListDlgProc
  00061	50		 push	 eax
  00062	68 8d 00 00 00	 push	 141			; 0000008dH
  00067	6a 00		 push	 0
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDialogParamA@20

; 981  : 				ShowWindow(GuildListhDlg, SW_SHOW);

  0006f	6a 05		 push	 5
  00071	50		 push	 eax
  00072	a3 00 00 00 00	 mov	 DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A, eax ; GuildListhDlg
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 982  : 				GuildListhPrs = GetDlgItem(GuildListhDlg, IDP_PROGRESS_BAR);

  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?GuildListhDlg@@3PAUHWND__@@A ; GuildListhDlg
  00083	68 e8 03 00 00	 push	 1000			; 000003e8H
  00088	51		 push	 ecx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8

; 983  : 				SendMessage(GuildListhPrs, 0x401, 0, (((lpMsg->Count & 0xFFFF)&0xFFFF)<<16));

  0008f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SendMessageA@16
  00095	a3 00 00 00 00	 mov	 DWORD PTR ?GuildListhPrs@@3PAUHWND__@@A, eax ; GuildListhPrs
  0009a	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009d	c1 e2 10	 shl	 edx, 16			; 00000010H
  000a0	52		 push	 edx
  000a1	6a 00		 push	 0
  000a3	68 01 04 00 00	 push	 1025			; 00000401H
  000a8	50		 push	 eax
  000a9	ff d7		 call	 edi

; 984  : 				gGuildListTotal = lpMsg->Count;
; 985  : 				SendMessage(GuildListhPrs, 0x404, 1, 0);

  000ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?GuildListhPrs@@3PAUHWND__@@A ; GuildListhPrs
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	6a 00		 push	 0
  000b6	6a 01		 push	 1
  000b8	68 04 04 00 00	 push	 1028			; 00000404H
  000bd	51		 push	 ecx
  000be	a3 00 00 00 00	 mov	 DWORD PTR ?gGuildListTotal@@3HA, eax ; gGuildListTotal
  000c3	ff d7		 call	 edi
  000c5	5f		 pop	 edi

; 986  : 				gGuildListCount = 0;

  000c6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gGuildListCount@@3HA, 0 ; gGuildListCount
  000d0	5e		 pop	 esi

; 997  : 			}
; 998  : 			break;
; 999  : 	}
; 1000 : 
; 1001 : }

  000d1	5d		 pop	 ebp

; 987  : 				GameServerInfoSendStop();

  000d2	e9 00 00 00 00	 jmp	 ?GameServerInfoSendStop@@YAXXZ ; GameServerInfoSendStop
?DGGuildListState@@YAXPAUSDHP_GUILDLISTSTATE@@@Z ENDP	; DGGuildListState
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z ; GDGuildServerGroupChattingSend
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z
_TEXT	SEGMENT
_pMsg$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_iGuildNum$ = 8						; size = 4
_lpChatData$ = 12					; size = 4
?GDGuildServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z PROC ; GDGuildServerGroupChattingSend, COMDAT

; 1012 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpChatData$[ebp]
  00014	57		 push	 edi

; 1013 : 	EXSDHP_SERVERGROUP_GUILD_CHATTING_SEND pMsg = {0};

  00015	6a 4f		 push	 79			; 0000004fH
  00017	8d 45 ad	 lea	 eax, DWORD PTR _pMsg$[ebp+1]
  0001a	6a 00		 push	 0
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _memset

; 1014 : 
; 1015 : 	pMsg.h.set((LPBYTE)&pMsg, 0x50, sizeof(EXSDHP_SERVERGROUP_GUILD_CHATTING_SEND));
; 1016 : 	pMsg.iGuildNum = iGuildNum;
; 1017 : 	memcpy(pMsg.szCharacterName, lpChatData->chatid, sizeof(pMsg.szCharacterName));

  00022	8b 56 03	 mov	 edx, DWORD PTR [esi+3]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _iGuildNum$[ebp]
  00028	89 4d b0	 mov	 DWORD PTR _pMsg$[ebp+4], ecx
  0002b	8b 4e 07	 mov	 ecx, DWORD PTR [esi+7]
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00036	89 55 b4	 mov	 DWORD PTR _pMsg$[ebp+8], edx
  00039	66 8b 56 0b	 mov	 dx, WORD PTR [esi+11]
  0003d	89 4d b8	 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  00040	88 45 ae	 mov	 BYTE PTR _pMsg$[ebp+2], al

; 1018 : 	memcpy(pMsg.szChattingMsg, lpChatData->chatmsg, sizeof(pMsg.szChattingMsg));
; 1019 : 
; 1020 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00043	50		 push	 eax
  00044	66 c7 45 ac c1
	50		 mov	 WORD PTR _pMsg$[ebp], 20673 ; 000050c1H
  0004a	66 89 55 bc	 mov	 WORD PTR _pMsg$[ebp+16], dx
  0004e	83 c6 0d	 add	 esi, 13			; 0000000dH
  00051	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00056	8d 7d be	 lea	 edi, DWORD PTR _pMsg$[ebp+18]
  00059	8d 45 ac	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0005c	f3 a5		 rep movsd
  0005e	50		 push	 eax
  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00064	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1021 : }

  00069	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006c	5f		 pop	 edi
  0006d	33 cd		 xor	 ecx, ebp
  0006f	5e		 pop	 esi
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?GDGuildServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z ENDP ; GDGuildServerGroupChattingSend
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_GUILD_CHATTING_RECV@@@Z ; DGGuildServerGroupChattingRecv
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_GUILD_CHATTING_RECV@@@Z
_TEXT	SEGMENT
_lpGuildInfo$ = -116					; size = 4
tv303 = -112						; size = 4
_pMsg$ = -108						; size = 102
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGGuildServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_GUILD_CHATTING_RECV@@@Z PROC ; DGGuildServerGroupChattingRecv, COMDAT

; 1024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi

; 1025 : 	PMSG_CHATDATA pMsg ={0};

  00016	6a 65		 push	 101			; 00000065H
  00018	8d 45 95	 lea	 eax, DWORD PTR _pMsg$[ebp+1]
  0001b	6a 00		 push	 0
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset

; 1026 : 
; 1027 : 	pMsg.h.set((LPBYTE)&pMsg, 0x00, sizeof(pMsg));
; 1028 : 	memcpy(pMsg.chatid, lpMsg->szCharacterName, sizeof(pMsg.chatid));

  00023	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00026	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  00029	66 8b 43 10	 mov	 ax, WORD PTR [ebx+16]
  0002d	89 4d 97	 mov	 DWORD PTR _pMsg$[ebp+3], ecx
  00030	66 c7 45 94 c1
	66		 mov	 WORD PTR _pMsg$[ebp], 26305 ; 000066c1H
  00036	c6 45 96 00	 mov	 BYTE PTR _pMsg$[ebp+2], 0
  0003a	89 55 9b	 mov	 DWORD PTR _pMsg$[ebp+7], edx
  0003d	66 89 45 9f	 mov	 WORD PTR _pMsg$[ebp+11], ax

; 1029 : 	memcpy(pMsg.chatmsg, lpMsg->szChattingMsg, sizeof(pMsg.chatmsg));

  00041	8d 73 12	 lea	 esi, DWORD PTR [ebx+18]
  00044	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  00049	8d 7d a1	 lea	 edi, DWORD PTR _pMsg$[ebp+13]
  0004c	f3 a5		 rep movsd

; 1030 : 	_GUILD_INFO_STRUCT * lpGuildInfo = Guild.SearchGuild_Number(lpMsg->iGuildNum);

  0004e	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	51		 push	 ecx
  00055	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0005a	a4		 movsb
  0005b	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  00060	89 45 8c	 mov	 DWORD PTR _lpGuildInfo$[ebp], eax

; 1031 : 
; 1032 : 	if ( lpGuildInfo == NULL )

  00063	85 c0		 test	 eax, eax
  00065	0f 84 90 00 00
	00		 je	 $LN5@DGGuildSer

; 1033 : 		return;
; 1034 : 
; 1035 : 	int iUserIndex = -1;
; 1036 : 
; 1037 : 	if ( lpGuildInfo->Count >= 0 )
; 1038 : 	{
; 1039 : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  0006b	8d 90 a0 03 00
	00		 lea	 edx, DWORD PTR [eax+928]
  00071	33 ff		 xor	 edi, edi
  00073	8d 70 2f	 lea	 esi, DWORD PTR [eax+47]
  00076	89 55 90	 mov	 DWORD PTR tv303[ebp], edx
  00079	8d a4 24 00 00
	00 00		 npad	 7
$LL22@DGGuildSer:

; 1040 : 		{
; 1041 : 			if ( lpGuildInfo->Use[i] != FALSE )

  00080	80 bc 38 40 04
	00 00 00	 cmp	 BYTE PTR [eax+edi+1088], 0
  00088	74 64		 je	 SHORT $LN6@DGGuildSer

; 1042 : 			{
; 1043 : 				iUserIndex = lpGuildInfo->Index[i];

  0008a	8b 4d 90	 mov	 ecx, DWORD PTR tv303[ebp]
  0008d	0f bf 19	 movsx	 ebx, WORD PTR [ecx]

; 1044 : 
; 1045 : 				if ( iUserIndex >= 0 )

  00090	85 db		 test	 ebx, ebx
  00092	78 5a		 js	 SHORT $LN6@DGGuildSer

; 1046 : 				{
; 1047 : 					if ( lpGuildInfo->Names[i][0] == gObj[iUserIndex].Name[0] )

  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009a	8b d3		 mov	 edx, ebx
  0009c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000a2	8d 4c 0a 77	 lea	 ecx, DWORD PTR [edx+ecx+119]
  000a6	8a 16		 mov	 dl, BYTE PTR [esi]
  000a8	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000aa	75 42		 jne	 SHORT $LN6@DGGuildSer

; 1048 : 					{
; 1049 : 						if ( !strcmp(lpGuildInfo->Names[i], gObj[iUserIndex].Name ))

  000ac	8b c6		 mov	 eax, esi
  000ae	8b ff		 npad	 2
$LL16@DGGuildSer:
  000b0	8a 10		 mov	 dl, BYTE PTR [eax]
  000b2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000b4	75 1a		 jne	 SHORT $LN17@DGGuildSer
  000b6	84 d2		 test	 dl, dl
  000b8	74 12		 je	 SHORT $LN18@DGGuildSer
  000ba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000bd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000c0	75 0e		 jne	 SHORT $LN17@DGGuildSer
  000c2	83 c0 02	 add	 eax, 2
  000c5	83 c1 02	 add	 ecx, 2
  000c8	84 d2		 test	 dl, dl
  000ca	75 e4		 jne	 SHORT $LL16@DGGuildSer
$LN18@DGGuildSer:
  000cc	33 c0		 xor	 eax, eax
  000ce	eb 05		 jmp	 SHORT $LN19@DGGuildSer
$LN17@DGGuildSer:
  000d0	1b c0		 sbb	 eax, eax
  000d2	83 d8 ff	 sbb	 eax, -1
$LN19@DGGuildSer:
  000d5	85 c0		 test	 eax, eax
  000d7	75 12		 jne	 SHORT $LN20@DGGuildSer

; 1050 : 						{
; 1051 : 							DataSend(iUserIndex, (LPBYTE)&pMsg, pMsg.h.size);

  000d9	0f b6 45 95	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  000dd	50		 push	 eax
  000de	8d 4d 94	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000e1	51		 push	 ecx
  000e2	53		 push	 ebx
  000e3	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN20@DGGuildSer:
  000eb	8b 45 8c	 mov	 eax, DWORD PTR _lpGuildInfo$[ebp]
$LN6@DGGuildSer:

; 1033 : 		return;
; 1034 : 
; 1035 : 	int iUserIndex = -1;
; 1036 : 
; 1037 : 	if ( lpGuildInfo->Count >= 0 )
; 1038 : 	{
; 1039 : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  000ee	83 45 90 02	 add	 DWORD PTR tv303[ebp], 2
  000f2	47		 inc	 edi
  000f3	83 c6 0b	 add	 esi, 11			; 0000000bH
  000f6	83 ff 50	 cmp	 edi, 80			; 00000050H
  000f9	7c 85		 jl	 SHORT $LL22@DGGuildSer
$LN5@DGGuildSer:

; 1052 : 						}
; 1053 : 					}
; 1054 : 				}
; 1055 : 			}
; 1056 : 		}
; 1057 : 	}
; 1058 : }

  000fb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	33 cd		 xor	 ecx, ebp
  00102	5b		 pop	 ebx
  00103	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
?DGGuildServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_GUILD_CHATTING_RECV@@@Z ENDP ; DGGuildServerGroupChattingRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDUnionServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z ; GDUnionServerGroupChattingSend
; Function compile flags: /Ogtp
;	COMDAT ?GDUnionServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z
_TEXT	SEGMENT
_pMsg$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_iUnionNum$ = 8						; size = 4
_lpChatData$ = 12					; size = 4
?GDUnionServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z PROC ; GDUnionServerGroupChattingSend, COMDAT

; 1069 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpChatData$[ebp]
  00014	57		 push	 edi

; 1070 : 	EXSDHP_SERVERGROUP_UNION_CHATTING_SEND pMsg = {0};

  00015	6a 4f		 push	 79			; 0000004fH
  00017	8d 45 ad	 lea	 eax, DWORD PTR _pMsg$[ebp+1]
  0001a	6a 00		 push	 0
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _memset

; 1071 : 
; 1072 : 	pMsg.h.set((LPBYTE)&pMsg, 0x51, sizeof(pMsg));
; 1073 : 	pMsg.iUnionNum = iUnionNum;

  00022	8b 4d 08	 mov	 ecx, DWORD PTR _iUnionNum$[ebp]

; 1074 : 	memcpy(pMsg.szCharacterName, lpChatData->chatid, sizeof(pMsg.szCharacterName));

  00025	8b 56 03	 mov	 edx, DWORD PTR [esi+3]
  00028	8b 46 07	 mov	 eax, DWORD PTR [esi+7]
  0002b	89 4d b0	 mov	 DWORD PTR _pMsg$[ebp+4], ecx
  0002e	66 8b 4e 0b	 mov	 cx, WORD PTR [esi+11]
  00032	66 89 4d bc	 mov	 WORD PTR _pMsg$[ebp+16], cx
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	89 55 b4	 mov	 DWORD PTR _pMsg$[ebp+8], edx
  0003c	66 c7 45 ac c1
	50		 mov	 WORD PTR _pMsg$[ebp], 20673 ; 000050c1H
  00042	c6 45 ae 51	 mov	 BYTE PTR _pMsg$[ebp+2], 81 ; 00000051H
  00046	89 45 b8	 mov	 DWORD PTR _pMsg$[ebp+12], eax

; 1075 : 	memcpy(pMsg.szChattingMsg, lpChatData->chatmsg, sizeof(pMsg.szChattingMsg));

  00049	83 c6 0d	 add	 esi, 13			; 0000000dH
  0004c	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00051	8d 7d be	 lea	 edi, DWORD PTR _pMsg$[ebp+18]

; 1076 : 
; 1077 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00054	6a 50		 push	 80			; 00000050H
  00056	8d 55 ac	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00059	f3 a5		 rep movsd
  0005b	52		 push	 edx
  0005c	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00061	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1078 : }

  00066	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00069	5f		 pop	 edi
  0006a	33 cd		 xor	 ecx, ebp
  0006c	5e		 pop	 esi
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?GDUnionServerGroupChattingSend@@YAXHPAUPMSG_CHATDATA@@@Z ENDP ; GDUnionServerGroupChattingSend
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGUnionServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_UNION_CHATTING_RECV@@@Z ; DGUnionServerGroupChattingRecv
EXTRN	?GetGuildUnionMemberList@TUnion@@QAEHHAAHPAH@Z:PROC ; TUnion::GetGuildUnionMemberList
; Function compile flags: /Ogtp
;	COMDAT ?DGUnionServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_UNION_CHATTING_RECV@@@Z
_TEXT	SEGMENT
_i$214349 = -524					; size = 4
_lpGuildInfo$214353 = -520				; size = 4
tv314 = -516						; size = 4
_iGuildCount$ = -512					; size = 4
_pMsg$ = -508						; size = 102
_iGuildList$ = -404					; size = 400
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGUnionServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_UNION_CHATTING_RECV@@@Z PROC ; DGUnionServerGroupChattingRecv, COMDAT

; 1081 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 02 00
	00		 sub	 esp, 524		; 0000020cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00017	56		 push	 esi
  00018	57		 push	 edi

; 1082 : 	PMSG_CHATDATA pMsg ={0};

  00019	6a 65		 push	 101			; 00000065H
  0001b	8d 85 05 fe ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp+1]
  00021	6a 00		 push	 0
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _memset

; 1083 : 
; 1084 : 	pMsg.h.set((LPBYTE)&pMsg, 0x00, sizeof(pMsg));
; 1085 : 	memcpy(pMsg.chatid, lpMsg->szCharacterName, sizeof(pMsg.chatid));

  00029	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0002c	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  0002f	66 8b 43 10	 mov	 ax, WORD PTR [ebx+16]
  00033	89 8d 07 fe ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+3], ecx
  00039	89 95 0b fe ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+7], edx
  0003f	66 89 85 0f fe
	ff ff		 mov	 WORD PTR _pMsg$[ebp+11], ax

; 1086 : 	memcpy(pMsg.chatmsg, lpMsg->szChattingMsg, sizeof(pMsg.chatmsg));

  00046	8d 73 12	 lea	 esi, DWORD PTR [ebx+18]

; 1087 : 	int iUnionNum = lpMsg->iUnionNum;

  00049	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  0004c	66 c7 85 04 fe
	ff ff c1 66	 mov	 WORD PTR _pMsg$[ebp], 26305 ; 000066c1H
  00055	c6 85 06 fe ff
	ff 00		 mov	 BYTE PTR _pMsg$[ebp+2], 0
  0005c	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  00061	8d bd 11 fe ff
	ff		 lea	 edi, DWORD PTR _pMsg$[ebp+13]
  00067	f3 a5		 rep movsd
  00069	a4		 movsb

; 1088 : 	int iGuildCount =0;

  0006a	33 f6		 xor	 esi, esi

; 1089 : 	int iGuildList[100] ={0};

  0006c	68 8c 01 00 00	 push	 396			; 0000018cH
  00071	8d 8d 70 fe ff
	ff		 lea	 ecx, DWORD PTR _iGuildList$[ebp+4]
  00077	56		 push	 esi
  00078	51		 push	 ecx
  00079	89 b5 00 fe ff
	ff		 mov	 DWORD PTR _iGuildCount$[ebp], esi
  0007f	89 b5 6c fe ff
	ff		 mov	 DWORD PTR _iGuildList$[ebp], esi
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 18	 add	 esp, 24			; 00000018H

; 1090 : 
; 1091 : 	if ( UnionManager.GetGuildUnionMemberList(iUnionNum, iGuildCount, iGuildList) == TRUE)

  0008d	8d 95 6c fe ff
	ff		 lea	 edx, DWORD PTR _iGuildList$[ebp]
  00093	52		 push	 edx
  00094	8d 85 00 fe ff
	ff		 lea	 eax, DWORD PTR _iGuildCount$[ebp]
  0009a	50		 push	 eax
  0009b	53		 push	 ebx
  0009c	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  000a1	e8 00 00 00 00	 call	 ?GetGuildUnionMemberList@TUnion@@QAEHHAAHPAH@Z ; TUnion::GetGuildUnionMemberList
  000a6	83 f8 01	 cmp	 eax, 1
  000a9	0f 85 e8 00 00
	00		 jne	 $LN9@DGUnionSer

; 1092 : 	{
; 1093 : 		int iUserIndex = -1;
; 1094 : 
; 1095 : 		for ( int i=0;i<iGuildCount;i++)

  000af	89 b5 f4 fd ff
	ff		 mov	 DWORD PTR _i$214349[ebp], esi
  000b5	39 b5 00 fe ff
	ff		 cmp	 DWORD PTR _iGuildCount$[ebp], esi
  000bb	0f 8e d6 00 00
	00		 jle	 $LN9@DGUnionSer
$LL28@DGUnionSer:

; 1096 : 		{
; 1097 : 			_GUILD_INFO_STRUCT * lpGuildInfo = Guild.SearchGuild_Number(iGuildList[i]);

  000c1	8b 8c b5 6c fe
	ff ff		 mov	 ecx, DWORD PTR _iGuildList$[ebp+esi*4]
  000c8	51		 push	 ecx
  000c9	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000ce	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  000d3	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _lpGuildInfo$214353[ebp], eax

; 1098 : 
; 1099 : 			if ( lpGuildInfo == NULL )

  000d9	85 c0		 test	 eax, eax
  000db	0f 84 a3 00 00
	00		 je	 $LN10@DGUnionSer

; 1100 : 				continue;
; 1101 : 
; 1102 : 			for ( int n=0;n<MAX_USER_GUILD;n++)

  000e1	8d 90 a0 03 00
	00		 lea	 edx, DWORD PTR [eax+928]
  000e7	33 db		 xor	 ebx, ebx
  000e9	8d 70 2f	 lea	 esi, DWORD PTR [eax+47]
  000ec	89 95 fc fd ff
	ff		 mov	 DWORD PTR tv314[ebp], edx
$LL7@DGUnionSer:

; 1103 : 			{
; 1104 : 				if ( lpGuildInfo->Use[n] != FALSE )

  000f2	80 bc 18 40 04
	00 00 00	 cmp	 BYTE PTR [eax+ebx+1088], 0
  000fa	74 6e		 je	 SHORT $LN6@DGUnionSer

; 1105 : 				{
; 1106 : 					iUserIndex = lpGuildInfo->Index[n];

  000fc	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR tv314[ebp]
  00102	0f bf 39	 movsx	 edi, WORD PTR [ecx]

; 1107 : 
; 1108 : 					if ( iUserIndex >= 0 )

  00105	85 ff		 test	 edi, edi
  00107	78 61		 js	 SHORT $LN6@DGUnionSer

; 1109 : 					{
; 1110 : 						if ( lpGuildInfo->Names[n][0] == gObj[iUserIndex].Name[0] )

  00109	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0010f	8b d7		 mov	 edx, edi
  00111	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00117	8d 4c 0a 77	 lea	 ecx, DWORD PTR [edx+ecx+119]
  0011b	8a 16		 mov	 dl, BYTE PTR [esi]
  0011d	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0011f	75 49		 jne	 SHORT $LN6@DGUnionSer

; 1111 : 						{
; 1112 : 							if ( !strcmp(lpGuildInfo->Names[n], gObj[iUserIndex].Name ))

  00121	8b c6		 mov	 eax, esi
$LL21@DGUnionSer:
  00123	8a 10		 mov	 dl, BYTE PTR [eax]
  00125	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00127	75 1a		 jne	 SHORT $LN22@DGUnionSer
  00129	84 d2		 test	 dl, dl
  0012b	74 12		 je	 SHORT $LN23@DGUnionSer
  0012d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00130	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00133	75 0e		 jne	 SHORT $LN22@DGUnionSer
  00135	83 c0 02	 add	 eax, 2
  00138	83 c1 02	 add	 ecx, 2
  0013b	84 d2		 test	 dl, dl
  0013d	75 e4		 jne	 SHORT $LL21@DGUnionSer
$LN23@DGUnionSer:
  0013f	33 c0		 xor	 eax, eax
  00141	eb 05		 jmp	 SHORT $LN24@DGUnionSer
$LN22@DGUnionSer:
  00143	1b c0		 sbb	 eax, eax
  00145	83 d8 ff	 sbb	 eax, -1
$LN24@DGUnionSer:
  00148	85 c0		 test	 eax, eax
  0014a	75 18		 jne	 SHORT $LN25@DGUnionSer

; 1113 : 							{
; 1114 : 								DataSend(iUserIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0014c	0f b6 85 05 fe
	ff ff		 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00153	50		 push	 eax
  00154	8d 8d 04 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0015a	51		 push	 ecx
  0015b	57		 push	 edi
  0015c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00161	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN25@DGUnionSer:
  00164	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _lpGuildInfo$214353[ebp]
$LN6@DGUnionSer:

; 1100 : 				continue;
; 1101 : 
; 1102 : 			for ( int n=0;n<MAX_USER_GUILD;n++)

  0016a	83 85 fc fd ff
	ff 02		 add	 DWORD PTR tv314[ebp], 2
  00171	43		 inc	 ebx
  00172	83 c6 0b	 add	 esi, 11			; 0000000bH
  00175	83 fb 50	 cmp	 ebx, 80			; 00000050H
  00178	0f 8c 74 ff ff
	ff		 jl	 $LL7@DGUnionSer
  0017e	8b b5 f4 fd ff
	ff		 mov	 esi, DWORD PTR _i$214349[ebp]
$LN10@DGUnionSer:

; 1092 : 	{
; 1093 : 		int iUserIndex = -1;
; 1094 : 
; 1095 : 		for ( int i=0;i<iGuildCount;i++)

  00184	46		 inc	 esi
  00185	89 b5 f4 fd ff
	ff		 mov	 DWORD PTR _i$214349[ebp], esi
  0018b	3b b5 00 fe ff
	ff		 cmp	 esi, DWORD PTR _iGuildCount$[ebp]
  00191	0f 8c 2a ff ff
	ff		 jl	 $LL28@DGUnionSer
$LN9@DGUnionSer:

; 1115 : 							}
; 1116 : 						}
; 1117 : 					}
; 1118 : 				}
; 1119 : 			}
; 1120 : 		}
; 1121 : 	}
; 1122 : }

  00197	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019a	5f		 pop	 edi
  0019b	5e		 pop	 esi
  0019c	33 cd		 xor	 ecx, ebp
  0019e	5b		 pop	 ebx
  0019f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a4	8b e5		 mov	 esp, ebp
  001a6	5d		 pop	 ebp
  001a7	c3		 ret	 0
?DGUnionServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_UNION_CHATTING_RECV@@@Z ENDP ; DGUnionServerGroupChattingRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildReqAssignStatus@@YAXHHPADH@Z		; GDGuildReqAssignStatus
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildReqAssignStatus@@YAXHHPADH@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_iAssignType$ = 12					; size = 4
_szTagetName$ = 16					; size = 4
_iGuildStatus$ = 20					; size = 4
?GDGuildReqAssignStatus@@YAXHHPADH@Z PROC		; GDGuildReqAssignStatus, COMDAT

; 1135 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00013	8b 55 10	 mov	 edx, DWORD PTR _szTagetName$[ebp]

; 1136 : 	EXSDHP_GUILD_ASSIGN_STATUS_REQ pMsg = {0};

  00016	33 c0		 xor	 eax, eax
  00018	89 45 e5	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  0001b	89 45 e1	 mov	 DWORD PTR _pMsg$[ebp+1], eax

; 1137 : 
; 1138 : 	pMsg.h.set((LPBYTE)&pMsg, 0xE1, sizeof(EXSDHP_GUILD_ASSIGN_STATUS_REQ));
; 1139 : 	pMsg.btType = iAssignType;
; 1140 : 	pMsg.btGuildStatus = iGuildStatus;
; 1141 : 	pMsg.wUserIndex = aIndex;

  0001e	66 89 4d e4	 mov	 WORD PTR _pMsg$[ebp+4], cx

; 1142 : 	pMsg.szGuildName[MAX_GUILD_LEN] = 0;
; 1143 : 	pMsg.szTargetName[MAX_ACCOUNT_LEN] = 0;
; 1144 : 	memcpy(pMsg.szGuildName, gObj[aIndex].lpGuild->Name, MAX_GUILD_LEN);

  00022	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00028	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  0002b	53		 push	 ebx
  0002c	8a 5d 0c	 mov	 bl, BYTE PTR _iAssignType$[ebp]
  0002f	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  00032	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+27], al
  00035	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+17], eax
  00038	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+21], eax
  0003b	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+25], ax
  0003f	88 45 f0	 mov	 BYTE PTR _pMsg$[ebp+16], al
  00042	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+27], al
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004a	88 5d e6	 mov	 BYTE PTR _pMsg$[ebp+6], bl
  0004d	8a 5d 14	 mov	 bl, BYTE PTR _iGuildStatus$[ebp]
  00050	66 c7 45 e0 c1
	1c		 mov	 WORD PTR _pMsg$[ebp], 7361 ; 00001cc1H
  00056	c6 45 e2 e1	 mov	 BYTE PTR _pMsg$[ebp+2], 225 ; 000000e1H
  0005a	88 5d e7	 mov	 BYTE PTR _pMsg$[ebp+7], bl
  0005d	8b 8c 01 38 04
	00 00		 mov	 ecx, DWORD PTR [ecx+eax+1080]
  00064	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00067	89 45 e8	 mov	 DWORD PTR _pMsg$[ebp+8], eax
  0006a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1145 : 	memcpy(pMsg.szTargetName, szTagetName, MAX_ACCOUNT_LEN);

  0006d	8b 02		 mov	 eax, DWORD PTR [edx]
  0006f	89 4d ec	 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  00072	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00075	66 8b 52 08	 mov	 dx, WORD PTR [edx+8]
  00079	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+17], eax

; 1146 : 
; 1147 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  0007c	6a 1c		 push	 28			; 0000001cH
  0007e	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00081	89 4d f5	 mov	 DWORD PTR _pMsg$[ebp+21], ecx
  00084	50		 push	 eax
  00085	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0008a	66 89 55 f9	 mov	 WORD PTR _pMsg$[ebp+25], dx
  0008e	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1148 : }

  00093	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00096	33 cd		 xor	 ecx, ebp
  00098	5b		 pop	 ebx
  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
?GDGuildReqAssignStatus@@YAXHHPADH@Z ENDP		; GDGuildReqAssignStatus
_TEXT	ENDS
PUBLIC	??_C@_0FA@EEENHOBM@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLAssign?$FN@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildAnsAssignStatus@@YAXPAUEXSDHP_GUILD_ASSIGN_STATUS_RESULT@@@Z ; DGGuildAnsAssignStatus
EXTRN	?SendToUser@TNotice@@QAAXHPADZZ:PROC		; TNotice::SendToUser
EXTRN	??0TNotice@@QAE@E@Z:PROC			; TNotice::TNotice
EXTRN	?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z:PROC ; CGuildClass::SetGuildMemberStatus
;	COMDAT ??_C@_0FA@EEENHOBM@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLAssign?$FN@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0FA@EEENHOBM@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLAssign?$FN@ DB '['
	DB	'U.System][Guild Status][Assign] Guild : ( %s ) Member : ( %s '
	DB	') Status : ( %d )', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?DGGuildAnsAssignStatus@@YAXPAUEXSDHP_GUILD_ASSIGN_STATUS_RESULT@@@Z
_TEXT	SEGMENT
_n$214414 = -300					; size = 4
_lpNode$214391 = -300					; size = 4
_lpNode$214411 = -296					; size = 4
_i$214399 = -296					; size = 4
__Notice$214419 = -292					; size = 272
__Notice$214404 = -292					; size = 272
_pMsg$214393 = -20					; size = 15
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGGuildAnsAssignStatus@@YAXPAUEXSDHP_GUILD_ASSIGN_STATUS_RESULT@@@Z PROC ; DGGuildAnsAssignStatus, COMDAT

; 1151 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 1152 : 	if ( lpMsg->btFlag == 1 )

  00019	8a 47 03	 mov	 al, BYTE PTR [edi+3]
  0001c	3c 01		 cmp	 al, 1
  0001e	0f 85 68 01 00
	00		 jne	 $LN23@DGGuildAns

; 1153 : 	{
; 1154 : 		_GUILD_INFO_STRUCT * lpNode = Guild.SearchGuild(lpMsg->szGuildName);

  00024	8d 5f 09	 lea	 ebx, DWORD PTR [edi+9]
  00027	53		 push	 ebx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0002d	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00032	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _lpNode$214391[ebp], eax

; 1155 : 
; 1156 : 		if ( lpNode == NULL )

  00038	85 c0		 test	 eax, eax
  0003a	75 03		 jne	 SHORT $LN22@DGGuildAns

; 1157 : 		{
; 1158 : 			lpMsg->btResult = 0;

  0003c	88 47 07	 mov	 BYTE PTR [edi+7], al
$LN22@DGGuildAns:

; 1159 : 		}
; 1160 : 
; 1161 : 		PMSG_GUILD_ASSIGN_STATUS_RESULT pMsg = {0};
; 1162 : 
; 1163 : 		pMsg.h.set((LPBYTE)&pMsg, 0xE1, sizeof(PMSG_GUILD_ASSIGN_STATUS_RESULT));
; 1164 : 		pMsg.btType = lpMsg->btType;
; 1165 : 		pMsg.btResult = lpMsg->btResult;
; 1166 : 		memcpy(pMsg.szTagetName, lpMsg->szTargetName, sizeof(pMsg.szTagetName));

  0003f	8b 57 12	 mov	 edx, DWORD PTR [edi+18]
  00042	8a 4f 07	 mov	 cl, BYTE PTR [edi+7]
  00045	33 c0		 xor	 eax, eax
  00047	89 45 ed	 mov	 DWORD PTR _pMsg$214393[ebp+1], eax
  0004a	89 45 f1	 mov	 DWORD PTR _pMsg$214393[ebp+5], eax
  0004d	89 45 f5	 mov	 DWORD PTR _pMsg$214393[ebp+9], eax
  00050	66 89 45 f9	 mov	 WORD PTR _pMsg$214393[ebp+13], ax
  00054	8a 47 06	 mov	 al, BYTE PTR [edi+6]
  00057	8d 77 12	 lea	 esi, DWORD PTR [edi+18]
  0005a	88 45 ef	 mov	 BYTE PTR _pMsg$214393[ebp+3], al
  0005d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00060	89 55 f1	 mov	 DWORD PTR _pMsg$214393[ebp+5], edx
  00063	89 45 f5	 mov	 DWORD PTR _pMsg$214393[ebp+9], eax

; 1167 : 
; 1168 : 		DataSend(lpMsg->wUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  00066	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  0006a	6a 0f		 push	 15			; 0000000fH
  0006c	8d 55 ec	 lea	 edx, DWORD PTR _pMsg$214393[ebp]
  0006f	88 4d f0	 mov	 BYTE PTR _pMsg$214393[ebp+4], cl
  00072	66 8b 4e 08	 mov	 cx, WORD PTR [esi+8]
  00076	52		 push	 edx
  00077	50		 push	 eax
  00078	66 c7 45 ec c1
	0f		 mov	 WORD PTR _pMsg$214393[ebp], 4033 ; 00000fc1H
  0007e	c6 45 ee e1	 mov	 BYTE PTR _pMsg$214393[ebp+2], 225 ; 000000e1H
  00082	66 89 4d f9	 mov	 WORD PTR _pMsg$214393[ebp+13], cx
  00086	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1169 : 
; 1170 : 		if ( lpMsg->btResult == 0 )

  0008e	80 7f 07 00	 cmp	 BYTE PTR [edi+7], 0
  00092	0f 84 03 02 00
	00		 je	 $LN6@DGGuildAns

; 1171 : 		{
; 1172 : 			return;
; 1173 : 		}
; 1174 : 
; 1175 : 		Guild.SetGuildMemberStatus(lpMsg->szGuildName, lpMsg->szTargetName, lpMsg->btGuildStatus);

  00098	0f b6 4f 08	 movzx	 ecx, BYTE PTR [edi+8]
  0009c	51		 push	 ecx
  0009d	56		 push	 esi
  0009e	53		 push	 ebx
  0009f	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000a4	e8 00 00 00 00	 call	 ?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z ; CGuildClass::SetGuildMemberStatus

; 1176 : 
; 1177 : 		LogAddTD("[U.System][Guild Status][Assign] Guild : ( %s ) Member : ( %s ) Status : ( %d )", lpMsg->szGuildName, lpMsg->szTargetName, lpMsg->btGuildStatus);

  000a9	0f b6 57 08	 movzx	 edx, BYTE PTR [edi+8]
  000ad	52		 push	 edx
  000ae	56		 push	 esi
  000af	53		 push	 ebx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EEENHOBM@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLAssign?$FN@
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000bb	8b 9d d4 fe ff
	ff		 mov	 ebx, DWORD PTR _lpNode$214391[ebp]

; 1178 : 
; 1179 : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  000c1	33 c0		 xor	 eax, eax
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _i$214399[ebp], eax
  000cc	81 c3 a0 03 00
	00		 add	 ebx, 928		; 000003a0H
  000d2	eb 0c 8d a4 24
	00 00 00 00 eb
	03 8d 49 00	 npad	 14
$LL20@DGGuildAns:

; 1180 : 		{
; 1181 : 			if ( lpNode->Use[i] > 0 && lpNode->Index[i] >= 0)

  000e0	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _lpNode$214391[ebp]
  000e6	80 bc 01 40 04
	00 00 00	 cmp	 BYTE PTR [ecx+eax+1088], 0
  000ee	76 72		 jbe	 SHORT $LN19@DGGuildAns
  000f0	66 83 3b 00	 cmp	 WORD PTR [ebx], 0
  000f4	7c 6c		 jl	 SHORT $LN19@DGGuildAns

; 1182 : 			{
; 1183 : 				TNotice _Notice(0);

  000f6	6a 00		 push	 0
  000f8	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214404[ebp]
  000fe	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1184 : 
; 1185 : 				if ( lpMsg->btGuildStatus == GUILD_ASSISTANT )

  00103	8a 47 08	 mov	 al, BYTE PTR [edi+8]

; 1186 : 				{
; 1187 : 					_Notice.SendToUser(lpNode->Index[i], lMsg.Get(MSGGET(6, 184)), lpMsg->szTargetName);

  00106	56		 push	 esi
  00107	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0010c	3c 40		 cmp	 al, 64			; 00000040H
  0010e	75 18		 jne	 SHORT $LN16@DGGuildAns
  00110	68 b8 06 00 00	 push	 1720			; 000006b8H
  00115	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0011a	0f bf 13	 movsx	 edx, WORD PTR [ebx]
  0011d	50		 push	 eax
  0011e	52		 push	 edx
  0011f	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR __Notice$214404[ebp]
  00125	50		 push	 eax
  00126	eb 32		 jmp	 SHORT $LN33@DGGuildAns
$LN16@DGGuildAns:

; 1188 : 				}
; 1189 : 				else if ( lpMsg->btGuildStatus == GUILD_BATTLE_MASTER )

  00128	3c 20		 cmp	 al, 32			; 00000020H
  0012a	75 18		 jne	 SHORT $LN14@DGGuildAns

; 1190 : 				{
; 1191 : 					_Notice.SendToUser(lpNode->Index[i], lMsg.Get(MSGGET(6, 185)), lpMsg->szTargetName);

  0012c	68 b9 06 00 00	 push	 1721			; 000006b9H
  00131	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00136	0f bf 0b	 movsx	 ecx, WORD PTR [ebx]
  00139	50		 push	 eax
  0013a	51		 push	 ecx
  0013b	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR __Notice$214404[ebp]
  00141	52		 push	 edx

; 1192 : 				}
; 1193 : 				else

  00142	eb 16		 jmp	 SHORT $LN33@DGGuildAns
$LN14@DGGuildAns:

; 1194 : 				{
; 1195 : 					_Notice.SendToUser(lpNode->Index[i], lMsg.Get(MSGGET(6, 186)), lpMsg->szTargetName);

  00144	68 ba 06 00 00	 push	 1722			; 000006baH
  00149	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0014e	50		 push	 eax
  0014f	0f bf 03	 movsx	 eax, WORD PTR [ebx]
  00152	50		 push	 eax
  00153	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214404[ebp]
  00159	51		 push	 ecx
$LN33@DGGuildAns:
  0015a	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  0015f	83 c4 10	 add	 esp, 16			; 00000010H
$LN19@DGGuildAns:

; 1178 : 
; 1179 : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  00162	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _i$214399[ebp]
  00168	40		 inc	 eax
  00169	83 c3 02	 add	 ebx, 2
  0016c	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _i$214399[ebp], eax
  00172	83 f8 50	 cmp	 eax, 80			; 00000050H
  00175	0f 8c 65 ff ff
	ff		 jl	 $LL20@DGGuildAns
  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi
  0017d	5b		 pop	 ebx

; 1236 : 				}
; 1237 : 			}
; 1238 : 		}
; 1239 : 	}
; 1240 : }

  0017e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00181	33 cd		 xor	 ecx, ebp
  00183	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c3		 ret	 0
$LN23@DGGuildAns:

; 1196 : 				}
; 1197 : 			}
; 1198 : 		}
; 1199 : 	}
; 1200 : 	else if ( lpMsg->btFlag == 0 )

  0018c	84 c0		 test	 al, al
  0018e	0f 85 07 01 00
	00		 jne	 $LN6@DGGuildAns

; 1201 : 	{
; 1202 : 		_GUILD_INFO_STRUCT * lpNode = Guild.SearchGuild(lpMsg->szGuildName);

  00194	8d 77 09	 lea	 esi, DWORD PTR [edi+9]
  00197	56		 push	 esi
  00198	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0019d	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  001a2	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _lpNode$214411[ebp], eax

; 1203 : 
; 1204 : 		if ( lpNode == NULL )

  001a8	85 c0		 test	 eax, eax
  001aa	0f 84 eb 00 00
	00		 je	 $LN6@DGGuildAns

; 1205 : 		{
; 1206 : 			return;
; 1207 : 		}
; 1208 : 		
; 1209 : 		Guild.SetGuildMemberStatus(lpMsg->szGuildName, lpMsg->szTargetName, lpMsg->btGuildStatus);

  001b0	0f b6 57 08	 movzx	 edx, BYTE PTR [edi+8]
  001b4	52		 push	 edx
  001b5	8d 5f 12	 lea	 ebx, DWORD PTR [edi+18]
  001b8	53		 push	 ebx
  001b9	56		 push	 esi
  001ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  001bf	e8 00 00 00 00	 call	 ?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z ; CGuildClass::SetGuildMemberStatus

; 1210 : 
; 1211 : 		LogAddTD("[U.System][Guild Status][Assign] Guild : ( %s ) Member : ( %s ) Status : ( %d )", lpMsg->szGuildName, lpMsg->szTargetName, lpMsg->btGuildStatus);

  001c4	0f b6 47 08	 movzx	 eax, BYTE PTR [edi+8]
  001c8	50		 push	 eax
  001c9	53		 push	 ebx
  001ca	56		 push	 esi
  001cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EEENHOBM@?$FLU?4System?$FN?$FLGuild?5Status?$FN?$FLAssign?$FN@
  001d0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001d6	83 c4 10	 add	 esp, 16			; 00000010H

; 1212 : 		
; 1213 : 		if ( lpMsg->btResult == 0 )

  001d9	80 7f 07 00	 cmp	 BYTE PTR [edi+7], 0
  001dd	0f 84 b8 00 00
	00		 je	 $LN6@DGGuildAns

; 1214 : 		{
; 1215 : 			return;
; 1216 : 		}
; 1217 : 
; 1218 : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  001e3	8b b5 d8 fe ff
	ff		 mov	 esi, DWORD PTR _lpNode$214411[ebp]
  001e9	33 c0		 xor	 eax, eax
  001eb	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _n$214414[ebp], eax
  001f1	81 c6 a0 03 00
	00		 add	 esi, 928		; 000003a0H
  001f7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL32@DGGuildAns:

; 1219 : 		{
; 1220 : 			if ( lpNode->Use[n] > 0 && lpNode->Index[n] >= 0)

  00200	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _lpNode$214411[ebp]
  00206	80 bc 01 40 04
	00 00 00	 cmp	 BYTE PTR [ecx+eax+1088], 0
  0020e	76 72		 jbe	 SHORT $LN7@DGGuildAns
  00210	66 83 3e 00	 cmp	 WORD PTR [esi], 0
  00214	7c 6c		 jl	 SHORT $LN7@DGGuildAns

; 1221 : 			{
; 1222 : 				TNotice _Notice(0);

  00216	6a 00		 push	 0
  00218	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214419[ebp]
  0021e	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1223 : 
; 1224 : 
; 1225 : 				if ( lpMsg->btGuildStatus == GUILD_ASSISTANT )

  00223	8a 47 08	 mov	 al, BYTE PTR [edi+8]

; 1226 : 				{
; 1227 : 					_Notice.SendToUser(lpNode->Index[n], lMsg.Get(MSGGET(6, 184)), lpMsg->szTargetName);

  00226	53		 push	 ebx
  00227	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0022c	3c 40		 cmp	 al, 64			; 00000040H
  0022e	75 18		 jne	 SHORT $LN4@DGGuildAns
  00230	68 b8 06 00 00	 push	 1720			; 000006b8H
  00235	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0023a	0f bf 16	 movsx	 edx, WORD PTR [esi]
  0023d	50		 push	 eax
  0023e	52		 push	 edx
  0023f	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR __Notice$214419[ebp]
  00245	50		 push	 eax
  00246	eb 32		 jmp	 SHORT $LN34@DGGuildAns
$LN4@DGGuildAns:

; 1228 : 				}
; 1229 : 				else if ( lpMsg->btGuildStatus == GUILD_BATTLE_MASTER )

  00248	3c 20		 cmp	 al, 32			; 00000020H
  0024a	75 18		 jne	 SHORT $LN2@DGGuildAns

; 1230 : 				{
; 1231 : 					_Notice.SendToUser(lpNode->Index[n], lMsg.Get(MSGGET(6, 185)), lpMsg->szTargetName);

  0024c	68 b9 06 00 00	 push	 1721			; 000006b9H
  00251	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00256	0f bf 0e	 movsx	 ecx, WORD PTR [esi]
  00259	50		 push	 eax
  0025a	51		 push	 ecx
  0025b	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR __Notice$214419[ebp]
  00261	52		 push	 edx

; 1232 : 				}
; 1233 : 				else

  00262	eb 16		 jmp	 SHORT $LN34@DGGuildAns
$LN2@DGGuildAns:

; 1234 : 				{
; 1235 : 					_Notice.SendToUser(lpNode->Index[n], lMsg.Get(MSGGET(6, 186)), lpMsg->szTargetName);

  00264	68 ba 06 00 00	 push	 1722			; 000006baH
  00269	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0026e	50		 push	 eax
  0026f	0f bf 06	 movsx	 eax, WORD PTR [esi]
  00272	50		 push	 eax
  00273	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214419[ebp]
  00279	51		 push	 ecx
$LN34@DGGuildAns:
  0027a	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  0027f	83 c4 10	 add	 esp, 16			; 00000010H
$LN7@DGGuildAns:

; 1214 : 		{
; 1215 : 			return;
; 1216 : 		}
; 1217 : 
; 1218 : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  00282	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _n$214414[ebp]
  00288	40		 inc	 eax
  00289	83 c6 02	 add	 esi, 2
  0028c	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _n$214414[ebp], eax
  00292	83 f8 50	 cmp	 eax, 80			; 00000050H
  00295	0f 8c 65 ff ff
	ff		 jl	 $LL32@DGGuildAns
$LN6@DGGuildAns:

; 1236 : 				}
; 1237 : 			}
; 1238 : 		}
; 1239 : 	}
; 1240 : }

  0029b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029e	5f		 pop	 edi
  0029f	5e		 pop	 esi
  002a0	33 cd		 xor	 ecx, ebp
  002a2	5b		 pop	 ebx
  002a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a8	8b e5		 mov	 esp, ebp
  002aa	5d		 pop	 ebp
  002ab	c3		 ret	 0
?DGGuildAnsAssignStatus@@YAXPAUEXSDHP_GUILD_ASSIGN_STATUS_RESULT@@@Z ENDP ; DGGuildAnsAssignStatus
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDGuildReqAssignType@@YAXHH@Z			; GDGuildReqAssignType
; Function compile flags: /Ogtp
;	COMDAT ?GDGuildReqAssignType@@YAXHH@Z
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_iGuildType$ = 12					; size = 4
?GDGuildReqAssignType@@YAXHH@Z PROC			; GDGuildReqAssignType, COMDAT

; 1251 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]

; 1252 : 	EXSDHP_GUILD_ASSIGN_TYPE_REQ pMsg = {0};
; 1253 : 
; 1254 : 	pMsg.h.set((LPBYTE)&pMsg, 0xE2, sizeof(EXSDHP_GUILD_ASSIGN_TYPE_REQ));
; 1255 : 	pMsg.btGuildType = iGuildType;

  00013	8a 55 0c	 mov	 dl, BYTE PTR _iGuildType$[ebp]
  00016	33 c0		 xor	 eax, eax
  00018	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  0001b	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+5], eax

; 1256 : 	pMsg.wUserIndex = aIndex;

  0001e	66 89 4d f0	 mov	 WORD PTR _pMsg$[ebp+4], cx

; 1257 : 	pMsg.szGuildName[MAX_GUILD_LEN] = 0;
; 1258 : 	memcpy(pMsg.szGuildName, gObj[aIndex].lpGuild->Name, MAX_GUILD_LEN);

  00022	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00028	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  0002b	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+15], al
  0002e	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+13], ax
  00032	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+15], al
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003a	66 c7 45 ec c1
	10		 mov	 WORD PTR _pMsg$[ebp], 4289 ; 000010c1H
  00040	c6 45 ee e2	 mov	 BYTE PTR _pMsg$[ebp+2], 226 ; 000000e2H
  00044	88 55 f2	 mov	 BYTE PTR _pMsg$[ebp+6], dl
  00047	8b 8c 01 38 04
	00 00		 mov	 ecx, DWORD PTR [ecx+eax+1080]
  0004e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00051	89 55 f3	 mov	 DWORD PTR _pMsg$[ebp+7], edx
  00054	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 1259 : 
; 1260 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00057	6a 10		 push	 16			; 00000010H
  00059	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0005c	51		 push	 ecx
  0005d	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00062	89 45 f7	 mov	 DWORD PTR _pMsg$[ebp+11], eax
  00065	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1261 : }

  0006a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006d	33 cd		 xor	 ecx, ebp
  0006f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?GDGuildReqAssignType@@YAXHH@Z ENDP			; GDGuildReqAssignType
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGGuildAnsAssignType@@YAXPAUEXSDHP_GUILD_ASSIGN_TYPE_RESULT@@@Z ; DGGuildAnsAssignType
; Function compile flags: /Ogtp
;	COMDAT ?DGGuildAnsAssignType@@YAXPAUEXSDHP_GUILD_ASSIGN_TYPE_RESULT@@@Z
_TEXT	SEGMENT
_lpNode$214478 = -288					; size = 4
_lpNode$214463 = -288					; size = 4
_pMsg$214465 = -284					; size = 5
__Notice$214486 = -276					; size = 272
_pNotice$214475 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGGuildAnsAssignType@@YAXPAUEXSDHP_GUILD_ASSIGN_TYPE_RESULT@@@Z PROC ; DGGuildAnsAssignType, COMDAT

; 1264 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 1265 : 	if ( lpMsg->btFlag == G_TYPE_GUARD )

  00018	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  0001b	57		 push	 edi
  0001c	3c 01		 cmp	 al, 1
  0001e	0f 85 f5 00 00
	00		 jne	 $LN15@DGGuildAns@2

; 1266 : 	{
; 1267 : 		_GUILD_INFO_STRUCT * lpNode = Guild.SearchGuild(lpMsg->szGuildName);

  00024	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  00027	53		 push	 ebx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0002d	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00032	8b f8		 mov	 edi, eax
  00034	89 bd e0 fe ff
	ff		 mov	 DWORD PTR _lpNode$214463[ebp], edi

; 1268 : 
; 1269 : 		if ( lpNode == NULL )

  0003a	85 ff		 test	 edi, edi
  0003c	75 03		 jne	 SHORT $LN14@DGGuildAns@2

; 1270 : 		{
; 1271 : 			lpMsg->btResult = 0;

  0003e	88 46 07	 mov	 BYTE PTR [esi+7], al
$LN14@DGGuildAns@2:

; 1272 : 		}
; 1273 : 
; 1274 : 		PMSG_GUILD_ASSIGN_TYPE_RESULT pMsg = {0};
; 1275 : 
; 1276 : 		pMsg.h.set((LPBYTE)&pMsg, 0xE2, sizeof(PMSG_GUILD_ASSIGN_TYPE_RESULT));
; 1277 : 		pMsg.btGuildType = lpMsg->btGuildType;

  00041	8a 46 06	 mov	 al, BYTE PTR [esi+6]

; 1278 : 		pMsg.btResult = lpMsg->btResult;

  00044	8a 4e 07	 mov	 cl, BYTE PTR [esi+7]
  00047	c7 85 e5 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pMsg$214465[ebp+1], 0
  00051	88 85 e7 fe ff
	ff		 mov	 BYTE PTR _pMsg$214465[ebp+3], al

; 1279 : 
; 1280 : 		DataSend(lpMsg->wUserIndex, (LPBYTE)&pMsg,sizeof(pMsg));

  00057	0f b7 46 04	 movzx	 eax, WORD PTR [esi+4]
  0005b	6a 05		 push	 5
  0005d	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _pMsg$214465[ebp]
  00063	52		 push	 edx
  00064	50		 push	 eax
  00065	66 c7 85 e4 fe
	ff ff c1 05	 mov	 WORD PTR _pMsg$214465[ebp], 1473 ; 000005c1H
  0006e	c6 85 e6 fe ff
	ff e2		 mov	 BYTE PTR _pMsg$214465[ebp+2], 226 ; 000000e2H
  00075	88 8d e8 fe ff
	ff		 mov	 BYTE PTR _pMsg$214465[ebp+4], cl
  0007b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1281 : 
; 1282 : 		if ( lpMsg->btResult == G_ERROR_NONE )

  00083	80 7e 07 00	 cmp	 BYTE PTR [esi+7], 0
  00087	0f 84 2b 01 00
	00		 je	 $LN2@DGGuildAns@2

; 1283 : 		{
; 1284 : 			return;
; 1285 : 		}
; 1286 : 
; 1287 : 		Guild.SetGuildType(lpMsg->szGuildName, lpMsg->btGuildType);

  0008d	0f b6 4e 06	 movzx	 ecx, BYTE PTR [esi+6]
  00091	51		 push	 ecx
  00092	53		 push	 ebx
  00093	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00098	e8 00 00 00 00	 call	 ?SetGuildType@CGuildClass@@QAEHPADH@Z ; CGuildClass::SetGuildType

; 1288 : 
; 1289 : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  0009d	33 db		 xor	 ebx, ebx
  0009f	81 c7 a0 03 00
	00		 add	 edi, 928		; 000003a0H
  000a5	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL12@DGGuildAns@2:

; 1290 : 		{
; 1291 : 			if ( lpNode->Use[i] > 0 && lpNode->Index[i] >= 0)

  000b0	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _lpNode$214463[ebp]
  000b6	80 bc 1a 40 04
	00 00 00	 cmp	 BYTE PTR [edx+ebx+1088], 0
  000be	76 3f		 jbe	 SHORT $LN11@DGGuildAns@2
  000c0	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  000c4	7c 39		 jl	 SHORT $LN11@DGGuildAns@2

; 1292 : 			{
; 1293 : 				TNotice pNotice(0);

  000c6	6a 00		 push	 0
  000c8	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$214475[ebp]
  000ce	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1294 : 				pNotice.SendToUser(lpNode->Index[i], lMsg.Get(MSGGET(6, 187)), lpMsg->szGuildName, lpMsg->btGuildType);

  000d3	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  000d7	50		 push	 eax
  000d8	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000db	50		 push	 eax
  000dc	68 bb 06 00 00	 push	 1723			; 000006bbH
  000e1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000e6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000eb	0f bf 0f	 movsx	 ecx, WORD PTR [edi]
  000ee	50		 push	 eax
  000ef	51		 push	 ecx
  000f0	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$214475[ebp]
  000f6	52		 push	 edx
  000f7	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  000fc	83 c4 14	 add	 esp, 20			; 00000014H
$LN11@DGGuildAns@2:

; 1288 : 
; 1289 : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  000ff	43		 inc	 ebx
  00100	83 c7 02	 add	 edi, 2
  00103	83 fb 50	 cmp	 ebx, 80			; 00000050H
  00106	7c a8		 jl	 SHORT $LL12@DGGuildAns@2
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx

; 1320 : 			}
; 1321 : 		}
; 1322 : 	}
; 1323 : }

  0010b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010e	33 cd		 xor	 ecx, ebp
  00110	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
$LN15@DGGuildAns@2:

; 1295 : 			}
; 1296 : 		}
; 1297 : 	}
; 1298 : 	else if ( lpMsg->btFlag == G_TYPE_COMMON )

  00119	84 c0		 test	 al, al
  0011b	0f 85 97 00 00
	00		 jne	 $LN2@DGGuildAns@2

; 1299 : 	{
; 1300 : 		_GUILD_INFO_STRUCT * lpNode = Guild.SearchGuild(lpMsg->szGuildName);

  00121	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  00124	53		 push	 ebx
  00125	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0012a	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  0012f	8b f8		 mov	 edi, eax
  00131	89 bd e0 fe ff
	ff		 mov	 DWORD PTR _lpNode$214478[ebp], edi

; 1301 : 
; 1302 : 		if ( lpNode == NULL )

  00137	85 ff		 test	 edi, edi
  00139	74 7d		 je	 SHORT $LN2@DGGuildAns@2

; 1303 : 		{
; 1304 : 			return;
; 1305 : 		}
; 1306 : 
; 1307 : 		Guild.SetGuildType(lpMsg->szGuildName, lpMsg->btGuildType);

  0013b	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  0013f	50		 push	 eax
  00140	53		 push	 ebx
  00141	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00146	e8 00 00 00 00	 call	 ?SetGuildType@CGuildClass@@QAEHPADH@Z ; CGuildClass::SetGuildType

; 1308 : 
; 1309 : 		if ( lpMsg->btResult == G_ERROR_NONE )

  0014b	80 7e 07 00	 cmp	 BYTE PTR [esi+7], 0
  0014f	74 67		 je	 SHORT $LN2@DGGuildAns@2

; 1310 : 		{
; 1311 : 			return;
; 1312 : 		}		
; 1313 : 		
; 1314 : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  00151	33 db		 xor	 ebx, ebx
  00153	81 c7 a0 03 00
	00		 add	 edi, 928		; 000003a0H
  00159	8d a4 24 00 00
	00 00		 npad	 7
$LL4@DGGuildAns@2:

; 1315 : 		{
; 1316 : 			if ( lpNode->Use[n] > 0 && lpNode->Index[n] >= 0)

  00160	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _lpNode$214478[ebp]
  00166	80 bc 19 40 04
	00 00 00	 cmp	 BYTE PTR [ecx+ebx+1088], 0
  0016e	76 3f		 jbe	 SHORT $LN3@DGGuildAns@2
  00170	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  00174	7c 39		 jl	 SHORT $LN3@DGGuildAns@2

; 1317 : 			{
; 1318 : 				TNotice _Notice(0);

  00176	6a 00		 push	 0
  00178	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214486[ebp]
  0017e	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1319 : 				_Notice.SendToUser(lpNode->Index[n], lMsg.Get(MSGGET(6, 187)), lpMsg->szGuildName, lpMsg->btGuildType);

  00183	0f b6 56 06	 movzx	 edx, BYTE PTR [esi+6]
  00187	52		 push	 edx
  00188	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0018b	50		 push	 eax
  0018c	68 bb 06 00 00	 push	 1723			; 000006bbH
  00191	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00196	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0019b	50		 push	 eax
  0019c	0f bf 07	 movsx	 eax, WORD PTR [edi]
  0019f	50		 push	 eax
  001a0	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214486[ebp]
  001a6	51		 push	 ecx
  001a7	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  001ac	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@DGGuildAns@2:

; 1310 : 		{
; 1311 : 			return;
; 1312 : 		}		
; 1313 : 		
; 1314 : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  001af	43		 inc	 ebx
  001b0	83 c7 02	 add	 edi, 2
  001b3	83 fb 50	 cmp	 ebx, 80			; 00000050H
  001b6	7c a8		 jl	 SHORT $LL4@DGGuildAns@2
$LN2@DGGuildAns@2:

; 1320 : 			}
; 1321 : 		}
; 1322 : 	}
; 1323 : }

  001b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	33 cd		 xor	 ecx, ebp
  001bf	5b		 pop	 ebx
  001c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c3		 ret	 0
?DGGuildAnsAssignType@@YAXPAUEXSDHP_GUILD_ASSIGN_TYPE_RESULT@@@Z ENDP ; DGGuildAnsAssignType
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDRelationShipReqJoin@@YAXHHH@Z		; GDRelationShipReqJoin
; Function compile flags: /Ogtp
;	COMDAT ?GDRelationShipReqJoin@@YAXHHH@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_iTargetUserIndex$ = 12					; size = 4
_iRelationShipType$ = 16				; size = 4
?GDRelationShipReqJoin@@YAXHHH@Z PROC			; GDRelationShipReqJoin, COMDAT

; 1336 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1337 : 	_GUILD_INFO_STRUCT * lpGuildInfo = gObj[aIndex].lpGuild;

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _iTargetUserIndex$[ebp]
  00018	56		 push	 esi
  00019	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0001c	8b d6		 mov	 edx, esi
  0001e	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 1339 : 
; 1340 : 	if ( !lpGuildInfo || !lpTargetGuildInfo )

  00024	83 bc 02 38 04
	00 00 00	 cmp	 DWORD PTR [edx+eax+1080], 0
  0002c	57		 push	 edi
  0002d	8d bc 02 38 04
	00 00		 lea	 edi, DWORD PTR [edx+eax+1080]
  00034	74 64		 je	 SHORT $LN1@GDRelation

; 1338 : 	_GUILD_INFO_STRUCT * lpTargetGuildInfo = gObj[iTargetUserIndex].lpGuild;

  00036	8b d1		 mov	 edx, ecx
  00038	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 1339 : 
; 1340 : 	if ( !lpGuildInfo || !lpTargetGuildInfo )

  0003e	83 bc 02 38 04
	00 00 00	 cmp	 DWORD PTR [edx+eax+1080], 0
  00046	8d 94 02 38 04
	00 00		 lea	 edx, DWORD PTR [edx+eax+1080]
  0004d	74 4b		 je	 SHORT $LN1@GDRelation

; 1341 : 	{
; 1342 : 		return;
; 1343 : 	}
; 1344 : 
; 1345 : 	EXSDHP_RELATIONSHIP_JOIN_REQ pMsg = {0};

  0004f	33 c0		 xor	 eax, eax
  00051	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00054	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  00057	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  0005a	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  0005d	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+17], ax
  00061	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+19], al

; 1346 : 
; 1347 : 	pMsg.h.set((LPBYTE)&pMsg, 0xE5, sizeof(EXSDHP_RELATIONSHIP_JOIN_REQ));
; 1348 : 	pMsg.wRequestUserIndex = aIndex;
; 1349 : 	pMsg.wTargetUserIndex = iTargetUserIndex;
; 1350 : 	pMsg.btRelationShipType = iRelationShipType;

  00064	8a 45 10	 mov	 al, BYTE PTR _iRelationShipType$[ebp]
  00067	66 89 4d ee	 mov	 WORD PTR _pMsg$[ebp+6], cx
  0006b	88 45 f0	 mov	 BYTE PTR _pMsg$[ebp+8], al
  0006e	66 c7 45 e8 c1
	14		 mov	 WORD PTR _pMsg$[ebp], 5313 ; 000014c1H
  00074	c6 45 ea e5	 mov	 BYTE PTR _pMsg$[ebp+2], 229 ; 000000e5H
  00078	66 89 75 ec	 mov	 WORD PTR _pMsg$[ebp+4], si

; 1351 : 	pMsg.iRequestGuildNum = gObj[aIndex].lpGuild->Number;

  0007c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0007e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00080	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+12], eax

; 1352 : 	pMsg.iTargetGuildNum = gObj[iTargetUserIndex].lpGuild->Number;

  00083	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00085	8b 11		 mov	 edx, DWORD PTR [ecx]

; 1353 : 
; 1354 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00087	6a 14		 push	 20			; 00000014H
  00089	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0008c	50		 push	 eax
  0008d	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00092	89 55 f8	 mov	 DWORD PTR _pMsg$[ebp+16], edx
  00095	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN1@GDRelation:

; 1355 : }

  0009a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009d	5f		 pop	 edi
  0009e	33 cd		 xor	 ecx, ebp
  000a0	5e		 pop	 esi
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?GDRelationShipReqJoin@@YAXHHH@Z ENDP			; GDRelationShipReqJoin
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDUnionBreakOff@@YAXHH@Z			; GDUnionBreakOff
; Function compile flags: /Ogtp
;	COMDAT ?GDUnionBreakOff@@YAXHH@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_iUnionNumber$ = 12					; size = 4
?GDUnionBreakOff@@YAXHH@Z PROC				; GDUnionBreakOff, COMDAT

; 1470 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]

; 1471 : 	_GUILD_INFO_STRUCT * lpGuildInfo = gObj[aIndex].lpGuild;

  00013	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00019	8b c1		 mov	 eax, ecx
  0001b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00021	8b 94 10 38 04
	00 00		 mov	 edx, DWORD PTR [eax+edx+1080]

; 1472 : 
; 1473 : 	if ( !lpGuildInfo )

  00028	85 d2		 test	 edx, edx
  0002a	74 4b		 je	 SHORT $LN2@GDUnionBre

; 1474 : 	{
; 1475 : 		return;
; 1476 : 	}
; 1477 : 
; 1478 : 	EXSDHP_RELATIONSHIP_BREAKOFF_REQ pMsg = {0};

  0002c	33 c0		 xor	 eax, eax
  0002e	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00031	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  00034	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  00037	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  0003a	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+17], ax
  0003e	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+19], al

; 1479 : 
; 1480 : 	pMsg.h.set((LPBYTE)&pMsg, 0xE6, sizeof(EXSDHP_RELATIONSHIP_BREAKOFF_REQ));
; 1481 : 	pMsg.wRequestUserIndex = aIndex;
; 1482 : 	pMsg.wTargetUserIndex = -1;

  00041	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00046	66 89 4d ec	 mov	 WORD PTR _pMsg$[ebp+4], cx
  0004a	66 89 45 ee	 mov	 WORD PTR _pMsg$[ebp+6], ax
  0004e	66 c7 45 e8 c1
	14		 mov	 WORD PTR _pMsg$[ebp], 5313 ; 000014c1H
  00054	c6 45 ea e6	 mov	 BYTE PTR _pMsg$[ebp+2], 230 ; 000000e6H

; 1483 : 	pMsg.btRelationShipType = G_RELATIONSHIP_UNION;

  00058	c6 45 f0 01	 mov	 BYTE PTR _pMsg$[ebp+8], 1

; 1484 : 	pMsg.iRequestGuildNum = lpGuildInfo->Number;

  0005c	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 1485 : 	pMsg.iTargetGuildNum = iUnionNumber;

  0005e	8b 55 0c	 mov	 edx, DWORD PTR _iUnionNumber$[ebp]

; 1486 : 
; 1487 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00061	6a 14		 push	 20			; 00000014H
  00063	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00066	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  00069	50		 push	 eax
  0006a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0006f	89 55 f8	 mov	 DWORD PTR _pMsg$[ebp+16], edx
  00072	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN2@GDUnionBre:

; 1488 : 
; 1489 : }

  00077	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007a	33 cd		 xor	 ecx, ebp
  0007c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
?GDUnionBreakOff@@YAXHH@Z ENDP				; GDUnionBreakOff
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDRelationShipReqBreakOff@@YAXHHH@Z		; GDRelationShipReqBreakOff
; Function compile flags: /Ogtp
;	COMDAT ?GDRelationShipReqBreakOff@@YAXHHH@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_iTargetUserIndex$ = 12					; size = 4
_iRelationShipType$ = 16				; size = 4
?GDRelationShipReqBreakOff@@YAXHHH@Z PROC		; GDRelationShipReqBreakOff, COMDAT

; 1571 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00013	8b 55 0c	 mov	 edx, DWORD PTR _iTargetUserIndex$[ebp]

; 1572 : 	_GUILD_INFO_STRUCT * lpGuildInfo = gObj[aIndex].lpGuild;

  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	8b f1		 mov	 esi, ecx
  0001f	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00025	8b b4 06 38 04
	00 00		 mov	 esi, DWORD PTR [esi+eax+1080]

; 1573 : 	_GUILD_INFO_STRUCT * lpTargetGuildInfo = gObj[iTargetUserIndex].lpGuild;

  0002c	8b fa		 mov	 edi, edx
  0002e	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00034	8b bc 07 38 04
	00 00		 mov	 edi, DWORD PTR [edi+eax+1080]

; 1574 : 
; 1575 : 	if ( !lpGuildInfo || !lpTargetGuildInfo )

  0003b	85 f6		 test	 esi, esi
  0003d	74 4b		 je	 SHORT $LN1@GDRelation@2
  0003f	85 ff		 test	 edi, edi
  00041	74 47		 je	 SHORT $LN1@GDRelation@2

; 1576 : 		return;
; 1577 : 
; 1578 : 	EXSDHP_RELATIONSHIP_BREAKOFF_REQ pMsg = {0};

  00043	33 c0		 xor	 eax, eax
  00045	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00048	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  0004b	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  0004e	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  00051	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+17], ax
  00055	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+19], al

; 1579 : 
; 1580 : 	pMsg.h.set((LPBYTE)&pMsg, 0xE6, sizeof(EXSDHP_RELATIONSHIP_BREAKOFF_REQ));
; 1581 : 	pMsg.wRequestUserIndex = aIndex;
; 1582 : 	pMsg.wTargetUserIndex = iTargetUserIndex;
; 1583 : 	pMsg.btRelationShipType = iRelationShipType;

  00058	8a 45 10	 mov	 al, BYTE PTR _iRelationShipType$[ebp]
  0005b	66 89 4d ec	 mov	 WORD PTR _pMsg$[ebp+4], cx
  0005f	88 45 f0	 mov	 BYTE PTR _pMsg$[ebp+8], al
  00062	66 c7 45 e8 c1
	14		 mov	 WORD PTR _pMsg$[ebp], 5313 ; 000014c1H
  00068	c6 45 ea e6	 mov	 BYTE PTR _pMsg$[ebp+2], 230 ; 000000e6H
  0006c	66 89 55 ee	 mov	 WORD PTR _pMsg$[ebp+6], dx

; 1584 : 	pMsg.iRequestGuildNum = lpGuildInfo->Number;

  00070	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00072	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+12], ecx

; 1585 : 	pMsg.iTargetGuildNum = lpTargetGuildInfo->Number;

  00075	8b 17		 mov	 edx, DWORD PTR [edi]

; 1586 : 
; 1587 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00077	6a 14		 push	 20			; 00000014H
  00079	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0007c	50		 push	 eax
  0007d	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00082	89 55 f8	 mov	 DWORD PTR _pMsg$[ebp+16], edx
  00085	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN1@GDRelation@2:

; 1588 : }

  0008a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008d	5f		 pop	 edi
  0008e	33 cd		 xor	 ecx, ebp
  00090	5e		 pop	 esi
  00091	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
?GDRelationShipReqBreakOff@@YAXHHH@Z ENDP		; GDRelationShipReqBreakOff
_TEXT	ENDS
PUBLIC	?DGRelationShipListRecv@@YAXPAUEXSDHP_UNION_RELATIONSHIP_LIST@@@Z ; DGRelationShipListRecv
EXTRN	?SetGuildRivalMemberList@TUnion@@QAEHHHPBH@Z:PROC ; TUnion::SetGuildRivalMemberList
EXTRN	?SetGuildUnionMemberList@TUnion@@QAEHHHPBH@Z:PROC ; TUnion::SetGuildUnionMemberList
EXTRN	?AddUnion@TUnion@@QAEHHPAD@Z:PROC		; TUnion::AddUnion
; Function compile flags: /Ogtp
;	COMDAT ?DGRelationShipListRecv@@YAXPAUEXSDHP_UNION_RELATIONSHIP_LIST@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?DGRelationShipListRecv@@YAXPAUEXSDHP_UNION_RELATIONSHIP_LIST@@@Z PROC ; DGRelationShipListRecv, COMDAT

; 1710 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1711 : 	if ( lpMsg->btRelationShipType == G_RELATIONSHIP_UNION )

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00007	8a 46 05	 mov	 al, BYTE PTR [esi+5]
  0000a	3c 01		 cmp	 al, 1
  0000c	75 2c		 jne	 SHORT $LN3@DGRelation

; 1712 : 	{
; 1713 : 		UnionManager.AddUnion(lpMsg->iUnionMasterGuildNumber, lpMsg->szUnionMasterGuildName);

  0000e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00011	8d 46 07	 lea	 eax, DWORD PTR [esi+7]
  00014	50		 push	 eax
  00015	51		 push	 ecx
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  0001b	e8 00 00 00 00	 call	 ?AddUnion@TUnion@@QAEHHPAD@Z ; TUnion::AddUnion

; 1714 : 		UnionManager.SetGuildUnionMemberList(lpMsg->iUnionMasterGuildNumber, lpMsg->btRelationShipMemberCount, lpMsg->iRelationShipMember);

  00020	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  00024	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00027	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  0002a	52		 push	 edx
  0002b	50		 push	 eax
  0002c	51		 push	 ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  00032	e8 00 00 00 00	 call	 ?SetGuildUnionMemberList@TUnion@@QAEHHHPBH@Z ; TUnion::SetGuildUnionMemberList
  00037	5e		 pop	 esi

; 1720 : 	}
; 1721 : }

  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
$LN3@DGRelation:

; 1715 : 	}
; 1716 : 	else if ( lpMsg->btRelationShipType == G_RELATIONSHIP_RIVAL )

  0003a	3c 02		 cmp	 al, 2
  0003c	75 29		 jne	 SHORT $LN1@DGRelation

; 1717 : 	{
; 1718 : 		UnionManager.AddUnion(lpMsg->iUnionMasterGuildNumber, lpMsg->szUnionMasterGuildName);

  0003e	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00041	8d 56 07	 lea	 edx, DWORD PTR [esi+7]
  00044	52		 push	 edx
  00045	50		 push	 eax
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  0004b	e8 00 00 00 00	 call	 ?AddUnion@TUnion@@QAEHHPAD@Z ; TUnion::AddUnion

; 1719 : 		UnionManager.SetGuildRivalMemberList(lpMsg->iUnionMasterGuildNumber, lpMsg->btRelationShipMemberCount, lpMsg->iRelationShipMember);

  00050	0f b6 56 06	 movzx	 edx, BYTE PTR [esi+6]
  00054	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00057	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0005a	51		 push	 ecx
  0005b	52		 push	 edx
  0005c	50		 push	 eax
  0005d	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  00062	e8 00 00 00 00	 call	 ?SetGuildRivalMemberList@TUnion@@QAEHHHPBH@Z ; TUnion::SetGuildRivalMemberList
$LN1@DGRelation:
  00067	5e		 pop	 esi

; 1720 : 	}
; 1721 : }

  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?DGRelationShipListRecv@@YAXPAUEXSDHP_UNION_RELATIONSHIP_LIST@@@Z ENDP ; DGRelationShipListRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDUnionListSend@@YAXHH@Z			; GDUnionListSend
; Function compile flags: /Ogtp
;	COMDAT ?GDUnionListSend@@YAXHH@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_iUserIndex$ = 8					; size = 4
_iUnionMasterGuildNumber$ = 12				; size = 4
?GDUnionListSend@@YAXHH@Z PROC				; GDUnionListSend, COMDAT

; 1731 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1732 : 	EXSDHP_UNION_LIST_REQ pMsg = {0};
; 1733 : 
; 1734 : 	pMsg.h.set((LPBYTE)&pMsg, 0xE9, sizeof(EXSDHP_UNION_LIST_REQ));
; 1735 : 	pMsg.wRequestUserIndex = iUserIndex;
; 1736 : 	pMsg.iUnionMasterGuildNumber = iUnionMasterGuildNumber;

  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _iUnionMasterGuildNumber$[ebp]
  00013	33 c0		 xor	 eax, eax
  00015	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00018	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  0001b	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+9], ax
  0001f	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+11], al
  00022	66 8b 45 08	 mov	 ax, WORD PTR _iUserIndex$[ebp]

; 1737 : 
; 1738 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00026	6a 0c		 push	 12			; 0000000cH
  00028	8d 55 f0	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0002b	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  0002e	52		 push	 edx
  0002f	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00034	66 c7 45 f0 c1
	0c		 mov	 WORD PTR _pMsg$[ebp], 3265 ; 00000cc1H
  0003a	c6 45 f2 e9	 mov	 BYTE PTR _pMsg$[ebp+2], 233 ; 000000e9H
  0003e	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+4], ax
  00042	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1739 : }

  00047	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004a	33 cd		 xor	 ecx, ebp
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?GDUnionListSend@@YAXHH@Z ENDP				; GDUnionListSend
_TEXT	ENDS
PUBLIC	_aRecv$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?DGUnionListRecv@@YAXPAE@Z			; DGUnionListRecv
EXTRN	?PHeadSetW@@YAXPAEEH@Z:PROC			; PHeadSetW
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtp
;	COMDAT ?DGUnionListRecv@@YAXPAE@Z
_TEXT	SEGMENT
tv544 = -6016						; size = 4
_aRecv$GSCopy$ = -6012					; size = 4
tv536 = -6008						; size = 4
_cBUFFER_V1$ = -6004					; size = 6000
__$ArrayPad$ = -4					; size = 4
_aRecv$ = 8						; size = 4
?DGUnionListRecv@@YAXPAE@Z PROC				; DGUnionListRecv, COMDAT

; 1777 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 80 17 00 00	 mov	 eax, 6016		; 00001780H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	56		 push	 esi
  00018	8b 75 08	 mov	 esi, DWORD PTR _aRecv$[ebp]
  0001b	57		 push	 edi

; 1778 : 	EXSDHP_UNION_LIST_COUNT * lpRecvMsg = (EXSDHP_UNION_LIST_COUNT *)aRecv;
; 1779 : 	EXSDHP_UNION_LIST * lpRecvMsgBody = (EXSDHP_UNION_LIST *)((DWORD)aRecv + 0x10 ) ;
; 1780 : 	char cBUFFER_V1[6000];
; 1781 : 	memset(cBUFFER_V1, 0, sizeof(cBUFFER_V1));

  0001c	68 70 17 00 00	 push	 6000			; 00001770H
  00021	8d 85 8c e8 ff
	ff		 lea	 eax, DWORD PTR _cBUFFER_V1$[ebp]
  00027	6a 00		 push	 0
  00029	50		 push	 eax

; 1802 : 	{
; 1803 : 		lpMsgBody[i].btMemberNum = lpRecvMsgBody[i].btMemberNum;

  0002a	89 b5 84 e8 ff
	ff		 mov	 DWORD PTR _aRecv$GSCopy$[ebp], esi
  00030	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  00033	e8 00 00 00 00	 call	 _memset
  00038	0f b6 4e 01	 movzx	 ecx, BYTE PTR [esi+1]
  0003c	0f b6 56 02	 movzx	 edx, BYTE PTR [esi+2]
  00040	66 c1 e1 08	 shl	 cx, 8
  00044	0f b7 c1	 movzx	 eax, cx
  00047	0b c2		 or	 eax, edx
  00049	83 e8 10	 sub	 eax, 16			; 00000010H
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3d 70 17 00 00	 cmp	 eax, 6000		; 00001770H
  00054	0f 87 f0 00 00
	00		 ja	 $LN4@DGUnionLis

; 1782 : 	int iSize = MAKE_NUMBERW(lpRecvMsg->h.sizeH, lpRecvMsg->h.sizeL);
; 1783 : 	int iBodySize = iSize - 0x10;
; 1784 : 
; 1785 : 	if ( iBodySize < 0 )
; 1786 : 		return;
; 1787 : 
; 1788 : 	if ( iBodySize > 6000 )
; 1789 : 		return;
; 1790 : 
; 1791 : 	if ( lpRecvMsg->btCount < 0 || lpRecvMsg->btCount > 100 )

  0005a	8a 4e 04	 mov	 cl, BYTE PTR [esi+4]
  0005d	80 f9 64	 cmp	 cl, 100			; 00000064H
  00060	0f 87 e4 00 00
	00		 ja	 $LN4@DGUnionLis

; 1792 : 		return;
; 1793 : 
; 1794 : 	PMSG_UNIONLIST_COUNT * lpMsg = (PMSG_UNIONLIST_COUNT *)cBUFFER_V1;
; 1795 : 	PMSG_UNIONLIST * lpMsgBody = (PMSG_UNIONLIST *)((DWORD)cBUFFER_V1+sizeof(PMSG_UNIONLIST_COUNT));
; 1796 : 	lpMsg->btResult = lpRecvMsg->btResult;

  00066	0f b6 46 05	 movzx	 eax, BYTE PTR [esi+5]

; 1797 : 	lpMsg->btCount = lpRecvMsg->btCount;
; 1798 : 	lpMsg->btRivalMemberNum = lpRecvMsg->btRivalMemberNum;

  0006a	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
  0006d	88 85 91 e8 ff
	ff		 mov	 BYTE PTR _cBUFFER_V1$[ebp+5], al

; 1799 : 	lpMsg->btUnionMemberNum = lpRecvMsg->btUnionMemberNum;

  00073	0f b6 46 0d	 movzx	 eax, BYTE PTR [esi+13]
  00077	53		 push	 ebx

; 1800 : 
; 1801 : 	for (int i=0;i<lpMsg->btCount;i++)

  00078	33 db		 xor	 ebx, ebx
  0007a	88 8d 90 e8 ff
	ff		 mov	 BYTE PTR _cBUFFER_V1$[ebp+4], cl
  00080	88 95 92 e8 ff
	ff		 mov	 BYTE PTR _cBUFFER_V1$[ebp+6], dl
  00086	88 85 93 e8 ff
	ff		 mov	 BYTE PTR _cBUFFER_V1$[ebp+7], al
  0008c	84 c9		 test	 cl, cl
  0008e	74 72		 je	 SHORT $LN1@DGUnionLis
  00090	8d 8d 94 e8 ff
	ff		 lea	 ecx, DWORD PTR _cBUFFER_V1$[ebp+8]
  00096	2b cf		 sub	 ecx, edi
  00098	89 8d 88 e8 ff
	ff		 mov	 DWORD PTR tv536[ebp], ecx
  0009e	8d 95 b4 e8 ff
	ff		 lea	 edx, DWORD PTR _cBUFFER_V1$[ebp+40]
  000a4	8d 8d 93 e8 ff
	ff		 lea	 ecx, DWORD PTR _cBUFFER_V1$[ebp+7]
  000aa	2b d7		 sub	 edx, edi
  000ac	2b cf		 sub	 ecx, edi
  000ae	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000b1	89 8d 80 e8 ff
	ff		 mov	 DWORD PTR tv544[ebp], ecx
  000b7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL3@DGUnionLis:

; 1802 : 	{
; 1803 : 		lpMsgBody[i].btMemberNum = lpRecvMsgBody[i].btMemberNum;

  000c0	0f b6 48 ff	 movzx	 ecx, BYTE PTR [eax-1]
  000c4	8b b5 80 e8 ff
	ff		 mov	 esi, DWORD PTR tv544[ebp]

; 1804 : 		memcpy(lpMsgBody[i].szGuildName, lpRecvMsgBody[i].szGuildName, sizeof(lpMsgBody->szGuildName));
; 1805 : 		memcpy(lpMsgBody[i].Mark, lpRecvMsgBody[i].Mark, sizeof(lpMsgBody->Mark));

  000ca	8b bd 88 e8 ff
	ff		 mov	 edi, DWORD PTR tv536[ebp]
  000d0	88 0c 06	 mov	 BYTE PTR [esi+eax], cl
  000d3	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000d6	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx
  000d9	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000dc	89 4c 02 04	 mov	 DWORD PTR [edx+eax+4], ecx
  000e0	03 f8		 add	 edi, eax
  000e2	8b f0		 mov	 esi, eax
  000e4	b9 08 00 00 00	 mov	 ecx, 8
  000e9	f3 a5		 rep movsd
  000eb	8a 8d 90 e8 ff
	ff		 mov	 cl, BYTE PTR _cBUFFER_V1$[ebp+4]
  000f1	0f b6 f1	 movzx	 esi, cl
  000f4	43		 inc	 ebx
  000f5	83 c0 29	 add	 eax, 41			; 00000029H
  000f8	3b de		 cmp	 ebx, esi
  000fa	7c c4		 jl	 SHORT $LL3@DGUnionLis

; 1800 : 
; 1801 : 	for (int i=0;i<lpMsg->btCount;i++)

  000fc	8b b5 84 e8 ff
	ff		 mov	 esi, DWORD PTR _aRecv$GSCopy$[ebp]
$LN1@DGUnionLis:

; 1806 : 	}
; 1807 : 
; 1808 : 	PHeadSetW((LPBYTE)lpMsg, 0xE9, lpMsg->btCount * sizeof(PMSG_UNIONLIST) + 0x10);

  00102	0f b6 d1	 movzx	 edx, cl
  00105	6b d2 29	 imul	 edx, 41			; 00000029H
  00108	83 c2 10	 add	 edx, 16			; 00000010H
  0010b	52		 push	 edx
  0010c	8d 85 8c e8 ff
	ff		 lea	 eax, DWORD PTR _cBUFFER_V1$[ebp]
  00112	68 e9 00 00 00	 push	 233			; 000000e9H
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?PHeadSetW@@YAXPAEEH@Z	; PHeadSetW

; 1809 : 	DataSend(lpRecvMsg->wRequestUserIndex, (LPBYTE)lpMsg, MAKE_NUMBERW(lpMsg->h.sizeH, lpMsg->h.sizeL));

  0011d	0f b6 8d 8d e8
	ff ff		 movzx	 ecx, BYTE PTR _cBUFFER_V1$[ebp+1]
  00124	0f b6 85 8e e8
	ff ff		 movzx	 eax, BYTE PTR _cBUFFER_V1$[ebp+2]
  0012b	66 c1 e1 08	 shl	 cx, 8
  0012f	0f b7 d1	 movzx	 edx, cx
  00132	0b d0		 or	 edx, eax
  00134	52		 push	 edx
  00135	0f b7 56 06	 movzx	 edx, WORD PTR [esi+6]
  00139	8d 8d 8c e8 ff
	ff		 lea	 ecx, DWORD PTR _cBUFFER_V1$[ebp]
  0013f	51		 push	 ecx
  00140	52		 push	 edx
  00141	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00146	83 c4 18	 add	 esp, 24			; 00000018H
  00149	5b		 pop	 ebx
$LN4@DGUnionLis:

; 1810 : }

  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014d	5f		 pop	 edi
  0014e	33 cd		 xor	 ecx, ebp
  00150	5e		 pop	 esi
  00151	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c3		 ret	 0
?DGUnionListRecv@@YAXPAE@Z ENDP				; DGUnionListRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDRelationShipReqKickOutUnionMember@@YAXHPAD@Z	; GDRelationShipReqKickOutUnionMember
; Function compile flags: /Ogtp
;	COMDAT ?GDRelationShipReqKickOutUnionMember@@YAXHPAD@Z
_TEXT	SEGMENT
_pMsg$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_szTargetGuildName$ = 12				; size = 4
?GDRelationShipReqKickOutUnionMember@@YAXHPAD@Z PROC	; GDRelationShipReqKickOutUnionMember, COMDAT

; 1822 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1823 : 	_GUILD_INFO_STRUCT * lpGuildInfo = gObj[aIndex].lpGuild;

  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00016	8b 55 0c	 mov	 edx, DWORD PTR _szTargetGuildName$[ebp]
  00019	56		 push	 esi
  0001a	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0001d	8b c6		 mov	 eax, esi
  0001f	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00025	8b 8c 08 38 04
	00 00		 mov	 ecx, DWORD PTR [eax+ecx+1080]

; 1824 : 
; 1825 : 	if ( lpGuildInfo == NULL )

  0002c	85 c9		 test	 ecx, ecx
  0002e	74 4f		 je	 SHORT $LN2@GDRelation@3

; 1826 : 	{
; 1827 : 		return;
; 1828 : 	}
; 1829 : 
; 1830 : 	EXSDHP_KICKOUT_UNIONMEMBER_REQ pMsg = {0};

  00030	33 c0		 xor	 eax, eax
  00032	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  00035	89 45 e5	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00038	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  0003b	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  0003e	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+17], eax
  00041	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+21], ax
  00045	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+23], al

; 1831 : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x01, sizeof(EXSDHP_KICKOUT_UNIONMEMBER_REQ));

  00048	b0 01		 mov	 al, 1

; 1832 : 	pMsg.wRequestUserIndex = aIndex;
; 1833 : 	pMsg.btRelationShipType = GUILD_RELATION_UNION;

  0004a	88 45 ea	 mov	 BYTE PTR _pMsg$[ebp+6], al
  0004d	c7 45 e4 c1 18
	eb 01		 mov	 DWORD PTR _pMsg$[ebp], 32184513 ; 01eb18c1H
  00054	66 89 75 e8	 mov	 WORD PTR _pMsg$[ebp+4], si

; 1834 : 	memcpy(pMsg.szUnionMasterGuildName, lpGuildInfo->Name, sizeof(pMsg.szUnionMasterGuildName));

  00058	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005b	89 45 eb	 mov	 DWORD PTR _pMsg$[ebp+7], eax
  0005e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1835 : 	memcpy(pMsg.szUnionMemberGuildName, szTargetGuildName, sizeof(pMsg.szUnionMemberGuildName));

  00061	8b 02		 mov	 eax, DWORD PTR [edx]
  00063	89 4d ef	 mov	 DWORD PTR _pMsg$[ebp+11], ecx
  00066	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 1836 : 
; 1837 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00069	6a 18		 push	 24			; 00000018H
  0006b	8d 55 e4	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0006e	89 4d f7	 mov	 DWORD PTR _pMsg$[ebp+19], ecx
  00071	52		 push	 edx
  00072	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00077	89 45 f3	 mov	 DWORD PTR _pMsg$[ebp+15], eax
  0007a	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN2@GDRelation@3:

; 1838 : }

  0007f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00082	33 cd		 xor	 ecx, ebp
  00084	5e		 pop	 esi
  00085	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?GDRelationShipReqKickOutUnionMember@@YAXHPAD@Z ENDP	; GDRelationShipReqKickOutUnionMember
_TEXT	ENDS
PUBLIC	??_C@_0BJ@BDFPCOJL@?$FL?$CFs?$FN?5Friend?5List?5Request?$AA@ ; `string'
PUBLIC	??_C@_0CJ@EJJNCKNG@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@ ; `string'
PUBLIC	??_C@_0DB@ELGELCGP@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@ ; `string'
PUBLIC	??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendListRequest@@YAXH@Z			; FriendListRequest
;	COMDAT ??_C@_0BJ@BDFPCOJL@?$FL?$CFs?$FN?5Friend?5List?5Request?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0BJ@BDFPCOJL@?$FL?$CFs?$FN?5Friend?5List?5Request?$AA@ DB '[%s] Fri'
	DB	'end List Request', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EJJNCKNG@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@
CONST	SEGMENT
??_C@_0CJ@EJJNCKNG@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@ DB 'e'
	DB	'rror-L3 : [%s][%s] FriendServer Offline', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@ELGELCGP@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@
CONST	SEGMENT
??_C@_0DB@ELGELCGP@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@ DB 'e'
	DB	'rror-L3 : [%s][%s] FriendServer Online Request ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@ DB 'error-L2 :'
	DB	' Index %s %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
CONST	SEGMENT
??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@ DB 'EDSProtocol.cpp', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendListRequest@@YAXH@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?FriendListRequest@@YAXH@Z PROC				; FriendListRequest, COMDAT

; 1928 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 1929 : 	if ( gObjIsConnectedGP(aIndex) == FALSE )

  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	75 27		 jne	 SHORT $LN3@FriendList

; 1930 : 	{
; 1931 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00021	68 8b 07 00 00	 push	 1931			; 0000078bH
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	5f		 pop	 edi

; 1959 : 
; 1960 : }

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003d	33 cd		 xor	 ecx, ebp
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN3@FriendList:

; 1932 : 		return;
; 1933 : 	}
; 1934 : 
; 1935 : 	if (gObj[aIndex].m_FriendServerOnline == 2 )

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004d	56		 push	 esi
  0004e	8b f7		 mov	 esi, edi
  00050	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00056	8a 8c 06 70 03
	00 00		 mov	 cl, BYTE PTR [esi+eax+880]
  0005d	80 f9 02	 cmp	 cl, 2
  00060	75 28		 jne	 SHORT $LN2@FriendList

; 1936 : 	{
; 1937 : 		LogAddTD("error-L3 : [%s][%s] FriendServer Online Request ", gObj[aIndex].AccountID, gObj[aIndex].Name);

  00062	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  00066	51		 push	 ecx
  00067	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  0006b	52		 push	 edx
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@ELGELCGP@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	5e		 pop	 esi
  0007b	5f		 pop	 edi

; 1959 : 
; 1960 : }

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
$LN2@FriendList:

; 1938 : 		return;
; 1939 : 	}
; 1940 : 
; 1941 : 	if (gObj[aIndex].m_FriendServerOnline == FRIEND_SERVER_STATE_OFFLINE )

  0008a	80 f9 01	 cmp	 cl, 1
  0008d	75 28		 jne	 SHORT $LN1@FriendList

; 1942 : 	{
; 1943 : 		LogAddTD("error-L3 : [%s][%s] FriendServer Offline", gObj[aIndex].AccountID, gObj[aIndex].Name);

  0008f	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  00093	51		 push	 ecx
  00094	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  00098	52		 push	 edx
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@EJJNCKNG@error?9L3?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5FriendServer@
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a7	5e		 pop	 esi
  000a8	5f		 pop	 edi

; 1959 : 
; 1960 : }

  000a9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ac	33 cd		 xor	 ecx, ebp
  000ae	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c3		 ret	 0
$LN1@FriendList:

; 1944 : 		return;
; 1945 : 	}
; 1946 : 
; 1947 : 	FHP_FRIENDLIST_REQ pMsg;
; 1948 : 
; 1949 : 	pMsg.h.set((LPBYTE)&pMsg, 0x60, sizeof(FHP_FRIENDLIST_REQ));
; 1950 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  000b7	8d 44 06 77	 lea	 eax, DWORD PTR [esi+eax+119]
  000bb	66 c7 45 e8 c1
	12		 mov	 WORD PTR _pMsg$[ebp], 4801 ; 000012c1H
  000c1	c6 45 ea 60	 mov	 BYTE PTR _pMsg$[ebp+2], 96 ; 00000060H
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d ee	 mov	 DWORD PTR _pMsg$[ebp+6], ecx
  000ca	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 1951 : 	pMsg.Number = aIndex;
; 1952 : 	pMsg.pServer = gGameServerCode;

  000cd	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?gGameServerCode@@3FA
  000d3	89 55 f2	 mov	 DWORD PTR _pMsg$[ebp+10], edx
  000d6	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]

; 1953 : 	
; 1954 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  000da	6a 12		 push	 18			; 00000012H
  000dc	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  000df	88 4d f8	 mov	 BYTE PTR _pMsg$[ebp+16], cl
  000e2	52		 push	 edx
  000e3	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  000e8	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+14], ax
  000ec	66 89 7d ec	 mov	 WORD PTR _pMsg$[ebp+4], di
  000f0	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1955 : 
; 1956 : 	LogAdd("[%s] Friend List Request", gObj[aIndex].Name);

  000f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000fa	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000fe	51		 push	 ecx
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BDFPCOJL@?$FL?$CFs?$FN?5Friend?5List?5Request?$AA@
  00104	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 1957 : 
; 1958 : 	gObj[aIndex].m_FriendServerOnline = 2;

  0010a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1959 : 
; 1960 : }

  00110	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00113	83 c4 08	 add	 esp, 8
  00116	c6 84 16 70 03
	00 00 02	 mov	 BYTE PTR [esi+edx+880], 2
  0011e	5e		 pop	 esi
  0011f	33 cd		 xor	 ecx, ebp
  00121	5f		 pop	 edi
  00122	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
?FriendListRequest@@YAXH@Z ENDP				; FriendListRequest
_TEXT	ENDS
PUBLIC	??_C@_0CB@HGMGGPGK@?$FL?$CFs?$FN?5Friend?5List?5Count?5?$CI?$CFd?$CJ?5Send@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendListResult@@YAXPAE@Z			; FriendListResult
EXTRN	?gObjIsConnectedGP@@YAHHPAD@Z:PROC		; gObjIsConnectedGP
;	COMDAT ??_C@_0CB@HGMGGPGK@?$FL?$CFs?$FN?5Friend?5List?5Count?5?$CI?$CFd?$CJ?5Send@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CB@HGMGGPGK@?$FL?$CFs?$FN?5Friend?5List?5Count?5?$CI?$CFd?$CJ?5Send@ DB '['
	DB	'%s] Friend List Count (%d) Send', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendListResult@@YAXPAE@Z
_TEXT	SEGMENT
_pOfs$ = -2028						; size = 4
_pCount$ = -2024					; size = 7
_Name$ = -2016						; size = 11
_TmpSendBuf$ = -2004					; size = 2000
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendListResult@@YAXPAE@Z PROC			; FriendListResult, COMDAT

; 1986 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 07 00
	00		 sub	 esp, 2028		; 000007ecH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 1987 : 
; 1988 : 	FHP_FRIENDLIST_COUNT * lpCount;
; 1989 : 	FHP_FRIENDLIST * lpList;
; 1990 : 	int lOfs = sizeof(FHP_FRIENDLIST_COUNT);
; 1991 : 	PMSG_FRIEND_LIST_COUNT pCount;
; 1992 : 	int pOfs = sizeof(PMSG_FRIEND_LIST_COUNT);
; 1993 : 
; 1994 : 	lpCount = (FHP_FRIENDLIST_COUNT *)lpMsg;
; 1995 : 	lpList  = (FHP_FRIENDLIST *)(&lpMsg[lOfs * sizeof(FHP_FRIENDLIST)]);
; 1996 : 
; 1997 : 	char_ID Name( lpCount->Name);

  00017	33 c0		 xor	 eax, eax
  00019	8d 4f 06	 lea	 ecx, DWORD PTR [edi+6]
  0001c	c7 85 14 f8 ff
	ff 07 00 00 00	 mov	 DWORD PTR _pOfs$[ebp], 7
  00026	89 85 20 f8 ff
	ff		 mov	 DWORD PTR _Name$[ebp], eax
  0002c	89 85 24 f8 ff
	ff		 mov	 DWORD PTR _Name$[ebp+4], eax
  00032	66 89 85 28 f8
	ff ff		 mov	 WORD PTR _Name$[ebp+8], ax
  00039	88 85 2a f8 ff
	ff		 mov	 BYTE PTR _Name$[ebp+10], al
  0003f	85 c9		 test	 ecx, ecx
  00041	74 1c		 je	 SHORT $LN8@FriendList@2
  00043	8b 01		 mov	 eax, DWORD PTR [ecx]
  00045	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00048	89 85 20 f8 ff
	ff		 mov	 DWORD PTR _Name$[ebp], eax
  0004e	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00052	89 95 24 f8 ff
	ff		 mov	 DWORD PTR _Name$[ebp+4], edx
  00058	66 89 85 28 f8
	ff ff		 mov	 WORD PTR _Name$[ebp+8], ax
$LN8@FriendList@2:

; 1998 : 	BYTE TmpSendBuf[2000];
; 1999 : 	
; 2000 : 	if ( !gObjIsConnectedGP(lpCount->Number, Name.GetBuffer()))

  0005f	0f bf 57 04	 movsx	 edx, WORD PTR [edi+4]
  00063	8d 8d 20 f8 ff
	ff		 lea	 ecx, DWORD PTR _Name$[ebp]
  00069	51		 push	 ecx
  0006a	52		 push	 edx
  0006b	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  00070	83 c4 08	 add	 esp, 8
  00073	85 c0		 test	 eax, eax
  00075	75 27		 jne	 SHORT $LN5@FriendList@2

; 2001 : 	{
; 2002 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00077	68 d2 07 00 00	 push	 2002			; 000007d2H
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008f	5f		 pop	 edi

; 2028 : }

  00090	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00093	33 cd		 xor	 ecx, ebp
  00095	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$LN5@FriendList@2:

; 2003 : 		return;
; 2004 : 	}
; 2005 : 
; 2006 : 	gObj[lpCount->Number].m_FriendServerOnline = 0;

  0009e	0f bf 47 04	 movsx	 eax, WORD PTR [edi+4]
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a8	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000ae	c6 84 08 70 03
	00 00 00	 mov	 BYTE PTR [eax+ecx+880], 0

; 2007 : 	pCount.Count = lpCount->Count;
; 2008 : 	pCount.MemoCount = lpCount->MailCount;

  000b6	8a 57 11	 mov	 dl, BYTE PTR [edi+17]
  000b9	53		 push	 ebx
  000ba	8a 5f 10	 mov	 bl, BYTE PTR [edi+16]
  000bd	88 9d 1e f8 ff
	ff		 mov	 BYTE PTR _pCount$[ebp+6], bl
  000c3	88 95 1c f8 ff
	ff		 mov	 BYTE PTR _pCount$[ebp+4], dl

; 2009 : 	pCount.MailTotal = 50;

  000c9	c6 85 1d f8 ff
	ff 32		 mov	 BYTE PTR _pCount$[ebp+5], 50 ; 00000032H

; 2010 : 
; 2011 : 	if ( pCount.Count != 0 )

  000d0	84 db		 test	 bl, bl
  000d2	74 47		 je	 SHORT $LN1@FriendList@2

; 2012 : 	{
; 2013 : 		for ( int n=0;n<pCount.Count;n++)

  000d4	56		 push	 esi
  000d5	0f b6 f3	 movzx	 esi, bl
  000d8	85 f6		 test	 esi, esi
  000da	7e 3e		 jle	 SHORT $LN17@FriendList@2
  000dc	8b d6		 mov	 edx, esi
  000de	6b f6 0b	 imul	 esi, 11			; 0000000bH
  000e1	83 c6 07	 add	 esi, 7
  000e4	8d 8d 33 f8 ff
	ff		 lea	 ecx, DWORD PTR _TmpSendBuf$[ebp+7]
  000ea	8d 47 12	 lea	 eax, DWORD PTR [edi+18]
  000ed	89 b5 14 f8 ff
	ff		 mov	 DWORD PTR _pOfs$[ebp], esi
$LL3@FriendList@2:

; 2014 : 		{
; 2015 : 			lpList = (FHP_FRIENDLIST *)&lpMsg[lOfs];
; 2016 : 			memcpy(&TmpSendBuf[pOfs], lpList, sizeof(FHP_FRIENDLIST));

  000f3	8b 30		 mov	 esi, DWORD PTR [eax]
  000f5	89 31		 mov	 DWORD PTR [ecx], esi
  000f7	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000fa	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  000fd	66 8b 70 08	 mov	 si, WORD PTR [eax+8]
  00101	66 89 71 08	 mov	 WORD PTR [ecx+8], si
  00105	8a 58 0a	 mov	 bl, BYTE PTR [eax+10]
  00108	88 59 0a	 mov	 BYTE PTR [ecx+10], bl

; 2017 : 			lOfs+=sizeof(FHP_FRIENDLIST);
; 2018 : 			pOfs+=sizeof(FHP_FRIENDLIST);

  0010b	83 c0 0b	 add	 eax, 11			; 0000000bH
  0010e	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00111	4a		 dec	 edx
  00112	75 df		 jne	 SHORT $LL3@FriendList@2

; 2012 : 	{
; 2013 : 		for ( int n=0;n<pCount.Count;n++)

  00114	8a 9d 1e f8 ff
	ff		 mov	 bl, BYTE PTR _pCount$[ebp+6]
$LN17@FriendList@2:
  0011a	5e		 pop	 esi
$LN1@FriendList@2:

; 2019 : 		}
; 2020 : 	}
; 2021 : 
; 2022 : 	pCount.h.set((LPBYTE)&pCount, 0xC0, pOfs);

  0011b	8b 85 14 f8 ff
	ff		 mov	 eax, DWORD PTR _pOfs$[ebp]
  00121	8b c8		 mov	 ecx, eax
  00123	c1 e9 08	 shr	 ecx, 8
  00126	88 8d 19 f8 ff
	ff		 mov	 BYTE PTR _pCount$[ebp+1], cl

; 2023 : 	memcpy(TmpSendBuf, &pCount, sizeof(PMSG_FRIEND_LIST_COUNT));

  0012c	66 8b 8d 1c f8
	ff ff		 mov	 cx, WORD PTR _pCount$[ebp+4]
  00133	88 85 1a f8 ff
	ff		 mov	 BYTE PTR _pCount$[ebp+2], al
  00139	c6 85 18 f8 ff
	ff c2		 mov	 BYTE PTR _pCount$[ebp], 194 ; 000000c2H
  00140	c6 85 1b f8 ff
	ff c0		 mov	 BYTE PTR _pCount$[ebp+3], 192 ; 000000c0H
  00147	8b 95 18 f8 ff
	ff		 mov	 edx, DWORD PTR _pCount$[ebp]

; 2024 : 
; 2025 : 	DataSend(lpCount->Number, TmpSendBuf, pOfs);

  0014d	50		 push	 eax
  0014e	0f bf 47 04	 movsx	 eax, WORD PTR [edi+4]
  00152	89 95 2c f8 ff
	ff		 mov	 DWORD PTR _TmpSendBuf$[ebp], edx
  00158	8d 95 2c f8 ff
	ff		 lea	 edx, DWORD PTR _TmpSendBuf$[ebp]
  0015e	52		 push	 edx
  0015f	50		 push	 eax
  00160	66 89 8d 30 f8
	ff ff		 mov	 WORD PTR _TmpSendBuf$[ebp+4], cx
  00167	88 9d 32 f8 ff
	ff		 mov	 BYTE PTR _TmpSendBuf$[ebp+6], bl
  0016d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2026 : 
; 2027 : 	LogAdd("[%s] Friend List Count (%d) Send", gObj[lpCount->Number].Name, pCount.Count);

  00172	0f bf 57 04	 movsx	 edx, WORD PTR [edi+4]
  00176	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0017b	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00181	0f b6 cb	 movzx	 ecx, bl
  00184	51		 push	 ecx
  00185	8d 4c 02 77	 lea	 ecx, DWORD PTR [edx+eax+119]
  00189	51		 push	 ecx
  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@HGMGGPGK@?$FL?$CFs?$FN?5Friend?5List?5Count?5?$CI?$CFd?$CJ?5Send@
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2028 : }

  00195	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00198	83 c4 18	 add	 esp, 24			; 00000018H
  0019b	5b		 pop	 ebx
  0019c	33 cd		 xor	 ecx, ebp
  0019e	5f		 pop	 edi
  0019f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a4	8b e5		 mov	 esp, ebp
  001a6	5d		 pop	 ebp
  001a7	c3		 ret	 0
?FriendListResult@@YAXPAE@Z ENDP			; FriendListResult
_TEXT	ENDS
PUBLIC	??_C@_0BK@HLHJLCCE@?$FL?$CFs?$FN?5WaitFriend?5List?5?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BN@DOMMEPOB@error?9L2?5?3?5?$CI?$CFs?$CJ?5Index?5?$CFs?5?$CFd?5?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?WaitFriendListResult@@YAXPAUFHP_WAITFRIENDLIST_COUNT@@@Z ; WaitFriendListResult
;	COMDAT ??_C@_0BK@HLHJLCCE@?$FL?$CFs?$FN?5WaitFriend?5List?5?$FL?$CFs?$FN?$AA@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0BK@HLHJLCCE@?$FL?$CFs?$FN?5WaitFriend?5List?5?$FL?$CFs?$FN?$AA@ DB '['
	DB	'%s] WaitFriend List [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DOMMEPOB@error?9L2?5?3?5?$CI?$CFs?$CJ?5Index?5?$CFs?5?$CFd?5?$AA@
CONST	SEGMENT
??_C@_0BN@DOMMEPOB@error?9L2?5?3?5?$CI?$CFs?$CJ?5Index?5?$CFs?5?$CFd?5?$AA@ DB 'e'
	DB	'rror-L2 : (%s) Index %s %d ', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?WaitFriendListResult@@YAXPAUFHP_WAITFRIENDLIST_COUNT@@@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 13
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?WaitFriendListResult@@YAXPAUFHP_WAITFRIENDLIST_COUNT@@@Z PROC ; WaitFriendListResult, COMDAT

; 2037 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2038 : 	PMSG_FRIEND_ADD_SIN_REQ pMsg;
; 2039 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 06	 lea	 ecx, DWORD PTR [esi+6]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN5@WaitFriend
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN5@WaitFriend:

; 2040 : 
; 2041 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax

; 2042 : 	{
; 2043 : 		LogAddTD("error-L2 : (%s) Index %s %d ", Name.GetBuffer(), __FILE__, __LINE__);

  00050	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  00053	75 28		 jne	 SHORT $LN2@WaitFriend
  00055	68 fb 07 00 00	 push	 2043			; 000007fbH
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DOMMEPOB@error?9L2?5?3?5?$CI?$CFs?$CJ?5Index?5?$CFs?5?$CFd?5?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	5e		 pop	 esi

; 2056 : }

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	33 cd		 xor	 ecx, ebp
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN2@WaitFriend:

; 2044 : 		return;
; 2045 : 	}
; 2046 : 
; 2047 : 	if ( Name.GetLength() < 1 )

  0007d	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL18@WaitFriend:
  00080	8a 08		 mov	 cl, BYTE PTR [eax]
  00082	40		 inc	 eax
  00083	84 c9		 test	 cl, cl
  00085	75 f9		 jne	 SHORT $LL18@WaitFriend
  00087	2b c2		 sub	 eax, edx
  00089	83 f8 01	 cmp	 eax, 1
  0008c	7c 55		 jl	 SHORT $LN3@WaitFriend

; 2048 : 		return;
; 2049 : 
; 2050 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC2, sizeof(pMsg));
; 2051 : 	memcpy(pMsg.Name, lpMsg->FriendName, sizeof(pMsg.Name));

  0008e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00091	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  00094	66 8b 46 18	 mov	 ax, WORD PTR [esi+24]
  00098	89 4d e3	 mov	 DWORD PTR _pMsg$[ebp+3], ecx
  0009b	89 55 e7	 mov	 DWORD PTR _pMsg$[ebp+7], edx

; 2052 : 
; 2053 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  0009e	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  000a2	6a 0d		 push	 13			; 0000000dH
  000a4	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000a7	51		 push	 ecx
  000a8	52		 push	 edx
  000a9	66 c7 45 e0 c1
	0d		 mov	 WORD PTR _pMsg$[ebp], 3521 ; 00000dc1H
  000af	c6 45 e2 c2	 mov	 BYTE PTR _pMsg$[ebp+2], 194 ; 000000c2H
  000b3	66 89 45 eb	 mov	 WORD PTR _pMsg$[ebp+11], ax
  000b7	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2054 : 
; 2055 : 	LogAdd("[%s] WaitFriend List [%s]", gObj[lpMsg->Number].Name, Name.GetBuffer());

  000bc	0f bf 4e 04	 movsx	 ecx, WORD PTR [esi+4]
  000c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c6	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  000cc	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  000cf	50		 push	 eax
  000d0	8d 44 11 77	 lea	 eax, DWORD PTR [ecx+edx+119]
  000d4	50		 push	 eax
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HLHJLCCE@?$FL?$CFs?$FN?5WaitFriend?5List?5?$FL?$CFs?$FN?$AA@
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  000e0	83 c4 18	 add	 esp, 24			; 00000018H
$LN3@WaitFriend:

; 2056 : }

  000e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e6	33 cd		 xor	 ecx, ebp
  000e8	5e		 pop	 esi
  000e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
?WaitFriendListResult@@YAXPAUFHP_WAITFRIENDLIST_COUNT@@@Z ENDP ; WaitFriendListResult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?FriendStateClientRecv@@YAXPAUPMSG_FRIEND_STATE_C@@H@Z ; FriendStateClientRecv
; Function compile flags: /Ogtp
;	COMDAT ?FriendStateClientRecv@@YAXPAUPMSG_FRIEND_STATE_C@@H@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendStateClientRecv@@YAXPAUPMSG_FRIEND_STATE_C@@H@Z PROC ; FriendStateClientRecv, COMDAT

; 2067 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 2068 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	75 28		 jne	 SHORT $LN1@FriendStat

; 2069 : 	{
; 2070 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00025	68 16 08 00 00	 push	 2070			; 00000816H
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi

; 2081 : }

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN1@FriendStat:

; 2071 : 		return;
; 2072 : 	}
; 2073 : 
; 2074 : 	FHP_FRIEND_STATE_C pMsg;
; 2075 : 
; 2076 : 	pMsg.h.set((LPBYTE)&pMsg, 0x62, sizeof(pMsg));
; 2077 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00052	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00058	8d 44 06 77	 lea	 eax, DWORD PTR [esi+eax+119]
  0005c	66 c7 45 e8 c1
	12		 mov	 WORD PTR _pMsg$[ebp], 4801 ; 000012c1H
  00062	c6 45 ea 62	 mov	 BYTE PTR _pMsg$[ebp+2], 98 ; 00000062H
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	89 4d ee	 mov	 DWORD PTR _pMsg$[ebp+6], ecx
  0006b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 2078 : 	pMsg.State = lpMsg->ChatVeto;

  0006e	8a 4f 03	 mov	 cl, BYTE PTR [edi+3]
  00071	89 55 f2	 mov	 DWORD PTR _pMsg$[ebp+10], edx
  00074	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]

; 2079 : 
; 2080 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00078	6a 12		 push	 18			; 00000012H
  0007a	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0007d	88 4d f8	 mov	 BYTE PTR _pMsg$[ebp+16], cl
  00080	52		 push	 edx
  00081	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00086	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+14], ax
  0008a	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2081 : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	5f		 pop	 edi
  00093	33 cd		 xor	 ecx, ebp
  00095	5e		 pop	 esi
  00096	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
?FriendStateClientRecv@@YAXPAUPMSG_FRIEND_STATE_C@@H@Z ENDP ; FriendStateClientRecv
_TEXT	ENDS
PUBLIC	??_C@_0BH@OEEJLGGK@?$FL?$CFs?$FN?5Friend?5State?5?$CI?$CFd?$CJ?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendStateRecv@@YAXPAUFHP_FRIEND_STATE@@@Z	; FriendStateRecv
;	COMDAT ??_C@_0BH@OEEJLGGK@?$FL?$CFs?$FN?5Friend?5State?5?$CI?$CFd?$CJ?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0BH@OEEJLGGK@?$FL?$CFs?$FN?5Friend?5State?5?$CI?$CFd?$CJ?$AA@ DB '['
	DB	'%s] Friend State (%d)', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendStateRecv@@YAXPAUFHP_FRIEND_STATE@@@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 14
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendStateRecv@@YAXPAUFHP_FRIEND_STATE@@@Z PROC	; FriendStateRecv, COMDAT

; 2084 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2085 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 06	 lea	 ecx, DWORD PTR [esi+6]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@FriendStat@2
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@FriendStat@2:

; 2086 : 
; 2087 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 2b		 jne	 SHORT $LN1@FriendStat@2

; 2088 : 	{
; 2089 : 		LogAddTD("error-L2 : (%s) Index %s %d ", Name.GetBuffer(), __FILE__, __LINE__);

  00052	68 29 08 00 00	 push	 2089			; 00000829H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005c	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DOMMEPOB@error?9L2?5?3?5?$CI?$CFs?$CJ?5Index?5?$CFs?5?$CFd?5?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	5e		 pop	 esi

; 2102 : }

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	33 cd		 xor	 ecx, ebp
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN1@FriendStat@2:

; 2090 : 		return;
; 2091 : 	}
; 2092 : 
; 2093 : 	PMSG_FRIEND_STATE pMsg;
; 2094 : 
; 2095 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC4, sizeof(pMsg));
; 2096 : 	memcpy(pMsg.Name, lpMsg->FriendName, sizeof(pMsg.Name));

  0007d	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  00080	66 8b 46 18	 mov	 ax, WORD PTR [esi+24]
  00084	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00087	89 55 e7	 mov	 DWORD PTR _pMsg$[ebp+7], edx
  0008a	66 89 45 eb	 mov	 WORD PTR _pMsg$[ebp+11], ax

; 2097 : 	pMsg.State = lpMsg->State;
; 2098 : 
; 2099 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  0008e	0f bf 46 04	 movsx	 eax, WORD PTR [esi+4]
  00092	6a 0e		 push	 14			; 0000000eH
  00094	8d 55 e0	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00097	89 4d e3	 mov	 DWORD PTR _pMsg$[ebp+3], ecx
  0009a	8a 4e 1a	 mov	 cl, BYTE PTR [esi+26]
  0009d	52		 push	 edx
  0009e	50		 push	 eax
  0009f	66 c7 45 e0 c1
	0e		 mov	 WORD PTR _pMsg$[ebp], 3777 ; 00000ec1H
  000a5	c6 45 e2 c4	 mov	 BYTE PTR _pMsg$[ebp+2], 196 ; 000000c4H
  000a9	88 4d ed	 mov	 BYTE PTR _pMsg$[ebp+13], cl
  000ac	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2100 : 
; 2101 : 	LogAdd("[%s] Friend State (%d)", gObj[lpMsg->Number].Name, lpMsg->State);

  000b1	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  000b5	0f b6 4e 1a	 movzx	 ecx, BYTE PTR [esi+26]
  000b9	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c4	51		 push	 ecx
  000c5	8d 4c 02 77	 lea	 ecx, DWORD PTR [edx+eax+119]
  000c9	51		 push	 ecx
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OEEJLGGK@?$FL?$CFs?$FN?5Friend?5State?5?$CI?$CFd?$CJ?$AA@
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2102 : }

  000d5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d8	83 c4 18	 add	 esp, 24			; 00000018H
  000db	33 cd		 xor	 ecx, ebp
  000dd	5e		 pop	 esi
  000de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?FriendStateRecv@@YAXPAUFHP_FRIEND_STATE@@@Z ENDP	; FriendStateRecv
_TEXT	ENDS
PUBLIC	??_C@_0CG@JNIACLCP@error?9L3?5?3?5?$FL?$CFs?$FN?5Friend?5add?5?3?5Not@ ; `string'
PUBLIC	??_C@_0CD@OOGOJAIC@?$FL?$CFs?$FN?5Friend?5add?5request?5Name?3?5?$FL?$CF@ ; `string'
PUBLIC	??_C@_0EL@ENENOIMK@?$FLHACKTOOL?$FN?5?3?5NPC?9FriendAddReques@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_REQ@@H@Z ; FriendAddRequest
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?gObjGetIndex@@YAHPAD@Z:PROC			; gObjGetIndex
;	COMDAT ??_C@_0CG@JNIACLCP@error?9L3?5?3?5?$FL?$CFs?$FN?5Friend?5add?5?3?5Not@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CG@JNIACLCP@error?9L3?5?3?5?$FL?$CFs?$FN?5Friend?5add?5?3?5Not@ DB 'e'
	DB	'rror-L3 : [%s] Friend add : Not self', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OOGOJAIC@?$FL?$CFs?$FN?5Friend?5add?5request?5Name?3?5?$FL?$CF@
CONST	SEGMENT
??_C@_0CD@OOGOJAIC@?$FL?$CFs?$FN?5Friend?5add?5request?5Name?3?5?$FL?$CF@ DB '['
	DB	'%s] Friend add request Name: [%s]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@ENENOIMK@?$FLHACKTOOL?$FN?5?3?5NPC?9FriendAddReques@
CONST	SEGMENT
??_C@_0EL@ENENOIMK@?$FLHACKTOOL?$FN?5?3?5NPC?9FriendAddReques@ DB '[HACKT'
	DB	'OOL] : NPC-FriendAddRequest npc:%d ip:%s account:%s name:%s S'
	DB	'tate:%d', 00H				; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_REQ@@H@Z
_TEXT	SEGMENT
_pMsg$ = -60						; size = 26
_pResult$215049 = -32					; size = 15
_szFriendName$ = -16					; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_REQ@@H@Z PROC	; FriendAddRequest, COMDAT

; 2123 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2124 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	53		 push	 ebx
  00019	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	75 28		 jne	 SHORT $LN4@FriendAddR

; 2125 : 	{
; 2126 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00025	68 4e 08 00 00	 push	 2126			; 0000084eH
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx

; 2169 : 	}
; 2170 : }		

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN4@FriendAddR:
  0004d	57		 push	 edi

; 2127 : 		return;
; 2128 : 	}
; 2129 : 
; 2130 : 	//Season 4.5 Addon start
; 2131 :     int aTargetIndex = gObjGetIndex(lpMsg->Name);

  0004e	8d 7e 03	 lea	 edi, DWORD PTR [esi+3]
  00051	57		 push	 edi
  00052	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex

; 2132 :  
; 2133 :     if(aTargetIndex >= 0 && aTargetIndex <= OBJMAX-1 && gObj[aTargetIndex].Type != 1  )

  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005d	83 c4 04	 add	 esp, 4
  00060	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00065	77 5a		 ja	 SHORT $LN3@FriendAddR
  00067	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0006d	66 83 7c 08 68
	01		 cmp	 WORD PTR [eax+ecx+104], 1
  00073	8d 14 08	 lea	 edx, DWORD PTR [eax+ecx]
  00076	74 49		 je	 SHORT $LN3@FriendAddR

; 2134 :     {
; 2135 :         LogAddC(2,"[HACKTOOL] : NPC-FriendAddRequest npc:%d ip:%s account:%s name:%s State:%d",
; 2136 : 			gObj[aTargetIndex].Class,gObj[aIndex].Ip_addr,gObj[aIndex].AccountID,
; 2137 : 			gObj[aIndex].Name,gObj[aIndex].Connected);

  00078	0f b7 92 b8 00
	00 00		 movzx	 edx, WORD PTR [edx+184]
  0007f	8b c3		 mov	 eax, ebx
  00081	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00087	03 c1		 add	 eax, ecx
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	51		 push	 ecx
  0008d	8d 48 77	 lea	 ecx, DWORD PTR [eax+119]
  00090	51		 push	 ecx
  00091	8d 48 6c	 lea	 ecx, DWORD PTR [eax+108]
  00094	51		 push	 ecx
  00095	83 c0 18	 add	 eax, 24			; 00000018H
  00098	50		 push	 eax
  00099	52		 push	 edx
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ENENOIMK@?$FLHACKTOOL?$FN?5?3?5NPC?9FriendAddReques@
  0009f	6a 02		 push	 2
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 2138 :         CloseClient(aIndex);

  000a7	53		 push	 ebx
  000a8	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  000ad	83 c4 20	 add	 esp, 32			; 00000020H
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx

; 2169 : 	}
; 2170 : }		

  000b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	33 cd		 xor	 ecx, ebp
  000b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
$LN3@FriendAddR:

; 2139 :         return;
; 2140 :     }
; 2141 :     //Season 4.5 Addon end
; 2142 : 
; 2143 : 	FHP_FRIEND_ADD_REQ pMsg;
; 2144 : 
; 2145 : 	pMsg.h.set((LPBYTE)&pMsg, 0x63, sizeof(pMsg));
; 2146 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  000c1	8b f3		 mov	 esi, ebx
  000c3	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  000c9	8d 4c 0e 77	 lea	 ecx, DWORD PTR [esi+ecx+119]
  000cd	66 c7 45 c4 c1
	1a		 mov	 WORD PTR _pMsg$[ebp], 6849 ; 00001ac1H
  000d3	c6 45 c6 63	 mov	 BYTE PTR _pMsg$[ebp+2], 99 ; 00000063H
  000d7	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d9	89 45 ca	 mov	 DWORD PTR _pMsg$[ebp+6], eax
  000dc	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000df	89 55 ce	 mov	 DWORD PTR _pMsg$[ebp+10], edx
  000e2	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]

; 2147 : 	memcpy(pMsg.FriendName, lpMsg->Name, sizeof(pMsg.FriendName));

  000e6	8b 17		 mov	 edx, DWORD PTR [edi]
  000e8	66 89 45 d2	 mov	 WORD PTR _pMsg$[ebp+14], ax
  000ec	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ef	89 55 d4	 mov	 DWORD PTR _pMsg$[ebp+16], edx
  000f2	66 8b 57 08	 mov	 dx, WORD PTR [edi+8]
  000f6	89 45 d8	 mov	 DWORD PTR _pMsg$[ebp+20], eax

; 2148 : 	pMsg.Number = aIndex;
; 2149 : 	char_ID szFriendName(lpMsg->Name);

  000f9	33 c0		 xor	 eax, eax
  000fb	66 89 55 dc	 mov	 WORD PTR _pMsg$[ebp+24], dx
  000ff	66 89 5d c8	 mov	 WORD PTR _pMsg$[ebp+4], bx
  00103	89 45 f0	 mov	 DWORD PTR _szFriendName$[ebp], eax
  00106	89 45 f4	 mov	 DWORD PTR _szFriendName$[ebp+4], eax
  00109	66 89 45 f8	 mov	 WORD PTR _szFriendName$[ebp+8], ax
  0010d	88 45 fa	 mov	 BYTE PTR _szFriendName$[ebp+10], al
  00110	85 ff		 test	 edi, edi
  00112	74 13		 je	 SHORT $LN9@FriendAddR
  00114	8b 07		 mov	 eax, DWORD PTR [edi]
  00116	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00119	89 45 f0	 mov	 DWORD PTR _szFriendName$[ebp], eax
  0011c	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  00120	89 55 f4	 mov	 DWORD PTR _szFriendName$[ebp+4], edx
  00123	66 89 45 f8	 mov	 WORD PTR _szFriendName$[ebp+8], ax
$LN9@FriendAddR:

; 2150 : 	
; 2151 : 	LogAdd("[%s] Friend add request Name: [%s]", gObj[aIndex].Name,	szFriendName.GetBuffer());

  00127	8d 55 f0	 lea	 edx, DWORD PTR _szFriendName$[ebp]
  0012a	52		 push	 edx
  0012b	51		 push	 ecx
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OOGOJAIC@?$FL?$CFs?$FN?5Friend?5add?5request?5Name?3?5?$FL?$CF@
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2152 : 
; 2153 : 	if ( !strcmp(gObj[aIndex].Name, szFriendName.GetBuffer()))

  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0013c	8d 74 06 77	 lea	 esi, DWORD PTR [esi+eax+119]
  00140	83 c4 0c	 add	 esp, 12			; 0000000cH
  00143	8d 4d f0	 lea	 ecx, DWORD PTR _szFriendName$[ebp]
  00146	8b c6		 mov	 eax, esi
$LL18@FriendAddR:
  00148	8a 10		 mov	 dl, BYTE PTR [eax]
  0014a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0014c	75 1a		 jne	 SHORT $LN19@FriendAddR
  0014e	84 d2		 test	 dl, dl
  00150	74 12		 je	 SHORT $LN20@FriendAddR
  00152	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00155	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00158	75 0e		 jne	 SHORT $LN19@FriendAddR
  0015a	83 c0 02	 add	 eax, 2
  0015d	83 c1 02	 add	 ecx, 2
  00160	84 d2		 test	 dl, dl
  00162	75 e4		 jne	 SHORT $LL18@FriendAddR
$LN20@FriendAddR:
  00164	33 c0		 xor	 eax, eax
  00166	eb 05		 jmp	 SHORT $LN21@FriendAddR
$LN19@FriendAddR:
  00168	1b c0		 sbb	 eax, eax
  0016a	83 d8 ff	 sbb	 eax, -1
$LN21@FriendAddR:
  0016d	85 c0		 test	 eax, eax
  0016f	75 4a		 jne	 SHORT $LN2@FriendAddR

; 2154 : 	{
; 2155 : 		LogAdd("error-L3 : [%s] Friend add : Not self", gObj[aIndex].Name);

  00171	56		 push	 esi
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JNIACLCP@error?9L3?5?3?5?$FL?$CFs?$FN?5Friend?5add?5?3?5Not@
  00177	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2156 : 		
; 2157 : 		PMSG_FRIEND_ADD_RESULT pResult;
; 2158 : 
; 2159 : 		pResult.h.set((LPBYTE)&pResult, 0xC1, sizeof(pResult));
; 2160 : 		memcpy(pResult.Name, lpMsg->Name, sizeof(pMsg.Name));

  0017d	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0017f	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00182	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  00186	89 4d e4	 mov	 DWORD PTR _pResult$215049[ebp+4], ecx

; 2161 : 		pResult.Result = 5;
; 2162 : 		pResult.State = -1;
; 2163 : 
; 2164 : 		DataSend(aIndex, (LPBYTE)&pResult, sizeof(pResult));

  00189	6a 0f		 push	 15			; 0000000fH
  0018b	8d 4d e0	 lea	 ecx, DWORD PTR _pResult$215049[ebp]
  0018e	51		 push	 ecx
  0018f	53		 push	 ebx
  00190	89 55 e8	 mov	 DWORD PTR _pResult$215049[ebp+8], edx
  00193	66 89 45 ec	 mov	 WORD PTR _pResult$215049[ebp+12], ax
  00197	c7 45 e0 c1 0f
	c1 05		 mov	 DWORD PTR _pResult$215049[ebp], 96538561 ; 05c10fc1H
  0019e	c6 45 ee ff	 mov	 BYTE PTR _pResult$215049[ebp+14], 255 ; 000000ffH
  001a2	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  001a7	83 c4 14	 add	 esp, 20			; 00000014H
  001aa	5f		 pop	 edi
  001ab	5e		 pop	 esi
  001ac	5b		 pop	 ebx

; 2169 : 	}
; 2170 : }		

  001ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b0	33 cd		 xor	 ecx, ebp
  001b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c3		 ret	 0
$LN2@FriendAddR:

; 2165 : 	}
; 2166 : 	else
; 2167 : 	{
; 2168 : 		wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  001bb	0f b6 55 c5	 movzx	 edx, BYTE PTR _pMsg$[ebp+1]
  001bf	52		 push	 edx
  001c0	8d 45 c4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  001c3	50		 push	 eax
  001c4	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  001c9	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2169 : 	}
; 2170 : }		

  001ce	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d1	5f		 pop	 edi
  001d2	5e		 pop	 esi
  001d3	33 cd		 xor	 ecx, ebp
  001d5	5b		 pop	 ebx
  001d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001db	8b e5		 mov	 esp, ebp
  001dd	5d		 pop	 ebp
  001de	c3		 ret	 0
?FriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_REQ@@H@Z ENDP	; FriendAddRequest
_TEXT	ENDS
PUBLIC	??_C@_0DB@NPDFCIKD@?$FL?$CFs?$FN?5Friend?5add?5result?5?3?5?$CI?$CFd?$CJ?5fr@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendAddResult@@YAXPAUFHP_FRIEND_ADD_RESULT@@@Z ; FriendAddResult
;	COMDAT ??_C@_0DB@NPDFCIKD@?$FL?$CFs?$FN?5Friend?5add?5result?5?3?5?$CI?$CFd?$CJ?5fr@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0DB@NPDFCIKD@?$FL?$CFs?$FN?5Friend?5add?5result?5?3?5?$CI?$CFd?$CJ?5fr@ DB '['
	DB	'%s] Friend add result : (%d) friend Name : (%s)', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendAddResult@@YAXPAUFHP_FRIEND_ADD_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 15
_szFriendName$ = -28					; size = 11
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendAddResult@@YAXPAUFHP_FRIEND_ADD_RESULT@@@Z PROC	; FriendAddResult, COMDAT

; 2173 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2174 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 07	 lea	 ecx, DWORD PTR [esi+7]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@FriendAddR@2
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@FriendAddR@2:

; 2175 : 
; 2176 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 27		 jne	 SHORT $LN1@FriendAddR@2

; 2177 : 	{
; 2178 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00052	68 82 08 00 00	 push	 2178			; 00000882H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	5e		 pop	 esi

; 2193 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN1@FriendAddR@2:

; 2179 : 		return;
; 2180 : 	}
; 2181 : 
; 2182 : 	PMSG_FRIEND_ADD_RESULT pMsg;
; 2183 : 	char_ID szFriendName(lpMsg->FriendName);

  00079	33 c9		 xor	 ecx, ecx
  0007b	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
  0007e	89 4d e4	 mov	 DWORD PTR _szFriendName$[ebp], ecx
  00081	89 4d e8	 mov	 DWORD PTR _szFriendName$[ebp+4], ecx
  00084	66 89 4d ec	 mov	 WORD PTR _szFriendName$[ebp+8], cx
  00088	88 4d ee	 mov	 BYTE PTR _szFriendName$[ebp+10], cl
  0008b	85 c0		 test	 eax, eax
  0008d	74 13		 je	 SHORT $LN9@FriendAddR@2
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00094	89 4d e4	 mov	 DWORD PTR _szFriendName$[ebp], ecx
  00097	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  0009b	89 55 e8	 mov	 DWORD PTR _szFriendName$[ebp+4], edx
  0009e	66 89 4d ec	 mov	 WORD PTR _szFriendName$[ebp+8], cx
$LN9@FriendAddR@2:

; 2184 : 
; 2185 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC1, sizeof(pMsg));
; 2186 : 	memcpy(pMsg.Name, lpMsg->FriendName, sizeof(pMsg.Name));

  000a2	8b 10		 mov	 edx, DWORD PTR [eax]
  000a4	b1 c1		 mov	 cl, 193			; 000000c1H
  000a6	88 4d d6	 mov	 BYTE PTR _pMsg$[ebp+2], cl
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	89 55 d8	 mov	 DWORD PTR _pMsg$[ebp+4], edx
  000af	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

; 2187 : 	pMsg.Result = lpMsg->Result;

  000b3	8a 46 06	 mov	 al, BYTE PTR [esi+6]
  000b6	66 89 55 e0	 mov	 WORD PTR _pMsg$[ebp+12], dx
  000ba	88 45 d7	 mov	 BYTE PTR _pMsg$[ebp+3], al

; 2188 : 	pMsg.State = lpMsg->Server;
; 2189 : 
; 2190 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  000bd	0f bf 46 04	 movsx	 eax, WORD PTR [esi+4]
  000c1	6a 0f		 push	 15			; 0000000fH
  000c3	8d 55 d4	 lea	 edx, DWORD PTR _pMsg$[ebp]
  000c6	89 4d dc	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  000c9	8a 4e 1b	 mov	 cl, BYTE PTR [esi+27]
  000cc	52		 push	 edx
  000cd	50		 push	 eax
  000ce	66 c7 45 d4 c1
	0f		 mov	 WORD PTR _pMsg$[ebp], 4033 ; 00000fc1H
  000d4	88 4d e2	 mov	 BYTE PTR _pMsg$[ebp+14], cl
  000d7	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2191 : 
; 2192 : 	LogAdd("[%s] Friend add result : (%d) friend Name : (%s)", Name.GetBuffer(), lpMsg->Result, szFriendName.GetBuffer());

  000dc	0f b6 56 06	 movzx	 edx, BYTE PTR [esi+6]
  000e0	8d 4d e4	 lea	 ecx, DWORD PTR _szFriendName$[ebp]
  000e3	51		 push	 ecx
  000e4	52		 push	 edx
  000e5	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  000e8	50		 push	 eax
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@NPDFCIKD@?$FL?$CFs?$FN?5Friend?5add?5result?5?3?5?$CI?$CFd?$CJ?5fr@
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2193 : }

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f7	83 c4 1c	 add	 esp, 28			; 0000001cH
  000fa	33 cd		 xor	 ecx, ebp
  000fc	5e		 pop	 esi
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
?FriendAddResult@@YAXPAUFHP_FRIEND_ADD_RESULT@@@Z ENDP	; FriendAddResult
_TEXT	ENDS
PUBLIC	??_C@_0CB@IIBIOFAA@?$FL?$CFs?$FN?5WaitFriend?5add?5request?5?$FL?$CFs?$FN@ ; `string'
PUBLIC	_lpMsg$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?WaitFriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_SIN_RESULT@@H@Z ; WaitFriendAddRequest
;	COMDAT ??_C@_0CB@IIBIOFAA@?$FL?$CFs?$FN?5WaitFriend?5add?5request?5?$FL?$CFs?$FN@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CB@IIBIOFAA@?$FL?$CFs?$FN?5WaitFriend?5add?5request?5?$FL?$CFs?$FN@ DB '['
	DB	'%s] WaitFriend add request [%s]', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?WaitFriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_SIN_RESULT@@H@Z
_TEXT	SEGMENT
_lpMsg$GSCopy$ = -48					; size = 4
_pMsg$ = -44						; size = 26
_fname$215084 = -16					; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?WaitFriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_SIN_RESULT@@H@Z PROC ; WaitFriendAddRequest, COMDAT

; 2205 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 2206 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	53		 push	 ebx

; 2209 : 		return;
; 2210 : 	}
; 2211 : 
; 2212 : 	FHP_WAITFRIEND_ADD_REQ pMsg;
; 2213 : 
; 2214 : 	pMsg.h.set((LPBYTE)&pMsg, 0x64, sizeof(pMsg));

  00019	89 7d d0	 mov	 DWORD PTR _lpMsg$GSCopy$[ebp], edi
  0001c	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00021	83 c4 04	 add	 esp, 4
  00024	85 c0		 test	 eax, eax
  00026	75 28		 jne	 SHORT $LN1@WaitFriend@2

; 2207 : 	{
; 2208 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00028	68 a0 08 00 00	 push	 2208			; 000008a0H
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	5f		 pop	 edi
  00041	5b		 pop	 ebx

; 2225 : 	}
; 2226 : }

  00042	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00045	33 cd		 xor	 ecx, ebp
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN1@WaitFriend@2:

; 2215 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00055	56		 push	 esi
  00056	8b f3		 mov	 esi, ebx
  00058	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0005e	66 c7 45 d4 c1
	1a		 mov	 WORD PTR _pMsg$[ebp], 6849 ; 00001ac1H
  00064	c6 45 d6 64	 mov	 BYTE PTR _pMsg$[ebp+2], 100 ; 00000064H
  00068	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  0006c	89 4d da	 mov	 DWORD PTR _pMsg$[ebp+6], ecx
  0006f	8b 54 06 7b	 mov	 edx, DWORD PTR [esi+eax+123]

; 2216 : 	memcpy(pMsg.FriendName, lpMsg->Name, sizeof(pMsg.FriendName));

  00073	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00076	89 55 de	 mov	 DWORD PTR _pMsg$[ebp+10], edx
  00079	0f b7 44 06 7f	 movzx	 eax, WORD PTR [esi+eax+127]
  0007e	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00081	83 c7 04	 add	 edi, 4
  00084	66 89 45 e2	 mov	 WORD PTR _pMsg$[ebp+14], ax
  00088	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]
  0008c	89 4d e4	 mov	 DWORD PTR _pMsg$[ebp+16], ecx

; 2217 : 	pMsg.Result = lpMsg->Result;

  0008f	8b 4d d0	 mov	 ecx, DWORD PTR _lpMsg$GSCopy$[ebp]
  00092	66 89 45 ec	 mov	 WORD PTR _pMsg$[ebp+24], ax
  00096	89 55 e8	 mov	 DWORD PTR _pMsg$[ebp+20], edx
  00099	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]

; 2218 : 	pMsg.Number = aIndex;
; 2219 : 
; 2220 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  0009c	6a 1a		 push	 26			; 0000001aH
  0009e	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  000a1	50		 push	 eax
  000a2	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  000a7	88 55 d7	 mov	 BYTE PTR _pMsg$[ebp+3], dl
  000aa	66 89 5d d8	 mov	 WORD PTR _pMsg$[ebp+4], bx
  000ae	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2221 : 
; 2222 : 	{
; 2223 : 		char_ID fname(lpMsg->Name);

  000b3	33 c0		 xor	 eax, eax
  000b5	89 45 f0	 mov	 DWORD PTR _fname$215084[ebp], eax
  000b8	89 45 f4	 mov	 DWORD PTR _fname$215084[ebp+4], eax
  000bb	66 89 45 f8	 mov	 WORD PTR _fname$215084[ebp+8], ax
  000bf	88 45 fa	 mov	 BYTE PTR _fname$215084[ebp+10], al
  000c2	85 ff		 test	 edi, edi
  000c4	74 13		 je	 SHORT $LN6@WaitFriend@2
  000c6	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000c8	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000cb	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  000cf	89 4d f0	 mov	 DWORD PTR _fname$215084[ebp], ecx
  000d2	89 55 f4	 mov	 DWORD PTR _fname$215084[ebp+4], edx
  000d5	66 89 45 f8	 mov	 WORD PTR _fname$215084[ebp+8], ax
$LN6@WaitFriend@2:

; 2224 : 		LogAdd("[%s] WaitFriend add request [%s]", gObj[aIndex].Name, fname.GetBuffer());

  000d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000df	8d 4d f0	 lea	 ecx, DWORD PTR _fname$215084[ebp]
  000e2	51		 push	 ecx
  000e3	8d 44 16 77	 lea	 eax, DWORD PTR [esi+edx+119]
  000e7	50		 push	 eax
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@IIBIOFAA@?$FL?$CFs?$FN?5WaitFriend?5add?5request?5?$FL?$CFs?$FN@
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2225 : 	}
; 2226 : }

  000f3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f9	5e		 pop	 esi
  000fa	5f		 pop	 edi
  000fb	33 cd		 xor	 ecx, ebp
  000fd	5b		 pop	 ebx
  000fe	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
?WaitFriendAddRequest@@YAXPAUPMSG_FRIEND_ADD_SIN_RESULT@@H@Z ENDP ; WaitFriendAddRequest
_TEXT	ENDS
PUBLIC	??_C@_0CF@CCKIBLLA@?$FL?$CFs?$FN?5WaitFriend?5add?5result?5?$CI?$CFd?$CJ?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?WaitFriendAddResult@@YAXPAUFHP_WAITFRIEND_ADD_RESULT@@@Z ; WaitFriendAddResult
;	COMDAT ??_C@_0CF@CCKIBLLA@?$FL?$CFs?$FN?5WaitFriend?5add?5result?5?$CI?$CFd?$CJ?5@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CF@CCKIBLLA@?$FL?$CFs?$FN?5WaitFriend?5add?5result?5?$CI?$CFd?$CJ?5@ DB '['
	DB	'%s] WaitFriend add result (%d) [%s]', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?WaitFriendAddResult@@YAXPAUFHP_WAITFRIEND_ADD_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 15
_szFriendName$ = -28					; size = 11
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?WaitFriendAddResult@@YAXPAUFHP_WAITFRIEND_ADD_RESULT@@@Z PROC ; WaitFriendAddResult, COMDAT

; 2229 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2230 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 07	 lea	 ecx, DWORD PTR [esi+7]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@WaitFriend@3
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@WaitFriend@3:

; 2231 : 
; 2232 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 27		 jne	 SHORT $LN1@WaitFriend@3

; 2233 : 	{
; 2234 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00052	68 ba 08 00 00	 push	 2234			; 000008baH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	5e		 pop	 esi

; 2250 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN1@WaitFriend@3:

; 2235 : 		return;
; 2236 : 	}
; 2237 : 
; 2238 : 	PMSG_FRIEND_ADD_RESULT pMsg;
; 2239 : 
; 2240 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC1, sizeof(pMsg));
; 2241 : 	memcpy(pMsg.Name, lpMsg->FriendName, sizeof(pMsg.Name));

  00079	8b 4e 11	 mov	 ecx, DWORD PTR [esi+17]
  0007c	8b 56 15	 mov	 edx, DWORD PTR [esi+21]
  0007f	b0 c1		 mov	 al, 193			; 000000c1H
  00081	88 45 d6	 mov	 BYTE PTR _pMsg$[ebp+2], al
  00084	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
  00087	89 4d d8	 mov	 DWORD PTR _pMsg$[ebp+4], ecx
  0008a	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  0008e	66 89 4d e0	 mov	 WORD PTR _pMsg$[ebp+12], cx

; 2242 : 	pMsg.Result = lpMsg->Result;
; 2243 : 	pMsg.State = lpMsg->pServer;

  00092	8a 4e 1b	 mov	 cl, BYTE PTR [esi+27]
  00095	89 55 dc	 mov	 DWORD PTR _pMsg$[ebp+8], edx
  00098	8a 56 06	 mov	 dl, BYTE PTR [esi+6]
  0009b	88 4d e2	 mov	 BYTE PTR _pMsg$[ebp+14], cl

; 2244 : 
; 2245 : 	char_ID szFriendName(lpMsg->FriendName);

  0009e	33 c9		 xor	 ecx, ecx
  000a0	66 c7 45 d4 c1
	0f		 mov	 WORD PTR _pMsg$[ebp], 4033 ; 00000fc1H
  000a6	88 55 d7	 mov	 BYTE PTR _pMsg$[ebp+3], dl
  000a9	89 4d e4	 mov	 DWORD PTR _szFriendName$[ebp], ecx
  000ac	89 4d e8	 mov	 DWORD PTR _szFriendName$[ebp+4], ecx
  000af	66 89 4d ec	 mov	 WORD PTR _szFriendName$[ebp+8], cx
  000b3	88 4d ee	 mov	 BYTE PTR _szFriendName$[ebp+10], cl
  000b6	85 c0		 test	 eax, eax
  000b8	74 13		 je	 SHORT $LN11@WaitFriend@3
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	89 4d e4	 mov	 DWORD PTR _szFriendName$[ebp], ecx
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  000c6	89 4d e8	 mov	 DWORD PTR _szFriendName$[ebp+4], ecx
  000c9	66 89 45 ec	 mov	 WORD PTR _szFriendName$[ebp+8], ax
$LN11@WaitFriend@3:

; 2246 : 
; 2247 : 	LogAdd("[%s] WaitFriend add result (%d) [%s]", Name.GetBuffer(), lpMsg->Result, szFriendName.GetBuffer());

  000cd	8d 4d e4	 lea	 ecx, DWORD PTR _szFriendName$[ebp]
  000d0	51		 push	 ecx
  000d1	0f b6 d2	 movzx	 edx, dl
  000d4	52		 push	 edx
  000d5	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  000d8	50		 push	 eax
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@CCKIBLLA@?$FL?$CFs?$FN?5WaitFriend?5add?5result?5?$CI?$CFd?$CJ?5@
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2248 : 
; 2249 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  000e4	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  000e8	6a 0f		 push	 15			; 0000000fH
  000ea	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000ed	51		 push	 ecx
  000ee	52		 push	 edx
  000ef	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2250 : }

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f7	83 c4 1c	 add	 esp, 28			; 0000001cH
  000fa	33 cd		 xor	 ecx, ebp
  000fc	5e		 pop	 esi
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
?WaitFriendAddResult@@YAXPAUFHP_WAITFRIEND_ADD_RESULT@@@Z ENDP ; WaitFriendAddResult
_TEXT	ENDS
PUBLIC	??_C@_0BN@HLFBKLAE@?$FL?$CFs?$FN?5Friend?5del?5request?5?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?FriendDelRequest@@YAXPAUPMSG_FRIEND_DEL_REQ@@H@Z ; FriendDelRequest
;	COMDAT ??_C@_0BN@HLFBKLAE@?$FL?$CFs?$FN?5Friend?5del?5request?5?$FL?$CFs?$FN?$AA@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0BN@HLFBKLAE@?$FL?$CFs?$FN?5Friend?5del?5request?5?$FL?$CFs?$FN?$AA@ DB '['
	DB	'%s] Friend del request [%s]', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendDelRequest@@YAXPAUPMSG_FRIEND_DEL_REQ@@H@Z
_TEXT	SEGMENT
_aIndex$GSCopy$ = -48					; size = 4
_pMsg$ = -44						; size = 26
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendDelRequest@@YAXPAUPMSG_FRIEND_DEL_REQ@@H@Z PROC	; FriendDelRequest, COMDAT

; 2253 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 2254 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	56		 push	 esi

; 2262 : 
; 2263 : 	pMsg.h.set((LPBYTE)&pMsg, 0x65, sizeof(pMsg));

  00019	89 75 d0	 mov	 DWORD PTR _aIndex$GSCopy$[ebp], esi
  0001c	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00021	83 c4 04	 add	 esp, 4
  00024	85 c0		 test	 eax, eax
  00026	75 28		 jne	 SHORT $LN1@FriendDelR

; 2255 : 	{
; 2256 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00028	68 d0 08 00 00	 push	 2256			; 000008d0H
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi

; 2271 : }

  00042	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00045	33 cd		 xor	 ecx, ebp
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN1@FriendDelR:

; 2257 : 		return;
; 2258 : 	}
; 2259 : 
; 2260 : 	FHP_FRIEND_ADD_REQ pMsg;
; 2261 : 	char_ID Name(lpMsg->Name);

  00050	33 c0		 xor	 eax, eax
  00052	8d 4f 03	 lea	 ecx, DWORD PTR [edi+3]
  00055	53		 push	 ebx
  00056	8b d0		 mov	 edx, eax
  00058	8b f8		 mov	 edi, eax
  0005a	66 8b d8	 mov	 bx, ax
  0005d	89 55 f0	 mov	 DWORD PTR _Name$[ebp], edx
  00060	89 7d f4	 mov	 DWORD PTR _Name$[ebp+4], edi
  00063	66 89 5d f8	 mov	 WORD PTR _Name$[ebp+8], bx
  00067	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  0006a	85 c9		 test	 ecx, ecx
  0006c	74 13		 je	 SHORT $LN4@FriendDelR
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00073	66 8b 59 08	 mov	 bx, WORD PTR [ecx+8]
  00077	89 55 f0	 mov	 DWORD PTR _Name$[ebp], edx
  0007a	89 7d f4	 mov	 DWORD PTR _Name$[ebp+4], edi
  0007d	66 89 5d f8	 mov	 WORD PTR _Name$[ebp+8], bx
$LN4@FriendDelR:

; 2264 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00086	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0008c	66 c7 45 d4 c1
	1a		 mov	 WORD PTR _pMsg$[ebp], 6849 ; 00001ac1H
  00092	c6 45 d6 65	 mov	 BYTE PTR _pMsg$[ebp+2], 101 ; 00000065H
  00096	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  0009a	89 4d da	 mov	 DWORD PTR _pMsg$[ebp+6], ecx
  0009d	8b 4c 06 7b	 mov	 ecx, DWORD PTR [esi+eax+123]
  000a1	89 4d de	 mov	 DWORD PTR _pMsg$[ebp+10], ecx
  000a4	66 8b 44 06 7f	 mov	 ax, WORD PTR [esi+eax+127]

; 2265 : 	memcpy(pMsg.FriendName, Name.GetBuffer(), sizeof(pMsg.FriendName));
; 2266 : 	pMsg.Number = aIndex;

  000a9	66 8b 4d d0	 mov	 cx, WORD PTR _aIndex$GSCopy$[ebp]
  000ad	89 55 e4	 mov	 DWORD PTR _pMsg$[ebp+16], edx

; 2267 : 
; 2268 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  000b0	6a 1a		 push	 26			; 0000001aH
  000b2	8d 55 d4	 lea	 edx, DWORD PTR _pMsg$[ebp]
  000b5	66 89 4d d8	 mov	 WORD PTR _pMsg$[ebp+4], cx
  000b9	52		 push	 edx
  000ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  000bf	66 89 45 e2	 mov	 WORD PTR _pMsg$[ebp+14], ax
  000c3	89 7d e8	 mov	 DWORD PTR _pMsg$[ebp+20], edi
  000c6	66 89 5d ec	 mov	 WORD PTR _pMsg$[ebp+24], bx
  000ca	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2269 : 
; 2270 : 	LogAddTD("[%s] Friend del request [%s]", gObj[aIndex].Name, Name.GetBuffer());

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000d5	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  000d8	50		 push	 eax
  000d9	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  000dd	52		 push	 edx
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HLFBKLAE@?$FL?$CFs?$FN?5Friend?5del?5request?5?$FL?$CFs?$FN?$AA@
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2271 : }

  000e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ec	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ef	5b		 pop	 ebx
  000f0	5f		 pop	 edi
  000f1	33 cd		 xor	 ecx, ebp
  000f3	5e		 pop	 esi
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
?FriendDelRequest@@YAXPAUPMSG_FRIEND_DEL_REQ@@H@Z ENDP	; FriendDelRequest
_TEXT	ENDS
PUBLIC	??_C@_0CB@NCMBHLMH@?$FL?$CFs?$FN?5Friend?5del?5result?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendDelResult@@YAXPAUFHP_FRIEND_DEL_RESULT@@@Z ; FriendDelResult
;	COMDAT ??_C@_0CB@NCMBHLMH@?$FL?$CFs?$FN?5Friend?5del?5result?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CB@NCMBHLMH@?$FL?$CFs?$FN?5Friend?5del?5result?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN@ DB '['
	DB	'%s] Friend del result (%d) [%s]', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendDelResult@@YAXPAUFHP_FRIEND_DEL_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 14
_FriendName$ = -28					; size = 11
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendDelResult@@YAXPAUFHP_FRIEND_DEL_RESULT@@@Z PROC	; FriendDelResult, COMDAT

; 2281 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2282 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 07	 lea	 ecx, DWORD PTR [esi+7]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@FriendDelR@2
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@FriendDelR@2:

; 2283 : 
; 2284 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 27		 jne	 SHORT $LN1@FriendDelR@2

; 2285 : 	{
; 2286 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00052	68 ee 08 00 00	 push	 2286			; 000008eeH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	5e		 pop	 esi

; 2301 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN1@FriendDelR@2:

; 2287 : 		return;
; 2288 : 	}
; 2289 : 
; 2290 : 	PMSG_FRIEND_DEL_RESULT pMsg;
; 2291 : 	char_ID FriendName(lpMsg->FriendName);

  00079	33 c9		 xor	 ecx, ecx
  0007b	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
  0007e	89 4d e4	 mov	 DWORD PTR _FriendName$[ebp], ecx
  00081	89 4d e8	 mov	 DWORD PTR _FriendName$[ebp+4], ecx
  00084	66 89 4d ec	 mov	 WORD PTR _FriendName$[ebp+8], cx
  00088	88 4d ee	 mov	 BYTE PTR _FriendName$[ebp+10], cl
  0008b	85 c0		 test	 eax, eax
  0008d	74 13		 je	 SHORT $LN9@FriendDelR@2
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00094	89 4d e4	 mov	 DWORD PTR _FriendName$[ebp], ecx
  00097	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  0009b	89 55 e8	 mov	 DWORD PTR _FriendName$[ebp+4], edx
  0009e	66 89 4d ec	 mov	 WORD PTR _FriendName$[ebp+8], cx
$LN9@FriendDelR@2:

; 2292 : 
; 2293 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC3, sizeof(pMsg));
; 2294 : 	memcpy(pMsg.Name, lpMsg->FriendName, sizeof(pMsg.Name));

  000a2	8b 10		 mov	 edx, DWORD PTR [eax]
  000a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a7	89 55 d8	 mov	 DWORD PTR _pMsg$[ebp+4], edx
  000aa	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

; 2295 : 	pMsg.Result = lpMsg->Result;

  000ae	8a 46 06	 mov	 al, BYTE PTR [esi+6]
  000b1	89 4d dc	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  000b4	66 89 55 e0	 mov	 WORD PTR _pMsg$[ebp+12], dx

; 2296 : 
; 2297 : 	LogAdd("[%s] Friend del result (%d) [%s]",
; 2298 : 		Name.GetBuffer(), lpMsg->Result, FriendName.GetBuffer());

  000b8	0f b6 d0	 movzx	 edx, al
  000bb	8d 4d e4	 lea	 ecx, DWORD PTR _FriendName$[ebp]
  000be	51		 push	 ecx
  000bf	88 45 d7	 mov	 BYTE PTR _pMsg$[ebp+3], al
  000c2	52		 push	 edx
  000c3	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  000c6	50		 push	 eax
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NCMBHLMH@?$FL?$CFs?$FN?5Friend?5del?5result?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN@
  000cc	66 c7 45 d4 c1
	0e		 mov	 WORD PTR _pMsg$[ebp], 3777 ; 00000ec1H
  000d2	c6 45 d6 c3	 mov	 BYTE PTR _pMsg$[ebp+2], 195 ; 000000c3H
  000d6	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2299 : 
; 2300 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  000dc	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  000e0	6a 0e		 push	 14			; 0000000eH
  000e2	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000e5	51		 push	 ecx
  000e6	52		 push	 edx
  000e7	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2301 : }

  000ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ef	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f2	33 cd		 xor	 ecx, ebp
  000f4	5e		 pop	 esi
  000f5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
?FriendDelResult@@YAXPAUFHP_FRIEND_DEL_RESULT@@@Z ENDP	; FriendDelResult
_TEXT	ENDS
PUBLIC	??_C@_0CC@HAGNMCFJ@?$FL?$CFs?$FN?5Chatroom?5create?5request?5?$FL?$CFs@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendChatRoomCreateReq@@YAXPAUPMSG_FRIEND_ROOMCREATE_REQ@@H@Z ; FriendChatRoomCreateReq
;	COMDAT ??_C@_0CC@HAGNMCFJ@?$FL?$CFs?$FN?5Chatroom?5create?5request?5?$FL?$CFs@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CC@HAGNMCFJ@?$FL?$CFs?$FN?5Chatroom?5create?5request?5?$FL?$CFs@ DB '['
	DB	'%s] Chatroom create request [%s]', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendChatRoomCreateReq@@YAXPAUPMSG_FRIEND_ROOMCREATE_REQ@@H@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 26
_szName$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendChatRoomCreateReq@@YAXPAUPMSG_FRIEND_ROOMCREATE_REQ@@H@Z PROC ; FriendChatRoomCreateReq, COMDAT

; 2312 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 2313 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	57		 push	 edi
  00019	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	75 28		 jne	 SHORT $LN1@FriendChat

; 2314 : 	{
; 2315 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00025	68 0b 09 00 00	 push	 2315			; 0000090bH
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	5f		 pop	 edi
  0003e	5b		 pop	 ebx

; 2331 : }

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN1@FriendChat:

; 2316 : 		return;
; 2317 : 	}
; 2318 : 
; 2319 : 	FHP_FRIEND_CHATROOM_CREATE_REQ pMsg;
; 2320 : 
; 2321 : 	pMsg.h.set((LPBYTE)&pMsg, 0x66, sizeof(pMsg));
; 2322 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00052	56		 push	 esi
  00053	8b f7		 mov	 esi, edi
  00055	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0005b	66 c7 45 d4 c1
	1a		 mov	 WORD PTR _pMsg$[ebp], 6849 ; 00001ac1H
  00061	c6 45 d6 66	 mov	 BYTE PTR _pMsg$[ebp+2], 102 ; 00000066H
  00065	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  00069	89 4d da	 mov	 DWORD PTR _pMsg$[ebp+6], ecx
  0006c	8b 54 06 7b	 mov	 edx, DWORD PTR [esi+eax+123]

; 2323 : 	pMsg.Number = aIndex;
; 2324 : 	memcpy(pMsg.fName, lpMsg->Name, sizeof(pMsg.fName));

  00070	8b 4b 03	 mov	 ecx, DWORD PTR [ebx+3]
  00073	89 55 de	 mov	 DWORD PTR _pMsg$[ebp+10], edx
  00076	0f b7 44 06 7f	 movzx	 eax, WORD PTR [esi+eax+127]
  0007b	8b 53 07	 mov	 edx, DWORD PTR [ebx+7]
  0007e	66 89 7d d8	 mov	 WORD PTR _pMsg$[ebp+4], di
  00082	8d 7b 03	 lea	 edi, DWORD PTR [ebx+3]
  00085	89 4d e4	 mov	 DWORD PTR _pMsg$[ebp+16], ecx
  00088	66 89 45 e2	 mov	 WORD PTR _pMsg$[ebp+14], ax
  0008c	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]

; 2325 : 	
; 2326 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00090	6a 1a		 push	 26			; 0000001aH
  00092	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00095	51		 push	 ecx
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0009b	89 55 e8	 mov	 DWORD PTR _pMsg$[ebp+20], edx
  0009e	66 89 45 ec	 mov	 WORD PTR _pMsg$[ebp+24], ax
  000a2	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2327 : 
; 2328 : 	char_ID szName(lpMsg->Name);

  000a7	33 c0		 xor	 eax, eax
  000a9	89 45 f0	 mov	 DWORD PTR _szName$[ebp], eax
  000ac	89 45 f4	 mov	 DWORD PTR _szName$[ebp+4], eax
  000af	66 89 45 f8	 mov	 WORD PTR _szName$[ebp+8], ax
  000b3	88 45 fa	 mov	 BYTE PTR _szName$[ebp+10], al
  000b6	85 ff		 test	 edi, edi
  000b8	74 13		 je	 SHORT $LN6@FriendChat
  000ba	8b 17		 mov	 edx, DWORD PTR [edi]
  000bc	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bf	66 8b 4f 08	 mov	 cx, WORD PTR [edi+8]
  000c3	89 55 f0	 mov	 DWORD PTR _szName$[ebp], edx
  000c6	89 45 f4	 mov	 DWORD PTR _szName$[ebp+4], eax
  000c9	66 89 4d f8	 mov	 WORD PTR _szName$[ebp+8], cx
$LN6@FriendChat:

; 2329 : 
; 2330 : 	LogAdd("[%s] Chatroom create request [%s]", gObj[aIndex].Name, szName.GetBuffer());

  000cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000d2	8d 55 f0	 lea	 edx, DWORD PTR _szName$[ebp]
  000d5	52		 push	 edx
  000d6	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000da	51		 push	 ecx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@HAGNMCFJ@?$FL?$CFs?$FN?5Chatroom?5create?5request?5?$FL?$CFs@
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2331 : }

  000e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ec	5e		 pop	 esi
  000ed	5f		 pop	 edi
  000ee	33 cd		 xor	 ecx, ebp
  000f0	5b		 pop	 ebx
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
?FriendChatRoomCreateReq@@YAXPAUPMSG_FRIEND_ROOMCREATE_REQ@@H@Z ENDP ; FriendChatRoomCreateReq
_TEXT	ENDS
PUBLIC	??_C@_0CN@LPLKDCJE@?$FL?$CFs?$FN?5Chatroom?5create?5result?5?$CI?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0BM@JEKCBGDH@error?9L2?5?3?5Index?5?$CFs?5?$CFd?5?$CI?$CFs?$CJ?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendChatRoomCreateResult@@YAXPAUFHP_FRIEND_CHATROOM_CREATE_RESULT@@@Z ; FriendChatRoomCreateResult
;	COMDAT ??_C@_0CN@LPLKDCJE@?$FL?$CFs?$FN?5Chatroom?5create?5result?5?$CI?$CFd?$CJ@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CN@LPLKDCJE@?$FL?$CFs?$FN?5Chatroom?5create?5result?5?$CI?$CFd?$CJ@ DB '['
	DB	'%s] Chatroom create result (%d) ticket:(%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JEKCBGDH@error?9L2?5?3?5Index?5?$CFs?5?$CFd?5?$CI?$CFs?$CJ?$AA@
CONST	SEGMENT
??_C@_0BM@JEKCBGDH@error?9L2?5?3?5Index?5?$CFs?5?$CFd?5?$CI?$CFs?$CJ?$AA@ DB 'e'
	DB	'rror-L2 : Index %s %d (%s)', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendChatRoomCreateResult@@YAXPAUFHP_FRIEND_CHATROOM_CREATE_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -52						; size = 36
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendChatRoomCreateResult@@YAXPAUFHP_FRIEND_CHATROOM_CREATE_RESULT@@@Z PROC ; FriendChatRoomCreateResult, COMDAT

; 2345 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2346 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 06	 lea	 ecx, DWORD PTR [esi+6]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@FriendChat@2
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@FriendChat@2:

; 2347 : 
; 2348 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 2b		 jne	 SHORT $LN1@FriendChat@2

; 2349 : 	{
; 2350 : 		LogAddTD("error-L2 : Index %s %d (%s)", __FILE__, __LINE__, Name.GetBuffer());

  00052	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  00055	50		 push	 eax
  00056	68 2e 09 00 00	 push	 2350			; 0000092eH
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JEKCBGDH@error?9L2?5?3?5Index?5?$CFs?5?$CFd?5?$CI?$CFs?$CJ?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	5e		 pop	 esi

; 2367 : }

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	33 cd		 xor	 ecx, ebp
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN1@FriendChat@2:

; 2351 : 		return;
; 2352 : 	}
; 2353 : 
; 2354 : 	PMSG_FRIEND_ROOMCREATE_RESULT pMsg;
; 2355 : 
; 2356 : 	pMsg.h.setE((LPBYTE)&pMsg, 0xCA, sizeof(pMsg));
; 2357 : 	memcpy(pMsg.ServerIp, lpMsg->ServerIp, sizeof(pMsg.ServerIp));

  0007d	8b 56 1e	 mov	 edx, DWORD PTR [esi+30]
  00080	8b 4e 1a	 mov	 ecx, DWORD PTR [esi+26]
  00083	8b 46 22	 mov	 eax, DWORD PTR [esi+34]
  00086	89 55 d3	 mov	 DWORD PTR _pMsg$[ebp+7], edx
  00089	0f b6 56 28	 movzx	 edx, BYTE PTR [esi+40]
  0008d	89 4d cf	 mov	 DWORD PTR _pMsg$[ebp+3], ecx
  00090	66 8b 4e 26	 mov	 cx, WORD PTR [esi+38]
  00094	88 55 dd	 mov	 BYTE PTR _pMsg$[ebp+17], dl

; 2358 : 	pMsg.RoomNumber = lpMsg->RoomNumber;
; 2359 : 	pMsg.Ticket = lpMsg->Ticket;
; 2360 : 	pMsg.Type = lpMsg->Type;

  00097	0f b6 56 30	 movzx	 edx, BYTE PTR [esi+48]
  0009b	89 45 d7	 mov	 DWORD PTR _pMsg$[ebp+11], eax
  0009e	0f b7 46 2a	 movzx	 eax, WORD PTR [esi+42]
  000a2	66 89 4d db	 mov	 WORD PTR _pMsg$[ebp+15], cx
  000a6	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  000a9	89 4d e0	 mov	 DWORD PTR _pMsg$[ebp+20], ecx

; 2361 : 	pMsg.Result = lpMsg->Result;
; 2362 : 	memcpy(pMsg.Name, lpMsg->FriendName, sizeof(pMsg.Name));

  000ac	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000af	88 55 e4	 mov	 BYTE PTR _pMsg$[ebp+24], dl
  000b2	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  000b5	66 89 45 de	 mov	 WORD PTR _pMsg$[ebp+18], ax
  000b9	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  000bc	89 4d e5	 mov	 DWORD PTR _pMsg$[ebp+25], ecx
  000bf	89 55 e9	 mov	 DWORD PTR _pMsg$[ebp+29], edx

; 2363 : 
; 2364 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  000c2	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  000c6	88 45 ef	 mov	 BYTE PTR _pMsg$[ebp+35], al
  000c9	0f b7 46 18	 movzx	 eax, WORD PTR [esi+24]
  000cd	6a 24		 push	 36			; 00000024H
  000cf	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000d2	51		 push	 ecx
  000d3	52		 push	 edx
  000d4	66 c7 45 cc c3
	24		 mov	 WORD PTR _pMsg$[ebp], 9411 ; 000024c3H
  000da	c6 45 ce ca	 mov	 BYTE PTR _pMsg$[ebp+2], 202 ; 000000caH
  000de	66 89 45 ed	 mov	 WORD PTR _pMsg$[ebp+33], ax
  000e2	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2365 : 
; 2366 : 	LogAdd("[%s] Chatroom create result (%d) ticket:(%d)", gObj[lpMsg->Number].Name, lpMsg->Result, lpMsg->Ticket);

  000e7	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  000eb	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  000ee	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000f4	0f b6 4e 03	 movzx	 ecx, BYTE PTR [esi+3]
  000f8	50		 push	 eax
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000fe	51		 push	 ecx
  000ff	8d 4c 02 77	 lea	 ecx, DWORD PTR [edx+eax+119]
  00103	51		 push	 ecx
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@LPLKDCJE@?$FL?$CFs?$FN?5Chatroom?5create?5result?5?$CI?$CFd?$CJ@
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2367 : }

  0010f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00112	83 c4 1c	 add	 esp, 28			; 0000001cH
  00115	33 cd		 xor	 ecx, ebp
  00117	5e		 pop	 esi
  00118	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
?FriendChatRoomCreateResult@@YAXPAUFHP_FRIEND_CHATROOM_CREATE_RESULT@@@Z ENDP ; FriendChatRoomCreateResult
_TEXT	ENDS
PUBLIC	??_C@_0CC@MFFMGDDE@JoinServer?5mail?5send?5?$CFs?5?$CISize?3?$CFd@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z	; MngFriendMemoSend
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0CC@MFFMGDDE@JoinServer?5mail?5send?5?$CFs?5?$CISize?3?$CFd@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CC@MFFMGDDE@JoinServer?5mail?5send?5?$CFs?5?$CISize?3?$CFd@ DB 'Jo'
	DB	'inServer mail send %s (Size:%d)', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z
_TEXT	SEGMENT
_pMsg$ = -1104						; size = 1088
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z PROC	; MngFriendMemoSend, COMDAT

; 2531 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 04 00
	00		 sub	 esp, 1104		; 00000450H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 2532 : 	char_ID Name(lpMsg->Name);

  00016	33 c9		 xor	 ecx, ecx
  00018	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  0001b	89 4d f0	 mov	 DWORD PTR _Name$[ebp], ecx
  0001e	89 4d f4	 mov	 DWORD PTR _Name$[ebp+4], ecx
  00021	66 89 4d f8	 mov	 WORD PTR _Name$[ebp+8], cx
  00025	88 4d fa	 mov	 BYTE PTR _Name$[ebp+10], cl
  00028	85 d2		 test	 edx, edx
  0002a	74 13		 je	 SHORT $LN6@MngFriendM
  0002c	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0002e	89 4d f0	 mov	 DWORD PTR _Name$[ebp], ecx
  00031	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00034	89 4d f4	 mov	 DWORD PTR _Name$[ebp+4], ecx
  00037	66 8b 4a 08	 mov	 cx, WORD PTR [edx+8]
  0003b	66 89 4d f8	 mov	 WORD PTR _Name$[ebp+8], cx
$LN6@MngFriendM:

; 2533 : 
; 2534 : 	if ( lpMsg->MemoSize < 0 || lpMsg->MemoSize > 1000 )

  0003f	0f b7 48 38	 movzx	 ecx, WORD PTR [eax+56]
  00043	66 85 c9	 test	 cx, cx
  00046	0f 88 23 01 00
	00		 js	 $LN2@MngFriendM
  0004c	56		 push	 esi
  0004d	be e8 03 00 00	 mov	 esi, 1000		; 000003e8H
  00052	66 3b ce	 cmp	 cx, si
  00055	0f 8f 13 01 00
	00		 jg	 $LN16@MngFriendM

; 2535 : 		return;
; 2536 : 
; 2537 : 	if ( Name.GetLength() < 1 )

  0005b	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  0005e	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  00061	53		 push	 ebx
$LL15@MngFriendM:
  00062	8a 19		 mov	 bl, BYTE PTR [ecx]
  00064	41		 inc	 ecx
  00065	84 db		 test	 bl, bl
  00067	75 f9		 jne	 SHORT $LL15@MngFriendM
  00069	2b ce		 sub	 ecx, esi
  0006b	83 f9 01	 cmp	 ecx, 1
  0006e	0f 8c f9 00 00
	00		 jl	 $LN17@MngFriendM

; 2538 : 		return;
; 2539 : 
; 2540 : 	FHP_FRIEND_MEMO_SEND pMsg;
; 2541 : 
; 2542 : 	int bsize = lpMsg->MemoSize + sizeof(pMsg) - sizeof(pMsg.Memo);

  00074	0f b7 70 38	 movzx	 esi, WORD PTR [eax+56]
  00078	0f bf de	 movsx	 ebx, si
  0007b	83 c3 58	 add	 ebx, 88			; 00000058H

; 2543 : 
; 2544 : 	pMsg.h.set((LPBYTE)&pMsg, 0x70, bsize);

  0007e	8b cb		 mov	 ecx, ebx
  00080	c1 e9 08	 shr	 ecx, 8
  00083	88 8d b1 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+1], cl

; 2545 : 	pMsg.WindowGuid = 0;
; 2546 : 	pMsg.MemoSize = lpMsg->MemoSize;
; 2547 : 	pMsg.Number = -1;

  00089	83 c9 ff	 or	 ecx, -1
  0008c	66 89 8d b4 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+4], cx
  00093	57		 push	 edi
  00094	66 89 b5 f2 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+66], si

; 2548 : 	pMsg.Dir = 0;
; 2549 : 	pMsg.Action = 0;
; 2550 : 	memcpy(pMsg.Subject, lpMsg->Subject, sizeof(pMsg.Subject));

  0009b	8d 70 18	 lea	 esi, DWORD PTR [eax+24]
  0009e	c6 85 b0 fb ff
	ff c2		 mov	 BYTE PTR _pMsg$[ebp], 194 ; 000000c2H
  000a5	88 9d b2 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+2], bl
  000ab	c6 85 b3 fb ff
	ff 70		 mov	 BYTE PTR _pMsg$[ebp+3], 112 ; 00000070H
  000b2	c7 85 b8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _pMsg$[ebp+8], 0
  000bc	66 c7 85 f0 fb
	ff ff 00 00	 mov	 WORD PTR _pMsg$[ebp+64], 0
  000c5	b9 08 00 00 00	 mov	 ecx, 8
  000ca	8d bd d0 fb ff
	ff		 lea	 edi, DWORD PTR _pMsg$[ebp+32]
  000d0	f3 a5		 rep movsd

; 2551 : 	memcpy(pMsg.Name, lpMsg->Name , sizeof(pMsg.Name));

  000d2	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000d4	89 8d bc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  000da	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000dd	66 8b 52 08	 mov	 dx, WORD PTR [edx+8]
  000e1	89 8d c0 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+16], ecx

; 2552 : 	memset(pMsg.Photo, 0, sizeof(pMsg.Photo));

  000e7	33 c9		 xor	 ecx, ecx
  000e9	89 8d f4 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+68], ecx
  000ef	89 8d f8 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+72], ecx
  000f5	89 8d fc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+76], ecx
  000fb	89 8d 00 fc ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+80], ecx
  00101	66 89 8d 04 fc
	ff ff		 mov	 WORD PTR _pMsg$[ebp+84], cx

; 2553 : 	memcpy(pMsg.ToName, lpMsg->TargetName, sizeof(pMsg.ToName));

  00108	8b 48 0e	 mov	 ecx, DWORD PTR [eax+14]
  0010b	89 8d c6 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+22], ecx
  00111	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00115	66 89 95 c4 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+20], dx
  0011c	8b 50 12	 mov	 edx, DWORD PTR [eax+18]
  0011f	66 89 8d ce fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+30], cx

; 2554 : 	memcpy(pMsg.Memo, lpMsg->Memo, lpMsg->MemoSize);

  00126	0f b7 48 38	 movzx	 ecx, WORD PTR [eax+56]
  0012a	89 95 ca fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+26], edx
  00130	0f bf d1	 movsx	 edx, cx
  00133	52		 push	 edx
  00134	83 c0 3a	 add	 eax, 58			; 0000003aH
  00137	50		 push	 eax
  00138	8d 85 06 fc ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp+86]
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 _memcpy
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2555 : 
; 2556 : 	wsZtDbCli.DataSend((char*)&pMsg, bsize);

  00147	53		 push	 ebx
  00148	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0014e	51		 push	 ecx
  0014f	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  00154	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2557 : 
; 2558 : 	LogAdd("JoinServer mail send %s (Size:%d)", Name.GetBuffer(), bsize);

  00159	53		 push	 ebx
  0015a	8d 55 f0	 lea	 edx, DWORD PTR _Name$[ebp]
  0015d	52		 push	 edx
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MFFMGDDE@JoinServer?5mail?5send?5?$CFs?5?$CISize?3?$CFd@
  00163	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00169	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016c	5f		 pop	 edi
$LN17@MngFriendM:
  0016d	5b		 pop	 ebx
$LN16@MngFriendM:
  0016e	5e		 pop	 esi
$LN2@MngFriendM:

; 2559 : }

  0016f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00172	33 cd		 xor	 ecx, ebp
  00174	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c3		 ret	 0
?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ENDP	; MngFriendMemoSend
_TEXT	ENDS
PUBLIC	??_C@_0DF@HMMPGHMB@?$FL?$CFs?$FN?$FL?$CFs?$FN?5?$CI?$CFs?$CJ?5Pay?5Money?$CIIn?5Inven@ ; `string'
PUBLIC	?WithdrawUserMoney@@YAHPADPAUOBJECTSTRUCT@@H@Z	; WithdrawUserMoney
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
;	COMDAT ??_C@_0DF@HMMPGHMB@?$FL?$CFs?$FN?$FL?$CFs?$FN?5?$CI?$CFs?$CJ?5Pay?5Money?$CIIn?5Inven@
CONST	SEGMENT
??_C@_0DF@HMMPGHMB@?$FL?$CFs?$FN?$FL?$CFs?$FN?5?$CI?$CFs?$CJ?5Pay?5Money?$CIIn?5Inven@ DB '['
	DB	'%s][%s] (%s) Pay Money(In Inventory) : %d - %d = %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?WithdrawUserMoney@@YAHPADPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_Type$ = 8						; size = 4
_lpObj$ = 12						; size = 4
_Withdraw_Money$ = 16					; size = 4
?WithdrawUserMoney@@YAHPADPAUOBJECTSTRUCT@@H@Z PROC	; WithdrawUserMoney, COMDAT

; 2562 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 2563 : 	int oldmoney;
; 2564 : 
; 2565 : 	if ( (lpObj->Money - Withdraw_Money) >= 0 )

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _Withdraw_Money$[ebp]
  00007	56		 push	 esi
  00008	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0000b	57		 push	 edi
  0000c	8b be f0 00 00
	00		 mov	 edi, DWORD PTR [esi+240]
  00012	8b c7		 mov	 eax, edi
  00014	2b c3		 sub	 eax, ebx
  00016	78 3c		 js	 SHORT $LN1@WithdrawUs

; 2566 : 	{
; 2567 : 		oldmoney = lpObj->Money;
; 2568 : 		lpObj->Money -= Withdraw_Money;
; 2569 : 		GCMoneySend(lpObj->m_Index, lpObj->Money);

  00018	50		 push	 eax
  00019	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  0001f	8b 06		 mov	 eax, DWORD PTR [esi]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 2570 : 		LogAdd("[%s][%s] (%s) Pay Money(In Inventory) : %d - %d = %d", lpObj->AccountID, lpObj->Name, Type, oldmoney, Withdraw_Money, lpObj->Money);

  00027	8b 8e f0 00 00
	00		 mov	 ecx, DWORD PTR [esi+240]
  0002d	8b 55 08	 mov	 edx, DWORD PTR _Type$[ebp]
  00030	51		 push	 ecx
  00031	53		 push	 ebx
  00032	57		 push	 edi
  00033	52		 push	 edx
  00034	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  00037	50		 push	 eax
  00038	83 c6 6c	 add	 esi, 108		; 0000006cH
  0003b	56		 push	 esi
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HMMPGHMB@?$FL?$CFs?$FN?$FL?$CFs?$FN?5?$CI?$CFs?$CJ?5Pay?5Money?$CIIn?5Inven@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 24	 add	 esp, 36			; 00000024H
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi

; 2571 : 		return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5b		 pop	 ebx

; 2575 : }

  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN1@WithdrawUs:
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi

; 2572 : 	}
; 2573 : 
; 2574 : 	return FALSE;

  00056	33 c0		 xor	 eax, eax
  00058	5b		 pop	 ebx

; 2575 : }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?WithdrawUserMoney@@YAHPADPAUOBJECTSTRUCT@@H@Z ENDP	; WithdrawUserMoney
_TEXT	ENDS
PUBLIC	??_C@_04JEGKNAHI@Mail?$AA@			; `string'
PUBLIC	??_C@_0CO@FGOJBJPG@?$FL?$CFs?$FN?5Friend?5mail?5Send?5result?5?3?5?$CI@ ; `string'
PUBLIC	??_C@_0CD@EFIPOPHK@JoinServer?5Send?5Mail?5result?5?3?5?$CI?$CF@ ; `string'
PUBLIC	??_C@_06EBHHHLPK@webzen?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ; FriendMemoSendResult
;	COMDAT ??_C@_04JEGKNAHI@Mail?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_04JEGKNAHI@Mail?$AA@ DB 'Mail', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FGOJBJPG@?$FL?$CFs?$FN?5Friend?5mail?5Send?5result?5?3?5?$CI@
CONST	SEGMENT
??_C@_0CO@FGOJBJPG@?$FL?$CFs?$FN?5Friend?5mail?5Send?5result?5?3?5?$CI@ DB '['
	DB	'%s] Friend mail Send result : (%d) guid:(%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EFIPOPHK@JoinServer?5Send?5Mail?5result?5?3?5?$CI?$CF@
CONST	SEGMENT
??_C@_0CD@EFIPOPHK@JoinServer?5Send?5Mail?5result?5?3?5?$CI?$CF@ DB 'Join'
	DB	'Server Send Mail result : (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBHHHLPK@webzen?$AA@
CONST	SEGMENT
??_C@_06EBHHHLPK@webzen?$AA@ DB 'webzen', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 8
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z PROC ; FriendMemoSendResult, COMDAT

; 2585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2586 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 06	 lea	 ecx, DWORD PTR [esi+6]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN6@FriendMemo
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN6@FriendMemo:

; 2587 : 
; 2588 : 	if ( !strcmp(Name.GetBuffer(), "webzen"))

  0003d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_06EBHHHLPK@webzen?$AA@
  00042	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
$LL15@FriendMemo:
  00045	8a 01		 mov	 al, BYTE PTR [ecx]
  00047	3a 02		 cmp	 al, BYTE PTR [edx]
  00049	75 1a		 jne	 SHORT $LN16@FriendMemo
  0004b	84 c0		 test	 al, al
  0004d	74 12		 je	 SHORT $LN17@FriendMemo
  0004f	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00052	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00055	75 0e		 jne	 SHORT $LN16@FriendMemo
  00057	83 c1 02	 add	 ecx, 2
  0005a	83 c2 02	 add	 edx, 2
  0005d	84 c0		 test	 al, al
  0005f	75 e4		 jne	 SHORT $LL15@FriendMemo
$LN17@FriendMemo:
  00061	33 c0		 xor	 eax, eax
  00063	eb 05		 jmp	 SHORT $LN18@FriendMemo
$LN16@FriendMemo:
  00065	1b c0		 sbb	 eax, eax
  00067	83 d8 ff	 sbb	 eax, -1
$LN18@FriendMemo:
  0006a	85 c0		 test	 eax, eax
  0006c	75 22		 jne	 SHORT $LN3@FriendMemo

; 2589 : 	{
; 2590 : 		LogAdd("JoinServer Send Mail result : (%d)", lpMsg->Result);

  0006e	0f b6 4e 10	 movzx	 ecx, BYTE PTR [esi+16]
  00072	51		 push	 ecx
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@EFIPOPHK@JoinServer?5Send?5Mail?5result?5?3?5?$CI?$CF@
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0007e	83 c4 08	 add	 esp, 8
  00081	5e		 pop	 esi

; 2613 : 	}
; 2614 : }

  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN3@FriendMemo:

; 2591 : 		return;
; 2592 : 	}
; 2593 : 
; 2594 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  00090	0f bf 46 04	 movsx	 eax, WORD PTR [esi+4]
  00094	8d 55 f0	 lea	 edx, DWORD PTR _Name$[ebp]
  00097	52		 push	 edx
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0009e	83 c4 08	 add	 esp, 8
  000a1	85 c0		 test	 eax, eax
  000a3	75 27		 jne	 SHORT $LN2@FriendMemo

; 2595 : 	{
; 2596 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  000a5	68 24 0a 00 00	 push	 2596			; 00000a24H
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2611 : 	{
; 2612 : 		WithdrawUserMoney("Mail", &gObj[lpMsg->Number], 1000);

  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bd	5e		 pop	 esi

; 2613 : 	}
; 2614 : }

  000be	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c1	33 cd		 xor	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
$LN2@FriendMemo:

; 2597 : 		return;
; 2598 : 	}
; 2599 : 
; 2600 : 	PMSG_FRIEND_MEMO_RESULT pMsg;
; 2601 : 
; 2602 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC5, sizeof(pMsg));
; 2603 : 	pMsg.Result = lpMsg->Result;

  000cc	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]

; 2604 : 	pMsg.WindowGuid = lpMsg->WindowGuid;

  000cf	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  000d2	88 4d eb	 mov	 BYTE PTR _pMsg$[ebp+3], cl

; 2605 : 
; 2606 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  000d5	0f bf 4e 04	 movsx	 ecx, WORD PTR [esi+4]
  000d9	6a 08		 push	 8
  000db	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  000de	50		 push	 eax
  000df	51		 push	 ecx
  000e0	66 c7 45 e8 c1
	08		 mov	 WORD PTR _pMsg$[ebp], 2241 ; 000008c1H
  000e6	c6 45 ea c5	 mov	 BYTE PTR _pMsg$[ebp+2], 197 ; 000000c5H
  000ea	89 55 ec	 mov	 DWORD PTR _pMsg$[ebp+4], edx
  000ed	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2607 : 
; 2608 : 	LogAdd("[%s] Friend mail Send result : (%d) guid:(%d)", gObj[lpMsg->Number].Name, lpMsg->Result, lpMsg->WindowGuid);

  000f2	0f bf 4e 04	 movsx	 ecx, WORD PTR [esi+4]
  000f6	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  000f9	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  000ff	0f b6 46 10	 movzx	 eax, BYTE PTR [esi+16]
  00103	52		 push	 edx
  00104	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0010a	50		 push	 eax
  0010b	8d 44 11 77	 lea	 eax, DWORD PTR [ecx+edx+119]
  0010f	50		 push	 eax
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@FGOJBJPG@?$FL?$CFs?$FN?5Friend?5mail?5Send?5result?5?3?5?$CI@
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0011b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2609 : 
; 2610 : 	if ( pMsg.Result == 1 )

  0011e	80 7d eb 01	 cmp	 BYTE PTR _pMsg$[ebp+3], 1
  00122	75 23		 jne	 SHORT $LN1@FriendMemo

; 2611 : 	{
; 2612 : 		WithdrawUserMoney("Mail", &gObj[lpMsg->Number], 1000);

  00124	0f bf 4e 04	 movsx	 ecx, WORD PTR [esi+4]
  00128	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0012e	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00134	68 e8 03 00 00	 push	 1000			; 000003e8H
  00139	51		 push	 ecx
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_04JEGKNAHI@Mail?$AA@
  0013f	e8 00 00 00 00	 call	 ?WithdrawUserMoney@@YAHPADPAUOBJECTSTRUCT@@H@Z ; WithdrawUserMoney
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@FriendMemo:

; 2613 : 	}
; 2614 : }

  00147	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014a	33 cd		 xor	 ecx, ebp
  0014c	5e		 pop	 esi
  0014d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c3		 ret	 0
?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ENDP ; FriendMemoSendResult
_TEXT	ENDS
PUBLIC	??_C@_0BO@BLCCADHK@?$FL?$CFs?$FN?5Friend?5mail?5list?5request?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoListReq@@YAXH@Z			; FriendMemoListReq
;	COMDAT ??_C@_0BO@BLCCADHK@?$FL?$CFs?$FN?5Friend?5mail?5list?5request?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0BO@BLCCADHK@?$FL?$CFs?$FN?5Friend?5mail?5list?5request?$AA@ DB '[%'
	DB	's] Friend mail list request', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoListReq@@YAXH@Z
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?FriendMemoListReq@@YAXH@Z PROC				; FriendMemoListReq, COMDAT

; 2624 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]

; 2625 : 	if ( !gObjIsConnectedGP(aIndex))

  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	75 27		 jne	 SHORT $LN1@FriendMemo@2

; 2626 : 	{
; 2627 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00021	68 43 0a 00 00	 push	 2627			; 00000a43H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	5e		 pop	 esi

; 2640 : }

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003d	33 cd		 xor	 ecx, ebp
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN1@FriendMemo@2:

; 2628 : 		return;
; 2629 : 	}
; 2630 : 
; 2631 : 	FHP_FRIEND_MEMO_LIST_REQ pMsg;
; 2632 : 
; 2633 : 	pMsg.h.set((LPBYTE)&pMsg, 0x71, sizeof(pMsg));
; 2634 : 	pMsg.Number = aIndex;
; 2635 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004d	66 89 75 f0	 mov	 WORD PTR _pMsg$[ebp+4], si
  00051	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00057	66 c7 45 ec c1
	10		 mov	 WORD PTR _pMsg$[ebp], 4289 ; 000010c1H
  0005d	c6 45 ee 71	 mov	 BYTE PTR _pMsg$[ebp+2], 113 ; 00000071H
  00061	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  00065	89 4d f2	 mov	 DWORD PTR _pMsg$[ebp+6], ecx
  00068	8b 54 06 7b	 mov	 edx, DWORD PTR [esi+eax+123]

; 2636 : 
; 2637 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  0006c	6a 10		 push	 16			; 00000010H
  0006e	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00071	89 55 f6	 mov	 DWORD PTR _pMsg$[ebp+10], edx
  00074	66 8b 44 06 7f	 mov	 ax, WORD PTR [esi+eax+127]
  00079	51		 push	 ecx
  0007a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0007f	66 89 45 fa	 mov	 WORD PTR _pMsg$[ebp+14], ax
  00083	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2638 : 
; 2639 : 	LogAdd("[%s] Friend mail list request", gObj[aIndex].Name);

  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0008e	8d 44 16 77	 lea	 eax, DWORD PTR [esi+edx+119]
  00092	50		 push	 eax
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BLCCADHK@?$FL?$CFs?$FN?5Friend?5mail?5list?5request?$AA@
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2640 : }

  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	83 c4 08	 add	 esp, 8
  000a4	33 cd		 xor	 ecx, ebp
  000a6	5e		 pop	 esi
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
?FriendMemoListReq@@YAXH@Z ENDP				; FriendMemoListReq
_TEXT	ENDS
PUBLIC	??_C@_0CI@INBOEHDN@?$FL?$CFs?$FN?5Friend?5Mail?5list?5?3?5?$CI?$CFd?3?$CF10s@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoList@@YAXPAUFHP_FRIEND_MEMO_LIST@@@Z	; FriendMemoList
;	COMDAT ??_C@_0CI@INBOEHDN@?$FL?$CFs?$FN?5Friend?5Mail?5list?5?3?5?$CI?$CFd?3?$CF10s@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CI@INBOEHDN@?$FL?$CFs?$FN?5Friend?5Mail?5list?5?3?5?$CI?$CFd?3?$CF10s@ DB '['
	DB	'%s] Friend Mail list : (%d:%10s:%s:%s)', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoList@@YAXPAUFHP_FRIEND_MEMO_LIST@@@Z
_TEXT	SEGMENT
_memoindex$ = -208					; size = 4
_pMsg$ = -204						; size = 108
_SendName$ = -96					; size = 11
_RecvName$ = -84					; size = 11
_subject$ = -72						; size = 33
_date$ = -36						; size = 31
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendMemoList@@YAXPAUFHP_FRIEND_MEMO_LIST@@@Z PROC	; FriendMemoList, COMDAT

; 2655 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]

; 2656 : 	char_ID SendName(lpMsg->SendName);

  00017	33 c0		 xor	 eax, eax
  00019	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  0001c	89 45 a0	 mov	 DWORD PTR _SendName$[ebp], eax
  0001f	89 45 a4	 mov	 DWORD PTR _SendName$[ebp+4], eax
  00022	66 89 45 a8	 mov	 WORD PTR _SendName$[ebp+8], ax
  00026	88 45 aa	 mov	 BYTE PTR _SendName$[ebp+10], al
  00029	85 c9		 test	 ecx, ecx
  0002b	74 13		 je	 SHORT $LN4@FriendMemo@3
  0002d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	89 45 a0	 mov	 DWORD PTR _SendName$[ebp], eax
  00035	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00039	89 55 a4	 mov	 DWORD PTR _SendName$[ebp+4], edx
  0003c	66 89 45 a8	 mov	 WORD PTR _SendName$[ebp+8], ax
$LN4@FriendMemo@3:

; 2657 : 	char_ID RecvName(lpMsg->RecvName);

  00040	33 c0		 xor	 eax, eax
  00042	8d 4b 12	 lea	 ecx, DWORD PTR [ebx+18]
  00045	89 45 ac	 mov	 DWORD PTR _RecvName$[ebp], eax
  00048	89 45 b0	 mov	 DWORD PTR _RecvName$[ebp+4], eax
  0004b	66 89 45 b4	 mov	 WORD PTR _RecvName$[ebp+8], ax
  0004f	88 45 b6	 mov	 BYTE PTR _RecvName$[ebp+10], al
  00052	85 c9		 test	 ecx, ecx
  00054	74 13		 je	 SHORT $LN7@FriendMemo@3
  00056	8b 11		 mov	 edx, DWORD PTR [ecx]
  00058	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005b	66 8b 49 08	 mov	 cx, WORD PTR [ecx+8]
  0005f	89 55 ac	 mov	 DWORD PTR _RecvName$[ebp], edx
  00062	89 45 b0	 mov	 DWORD PTR _RecvName$[ebp+4], eax
  00065	66 89 4d b4	 mov	 WORD PTR _RecvName$[ebp+8], cx
$LN7@FriendMemo@3:

; 2658 : 
; 2659 : 	if ( !gObjIsConnectedGP(lpMsg->Number, RecvName.GetBuffer()))

  00069	0f b7 43 04	 movzx	 eax, WORD PTR [ebx+4]
  0006d	8d 55 ac	 lea	 edx, DWORD PTR _RecvName$[ebp]
  00070	52		 push	 edx
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  00077	83 c4 08	 add	 esp, 8
  0007a	85 c0		 test	 eax, eax
  0007c	75 27		 jne	 SHORT $LN1@FriendMemo@3

; 2660 : 	{
; 2661 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  0007e	68 65 0a 00 00	 push	 2661			; 00000a65H
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH
  00096	5b		 pop	 ebx

; 2685 : }

  00097	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009a	33 cd		 xor	 ecx, ebp
  0009c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
$LN1@FriendMemo@3:

; 2662 : 		return;
; 2663 : 	}
; 2664 : 
; 2665 : 	int memoindex;
; 2666 : 	char subject[33]="";
; 2667 : 	char date[31]="";
; 2668 : 
; 2669 : 	memoindex = lpMsg->MemoIndex;

  000a5	0f b7 4b 06	 movzx	 ecx, WORD PTR [ebx+6]
  000a9	33 c0		 xor	 eax, eax
  000ab	56		 push	 esi
  000ac	57		 push	 edi
  000ad	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _memoindex$[ebp], ecx
  000b3	89 45 b9	 mov	 DWORD PTR _subject$[ebp+1], eax
  000b6	89 45 bd	 mov	 DWORD PTR _subject$[ebp+5], eax
  000b9	89 45 c1	 mov	 DWORD PTR _subject$[ebp+9], eax
  000bc	89 45 c5	 mov	 DWORD PTR _subject$[ebp+13], eax
  000bf	89 45 c9	 mov	 DWORD PTR _subject$[ebp+17], eax
  000c2	89 45 cd	 mov	 DWORD PTR _subject$[ebp+21], eax
  000c5	89 45 d1	 mov	 DWORD PTR _subject$[ebp+25], eax
  000c8	89 45 d5	 mov	 DWORD PTR _subject$[ebp+29], eax
  000cb	89 45 dd	 mov	 DWORD PTR _date$[ebp+1], eax
  000ce	89 45 e1	 mov	 DWORD PTR _date$[ebp+5], eax
  000d1	89 45 e5	 mov	 DWORD PTR _date$[ebp+9], eax
  000d4	89 45 e9	 mov	 DWORD PTR _date$[ebp+13], eax
  000d7	89 45 ed	 mov	 DWORD PTR _date$[ebp+17], eax
  000da	89 45 f1	 mov	 DWORD PTR _date$[ebp+21], eax
  000dd	89 45 f5	 mov	 DWORD PTR _date$[ebp+25], eax
  000e0	66 89 45 f9	 mov	 WORD PTR _date$[ebp+29], ax

; 2670 : 	memcpy(subject, lpMsg->Subject, sizeof(lpMsg->Subject));

  000e4	b9 08 00 00 00	 mov	 ecx, 8
  000e9	8d 73 3a	 lea	 esi, DWORD PTR [ebx+58]
  000ec	8d 7d b8	 lea	 edi, DWORD PTR _subject$[ebp]
  000ef	f3 a5		 rep movsd

; 2671 : 	memcpy(date, lpMsg->Date, sizeof(lpMsg->Date));
; 2672 : 
; 2673 : 	PMSG_FRIEND_MEMO_LIST pMsg;
; 2674 : 
; 2675 : 	pMsg.h.setE((LPBYTE)&pMsg, 0xC6, sizeof(pMsg));
; 2676 : 	memcpy(pMsg.Date, lpMsg->Date, sizeof(pMsg.Date));
; 2677 : 	memcpy(pMsg.Name, lpMsg->SendName, sizeof(pMsg.Name));

  000f1	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000f4	b9 07 00 00 00	 mov	 ecx, 7
  000f9	8d 73 1c	 lea	 esi, DWORD PTR [ebx+28]
  000fc	8d 7d dc	 lea	 edi, DWORD PTR _date$[ebp]
  000ff	f3 a5		 rep movsd

; 2678 : 	memcpy(pMsg.Subject, lpMsg->Subject, sizeof(pMsg.Subject));
; 2679 : 	pMsg.Number = memoindex;

  00101	66 8b 85 30 ff
	ff ff		 mov	 ax, WORD PTR _memoindex$[ebp]
  00108	66 a5		 movsw
  0010a	66 c7 85 34 ff
	ff ff c3 6c	 mov	 WORD PTR _pMsg$[ebp], 27843 ; 00006cc3H
  00113	c6 85 36 ff ff
	ff c6		 mov	 BYTE PTR _pMsg$[ebp+2], 198 ; 000000c6H
  0011a	b9 07 00 00 00	 mov	 ecx, 7
  0011f	8d 73 1c	 lea	 esi, DWORD PTR [ebx+28]
  00122	8d bd 44 ff ff
	ff		 lea	 edi, DWORD PTR _pMsg$[ebp+16]
  00128	f3 a5		 rep movsd
  0012a	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  0012d	66 a5		 movsw
  0012f	89 95 3a ff ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+6], edx
  00135	66 8b 53 10	 mov	 dx, WORD PTR [ebx+16]
  00139	89 8d 3e ff ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+10], ecx
  0013f	66 89 95 42 ff
	ff ff		 mov	 WORD PTR _pMsg$[ebp+14], dx
  00146	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0014b	8d 73 3a	 lea	 esi, DWORD PTR [ebx+58]
  0014e	8d bd 62 ff ff
	ff		 lea	 edi, DWORD PTR _pMsg$[ebp+46]
  00154	f3 a5		 rep movsd

; 2680 : 	pMsg.read = lpMsg->read;

  00156	8a 4b 5a	 mov	 cl, BYTE PTR [ebx+90]
  00159	66 89 85 38 ff
	ff ff		 mov	 WORD PTR _pMsg$[ebp+4], ax

; 2681 : 
; 2682 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  00160	0f b7 43 04	 movzx	 eax, WORD PTR [ebx+4]
  00164	6a 6c		 push	 108			; 0000006cH
  00166	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _pMsg$[ebp]
  0016c	52		 push	 edx
  0016d	50		 push	 eax
  0016e	88 4d 9e	 mov	 BYTE PTR _pMsg$[ebp+106], cl
  00171	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2683 : 	
; 2684 : 	LogAdd("[%s] Friend Mail list : (%d:%10s:%s:%s)", SendName.GetBuffer(), memoindex, date, RecvName.GetBuffer(), subject);

  00176	8d 4d b8	 lea	 ecx, DWORD PTR _subject$[ebp]
  00179	51		 push	 ecx
  0017a	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _memoindex$[ebp]
  00180	8d 55 ac	 lea	 edx, DWORD PTR _RecvName$[ebp]
  00183	52		 push	 edx
  00184	8d 45 dc	 lea	 eax, DWORD PTR _date$[ebp]
  00187	50		 push	 eax
  00188	51		 push	 ecx
  00189	8d 55 a0	 lea	 edx, DWORD PTR _SendName$[ebp]
  0018c	52		 push	 edx
  0018d	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@INBOEHDN@?$FL?$CFs?$FN?5Friend?5Mail?5list?5?3?5?$CI?$CFd?3?$CF10s@
  00192	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2685 : }

  00198	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019b	83 c4 24	 add	 esp, 36			; 00000024H
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	33 cd		 xor	 ecx, ebp
  001a2	5b		 pop	 ebx
  001a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c3		 ret	 0
?FriendMemoList@@YAXPAUFHP_FRIEND_MEMO_LIST@@@Z ENDP	; FriendMemoList
_TEXT	ENDS
PUBLIC	??_C@_0BP@DKLEPGIB@?$FL?$CFs?$FN?5Friend?5Mail?5read?5Index?3?$CFd?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoReadReq@@YAXPAUPMSG_FRIEND_READ_MEMO_REQ@@H@Z ; FriendMemoReadReq
;	COMDAT ??_C@_0BP@DKLEPGIB@?$FL?$CFs?$FN?5Friend?5Mail?5read?5Index?3?$CFd?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0BP@DKLEPGIB@?$FL?$CFs?$FN?5Friend?5Mail?5read?5Index?3?$CFd?$AA@ DB '['
	DB	'%s] Friend Mail read Index:%d', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoReadReq@@YAXPAUPMSG_FRIEND_READ_MEMO_REQ@@H@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendMemoReadReq@@YAXPAUPMSG_FRIEND_READ_MEMO_REQ@@H@Z PROC ; FriendMemoReadReq, COMDAT

; 2696 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 2697 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	75 28		 jne	 SHORT $LN1@FriendMemo@4

; 2698 : 	{
; 2699 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00025	68 8b 0a 00 00	 push	 2699			; 00000a8bH
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2711 : 
; 2712 : 	LogAdd("[%s] Friend Mail read Index:%d", gObj[aIndex].Name, lpMsg->MemoIndex);

  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi

; 2713 : 
; 2714 : }

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN1@FriendMemo@4:

; 2700 : 		return;
; 2701 : 	}
; 2702 : 
; 2703 : 	FHP_FRIEND_MEMO_RECV_REQ pMsg;
; 2704 : 
; 2705 : 	pMsg.h.set((LPBYTE)&pMsg, 0x72, sizeof(pMsg));
; 2706 : 	pMsg.MemoIndex = lpMsg->MemoIndex;

  0004d	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]

; 2707 : 	pMsg.Number = aIndex;

  00051	66 89 75 ec	 mov	 WORD PTR _pMsg$[ebp+4], si

; 2708 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00055	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0005b	66 89 45 ee	 mov	 WORD PTR _pMsg$[ebp+6], ax
  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00064	66 c7 45 e8 c1
	12		 mov	 WORD PTR _pMsg$[ebp], 4801 ; 000012c1H
  0006a	c6 45 ea 72	 mov	 BYTE PTR _pMsg$[ebp+2], 114 ; 00000072H
  0006e	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  00072	89 4d f0	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  00075	8b 54 06 7b	 mov	 edx, DWORD PTR [esi+eax+123]
  00079	89 55 f4	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  0007c	0f b7 44 06 7f	 movzx	 eax, WORD PTR [esi+eax+127]

; 2709 : 
; 2710 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00081	6a 12		 push	 18			; 00000012H
  00083	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00086	51		 push	 ecx
  00087	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0008c	66 89 45 f8	 mov	 WORD PTR _pMsg$[ebp+16], ax
  00090	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2711 : 
; 2712 : 	LogAdd("[%s] Friend Mail read Index:%d", gObj[aIndex].Name, lpMsg->MemoIndex);

  00095	0f b7 57 04	 movzx	 edx, WORD PTR [edi+4]
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009e	52		 push	 edx
  0009f	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000a3	51		 push	 ecx
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@DKLEPGIB@?$FL?$CFs?$FN?5Friend?5Mail?5read?5Index?3?$CFd?$AA@
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2713 : 
; 2714 : }

  000af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b5	5f		 pop	 edi
  000b6	33 cd		 xor	 ecx, ebp
  000b8	5e		 pop	 esi
  000b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
?FriendMemoReadReq@@YAXPAUPMSG_FRIEND_READ_MEMO_REQ@@H@Z ENDP ; FriendMemoReadReq
_TEXT	ENDS
PUBLIC	?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ	; _GUILD_INFO_STRUCT::SetTimeStamp
; Function compile flags: /Ogtp
;	COMDAT ?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ
_TEXT	SEGMENT
?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ PROC		; _GUILD_INFO_STRUCT::SetTimeStamp, COMDAT
; _this$ = ecx

; 2731 : 	this->iTimeStamp++;

  00000	ff 81 24 07 00
	00		 inc	 DWORD PTR [ecx+1828]

; 2732 : };

  00006	c3		 ret	 0
?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ ENDP		; _GUILD_INFO_STRUCT::SetTimeStamp
_TEXT	ENDS
PUBLIC	??_C@_0BL@NKLNIHDF@?$FL?$CFs?$FN?5Friend?5Mail?5read?5?$CI?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0CB@LDOIFNPP@error?9L2?5?3?5Friend?5Memo?5Max?5?$CFs?5?$CFd@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoRead@@YAXPAUFHP_FRIEND_MEMO_RECV@@@Z	; FriendMemoRead
;	COMDAT ??_C@_0BL@NKLNIHDF@?$FL?$CFs?$FN?5Friend?5Mail?5read?5?$CI?$CFd?$CJ?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0BL@NKLNIHDF@?$FL?$CFs?$FN?5Friend?5Mail?5read?5?$CI?$CFd?$CJ?$AA@ DB '['
	DB	'%s] Friend Mail read (%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LDOIFNPP@error?9L2?5?3?5Friend?5Memo?5Max?5?$CFs?5?$CFd@
CONST	SEGMENT
??_C@_0CB@LDOIFNPP@error?9L2?5?3?5Friend?5Memo?5Max?5?$CFs?5?$CFd@ DB 'er'
	DB	'ror-L2 : Friend Memo Max %s %d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoRead@@YAXPAUFHP_FRIEND_MEMO_RECV@@@Z
_TEXT	SEGMENT
_pMsg$ = -1044						; size = 1028
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendMemoRead@@YAXPAUFHP_FRIEND_MEMO_RECV@@@Z PROC	; FriendMemoRead, COMDAT

; 2746 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 04 00
	00		 sub	 esp, 1044		; 00000414H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2747 : 	char_ID Name(lpMsg->Name);

  00017	33 c0		 xor	 eax, eax
  00019	8d 4e 06	 lea	 ecx, DWORD PTR [esi+6]
  0001c	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001f	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  00022	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00026	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00029	85 c9		 test	 ecx, ecx
  0002b	74 13		 je	 SHORT $LN5@FriendMemo@5
  0002d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00035	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00039	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  0003c	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN5@FriendMemo@5:

; 2748 : 
; 2749 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  00040	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00044	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00047	51		 push	 ecx
  00048	52		 push	 edx
  00049	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004e	83 c4 08	 add	 esp, 8
  00051	85 c0		 test	 eax, eax
  00053	75 27		 jne	 SHORT $LN2@FriendMemo@5

; 2750 : 	{
; 2751 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00055	68 bf 0a 00 00	 push	 2751			; 00000abfH
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	5e		 pop	 esi

; 2778 : }

  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN2@FriendMemo@5:
  0007c	57		 push	 edi

; 2752 : 		return;
; 2753 : 	}
; 2754 : 
; 2755 : 	PMSG_FRIEND_READ_MEMO pMsg;
; 2756 : 
; 2757 : 	int nsize = sizeof(pMsg)-1000;
; 2758 : 
; 2759 : 	if ( lpMsg->MemoSize > 1000 )

  0007d	0f b7 7e 12	 movzx	 edi, WORD PTR [esi+18]
  00081	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00086	66 3b f8	 cmp	 di, ax
  00089	7e 28		 jle	 SHORT $LN1@FriendMemo@5

; 2760 : 	{
; 2761 : 		LogAddTD("error-L2 : Friend Memo Max %s %d", __FILE__, __LINE__);

  0008b	68 c9 0a 00 00	 push	 2761			; 00000ac9H
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LDOIFNPP@error?9L2?5?3?5Friend?5Memo?5Max?5?$CFs?5?$CFd@
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi

; 2778 : }

  000a5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a8	33 cd		 xor	 ecx, ebp
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN1@FriendMemo@5:

; 2762 : 		return;
; 2763 : 	}
; 2764 : 
; 2765 : 	nsize += lpMsg->MemoSize;

  000b3	0f b7 46 12	 movzx	 eax, WORD PTR [esi+18]

; 2766 : 
; 2767 : 	pMsg.h.setE((LPBYTE)&pMsg, 0xC7, nsize);
; 2768 : 	pMsg.MemoIndex = lpMsg->MemoIndex;

  000b7	66 8b 56 10	 mov	 dx, WORD PTR [esi+16]
  000bb	53		 push	 ebx
  000bc	0f bf d8	 movsx	 ebx, ax
  000bf	83 c3 1c	 add	 ebx, 28			; 0000001cH
  000c2	8b cb		 mov	 ecx, ebx
  000c4	c1 e9 08	 shr	 ecx, 8
  000c7	88 8d ed fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+1], cl

; 2769 : 	pMsg.MemoSize = lpMsg->MemoSize;
; 2770 : 	pMsg.Dir = lpMsg->Dir;
; 2771 : 	pMsg.Action = lpMsg->Action;

  000cd	8a 4e 27	 mov	 cl, BYTE PTR [esi+39]
  000d0	66 89 85 f2 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+6], ax
  000d7	8a 46 26	 mov	 al, BYTE PTR [esi+38]
  000da	66 89 95 f0 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+4], dx

; 2772 : 	memcpy(pMsg.Photo, lpMsg->Photo,sizeof(pMsg.Photo));

  000e1	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  000e4	88 8d 07 fc ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+27], cl
  000ea	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  000ed	88 85 06 fc ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+26], al
  000f3	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  000f6	89 95 f4 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+8], edx
  000fc	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  000ff	89 8d fc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+16], ecx

; 2773 : 	memcpy(pMsg.Memo, lpMsg->Memo, lpMsg->MemoSize);

  00105	0f bf cf	 movsx	 ecx, di
  00108	89 85 f8 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+12], eax
  0010e	66 8b 46 24	 mov	 ax, WORD PTR [esi+36]
  00112	89 95 00 fc ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+20], edx
  00118	51		 push	 ecx
  00119	8d 56 28	 lea	 edx, DWORD PTR [esi+40]
  0011c	66 89 85 04 fc
	ff ff		 mov	 WORD PTR _pMsg$[ebp+24], ax
  00123	52		 push	 edx
  00124	8d 85 08 fc ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp+28]
  0012a	50		 push	 eax
  0012b	c6 85 ec fb ff
	ff c4		 mov	 BYTE PTR _pMsg$[ebp], 196 ; 000000c4H
  00132	88 9d ee fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+2], bl
  00138	c6 85 ef fb ff
	ff c7		 mov	 BYTE PTR _pMsg$[ebp+3], 199 ; 000000c7H
  0013f	e8 00 00 00 00	 call	 _memcpy

; 2774 : 
; 2775 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, nsize);

  00144	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00148	53		 push	 ebx
  00149	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0014f	51		 push	 ecx
  00150	52		 push	 edx
  00151	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2776 : 
; 2777 : 	LogAdd("[%s] Friend Mail read (%d)", gObj[lpMsg->Number].Name, lpMsg->MemoIndex);

  00156	0f bf 4e 04	 movsx	 ecx, WORD PTR [esi+4]
  0015a	0f b7 46 10	 movzx	 eax, WORD PTR [esi+16]
  0015e	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00164	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0016a	50		 push	 eax
  0016b	8d 44 11 77	 lea	 eax, DWORD PTR [ecx+edx+119]
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NKLNIHDF@?$FL?$CFs?$FN?5Friend?5Mail?5read?5?$CI?$CFd?$CJ?$AA@
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2778 : }

  0017b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017e	83 c4 24	 add	 esp, 36			; 00000024H
  00181	5b		 pop	 ebx
  00182	5f		 pop	 edi
  00183	33 cd		 xor	 ecx, ebp
  00185	5e		 pop	 esi
  00186	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c3		 ret	 0
?FriendMemoRead@@YAXPAUFHP_FRIEND_MEMO_RECV@@@Z ENDP	; FriendMemoRead
_TEXT	ENDS
PUBLIC	??_C@_0CL@CONIHEEP@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoDelReq@@YAXPAUPMSG_FRIEND_MEMO_DEL_REQ@@H@Z ; FriendMemoDelReq
;	COMDAT ??_C@_0CL@CONIHEEP@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CL@CONIHEEP@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@ DB '[%'
	DB	's] Friend mail delete request Index:(%d)', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoDelReq@@YAXPAUPMSG_FRIEND_MEMO_DEL_REQ@@H@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendMemoDelReq@@YAXPAUPMSG_FRIEND_MEMO_DEL_REQ@@H@Z PROC ; FriendMemoDelReq, COMDAT

; 2789 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 2790 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	75 28		 jne	 SHORT $LN1@FriendMemo@6

; 2791 : 	{
; 2792 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00025	68 e8 0a 00 00	 push	 2792			; 00000ae8H
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2804 : 
; 2805 : 	LogAdd("[%s] Friend mail delete request Index:(%d)", gObj[aIndex].Name, lpMsg->MemoIndex);

  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi

; 2806 : }

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN1@FriendMemo@6:

; 2793 : 		return;
; 2794 : 	}
; 2795 : 
; 2796 : 	FHP_FRIEND_MEMO_DEL_REQ pMsg;
; 2797 : 
; 2798 : 	pMsg.h.set((LPBYTE)&pMsg, 0x73, sizeof(pMsg));
; 2799 : 	pMsg.MemoIndex = lpMsg->MemoIndex;

  0004d	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]

; 2800 : 	pMsg.Number = aIndex;

  00051	66 89 75 ec	 mov	 WORD PTR _pMsg$[ebp+4], si

; 2801 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00055	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0005b	66 89 45 ee	 mov	 WORD PTR _pMsg$[ebp+6], ax
  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00064	66 c7 45 e8 c1
	12		 mov	 WORD PTR _pMsg$[ebp], 4801 ; 000012c1H
  0006a	c6 45 ea 73	 mov	 BYTE PTR _pMsg$[ebp+2], 115 ; 00000073H
  0006e	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  00072	89 4d f0	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  00075	8b 54 06 7b	 mov	 edx, DWORD PTR [esi+eax+123]
  00079	89 55 f4	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  0007c	0f b7 44 06 7f	 movzx	 eax, WORD PTR [esi+eax+127]

; 2802 : 
; 2803 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  00081	6a 12		 push	 18			; 00000012H
  00083	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00086	51		 push	 ecx
  00087	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0008c	66 89 45 f8	 mov	 WORD PTR _pMsg$[ebp+16], ax
  00090	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2804 : 
; 2805 : 	LogAdd("[%s] Friend mail delete request Index:(%d)", gObj[aIndex].Name, lpMsg->MemoIndex);

  00095	0f b7 57 04	 movzx	 edx, WORD PTR [edi+4]
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009e	52		 push	 edx
  0009f	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000a3	51		 push	 ecx
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@CONIHEEP@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2806 : }

  000af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b5	5f		 pop	 edi
  000b6	33 cd		 xor	 ecx, ebp
  000b8	5e		 pop	 esi
  000b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
?FriendMemoDelReq@@YAXPAUPMSG_FRIEND_MEMO_DEL_REQ@@H@Z ENDP ; FriendMemoDelReq
_TEXT	ENDS
PUBLIC	??_C@_0DA@BCDIIKMO@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoDelResult@@YAXPAUFHP_FRIEND_MEMO_DEL_RESULT@@@Z ; FriendMemoDelResult
;	COMDAT ??_C@_0DA@BCDIIKMO@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0DA@BCDIIKMO@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@ DB '[%'
	DB	's] Friend mail delete request (%d) index:(%d)', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoDelResult@@YAXPAUFHP_FRIEND_MEMO_DEL_RESULT@@@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 6
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendMemoDelResult@@YAXPAUFHP_FRIEND_MEMO_DEL_RESULT@@@Z PROC ; FriendMemoDelResult, COMDAT

; 2816 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2817 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@FriendMemo@7
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@FriendMemo@7:

; 2818 : 
; 2819 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 06	 movsx	 edx, WORD PTR [esi+6]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 27		 jne	 SHORT $LN1@FriendMemo@7

; 2820 : 	{
; 2821 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00052	68 05 0b 00 00	 push	 2821			; 00000b05H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	5e		 pop	 esi

; 2834 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN1@FriendMemo@7:

; 2822 : 		return;
; 2823 : 	}
; 2824 : 
; 2825 : 	PMSG_FRIEND_MEMO_DEL_RESULT pMsg;
; 2826 : 
; 2827 : 	pMsg.h.set((LPBYTE)&pMsg, 0xC8, sizeof(pMsg));
; 2828 : 	pMsg.MemoIndex = lpMsg->MemoIndex;

  00079	66 8b 46 04	 mov	 ax, WORD PTR [esi+4]

; 2829 : 	pMsg.Result = lpMsg->Result;

  0007d	8a 4e 03	 mov	 cl, BYTE PTR [esi+3]
  00080	66 89 45 ec	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 2830 : 
; 2831 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  00084	0f bf 46 06	 movsx	 eax, WORD PTR [esi+6]
  00088	6a 06		 push	 6
  0008a	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0008d	52		 push	 edx
  0008e	50		 push	 eax
  0008f	66 c7 45 e8 c1
	06		 mov	 WORD PTR _pMsg$[ebp], 1729 ; 000006c1H
  00095	c6 45 ea c8	 mov	 BYTE PTR _pMsg$[ebp+2], 200 ; 000000c8H
  00099	88 4d eb	 mov	 BYTE PTR _pMsg$[ebp+3], cl
  0009c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2832 : 
; 2833 : 	LogAdd("[%s] Friend mail delete request (%d) index:(%d)", Name.GetBuffer(), lpMsg->Result, lpMsg->MemoIndex);

  000a1	0f b7 4e 04	 movzx	 ecx, WORD PTR [esi+4]
  000a5	0f b6 56 03	 movzx	 edx, BYTE PTR [esi+3]
  000a9	51		 push	 ecx
  000aa	52		 push	 edx
  000ab	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  000ae	50		 push	 eax
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@BCDIIKMO@?$FL?$CFs?$FN?5Friend?5mail?5delete?5request?5@
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2834 : }

  000ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bd	83 c4 1c	 add	 esp, 28			; 0000001cH
  000c0	33 cd		 xor	 ecx, ebp
  000c2	5e		 pop	 esi
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?FriendMemoDelResult@@YAXPAUFHP_FRIEND_MEMO_DEL_RESULT@@@Z ENDP ; FriendMemoDelResult
_TEXT	ENDS
PUBLIC	??_C@_0DD@OCMMINHH@?$FL?$CFs?$FN?5Friend?5Invistation?5request?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendRoomInvitationReq@@YAXPAUPMSG_ROOM_INVITATION@@H@Z ; FriendRoomInvitationReq
;	COMDAT ??_C@_0DD@OCMMINHH@?$FL?$CFs?$FN?5Friend?5Invistation?5request?5@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0DD@OCMMINHH@?$FL?$CFs?$FN?5Friend?5Invistation?5request?5@ DB '[%s'
	DB	'] Friend Invistation request room:%d winguid:%d', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendRoomInvitationReq@@YAXPAUPMSG_ROOM_INVITATION@@H@Z
_TEXT	SEGMENT
_pMsg$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendRoomInvitationReq@@YAXPAUPMSG_ROOM_INVITATION@@H@Z PROC ; FriendRoomInvitationReq, COMDAT

; 2847 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 2848 : 	if ( !gObjIsConnectedGP(aIndex))

  00018	57		 push	 edi
  00019	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	75 28		 jne	 SHORT $LN1@FriendRoom

; 2849 : 	{
; 2850 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00025	68 22 0b 00 00	 push	 2850			; 00000b22H
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi

; 2866 : }

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN1@FriendRoom:

; 2851 : 		return;
; 2852 : 	}
; 2853 : 
; 2854 : 	FHP_FRIEND_INVITATION_REQ pMsg;
; 2855 : 
; 2856 : 	pMsg.h.set((LPBYTE)&pMsg, 0x74, sizeof(pMsg));
; 2857 : 	pMsg.Number = aIndex;
; 2858 : 	pMsg.RoomNumber = lpMsg->RoomNumber;

  0004d	66 8b 46 0e	 mov	 ax, WORD PTR [esi+14]

; 2859 : 	pMsg.WindowGuid = lpMsg->WindowGuid;

  00051	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 2860 : 	memcpy(pMsg.FriendName, lpMsg->Name, sizeof(pMsg.FriendName));

  00054	8b 56 03	 mov	 edx, DWORD PTR [esi+3]
  00057	66 89 7d e0	 mov	 WORD PTR _pMsg$[ebp+4], di

; 2861 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  0005b	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00061	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+26], ax
  00065	8b 46 07	 mov	 eax, DWORD PTR [esi+7]
  00068	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+28], ecx
  0006b	66 8b 4e 0b	 mov	 cx, WORD PTR [esi+11]
  0006f	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+20], eax
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00077	66 89 4d f4	 mov	 WORD PTR _pMsg$[ebp+24], cx
  0007b	66 c7 45 dc c1
	20		 mov	 WORD PTR _pMsg$[ebp], 8385 ; 000020c1H
  00081	c6 45 de 74	 mov	 BYTE PTR _pMsg$[ebp+2], 116 ; 00000074H
  00085	89 55 ec	 mov	 DWORD PTR _pMsg$[ebp+16], edx
  00088	8b 54 07 77	 mov	 edx, DWORD PTR [edi+eax+119]
  0008c	89 55 e2	 mov	 DWORD PTR _pMsg$[ebp+6], edx
  0008f	8b 4c 07 7b	 mov	 ecx, DWORD PTR [edi+eax+123]
  00093	89 4d e6	 mov	 DWORD PTR _pMsg$[ebp+10], ecx
  00096	66 8b 54 07 7f	 mov	 dx, WORD PTR [edi+eax+127]

; 2862 : 
; 2863 : 	wsZtDbCli.DataSend((char*)&pMsg, pMsg.h.size);

  0009b	6a 20		 push	 32			; 00000020H
  0009d	8d 45 dc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  000a0	50		 push	 eax
  000a1	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  000a6	66 89 55 ea	 mov	 WORD PTR _pMsg$[ebp+14], dx
  000aa	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2864 : 
; 2865 : 	LogAdd("[%s] Friend Invistation request room:%d winguid:%d", gObj[aIndex].Name, lpMsg->RoomNumber, lpMsg->WindowGuid);

  000af	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000b2	0f b7 56 0e	 movzx	 edx, WORD PTR [esi+14]
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000bb	51		 push	 ecx
  000bc	52		 push	 edx
  000bd	8d 4c 07 77	 lea	 ecx, DWORD PTR [edi+eax+119]
  000c1	51		 push	 ecx
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@OCMMINHH@?$FL?$CFs?$FN?5Friend?5Invistation?5request?5@
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2866 : }

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	83 c4 10	 add	 esp, 16			; 00000010H
  000d3	5f		 pop	 edi
  000d4	33 cd		 xor	 ecx, ebp
  000d6	5e		 pop	 esi
  000d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
?FriendRoomInvitationReq@@YAXPAUPMSG_ROOM_INVITATION@@H@Z ENDP ; FriendRoomInvitationReq
_TEXT	ENDS
PUBLIC	??_C@_0CC@LIINHIPA@?$FL?$CFs?$FN?5Friend?5Invitation?5result?5?3?$CF@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendRoomInvitationRecv@@YAXPAUFHP_FRIEND_INVITATION_RET@@@Z ; FriendRoomInvitationRecv
;	COMDAT ??_C@_0CC@LIINHIPA@?$FL?$CFs?$FN?5Friend?5Invitation?5result?5?3?$CF@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CC@LIINHIPA@?$FL?$CFs?$FN?5Friend?5Invitation?5result?5?3?$CF@ DB '['
	DB	'%s] Friend Invitation result :%d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendRoomInvitationRecv@@YAXPAUFHP_FRIEND_INVITATION_RET@@@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 8
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?FriendRoomInvitationRecv@@YAXPAUFHP_FRIEND_INVITATION_RET@@@Z PROC ; FriendRoomInvitationRecv, COMDAT

; 2876 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 2877 : 	char_ID Name(lpMsg->Name);

  00014	33 c0		 xor	 eax, eax
  00016	8d 4e 06	 lea	 ecx, DWORD PTR [esi+6]
  00019	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0001c	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0001f	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00023	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00026	85 c9		 test	 ecx, ecx
  00028	74 13		 je	 SHORT $LN4@FriendRoom@2
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002f	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00032	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00036	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00039	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN4@FriendRoom@2:

; 2878 : 
; 2879 : 	if ( !gObjIsConnectedGP(lpMsg->Number, Name.GetBuffer()))

  0003d	0f bf 56 04	 movsx	 edx, WORD PTR [esi+4]
  00041	8d 4d f0	 lea	 ecx, DWORD PTR _Name$[ebp]
  00044	51		 push	 ecx
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHHPAD@Z ; gObjIsConnectedGP
  0004b	83 c4 08	 add	 esp, 8
  0004e	85 c0		 test	 eax, eax
  00050	75 27		 jne	 SHORT $LN1@FriendRoom@2

; 2880 : 	{
; 2881 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00052	68 41 0b 00 00	 push	 2881			; 00000b41H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	5e		 pop	 esi

; 2894 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN1@FriendRoom@2:

; 2882 : 		return;
; 2883 : 	}
; 2884 : 
; 2885 : 	PMSG_ROOM_INVITATION_RESULT pMsg;
; 2886 : 
; 2887 : 	pMsg.h.set((LPBYTE)&pMsg, 0xCB, sizeof(pMsg));
; 2888 : 	pMsg.Result = lpMsg->Result;

  00079	8a 46 03	 mov	 al, BYTE PTR [esi+3]

; 2889 : 	pMsg.WindowGuid = lpMsg->WindowGuid;

  0007c	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0007f	88 45 eb	 mov	 BYTE PTR _pMsg$[ebp+3], al

; 2890 : 
; 2891 : 	DataSend(lpMsg->Number, (LPBYTE)&pMsg, sizeof(pMsg));

  00082	0f bf 46 04	 movsx	 eax, WORD PTR [esi+4]
  00086	6a 08		 push	 8
  00088	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0008b	52		 push	 edx
  0008c	50		 push	 eax
  0008d	66 c7 45 e8 c1
	08		 mov	 WORD PTR _pMsg$[ebp], 2241 ; 000008c1H
  00093	c6 45 ea cb	 mov	 BYTE PTR _pMsg$[ebp+2], 203 ; 000000cbH
  00097	89 4d ec	 mov	 DWORD PTR _pMsg$[ebp+4], ecx
  0009a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2892 : 
; 2893 : 	LogAdd("[%s] Friend Invitation result :%d", Name.GetBuffer(), pMsg.Result);

  0009f	0f b6 4d eb	 movzx	 ecx, BYTE PTR _pMsg$[ebp+3]
  000a3	51		 push	 ecx
  000a4	8d 55 f0	 lea	 edx, DWORD PTR _Name$[ebp]
  000a7	52		 push	 edx
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LIINHIPA@?$FL?$CFs?$FN?5Friend?5Invitation?5result?5?3?$CF@
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 2894 : }

  000b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	83 c4 18	 add	 esp, 24			; 00000018H
  000b9	33 cd		 xor	 ecx, ebp
  000bb	5e		 pop	 esi
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
?FriendRoomInvitationRecv@@YAXPAUFHP_FRIEND_INVITATION_RET@@@Z ENDP ; FriendRoomInvitationRecv
_TEXT	ENDS
PUBLIC	??_C@_0FG@CCGCMLDE@?$FLU?4System?$FN?$FLUnion?$FN?$FLAuto?5BreakOff?$FN@ ; `string'
PUBLIC	_lpMsg$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?DGRelationShipNotificationRecv@@YAXPAUEXSDHP_NOTIFICATION_RELATIONSHIP@@@Z ; DGRelationShipNotificationRecv
;	COMDAT ??_C@_0FG@CCGCMLDE@?$FLU?4System?$FN?$FLUnion?$FN?$FLAuto?5BreakOff?$FN@
CONST	SEGMENT
??_C@_0FG@CCGCMLDE@?$FLU?4System?$FN?$FLUnion?$FN?$FLAuto?5BreakOff?$FN@ DB '['
	DB	'U.System][Union][Auto BreakOff] ( Union Master Guild: %s ), ('
	DB	'Union Member Guild: %s)', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGRelationShipNotificationRecv@@YAXPAUEXSDHP_NOTIFICATION_RELATIONSHIP@@@Z
_TEXT	SEGMENT
_lpMsg$GSCopy$ = -280					; size = 4
__Notice$214701 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGRelationShipNotificationRecv@@YAXPAUEXSDHP_NOTIFICATION_RELATIONSHIP@@@Z PROC ; DGRelationShipNotificationRecv, COMDAT

; 1672 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 1673 : 	if ( lpMsg->btUpdateFlag == G_NOTIFICATION_UNION_BREAKOFF )

  00019	80 7f 05 10	 cmp	 BYTE PTR [edi+5], 16	; 00000010H

; 1683 : 
; 1684 : 			for ( int n=0;n<MAX_USER_GUILD;n++)

  0001d	89 bd e8 fe ff
	ff		 mov	 DWORD PTR _lpMsg$GSCopy$[ebp], edi
  00023	0f 85 9a 00 00
	00		 jne	 $LN18@DGRelation@2

; 1674 : 	{
; 1675 : 		_GUILD_INFO_STRUCT * lpGuildInfo = Guild.SearchGuild_Number(lpMsg->iGuildList[0]);

  00029	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0002c	50		 push	 eax
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00032	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  00037	8b d8		 mov	 ebx, eax

; 1676 : 
; 1677 : 		if ( lpGuildInfo )

  00039	85 db		 test	 ebx, ebx
  0003b	0f 84 82 00 00
	00		 je	 $LN18@DGRelation@2

; 1678 : 		{
; 1679 : 			lpGuildInfo->iGuildUnion = 0;
; 1680 : 			lpGuildInfo->SetTimeStamp();

  00041	8b cb		 mov	 ecx, ebx
  00043	c7 83 1c 07 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+1820], 0
  0004d	e8 00 00 00 00	 call	 ?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ ; _GUILD_INFO_STRUCT::SetTimeStamp

; 1681 : 
; 1682 : 			LogAddTD("[U.System][Union][Auto BreakOff] ( Union Master Guild: %s ), (Union Member Guild: %s)", lpGuildInfo->Name, lpGuildInfo->Name);

  00052	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00055	50		 push	 eax
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@CCGCMLDE@?$FLU?4System?$FN?$FLUnion?$FN?$FLAuto?5BreakOff?$FN@
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1683 : 
; 1684 : 			for ( int n=0;n<MAX_USER_GUILD;n++)

  00065	33 ff		 xor	 edi, edi
  00067	8d b3 a0 03 00
	00		 lea	 esi, DWORD PTR [ebx+928]
  0006d	8d 49 00	 npad	 3
$LL9@DGRelation@2:

; 1685 : 			{
; 1686 : 				if ( lpGuildInfo->Use[n] > 0 )

  00070	80 bc 3b 40 04
	00 00 00	 cmp	 BYTE PTR [ebx+edi+1088], 0
  00078	76 3a		 jbe	 SHORT $LN8@DGRelation@2

; 1687 : 				{
; 1688 : 					if ( lpGuildInfo->Index[n] >= 0 )

  0007a	66 83 3e 00	 cmp	 WORD PTR [esi], 0
  0007e	7c 34		 jl	 SHORT $LN8@DGRelation@2

; 1689 : 					{
; 1690 : 						TNotice _Notice(G_NOTIFICATION_SET);

  00080	6a 01		 push	 1
  00082	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214701[ebp]
  00088	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1691 : 						_Notice.SendToUser(lpGuildInfo->Index[n], lMsg.Get(MSGGET(6, 172)), lpGuildInfo->Name);

  0008d	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00090	50		 push	 eax
  00091	68 ac 06 00 00	 push	 1708			; 000006acH
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0009b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000a0	0f bf 0e	 movsx	 ecx, WORD PTR [esi]
  000a3	50		 push	 eax
  000a4	51		 push	 ecx
  000a5	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR __Notice$214701[ebp]
  000ab	52		 push	 edx
  000ac	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  000b1	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@DGRelation@2:

; 1683 : 
; 1684 : 			for ( int n=0;n<MAX_USER_GUILD;n++)

  000b4	47		 inc	 edi
  000b5	83 c6 02	 add	 esi, 2
  000b8	83 ff 50	 cmp	 edi, 80			; 00000050H
  000bb	7c b3		 jl	 SHORT $LL9@DGRelation@2
  000bd	8b bd e8 fe ff
	ff		 mov	 edi, DWORD PTR _lpMsg$GSCopy$[ebp]
$LN18@DGRelation@2:

; 1692 : 					}
; 1693 : 				}
; 1694 : 			}
; 1695 : 		}
; 1696 : 	}
; 1697 : 
; 1698 : 	for ( int i=0;i<lpMsg->btGuildListCount;i++)

  000c3	33 db		 xor	 ebx, ebx
  000c5	38 5f 06	 cmp	 BYTE PTR [edi+6], bl
  000c8	76 2a		 jbe	 SHORT $LN2@DGRelation@2
  000ca	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  000cd	8d 49 00	 npad	 3
$LL4@DGRelation@2:

; 1699 : 	{
; 1700 : 		_GUILD_INFO_STRUCT * lpGuildInfo = Guild.SearchGuild_Number(lpMsg->iGuildList[i]);

  000d0	8b 06		 mov	 eax, DWORD PTR [esi]
  000d2	50		 push	 eax
  000d3	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  000d8	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number

; 1701 : 
; 1702 : 		if ( lpGuildInfo )

  000dd	85 c0		 test	 eax, eax
  000df	74 07		 je	 SHORT $LN3@DGRelation@2

; 1703 : 		{
; 1704 : 			lpGuildInfo->SetTimeStamp();

  000e1	8b c8		 mov	 ecx, eax
  000e3	e8 00 00 00 00	 call	 ?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ ; _GUILD_INFO_STRUCT::SetTimeStamp
$LN3@DGRelation@2:

; 1692 : 					}
; 1693 : 				}
; 1694 : 			}
; 1695 : 		}
; 1696 : 	}
; 1697 : 
; 1698 : 	for ( int i=0;i<lpMsg->btGuildListCount;i++)

  000e8	0f b6 4f 06	 movzx	 ecx, BYTE PTR [edi+6]
  000ec	43		 inc	 ebx
  000ed	83 c6 04	 add	 esi, 4
  000f0	3b d9		 cmp	 ebx, ecx
  000f2	7c dc		 jl	 SHORT $LL4@DGRelation@2
$LN2@DGRelation@2:

; 1705 : 		}
; 1706 : 	}
; 1707 : }

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	33 cd		 xor	 ecx, ebp
  000fb	5b		 pop	 ebx
  000fc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c3		 ret	 0
?DGRelationShipNotificationRecv@@YAXPAUEXSDHP_NOTIFICATION_RELATIONSHIP@@@Z ENDP ; DGRelationShipNotificationRecv
_TEXT	ENDS
PUBLIC	??_C@_0CD@HIFGHJCH@?$FL?$CFs?$FN?5Friend?5mail?5send?5?$CFs?5?$CISize?3?$CF@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoSend@@YAXPAUPMSG_FRIEND_MEMO@@H@Z	; FriendMemoSend
;	COMDAT ??_C@_0CD@HIFGHJCH@?$FL?$CFs?$FN?5Friend?5mail?5send?5?$CFs?5?$CISize?3?$CF@
; File e:\work\tranet_version\gs\common\winutil.h
CONST	SEGMENT
??_C@_0CD@HIFGHJCH@?$FL?$CFs?$FN?5Friend?5mail?5send?5?$CFs?5?$CISize?3?$CF@ DB '['
	DB	'%s] Friend mail send %s (Size:%d)', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?FriendMemoSend@@YAXPAUPMSG_FRIEND_MEMO@@H@Z
_TEXT	SEGMENT
tv292 = -1136						; size = 4
_pResult$215199 = -1132					; size = 24
_pResult$215196 = -1132					; size = 24
tv330 = -1108						; size = 4
_bsize$ = -1108						; size = 4
_pMsg$ = -1104						; size = 1088
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendMemoSend@@YAXPAUPMSG_FRIEND_MEMO@@H@Z PROC	; FriendMemoSend, COMDAT

; 2385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 70 04 00
	00		 sub	 esp, 1136		; 00000470H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00017	57		 push	 edi
  00018	8b 7d 0c	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 2386 : 	if ( !gObjIsConnectedGP(aIndex))

  0001b	57		 push	 edi
  0001c	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00021	83 c4 04	 add	 esp, 4
  00024	85 c0		 test	 eax, eax
  00026	75 28		 jne	 SHORT $LN5@FriendMemo@8

; 2387 : 	{
; 2388 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00028	68 54 09 00 00	 push	 2388			; 00000954H
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	5f		 pop	 edi
  00041	5b		 pop	 ebx

; 2453 : }

  00042	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00045	33 cd		 xor	 ecx, ebp
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN5@FriendMemo@8:

; 2389 : 		return;
; 2390 : 	}
; 2391 : 
; 2392 : 	char_ID Name(lpMsg->Name);

  00050	33 c0		 xor	 eax, eax
  00052	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00055	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00058	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  0005b	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  0005f	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00062	85 c9		 test	 ecx, ecx
  00064	74 13		 je	 SHORT $LN8@FriendMemo@8
  00066	8b 01		 mov	 eax, DWORD PTR [ecx]
  00068	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0006b	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0006e	66 8b 41 08	 mov	 ax, WORD PTR [ecx+8]
  00072	89 55 f4	 mov	 DWORD PTR _Name$[ebp+4], edx
  00075	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN8@FriendMemo@8:

; 2393 : 
; 2394 : 	if ( gObj[aIndex].Money < 1000 )

  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0007f	8b c7		 mov	 eax, edi
  00081	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00087	81 bc 10 f0 00
	00 00 e8 03 00
	00		 cmp	 DWORD PTR [eax+edx+240], 1000 ; 000003e8H
  00092	89 85 90 fb ff
	ff		 mov	 DWORD PTR tv292[ebp], eax
  00098	7d 56		 jge	 SHORT $LN4@FriendMemo@8

; 2395 : 	{
; 2396 : 		FHP_FRIEND_MEMO_SEND_RESULT pResult;
; 2397 : 
; 2398 : 		pResult.Number = aIndex;
; 2399 : 		pResult.Result = 7;
; 2400 : 		pResult.WindowGuid = lpMsg->WindowGuid;

  0009a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]

; 2401 : 		memcpy(pResult.Name, gObj[aIndex].Name, sizeof(pResult.Name));

  0009d	8d 44 10 77	 lea	 eax, DWORD PTR [eax+edx+119]
  000a1	8b 10		 mov	 edx, DWORD PTR [eax]
  000a3	89 8d a8 fb ff
	ff		 mov	 DWORD PTR _pResult$215196[ebp+20], ecx
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	89 95 9a fb ff
	ff		 mov	 DWORD PTR _pResult$215196[ebp+6], edx
  000b2	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

; 2402 : 
; 2403 : 		FriendMemoSendResult(&pResult);

  000b6	8d 85 94 fb ff
	ff		 lea	 eax, DWORD PTR _pResult$215196[ebp]
  000bc	50		 push	 eax
  000bd	66 89 bd 98 fb
	ff ff		 mov	 WORD PTR _pResult$215196[ebp+4], di
  000c4	c6 85 a4 fb ff
	ff 07		 mov	 BYTE PTR _pResult$215196[ebp+16], 7
  000cb	89 8d 9e fb ff
	ff		 mov	 DWORD PTR _pResult$215196[ebp+10], ecx
  000d1	66 89 95 a2 fb
	ff ff		 mov	 WORD PTR _pResult$215196[ebp+14], dx
  000d8	e8 00 00 00 00	 call	 ?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ; FriendMemoSendResult
  000dd	83 c4 04	 add	 esp, 4
  000e0	5f		 pop	 edi
  000e1	5b		 pop	 ebx

; 2453 : }

  000e2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e5	33 cd		 xor	 ecx, ebp
  000e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c3		 ret	 0
$LN4@FriendMemo@8:

; 2404 : 
; 2405 : 		return;
; 2406 : 	}
; 2407 : 
; 2408 : 	//lpMsg->MemoSize = strlen(lpMsg->Memo);
; 2409 : 
; 2410 : 	if ( lpMsg->MemoSize < 0 || lpMsg->MemoSize > 1000 )

  000f0	0f b7 4b 50	 movzx	 ecx, WORD PTR [ebx+80]
  000f4	56		 push	 esi
  000f5	66 85 c9	 test	 cx, cx
  000f8	0f 88 70 01 00
	00		 js	 $LN18@FriendMemo@8
  000fe	be e8 03 00 00	 mov	 esi, 1000		; 000003e8H
  00103	66 3b ce	 cmp	 cx, si
  00106	0f 8f 62 01 00
	00		 jg	 $LN18@FriendMemo@8

; 2419 : 		return;
; 2420 : 	}
; 2421 : 
; 2422 : 	if ( Name.GetLength() < 1 )

  0010c	8d 75 f0	 lea	 esi, DWORD PTR _Name$[ebp]
  0010f	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00112	89 8d ac fb ff
	ff		 mov	 DWORD PTR tv330[ebp], ecx
$LL17@FriendMemo@8:
  00118	8a 0e		 mov	 cl, BYTE PTR [esi]
  0011a	46		 inc	 esi
  0011b	84 c9		 test	 cl, cl
  0011d	75 f9		 jne	 SHORT $LL17@FriendMemo@8
  0011f	2b b5 ac fb ff
	ff		 sub	 esi, DWORD PTR tv330[ebp]
  00125	83 fe 01	 cmp	 esi, 1

; 2423 : 	{
; 2424 : 		FHP_FRIEND_MEMO_SEND_RESULT pResult;
; 2425 : 
; 2426 : 		pResult.Number = aIndex;
; 2427 : 		pResult.Result = 0;
; 2428 : 		pResult.WindowGuid = lpMsg->WindowGuid;
; 2429 : 		memcpy(pResult.Name, gObj[aIndex].Name, sizeof(pResult.Name));
; 2430 : 		FriendMemoSendResult(&pResult);
; 2431 : 		return;

  00128	0f 8c 40 01 00
	00		 jl	 $LN18@FriendMemo@8

; 2432 : 	}
; 2433 : 
; 2434 : 	FHP_FRIEND_MEMO_SEND pMsg;
; 2435 : 	int bsize = lpMsg->MemoSize + sizeof(pMsg) - sizeof(pMsg.Memo);

  0012e	0f b7 73 50	 movzx	 esi, WORD PTR [ebx+80]
  00132	0f bf c6	 movsx	 eax, si
  00135	83 c0 58	 add	 eax, 88			; 00000058H

; 2436 : 
; 2437 : 	pMsg.h.set((LPBYTE)&pMsg, 0x70, bsize);

  00138	88 85 b2 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+2], al
  0013e	8b c8		 mov	 ecx, eax
  00140	c1 e9 08	 shr	 ecx, 8
  00143	88 8d b1 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+1], cl

; 2438 : 	pMsg.WindowGuid = lpMsg->WindowGuid;
; 2439 : 	pMsg.MemoSize = lpMsg->MemoSize;
; 2440 : 	pMsg.Number = aIndex;
; 2441 : 	pMsg.Dir = lpMsg->Dir;

  00149	8a 4b 4e	 mov	 cl, BYTE PTR [ebx+78]
  0014c	88 8d f0 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+64], cl
  00152	89 85 ac fb ff
	ff		 mov	 DWORD PTR _bsize$[ebp], eax
  00158	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0015b	89 85 b8 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+8], eax

; 2442 : 	pMsg.Action = lpMsg->Action;

  00161	8a 43 4f	 mov	 al, BYTE PTR [ebx+79]
  00164	66 89 b5 f2 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+66], si
  0016b	88 85 f1 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+65], al
  00171	66 89 bd b4 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+4], di
  00178	c6 85 b0 fb ff
	ff c2		 mov	 BYTE PTR _pMsg$[ebp], 194 ; 000000c2H
  0017f	c6 85 b3 fb ff
	ff 70		 mov	 BYTE PTR _pMsg$[ebp+3], 112 ; 00000070H

; 2443 : 
; 2444 : 	memcpy(pMsg.Subject, lpMsg->Subject, sizeof(pMsg.Subject));

  00186	8d 73 12	 lea	 esi, DWORD PTR [ebx+18]
  00189	b9 08 00 00 00	 mov	 ecx, 8
  0018e	8d bd d0 fb ff
	ff		 lea	 edi, DWORD PTR _pMsg$[ebp+32]
  00194	f3 a5		 rep movsd

; 2445 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00196	8b b5 90 fb ff
	ff		 mov	 esi, DWORD PTR tv292[ebp]
  0019c	8b 4c 16 77	 mov	 ecx, DWORD PTR [esi+edx+119]
  001a0	89 8d bc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  001a6	8b 44 16 7b	 mov	 eax, DWORD PTR [esi+edx+123]
  001aa	89 85 c0 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+16], eax
  001b0	66 8b 4c 16 7f	 mov	 cx, WORD PTR [esi+edx+127]

; 2446 : 	memcpy(pMsg.Photo, gObj[aIndex].CharSet, sizeof(pMsg.Photo));

  001b5	8d 84 16 e6 04
	00 00		 lea	 eax, DWORD PTR [esi+edx+1254]
  001bc	66 89 8d c4 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+20], cx
  001c3	8b 10		 mov	 edx, DWORD PTR [eax]
  001c5	89 95 f4 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+68], edx
  001cb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001ce	89 8d f8 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+72], ecx
  001d4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001d7	89 95 fc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+76], edx
  001dd	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  001e0	89 8d 00 fc ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+80], ecx
  001e6	0f b7 50 10	 movzx	 edx, WORD PTR [eax+16]

; 2447 : 	memcpy(pMsg.ToName, lpMsg->Name, sizeof(pMsg.ToName));

  001ea	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001ed	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  001f0	89 85 c6 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+22], eax

; 2448 : 	memcpy(pMsg.Memo, lpMsg->Memo, lpMsg->MemoSize);

  001f6	0f b7 43 50	 movzx	 eax, WORD PTR [ebx+80]
  001fa	98		 cwde
  001fb	66 89 95 04 fc
	ff ff		 mov	 WORD PTR _pMsg$[ebp+84], dx
  00202	0f b7 53 10	 movzx	 edx, WORD PTR [ebx+16]
  00206	50		 push	 eax
  00207	89 8d ca fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+26], ecx
  0020d	83 c3 52	 add	 ebx, 82			; 00000052H
  00210	8d 8d 06 fc ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp+86]
  00216	53		 push	 ebx
  00217	51		 push	 ecx
  00218	66 89 95 ce fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+30], dx
  0021f	e8 00 00 00 00	 call	 _memcpy

; 2449 : 
; 2450 : 	wsZtDbCli.DataSend((char*)&pMsg, bsize);

  00224	8b bd ac fb ff
	ff		 mov	 edi, DWORD PTR _bsize$[ebp]
  0022a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0022d	57		 push	 edi
  0022e	8d 95 b0 fb ff
	ff		 lea	 edx, DWORD PTR _pMsg$[ebp]
  00234	52		 push	 edx
  00235	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0023a	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2451 : 
; 2452 : 	LogAdd("[%s] Friend mail send %s (Size:%d)", gObj[aIndex].Name, Name.GetBuffer(), bsize);

  0023f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00245	57		 push	 edi
  00246	8d 45 f0	 lea	 eax, DWORD PTR _Name$[ebp]
  00249	50		 push	 eax
  0024a	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  0024e	52		 push	 edx
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HIFGHJCH@?$FL?$CFs?$FN?5Friend?5mail?5send?5?$CFs?5?$CISize?3?$CF@
  00254	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0025a	83 c4 10	 add	 esp, 16			; 00000010H
  0025d	5e		 pop	 esi
  0025e	5f		 pop	 edi
  0025f	5b		 pop	 ebx

; 2453 : }

  00260	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00263	33 cd		 xor	 ecx, ebp
  00265	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026a	8b e5		 mov	 esp, ebp
  0026c	5d		 pop	 ebp
  0026d	c3		 ret	 0
$LN18@FriendMemo@8:

; 2411 : 	{
; 2412 : 		FHP_FRIEND_MEMO_SEND_RESULT pResult;
; 2413 : 
; 2414 : 		pResult.Number = aIndex;
; 2415 : 		pResult.Result = 0;
; 2416 : 		pResult.WindowGuid = lpMsg->WindowGuid;

  0026e	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]

; 2417 : 		memcpy(pResult.Name, gObj[aIndex].Name, sizeof(pResult.Name));

  00271	8d 44 10 77	 lea	 eax, DWORD PTR [eax+edx+119]
  00275	8b 10		 mov	 edx, DWORD PTR [eax]
  00277	89 8d a8 fb ff
	ff		 mov	 DWORD PTR _pResult$215199[ebp+20], ecx
  0027d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00280	89 95 9a fb ff
	ff		 mov	 DWORD PTR _pResult$215199[ebp+6], edx
  00286	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

; 2418 : 		FriendMemoSendResult(&pResult);

  0028a	8d 85 94 fb ff
	ff		 lea	 eax, DWORD PTR _pResult$215199[ebp]
  00290	50		 push	 eax
  00291	66 89 bd 98 fb
	ff ff		 mov	 WORD PTR _pResult$215199[ebp+4], di
  00298	c6 85 a4 fb ff
	ff 00		 mov	 BYTE PTR _pResult$215199[ebp+16], 0
  0029f	89 8d 9e fb ff
	ff		 mov	 DWORD PTR _pResult$215199[ebp+10], ecx
  002a5	66 89 95 a2 fb
	ff ff		 mov	 WORD PTR _pResult$215199[ebp+14], dx
  002ac	e8 00 00 00 00	 call	 ?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ; FriendMemoSendResult

; 2453 : }

  002b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b4	83 c4 04	 add	 esp, 4
  002b7	5e		 pop	 esi
  002b8	5f		 pop	 edi
  002b9	33 cd		 xor	 ecx, ebp
  002bb	5b		 pop	 ebx
  002bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c1	8b e5		 mov	 esp, ebp
  002c3	5d		 pop	 ebp
  002c4	c3		 ret	 0
?FriendMemoSend@@YAXPAUPMSG_FRIEND_MEMO@@H@Z ENDP	; FriendMemoSend
_TEXT	ENDS
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?FriendMemoSendEx@@YAXPAUPMSG_FRIEND_MEMO@@H@Z	; FriendMemoSendEx
; Function compile flags: /Ogtp
;	COMDAT ?FriendMemoSendEx@@YAXPAUPMSG_FRIEND_MEMO@@H@Z
_TEXT	SEGMENT
tv319 = -1140						; size = 4
_aIndex$GSCopy$ = -1136					; size = 4
_bsize$ = -1132						; size = 4
_pResult$215217 = -1128					; size = 24
_pResult$215215 = -1128					; size = 24
_pMsg$ = -1104						; size = 1088
_Name$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?FriendMemoSendEx@@YAXPAUPMSG_FRIEND_MEMO@@H@Z PROC	; FriendMemoSendEx, COMDAT

; 2457 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 04 00
	00		 sub	 esp, 1140		; 00000474H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _aIndex$[ebp]

; 2458 : 	if ( !gObjIsConnectedGP(aIndex))

  0001b	56		 push	 esi

; 2485 : 	{
; 2486 : 		FHP_FRIEND_MEMO_SEND_RESULT pResult;
; 2487 : 
; 2488 : 		pResult.Number = aIndex;

  0001c	89 b5 90 fb ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], esi
  00022	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00027	83 c4 04	 add	 esp, 4
  0002a	85 c0		 test	 eax, eax
  0002c	75 28		 jne	 SHORT $LN4@FriendMemo@9

; 2459 : 	{
; 2460 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  0002e	68 9c 09 00 00	 push	 2460			; 0000099cH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FCCBMCDG@EDSProtocol?4cpp?$AA@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx

; 2527 : }

  00048	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004b	33 cd		 xor	 ecx, ebp
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN4@FriendMemo@9:

; 2461 : 		return;
; 2462 : 	}
; 2463 : 
; 2464 : 	char_ID Name(lpMsg->Name);

  00056	33 c0		 xor	 eax, eax
  00058	8d 53 08	 lea	 edx, DWORD PTR [ebx+8]
  0005b	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  0005e	89 45 f4	 mov	 DWORD PTR _Name$[ebp+4], eax
  00061	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
  00065	88 45 fa	 mov	 BYTE PTR _Name$[ebp+10], al
  00068	85 d2		 test	 edx, edx
  0006a	74 13		 je	 SHORT $LN7@FriendMemo@9
  0006c	8b 02		 mov	 eax, DWORD PTR [edx]
  0006e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00071	89 45 f0	 mov	 DWORD PTR _Name$[ebp], eax
  00074	66 8b 42 08	 mov	 ax, WORD PTR [edx+8]
  00078	89 4d f4	 mov	 DWORD PTR _Name$[ebp+4], ecx
  0007b	66 89 45 f8	 mov	 WORD PTR _Name$[ebp+8], ax
$LN7@FriendMemo@9:

; 2465 : 
; 2466 : 	/*
; 2467 : 	if ( gObj[aIndex].Money < 1000 )
; 2468 : 	{
; 2469 : 		FHP_FRIEND_MEMO_SEND_RESULT pResult;
; 2470 : 
; 2471 : 		pResult.Number = aIndex;
; 2472 : 		pResult.Result = 7;
; 2473 : 		pResult.WindowGuid = lpMsg->WindowGuid;
; 2474 : 		memcpy(pResult.Name, gObj[aIndex].Name, sizeof(pResult.Name));
; 2475 : 
; 2476 : 		FriendMemoSendResult(&pResult);
; 2477 : 
; 2478 : 		return;
; 2479 : 	}
; 2480 : 	*/
; 2481 : 
; 2482 : 	//lpMsg->MemoSize = strlen(lpMsg->Memo);
; 2483 : 
; 2484 : 	if ( lpMsg->MemoSize < 0 || lpMsg->MemoSize > 1000 )

  0007f	0f b7 4b 50	 movzx	 ecx, WORD PTR [ebx+80]
  00083	89 8d 8c fb ff
	ff		 mov	 DWORD PTR tv319[ebp], ecx
  00089	66 85 c9	 test	 cx, cx
  0008c	0f 88 de 01 00
	00		 js	 $LN2@FriendMemo@9
  00092	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00097	66 3b c8	 cmp	 cx, ax
  0009a	0f 8f d0 01 00
	00		 jg	 $LN2@FriendMemo@9

; 2493 : 		return;
; 2494 : 	}
; 2495 : 
; 2496 : 	if ( Name.GetLength() < 1 )

  000a0	57		 push	 edi
  000a1	8d 7d f0	 lea	 edi, DWORD PTR _Name$[ebp]
  000a4	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
$LL16@FriendMemo@9:
  000a7	8a 0f		 mov	 cl, BYTE PTR [edi]
  000a9	47		 inc	 edi
  000aa	84 c9		 test	 cl, cl
  000ac	75 f9		 jne	 SHORT $LL16@FriendMemo@9
  000ae	2b f8		 sub	 edi, eax
  000b0	83 ff 01	 cmp	 edi, 1
  000b3	7d 62		 jge	 SHORT $LN1@FriendMemo@9

; 2497 : 	{
; 2498 : 		FHP_FRIEND_MEMO_SEND_RESULT pResult;
; 2499 : 
; 2500 : 		pResult.Number = aIndex;
; 2501 : 		pResult.Result = 0;
; 2502 : 		pResult.WindowGuid = lpMsg->WindowGuid;
; 2503 : 		memcpy(pResult.Name, gObj[aIndex].Name, sizeof(pResult.Name));

  000b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000bb	66 89 b5 9c fb
	ff ff		 mov	 WORD PTR _pResult$215217[ebp+4], si
  000c2	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  000c8	88 8d a8 fb ff
	ff		 mov	 BYTE PTR _pResult$215217[ebp+16], cl
  000ce	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000d1	8d 44 16 77	 lea	 eax, DWORD PTR [esi+edx+119]
  000d5	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000d8	89 8d ac fb ff
	ff		 mov	 DWORD PTR _pResult$215217[ebp+20], ecx
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  000e4	89 8d 9e fb ff
	ff		 mov	 DWORD PTR _pResult$215217[ebp+6], ecx

; 2504 : 		FriendMemoSendResult(&pResult);

  000ea	8d 8d 98 fb ff
	ff		 lea	 ecx, DWORD PTR _pResult$215217[ebp]
  000f0	51		 push	 ecx
  000f1	89 95 a2 fb ff
	ff		 mov	 DWORD PTR _pResult$215217[ebp+10], edx
  000f7	66 89 85 a6 fb
	ff ff		 mov	 WORD PTR _pResult$215217[ebp+14], ax
  000fe	e8 00 00 00 00	 call	 ?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ; FriendMemoSendResult
  00103	83 c4 04	 add	 esp, 4
  00106	5f		 pop	 edi
  00107	5e		 pop	 esi
  00108	5b		 pop	 ebx

; 2527 : }

  00109	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010c	33 cd		 xor	 ecx, ebp
  0010e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
$LN1@FriendMemo@9:

; 2505 : 		return;
; 2506 : 	}
; 2507 : 
; 2508 : 	FHP_FRIEND_MEMO_SEND pMsg;
; 2509 : 	int bsize = lpMsg->MemoSize + sizeof(pMsg) - sizeof(pMsg.Memo);

  00117	0f b7 7b 50	 movzx	 edi, WORD PTR [ebx+80]
  0011b	0f bf c7	 movsx	 eax, di
  0011e	83 c0 58	 add	 eax, 88			; 00000058H

; 2510 : 
; 2511 : 	pMsg.h.set((LPBYTE)&pMsg, 0x70, bsize);

  00121	88 85 b2 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+2], al
  00127	8b c8		 mov	 ecx, eax
  00129	c1 e9 08	 shr	 ecx, 8
  0012c	88 8d b1 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+1], cl

; 2512 : 	pMsg.WindowGuid = lpMsg->WindowGuid;
; 2513 : 	pMsg.MemoSize = lpMsg->MemoSize;
; 2514 : 	pMsg.Number = aIndex;
; 2515 : 	pMsg.Dir = lpMsg->Dir;

  00132	8a 4b 4e	 mov	 cl, BYTE PTR [ebx+78]
  00135	66 89 b5 b4 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+4], si
  0013c	88 8d f0 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+64], cl
  00142	89 85 94 fb ff
	ff		 mov	 DWORD PTR _bsize$[ebp], eax
  00148	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0014b	89 85 b8 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+8], eax

; 2516 : 	pMsg.Action = lpMsg->Action;

  00151	8a 43 4f	 mov	 al, BYTE PTR [ebx+79]
  00154	66 89 bd f2 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+66], di
  0015b	88 85 f1 fb ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+65], al

; 2517 : 
; 2518 : 	memcpy(pMsg.Subject, lpMsg->Subject, sizeof(pMsg.Subject));
; 2519 : 	memcpy(pMsg.Name, gObj[aIndex].Name, sizeof(pMsg.Name));

  00161	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00166	c6 85 b0 fb ff
	ff c2		 mov	 BYTE PTR _pMsg$[ebp], 194 ; 000000c2H
  0016d	c6 85 b3 fb ff
	ff 70		 mov	 BYTE PTR _pMsg$[ebp+3], 112 ; 00000070H
  00174	8d 73 12	 lea	 esi, DWORD PTR [ebx+18]
  00177	b9 08 00 00 00	 mov	 ecx, 8
  0017c	8d bd d0 fb ff
	ff		 lea	 edi, DWORD PTR _pMsg$[ebp+32]
  00182	f3 a5		 rep movsd
  00184	8b b5 90 fb ff
	ff		 mov	 esi, DWORD PTR _aIndex$GSCopy$[ebp]
  0018a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00190	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  00194	89 8d bc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+12], ecx
  0019a	8b 4c 06 7b	 mov	 ecx, DWORD PTR [esi+eax+123]
  0019e	89 8d c0 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+16], ecx
  001a4	0f b7 4c 06 7f	 movzx	 ecx, WORD PTR [esi+eax+127]
  001a9	66 89 8d c4 fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+20], cx

; 2520 : 	memcpy(pMsg.Photo, gObj[aIndex].CharSet, sizeof(pMsg.Photo));

  001b0	8b 8c 06 e6 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1254]
  001b7	89 8d f4 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+68], ecx
  001bd	8b 8c 06 ea 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1258]
  001c4	89 8d f8 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+72], ecx
  001ca	8b 8c 06 ee 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1262]
  001d1	89 8d fc fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+76], ecx
  001d7	8b 8c 06 f2 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1266]
  001de	89 8d 00 fc ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+80], ecx
  001e4	66 8b 84 06 f6
	04 00 00	 mov	 ax, WORD PTR [esi+eax+1270]

; 2521 : 	memcpy(pMsg.ToName, lpMsg->Name, sizeof(pMsg.ToName));

  001ec	8b 0a		 mov	 ecx, DWORD PTR [edx]
  001ee	66 89 85 04 fc
	ff ff		 mov	 WORD PTR _pMsg$[ebp+84], ax
  001f5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001f8	89 8d c6 fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+22], ecx
  001fe	0f b7 4a 08	 movzx	 ecx, WORD PTR [edx+8]

; 2522 : 	memcpy(pMsg.Memo, lpMsg->Memo, lpMsg->MemoSize);

  00202	0f bf 95 8c fb
	ff ff		 movsx	 edx, WORD PTR tv319[ebp]
  00209	52		 push	 edx
  0020a	89 85 ca fb ff
	ff		 mov	 DWORD PTR _pMsg$[ebp+26], eax
  00210	83 c3 52	 add	 ebx, 82			; 00000052H
  00213	8d 85 06 fc ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp+86]
  00219	53		 push	 ebx
  0021a	50		 push	 eax
  0021b	66 89 8d ce fb
	ff ff		 mov	 WORD PTR _pMsg$[ebp+30], cx
  00222	e8 00 00 00 00	 call	 _memcpy

; 2523 : 
; 2524 : 	wsZtDbCli.DataSend((char*)&pMsg, bsize);

  00227	8b bd 94 fb ff
	ff		 mov	 edi, DWORD PTR _bsize$[ebp]
  0022d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00230	57		 push	 edi
  00231	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00237	51		 push	 ecx
  00238	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsZtDbCli@@3VwsJoinServerCli@@A ; wsZtDbCli
  0023d	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 2525 : 
; 2526 : 	LogAdd("[%s] Friend mail send %s (Size:%d)", gObj[aIndex].Name, Name.GetBuffer(), bsize);

  00242	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00247	57		 push	 edi
  00248	8d 55 f0	 lea	 edx, DWORD PTR _Name$[ebp]
  0024b	52		 push	 edx
  0024c	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  00250	51		 push	 ecx
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HIFGHJCH@?$FL?$CFs?$FN?5Friend?5mail?5send?5?$CFs?5?$CISize?3?$CF@
  00256	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0025c	83 c4 10	 add	 esp, 16			; 00000010H
  0025f	5f		 pop	 edi
  00260	5e		 pop	 esi
  00261	5b		 pop	 ebx

; 2527 : }

  00262	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00265	33 cd		 xor	 ecx, ebp
  00267	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026c	8b e5		 mov	 esp, ebp
  0026e	5d		 pop	 ebp
  0026f	c3		 ret	 0
$LN2@FriendMemo@9:

; 2489 : 		pResult.Result = 0;
; 2490 : 		pResult.WindowGuid = lpMsg->WindowGuid;
; 2491 : 		memcpy(pResult.Name, gObj[aIndex].Name, sizeof(pResult.Name));

  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00275	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00278	66 89 b5 9c fb
	ff ff		 mov	 WORD PTR _pResult$215215[ebp+4], si
  0027f	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00285	8b 4c 06 77	 mov	 ecx, DWORD PTR [esi+eax+119]
  00289	8d 44 06 77	 lea	 eax, DWORD PTR [esi+eax+119]
  0028d	89 95 ac fb ff
	ff		 mov	 DWORD PTR _pResult$215215[ebp+20], edx
  00293	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00296	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0029a	89 8d 9e fb ff
	ff		 mov	 DWORD PTR _pResult$215215[ebp+6], ecx

; 2492 : 		FriendMemoSendResult(&pResult);

  002a0	8d 8d 98 fb ff
	ff		 lea	 ecx, DWORD PTR _pResult$215215[ebp]
  002a6	51		 push	 ecx
  002a7	c6 85 a8 fb ff
	ff 00		 mov	 BYTE PTR _pResult$215215[ebp+16], 0
  002ae	89 95 a2 fb ff
	ff		 mov	 DWORD PTR _pResult$215215[ebp+10], edx
  002b4	66 89 85 a6 fb
	ff ff		 mov	 WORD PTR _pResult$215215[ebp+14], ax
  002bb	e8 00 00 00 00	 call	 ?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ; FriendMemoSendResult

; 2527 : }

  002c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c3	83 c4 04	 add	 esp, 4
  002c6	5e		 pop	 esi
  002c7	33 cd		 xor	 ecx, ebp
  002c9	5b		 pop	 ebx
  002ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002cf	8b e5		 mov	 esp, ebp
  002d1	5d		 pop	 ebp
  002d2	c3		 ret	 0
?FriendMemoSendEx@@YAXPAUPMSG_FRIEND_MEMO@@H@Z ENDP	; FriendMemoSendEx
_TEXT	ENDS
PUBLIC	?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z	; _GUILD_INFO_STRUCT::SetGuildUnion
; Function compile flags: /Ogtp
;	COMDAT ?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z
_TEXT	SEGMENT
_iGuildNumber$ = 8					; size = 4
?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z PROC		; _GUILD_INFO_STRUCT::SetGuildUnion, COMDAT
; _this$ = ecx

; 2718 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2719 : 	this->iGuildUnion = iGuildNumber;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iGuildNumber$[ebp]
  00006	89 81 1c 07 00
	00		 mov	 DWORD PTR [ecx+1820], eax

; 2720 : 	this->SetTimeStamp();

  0000c	e8 00 00 00 00	 call	 ?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ ; _GUILD_INFO_STRUCT::SetTimeStamp

; 2721 : };	

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z ENDP		; _GUILD_INFO_STRUCT::SetGuildUnion
_TEXT	ENDS
PUBLIC	?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z	; _GUILD_INFO_STRUCT::SetGuildRival
; Function compile flags: /Ogtp
;	COMDAT ?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z
_TEXT	SEGMENT
_iGuildNumber$ = 8					; size = 4
?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z PROC		; _GUILD_INFO_STRUCT::SetGuildRival, COMDAT
; _this$ = ecx

; 2724 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2725 : 	this->iGuildRival = iGuildNumber;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iGuildNumber$[ebp]
  00006	89 81 20 07 00
	00		 mov	 DWORD PTR [ecx+1824], eax

; 2726 : 	this->SetTimeStamp();

  0000c	e8 00 00 00 00	 call	 ?SetTimeStamp@_GUILD_INFO_STRUCT@@QAEXXZ ; _GUILD_INFO_STRUCT::SetTimeStamp

; 2727 : };

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z ENDP		; _GUILD_INFO_STRUCT::SetGuildRival
_TEXT	ENDS
PUBLIC	??_C@_0CK@CDNGEFAB@?$FLU?4System?$FN?$FLRival?$FN?$FLJoin?$FN?5?$CI?5?5?$CFs?5?$CJ?5@ ; `string'
PUBLIC	??_C@_0EN@PFEKLNHO@?$FLU?4System?$FN?$FLUnion?$FN?$FLJoin?$FN?5?$CI?5Union?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGRelationShipAnsJoin@@YAXPAUEXSDHP_RELATIONSHIP_JOIN_RESULT@@@Z ; DGRelationShipAnsJoin
;	COMDAT ??_C@_0CK@CDNGEFAB@?$FLU?4System?$FN?$FLRival?$FN?$FLJoin?$FN?5?$CI?5?5?$CFs?5?$CJ?5@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CK@CDNGEFAB@?$FLU?4System?$FN?$FLRival?$FN?$FLJoin?$FN?5?$CI?5?5?$CFs?5?$CJ?5@ DB '['
	DB	'U.System][Rival][Join] (  %s ) vs ( %s )', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@PFEKLNHO@?$FLU?4System?$FN?$FLUnion?$FN?$FLJoin?$FN?5?$CI?5Union?5@
CONST	SEGMENT
??_C@_0EN@PFEKLNHO@?$FLU?4System?$FN?$FLUnion?$FN?$FLJoin?$FN?5?$CI?5Union?5@ DB '['
	DB	'U.System][Union][Join] ( Union Master Guild: %s ), (Union Mem'
	DB	'ber Guild: %s)', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?DGRelationShipAnsJoin@@YAXPAUEXSDHP_RELATIONSHIP_JOIN_RESULT@@@Z
_TEXT	SEGMENT
_lpReqGuild$ = -288					; size = 4
_pMsg$214521 = -284					; size = 8
_n$214558 = -280					; size = 4
_n$214548 = -280					; size = 4
__Notice$214564 = -276					; size = 272
__Notice$214554 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGRelationShipAnsJoin@@YAXPAUEXSDHP_RELATIONSHIP_JOIN_RESULT@@@Z PROC ; DGRelationShipAnsJoin, COMDAT

; 1358 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 1359 : 	_GUILD_INFO_STRUCT * lpReqGuild = Guild.SearchGuild_Number(lpMsg->iRequestGuildNum);

  00018	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001b	57		 push	 edi
  0001c	50		 push	 eax
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00022	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number

; 1360 : 	_GUILD_INFO_STRUCT * lpTargetGuild = Guild.SearchGuild_Number(lpMsg->iTargetGuildNum);

  00027	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0002a	8b f8		 mov	 edi, eax
  0002c	51		 push	 ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00032	89 bd e0 fe ff
	ff		 mov	 DWORD PTR _lpReqGuild$[ebp], edi
  00038	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  0003d	8b d8		 mov	 ebx, eax

; 1361 : 
; 1362 : 	if ( lpMsg->btFlag == 1 )

  0003f	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  00042	3c 01		 cmp	 al, 1
  00044	0f 85 bc 00 00
	00		 jne	 $LN30@DGRelation@3

; 1363 : 	{
; 1364 : 		if ( !lpReqGuild || !lpTargetGuild )

  0004a	85 ff		 test	 edi, edi
  0004c	74 04		 je	 SHORT $LN28@DGRelation@3
  0004e	85 db		 test	 ebx, ebx
  00050	75 04		 jne	 SHORT $LN29@DGRelation@3
$LN28@DGRelation@3:

; 1365 : 		{
; 1366 : 			lpMsg->btResult = 0;

  00052	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
$LN29@DGRelation@3:

; 1367 : 		}
; 1368 : 
; 1369 : 		PMSG_RELATIONSHIP_JOIN_BREAKOFF_ANS pMsg ={0};
; 1370 : 
; 1371 : 		pMsg.h.set((LPBYTE)&pMsg, 0xE6, sizeof(pMsg));
; 1372 : 		pMsg.btResult = lpMsg->btResult;

  00056	0f b6 56 08	 movzx	 edx, BYTE PTR [esi+8]

; 1373 : 		pMsg.btRequestType = G_RELATION_OPERATION_JOIN;
; 1374 : 		pMsg.btRelationShipType = lpMsg->btRelationShipType;
; 1375 : 		pMsg.btTargetUserIndexH = SET_NUMBERH(lpMsg->wTargetUserIndex);

  0005a	8a 4e 07	 mov	 cl, BYTE PTR [esi+7]
  0005d	33 c0		 xor	 eax, eax
  0005f	89 85 e5 fe ff
	ff		 mov	 DWORD PTR _pMsg$214521[ebp+1], eax
  00065	66 89 85 e9 fe
	ff ff		 mov	 WORD PTR _pMsg$214521[ebp+5], ax
  0006c	88 85 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+7], al
  00072	0f b6 46 09	 movzx	 eax, BYTE PTR [esi+9]
  00076	88 85 e7 fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+3], al
  0007c	88 8d ea fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+6], cl

; 1376 : 		pMsg.btTargetUserIndexL = SET_NUMBERL(lpMsg->wTargetUserIndex);
; 1377 : 
; 1378 : 		DataSend(lpMsg->wRequestUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  00082	0f b7 4e 04	 movzx	 ecx, WORD PTR [esi+4]
  00086	88 95 e9 fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+5], dl
  0008c	0f b6 56 06	 movzx	 edx, BYTE PTR [esi+6]
  00090	6a 08		 push	 8
  00092	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _pMsg$214521[ebp]
  00098	50		 push	 eax
  00099	51		 push	 ecx
  0009a	66 c7 85 e4 fe
	ff ff c1 08	 mov	 WORD PTR _pMsg$214521[ebp], 2241 ; 000008c1H
  000a3	c6 85 e6 fe ff
	ff e6		 mov	 BYTE PTR _pMsg$214521[ebp+2], 230 ; 000000e6H
  000aa	c6 85 e8 fe ff
	ff 01		 mov	 BYTE PTR _pMsg$214521[ebp+4], 1
  000b1	88 95 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+7], dl
  000b7	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1379 : 
; 1380 : 		pMsg.btTargetUserIndexH = SET_NUMBERH(lpMsg->wRequestUserIndex);

  000bc	0f b6 56 05	 movzx	 edx, BYTE PTR [esi+5]

; 1381 : 		pMsg.btTargetUserIndexL = SET_NUMBERL(lpMsg->wRequestUserIndex);

  000c0	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  000c4	88 95 ea fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+6], dl

; 1382 : 
; 1383 : 		DataSend(lpMsg->wTargetUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  000ca	0f b7 56 06	 movzx	 edx, WORD PTR [esi+6]
  000ce	6a 08		 push	 8
  000d0	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$214521[ebp]
  000d6	51		 push	 ecx
  000d7	52		 push	 edx
  000d8	88 85 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214521[ebp+7], al
  000de	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1384 : 
; 1385 : 		if ( lpMsg->btResult == ZT_RESULT_FAIL ||lpMsg->btResult == ZT_RESULT_FAIL_FOR_CASTLE )

  000e3	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  000e6	83 c4 18	 add	 esp, 24			; 00000018H
  000e9	84 c0		 test	 al, al
  000eb	0f 84 f3 01 00
	00		 je	 $LN6@DGRelation@3
  000f1	3c 10		 cmp	 al, 16			; 00000010H
  000f3	75 38		 jne	 SHORT $LN39@DGRelation@3
  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx

; 1453 : 				}
; 1454 : 			}
; 1455 : 		}
; 1456 : 	}
; 1457 : }

  000f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fb	33 cd		 xor	 ecx, ebp
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN30@DGRelation@3:

; 1386 : 			return;
; 1387 : 
; 1388 : 	}
; 1389 : 	else if ( lpMsg->btFlag == 0 )

  00106	84 c0		 test	 al, al
  00108	75 23		 jne	 SHORT $LN39@DGRelation@3

; 1390 : 	{
; 1391 : 		if ( !lpReqGuild || !lpTargetGuild )

  0010a	85 ff		 test	 edi, edi
  0010c	0f 84 d2 01 00
	00		 je	 $LN6@DGRelation@3
  00112	85 db		 test	 ebx, ebx
  00114	0f 84 ca 01 00
	00		 je	 $LN6@DGRelation@3

; 1392 : 			return;
; 1393 : 
; 1394 : 		if ( lpMsg->btResult == ZT_RESULT_FAIL ||lpMsg->btResult == ZT_RESULT_FAIL_FOR_CASTLE )

  0011a	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  0011d	84 c0		 test	 al, al
  0011f	0f 84 bf 01 00
	00		 je	 $LN6@DGRelation@3
  00125	3c 10		 cmp	 al, 16			; 00000010H

; 1395 : 			return;

  00127	0f 84 b7 01 00
	00		 je	 $LN6@DGRelation@3
$LN39@DGRelation@3:

; 1396 : 
; 1397 : 	}
; 1398 : 
; 1399 : 	if (lpMsg->btRelationShipType == G_RELATIONSHIP_UNION )

  0012d	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  00130	3c 01		 cmp	 al, 1
  00132	75 23		 jne	 SHORT $LN19@DGRelation@3

; 1400 : 	{
; 1401 : 		lpReqGuild->SetGuildUnion(lpTargetGuild->Number);

  00134	8b 03		 mov	 eax, DWORD PTR [ebx]
  00136	50		 push	 eax
  00137	8b cf		 mov	 ecx, edi
  00139	e8 00 00 00 00	 call	 ?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildUnion

; 1402 : 		lpTargetGuild->SetGuildUnion(lpTargetGuild->Number);

  0013e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00140	51		 push	 ecx
  00141	8b cb		 mov	 ecx, ebx
  00143	e8 00 00 00 00	 call	 ?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildUnion

; 1403 : 
; 1404 : 		LogAddTD("[U.System][Union][Join] ( Union Master Guild: %s ), (Union Member Guild: %s)",
; 1405 : 			lpTargetGuild->Name, lpReqGuild->Name);

  00148	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
  0014b	52		 push	 edx
  0014c	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0014f	50		 push	 eax
  00150	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PFEKLNHO@?$FLU?4System?$FN?$FLUnion?$FN?$FLJoin?$FN?5?$CI?5Union?5@
  00155	eb 49		 jmp	 SHORT $LN43@DGRelation@3
$LN19@DGRelation@3:

; 1406 : 	}
; 1407 : 	else if ( lpMsg->btRelationShipType == G_RELATIONSHIP_RIVAL )

  00157	3c 02		 cmp	 al, 2
  00159	75 4e		 jne	 SHORT $LN17@DGRelation@3

; 1408 : 	{
; 1409 : 		lpReqGuild->SetGuildRival(lpTargetGuild->Number);

  0015b	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0015d	51		 push	 ecx
  0015e	8b cf		 mov	 ecx, edi
  00160	e8 00 00 00 00	 call	 ?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildRival

; 1410 : 		lpTargetGuild->SetGuildRival(lpReqGuild->Number);

  00165	8b 17		 mov	 edx, DWORD PTR [edi]
  00167	52		 push	 edx
  00168	8b cb		 mov	 ecx, ebx
  0016a	e8 00 00 00 00	 call	 ?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildRival

; 1411 : 		memcpy(lpReqGuild->szGuildRivalName, lpMsg->szTargetGuildName, MAX_GUILD_LEN);

  0016f	8b 46 1d	 mov	 eax, DWORD PTR [esi+29]
  00172	89 87 28 07 00
	00		 mov	 DWORD PTR [edi+1832], eax
  00178	8b 4e 21	 mov	 ecx, DWORD PTR [esi+33]
  0017b	89 8f 2c 07 00
	00		 mov	 DWORD PTR [edi+1836], ecx

; 1412 : 		memcpy(lpTargetGuild->szGuildRivalName, lpMsg->szRequestGuildName, MAX_GUILD_LEN);

  00181	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  00184	89 93 28 07 00
	00		 mov	 DWORD PTR [ebx+1832], edx
  0018a	8b 46 18	 mov	 eax, DWORD PTR [esi+24]

; 1413 : 
; 1414 : 		LogAddTD("[U.System][Rival][Join] (  %s ) vs ( %s )",
; 1415 : 			lpReqGuild->Name, lpTargetGuild->Name);

  0018d	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00190	51		 push	 ecx
  00191	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
  00194	52		 push	 edx
  00195	89 83 2c 07 00
	00		 mov	 DWORD PTR [ebx+1836], eax
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@CDNGEFAB@?$FLU?4System?$FN?$FLRival?$FN?$FLJoin?$FN?5?$CI?5?5?$CFs?5?$CJ?5@
$LN43@DGRelation@3:
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001a6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN17@DGRelation@3:

; 1416 : 	}
; 1417 : 
; 1418 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  001a9	33 c0		 xor	 eax, eax
  001ab	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _n$214548[ebp], eax
  001b1	81 c7 a0 03 00
	00		 add	 edi, 928		; 000003a0H
  001b7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL16@DGRelation@3:

; 1419 : 	{
; 1420 : 		if ( lpReqGuild->Use[n] > 0 )

  001c0	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _lpReqGuild$[ebp]
  001c6	80 bc 01 40 04
	00 00 00	 cmp	 BYTE PTR [ecx+eax+1088], 0
  001ce	76 50		 jbe	 SHORT $LN15@DGRelation@3

; 1421 : 		{
; 1422 : 			if ( lpReqGuild->Index[n] >= 0 )

  001d0	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  001d4	7c 4a		 jl	 SHORT $LN15@DGRelation@3

; 1423 : 			{
; 1424 : 				TNotice _Notice(1);

  001d6	6a 01		 push	 1
  001d8	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214554[ebp]
  001de	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1425 : 
; 1426 : 				if ( lpMsg->btRelationShipType == G_RELATIONSHIP_UNION )

  001e3	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  001e6	3c 01		 cmp	 al, 1
  001e8	75 0b		 jne	 SHORT $LN11@DGRelation@3

; 1427 : 				{
; 1428 : 					_Notice.SendToUser(lpReqGuild->Index[n], lMsg.Get(MSGGET(6, 165)), lpTargetGuild->Name);

  001ea	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
  001ed	52		 push	 edx
  001ee	68 a5 06 00 00	 push	 1701			; 000006a5H
  001f3	eb 0d		 jmp	 SHORT $LN44@DGRelation@3
$LN11@DGRelation@3:

; 1429 : 				}
; 1430 : 				else if ( lpMsg->btRelationShipType == G_RELATIONSHIP_RIVAL )

  001f5	3c 02		 cmp	 al, 2
  001f7	75 27		 jne	 SHORT $LN15@DGRelation@3

; 1431 : 				{
; 1432 : 					_Notice.SendToUser(lpReqGuild->Index[n], lMsg.Get(MSGGET(6, 166)), lpTargetGuild->Name);

  001f9	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
  001fc	52		 push	 edx
  001fd	68 a6 06 00 00	 push	 1702			; 000006a6H
$LN44@DGRelation@3:
  00202	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00207	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0020c	50		 push	 eax
  0020d	0f bf 07	 movsx	 eax, WORD PTR [edi]
  00210	50		 push	 eax
  00211	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214554[ebp]
  00217	51		 push	 ecx
  00218	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  0021d	83 c4 10	 add	 esp, 16			; 00000010H
$LN15@DGRelation@3:

; 1416 : 	}
; 1417 : 
; 1418 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00220	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$214548[ebp]
  00226	40		 inc	 eax
  00227	83 c7 02	 add	 edi, 2
  0022a	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _n$214548[ebp], eax
  00230	83 f8 50	 cmp	 eax, 80			; 00000050H
  00233	7c 8b		 jl	 SHORT $LL16@DGRelation@3

; 1433 : 				}
; 1434 : 			}
; 1435 : 		}
; 1436 : 	}
; 1437 : 
; 1438 : 	for (int n=0;n<MAX_USER_GUILD;n++)

  00235	33 c0		 xor	 eax, eax
  00237	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _n$214558[ebp], eax
  0023d	8d bb a0 03 00
	00		 lea	 edi, DWORD PTR [ebx+928]
$LL42@DGRelation@3:

; 1439 : 	{
; 1440 : 		if ( lpTargetGuild->Use[n] > 0 )

  00243	80 bc 03 40 04
	00 00 00	 cmp	 BYTE PTR [ebx+eax+1088], 0
  0024b	76 7e		 jbe	 SHORT $LN7@DGRelation@3

; 1441 : 		{
; 1442 : 			if ( lpTargetGuild->Index[n] >= 0 )

  0024d	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  00251	7c 78		 jl	 SHORT $LN7@DGRelation@3

; 1443 : 			{
; 1444 : 				TNotice _Notice(1);

  00253	6a 01		 push	 1
  00255	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214564[ebp]
  0025b	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1445 : 
; 1446 : 				if ( lpMsg->btRelationShipType == G_RELATIONSHIP_UNION )

  00260	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  00263	3c 01		 cmp	 al, 1
  00265	75 33		 jne	 SHORT $LN3@DGRelation@3

; 1447 : 				{
; 1448 : 					_Notice.SendToUser(lpTargetGuild->Index[n], lMsg.Get(MSGGET(6, 167)), lpReqGuild->Name, lpTargetGuild->Name);

  00267	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _lpReqGuild$[ebp]
  0026d	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
  00270	52		 push	 edx
  00271	83 c0 04	 add	 eax, 4
  00274	50		 push	 eax
  00275	68 a7 06 00 00	 push	 1703			; 000006a7H
  0027a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0027f	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00284	0f bf 0f	 movsx	 ecx, WORD PTR [edi]
  00287	50		 push	 eax
  00288	51		 push	 ecx
  00289	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR __Notice$214564[ebp]
  0028f	52		 push	 edx
  00290	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00295	83 c4 14	 add	 esp, 20			; 00000014H
  00298	eb 31		 jmp	 SHORT $LN7@DGRelation@3
$LN3@DGRelation@3:

; 1449 : 				}
; 1450 : 				else if ( lpMsg->btRelationShipType == G_RELATIONSHIP_RIVAL )

  0029a	3c 02		 cmp	 al, 2
  0029c	75 2d		 jne	 SHORT $LN7@DGRelation@3

; 1451 : 				{
; 1452 : 					_Notice.SendToUser(lpTargetGuild->Index[n], lMsg.Get(MSGGET(6, 166)), lpReqGuild->Name);

  0029e	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _lpReqGuild$[ebp]
  002a4	83 c0 04	 add	 eax, 4
  002a7	50		 push	 eax
  002a8	68 a6 06 00 00	 push	 1702			; 000006a6H
  002ad	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  002b2	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  002b7	0f bf 0f	 movsx	 ecx, WORD PTR [edi]
  002ba	50		 push	 eax
  002bb	51		 push	 ecx
  002bc	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR __Notice$214564[ebp]
  002c2	52		 push	 edx
  002c3	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  002c8	83 c4 10	 add	 esp, 16			; 00000010H
$LN7@DGRelation@3:

; 1433 : 				}
; 1434 : 			}
; 1435 : 		}
; 1436 : 	}
; 1437 : 
; 1438 : 	for (int n=0;n<MAX_USER_GUILD;n++)

  002cb	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$214558[ebp]
  002d1	40		 inc	 eax
  002d2	83 c7 02	 add	 edi, 2
  002d5	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _n$214558[ebp], eax
  002db	83 f8 50	 cmp	 eax, 80			; 00000050H
  002de	0f 8c 5f ff ff
	ff		 jl	 $LL42@DGRelation@3
$LN6@DGRelation@3:

; 1453 : 				}
; 1454 : 			}
; 1455 : 		}
; 1456 : 	}
; 1457 : }

  002e4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e7	5f		 pop	 edi
  002e8	5e		 pop	 esi
  002e9	33 cd		 xor	 ecx, ebp
  002eb	5b		 pop	 ebx
  002ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f1	8b e5		 mov	 esp, ebp
  002f3	5d		 pop	 ebp
  002f4	c3		 ret	 0
?DGRelationShipAnsJoin@@YAXPAUEXSDHP_RELATIONSHIP_JOIN_RESULT@@@Z ENDP ; DGRelationShipAnsJoin
_TEXT	ENDS
PUBLIC	??_C@_0FF@IACINBOG@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@ ; `string'
PUBLIC	??_C@_0EA@EGALHNLI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGUnionBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z ; DGUnionBreakOff
;	COMDAT ??_C@_0FF@IACINBOG@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0FF@IACINBOG@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@ DB '['
	DB	'GS][U.System][Union][BreakOff] ( Union Master Guild: %s ), (U'
	DB	'nion Member Guild: %s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@EGALHNLI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@
CONST	SEGMENT
??_C@_0EA@EGALHNLI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@ DB '['
	DB	'GS][U.System][Union][BreakOff] Request Union Member Guild: %s'
	DB	')', 00H					; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?DGUnionBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z
_TEXT	SEGMENT
_lpTargetGuild$ = -288					; size = 4
_pMsg$214598 = -284					; size = 8
tv252 = -280						; size = 4
__Notice$214629 = -276					; size = 272
__Notice$214620 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGUnionBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z PROC ; DGUnionBreakOff, COMDAT

; 1492 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 1493 : 	_GUILD_INFO_STRUCT * lpReqGuild = Guild.SearchGuild_Number(lpMsg->iRequestGuildNum);

  00018	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001b	50		 push	 eax
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00021	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number

; 1494 : 	_GUILD_INFO_STRUCT * lpTargetGuild = Guild.SearchGuild_Number(lpMsg->iTargetGuildNum);

  00026	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00029	51		 push	 ecx
  0002a	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  0002f	8b d8		 mov	 ebx, eax
  00031	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  00036	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _lpTargetGuild$[ebp], eax

; 1495 : 
; 1496 : 	if ( lpMsg->btFlag == 1 )

  0003c	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  0003f	3c 01		 cmp	 al, 1
  00041	0f 85 86 00 00
	00		 jne	 $LN20@DGUnionBre@2

; 1497 : 	{
; 1498 : 		if ( !lpReqGuild )

  00047	85 db		 test	 ebx, ebx
  00049	75 03		 jne	 SHORT $LN19@DGUnionBre@2

; 1499 : 		{
; 1500 : 			lpMsg->btResult = 0;

  0004b	88 5e 08	 mov	 BYTE PTR [esi+8], bl
$LN19@DGUnionBre@2:

; 1501 : 		}
; 1502 : 
; 1503 : 		PMSG_RELATIONSHIP_JOIN_BREAKOFF_ANS pMsg ={0};
; 1504 : 
; 1505 : 		pMsg.h.set((LPBYTE)&pMsg, 0xE6, sizeof(pMsg));
; 1506 : 		pMsg.btResult = lpMsg->btResult;

  0004e	8a 56 08	 mov	 dl, BYTE PTR [esi+8]

; 1507 : 		pMsg.btRequestType = G_RELATION_OPERATION_BREAKOFF;
; 1508 : 		pMsg.btRelationShipType = G_RELATIONSHIP_UNION;
; 1509 : 		pMsg.btTargetUserIndexH = SET_NUMBERH(lpMsg->wTargetUserIndex);
; 1510 : 		pMsg.btTargetUserIndexL = SET_NUMBERL(lpMsg->wTargetUserIndex);

  00051	8a 4e 06	 mov	 cl, BYTE PTR [esi+6]
  00054	33 c0		 xor	 eax, eax
  00056	89 85 e5 fe ff
	ff		 mov	 DWORD PTR _pMsg$214598[ebp+1], eax
  0005c	66 89 85 e9 fe
	ff ff		 mov	 WORD PTR _pMsg$214598[ebp+5], ax
  00063	88 85 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214598[ebp+7], al
  00069	0f b6 46 07	 movzx	 eax, BYTE PTR [esi+7]
  0006d	88 95 e9 fe ff
	ff		 mov	 BYTE PTR _pMsg$214598[ebp+5], dl
  00073	88 85 ea fe ff
	ff		 mov	 BYTE PTR _pMsg$214598[ebp+6], al

; 1511 : 
; 1512 : 		DataSend(lpMsg->wRequestUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  00079	0f b7 46 04	 movzx	 eax, WORD PTR [esi+4]
  0007d	6a 08		 push	 8
  0007f	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _pMsg$214598[ebp]
  00085	52		 push	 edx
  00086	50		 push	 eax
  00087	66 c7 85 e4 fe
	ff ff c1 08	 mov	 WORD PTR _pMsg$214598[ebp], 2241 ; 000008c1H
  00090	c6 85 e6 fe ff
	ff e6		 mov	 BYTE PTR _pMsg$214598[ebp+2], 230 ; 000000e6H
  00097	66 c7 85 e7 fe
	ff ff 01 02	 mov	 WORD PTR _pMsg$214598[ebp+3], 513 ; 00000201H
  000a0	88 8d eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214598[ebp+7], cl
  000a6	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1513 : 
; 1514 : 		if ( lpMsg->btResult == ZT_RESULT_FAIL ||lpMsg->btResult == ZT_RESULT_FAIL_FOR_CASTLE )

  000ab	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b1	84 c0		 test	 al, al
  000b3	0f 84 3f 01 00
	00		 je	 $LN3@DGUnionBre@2
  000b9	3c 10		 cmp	 al, 16			; 00000010H
  000bb	75 2f		 jne	 SHORT $LN29@DGUnionBre@2
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx

; 1565 : 			}
; 1566 : 		}
; 1567 : 	}
; 1568 : }

  000bf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c2	33 cd		 xor	 ecx, ebp
  000c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
$LN20@DGUnionBre@2:

; 1515 : 		{
; 1516 : 			return;
; 1517 : 		}
; 1518 : 
; 1519 : 	}
; 1520 : 	else if ( lpMsg->btFlag == 0 )

  000cd	84 c0		 test	 al, al
  000cf	75 1b		 jne	 SHORT $LN29@DGUnionBre@2

; 1521 : 	{
; 1522 : 		if ( !lpReqGuild )

  000d1	85 db		 test	 ebx, ebx
  000d3	0f 84 1f 01 00
	00		 je	 $LN3@DGUnionBre@2

; 1523 : 		{
; 1524 : 			return;
; 1525 : 		}
; 1526 : 
; 1527 : 		if ( lpMsg->btResult == ZT_RESULT_FAIL ||lpMsg->btResult == ZT_RESULT_FAIL_FOR_CASTLE )

  000d9	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  000dc	84 c0		 test	 al, al
  000de	0f 84 14 01 00
	00		 je	 $LN3@DGUnionBre@2
  000e4	3c 10		 cmp	 al, 16			; 00000010H

; 1528 : 		{
; 1529 : 			return;

  000e6	0f 84 0c 01 00
	00		 je	 $LN3@DGUnionBre@2
$LN29@DGUnionBre@2:
  000ec	57		 push	 edi

; 1530 : 		}
; 1531 : 
; 1532 : 	}
; 1533 : 
; 1534 : 	lpReqGuild->SetGuildUnion(0);

  000ed	6a 00		 push	 0
  000ef	8b cb		 mov	 ecx, ebx
  000f1	e8 00 00 00 00	 call	 ?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildUnion

; 1535 : 
; 1536 : 	LogAddTD("[GS][U.System][Union][BreakOff] Request Union Member Guild: %s)", lpReqGuild->Name);

  000f6	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000f9	50		 push	 eax
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@EGALHNLI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@
  000ff	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv252[ebp], eax
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0010b	83 c4 08	 add	 esp, 8

; 1537 : 
; 1538 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  0010e	33 f6		 xor	 esi, esi
  00110	8d bb a0 03 00
	00		 lea	 edi, DWORD PTR [ebx+928]
$LL11@DGUnionBre@2:

; 1539 : 	{
; 1540 : 		if ( lpReqGuild->Use[n] > 0 )

  00116	80 bc 33 40 04
	00 00 00	 cmp	 BYTE PTR [ebx+esi+1088], 0
  0011e	76 36		 jbe	 SHORT $LN10@DGUnionBre@2

; 1541 : 		{
; 1542 : 			if ( lpReqGuild->Index[n] >= 0 )

  00120	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  00124	7c 30		 jl	 SHORT $LN10@DGUnionBre@2

; 1543 : 			{
; 1544 : 				TNotice _Notice(1);

  00126	6a 01		 push	 1
  00128	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214620[ebp]
  0012e	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1545 : 				_Notice.SendToUser(lpReqGuild->Index[n], lMsg.Get(MSGGET(6, 168)));

  00133	68 a8 06 00 00	 push	 1704			; 000006a8H
  00138	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0013d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00142	0f bf 0f	 movsx	 ecx, WORD PTR [edi]
  00145	50		 push	 eax
  00146	51		 push	 ecx
  00147	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR __Notice$214620[ebp]
  0014d	52		 push	 edx
  0014e	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00153	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@DGUnionBre@2:

; 1537 : 
; 1538 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00156	46		 inc	 esi
  00157	83 c7 02	 add	 edi, 2
  0015a	83 fe 50	 cmp	 esi, 80			; 00000050H
  0015d	7c b7		 jl	 SHORT $LL11@DGUnionBre@2

; 1546 : 			}
; 1547 : 		}
; 1548 : 	}
; 1549 : 
; 1550 : 	if ( !lpTargetGuild)

  0015f	8b 9d e0 fe ff
	ff		 mov	 ebx, DWORD PTR _lpTargetGuild$[ebp]
  00165	85 db		 test	 ebx, ebx
  00167	0f 84 8a 00 00
	00		 je	 $LN32@DGUnionBre@2

; 1551 : 	{
; 1552 : 		return;
; 1553 : 	}
; 1554 : 
; 1555 : 	LogAddTD("[GS][U.System][Union][BreakOff] ( Union Master Guild: %s ), (Union Member Guild: %s)", lpTargetGuild->Name, lpReqGuild->Name);

  0016d	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv252[ebp]
  00173	50		 push	 eax
  00174	83 c3 04	 add	 ebx, 4
  00177	53		 push	 ebx
  00178	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@IACINBOG@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLBreakOff?$FN?5@
  0017d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00183	8b b5 e0 fe ff
	ff		 mov	 esi, DWORD PTR _lpTargetGuild$[ebp]
  00189	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1556 : 
; 1557 : 	for (int n=0;n<MAX_USER_GUILD;n++)

  0018c	33 ff		 xor	 edi, edi
  0018e	81 c6 a0 03 00
	00		 add	 esi, 928		; 000003a0H
  00194	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL31@DGUnionBre@2:

; 1558 : 	{
; 1559 : 		if ( lpTargetGuild->Use[n] > 0 )

  001a0	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _lpTargetGuild$[ebp]
  001a6	80 bc 39 40 04
	00 00 00	 cmp	 BYTE PTR [ecx+edi+1088], 0
  001ae	76 3e		 jbe	 SHORT $LN4@DGUnionBre@2

; 1560 : 		{
; 1561 : 			if ( lpTargetGuild->Index[n] >= 0 )

  001b0	66 83 3e 00	 cmp	 WORD PTR [esi], 0
  001b4	7c 38		 jl	 SHORT $LN4@DGUnionBre@2

; 1562 : 			{
; 1563 : 				TNotice _Notice(1);

  001b6	6a 01		 push	 1
  001b8	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214629[ebp]
  001be	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1564 : 				_Notice.SendToUser(lpTargetGuild->Index[n], lMsg.Get(MSGGET(6, 169)), lpReqGuild->Name, lpTargetGuild->Name);

  001c3	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv252[ebp]
  001c9	53		 push	 ebx
  001ca	52		 push	 edx
  001cb	68 a9 06 00 00	 push	 1705			; 000006a9H
  001d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001d5	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001da	50		 push	 eax
  001db	0f bf 06	 movsx	 eax, WORD PTR [esi]
  001de	50		 push	 eax
  001df	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214629[ebp]
  001e5	51		 push	 ecx
  001e6	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  001eb	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@DGUnionBre@2:

; 1556 : 
; 1557 : 	for (int n=0;n<MAX_USER_GUILD;n++)

  001ee	47		 inc	 edi
  001ef	83 c6 02	 add	 esi, 2
  001f2	83 ff 50	 cmp	 edi, 80			; 00000050H
  001f5	7c a9		 jl	 SHORT $LL31@DGUnionBre@2
$LN32@DGUnionBre@2:
  001f7	5f		 pop	 edi
$LN3@DGUnionBre@2:

; 1565 : 			}
; 1566 : 		}
; 1567 : 	}
; 1568 : }

  001f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fb	5e		 pop	 esi
  001fc	33 cd		 xor	 ecx, ebp
  001fe	5b		 pop	 ebx
  001ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c3		 ret	 0
?DGUnionBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z ENDP ; DGUnionBreakOff
_TEXT	ENDS
PUBLIC	??_C@_0CO@FKCLICLC@?$FLU?4System?$FN?$FLRival?$FN?$FLBreakOff?$FN?5?$CI?5?5?$CF@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGRelationShipAnsBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z ; DGRelationShipAnsBreakOff
;	COMDAT ??_C@_0CO@FKCLICLC@?$FLU?4System?$FN?$FLRival?$FN?$FLBreakOff?$FN?5?$CI?5?5?$CF@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CO@FKCLICLC@?$FLU?4System?$FN?$FLRival?$FN?$FLBreakOff?$FN?5?$CI?5?5?$CF@ DB '['
	DB	'U.System][Rival][BreakOff] (  %s ) vs ( %s )', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?DGRelationShipAnsBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z
_TEXT	SEGMENT
_lpReqGuild$ = -288					; size = 4
_pMsg$214652 = -284					; size = 8
tv300 = -280						; size = 4
__Notice$214684 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGRelationShipAnsBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z PROC ; DGRelationShipAnsBreakOff, COMDAT

; 1591 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 1592 : 	if ( lpMsg->btRelationShipType == G_RELATIONSHIP_UNION )

  00017	80 7e 09 01	 cmp	 BYTE PTR [esi+9], 1
  0001b	75 18		 jne	 SHORT $LN23@DGRelation@4

; 1593 : 	{
; 1594 : 		DGUnionBreakOff(lpMsg);

  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ?DGUnionBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z ; DGUnionBreakOff
  00023	83 c4 04	 add	 esp, 4
  00026	5e		 pop	 esi

; 1665 : 				}
; 1666 : 			}
; 1667 : 		}
; 1668 : 	}
; 1669 : }

  00027	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0002a	33 cd		 xor	 ecx, ebp
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN23@DGRelation@4:

; 1595 : 		return;
; 1596 : 	}
; 1597 : 
; 1598 : 	_GUILD_INFO_STRUCT * lpReqGuild = Guild.SearchGuild_Number(lpMsg->iRequestGuildNum);

  00035	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00038	53		 push	 ebx
  00039	57		 push	 edi
  0003a	50		 push	 eax
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00040	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number

; 1599 : 	_GUILD_INFO_STRUCT * lpTargetGuild = Guild.SearchGuild_Number(lpMsg->iTargetGuildNum);

  00045	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00048	8b f8		 mov	 edi, eax
  0004a	51		 push	 ecx
  0004b	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00050	89 bd e0 fe ff
	ff		 mov	 DWORD PTR _lpReqGuild$[ebp], edi
  00056	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  0005b	8b d8		 mov	 ebx, eax

; 1600 : 
; 1601 : 	if ( lpMsg->btFlag == 1 )

  0005d	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  00060	3c 01		 cmp	 al, 1
  00062	0f 85 a8 00 00
	00		 jne	 $LN22@DGRelation@4

; 1602 : 	{
; 1603 : 		if ( !lpReqGuild || !lpTargetGuild )

  00068	85 ff		 test	 edi, edi
  0006a	74 04		 je	 SHORT $LN20@DGRelation@4
  0006c	85 db		 test	 ebx, ebx
  0006e	75 04		 jne	 SHORT $LN21@DGRelation@4
$LN20@DGRelation@4:

; 1604 : 		{
; 1605 : 			lpMsg->btResult = 0;

  00070	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
$LN21@DGRelation@4:

; 1606 : 		}
; 1607 : 
; 1608 : 		PMSG_RELATIONSHIP_JOIN_BREAKOFF_ANS pMsg ={0};
; 1609 : 
; 1610 : 		pMsg.h.set((LPBYTE)&pMsg, 0xE6, sizeof(pMsg));
; 1611 : 		pMsg.btResult = lpMsg->btResult;

  00074	0f b6 56 08	 movzx	 edx, BYTE PTR [esi+8]

; 1612 : 		pMsg.btRequestType = 2;
; 1613 : 		pMsg.btRelationShipType = lpMsg->btRelationShipType;
; 1614 : 		pMsg.btTargetUserIndexH = SET_NUMBERH(lpMsg->wTargetUserIndex);

  00078	8a 4e 07	 mov	 cl, BYTE PTR [esi+7]
  0007b	33 c0		 xor	 eax, eax
  0007d	89 85 e5 fe ff
	ff		 mov	 DWORD PTR _pMsg$214652[ebp+1], eax
  00083	66 89 85 e9 fe
	ff ff		 mov	 WORD PTR _pMsg$214652[ebp+5], ax
  0008a	88 85 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+7], al
  00090	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  00093	88 85 e7 fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+3], al

; 1615 : 		pMsg.btTargetUserIndexL = SET_NUMBERL(lpMsg->wTargetUserIndex);
; 1616 : 
; 1617 : 		if ( lpMsg->wRequestUserIndex != -1 )

  00099	0f b7 46 04	 movzx	 eax, WORD PTR [esi+4]
  0009d	88 95 e9 fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+5], dl
  000a3	0f b6 56 06	 movzx	 edx, BYTE PTR [esi+6]
  000a7	66 c7 85 e4 fe
	ff ff c1 08	 mov	 WORD PTR _pMsg$214652[ebp], 2241 ; 000008c1H
  000b0	c6 85 e6 fe ff
	ff e6		 mov	 BYTE PTR _pMsg$214652[ebp+2], 230 ; 000000e6H
  000b7	c6 85 e8 fe ff
	ff 02		 mov	 BYTE PTR _pMsg$214652[ebp+4], 2
  000be	88 8d ea fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+6], cl
  000c4	88 95 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+7], dl
  000ca	83 f8 ff	 cmp	 eax, -1
  000cd	74 12		 je	 SHORT $LN19@DGRelation@4

; 1618 : 			DataSend(lpMsg->wRequestUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  000cf	6a 08		 push	 8
  000d1	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$214652[ebp]
  000d7	51		 push	 ecx
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000de	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@DGRelation@4:

; 1619 : 
; 1620 : 		pMsg.btTargetUserIndexH = SET_NUMBERH(lpMsg->wRequestUserIndex);
; 1621 : 		pMsg.btTargetUserIndexL = SET_NUMBERL(lpMsg->wRequestUserIndex);

  000e1	8a 46 04	 mov	 al, BYTE PTR [esi+4]
  000e4	8a 56 05	 mov	 dl, BYTE PTR [esi+5]
  000e7	88 85 eb fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+7], al

; 1622 : 
; 1623 : 		if ( lpMsg->wTargetUserIndex != -1 )

  000ed	0f b7 46 06	 movzx	 eax, WORD PTR [esi+6]
  000f1	88 95 ea fe ff
	ff		 mov	 BYTE PTR _pMsg$214652[ebp+6], dl
  000f7	83 f8 ff	 cmp	 eax, -1
  000fa	74 28		 je	 SHORT $LN18@DGRelation@4

; 1624 : 			DataSend(lpMsg->wTargetUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  000fc	6a 08		 push	 8
  000fe	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$214652[ebp]
  00104	51		 push	 ecx
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0010b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1625 : 
; 1626 : 		if ( lpMsg->btResult == ZT_RESULT_FAIL ||lpMsg->btResult == ZT_RESULT_FAIL_FOR_CASTLE )
; 1627 : 			return;

  0010e	eb 14		 jmp	 SHORT $LN18@DGRelation@4
$LN22@DGRelation@4:

; 1628 : 
; 1629 : 	}
; 1630 : 	else if ( lpMsg->btFlag == 0 )

  00110	84 c0		 test	 al, al
  00112	75 23		 jne	 SHORT $LN30@DGRelation@4

; 1631 : 	{
; 1632 : 		if ( !lpReqGuild || !lpTargetGuild )

  00114	85 ff		 test	 edi, edi
  00116	0f 84 e3 00 00
	00		 je	 $LN31@DGRelation@4
  0011c	85 db		 test	 ebx, ebx
  0011e	0f 84 db 00 00
	00		 je	 $LN31@DGRelation@4
$LN18@DGRelation@4:

; 1633 : 			return;
; 1634 : 
; 1635 : 		if ( lpMsg->btResult == ZT_RESULT_FAIL ||lpMsg->btResult == ZT_RESULT_FAIL_FOR_CASTLE )

  00124	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  00127	84 c0		 test	 al, al
  00129	0f 84 d0 00 00
	00		 je	 $LN31@DGRelation@4
  0012f	3c 10		 cmp	 al, 16			; 00000010H

; 1636 : 			return;

  00131	0f 84 c8 00 00
	00		 je	 $LN31@DGRelation@4
$LN30@DGRelation@4:

; 1637 : 
; 1638 : 	}
; 1639 : 
; 1640 : 	if ( lpMsg->btRelationShipType == G_RELATIONSHIP_RIVAL )

  00137	80 7e 09 02	 cmp	 BYTE PTR [esi+9], 2
  0013b	75 20		 jne	 SHORT $LN9@DGRelation@4

; 1641 : 	{
; 1642 : 		lpReqGuild->SetGuildRival(0);

  0013d	6a 00		 push	 0
  0013f	8b cf		 mov	 ecx, edi
  00141	e8 00 00 00 00	 call	 ?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildRival

; 1643 : 		lpTargetGuild->SetGuildRival(0);

  00146	6a 00		 push	 0
  00148	8b cb		 mov	 ecx, ebx
  0014a	e8 00 00 00 00	 call	 ?SetGuildRival@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildRival

; 1644 : 		lpReqGuild->szGuildRivalName[0]=0;

  0014f	c6 87 28 07 00
	00 00		 mov	 BYTE PTR [edi+1832], 0

; 1645 : 		lpTargetGuild->szGuildRivalName[0]=0;

  00156	c6 83 28 07 00
	00 00		 mov	 BYTE PTR [ebx+1832], 0
$LN9@DGRelation@4:

; 1646 : 	}
; 1647 : 
; 1648 : 	LogAddTD("[U.System][Rival][BreakOff] (  %s ) vs ( %s )", lpReqGuild->Name, lpTargetGuild->Name);

  0015d	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00160	50		 push	 eax
  00161	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
  00164	52		 push	 edx
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@FKCLICLC@?$FLU?4System?$FN?$FLRival?$FN?$FLBreakOff?$FN?5?$CI?5?5?$CF@
  0016a	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv300[ebp], eax
  00170	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00176	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1649 : 
; 1650 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00179	33 db		 xor	 ebx, ebx
  0017b	81 c7 a0 03 00
	00		 add	 edi, 928		; 000003a0H
  00181	eb 0d 8d a4 24
	00 00 00 00 8d
	9b 00 00 00 00	 npad	 15
$LL8@DGRelation@4:

; 1651 : 	{
; 1652 : 		if ( lpReqGuild->Use[n] > 0 )

  00190	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _lpReqGuild$[ebp]
  00196	80 bc 18 40 04
	00 00 00	 cmp	 BYTE PTR [eax+ebx+1088], 0
  0019e	76 56		 jbe	 SHORT $LN7@DGRelation@4

; 1653 : 		{
; 1654 : 			if ( lpReqGuild->Index[n] >= 0 )

  001a0	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  001a4	7c 50		 jl	 SHORT $LN7@DGRelation@4

; 1655 : 			{
; 1656 : 				TNotice _Notice(1);

  001a6	6a 01		 push	 1
  001a8	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214684[ebp]
  001ae	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1657 : 
; 1658 : 				if ( lpMsg->btRelationShipType == G_RELATIONSHIP_UNION )

  001b3	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  001b6	3c 01		 cmp	 al, 1
  001b8	75 0e		 jne	 SHORT $LN3@DGRelation@4

; 1659 : 				{
; 1660 : 					_Notice.SendToUser(lpReqGuild->Index[n], lMsg.Get(MSGGET(6, 170)), lpTargetGuild->Name);

  001ba	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv300[ebp]
  001c0	51		 push	 ecx
  001c1	68 aa 06 00 00	 push	 1706			; 000006aaH
  001c6	eb 10		 jmp	 SHORT $LN35@DGRelation@4
$LN3@DGRelation@4:

; 1661 : 				}
; 1662 : 				else if ( lpMsg->btRelationShipType == G_RELATIONSHIP_RIVAL )

  001c8	3c 02		 cmp	 al, 2
  001ca	75 2a		 jne	 SHORT $LN7@DGRelation@4

; 1663 : 				{
; 1664 : 					_Notice.SendToUser(lpReqGuild->Index[n], lMsg.Get(MSGGET(6, 171)), lpTargetGuild->Name);

  001cc	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv300[ebp]
  001d2	51		 push	 ecx
  001d3	68 ab 06 00 00	 push	 1707			; 000006abH
$LN35@DGRelation@4:
  001d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001dd	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001e2	0f bf 17	 movsx	 edx, WORD PTR [edi]
  001e5	50		 push	 eax
  001e6	52		 push	 edx
  001e7	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR __Notice$214684[ebp]
  001ed	50		 push	 eax
  001ee	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  001f3	83 c4 10	 add	 esp, 16			; 00000010H
$LN7@DGRelation@4:

; 1649 : 
; 1650 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  001f6	43		 inc	 ebx
  001f7	83 c7 02	 add	 edi, 2
  001fa	83 fb 50	 cmp	 ebx, 80			; 00000050H
  001fd	7c 91		 jl	 SHORT $LL8@DGRelation@4
$LN31@DGRelation@4:

; 1665 : 				}
; 1666 : 			}
; 1667 : 		}
; 1668 : 	}
; 1669 : }

  001ff	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00202	5f		 pop	 edi
  00203	5b		 pop	 ebx
  00204	33 cd		 xor	 ecx, ebp
  00206	5e		 pop	 esi
  00207	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020c	8b e5		 mov	 esp, ebp
  0020e	5d		 pop	 ebp
  0020f	c3		 ret	 0
?DGRelationShipAnsBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z ENDP ; DGRelationShipAnsBreakOff
_TEXT	ENDS
PUBLIC	??_C@_0FE@MHBNIMHI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLKickOut?$FN?5?$CI@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGRelationShipAnsKickOutUnionMember@@YAXPAUEXSDHP_KICKOUT_UNIONMEMBER_RESULT@@@Z ; DGRelationShipAnsKickOutUnionMember
;	COMDAT ??_C@_0FE@MHBNIMHI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLKickOut?$FN?5?$CI@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0FE@MHBNIMHI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLKickOut?$FN?5?$CI@ DB '['
	DB	'GS][U.System][Union][KickOut] ( Union Master Guild: %s ), (Un'
	DB	'ion Member Guild: %s)', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\edsprotocol.cpp
CONST	ENDS
;	COMDAT ?DGRelationShipAnsKickOutUnionMember@@YAXPAUEXSDHP_KICKOUT_UNIONMEMBER_RESULT@@@Z
_TEXT	SEGMENT
tv225 = -296						; size = 4
_lpUnionMemberGuild$ = -292				; size = 4
_lpUnionMasterGuild$ = -288				; size = 4
_pMsg$214852 = -284					; size = 7
__Notice$214878 = -276					; size = 272
__Notice$214869 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGRelationShipAnsKickOutUnionMember@@YAXPAUEXSDHP_KICKOUT_UNIONMEMBER_RESULT@@@Z PROC ; DGRelationShipAnsKickOutUnionMember, COMDAT

; 1849 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00018	57		 push	 edi

; 1850 : 
; 1851 : 	_GUILD_INFO_STRUCT * lpUnionMasterGuild = Guild.SearchGuild(lpMsg->szUnionMasterGuildName);

  00019	8d 5e 0a	 lea	 ebx, DWORD PTR [esi+10]
  0001c	53		 push	 ebx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00022	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00027	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _lpUnionMasterGuild$[ebp], eax

; 1852 : 	_GUILD_INFO_STRUCT * lpUnionMemberGuild = Guild.SearchGuild(lpMsg->szUnionMemberGuildName);

  0002d	8d 46 13	 lea	 eax, DWORD PTR [esi+19]
  00030	50		 push	 eax
  00031	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  00036	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv225[ebp], eax
  0003c	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00041	8b f8		 mov	 edi, eax

; 1853 : 
; 1854 : 	if ( lpMsg->btFlag == 1 )

  00043	8a 46 04	 mov	 al, BYTE PTR [esi+4]
  00046	89 bd dc fe ff
	ff		 mov	 DWORD PTR _lpUnionMemberGuild$[ebp], edi
  0004c	3c 01		 cmp	 al, 1
  0004e	75 6f		 jne	 SHORT $LN21@DGRelation@5

; 1855 : 	{
; 1856 : 		if ( !lpUnionMasterGuild )

  00050	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR _lpUnionMasterGuild$[ebp], 0
  00057	75 04		 jne	 SHORT $LN20@DGRelation@5

; 1857 : 		{
; 1858 : 			lpMsg->btResult = 0;

  00059	c6 46 09 00	 mov	 BYTE PTR [esi+9], 0
$LN20@DGRelation@5:

; 1859 : 		}
; 1860 : 
; 1861 : 		PMSG_KICKOUT_UNIONMEMBER_RESULT pMsg ={0};
; 1862 : 
; 1863 : 		pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x01, sizeof(pMsg));
; 1864 : 		pMsg.btResult = lpMsg->btResult;
; 1865 : 		pMsg.btRequestType = 2;
; 1866 : 		pMsg.btRelationShipType = 1;
; 1867 : 
; 1868 : 		DataSend(lpMsg->wRequestUserIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  0005d	0f b7 56 06	 movzx	 edx, WORD PTR [esi+6]
  00061	33 c0		 xor	 eax, eax
  00063	89 85 e5 fe ff
	ff		 mov	 DWORD PTR _pMsg$214852[ebp+1], eax
  00069	66 89 85 e9 fe
	ff ff		 mov	 WORD PTR _pMsg$214852[ebp+5], ax
  00070	0f b6 46 09	 movzx	 eax, BYTE PTR [esi+9]
  00074	6a 07		 push	 7
  00076	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$214852[ebp]
  0007c	51		 push	 ecx
  0007d	52		 push	 edx
  0007e	c7 85 e4 fe ff
	ff c1 07 eb 01	 mov	 DWORD PTR _pMsg$214852[ebp], 32180161 ; 01eb07c1H
  00088	88 85 e8 fe ff
	ff		 mov	 BYTE PTR _pMsg$214852[ebp+4], al
  0008e	66 c7 85 e9 fe
	ff ff 02 01	 mov	 WORD PTR _pMsg$214852[ebp+5], 258 ; 00000102H
  00097	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1869 : 
; 1870 : 		if ( lpMsg->btResult == 0 || lpMsg->btResult == 0x10 )

  0009c	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	84 c0		 test	 al, al
  000a4	0f 84 35 01 00
	00		 je	 $LN3@DGRelation@5
  000aa	3c 10		 cmp	 al, 16			; 00000010H
  000ac	75 30		 jne	 SHORT $LN30@DGRelation@5
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx

; 1913 : 			}
; 1914 : 		}
; 1915 : 	}
; 1916 : 
; 1917 : }

  000b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b4	33 cd		 xor	 ecx, ebp
  000b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
$LN21@DGRelation@5:

; 1871 : 			return;
; 1872 : 	}
; 1873 : 	else if ( lpMsg->btFlag == 0 )

  000bf	84 c0		 test	 al, al
  000c1	75 1b		 jne	 SHORT $LN30@DGRelation@5

; 1874 : 	{
; 1875 : 		if ( !lpUnionMemberGuild )

  000c3	85 ff		 test	 edi, edi
  000c5	0f 84 14 01 00
	00		 je	 $LN3@DGRelation@5

; 1876 : 			return;
; 1877 : 
; 1878 : 		if ( lpMsg->btResult == 0 || lpMsg->btResult == 0x10 )

  000cb	8a 46 09	 mov	 al, BYTE PTR [esi+9]
  000ce	84 c0		 test	 al, al
  000d0	0f 84 09 01 00
	00		 je	 $LN3@DGRelation@5
  000d6	3c 10		 cmp	 al, 16			; 00000010H

; 1879 : 			return;

  000d8	0f 84 01 01 00
	00		 je	 $LN3@DGRelation@5
$LN30@DGRelation@5:

; 1880 : 	}		
; 1881 : 
; 1882 : 	if ( lpUnionMasterGuild )

  000de	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR _lpUnionMasterGuild$[ebp], 0
  000e5	74 76		 je	 SHORT $LN9@DGRelation@5

; 1883 : 	{
; 1884 : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  000e7	8b b5 e0 fe ff
	ff		 mov	 esi, DWORD PTR _lpUnionMasterGuild$[ebp]
  000ed	33 ff		 xor	 edi, edi
  000ef	81 c6 a0 03 00
	00		 add	 esi, 928		; 000003a0H
  000f5	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL32@DGRelation@5:

; 1885 : 		{
; 1886 : 			if ( lpUnionMasterGuild->Use[n] > 0 )

  00100	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _lpUnionMasterGuild$[ebp]
  00106	80 bc 38 40 04
	00 00 00	 cmp	 BYTE PTR [eax+edi+1088], 0
  0010e	76 3e		 jbe	 SHORT $LN10@DGRelation@5

; 1887 : 			{
; 1888 : 				if ( lpUnionMasterGuild->Index[n] >= 0 )

  00110	66 83 3e 00	 cmp	 WORD PTR [esi], 0
  00114	7c 38		 jl	 SHORT $LN10@DGRelation@5

; 1889 : 				{
; 1890 : 					TNotice _Notice(1);

  00116	6a 01		 push	 1
  00118	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214869[ebp]
  0011e	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1891 : 					_Notice.SendToUser(lpUnionMasterGuild->Index[n], lMsg.Get(MSGGET(6, 169)),
; 1892 : 						lpMsg->szUnionMemberGuildName, lpMsg->szUnionMasterGuildName);

  00123	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv225[ebp]
  00129	53		 push	 ebx
  0012a	51		 push	 ecx
  0012b	68 a9 06 00 00	 push	 1705			; 000006a9H
  00130	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00135	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0013a	0f bf 16	 movsx	 edx, WORD PTR [esi]
  0013d	50		 push	 eax
  0013e	52		 push	 edx
  0013f	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR __Notice$214869[ebp]
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  0014b	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@DGRelation@5:

; 1883 : 	{
; 1884 : 		for ( int n=0;n<MAX_USER_GUILD;n++)

  0014e	47		 inc	 edi
  0014f	83 c6 02	 add	 esi, 2
  00152	83 ff 50	 cmp	 edi, 80			; 00000050H
  00155	7c a9		 jl	 SHORT $LL32@DGRelation@5
  00157	8b bd dc fe ff
	ff		 mov	 edi, DWORD PTR _lpUnionMemberGuild$[ebp]
$LN9@DGRelation@5:

; 1893 : 				}
; 1894 : 			}
; 1895 : 		}
; 1896 : 	}
; 1897 : 
; 1898 : 	LogAddTD("[GS][U.System][Union][KickOut] ( Union Master Guild: %s ), (Union Member Guild: %s)", lpMsg->szUnionMasterGuildName, lpMsg->szUnionMemberGuildName);

  0015d	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv225[ebp]
  00163	51		 push	 ecx
  00164	53		 push	 ebx
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@MHBNIMHI@?$FLGS?$FN?$FLU?4System?$FN?$FLUnion?$FN?$FLKickOut?$FN?5?$CI@
  0016a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00170	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1899 : 
; 1900 : 	if ( !lpUnionMemberGuild )

  00173	85 ff		 test	 edi, edi
  00175	74 68		 je	 SHORT $LN3@DGRelation@5

; 1901 : 		return;
; 1902 : 
; 1903 : 	lpUnionMemberGuild->SetGuildUnion(0);

  00177	6a 00		 push	 0
  00179	8b cf		 mov	 ecx, edi
  0017b	e8 00 00 00 00	 call	 ?SetGuildUnion@_GUILD_INFO_STRUCT@@QAEXH@Z ; _GUILD_INFO_STRUCT::SetGuildUnion

; 1904 : 
; 1905 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00180	33 f6		 xor	 esi, esi
  00182	81 c7 a0 03 00
	00		 add	 edi, 928		; 000003a0H
  00188	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL5@DGRelation@5:

; 1906 : 	{
; 1907 : 		if ( lpUnionMemberGuild->Use[n] > 0 )

  00190	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR _lpUnionMemberGuild$[ebp]
  00196	80 bc 32 40 04
	00 00 00	 cmp	 BYTE PTR [edx+esi+1088], 0
  0019e	76 36		 jbe	 SHORT $LN4@DGRelation@5

; 1908 : 		{
; 1909 : 			if ( lpUnionMemberGuild->Index[n] >= 0 )

  001a0	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  001a4	7c 30		 jl	 SHORT $LN4@DGRelation@5

; 1910 : 			{
; 1911 : 				TNotice _Notice(1);

  001a6	6a 01		 push	 1
  001a8	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214878[ebp]
  001ae	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

; 1912 : 				_Notice.SendToUser(lpUnionMemberGuild->Index[n], lMsg.Get(MSGGET(6, 168)));

  001b3	68 a8 06 00 00	 push	 1704			; 000006a8H
  001b8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001bd	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001c2	50		 push	 eax
  001c3	0f bf 07	 movsx	 eax, WORD PTR [edi]
  001c6	50		 push	 eax
  001c7	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR __Notice$214878[ebp]
  001cd	51		 push	 ecx
  001ce	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  001d3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@DGRelation@5:

; 1904 : 
; 1905 : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  001d6	46		 inc	 esi
  001d7	83 c7 02	 add	 edi, 2
  001da	83 fe 50	 cmp	 esi, 80			; 00000050H
  001dd	7c b1		 jl	 SHORT $LL5@DGRelation@5
$LN3@DGRelation@5:

; 1913 : 			}
; 1914 : 		}
; 1915 : 	}
; 1916 : 
; 1917 : }

  001df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e2	5f		 pop	 edi
  001e3	5e		 pop	 esi
  001e4	33 cd		 xor	 ecx, ebp
  001e6	5b		 pop	 ebx
  001e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ec	8b e5		 mov	 esp, ebp
  001ee	5d		 pop	 ebp
  001ef	c3		 ret	 0
?DGRelationShipAnsKickOutUnionMember@@YAXPAUEXSDHP_KICKOUT_UNIONMEMBER_RESULT@@@Z ENDP ; DGRelationShipAnsKickOutUnionMember
_TEXT	ENDS
PUBLIC	?ZtDataServerProtocolCore@@YAXEPAEH@Z		; ZtDataServerProtocolCore
; Function compile flags: /Ogtp
;	COMDAT ?ZtDataServerProtocolCore@@YAXEPAEH@Z
_TEXT	SEGMENT
_protoNum$ = 8						; size = 1
_aRecv$ = 12						; size = 4
_aLen$ = 16						; size = 4
?ZtDataServerProtocolCore@@YAXEPAEH@Z PROC		; ZtDataServerProtocolCore, COMDAT

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 37   : 	switch ( protoNum )

  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _protoNum$[ebp]
  00007	3d eb 00 00 00	 cmp	 eax, 235		; 000000ebH
  0000c	0f 87 f3 01 00
	00		 ja	 $LN38@ZtDataServ@3
  00012	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN42@ZtDataServ@3[eax]
  00019	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN44@ZtDataServ@3[eax*4]
$LN37@ZtDataServ@3:

; 38   : 	{
; 39   : 		case 0x00:
; 40   : 			ZtDataServerLoginResult((SDHP_RESULT *)aRecv);

  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ?ZtDataServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ; ZtDataServerLoginResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00029	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN36@ZtDataServ@3:

; 41   : 			break;
; 42   : 		case 0x02:
; 43   : 			GDCharCloseRecv((SDHP_USERCLOSE *)aRecv);

  0002e	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?GDCharCloseRecv@@YAXPAUSDHP_USERCLOSE@@@Z ; GDCharCloseRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00037	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN35@ZtDataServ@3:

; 44   : 			break;
; 45   : 		case 0x30:
; 46   : 			GDGuildCreateRecv((SDHP_GUILDCREATE_RESULT *)aRecv);

  0003c	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?GDGuildCreateRecv@@YAXPAUSDHP_GUILDCREATE_RESULT@@@Z ; GDGuildCreateRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00045	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN34@ZtDataServ@3:

; 47   : 			break;
; 48   : 		case 0x31:
; 49   : 			GDGuildDestroyRecv((SDHP_GUILDDESTROY_RESULT *)aRecv);

  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ?GDGuildDestroyRecv@@YAXPAUSDHP_GUILDDESTROY_RESULT@@@Z ; GDGuildDestroyRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00053	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN33@ZtDataServ@3:

; 50   : 			break;
; 51   : 		case 0x32:
; 52   : 			GDGuildMemberAddResult((SDHP_GUILDMEMBERADD_RESULT *)aRecv);

  00058	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 ?GDGuildMemberAddResult@@YAXPAUSDHP_GUILDMEMBERADD_RESULT@@@Z ; GDGuildMemberAddResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00061	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
$LN32@ZtDataServ@3:

; 53   : 			break;
; 54   : 		case 0x33:
; 55   : 			GDGuildMemberDelResult((SDHP_GUILDMEMBERDEL_RESULT *)aRecv);

  00066	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?GDGuildMemberDelResult@@YAXPAUSDHP_GUILDMEMBERDEL_RESULT@@@Z ; GDGuildMemberDelResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  0006f	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
$LN31@ZtDataServ@3:

; 56   : 			break;
; 57   : 		case 0x35:
; 58   : 			DGGuildMemberInfo((SDHP_GUILDMEMBER_INFO *)aRecv);

  00074	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?DGGuildMemberInfo@@YAXPAUSDHP_GUILDMEMBER_INFO@@@Z ; DGGuildMemberInfo

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  0007d	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
$LN30@ZtDataServ@3:

; 59   : 			break;
; 60   : 		case 0x36:
; 61   : 			DGGuildMasterListRecv(aRecv);

  00082	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 ?DGGuildMasterListRecv@@YAXPAE@Z ; DGGuildMasterListRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  0008b	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN29@ZtDataServ@3:

; 62   : 			break;
; 63   : 		case 0x37:
; 64   : 			GDGuildScoreUpdateRecv((SDHP_GUILDSCOREUPDATE *)aRecv);

  00090	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?GDGuildScoreUpdateRecv@@YAXPAUSDHP_GUILDSCOREUPDATE@@@Z ; GDGuildScoreUpdateRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00099	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$LN28@ZtDataServ@3:

; 65   : 			break;
; 66   : 		case 0x38:
; 67   : 			DGGuildNoticeRecv((SDHP_GUILDNOTICE *)aRecv);

  0009e	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ?DGGuildNoticeRecv@@YAXPAUSDHP_GUILDNOTICE@@@Z ; DGGuildNoticeRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000a7	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
$LN27@ZtDataServ@3:

; 68   : 			break;
; 69   : 		case 0x40:
; 70   : 			DGGuildList((SDHP_GUILDCREATED *)aRecv);

  000ac	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 ?DGGuildList@@YAXPAUSDHP_GUILDCREATED@@@Z ; DGGuildList

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000b5	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN26@ZtDataServ@3:

; 71   : 			break;
; 72   : 		case 0x41:
; 73   : 			DGGuildListState((SDHP_GUILDLISTSTATE *)aRecv);

  000ba	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?DGGuildListState@@YAXPAUSDHP_GUILDLISTSTATE@@@Z ; DGGuildListState

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000c3	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
$LN25@ZtDataServ@3:

; 74   : 			break;
; 75   : 		case 0x50:
; 76   : 			DGGuildServerGroupChattingRecv((EXSDHP_SERVERGROUP_GUILD_CHATTING_RECV *)aRecv);

  000c8	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  000cb	51		 push	 ecx
  000cc	e8 00 00 00 00	 call	 ?DGGuildServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_GUILD_CHATTING_RECV@@@Z ; DGGuildServerGroupChattingRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000d1	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
$LN24@ZtDataServ@3:

; 77   : 			break;
; 78   : 		case 0x51:
; 79   : 			DGUnionServerGroupChattingRecv((EXSDHP_SERVERGROUP_UNION_CHATTING_RECV *)aRecv);

  000d6	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  000d9	52		 push	 edx
  000da	e8 00 00 00 00	 call	 ?DGUnionServerGroupChattingRecv@@YAXPAUEXSDHP_SERVERGROUP_UNION_CHATTING_RECV@@@Z ; DGUnionServerGroupChattingRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000df	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
$LN23@ZtDataServ@3:

; 80   : 			break;
; 81   : 		case 0xE1:
; 82   : 			DGGuildAnsAssignStatus((EXSDHP_GUILD_ASSIGN_STATUS_RESULT *)aRecv);

  000e4	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?DGGuildAnsAssignStatus@@YAXPAUEXSDHP_GUILD_ASSIGN_STATUS_RESULT@@@Z ; DGGuildAnsAssignStatus

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000ed	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
$LN22@ZtDataServ@3:

; 83   : 			break;
; 84   : 		case 0xE2:
; 85   : 			DGGuildAnsAssignType((EXSDHP_GUILD_ASSIGN_TYPE_RESULT *)aRecv);

  000f2	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  000f5	51		 push	 ecx
  000f6	e8 00 00 00 00	 call	 ?DGGuildAnsAssignType@@YAXPAUEXSDHP_GUILD_ASSIGN_TYPE_RESULT@@@Z ; DGGuildAnsAssignType

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  000fb	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  000fe	5d		 pop	 ebp
  000ff	c3		 ret	 0
$LN21@ZtDataServ@3:

; 86   : 			break;
; 87   : 		case 0xE5:
; 88   : 			DGRelationShipAnsJoin((EXSDHP_RELATIONSHIP_JOIN_RESULT *)aRecv);

  00100	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  00103	52		 push	 edx
  00104	e8 00 00 00 00	 call	 ?DGRelationShipAnsJoin@@YAXPAUEXSDHP_RELATIONSHIP_JOIN_RESULT@@@Z ; DGRelationShipAnsJoin

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00109	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
$LN20@ZtDataServ@3:

; 89   : 			break;
; 90   : 		case 0xE6:
; 91   : 			DGRelationShipAnsBreakOff((EXSDHP_RELATIONSHIP_BREAKOFF_RESULT *)aRecv);

  0010e	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?DGRelationShipAnsBreakOff@@YAXPAUEXSDHP_RELATIONSHIP_BREAKOFF_RESULT@@@Z ; DGRelationShipAnsBreakOff

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00117	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0011a	5d		 pop	 ebp
  0011b	c3		 ret	 0
$LN19@ZtDataServ@3:

; 92   : 			break;
; 93   : 		case 0xE7:
; 94   : 			DGRelationShipListRecv((EXSDHP_UNION_RELATIONSHIP_LIST *)aRecv);

  0011c	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  0011f	51		 push	 ecx
  00120	e8 00 00 00 00	 call	 ?DGRelationShipListRecv@@YAXPAUEXSDHP_UNION_RELATIONSHIP_LIST@@@Z ; DGRelationShipListRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00125	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00128	5d		 pop	 ebp
  00129	c3		 ret	 0
$LN18@ZtDataServ@3:

; 95   : 			break;
; 96   : 		case 0xE8:
; 97   : 			DGRelationShipNotificationRecv((EXSDHP_NOTIFICATION_RELATIONSHIP *)aRecv);

  0012a	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  0012d	52		 push	 edx
  0012e	e8 00 00 00 00	 call	 ?DGRelationShipNotificationRecv@@YAXPAUEXSDHP_NOTIFICATION_RELATIONSHIP@@@Z ; DGRelationShipNotificationRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00133	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
$LN17@ZtDataServ@3:

; 98   : 			break;
; 99   : 		case 0xE9:
; 100  : 			DGUnionListRecv(aRecv);

  00138	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?DGUnionListRecv@@YAXPAE@Z ; DGUnionListRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00141	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00144	5d		 pop	 ebp
  00145	c3		 ret	 0
$LN16@ZtDataServ@3:

; 101  : 			break;
; 102  : 		case 0xEB:
; 103  : 			{
; 104  : 				PMSG_DEFAULT2 * lpDef = (PMSG_DEFAULT2 *)aRecv;
; 105  : 
; 106  : 				switch ( lpDef->subcode )

  00146	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  00149	0f b6 41 03	 movzx	 eax, BYTE PTR [ecx+3]
  0014d	48		 dec	 eax
  0014e	0f 85 b1 00 00
	00		 jne	 $LN38@ZtDataServ@3

; 107  : 				{
; 108  : 					case 0x01:
; 109  : 						DGRelationShipAnsKickOutUnionMember((EXSDHP_KICKOUT_UNIONMEMBER_RESULT *)aRecv);

  00154	51		 push	 ecx
  00155	e8 00 00 00 00	 call	 ?DGRelationShipAnsKickOutUnionMember@@YAXPAUEXSDHP_KICKOUT_UNIONMEMBER_RESULT@@@Z ; DGRelationShipAnsKickOutUnionMember

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  0015a	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
$LN12@ZtDataServ@3:

; 110  : 						break;
; 111  : 				}
; 112  : 			}
; 113  : 			break;
; 114  : 		case 0x60:
; 115  : 			FriendListResult(aRecv);

  0015f	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  00162	51		 push	 ecx
  00163	e8 00 00 00 00	 call	 ?FriendListResult@@YAXPAE@Z ; FriendListResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00168	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  0016b	5d		 pop	 ebp
  0016c	c3		 ret	 0
$LN11@ZtDataServ@3:

; 116  : 			break;
; 117  : 		case 0x61:
; 118  : 			WaitFriendListResult((FHP_WAITFRIENDLIST_COUNT *)aRecv);

  0016d	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  00170	52		 push	 edx
  00171	e8 00 00 00 00	 call	 ?WaitFriendListResult@@YAXPAUFHP_WAITFRIENDLIST_COUNT@@@Z ; WaitFriendListResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00176	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00179	5d		 pop	 ebp
  0017a	c3		 ret	 0
$LN10@ZtDataServ@3:

; 119  : 			break;
; 120  : 		case 0x62:
; 121  : 			FriendStateRecv((FHP_FRIEND_STATE *)aRecv);

  0017b	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?FriendStateRecv@@YAXPAUFHP_FRIEND_STATE@@@Z ; FriendStateRecv

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00184	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00187	5d		 pop	 ebp
  00188	c3		 ret	 0
$LN9@ZtDataServ@3:

; 122  : 			break;
; 123  : 		case 0x63:
; 124  : 			FriendAddResult((FHP_FRIEND_ADD_RESULT *)aRecv);

  00189	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  0018c	51		 push	 ecx
  0018d	e8 00 00 00 00	 call	 ?FriendAddResult@@YAXPAUFHP_FRIEND_ADD_RESULT@@@Z ; FriendAddResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  00192	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  00195	5d		 pop	 ebp
  00196	c3		 ret	 0
$LN8@ZtDataServ@3:

; 125  : 			break;
; 126  : 		case 0x64:
; 127  : 			WaitFriendAddResult((FHP_WAITFRIEND_ADD_RESULT *)aRecv);

  00197	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  0019a	52		 push	 edx
  0019b	e8 00 00 00 00	 call	 ?WaitFriendAddResult@@YAXPAUFHP_WAITFRIEND_ADD_RESULT@@@Z ; WaitFriendAddResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001a0	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001a3	5d		 pop	 ebp
  001a4	c3		 ret	 0
$LN7@ZtDataServ@3:

; 128  : 			break;
; 129  : 		case 0x65:
; 130  : 			FriendDelResult((FHP_FRIEND_DEL_RESULT *)aRecv);

  001a5	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?FriendDelResult@@YAXPAUFHP_FRIEND_DEL_RESULT@@@Z ; FriendDelResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001ae	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001b1	5d		 pop	 ebp
  001b2	c3		 ret	 0
$LN6@ZtDataServ@3:

; 131  : 			break;
; 132  : 		case 0x66:
; 133  : 			FriendChatRoomCreateResult((FHP_FRIEND_CHATROOM_CREATE_RESULT *)aRecv);

  001b3	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  001b6	51		 push	 ecx
  001b7	e8 00 00 00 00	 call	 ?FriendChatRoomCreateResult@@YAXPAUFHP_FRIEND_CHATROOM_CREATE_RESULT@@@Z ; FriendChatRoomCreateResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001bc	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001bf	5d		 pop	 ebp
  001c0	c3		 ret	 0
$LN5@ZtDataServ@3:

; 134  : 			break;
; 135  : 		case 0x70:
; 136  : 			FriendMemoSendResult((FHP_FRIEND_MEMO_SEND_RESULT *)aRecv);

  001c1	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  001c4	52		 push	 edx
  001c5	e8 00 00 00 00	 call	 ?FriendMemoSendResult@@YAXPAUFHP_FRIEND_MEMO_SEND_RESULT@@@Z ; FriendMemoSendResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001ca	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001cd	5d		 pop	 ebp
  001ce	c3		 ret	 0
$LN4@ZtDataServ@3:

; 137  : 			break;
; 138  : 		case 0x71:
; 139  : 			FriendMemoList((FHP_FRIEND_MEMO_LIST *)aRecv);

  001cf	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?FriendMemoList@@YAXPAUFHP_FRIEND_MEMO_LIST@@@Z ; FriendMemoList

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001d8	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001db	5d		 pop	 ebp
  001dc	c3		 ret	 0
$LN3@ZtDataServ@3:

; 140  : 			break;
; 141  : 		case 0x72:
; 142  : 			FriendMemoRead((FHP_FRIEND_MEMO_RECV *)aRecv);

  001dd	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ?FriendMemoRead@@YAXPAUFHP_FRIEND_MEMO_RECV@@@Z ; FriendMemoRead

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001e6	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001e9	5d		 pop	 ebp
  001ea	c3		 ret	 0
$LN2@ZtDataServ@3:

; 143  : 			break;
; 144  : 		case 0x73:
; 145  : 			FriendMemoDelResult((FHP_FRIEND_MEMO_DEL_RESULT *)aRecv);

  001eb	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  001ee	52		 push	 edx
  001ef	e8 00 00 00 00	 call	 ?FriendMemoDelResult@@YAXPAUFHP_FRIEND_MEMO_DEL_RESULT@@@Z ; FriendMemoDelResult

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001f4	83 c4 04	 add	 esp, 4

; 149  : 			break;
; 150  : 	}
; 151  : }

  001f7	5d		 pop	 ebp
  001f8	c3		 ret	 0
$LN1@ZtDataServ@3:

; 146  : 			break;
; 147  : 		case 0x74:
; 148  : 			FriendRoomInvitationRecv((FHP_FRIEND_INVITATION_RET *)aRecv);

  001f9	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ?FriendRoomInvitationRecv@@YAXPAUFHP_FRIEND_INVITATION_RET@@@Z ; FriendRoomInvitationRecv
  00202	83 c4 04	 add	 esp, 4
$LN38@ZtDataServ@3:

; 149  : 			break;
; 150  : 	}
; 151  : }

  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN44@ZtDataServ@3:
  00208	00 00 00 00	 DD	 $LN37@ZtDataServ@3
  0020c	00 00 00 00	 DD	 $LN36@ZtDataServ@3
  00210	00 00 00 00	 DD	 $LN35@ZtDataServ@3
  00214	00 00 00 00	 DD	 $LN34@ZtDataServ@3
  00218	00 00 00 00	 DD	 $LN33@ZtDataServ@3
  0021c	00 00 00 00	 DD	 $LN32@ZtDataServ@3
  00220	00 00 00 00	 DD	 $LN31@ZtDataServ@3
  00224	00 00 00 00	 DD	 $LN30@ZtDataServ@3
  00228	00 00 00 00	 DD	 $LN29@ZtDataServ@3
  0022c	00 00 00 00	 DD	 $LN28@ZtDataServ@3
  00230	00 00 00 00	 DD	 $LN27@ZtDataServ@3
  00234	00 00 00 00	 DD	 $LN26@ZtDataServ@3
  00238	00 00 00 00	 DD	 $LN25@ZtDataServ@3
  0023c	00 00 00 00	 DD	 $LN24@ZtDataServ@3
  00240	00 00 00 00	 DD	 $LN12@ZtDataServ@3
  00244	00 00 00 00	 DD	 $LN11@ZtDataServ@3
  00248	00 00 00 00	 DD	 $LN10@ZtDataServ@3
  0024c	00 00 00 00	 DD	 $LN9@ZtDataServ@3
  00250	00 00 00 00	 DD	 $LN8@ZtDataServ@3
  00254	00 00 00 00	 DD	 $LN7@ZtDataServ@3
  00258	00 00 00 00	 DD	 $LN6@ZtDataServ@3
  0025c	00 00 00 00	 DD	 $LN5@ZtDataServ@3
  00260	00 00 00 00	 DD	 $LN4@ZtDataServ@3
  00264	00 00 00 00	 DD	 $LN3@ZtDataServ@3
  00268	00 00 00 00	 DD	 $LN2@ZtDataServ@3
  0026c	00 00 00 00	 DD	 $LN1@ZtDataServ@3
  00270	00 00 00 00	 DD	 $LN23@ZtDataServ@3
  00274	00 00 00 00	 DD	 $LN22@ZtDataServ@3
  00278	00 00 00 00	 DD	 $LN21@ZtDataServ@3
  0027c	00 00 00 00	 DD	 $LN20@ZtDataServ@3
  00280	00 00 00 00	 DD	 $LN19@ZtDataServ@3
  00284	00 00 00 00	 DD	 $LN18@ZtDataServ@3
  00288	00 00 00 00	 DD	 $LN17@ZtDataServ@3
  0028c	00 00 00 00	 DD	 $LN16@ZtDataServ@3
  00290	00 00 00 00	 DD	 $LN38@ZtDataServ@3
$LN42@ZtDataServ@3:
  00294	00		 DB	 0
  00295	22		 DB	 34			; 00000022H
  00296	01		 DB	 1
  00297	22		 DB	 34			; 00000022H
  00298	22		 DB	 34			; 00000022H
  00299	22		 DB	 34			; 00000022H
  0029a	22		 DB	 34			; 00000022H
  0029b	22		 DB	 34			; 00000022H
  0029c	22		 DB	 34			; 00000022H
  0029d	22		 DB	 34			; 00000022H
  0029e	22		 DB	 34			; 00000022H
  0029f	22		 DB	 34			; 00000022H
  002a0	22		 DB	 34			; 00000022H
  002a1	22		 DB	 34			; 00000022H
  002a2	22		 DB	 34			; 00000022H
  002a3	22		 DB	 34			; 00000022H
  002a4	22		 DB	 34			; 00000022H
  002a5	22		 DB	 34			; 00000022H
  002a6	22		 DB	 34			; 00000022H
  002a7	22		 DB	 34			; 00000022H
  002a8	22		 DB	 34			; 00000022H
  002a9	22		 DB	 34			; 00000022H
  002aa	22		 DB	 34			; 00000022H
  002ab	22		 DB	 34			; 00000022H
  002ac	22		 DB	 34			; 00000022H
  002ad	22		 DB	 34			; 00000022H
  002ae	22		 DB	 34			; 00000022H
  002af	22		 DB	 34			; 00000022H
  002b0	22		 DB	 34			; 00000022H
  002b1	22		 DB	 34			; 00000022H
  002b2	22		 DB	 34			; 00000022H
  002b3	22		 DB	 34			; 00000022H
  002b4	22		 DB	 34			; 00000022H
  002b5	22		 DB	 34			; 00000022H
  002b6	22		 DB	 34			; 00000022H
  002b7	22		 DB	 34			; 00000022H
  002b8	22		 DB	 34			; 00000022H
  002b9	22		 DB	 34			; 00000022H
  002ba	22		 DB	 34			; 00000022H
  002bb	22		 DB	 34			; 00000022H
  002bc	22		 DB	 34			; 00000022H
  002bd	22		 DB	 34			; 00000022H
  002be	22		 DB	 34			; 00000022H
  002bf	22		 DB	 34			; 00000022H
  002c0	22		 DB	 34			; 00000022H
  002c1	22		 DB	 34			; 00000022H
  002c2	22		 DB	 34			; 00000022H
  002c3	22		 DB	 34			; 00000022H
  002c4	02		 DB	 2
  002c5	03		 DB	 3
  002c6	04		 DB	 4
  002c7	05		 DB	 5
  002c8	22		 DB	 34			; 00000022H
  002c9	06		 DB	 6
  002ca	07		 DB	 7
  002cb	08		 DB	 8
  002cc	09		 DB	 9
  002cd	22		 DB	 34			; 00000022H
  002ce	22		 DB	 34			; 00000022H
  002cf	22		 DB	 34			; 00000022H
  002d0	22		 DB	 34			; 00000022H
  002d1	22		 DB	 34			; 00000022H
  002d2	22		 DB	 34			; 00000022H
  002d3	22		 DB	 34			; 00000022H
  002d4	0a		 DB	 10			; 0000000aH
  002d5	0b		 DB	 11			; 0000000bH
  002d6	22		 DB	 34			; 00000022H
  002d7	22		 DB	 34			; 00000022H
  002d8	22		 DB	 34			; 00000022H
  002d9	22		 DB	 34			; 00000022H
  002da	22		 DB	 34			; 00000022H
  002db	22		 DB	 34			; 00000022H
  002dc	22		 DB	 34			; 00000022H
  002dd	22		 DB	 34			; 00000022H
  002de	22		 DB	 34			; 00000022H
  002df	22		 DB	 34			; 00000022H
  002e0	22		 DB	 34			; 00000022H
  002e1	22		 DB	 34			; 00000022H
  002e2	22		 DB	 34			; 00000022H
  002e3	22		 DB	 34			; 00000022H
  002e4	0c		 DB	 12			; 0000000cH
  002e5	0d		 DB	 13			; 0000000dH
  002e6	22		 DB	 34			; 00000022H
  002e7	22		 DB	 34			; 00000022H
  002e8	22		 DB	 34			; 00000022H
  002e9	22		 DB	 34			; 00000022H
  002ea	22		 DB	 34			; 00000022H
  002eb	22		 DB	 34			; 00000022H
  002ec	22		 DB	 34			; 00000022H
  002ed	22		 DB	 34			; 00000022H
  002ee	22		 DB	 34			; 00000022H
  002ef	22		 DB	 34			; 00000022H
  002f0	22		 DB	 34			; 00000022H
  002f1	22		 DB	 34			; 00000022H
  002f2	22		 DB	 34			; 00000022H
  002f3	22		 DB	 34			; 00000022H
  002f4	0e		 DB	 14			; 0000000eH
  002f5	0f		 DB	 15			; 0000000fH
  002f6	10		 DB	 16			; 00000010H
  002f7	11		 DB	 17			; 00000011H
  002f8	12		 DB	 18			; 00000012H
  002f9	13		 DB	 19			; 00000013H
  002fa	14		 DB	 20			; 00000014H
  002fb	22		 DB	 34			; 00000022H
  002fc	22		 DB	 34			; 00000022H
  002fd	22		 DB	 34			; 00000022H
  002fe	22		 DB	 34			; 00000022H
  002ff	22		 DB	 34			; 00000022H
  00300	22		 DB	 34			; 00000022H
  00301	22		 DB	 34			; 00000022H
  00302	22		 DB	 34			; 00000022H
  00303	22		 DB	 34			; 00000022H
  00304	15		 DB	 21			; 00000015H
  00305	16		 DB	 22			; 00000016H
  00306	17		 DB	 23			; 00000017H
  00307	18		 DB	 24			; 00000018H
  00308	19		 DB	 25			; 00000019H
  00309	22		 DB	 34			; 00000022H
  0030a	22		 DB	 34			; 00000022H
  0030b	22		 DB	 34			; 00000022H
  0030c	22		 DB	 34			; 00000022H
  0030d	22		 DB	 34			; 00000022H
  0030e	22		 DB	 34			; 00000022H
  0030f	22		 DB	 34			; 00000022H
  00310	22		 DB	 34			; 00000022H
  00311	22		 DB	 34			; 00000022H
  00312	22		 DB	 34			; 00000022H
  00313	22		 DB	 34			; 00000022H
  00314	22		 DB	 34			; 00000022H
  00315	22		 DB	 34			; 00000022H
  00316	22		 DB	 34			; 00000022H
  00317	22		 DB	 34			; 00000022H
  00318	22		 DB	 34			; 00000022H
  00319	22		 DB	 34			; 00000022H
  0031a	22		 DB	 34			; 00000022H
  0031b	22		 DB	 34			; 00000022H
  0031c	22		 DB	 34			; 00000022H
  0031d	22		 DB	 34			; 00000022H
  0031e	22		 DB	 34			; 00000022H
  0031f	22		 DB	 34			; 00000022H
  00320	22		 DB	 34			; 00000022H
  00321	22		 DB	 34			; 00000022H
  00322	22		 DB	 34			; 00000022H
  00323	22		 DB	 34			; 00000022H
  00324	22		 DB	 34			; 00000022H
  00325	22		 DB	 34			; 00000022H
  00326	22		 DB	 34			; 00000022H
  00327	22		 DB	 34			; 00000022H
  00328	22		 DB	 34			; 00000022H
  00329	22		 DB	 34			; 00000022H
  0032a	22		 DB	 34			; 00000022H
  0032b	22		 DB	 34			; 00000022H
  0032c	22		 DB	 34			; 00000022H
  0032d	22		 DB	 34			; 00000022H
  0032e	22		 DB	 34			; 00000022H
  0032f	22		 DB	 34			; 00000022H
  00330	22		 DB	 34			; 00000022H
  00331	22		 DB	 34			; 00000022H
  00332	22		 DB	 34			; 00000022H
  00333	22		 DB	 34			; 00000022H
  00334	22		 DB	 34			; 00000022H
  00335	22		 DB	 34			; 00000022H
  00336	22		 DB	 34			; 00000022H
  00337	22		 DB	 34			; 00000022H
  00338	22		 DB	 34			; 00000022H
  00339	22		 DB	 34			; 00000022H
  0033a	22		 DB	 34			; 00000022H
  0033b	22		 DB	 34			; 00000022H
  0033c	22		 DB	 34			; 00000022H
  0033d	22		 DB	 34			; 00000022H
  0033e	22		 DB	 34			; 00000022H
  0033f	22		 DB	 34			; 00000022H
  00340	22		 DB	 34			; 00000022H
  00341	22		 DB	 34			; 00000022H
  00342	22		 DB	 34			; 00000022H
  00343	22		 DB	 34			; 00000022H
  00344	22		 DB	 34			; 00000022H
  00345	22		 DB	 34			; 00000022H
  00346	22		 DB	 34			; 00000022H
  00347	22		 DB	 34			; 00000022H
  00348	22		 DB	 34			; 00000022H
  00349	22		 DB	 34			; 00000022H
  0034a	22		 DB	 34			; 00000022H
  0034b	22		 DB	 34			; 00000022H
  0034c	22		 DB	 34			; 00000022H
  0034d	22		 DB	 34			; 00000022H
  0034e	22		 DB	 34			; 00000022H
  0034f	22		 DB	 34			; 00000022H
  00350	22		 DB	 34			; 00000022H
  00351	22		 DB	 34			; 00000022H
  00352	22		 DB	 34			; 00000022H
  00353	22		 DB	 34			; 00000022H
  00354	22		 DB	 34			; 00000022H
  00355	22		 DB	 34			; 00000022H
  00356	22		 DB	 34			; 00000022H
  00357	22		 DB	 34			; 00000022H
  00358	22		 DB	 34			; 00000022H
  00359	22		 DB	 34			; 00000022H
  0035a	22		 DB	 34			; 00000022H
  0035b	22		 DB	 34			; 00000022H
  0035c	22		 DB	 34			; 00000022H
  0035d	22		 DB	 34			; 00000022H
  0035e	22		 DB	 34			; 00000022H
  0035f	22		 DB	 34			; 00000022H
  00360	22		 DB	 34			; 00000022H
  00361	22		 DB	 34			; 00000022H
  00362	22		 DB	 34			; 00000022H
  00363	22		 DB	 34			; 00000022H
  00364	22		 DB	 34			; 00000022H
  00365	22		 DB	 34			; 00000022H
  00366	22		 DB	 34			; 00000022H
  00367	22		 DB	 34			; 00000022H
  00368	22		 DB	 34			; 00000022H
  00369	22		 DB	 34			; 00000022H
  0036a	22		 DB	 34			; 00000022H
  0036b	22		 DB	 34			; 00000022H
  0036c	22		 DB	 34			; 00000022H
  0036d	22		 DB	 34			; 00000022H
  0036e	22		 DB	 34			; 00000022H
  0036f	22		 DB	 34			; 00000022H
  00370	22		 DB	 34			; 00000022H
  00371	22		 DB	 34			; 00000022H
  00372	22		 DB	 34			; 00000022H
  00373	22		 DB	 34			; 00000022H
  00374	22		 DB	 34			; 00000022H
  00375	1a		 DB	 26			; 0000001aH
  00376	1b		 DB	 27			; 0000001bH
  00377	22		 DB	 34			; 00000022H
  00378	22		 DB	 34			; 00000022H
  00379	1c		 DB	 28			; 0000001cH
  0037a	1d		 DB	 29			; 0000001dH
  0037b	1e		 DB	 30			; 0000001eH
  0037c	1f		 DB	 31			; 0000001fH
  0037d	20		 DB	 32			; 00000020H
  0037e	22		 DB	 34			; 00000022H
  0037f	21		 DB	 33			; 00000021H
?ZtDataServerProtocolCore@@YAXEPAEH@Z ENDP		; ZtDataServerProtocolCore
_TEXT	ENDS
END
