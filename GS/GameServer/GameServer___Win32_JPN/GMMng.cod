; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\GMMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_g_sttBLOODCASTLE_LEVEL DD 0fH
	DD	050H
	DD	0aH
	DD	03cH
	DD	051H
	DD	082H
	DD	03dH
	DD	06eH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	014bH
	DD	03e8H
	DD	0137H
	DD	03e8H
	DD	0fH
	DD	04afH
	DD	0aH
	DD	04afH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@CGMCommand@@QAEXXZ			; CGMCommand::Init
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.h
;	COMDAT ?Init@CGMCommand@@QAEXXZ
_TEXT	SEGMENT
?Init@CGMCommand@@QAEXXZ PROC				; CGMCommand::Init, COMDAT
; _this$ = ecx

; 37   : 	{

  00000	c7 81 b0 36 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+14000], -1

; 38   : 		for ( int n = 0; n<  MAX_GM_COMMAND; n++ )
; 39   : 		{
; 40   : 			this->nCmdCode[0] = -1;
; 41   : 		}
; 42   : 
; 43   : 		this->count=0;

  0000a	c7 81 90 4c 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+19600], 0

; 44   : 	}

  00014	c3		 ret	 0
?Init@CGMCommand@@QAEXXZ ENDP				; CGMCommand::Init
_TEXT	ENDS
PUBLIC	?Add@CGMCommand@@QAEXPADHH@Z			; CGMCommand::Add
; Function compile flags: /Ogtp
;	COMDAT ?Add@CGMCommand@@QAEXPADHH@Z
_TEXT	SEGMENT
_command_str$ = 8					; size = 4
_command_code$ = 12					; size = 4
_gamemaster_code$ = 16					; size = 4
?Add@CGMCommand@@QAEXPADHH@Z PROC			; CGMCommand::Add, COMDAT
; _this$ = ecx

; 47   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 48   : 		strcpy(this->szCmd[this->count], command_str);

  00003	8b 81 90 4c 00
	00		 mov	 eax, DWORD PTR [ecx+19600]
  00009	8b 55 08	 mov	 edx, DWORD PTR _command_str$[ebp]
  0000c	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0000f	56		 push	 esi
  00010	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
$LL4@Add:
  00013	8a 02		 mov	 al, BYTE PTR [edx]
  00015	88 06		 mov	 BYTE PTR [esi], al
  00017	42		 inc	 edx
  00018	46		 inc	 esi
  00019	84 c0		 test	 al, al
  0001b	75 f6		 jne	 SHORT $LL4@Add

; 49   : 		this->nCmdCode[this->count]=command_code;

  0001d	8b 91 90 4c 00
	00		 mov	 edx, DWORD PTR [ecx+19600]
  00023	8b 45 0c	 mov	 eax, DWORD PTR _command_code$[ebp]
  00026	89 84 91 b0 36
	00 00		 mov	 DWORD PTR [ecx+edx*4+14000], eax

; 50   : 		this->nGMCode[this->count]=gamemaster_code | 0x02 | 0x20 | 0x40;//Season 4.5 changed

  0002d	8b 55 10	 mov	 edx, DWORD PTR _gamemaster_code$[ebp]
  00030	8b 81 90 4c 00
	00		 mov	 eax, DWORD PTR [ecx+19600]
  00036	83 ca 62	 or	 edx, 98			; 00000062H
  00039	89 94 81 a0 41
	00 00		 mov	 DWORD PTR [ecx+eax*4+16800], edx

; 51   : 
; 52   : 		if ( this->count < MAX_GM_COMMAND-1 )

  00040	8b 81 90 4c 00
	00		 mov	 eax, DWORD PTR [ecx+19600]
  00046	5e		 pop	 esi
  00047	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0004c	7d 07		 jge	 SHORT $LN1@Add

; 53   : 		{
; 54   : 			this->count++;

  0004e	40		 inc	 eax
  0004f	89 81 90 4c 00
	00		 mov	 DWORD PTR [ecx+19600], eax
$LN1@Add:

; 55   : 		}
; 56   : 	}

  00055	5d		 pop	 ebp
  00056	c2 0c 00	 ret	 12			; 0000000cH
?Add@CGMCommand@@QAEXPADHH@Z ENDP			; CGMCommand::Add
_TEXT	ENDS
EXTRN	__time64:PROC
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
;	COMDAT _time
_TEXT	SEGMENT
_time	PROC						; COMDAT
; __Time$ = eax

; 133  :     return _time64(_Time);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 __time64
  00006	83 c4 04	 add	 esp, 4

; 134  : }

  00009	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	?SetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEXH@Z ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus0
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
;	COMDAT ?SetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEXH@Z PROC ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus0, COMDAT
; _this$ = ecx

; 38   : 	void SetInfinityArrowMPConsumptionPlus0(int iValue){this->m_iInfinityArrowMPConsumptionPlus0 = iValue;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEXH@Z ENDP ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus0
_TEXT	ENDS
PUBLIC	?GetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEHXZ ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus0
; Function compile flags: /Ogtp
;	COMDAT ?GetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEHXZ
_TEXT	SEGMENT
?GetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEHXZ PROC ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus0, COMDAT
; _this$ = ecx

; 39   : 	int GetInfinityArrowMPConsumptionPlus0(){return this->m_iInfinityArrowMPConsumptionPlus0;}

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?GetInfinityArrowMPConsumptionPlus0@CSkillAdditionInfo@@QAEHXZ ENDP ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus0
_TEXT	ENDS
PUBLIC	?SetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEXH@Z ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus1
; Function compile flags: /Ogtp
;	COMDAT ?SetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEXH@Z PROC ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus1, COMDAT
; _this$ = ecx

; 40   : 	void SetInfinityArrowMPConsumptionPlus1(int iValue){this->m_iInfinityArrowMPConsumptionPlus1 = iValue;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEXH@Z ENDP ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus1
_TEXT	ENDS
PUBLIC	?GetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEHXZ ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus1
; Function compile flags: /Ogtp
;	COMDAT ?GetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEHXZ
_TEXT	SEGMENT
?GetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEHXZ PROC ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus1, COMDAT
; _this$ = ecx

; 41   : 	int GetInfinityArrowMPConsumptionPlus1(){return this->m_iInfinityArrowMPConsumptionPlus1;}

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	c3		 ret	 0
?GetInfinityArrowMPConsumptionPlus1@CSkillAdditionInfo@@QAEHXZ ENDP ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus1
_TEXT	ENDS
PUBLIC	?SetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEXH@Z ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus2
; Function compile flags: /Ogtp
;	COMDAT ?SetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEXH@Z PROC ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus2, COMDAT
; _this$ = ecx

; 42   : 	void SetInfinityArrowMPConsumptionPlus2(int iValue){this->m_iInfinityArrowMPConsumptionPlus2 = iValue;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEXH@Z ENDP ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus2
_TEXT	ENDS
PUBLIC	?GetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEHXZ ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus2
; Function compile flags: /Ogtp
;	COMDAT ?GetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEHXZ
_TEXT	SEGMENT
?GetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEHXZ PROC ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus2, COMDAT
; _this$ = ecx

; 43   : 	int GetInfinityArrowMPConsumptionPlus2(){return this->m_iInfinityArrowMPConsumptionPlus2;}

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00003	c3		 ret	 0
?GetInfinityArrowMPConsumptionPlus2@CSkillAdditionInfo@@QAEHXZ ENDP ; CSkillAdditionInfo::GetInfinityArrowMPConsumptionPlus2
_TEXT	ENDS
PUBLIC	?SetInfinityArrowMPConsumptionPlus3@CSkillAdditionInfo@@QAEXH@Z ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus3
; Function compile flags: /Ogtp
;	COMDAT ?SetInfinityArrowMPConsumptionPlus3@CSkillAdditionInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetInfinityArrowMPConsumptionPlus3@CSkillAdditionInfo@@QAEXH@Z PROC ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus3, COMDAT
; _this$ = ecx

; 44   : 	void SetInfinityArrowMPConsumptionPlus3(int iValue){this->m_iInfinityArrowMPConsumptionPlus3 = iValue;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetInfinityArrowMPConsumptionPlus3@CSkillAdditionInfo@@QAEXH@Z ENDP ; CSkillAdditionInfo::SetInfinityArrowMPConsumptionPlus3
_TEXT	ENDS
PUBLIC	?SetFireScreamExplosionAttackDistance@CSkillAdditionInfo@@QAEXH@Z ; CSkillAdditionInfo::SetFireScreamExplosionAttackDistance
; Function compile flags: /Ogtp
;	COMDAT ?SetFireScreamExplosionAttackDistance@CSkillAdditionInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetFireScreamExplosionAttackDistance@CSkillAdditionInfo@@QAEXH@Z PROC ; CSkillAdditionInfo::SetFireScreamExplosionAttackDistance, COMDAT
; _this$ = ecx

; 48   : 	void SetFireScreamExplosionAttackDistance(int iValue){this->m_iFireScreamExplosionAttackDistance = iValue;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetFireScreamExplosionAttackDistance@CSkillAdditionInfo@@QAEXH@Z ENDP ; CSkillAdditionInfo::SetFireScreamExplosionAttackDistance
_TEXT	ENDS
PUBLIC	??_7CGMMng@@6B@					; CGMMng::`vftable'
PUBLIC	??1CGMMng@@UAE@XZ				; CGMMng::~CGMMng
PUBLIC	??_R4CGMMng@@6B@				; CGMMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGMMng@@@8				; CGMMng `RTTI Type Descriptor'
PUBLIC	??_R3CGMMng@@8					; CGMMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGMMng@@8					; CGMMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGMMng@@8				; CGMMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECGMMng@@UAEPAXI@Z:PROC			; CGMMng::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CGMMng@@8
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CGMMng@@8 DD FLAT:??_R0?AVCGMMng@@@8	; CGMMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGMMng@@8
rdata$r	ENDS
;	COMDAT ??_R2CGMMng@@8
rdata$r	SEGMENT
??_R2CGMMng@@8 DD FLAT:??_R1A@?0A@EA@CGMMng@@8		; CGMMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGMMng@@8
rdata$r	SEGMENT
??_R3CGMMng@@8 DD 00H					; CGMMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGMMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGMMng@@@8
_DATA	SEGMENT
??_R0?AVCGMMng@@@8 DD FLAT:??_7type_info@@6B@		; CGMMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGMMng@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CGMMng@@6B@
rdata$r	SEGMENT
??_R4CGMMng@@6B@ DD 00H					; CGMMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGMMng@@@8
	DD	FLAT:??_R3CGMMng@@8
rdata$r	ENDS
;	COMDAT ??_7CGMMng@@6B@
CONST	SEGMENT
??_7CGMMng@@6B@ DD FLAT:??_R4CGMMng@@6B@		; CGMMng::`vftable'
	DD	FLAT:??_ECGMMng@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CGMMng@@UAE@XZ
_TEXT	SEGMENT
??1CGMMng@@UAE@XZ PROC					; CGMMng::~CGMMng, COMDAT
; _this$ = ecx

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGMMng@@6B@

  00006	c3		 ret	 0
??1CGMMng@@UAE@XZ ENDP					; CGMMng::~CGMMng
_TEXT	ENDS
PUBLIC	??_C@_07IDNEBNCB@?1devcmd?$AA@			; `string'
PUBLIC	??_C@_0M@NIJIEKGF@?1exgemstone?$AA@		; `string'
PUBLIC	??_C@_0N@HIHAPALF@?1exhighstone?$AA@		; `string'
PUBLIC	??_C@_0M@IKDALPA@?1exlowstone?$AA@		; `string'
PUBLIC	??_C@_0L@CLNPLLFC@?1exharmony?$AA@		; `string'
PUBLIC	??_C@_0M@FPMJEDH@?1exguardian?$AA@		; `string'
PUBLIC	??_C@_0O@OKLONGLA@?1unbanhddchar?$AA@		; `string'
PUBLIC	??_C@_0M@NHDNJBDO@?1banhddchar?$AA@		; `string'
PUBLIC	??_C@_0O@LMOEHBDG@?1unbanhddchat?$AA@		; `string'
PUBLIC	??_C@_0M@IBGHDGLI@?1banhddchat?$AA@		; `string'
PUBLIC	??_C@_06BJAPKEDH@?1value?$AA@			; `string'
PUBLIC	??_C@_08DDIGOKCM@?1vipgold?$AA@			; `string'
PUBLIC	??_C@_0L@JFCDIFCF@?1vipsilver?$AA@		; `string'
PUBLIC	??_C@_0L@PNGPIFHM@?1vipbronze?$AA@		; `string'
PUBLIC	??_C@_05FGPHNHGJ@?1item?$AA@			; `string'
PUBLIC	??_C@_04MKJBKCIE@?1hdd?$AA@			; `string'
PUBLIC	??_C@_06HAHILENG@?1debug?$AA@			; `string'
PUBLIC	??_C@_0O@CMGAEGID@?1dungeonstart?$AA@		; `string'
PUBLIC	??_C@_07NCDKIDDB@?1donate?$AA@			; `string'
PUBLIC	??_C@_09EJHEJBEA@?1autopton?$AA@		; `string'
PUBLIC	??_C@_0L@ELCBKIJI@?1autoptoff?$AA@		; `string'
PUBLIC	??_C@_0M@DHAJNDE@?1excreateon?$AA@		; `string'
PUBLIC	??_C@_0O@MEGOICBM@?1recvcreateon?$AA@		; `string'
PUBLIC	??_C@_0O@PBDHEHEL@?1sendcreateon?$AA@		; `string'
PUBLIC	??_C@_0O@IOLIDNKE@?1recvcreation?$AA@		; `string'
PUBLIC	??_C@_0O@LLOBPIPD@?1sendcreation?$AA@		; `string'
PUBLIC	??_C@_0N@NFDFBKKN@?1marriageoff?$AA@		; `string'
PUBLIC	??_C@_06BNIOKPKM@?1dcall?$AA@			; `string'
PUBLIC	??_C@_07PDCMEENC@?1bminfo?$AA@			; `string'
PUBLIC	??_C@_06GINDBCMA@?1brnew?$AA@			; `string'
PUBLIC	??_C@_0BA@DAGCBHNP@?1inventoryclear?$AA@	; `string'
PUBLIC	??_C@_0M@OHEIGHFM@?1sendgoblin?$AA@		; `string'
PUBLIC	??_C@_0M@OJBECGDA@?1sendwcoinp?$AA@		; `string'
PUBLIC	??_C@_0M@IIPLGHKC@?1sendwcoinc?$AA@		; `string'
PUBLIC	??_C@_07BDEEJNHJ@?1brexit?$AA@			; `string'
PUBLIC	??_C@_08LDNPGJCN@?1brstart?$AA@			; `string'
PUBLIC	??_C@_0M@LDFBIEGN@?1brteleport?$AA@		; `string'
PUBLIC	??_C@_09IIEGDHLF@?1dcfriend?$AA@		; `string'
PUBLIC	??_C@_0N@NIKPNBKG@?1sendcredits?$AA@		; `string'
PUBLIC	??_C@_0M@IACMBDON@?1buypremium?$AA@		; `string'
PUBLIC	??_C@_07MKEILGDH@?1exlife?$AA@			; `string'
PUBLIC	??_C@_07MCDBEPNI@?1exsoul?$AA@			; `string'
PUBLIC	??_C@_08EEJBFJKA@?1exbless?$AA@			; `string'
PUBLIC	??_C@_08OABDOBIG@?1exchaos?$AA@			; `string'
PUBLIC	??_C@_0O@NDNCBCHD@?1goblin?9wcoin?$AA@		; `string'
PUBLIC	??_C@_07KPPMHOOK@?1credit?$AA@			; `string'
PUBLIC	??_C@_0O@FLPDDCNI@?1autopartyoff?$AA@		; `string'
PUBLIC	??_C@_09KMIJKELG@?1?$LJ?X?$LB?U?W?i?$LG?S?$AA@	; `string'
PUBLIC	??_C@_06FIPLOCBG@?1class?$AA@			; `string'
PUBLIC	??_C@_08DKFHDEAN@?1recvzen?$AA@			; `string'
PUBLIC	??_C@_08FAEDODKP@?1sendzen?$AA@			; `string'
PUBLIC	??_C@_0L@JDKKEGKI@?1autoparty?$AA@		; `string'
PUBLIC	??_C@_09BGHBDPDO@?1?Q?$LA?G?s?W?i?$LG?S?$AA@	; `string'
PUBLIC	??_C@_0M@JGOFGPBN@?1sellcredit?$AA@		; `string'
PUBLIC	??_C@_04EHKEOHLL@?1buy?$AA@			; `string'
PUBLIC	??_C@_09MNGEDIEJ@?1recvlife?$AA@		; `string'
PUBLIC	??_C@_0N@LKMEFKIL@?1recvjowbank?$AA@		; `string'
PUBLIC	??_C@_09MFBNMBKG@?1recvsoul?$AA@		; `string'
PUBLIC	??_C@_0L@PDCLCJBF@?1recvbless?$AA@		; `string'
PUBLIC	??_C@_0L@FHKJJBDD@?1recvchaos?$AA@		; `string'
PUBLIC	??_C@_09PFNGOOFK@?1sendlife?$AA@		; `string'
PUBLIC	??_C@_0N@FGKJPHKD@?1sendjowbank?$AA@		; `string'
PUBLIC	??_C@_09PNKPBHLF@?1sendsoul?$AA@		; `string'
PUBLIC	??_C@_0L@HHKNNKBN@?1sendbless?$AA@		; `string'
PUBLIC	??_C@_0L@NDCPGCDL@?1sendchaos?$AA@		; `string'
PUBLIC	??_C@_07EGGDJHFC@?1offafk?$AA@			; `string'
PUBLIC	??_C@_0L@PMDAMHEH@?1unbanchar?$AA@		; `string'
PUBLIC	??_C@_0O@HMBHKGBH@?1unbanallchat?$AA@		; `string'
PUBLIC	??_C@_0L@PFPMCDE@?1unbanpost?$AA@		; `string'
PUBLIC	??_C@_0L@KKGKGAMB@?1unbanchat?$AA@		; `string'
PUBLIC	??_C@_0M@EBJEOBJJ@?1banallchat?$AA@		; `string'
PUBLIC	??_C@_08LNFDEAIM@?1banchar?$AA@			; `string'
PUBLIC	??_C@_08EODMEFPP@?1banpost?$AA@			; `string'
PUBLIC	??_C@_08OLAJOHAK@?1banchat?$AA@			; `string'
PUBLIC	??_C@_0N@GKFFDGBI@?1partyleader?$AA@		; `string'
PUBLIC	??_C@_06EIGIJLP@?1gmove?$AA@			; `string'
PUBLIC	??_C@_09LAHGFBL@?1hide_off?$AA@			; `string'
PUBLIC	??_C@_08LALCHEKK@?1hide_on?$AA@			; `string'
PUBLIC	??_C@_09KCMIMFNA@?1?$KH?$KI?$KH?j?$KH?$KC?$KH?$LJ?$AA@ ; `string'
PUBLIC	??_C@_0O@GJAGAOFL@?1cschangeside?$AA@		; `string'
PUBLIC	??_C@_0M@IJGCKGEE@?1cscurstate?$AA@		; `string'
PUBLIC	??_C@_0M@PKNCEDPD@?1cscurowner?$AA@		; `string'
PUBLIC	??_C@_09CDNJLJCO@?1cssetend?$AA@		; `string'
PUBLIC	??_C@_0M@GNJNLPIG@?1cssetstart?$AA@		; `string'
PUBLIC	??_C@_0N@KFOJMJDB@?1cssetnotify?$AA@		; `string'
PUBLIC	??_C@_0O@LJFGCBBI@?1cssetregmark?$AA@		; `string'
PUBLIC	??_C@_0P@MGCHOPPN@?1cssetregsiege?$AA@		; `string'
PUBLIC	??_C@_0P@CFKAJOGB@?1cschangeowner?$AA@		; `string'
PUBLIC	??_C@_0BG@CFCNIMMI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$AA@ ; `string'
PUBLIC	??_C@_0BK@DDBFHPDI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@ ; `string'
PUBLIC	??_C@_0BD@PPJBNIED@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@ ; `string'
PUBLIC	??_C@_0N@FGHNKPCD@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KJ?$KH?$KJ?$AA@ ; `string'
PUBLIC	??_C@_0BA@FNMHHGEB@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$AA@ ; `string'
PUBLIC	??_C@_0M@EEPBOOJK@?1summonchar?$AA@		; `string'
PUBLIC	??_C@_0M@GPOPOLAO@?1clearinven?$AA@		; `string'
PUBLIC	??_C@_0L@BMILIDFD@?1clearitem?$AA@		; `string'
PUBLIC	??_C@_0O@OHPCDLEP@?1clearmonster?$AA@		; `string'
PUBLIC	??_C@_0P@FBJALDCH@?1summonmonster?$AA@		; `string'
PUBLIC	??_C@_06JICFFAOM@?1party?$AA@			; `string'
PUBLIC	??_C@_08NMMECFKO@?1ability?$AA@			; `string'
PUBLIC	??_C@_0BC@NLHAEGIG@?1?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?$DP?$KH?$LE?$KH?$KK?$DP?$AA@ ; `string'
PUBLIC	??_C@_0P@CNLOPPE@?1?$KH?$KB?$KH?$LA?$DP?$DP?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@ ; `string'
PUBLIC	??_C@_0BE@EEPINDGG@?1?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@ ; `string'
PUBLIC	??_C@_0CE@BFJAMDNJ@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$KB?c?$KH@ ; `string'
PUBLIC	??_C@_0CD@DMAJNJBM@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KP?$KH?$KE?$IA?$KH@ ; `string'
PUBLIC	??_C@_08HDKFODFH@?1?$KH?$KI?$KH?$KF?$KH?$KI?$DP?$AA@ ; `string'
PUBLIC	??_C@_08DPNHHHIE@?1?$DP?$KH?$KL?$KB?$KE?$KH?$KD?$AA@ ; `string'
PUBLIC	?Init@CGMMng@@QAEXXZ				; CGMMng::Init
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
;	COMDAT ??_C@_07IDNEBNCB@?1devcmd?$AA@
; File e:\work\tranet_version\gs\gameserver\gmmng.h
CONST	SEGMENT
??_C@_07IDNEBNCB@?1devcmd?$AA@ DB '/devcmd', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NIJIEKGF@?1exgemstone?$AA@
CONST	SEGMENT
??_C@_0M@NIJIEKGF@?1exgemstone?$AA@ DB '/exgemstone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HIHAPALF@?1exhighstone?$AA@
CONST	SEGMENT
??_C@_0N@HIHAPALF@?1exhighstone?$AA@ DB '/exhighstone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKDALPA@?1exlowstone?$AA@
CONST	SEGMENT
??_C@_0M@IKDALPA@?1exlowstone?$AA@ DB '/exlowstone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CLNPLLFC@?1exharmony?$AA@
CONST	SEGMENT
??_C@_0L@CLNPLLFC@?1exharmony?$AA@ DB '/exharmony', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FPMJEDH@?1exguardian?$AA@
CONST	SEGMENT
??_C@_0M@FPMJEDH@?1exguardian?$AA@ DB '/exguardian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKLONGLA@?1unbanhddchar?$AA@
CONST	SEGMENT
??_C@_0O@OKLONGLA@?1unbanhddchar?$AA@ DB '/unbanhddchar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NHDNJBDO@?1banhddchar?$AA@
CONST	SEGMENT
??_C@_0M@NHDNJBDO@?1banhddchar?$AA@ DB '/banhddchar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LMOEHBDG@?1unbanhddchat?$AA@
CONST	SEGMENT
??_C@_0O@LMOEHBDG@?1unbanhddchat?$AA@ DB '/unbanhddchat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBGHDGLI@?1banhddchat?$AA@
CONST	SEGMENT
??_C@_0M@IBGHDGLI@?1banhddchat?$AA@ DB '/banhddchat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BJAPKEDH@?1value?$AA@
CONST	SEGMENT
??_C@_06BJAPKEDH@?1value?$AA@ DB '/value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DDIGOKCM@?1vipgold?$AA@
CONST	SEGMENT
??_C@_08DDIGOKCM@?1vipgold?$AA@ DB '/vipgold', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFCDIFCF@?1vipsilver?$AA@
CONST	SEGMENT
??_C@_0L@JFCDIFCF@?1vipsilver?$AA@ DB '/vipsilver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PNGPIFHM@?1vipbronze?$AA@
CONST	SEGMENT
??_C@_0L@PNGPIFHM@?1vipbronze?$AA@ DB '/vipbronze', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FGPHNHGJ@?1item?$AA@
CONST	SEGMENT
??_C@_05FGPHNHGJ@?1item?$AA@ DB '/item', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKJBKCIE@?1hdd?$AA@
CONST	SEGMENT
??_C@_04MKJBKCIE@?1hdd?$AA@ DB '/hdd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HAHILENG@?1debug?$AA@
CONST	SEGMENT
??_C@_06HAHILENG@?1debug?$AA@ DB '/debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CMGAEGID@?1dungeonstart?$AA@
CONST	SEGMENT
??_C@_0O@CMGAEGID@?1dungeonstart?$AA@ DB '/dungeonstart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NCDKIDDB@?1donate?$AA@
CONST	SEGMENT
??_C@_07NCDKIDDB@?1donate?$AA@ DB '/donate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EJHEJBEA@?1autopton?$AA@
CONST	SEGMENT
??_C@_09EJHEJBEA@?1autopton?$AA@ DB '/autopton', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ELCBKIJI@?1autoptoff?$AA@
CONST	SEGMENT
??_C@_0L@ELCBKIJI@?1autoptoff?$AA@ DB '/autoptoff', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHAJNDE@?1excreateon?$AA@
CONST	SEGMENT
??_C@_0M@DHAJNDE@?1excreateon?$AA@ DB '/excreateon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MEGOICBM@?1recvcreateon?$AA@
CONST	SEGMENT
??_C@_0O@MEGOICBM@?1recvcreateon?$AA@ DB '/recvcreateon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBDHEHEL@?1sendcreateon?$AA@
CONST	SEGMENT
??_C@_0O@PBDHEHEL@?1sendcreateon?$AA@ DB '/sendcreateon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IOLIDNKE@?1recvcreation?$AA@
CONST	SEGMENT
??_C@_0O@IOLIDNKE@?1recvcreation?$AA@ DB '/recvcreation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LLOBPIPD@?1sendcreation?$AA@
CONST	SEGMENT
??_C@_0O@LLOBPIPD@?1sendcreation?$AA@ DB '/sendcreation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NFDFBKKN@?1marriageoff?$AA@
CONST	SEGMENT
??_C@_0N@NFDFBKKN@?1marriageoff?$AA@ DB '/marriageoff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BNIOKPKM@?1dcall?$AA@
CONST	SEGMENT
??_C@_06BNIOKPKM@?1dcall?$AA@ DB '/dcall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PDCMEENC@?1bminfo?$AA@
CONST	SEGMENT
??_C@_07PDCMEENC@?1bminfo?$AA@ DB '/bminfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GINDBCMA@?1brnew?$AA@
CONST	SEGMENT
??_C@_06GINDBCMA@?1brnew?$AA@ DB '/brnew', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DAGCBHNP@?1inventoryclear?$AA@
CONST	SEGMENT
??_C@_0BA@DAGCBHNP@?1inventoryclear?$AA@ DB '/inventoryclear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHEIGHFM@?1sendgoblin?$AA@
CONST	SEGMENT
??_C@_0M@OHEIGHFM@?1sendgoblin?$AA@ DB '/sendgoblin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OJBECGDA@?1sendwcoinp?$AA@
CONST	SEGMENT
??_C@_0M@OJBECGDA@?1sendwcoinp?$AA@ DB '/sendwcoinp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IIPLGHKC@?1sendwcoinc?$AA@
CONST	SEGMENT
??_C@_0M@IIPLGHKC@?1sendwcoinc?$AA@ DB '/sendwcoinc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BDEEJNHJ@?1brexit?$AA@
CONST	SEGMENT
??_C@_07BDEEJNHJ@?1brexit?$AA@ DB '/brexit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LDNPGJCN@?1brstart?$AA@
CONST	SEGMENT
??_C@_08LDNPGJCN@?1brstart?$AA@ DB '/brstart', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LDFBIEGN@?1brteleport?$AA@
CONST	SEGMENT
??_C@_0M@LDFBIEGN@?1brteleport?$AA@ DB '/brteleport', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IIEGDHLF@?1dcfriend?$AA@
CONST	SEGMENT
??_C@_09IIEGDHLF@?1dcfriend?$AA@ DB '/dcfriend', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NIKPNBKG@?1sendcredits?$AA@
CONST	SEGMENT
??_C@_0N@NIKPNBKG@?1sendcredits?$AA@ DB '/sendcredits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IACMBDON@?1buypremium?$AA@
CONST	SEGMENT
??_C@_0M@IACMBDON@?1buypremium?$AA@ DB '/buypremium', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MKEILGDH@?1exlife?$AA@
CONST	SEGMENT
??_C@_07MKEILGDH@?1exlife?$AA@ DB '/exlife', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MCDBEPNI@?1exsoul?$AA@
CONST	SEGMENT
??_C@_07MCDBEPNI@?1exsoul?$AA@ DB '/exsoul', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EEJBFJKA@?1exbless?$AA@
CONST	SEGMENT
??_C@_08EEJBFJKA@?1exbless?$AA@ DB '/exbless', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OABDOBIG@?1exchaos?$AA@
CONST	SEGMENT
??_C@_08OABDOBIG@?1exchaos?$AA@ DB '/exchaos', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDNCBCHD@?1goblin?9wcoin?$AA@
CONST	SEGMENT
??_C@_0O@NDNCBCHD@?1goblin?9wcoin?$AA@ DB '/goblin-wcoin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KPPMHOOK@?1credit?$AA@
CONST	SEGMENT
??_C@_07KPPMHOOK@?1credit?$AA@ DB '/credit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLPDDCNI@?1autopartyoff?$AA@
CONST	SEGMENT
??_C@_0O@FLPDDCNI@?1autopartyoff?$AA@ DB '/autopartyoff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KMIJKELG@?1?$LJ?X?$LB?U?W?i?$LG?S?$AA@
CONST	SEGMENT
??_C@_09KMIJKELG@?1?$LJ?X?$LB?U?W?i?$LG?S?$AA@ DB '/', 0b9H, 0d8H, 0b1H, 0d5H
	DB	0d7H, 0e9H, 0b6H, 0d3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FIPLOCBG@?1class?$AA@
CONST	SEGMENT
??_C@_06FIPLOCBG@?1class?$AA@ DB '/class', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DKFHDEAN@?1recvzen?$AA@
CONST	SEGMENT
??_C@_08DKFHDEAN@?1recvzen?$AA@ DB '/recvzen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FAEDODKP@?1sendzen?$AA@
CONST	SEGMENT
??_C@_08FAEDODKP@?1sendzen?$AA@ DB '/sendzen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDKKEGKI@?1autoparty?$AA@
CONST	SEGMENT
??_C@_0L@JDKKEGKI@?1autoparty?$AA@ DB '/autoparty', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BGHBDPDO@?1?Q?$LA?G?s?W?i?$LG?S?$AA@
CONST	SEGMENT
??_C@_09BGHBDPDO@?1?Q?$LA?G?s?W?i?$LG?S?$AA@ DB '/', 0d1H, 0b0H, 0c7H, 0f3H
	DB	0d7H, 0e9H, 0b6H, 0d3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGOFGPBN@?1sellcredit?$AA@
CONST	SEGMENT
??_C@_0M@JGOFGPBN@?1sellcredit?$AA@ DB '/sellcredit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EHKEOHLL@?1buy?$AA@
CONST	SEGMENT
??_C@_04EHKEOHLL@?1buy?$AA@ DB '/buy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNGEDIEJ@?1recvlife?$AA@
CONST	SEGMENT
??_C@_09MNGEDIEJ@?1recvlife?$AA@ DB '/recvlife', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LKMEFKIL@?1recvjowbank?$AA@
CONST	SEGMENT
??_C@_0N@LKMEFKIL@?1recvjowbank?$AA@ DB '/recvjowbank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFBNMBKG@?1recvsoul?$AA@
CONST	SEGMENT
??_C@_09MFBNMBKG@?1recvsoul?$AA@ DB '/recvsoul', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PDCLCJBF@?1recvbless?$AA@
CONST	SEGMENT
??_C@_0L@PDCLCJBF@?1recvbless?$AA@ DB '/recvbless', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FHKJJBDD@?1recvchaos?$AA@
CONST	SEGMENT
??_C@_0L@FHKJJBDD@?1recvchaos?$AA@ DB '/recvchaos', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PFNGOOFK@?1sendlife?$AA@
CONST	SEGMENT
??_C@_09PFNGOOFK@?1sendlife?$AA@ DB '/sendlife', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FGKJPHKD@?1sendjowbank?$AA@
CONST	SEGMENT
??_C@_0N@FGKJPHKD@?1sendjowbank?$AA@ DB '/sendjowbank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PNKPBHLF@?1sendsoul?$AA@
CONST	SEGMENT
??_C@_09PNKPBHLF@?1sendsoul?$AA@ DB '/sendsoul', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HHKNNKBN@?1sendbless?$AA@
CONST	SEGMENT
??_C@_0L@HHKNNKBN@?1sendbless?$AA@ DB '/sendbless', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDCPGCDL@?1sendchaos?$AA@
CONST	SEGMENT
??_C@_0L@NDCPGCDL@?1sendchaos?$AA@ DB '/sendchaos', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGGDJHFC@?1offafk?$AA@
CONST	SEGMENT
??_C@_07EGGDJHFC@?1offafk?$AA@ DB '/offafk', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PMDAMHEH@?1unbanchar?$AA@
CONST	SEGMENT
??_C@_0L@PMDAMHEH@?1unbanchar?$AA@ DB '/unbanchar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HMBHKGBH@?1unbanallchat?$AA@
CONST	SEGMENT
??_C@_0O@HMBHKGBH@?1unbanallchat?$AA@ DB '/unbanallchat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFPMCDE@?1unbanpost?$AA@
CONST	SEGMENT
??_C@_0L@PFPMCDE@?1unbanpost?$AA@ DB '/unbanpost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KKGKGAMB@?1unbanchat?$AA@
CONST	SEGMENT
??_C@_0L@KKGKGAMB@?1unbanchat?$AA@ DB '/unbanchat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EBJEOBJJ@?1banallchat?$AA@
CONST	SEGMENT
??_C@_0M@EBJEOBJJ@?1banallchat?$AA@ DB '/banallchat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LNFDEAIM@?1banchar?$AA@
CONST	SEGMENT
??_C@_08LNFDEAIM@?1banchar?$AA@ DB '/banchar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EODMEFPP@?1banpost?$AA@
CONST	SEGMENT
??_C@_08EODMEFPP@?1banpost?$AA@ DB '/banpost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OLAJOHAK@?1banchat?$AA@
CONST	SEGMENT
??_C@_08OLAJOHAK@?1banchat?$AA@ DB '/banchat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GKFFDGBI@?1partyleader?$AA@
CONST	SEGMENT
??_C@_0N@GKFFDGBI@?1partyleader?$AA@ DB '/partyleader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EIGIJLP@?1gmove?$AA@
CONST	SEGMENT
??_C@_06EIGIJLP@?1gmove?$AA@ DB '/gmove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LAHGFBL@?1hide_off?$AA@
CONST	SEGMENT
??_C@_09LAHGFBL@?1hide_off?$AA@ DB '/hide_off', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LALCHEKK@?1hide_on?$AA@
CONST	SEGMENT
??_C@_08LALCHEKK@?1hide_on?$AA@ DB '/hide_on', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KCMIMFNA@?1?$KH?$KI?$KH?j?$KH?$KC?$KH?$LJ?$AA@
CONST	SEGMENT
??_C@_09KCMIMFNA@?1?$KH?$KI?$KH?j?$KH?$KC?$KH?$LJ?$AA@ DB '/', 0a7H, 0a8H
	DB	0a7H, 0eaH, 0a7H, 0a2H, 0a7H, 0b9H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GJAGAOFL@?1cschangeside?$AA@
CONST	SEGMENT
??_C@_0O@GJAGAOFL@?1cschangeside?$AA@ DB '/cschangeside', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IJGCKGEE@?1cscurstate?$AA@
CONST	SEGMENT
??_C@_0M@IJGCKGEE@?1cscurstate?$AA@ DB '/cscurstate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKNCEDPD@?1cscurowner?$AA@
CONST	SEGMENT
??_C@_0M@PKNCEDPD@?1cscurowner?$AA@ DB '/cscurowner', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CDNJLJCO@?1cssetend?$AA@
CONST	SEGMENT
??_C@_09CDNJLJCO@?1cssetend?$AA@ DB '/cssetend', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNJNLPIG@?1cssetstart?$AA@
CONST	SEGMENT
??_C@_0M@GNJNLPIG@?1cssetstart?$AA@ DB '/cssetstart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KFOJMJDB@?1cssetnotify?$AA@
CONST	SEGMENT
??_C@_0N@KFOJMJDB@?1cssetnotify?$AA@ DB '/cssetnotify', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LJFGCBBI@?1cssetregmark?$AA@
CONST	SEGMENT
??_C@_0O@LJFGCBBI@?1cssetregmark?$AA@ DB '/cssetregmark', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGCHOPPN@?1cssetregsiege?$AA@
CONST	SEGMENT
??_C@_0P@MGCHOPPN@?1cssetregsiege?$AA@ DB '/cssetregsiege', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CFKAJOGB@?1cschangeowner?$AA@
CONST	SEGMENT
??_C@_0P@CFKAJOGB@?1cschangeowner?$AA@ DB '/cschangeowner', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CFCNIMMI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$AA@
CONST	SEGMENT
??_C@_0BG@CFCNIMMI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$AA@ DB '/'
	DB	0a7H, 0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 0a7H, 0aaH, 0a7H, 0d7H
	DB	'?', 0a1H, 0edH, '?', 0a7H, 0a4H, 0a1H, 0e3H, '?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DDBFHPDI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@
CONST	SEGMENT
??_C@_0BK@DDBFHPDI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@ DB '/'
	DB	0a7H, 0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 0a7H, 0a4H, 0a7H, 0acH
	DB	'?', 0a7H, 0d9H, 0a7H, 0aaH, 0a7H, 0d7H, '?', 0a1H, 0edH, 0a1H
	DB	0a4H, '?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PPJBNIED@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@
CONST	SEGMENT
??_C@_0BD@PPJBNIED@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@ DB '/'
	DB	0a7H, 0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 0a7H, 0aaH, 0a7H, 0d7H
	DB	'?', 0a1H, 0edH, 0a1H, 0a4H, '?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FGHNKPCD@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KJ?$KH?$KJ?$AA@
CONST	SEGMENT
??_C@_0N@FGHNKPCD@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KJ?$KH?$KJ?$AA@ DB '/'
	DB	0a7H, 0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 0a7H, 0a9H, 0a7H, 0a9H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNMHHGEB@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$AA@
CONST	SEGMENT
??_C@_0BA@FNMHHGEB@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$AA@ DB '/'
	DB	0a7H, 0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, '?', 0a7H, 0e5H, 0a7H
	DB	0a6H, 0a7H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EEPBOOJK@?1summonchar?$AA@
CONST	SEGMENT
??_C@_0M@EEPBOOJK@?1summonchar?$AA@ DB '/summonchar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GPOPOLAO@?1clearinven?$AA@
CONST	SEGMENT
??_C@_0M@GPOPOLAO@?1clearinven?$AA@ DB '/clearinven', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMILIDFD@?1clearitem?$AA@
CONST	SEGMENT
??_C@_0L@BMILIDFD@?1clearitem?$AA@ DB '/clearitem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OHPCDLEP@?1clearmonster?$AA@
CONST	SEGMENT
??_C@_0O@OHPCDLEP@?1clearmonster?$AA@ DB '/clearmonster', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FBJALDCH@?1summonmonster?$AA@
CONST	SEGMENT
??_C@_0P@FBJALDCH@?1summonmonster?$AA@ DB '/summonmonster', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JICFFAOM@?1party?$AA@
CONST	SEGMENT
??_C@_06JICFFAOM@?1party?$AA@ DB '/party', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NMMECFKO@?1ability?$AA@
CONST	SEGMENT
??_C@_08NMMECFKO@?1ability?$AA@ DB '/ability', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NLHAEGIG@?1?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?$DP?$KH?$LE?$KH?$KK?$DP?$AA@
CONST	SEGMENT
??_C@_0BC@NLHAEGIG@?1?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?$DP?$KH?$LE?$KH?$KK?$DP?$AA@ DB '/'
	DB	0a7H, 0a5H, '?', 0a7H, 0d7H, '?', 0a7H, 0a6H, 0a7H, 0afH, '?', 0a7H
	DB	0b4H, 0a7H, 0aaH, '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CNLOPPE@?1?$KH?$KB?$KH?$LA?$DP?$DP?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@
CONST	SEGMENT
??_C@_0P@CNLOPPE@?1?$KH?$KB?$KH?$LA?$DP?$DP?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@ DB '/'
	DB	0a7H, 0a1H, 0a7H, 0b0H, '??', 0a7H, 0a2H, '?', 0a1H, 0e3H, 0a7H
	DB	0a6H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EEPINDGG@?1?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@
CONST	SEGMENT
??_C@_0BE@EEPINDGG@?1?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@ DB '/'
	DB	'?', 0a7H, 0a8H, 0a7H, 0a1H, 0a7H, 0aeH, 0a7H, 0a6H, 0a7H, 0bdH
	DB	0a7H, 0a2H, '?', 0a1H, 0e3H, 0a7H, 0a6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BFJAMDNJ@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$KB?c?$KH@
CONST	SEGMENT
??_C@_0CE@BFJAMDNJ@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$KB?c?$KH@ DB '/'
	DB	0a7H, 0a3H, 0a7H, 0d7H, 0a7H, 0a4H, '?', 0a7H, 0a3H, '?', 0a7H
	DB	0a3H, '?', 0a7H, 0a4H, 0a1H, 0adH, 0a7H, 0a4H, '?', 0a7H, 0a4H
	DB	'?', 0a7H, 0a3H, '?', 0a7H, 0a3H, 0a1H, 0e3H, 0a7H, 0a4H, 0a1H
	DB	0adH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DMAJNJBM@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KP?$KH?$KE?$IA?$KH@
CONST	SEGMENT
??_C@_0CD@DMAJNJBM@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KP?$KH?$KE?$IA?$KH@ DB '/'
	DB	0a7H, 0a3H, 0a7H, 0d7H, 0a7H, 0a4H, '?', 0a7H, 0a3H, '?', 0a7H
	DB	0a3H, '?', 0a7H, 0a4H, 0a1H, 0adH, 0a7H, 0a4H, '?', 0a7H, 0a3H
	DB	'?', 0a7H, 0a4H, 0a1H, 0afH, 0a7H, 0a4H, 080H, 0a7H, 0a3H, '?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HDKFODFH@?1?$KH?$KI?$KH?$KF?$KH?$KI?$DP?$AA@
CONST	SEGMENT
??_C@_08HDKFODFH@?1?$KH?$KI?$KH?$KF?$KH?$KI?$DP?$AA@ DB '/', 0a7H, 0a8H, 0a7H
	DB	0a5H, 0a7H, 0a8H, '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DPNHHHIE@?1?$DP?$KH?$KL?$KB?$KE?$KH?$KD?$AA@
CONST	SEGMENT
??_C@_08DPNHHHIE@?1?$DP?$KH?$KL?$KB?$KE?$KH?$KD?$AA@ DB '/?', 0a7H, 0abH, 0a1H
	DB	0a4H, 0a7H, 0a3H, 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?Init@CGMMng@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CGMMng@@QAEXXZ PROC				; CGMMng::Init, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

  00005	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00008	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

  0000b	68 b8 0b 00 00	 push	 3000			; 00000bb8H
  00010	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00015	c7 86 b0 36 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+14000], -1
  0001f	c7 86 90 4c 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+19600], 0
  00029	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0002e	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00034	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  00037	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$LL48@Init:
  00040	8a 08		 mov	 cl, BYTE PTR [eax]
  00042	88 0a		 mov	 BYTE PTR [edx], cl
  00044	40		 inc	 eax
  00045	42		 inc	 edx
  00046	84 c9		 test	 cl, cl
  00048	75 f6		 jne	 SHORT $LL48@Init
  0004a	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  00050	c7 84 96 b0 36
	00 00 64 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 100 ; 00000064H
  0005b	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00061	53		 push	 ebx
  00062	bb 62 00 00 00	 mov	 ebx, 98			; 00000062H
  00067	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  0006e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00074	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00079	7d 07		 jge	 SHORT $LN45@Init
  0007b	40		 inc	 eax
  0007c	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN45@Init:

  00082	68 b9 0b 00 00	 push	 3001			; 00000bb9H
  00087	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0008c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00091	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00097	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0009a	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
  0009d	8d 49 00	 npad	 3
$LL52@Init:
  000a0	8a 08		 mov	 cl, BYTE PTR [eax]
  000a2	88 0a		 mov	 BYTE PTR [edx], cl
  000a4	40		 inc	 eax
  000a5	42		 inc	 edx
  000a6	84 c9		 test	 cl, cl
  000a8	75 f6		 jne	 SHORT $LL52@Init
  000aa	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  000b0	c7 84 96 b0 36
	00 00 65 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 101 ; 00000065H
  000bb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  000c1	c7 84 86 a0 41
	00 00 63 00 00
	00		 mov	 DWORD PTR [esi+eax*4+16800], 99 ; 00000063H
  000cc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  000d2	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  000d7	7d 07		 jge	 SHORT $LN49@Init
  000d9	40		 inc	 eax
  000da	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN49@Init:

  000e0	68 bd 0b 00 00	 push	 3005			; 00000bbdH
  000e5	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000ea	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000ef	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  000f5	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  000f8	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
  000fb	eb 03 8d 49 00	 npad	 5
$LL56@Init:
  00100	8a 08		 mov	 cl, BYTE PTR [eax]
  00102	88 0a		 mov	 BYTE PTR [edx], cl
  00104	40		 inc	 eax
  00105	42		 inc	 edx
  00106	84 c9		 test	 cl, cl
  00108	75 f6		 jne	 SHORT $LL56@Init
  0010a	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  00110	c7 84 96 b0 36
	00 00 68 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 104 ; 00000068H
  0011b	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00121	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  00128	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0012e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00133	7d 07		 jge	 SHORT $LN53@Init
  00135	40		 inc	 eax
  00136	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN53@Init:

  0013c	68 be 0b 00 00	 push	 3006			; 00000bbeH
  00141	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00146	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0014b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00151	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  00154	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
$LL60@Init:
  00157	8a 08		 mov	 cl, BYTE PTR [eax]
  00159	88 0a		 mov	 BYTE PTR [edx], cl
  0015b	40		 inc	 eax
  0015c	42		 inc	 edx
  0015d	84 c9		 test	 cl, cl
  0015f	75 f6		 jne	 SHORT $LL60@Init
  00161	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  00167	c7 84 96 b0 36
	00 00 6a 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 106 ; 0000006aH
  00172	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00178	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  0017f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00185	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0018a	7d 07		 jge	 SHORT $LN57@Init
  0018c	40		 inc	 eax
  0018d	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN57@Init:

  00193	68 bf 0b 00 00	 push	 3007			; 00000bbfH
  00198	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0019d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001a2	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  001a8	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  001ab	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
  001ae	8b ff		 npad	 2
$LL64@Init:
  001b0	8a 08		 mov	 cl, BYTE PTR [eax]
  001b2	88 0a		 mov	 BYTE PTR [edx], cl
  001b4	40		 inc	 eax
  001b5	42		 inc	 edx
  001b6	84 c9		 test	 cl, cl
  001b8	75 f6		 jne	 SHORT $LL64@Init
  001ba	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  001c0	c7 84 96 b0 36
	00 00 6c 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 108 ; 0000006cH
  001cb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  001d1	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  001d8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  001de	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  001e3	7d 07		 jge	 SHORT $LN61@Init
  001e5	40		 inc	 eax
  001e6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN61@Init:

  001ec	68 c0 0b 00 00	 push	 3008			; 00000bc0H
  001f1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001f6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001fb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00201	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  00204	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
$LL68@Init:
  00207	8a 08		 mov	 cl, BYTE PTR [eax]
  00209	88 0a		 mov	 BYTE PTR [edx], cl
  0020b	40		 inc	 eax
  0020c	42		 inc	 edx
  0020d	84 c9		 test	 cl, cl
  0020f	75 f6		 jne	 SHORT $LL68@Init
  00211	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  00217	c7 84 96 b0 36
	00 00 70 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 112 ; 00000070H
  00222	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00228	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  0022f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00235	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0023a	7d 07		 jge	 SHORT $LN65@Init
  0023c	40		 inc	 eax
  0023d	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN65@Init:

  00243	68 c1 0b 00 00	 push	 3009			; 00000bc1H
  00248	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0024d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00252	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00258	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0025b	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
  0025e	8b ff		 npad	 2
$LL72@Init:
  00260	8a 08		 mov	 cl, BYTE PTR [eax]
  00262	88 0a		 mov	 BYTE PTR [edx], cl
  00264	40		 inc	 eax
  00265	42		 inc	 edx
  00266	84 c9		 test	 cl, cl
  00268	75 f6		 jne	 SHORT $LL72@Init
  0026a	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  00270	c7 84 96 b0 36
	00 00 6f 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 111 ; 0000006fH
  0027b	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00281	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  00288	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0028e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00293	7d 07		 jge	 SHORT $LN69@Init
  00295	40		 inc	 eax
  00296	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN69@Init:

  0029c	68 c2 0b 00 00	 push	 3010			; 00000bc2H
  002a1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  002a6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  002ab	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  002b1	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  002b4	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
$LL76@Init:
  002b7	8a 08		 mov	 cl, BYTE PTR [eax]
  002b9	88 0a		 mov	 BYTE PTR [edx], cl
  002bb	40		 inc	 eax
  002bc	42		 inc	 edx
  002bd	84 c9		 test	 cl, cl
  002bf	75 f6		 jne	 SHORT $LL76@Init
  002c1	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  002c7	c7 84 96 b0 36
	00 00 6d 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 109 ; 0000006dH
  002d2	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  002d8	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  002df	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  002e5	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  002ea	7d 07		 jge	 SHORT $LN73@Init
  002ec	40		 inc	 eax
  002ed	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN73@Init:

  002f3	68 c3 0b 00 00	 push	 3011			; 00000bc3H
  002f8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  002fd	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00302	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00308	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0030b	8d 14 8e	 lea	 edx, DWORD PTR [esi+ecx*4]
  0030e	8b ff		 npad	 2
$LL80@Init:
  00310	8a 08		 mov	 cl, BYTE PTR [eax]
  00312	88 0a		 mov	 BYTE PTR [edx], cl
  00314	40		 inc	 eax
  00315	42		 inc	 edx
  00316	84 c9		 test	 cl, cl
  00318	75 f6		 jne	 SHORT $LL80@Init
  0031a	8b 96 90 4c 00
	00		 mov	 edx, DWORD PTR [esi+19600]
  00320	c7 84 96 b0 36
	00 00 6e 00 00
	00		 mov	 DWORD PTR [esi+edx*4+14000], 110 ; 0000006eH
  0032b	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00331	89 9c 86 a0 41
	00 00		 mov	 DWORD PTR [esi+eax*4+16800], ebx
  00338	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0033e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00343	7d 07		 jge	 SHORT $LN77@Init
  00345	40		 inc	 eax
  00346	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN77@Init:

  0034c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00352	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00355	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08DPNHHHIE@?1?$DP?$KH?$KL?$KB?$KE?$KH?$KD?$AA@
  0035a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0035d	8d 49 00	 npad	 3
$LL84@Init:
  00360	8a 01		 mov	 al, BYTE PTR [ecx]
  00362	88 02		 mov	 BYTE PTR [edx], al
  00364	41		 inc	 ecx
  00365	42		 inc	 edx
  00366	84 c0		 test	 al, al
  00368	75 f6		 jne	 SHORT $LL84@Init
  0036a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00370	c7 84 86 b0 36
	00 00 f5 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 501 ; 000001f5H
  0037b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00381	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00388	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0038e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00393	7d 07		 jge	 SHORT $LN81@Init
  00395	40		 inc	 eax
  00396	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN81@Init:

  0039c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  003a2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  003a5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08HDKFODFH@?1?$KH?$KI?$KH?$KF?$KH?$KI?$DP?$AA@
  003aa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  003ad	8d 49 00	 npad	 3
$LL88@Init:
  003b0	8a 01		 mov	 al, BYTE PTR [ecx]
  003b2	88 02		 mov	 BYTE PTR [edx], al
  003b4	41		 inc	 ecx
  003b5	42		 inc	 edx
  003b6	84 c0		 test	 al, al
  003b8	75 f6		 jne	 SHORT $LL88@Init
  003ba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  003c0	c7 84 86 b0 36
	00 00 f6 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 502 ; 000001f6H
  003cb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  003d1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  003d8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  003de	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  003e3	7d 07		 jge	 SHORT $LN85@Init
  003e5	40		 inc	 eax
  003e6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN85@Init:

  003ec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  003f2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  003f5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0CD@DMAJNJBM@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KP?$KH?$KE?$IA?$KH@
  003fa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  003fd	8d 49 00	 npad	 3
$LL92@Init:
  00400	8a 01		 mov	 al, BYTE PTR [ecx]
  00402	88 02		 mov	 BYTE PTR [edx], al
  00404	41		 inc	 ecx
  00405	42		 inc	 edx
  00406	84 c0		 test	 al, al
  00408	75 f6		 jne	 SHORT $LL92@Init
  0040a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00410	c7 84 86 b0 36
	00 00 f7 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 503 ; 000001f7H
  0041b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00421	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00428	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0042e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00433	7d 07		 jge	 SHORT $LN89@Init
  00435	40		 inc	 eax
  00436	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN89@Init:

  0043c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00442	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00445	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0CE@BFJAMDNJ@?1?$KH?$KD?$KH?W?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$DP?$KH?$KE?$KB?$KN?$KH?$KE?$DP?$KH?$KE?$DP?$KH?$KD?$DP?$KH?$KD?$KB?c?$KH@
  0044a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0044d	8d 49 00	 npad	 3
$LL96@Init:
  00450	8a 01		 mov	 al, BYTE PTR [ecx]
  00452	88 02		 mov	 BYTE PTR [edx], al
  00454	41		 inc	 ecx
  00455	42		 inc	 edx
  00456	84 c0		 test	 al, al
  00458	75 f6		 jne	 SHORT $LL96@Init
  0045a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00460	c7 84 86 b0 36
	00 00 f8 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 504 ; 000001f8H
  0046b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00471	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00478	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0047e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00483	7d 07		 jge	 SHORT $LN93@Init
  00485	40		 inc	 eax
  00486	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN93@Init:

  0048c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00492	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00495	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BE@EEPINDGG@?1?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@
  0049a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0049d	8d 49 00	 npad	 3
$LL100@Init:
  004a0	8a 01		 mov	 al, BYTE PTR [ecx]
  004a2	88 02		 mov	 BYTE PTR [edx], al
  004a4	41		 inc	 ecx
  004a5	42		 inc	 edx
  004a6	84 c0		 test	 al, al
  004a8	75 f6		 jne	 SHORT $LL100@Init
  004aa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  004b0	c7 84 86 b0 36
	00 00 f9 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 505 ; 000001f9H
  004bb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  004c1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  004c8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  004ce	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  004d3	7d 07		 jge	 SHORT $LN97@Init
  004d5	40		 inc	 eax
  004d6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN97@Init:

  004dc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  004e2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  004e5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0P@CNLOPPE@?1?$KH?$KB?$KH?$LA?$DP?$DP?$KH?$KC?$DP?$KB?c?$KH?$KG?$AA@
  004ea	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  004ed	8d 49 00	 npad	 3
$LL104@Init:
  004f0	8a 01		 mov	 al, BYTE PTR [ecx]
  004f2	88 02		 mov	 BYTE PTR [edx], al
  004f4	41		 inc	 ecx
  004f5	42		 inc	 edx
  004f6	84 c0		 test	 al, al
  004f8	75 f6		 jne	 SHORT $LL104@Init
  004fa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00500	57		 push	 edi
  00501	bf fa 01 00 00	 mov	 edi, 506		; 000001faH
  00506	89 bc 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], edi
  0050d	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00513	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  0051a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00520	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00525	7d 07		 jge	 SHORT $LN101@Init
  00527	40		 inc	 eax
  00528	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN101@Init:

  0052e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00534	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00537	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BC@NLHAEGIG@?1?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?$DP?$KH?$LE?$KH?$KK?$DP?$AA@
  0053c	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0053f	90		 npad	 1
$LL108@Init:
  00540	8a 01		 mov	 al, BYTE PTR [ecx]
  00542	88 02		 mov	 BYTE PTR [edx], al
  00544	41		 inc	 ecx
  00545	42		 inc	 edx
  00546	84 c0		 test	 al, al
  00548	75 f6		 jne	 SHORT $LL108@Init
  0054a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00550	bb fb 01 00 00	 mov	 ebx, 507		; 000001fbH
  00555	89 9c 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], ebx
  0055c	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00562	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  0056d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00573	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00578	7d 07		 jge	 SHORT $LN105@Init
  0057a	40		 inc	 eax
  0057b	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN105@Init:

  00581	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00587	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0058a	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08NMMECFKO@?1ability?$AA@
  0058f	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL112@Init:
  00592	8a 01		 mov	 al, BYTE PTR [ecx]
  00594	88 02		 mov	 BYTE PTR [edx], al
  00596	41		 inc	 ecx
  00597	42		 inc	 edx
  00598	84 c0		 test	 al, al
  0059a	75 f6		 jne	 SHORT $LL112@Init
  0059c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  005a2	c7 84 86 b0 36
	00 00 f5 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 501 ; 000001f5H
  005ad	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  005b3	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  005be	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  005c4	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  005c9	7d 07		 jge	 SHORT $LN109@Init
  005cb	40		 inc	 eax
  005cc	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN109@Init:

  005d2	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  005d8	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  005db	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06JICFFAOM@?1party?$AA@
  005e0	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL116@Init:
  005e3	8a 01		 mov	 al, BYTE PTR [ecx]
  005e5	88 02		 mov	 BYTE PTR [edx], al
  005e7	41		 inc	 ecx
  005e8	42		 inc	 edx
  005e9	84 c0		 test	 al, al
  005eb	75 f6		 jne	 SHORT $LL116@Init
  005ed	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  005f3	c7 84 86 b0 36
	00 00 f6 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 502 ; 000001f6H
  005fe	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00604	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  0060f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00615	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0061a	7d 07		 jge	 SHORT $LN113@Init
  0061c	40		 inc	 eax
  0061d	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN113@Init:

  00623	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00629	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0062c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0P@FBJALDCH@?1summonmonster?$AA@
  00631	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL120@Init:
  00634	8a 01		 mov	 al, BYTE PTR [ecx]
  00636	88 02		 mov	 BYTE PTR [edx], al
  00638	41		 inc	 ecx
  00639	42		 inc	 edx
  0063a	84 c0		 test	 al, al
  0063c	75 f6		 jne	 SHORT $LL120@Init
  0063e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00644	c7 84 86 b0 36
	00 00 f7 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 503 ; 000001f7H
  0064f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00655	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00660	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00666	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0066b	7d 07		 jge	 SHORT $LN117@Init
  0066d	40		 inc	 eax
  0066e	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN117@Init:

  00674	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0067a	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0067d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@OHPCDLEP@?1clearmonster?$AA@
  00682	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL124@Init:
  00685	8a 01		 mov	 al, BYTE PTR [ecx]
  00687	88 02		 mov	 BYTE PTR [edx], al
  00689	41		 inc	 ecx
  0068a	42		 inc	 edx
  0068b	84 c0		 test	 al, al
  0068d	75 f6		 jne	 SHORT $LL124@Init
  0068f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00695	c7 84 86 b0 36
	00 00 f8 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 504 ; 000001f8H
  006a0	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  006a6	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  006b1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  006b7	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  006bc	7d 07		 jge	 SHORT $LN121@Init
  006be	40		 inc	 eax
  006bf	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN121@Init:

  006c5	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  006cb	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  006ce	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@BMILIDFD@?1clearitem?$AA@
  006d3	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL128@Init:
  006d6	8a 01		 mov	 al, BYTE PTR [ecx]
  006d8	88 02		 mov	 BYTE PTR [edx], al
  006da	41		 inc	 ecx
  006db	42		 inc	 edx
  006dc	84 c0		 test	 al, al
  006de	75 f6		 jne	 SHORT $LL128@Init
  006e0	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  006e6	c7 84 86 b0 36
	00 00 f9 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 505 ; 000001f9H
  006f1	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  006f7	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00702	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00708	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0070d	7d 07		 jge	 SHORT $LN125@Init
  0070f	40		 inc	 eax
  00710	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN125@Init:

  00716	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0071c	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0071f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@GPOPOLAO@?1clearinven?$AA@
  00724	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL132@Init:
  00727	8a 01		 mov	 al, BYTE PTR [ecx]
  00729	88 02		 mov	 BYTE PTR [edx], al
  0072b	41		 inc	 ecx
  0072c	42		 inc	 edx
  0072d	84 c0		 test	 al, al
  0072f	75 f6		 jne	 SHORT $LL132@Init
  00731	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00737	89 bc 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], edi
  0073e	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00744	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  0074f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00755	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0075a	7d 07		 jge	 SHORT $LN129@Init
  0075c	40		 inc	 eax
  0075d	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN129@Init:

  00763	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00769	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0076c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@EEPBOOJK@?1summonchar?$AA@
  00771	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL136@Init:
  00774	8a 01		 mov	 al, BYTE PTR [ecx]
  00776	88 02		 mov	 BYTE PTR [edx], al
  00778	41		 inc	 ecx
  00779	42		 inc	 edx
  0077a	84 c0		 test	 al, al
  0077c	75 f6		 jne	 SHORT $LL136@Init
  0077e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00784	89 9c 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], ebx
  0078b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00791	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  0079c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  007a2	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  007a7	7d 07		 jge	 SHORT $LN133@Init
  007a9	40		 inc	 eax
  007aa	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN133@Init:

  007b0	68 c5 0b 00 00	 push	 3013			; 00000bc5H
  007b5	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  007ba	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  007bf	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  007c5	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  007c8	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  007cb	eb 03 8d 49 00	 npad	 5
$LL140@Init:
  007d0	8a 08		 mov	 cl, BYTE PTR [eax]
  007d2	88 0a		 mov	 BYTE PTR [edx], cl
  007d4	40		 inc	 eax
  007d5	42		 inc	 edx
  007d6	84 c9		 test	 cl, cl
  007d8	75 f6		 jne	 SHORT $LL140@Init
  007da	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  007e0	c7 84 86 b0 36
	00 00 c9 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 201 ; 000000c9H
  007eb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  007f1	bb 63 00 00 00	 mov	 ebx, 99			; 00000063H
  007f6	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  007fd	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00803	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00808	7d 07		 jge	 SHORT $LN137@Init
  0080a	40		 inc	 eax
  0080b	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN137@Init:

  00811	68 c6 0b 00 00	 push	 3014			; 00000bc6H
  00816	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0081b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00820	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00826	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00829	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0082c	8d 64 24 00	 npad	 4
$LL144@Init:
  00830	8a 08		 mov	 cl, BYTE PTR [eax]
  00832	88 0a		 mov	 BYTE PTR [edx], cl
  00834	40		 inc	 eax
  00835	42		 inc	 edx
  00836	84 c9		 test	 cl, cl
  00838	75 f6		 jne	 SHORT $LL144@Init
  0083a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00840	c7 84 86 b0 36
	00 00 c8 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 200 ; 000000c8H
  0084b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00851	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00858	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0085e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00863	7d 07		 jge	 SHORT $LN141@Init
  00865	40		 inc	 eax
  00866	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN141@Init:

  0086c	68 c7 0b 00 00	 push	 3015			; 00000bc7H
  00871	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00876	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0087b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00881	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00884	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL148@Init:
  00887	8a 08		 mov	 cl, BYTE PTR [eax]
  00889	88 0a		 mov	 BYTE PTR [edx], cl
  0088b	40		 inc	 eax
  0088c	42		 inc	 edx
  0088d	84 c9		 test	 cl, cl
  0088f	75 f6		 jne	 SHORT $LL148@Init
  00891	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00897	c7 84 86 b0 36
	00 00 ca 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 202 ; 000000caH
  008a2	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  008a8	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  008af	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  008b5	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  008ba	7d 07		 jge	 SHORT $LN145@Init
  008bc	40		 inc	 eax
  008bd	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN145@Init:

  008c3	68 c8 0b 00 00	 push	 3016			; 00000bc8H
  008c8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  008cd	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  008d2	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  008d8	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  008db	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  008de	8b ff		 npad	 2
$LL152@Init:
  008e0	8a 08		 mov	 cl, BYTE PTR [eax]
  008e2	88 0a		 mov	 BYTE PTR [edx], cl
  008e4	40		 inc	 eax
  008e5	42		 inc	 edx
  008e6	84 c9		 test	 cl, cl
  008e8	75 f6		 jne	 SHORT $LL152@Init
  008ea	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  008f0	bf cb 00 00 00	 mov	 edi, 203		; 000000cbH
  008f5	89 bc 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], edi
  008fc	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00902	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00909	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0090f	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00914	7d 07		 jge	 SHORT $LN149@Init
  00916	40		 inc	 eax
  00917	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN149@Init:

  0091d	68 cc 0b 00 00	 push	 3020			; 00000bccH
  00922	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00927	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0092c	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00932	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00935	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL156@Init:
  00938	8a 08		 mov	 cl, BYTE PTR [eax]
  0093a	88 0a		 mov	 BYTE PTR [edx], cl
  0093c	40		 inc	 eax
  0093d	42		 inc	 edx
  0093e	84 c9		 test	 cl, cl
  00940	75 f6		 jne	 SHORT $LL156@Init
  00942	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00948	c7 84 86 b0 36
	00 00 64 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 100 ; 00000064H
  00953	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00959	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00964	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0096a	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  0096f	7d 07		 jge	 SHORT $LN153@Init
  00971	40		 inc	 eax
  00972	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN153@Init:

  00978	68 cd 0b 00 00	 push	 3021			; 00000bcdH
  0097d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00982	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00987	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  0098d	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00990	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL160@Init:
  00993	8a 08		 mov	 cl, BYTE PTR [eax]
  00995	88 0a		 mov	 BYTE PTR [edx], cl
  00997	40		 inc	 eax
  00998	42		 inc	 edx
  00999	84 c9		 test	 cl, cl
  0099b	75 f6		 jne	 SHORT $LL160@Init
  0099d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  009a3	c7 84 86 b0 36
	00 00 65 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 101 ; 00000065H
  009ae	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  009b4	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  009bb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  009c1	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  009c6	7d 07		 jge	 SHORT $LN157@Init
  009c8	40		 inc	 eax
  009c9	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN157@Init:

  009cf	68 d1 0b 00 00	 push	 3025			; 00000bd1H
  009d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  009d9	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  009de	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  009e4	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  009e7	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  009ea	8d 9b 00 00 00
	00		 npad	 6
$LL164@Init:
  009f0	8a 08		 mov	 cl, BYTE PTR [eax]
  009f2	88 0a		 mov	 BYTE PTR [edx], cl
  009f4	40		 inc	 eax
  009f5	42		 inc	 edx
  009f6	84 c9		 test	 cl, cl
  009f8	75 f6		 jne	 SHORT $LL164@Init
  009fa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00a00	c7 84 86 b0 36
	00 00 68 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 104 ; 00000068H
  00a0b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00a11	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00a1c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00a22	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00a27	7d 07		 jge	 SHORT $LN161@Init
  00a29	40		 inc	 eax
  00a2a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN161@Init:

  00a30	68 d2 0b 00 00	 push	 3026			; 00000bd2H
  00a35	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00a3a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00a3f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00a45	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00a48	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00a4b	eb 03 8d 49 00	 npad	 5
$LL168@Init:
  00a50	8a 08		 mov	 cl, BYTE PTR [eax]
  00a52	88 0a		 mov	 BYTE PTR [edx], cl
  00a54	40		 inc	 eax
  00a55	42		 inc	 edx
  00a56	84 c9		 test	 cl, cl
  00a58	75 f6		 jne	 SHORT $LL168@Init
  00a5a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00a60	c7 84 86 b0 36
	00 00 6a 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 106 ; 0000006aH
  00a6b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00a71	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00a7c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00a82	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00a87	7d 07		 jge	 SHORT $LN165@Init
  00a89	40		 inc	 eax
  00a8a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN165@Init:

  00a90	68 d3 0b 00 00	 push	 3027			; 00000bd3H
  00a95	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00a9a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00a9f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00aa5	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00aa8	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00aab	eb 03 8d 49 00	 npad	 5
$LL172@Init:
  00ab0	8a 08		 mov	 cl, BYTE PTR [eax]
  00ab2	88 0a		 mov	 BYTE PTR [edx], cl
  00ab4	40		 inc	 eax
  00ab5	42		 inc	 edx
  00ab6	84 c9		 test	 cl, cl
  00ab8	75 f6		 jne	 SHORT $LL172@Init
  00aba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00ac0	c7 84 86 b0 36
	00 00 6c 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 108 ; 0000006cH
  00acb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00ad1	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00adc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00ae2	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00ae7	7d 07		 jge	 SHORT $LN169@Init
  00ae9	40		 inc	 eax
  00aea	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN169@Init:

  00af0	68 d4 0b 00 00	 push	 3028			; 00000bd4H
  00af5	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00afa	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00aff	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00b05	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00b08	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00b0b	eb 03 8d 49 00	 npad	 5
$LL176@Init:
  00b10	8a 08		 mov	 cl, BYTE PTR [eax]
  00b12	88 0a		 mov	 BYTE PTR [edx], cl
  00b14	40		 inc	 eax
  00b15	42		 inc	 edx
  00b16	84 c9		 test	 cl, cl
  00b18	75 f6		 jne	 SHORT $LL176@Init
  00b1a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00b20	c7 84 86 b0 36
	00 00 70 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 112 ; 00000070H
  00b2b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00b31	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00b3c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00b42	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00b47	7d 07		 jge	 SHORT $LN173@Init
  00b49	40		 inc	 eax
  00b4a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN173@Init:

  00b50	68 d5 0b 00 00	 push	 3029			; 00000bd5H
  00b55	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00b5a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00b5f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00b65	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00b68	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00b6b	eb 03 8d 49 00	 npad	 5
$LL180@Init:
  00b70	8a 08		 mov	 cl, BYTE PTR [eax]
  00b72	88 0a		 mov	 BYTE PTR [edx], cl
  00b74	40		 inc	 eax
  00b75	42		 inc	 edx
  00b76	84 c9		 test	 cl, cl
  00b78	75 f6		 jne	 SHORT $LL180@Init
  00b7a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00b80	c7 84 86 b0 36
	00 00 6f 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 111 ; 0000006fH
  00b8b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00b91	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00b9c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00ba2	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00ba7	7d 07		 jge	 SHORT $LN177@Init
  00ba9	40		 inc	 eax
  00baa	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN177@Init:

  00bb0	68 d6 0b 00 00	 push	 3030			; 00000bd6H
  00bb5	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00bba	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00bbf	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00bc5	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00bc8	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00bcb	eb 03 8d 49 00	 npad	 5
$LL184@Init:
  00bd0	8a 08		 mov	 cl, BYTE PTR [eax]
  00bd2	88 0a		 mov	 BYTE PTR [edx], cl
  00bd4	40		 inc	 eax
  00bd5	42		 inc	 edx
  00bd6	84 c9		 test	 cl, cl
  00bd8	75 f6		 jne	 SHORT $LL184@Init
  00bda	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00be0	c7 84 86 b0 36
	00 00 6d 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 109 ; 0000006dH
  00beb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00bf1	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00bfc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00c02	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00c07	7d 07		 jge	 SHORT $LN181@Init
  00c09	40		 inc	 eax
  00c0a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN181@Init:

  00c10	68 d7 0b 00 00	 push	 3031			; 00000bd7H
  00c15	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00c1a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00c1f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00c25	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00c28	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00c2b	eb 03 8d 49 00	 npad	 5
$LL188@Init:
  00c30	8a 08		 mov	 cl, BYTE PTR [eax]
  00c32	88 0a		 mov	 BYTE PTR [edx], cl
  00c34	40		 inc	 eax
  00c35	42		 inc	 edx
  00c36	84 c9		 test	 cl, cl
  00c38	75 f6		 jne	 SHORT $LL188@Init
  00c3a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00c40	c7 84 86 b0 36
	00 00 6e 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 110 ; 0000006eH
  00c4b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00c51	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00c5c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00c62	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00c67	7d 07		 jge	 SHORT $LN185@Init
  00c69	40		 inc	 eax
  00c6a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN185@Init:

  00c70	68 d9 0b 00 00	 push	 3033			; 00000bd9H
  00c75	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00c7a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00c7f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00c85	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00c88	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00c8b	eb 03 8d 49 00	 npad	 5
$LL192@Init:
  00c90	8a 08		 mov	 cl, BYTE PTR [eax]
  00c92	88 0a		 mov	 BYTE PTR [edx], cl
  00c94	40		 inc	 eax
  00c95	42		 inc	 edx
  00c96	84 c9		 test	 cl, cl
  00c98	75 f6		 jne	 SHORT $LL192@Init
  00c9a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00ca0	c7 84 86 b0 36
	00 00 c9 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 201 ; 000000c9H
  00cab	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00cb1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00cb8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00cbe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00cc3	7d 07		 jge	 SHORT $LN189@Init
  00cc5	40		 inc	 eax
  00cc6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN189@Init:

  00ccc	68 da 0b 00 00	 push	 3034			; 00000bdaH
  00cd1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00cd6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00cdb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00ce1	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00ce4	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL196@Init:
  00ce7	8a 08		 mov	 cl, BYTE PTR [eax]
  00ce9	88 0a		 mov	 BYTE PTR [edx], cl
  00ceb	40		 inc	 eax
  00cec	42		 inc	 edx
  00ced	84 c9		 test	 cl, cl
  00cef	75 f6		 jne	 SHORT $LL196@Init
  00cf1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00cf7	c7 84 86 b0 36
	00 00 c8 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 200 ; 000000c8H
  00d02	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00d08	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00d0f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00d15	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00d1a	7d 07		 jge	 SHORT $LN193@Init
  00d1c	40		 inc	 eax
  00d1d	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN193@Init:

  00d23	68 db 0b 00 00	 push	 3035			; 00000bdbH
  00d28	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00d2d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00d32	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00d38	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00d3b	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00d3e	8b ff		 npad	 2
$LL200@Init:
  00d40	8a 08		 mov	 cl, BYTE PTR [eax]
  00d42	88 0a		 mov	 BYTE PTR [edx], cl
  00d44	40		 inc	 eax
  00d45	42		 inc	 edx
  00d46	84 c9		 test	 cl, cl
  00d48	75 f6		 jne	 SHORT $LL200@Init
  00d4a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00d50	c7 84 86 b0 36
	00 00 ca 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 202 ; 000000caH
  00d5b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00d61	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00d68	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00d6e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00d73	7d 07		 jge	 SHORT $LN197@Init
  00d75	40		 inc	 eax
  00d76	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN197@Init:

  00d7c	68 dc 0b 00 00	 push	 3036			; 00000bdcH
  00d81	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00d86	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00d8b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00d91	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00d94	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL204@Init:
  00d97	8a 08		 mov	 cl, BYTE PTR [eax]
  00d99	88 0a		 mov	 BYTE PTR [edx], cl
  00d9b	40		 inc	 eax
  00d9c	42		 inc	 edx
  00d9d	84 c9		 test	 cl, cl
  00d9f	75 f6		 jne	 SHORT $LL204@Init
  00da1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00da7	89 bc 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], edi
  00dae	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00db4	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  00dbb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00dc1	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00dc6	7d 07		 jge	 SHORT $LN201@Init
  00dc8	40		 inc	 eax
  00dc9	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN201@Init:

  00dcf	68 c9 0b 00 00	 push	 3017			; 00000bc9H
  00dd4	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00dd9	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00dde	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00de4	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00de7	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00dea	8d 9b 00 00 00
	00		 npad	 6
$LL208@Init:
  00df0	8a 08		 mov	 cl, BYTE PTR [eax]
  00df2	88 0a		 mov	 BYTE PTR [edx], cl
  00df4	40		 inc	 eax
  00df5	42		 inc	 edx
  00df6	84 c9		 test	 cl, cl
  00df8	75 f6		 jne	 SHORT $LL208@Init
  00dfa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00e00	c7 84 86 b0 36
	00 00 d6 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 214 ; 000000d6H
  00e0b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00e11	bf 62 00 00 00	 mov	 edi, 98			; 00000062H
  00e16	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  00e1d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00e23	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00e28	7d 07		 jge	 SHORT $LN205@Init
  00e2a	40		 inc	 eax
  00e2b	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN205@Init:

  00e31	68 ca 0b 00 00	 push	 3018			; 00000bcaH
  00e36	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00e3b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00e40	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00e46	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00e49	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00e4c	8d 64 24 00	 npad	 4
$LL212@Init:
  00e50	8a 08		 mov	 cl, BYTE PTR [eax]
  00e52	88 0a		 mov	 BYTE PTR [edx], cl
  00e54	40		 inc	 eax
  00e55	42		 inc	 edx
  00e56	84 c9		 test	 cl, cl
  00e58	75 f6		 jne	 SHORT $LL212@Init
  00e5a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00e60	bb d7 00 00 00	 mov	 ebx, 215		; 000000d7H
  00e65	89 9c 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], ebx
  00e6c	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00e72	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  00e79	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00e7f	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00e84	7d 07		 jge	 SHORT $LN209@Init
  00e86	40		 inc	 eax
  00e87	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN209@Init:

  00e8d	68 cb 0b 00 00	 push	 3019			; 00000bcbH
  00e92	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00e97	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00e9c	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00ea2	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00ea5	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL216@Init:
  00ea8	8a 08		 mov	 cl, BYTE PTR [eax]
  00eaa	88 0a		 mov	 BYTE PTR [edx], cl
  00eac	40		 inc	 eax
  00ead	42		 inc	 edx
  00eae	84 c9		 test	 cl, cl
  00eb0	75 f6		 jne	 SHORT $LL216@Init
  00eb2	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00eb8	bf d8 00 00 00	 mov	 edi, 216		; 000000d8H
  00ebd	89 bc 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], edi
  00ec4	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00eca	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00ed5	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00edb	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00ee0	7d 07		 jge	 SHORT $LN213@Init
  00ee2	40		 inc	 eax
  00ee3	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN213@Init:

  00ee9	68 dd 0b 00 00	 push	 3037			; 00000bddH
  00eee	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00ef3	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00ef8	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00efe	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00f01	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL220@Init:
  00f04	8a 08		 mov	 cl, BYTE PTR [eax]
  00f06	88 0a		 mov	 BYTE PTR [edx], cl
  00f08	40		 inc	 eax
  00f09	42		 inc	 edx
  00f0a	84 c9		 test	 cl, cl
  00f0c	75 f6		 jne	 SHORT $LL220@Init
  00f0e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00f14	c7 84 86 b0 36
	00 00 d6 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 214 ; 000000d6H
  00f1f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00f25	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00f30	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00f36	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00f3b	7d 07		 jge	 SHORT $LN217@Init
  00f3d	40		 inc	 eax
  00f3e	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN217@Init:

  00f44	68 de 0b 00 00	 push	 3038			; 00000bdeH
  00f49	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00f4e	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00f53	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00f59	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00f5c	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  00f5f	90		 npad	 1
$LL224@Init:
  00f60	8a 08		 mov	 cl, BYTE PTR [eax]
  00f62	88 0a		 mov	 BYTE PTR [edx], cl
  00f64	40		 inc	 eax
  00f65	42		 inc	 edx
  00f66	84 c9		 test	 cl, cl
  00f68	75 f6		 jne	 SHORT $LL224@Init
  00f6a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00f70	89 9c 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], ebx
  00f77	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00f7d	c7 84 8e a0 41
	00 00 62 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+16800], 98 ; 00000062H
  00f88	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00f8e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00f93	7d 07		 jge	 SHORT $LN221@Init
  00f95	40		 inc	 eax
  00f96	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN221@Init:

  00f9c	68 df 0b 00 00	 push	 3039			; 00000bdfH
  00fa1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00fa6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00fab	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00fb1	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00fb4	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL228@Init:
  00fb7	8a 08		 mov	 cl, BYTE PTR [eax]
  00fb9	88 0a		 mov	 BYTE PTR [edx], cl
  00fbb	40		 inc	 eax
  00fbc	42		 inc	 edx
  00fbd	84 c9		 test	 cl, cl
  00fbf	75 f6		 jne	 SHORT $LL228@Init
  00fc1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00fc7	89 bc 86 b0 36
	00 00		 mov	 DWORD PTR [esi+eax*4+14000], edi
  00fce	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  00fd4	bf 62 00 00 00	 mov	 edi, 98			; 00000062H
  00fd9	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  00fe0	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00fe6	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  00feb	7d 07		 jge	 SHORT $LN225@Init
  00fed	40		 inc	 eax
  00fee	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN225@Init:

  00ff4	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  00ffa	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00ffd	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BA@FNMHHGEB@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$AA@
  01002	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL232@Init:
  01005	8a 01		 mov	 al, BYTE PTR [ecx]
  01007	88 02		 mov	 BYTE PTR [edx], al
  01009	41		 inc	 ecx
  0100a	42		 inc	 edx
  0100b	84 c0		 test	 al, al
  0100d	75 f6		 jne	 SHORT $LL232@Init
  0100f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01015	c7 84 86 b0 36
	00 00 40 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 320 ; 00000140H
  01020	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01026	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  0102d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01033	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01038	7d 07		 jge	 SHORT $LN229@Init
  0103a	40		 inc	 eax
  0103b	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN229@Init:

  01041	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01047	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0104a	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@FGHNKPCD@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KJ?$KH?$KJ?$AA@
  0104f	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL236@Init:
  01052	8a 01		 mov	 al, BYTE PTR [ecx]
  01054	88 02		 mov	 BYTE PTR [edx], al
  01056	41		 inc	 ecx
  01057	42		 inc	 edx
  01058	84 c0		 test	 al, al
  0105a	75 f6		 jne	 SHORT $LL236@Init
  0105c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01062	c7 84 86 b0 36
	00 00 41 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 321 ; 00000141H
  0106d	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01073	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  0107a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01080	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01085	7d 07		 jge	 SHORT $LN233@Init
  01087	40		 inc	 eax
  01088	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN233@Init:

  0108e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01094	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01097	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BD@PPJBNIED@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@
  0109c	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0109f	90		 npad	 1
$LL240@Init:
  010a0	8a 01		 mov	 al, BYTE PTR [ecx]
  010a2	88 02		 mov	 BYTE PTR [edx], al
  010a4	41		 inc	 ecx
  010a5	42		 inc	 edx
  010a6	84 c0		 test	 al, al
  010a8	75 f6		 jne	 SHORT $LL240@Init
  010aa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  010b0	c7 84 86 b0 36
	00 00 42 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 322 ; 00000142H
  010bb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  010c1	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  010c8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  010ce	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  010d3	7d 07		 jge	 SHORT $LN237@Init
  010d5	40		 inc	 eax
  010d6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN237@Init:

  010dc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  010e2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  010e5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BK@DDBFHPDI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$AA@
  010ea	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  010ed	8d 49 00	 npad	 3
$LL244@Init:
  010f0	8a 01		 mov	 al, BYTE PTR [ecx]
  010f2	88 02		 mov	 BYTE PTR [edx], al
  010f4	41		 inc	 ecx
  010f5	42		 inc	 edx
  010f6	84 c0		 test	 al, al
  010f8	75 f6		 jne	 SHORT $LL244@Init
  010fa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01100	c7 84 86 b0 36
	00 00 43 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 323 ; 00000143H
  0110b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01111	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  01118	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0111e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01123	7d 07		 jge	 SHORT $LN241@Init
  01125	40		 inc	 eax
  01126	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN241@Init:

  0112c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01132	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01135	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BG@CFCNIMMI@?1?$KH?$KF?$KH?a?$DP?$KH?$LC?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$AA@
  0113a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0113d	8d 49 00	 npad	 3
$LL248@Init:
  01140	8a 01		 mov	 al, BYTE PTR [ecx]
  01142	88 02		 mov	 BYTE PTR [edx], al
  01144	41		 inc	 ecx
  01145	42		 inc	 edx
  01146	84 c0		 test	 al, al
  01148	75 f6		 jne	 SHORT $LL248@Init
  0114a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01150	c7 84 86 b0 36
	00 00 44 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 324 ; 00000144H
  0115b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01161	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  01168	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0116e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01173	7d 07		 jge	 SHORT $LN245@Init
  01175	40		 inc	 eax
  01176	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN245@Init:

  0117c	6a 11		 push	 17			; 00000011H
  0117e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01183	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01188	84 c0		 test	 al, al
  0118a	75 24		 jne	 SHORT $LN36@Init
  0118c	6a 1a		 push	 26			; 0000001aH
  0118e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01193	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01198	84 c0		 test	 al, al
  0119a	75 14		 jne	 SHORT $LN36@Init
  0119c	6a 1c		 push	 28			; 0000001cH
  0119e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  011a3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  011a8	84 c0		 test	 al, al
  011aa	0f 84 ce 02 00
	00		 je	 $LN693@Init
$LN36@Init:

  011b0	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  011b6	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  011b9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0P@CFKAJOGB@?1cschangeowner?$AA@
  011be	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL252@Init:
  011c1	8a 01		 mov	 al, BYTE PTR [ecx]
  011c3	88 02		 mov	 BYTE PTR [edx], al
  011c5	41		 inc	 ecx
  011c6	42		 inc	 edx
  011c7	84 c0		 test	 al, al
  011c9	75 f6		 jne	 SHORT $LL252@Init
  011cb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  011d1	c7 84 86 b0 36
	00 00 4b 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 331 ; 0000014bH
  011dc	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  011e2	bb 63 00 00 00	 mov	 ebx, 99			; 00000063H
  011e7	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  011ee	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  011f4	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  011f9	7d 07		 jge	 SHORT $LN249@Init
  011fb	40		 inc	 eax
  011fc	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN249@Init:

  01202	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01208	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0120b	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0P@MGCHOPPN@?1cssetregsiege?$AA@
  01210	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL256@Init:
  01213	8a 01		 mov	 al, BYTE PTR [ecx]
  01215	88 02		 mov	 BYTE PTR [edx], al
  01217	41		 inc	 ecx
  01218	42		 inc	 edx
  01219	84 c0		 test	 al, al
  0121b	75 f6		 jne	 SHORT $LL256@Init
  0121d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01223	c7 84 86 b0 36
	00 00 4c 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 332 ; 0000014cH
  0122e	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01234	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  0123b	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01241	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01246	7d 07		 jge	 SHORT $LN253@Init
  01248	40		 inc	 eax
  01249	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN253@Init:

  0124f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01255	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01258	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@LJFGCBBI@?1cssetregmark?$AA@
  0125d	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL260@Init:
  01260	8a 01		 mov	 al, BYTE PTR [ecx]
  01262	88 02		 mov	 BYTE PTR [edx], al
  01264	41		 inc	 ecx
  01265	42		 inc	 edx
  01266	84 c0		 test	 al, al
  01268	75 f6		 jne	 SHORT $LL260@Init
  0126a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01270	c7 84 86 b0 36
	00 00 4d 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 333 ; 0000014dH
  0127b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01281	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01288	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0128e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01293	7d 07		 jge	 SHORT $LN257@Init
  01295	40		 inc	 eax
  01296	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN257@Init:

  0129c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  012a2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  012a5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@KFOJMJDB@?1cssetnotify?$AA@
  012aa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  012ad	8d 49 00	 npad	 3
$LL264@Init:
  012b0	8a 01		 mov	 al, BYTE PTR [ecx]
  012b2	88 02		 mov	 BYTE PTR [edx], al
  012b4	41		 inc	 ecx
  012b5	42		 inc	 edx
  012b6	84 c0		 test	 al, al
  012b8	75 f6		 jne	 SHORT $LL264@Init
  012ba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  012c0	c7 84 86 b0 36
	00 00 4e 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 334 ; 0000014eH
  012cb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  012d1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  012d8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  012de	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  012e3	7d 07		 jge	 SHORT $LN261@Init
  012e5	40		 inc	 eax
  012e6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN261@Init:

  012ec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  012f2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  012f5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@GNJNLPIG@?1cssetstart?$AA@
  012fa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  012fd	8d 49 00	 npad	 3
$LL268@Init:
  01300	8a 01		 mov	 al, BYTE PTR [ecx]
  01302	88 02		 mov	 BYTE PTR [edx], al
  01304	41		 inc	 ecx
  01305	42		 inc	 edx
  01306	84 c0		 test	 al, al
  01308	75 f6		 jne	 SHORT $LL268@Init
  0130a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01310	c7 84 86 b0 36
	00 00 4f 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 335 ; 0000014fH
  0131b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01321	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01328	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0132e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01333	7d 07		 jge	 SHORT $LN265@Init
  01335	40		 inc	 eax
  01336	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN265@Init:

  0133c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01342	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01345	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDNJLJCO@?1cssetend?$AA@
  0134a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0134d	8d 49 00	 npad	 3
$LL272@Init:
  01350	8a 01		 mov	 al, BYTE PTR [ecx]
  01352	88 02		 mov	 BYTE PTR [edx], al
  01354	41		 inc	 ecx
  01355	42		 inc	 edx
  01356	84 c0		 test	 al, al
  01358	75 f6		 jne	 SHORT $LL272@Init
  0135a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01360	c7 84 86 b0 36
	00 00 50 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 336 ; 00000150H
  0136b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01371	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01378	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0137e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01383	7d 07		 jge	 SHORT $LN269@Init
  01385	40		 inc	 eax
  01386	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN269@Init:

  0138c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01392	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01395	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@PKNCEDPD@?1cscurowner?$AA@
  0139a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0139d	8d 49 00	 npad	 3
$LL276@Init:
  013a0	8a 01		 mov	 al, BYTE PTR [ecx]
  013a2	88 02		 mov	 BYTE PTR [edx], al
  013a4	41		 inc	 ecx
  013a5	42		 inc	 edx
  013a6	84 c0		 test	 al, al
  013a8	75 f6		 jne	 SHORT $LL276@Init
  013aa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  013b0	c7 84 86 b0 36
	00 00 51 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 337 ; 00000151H
  013bb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  013c1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  013c8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  013ce	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  013d3	7d 07		 jge	 SHORT $LN273@Init
  013d5	40		 inc	 eax
  013d6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN273@Init:

  013dc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  013e2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  013e5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@IJGCKGEE@?1cscurstate?$AA@
  013ea	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  013ed	8d 49 00	 npad	 3
$LL280@Init:
  013f0	8a 01		 mov	 al, BYTE PTR [ecx]
  013f2	88 02		 mov	 BYTE PTR [edx], al
  013f4	41		 inc	 ecx
  013f5	42		 inc	 edx
  013f6	84 c0		 test	 al, al
  013f8	75 f6		 jne	 SHORT $LL280@Init
  013fa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01400	c7 84 86 b0 36
	00 00 52 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 338 ; 00000152H
  0140b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01411	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01418	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0141e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01423	7d 07		 jge	 SHORT $LN277@Init
  01425	40		 inc	 eax
  01426	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN277@Init:

  0142c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01432	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01435	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@GJAGAOFL@?1cschangeside?$AA@
  0143a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0143d	8d 49 00	 npad	 3
$LL284@Init:
  01440	8a 01		 mov	 al, BYTE PTR [ecx]
  01442	88 02		 mov	 BYTE PTR [edx], al
  01444	41		 inc	 ecx
  01445	42		 inc	 edx
  01446	84 c0		 test	 al, al
  01448	75 f6		 jne	 SHORT $LL284@Init
  0144a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01450	c7 84 86 b0 36
	00 00 54 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 340 ; 00000154H
  0145b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01461	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01468	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0146e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01473	7d 0e		 jge	 SHORT $LN281@Init
  01475	40		 inc	 eax
  01476	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
  0147c	eb 05		 jmp	 SHORT $LN281@Init
$LN693@Init:
  0147e	bb 63 00 00 00	 mov	 ebx, 99			; 00000063H
$LN281@Init:

  01483	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01489	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0148c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09KCMIMFNA@?1?$KH?$KI?$KH?j?$KH?$KC?$KH?$LJ?$AA@
  01491	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL288@Init:
  01494	8a 01		 mov	 al, BYTE PTR [ecx]
  01496	88 02		 mov	 BYTE PTR [edx], al
  01498	41		 inc	 ecx
  01499	42		 inc	 edx
  0149a	84 c0		 test	 al, al
  0149c	75 f6		 jne	 SHORT $LL288@Init
  0149e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  014a4	c7 84 86 b0 36
	00 00 d9 00 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 217 ; 000000d9H
  014af	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  014b5	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  014bc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  014c2	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  014c7	7d 07		 jge	 SHORT $LN285@Init
  014c9	40		 inc	 eax
  014ca	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN285@Init:

  014d0	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  014d6	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  014d9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08LALCHEKK@?1hide_on?$AA@
  014de	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL292@Init:
  014e1	8a 01		 mov	 al, BYTE PTR [ecx]
  014e3	88 02		 mov	 BYTE PTR [edx], al
  014e5	41		 inc	 ecx
  014e6	42		 inc	 edx
  014e7	84 c0		 test	 al, al
  014e9	75 f6		 jne	 SHORT $LL292@Init
  014eb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  014f1	c7 84 86 b0 36
	00 00 86 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 390 ; 00000186H
  014fc	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01502	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  01509	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0150f	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01514	7d 07		 jge	 SHORT $LN289@Init
  01516	40		 inc	 eax
  01517	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN289@Init:

  0151d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01523	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01526	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09LAHGFBL@?1hide_off?$AA@
  0152b	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0152e	8b ff		 npad	 2
$LL296@Init:
  01530	8a 01		 mov	 al, BYTE PTR [ecx]
  01532	88 02		 mov	 BYTE PTR [edx], al
  01534	41		 inc	 ecx
  01535	42		 inc	 edx
  01536	84 c0		 test	 al, al
  01538	75 f6		 jne	 SHORT $LL296@Init
  0153a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01540	c7 84 86 b0 36
	00 00 87 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 391 ; 00000187H
  0154b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01551	89 bc 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], edi
  01558	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0155e	5f		 pop	 edi
  0155f	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01564	7d 07		 jge	 SHORT $LN293@Init
  01566	40		 inc	 eax
  01567	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN293@Init:

  0156d	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01573	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01576	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06EIGIJLP@?1gmove?$AA@
  0157b	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0157e	8b ff		 npad	 2
$LL300@Init:
  01580	8a 01		 mov	 al, BYTE PTR [ecx]
  01582	88 02		 mov	 BYTE PTR [edx], al
  01584	41		 inc	 ecx
  01585	42		 inc	 edx
  01586	84 c0		 test	 al, al
  01588	75 f6		 jne	 SHORT $LL300@Init
  0158a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01590	c7 84 86 b0 36
	00 00 58 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 600 ; 00000258H
  0159b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  015a1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  015a8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  015ae	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  015b3	7d 07		 jge	 SHORT $LN297@Init
  015b5	40		 inc	 eax
  015b6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN297@Init:

  015bc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  015c2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  015c5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@GKFFDGBI@?1partyleader?$AA@
  015ca	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  015cd	8d 49 00	 npad	 3
$LL304@Init:
  015d0	8a 01		 mov	 al, BYTE PTR [ecx]
  015d2	88 02		 mov	 BYTE PTR [edx], al
  015d4	41		 inc	 ecx
  015d5	42		 inc	 edx
  015d6	84 c0		 test	 al, al
  015d8	75 f6		 jne	 SHORT $LL304@Init
  015da	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  015e0	c7 84 86 b0 36
	00 00 5a 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 602 ; 0000025aH
  015eb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  015f1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  015f8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  015fe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01603	7d 07		 jge	 SHORT $LN301@Init
  01605	40		 inc	 eax
  01606	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN301@Init:

  0160c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01612	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01615	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08OLAJOHAK@?1banchat?$AA@
  0161a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0161d	8d 49 00	 npad	 3
$LL308@Init:
  01620	8a 01		 mov	 al, BYTE PTR [ecx]
  01622	88 02		 mov	 BYTE PTR [edx], al
  01624	41		 inc	 ecx
  01625	42		 inc	 edx
  01626	84 c0		 test	 al, al
  01628	75 f6		 jne	 SHORT $LL308@Init
  0162a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01630	c7 84 86 b0 36
	00 00 5c 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 604 ; 0000025cH
  0163b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01641	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01648	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0164e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01653	7d 07		 jge	 SHORT $LN305@Init
  01655	40		 inc	 eax
  01656	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN305@Init:

  0165c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01662	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01665	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08EODMEFPP@?1banpost?$AA@
  0166a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0166d	8d 49 00	 npad	 3
$LL312@Init:
  01670	8a 01		 mov	 al, BYTE PTR [ecx]
  01672	88 02		 mov	 BYTE PTR [edx], al
  01674	41		 inc	 ecx
  01675	42		 inc	 edx
  01676	84 c0		 test	 al, al
  01678	75 f6		 jne	 SHORT $LL312@Init
  0167a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01680	c7 84 86 b0 36
	00 00 5d 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 605 ; 0000025dH
  0168b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01691	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01698	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0169e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  016a3	7d 07		 jge	 SHORT $LN309@Init
  016a5	40		 inc	 eax
  016a6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN309@Init:

  016ac	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  016b2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  016b5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08LNFDEAIM@?1banchar?$AA@
  016ba	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  016bd	8d 49 00	 npad	 3
$LL316@Init:
  016c0	8a 01		 mov	 al, BYTE PTR [ecx]
  016c2	88 02		 mov	 BYTE PTR [edx], al
  016c4	41		 inc	 ecx
  016c5	42		 inc	 edx
  016c6	84 c0		 test	 al, al
  016c8	75 f6		 jne	 SHORT $LL316@Init
  016ca	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  016d0	c7 84 86 b0 36
	00 00 5e 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 606 ; 0000025eH
  016db	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  016e1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  016e8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  016ee	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  016f3	7d 07		 jge	 SHORT $LN313@Init
  016f5	40		 inc	 eax
  016f6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN313@Init:

  016fc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01702	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01705	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@EBJEOBJJ@?1banallchat?$AA@
  0170a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0170d	8d 49 00	 npad	 3
$LL320@Init:
  01710	8a 01		 mov	 al, BYTE PTR [ecx]
  01712	88 02		 mov	 BYTE PTR [edx], al
  01714	41		 inc	 ecx
  01715	42		 inc	 edx
  01716	84 c0		 test	 al, al
  01718	75 f6		 jne	 SHORT $LL320@Init
  0171a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01720	c7 84 86 b0 36
	00 00 5f 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 607 ; 0000025fH
  0172b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01731	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01738	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0173e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01743	7d 07		 jge	 SHORT $LN317@Init
  01745	40		 inc	 eax
  01746	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN317@Init:

  0174c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01752	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01755	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@KKGKGAMB@?1unbanchat?$AA@
  0175a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0175d	8d 49 00	 npad	 3
$LL324@Init:
  01760	8a 01		 mov	 al, BYTE PTR [ecx]
  01762	88 02		 mov	 BYTE PTR [edx], al
  01764	41		 inc	 ecx
  01765	42		 inc	 edx
  01766	84 c0		 test	 al, al
  01768	75 f6		 jne	 SHORT $LL324@Init
  0176a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01770	c7 84 86 b0 36
	00 00 60 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 608 ; 00000260H
  0177b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01781	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01788	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0178e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01793	7d 07		 jge	 SHORT $LN321@Init
  01795	40		 inc	 eax
  01796	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN321@Init:

  0179c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  017a2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  017a5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@PFPMCDE@?1unbanpost?$AA@
  017aa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  017ad	8d 49 00	 npad	 3
$LL328@Init:
  017b0	8a 01		 mov	 al, BYTE PTR [ecx]
  017b2	88 02		 mov	 BYTE PTR [edx], al
  017b4	41		 inc	 ecx
  017b5	42		 inc	 edx
  017b6	84 c0		 test	 al, al
  017b8	75 f6		 jne	 SHORT $LL328@Init
  017ba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  017c0	c7 84 86 b0 36
	00 00 61 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 609 ; 00000261H
  017cb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  017d1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  017d8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  017de	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  017e3	7d 07		 jge	 SHORT $LN325@Init
  017e5	40		 inc	 eax
  017e6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN325@Init:

  017ec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  017f2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  017f5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@HMBHKGBH@?1unbanallchat?$AA@
  017fa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  017fd	8d 49 00	 npad	 3
$LL332@Init:
  01800	8a 01		 mov	 al, BYTE PTR [ecx]
  01802	88 02		 mov	 BYTE PTR [edx], al
  01804	41		 inc	 ecx
  01805	42		 inc	 edx
  01806	84 c0		 test	 al, al
  01808	75 f6		 jne	 SHORT $LL332@Init
  0180a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01810	c7 84 86 b0 36
	00 00 62 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 610 ; 00000262H
  0181b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01821	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01828	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0182e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01833	7d 07		 jge	 SHORT $LN329@Init
  01835	40		 inc	 eax
  01836	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN329@Init:

  0183c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01842	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01845	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@PMDAMHEH@?1unbanchar?$AA@
  0184a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0184d	8d 49 00	 npad	 3
$LL336@Init:
  01850	8a 01		 mov	 al, BYTE PTR [ecx]
  01852	88 02		 mov	 BYTE PTR [edx], al
  01854	41		 inc	 ecx
  01855	42		 inc	 edx
  01856	84 c0		 test	 al, al
  01858	75 f6		 jne	 SHORT $LL336@Init
  0185a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01860	c7 84 86 b0 36
	00 00 63 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 611 ; 00000263H
  0186b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01871	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01878	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0187e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01883	7d 07		 jge	 SHORT $LN333@Init
  01885	40		 inc	 eax
  01886	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN333@Init:

  0188c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01892	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01895	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07EGGDJHFC@?1offafk?$AA@
  0189a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0189d	8d 49 00	 npad	 3
$LL340@Init:
  018a0	8a 01		 mov	 al, BYTE PTR [ecx]
  018a2	88 02		 mov	 BYTE PTR [edx], al
  018a4	41		 inc	 ecx
  018a5	42		 inc	 edx
  018a6	84 c0		 test	 al, al
  018a8	75 f6		 jne	 SHORT $LL340@Init
  018aa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  018b0	c7 84 86 b0 36
	00 00 64 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 612 ; 00000264H
  018bb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  018c1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  018c8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  018ce	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  018d3	7d 07		 jge	 SHORT $LN337@Init
  018d5	40		 inc	 eax
  018d6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN337@Init:

  018dc	6a 07		 push	 7
  018de	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  018e3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  018e8	84 c0		 test	 al, al
  018ea	0f 85 7f 00 00
	00		 jne	 $LN34@Init
  018f0	6a 08		 push	 8
  018f2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  018f7	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  018fc	84 c0		 test	 al, al
  018fe	75 6f		 jne	 SHORT $LN34@Init
  01900	6a 2b		 push	 43			; 0000002bH
  01902	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01907	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0190c	84 c0		 test	 al, al
  0190e	75 5f		 jne	 SHORT $LN34@Init

  01910	6a 01		 push	 1
  01912	68 65 02 00 00	 push	 613			; 00000265H
  01917	68 8b 00 00 00	 push	 139			; 0000008bH
  0191c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  01921	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01926	50		 push	 eax
  01927	8b ce		 mov	 ecx, esi
  01929	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  0192e	6a 01		 push	 1
  01930	68 66 02 00 00	 push	 614			; 00000266H
  01935	68 8c 00 00 00	 push	 140			; 0000008cH
  0193a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0193f	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01944	50		 push	 eax
  01945	8b ce		 mov	 ecx, esi
  01947	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  0194c	6a 01		 push	 1
  0194e	68 67 02 00 00	 push	 615			; 00000267H
  01953	68 8d 00 00 00	 push	 141			; 0000008dH
  01958	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0195d	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01962	50		 push	 eax
  01963	8b ce		 mov	 ecx, esi
  01965	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add
  0196a	e9 ed 00 00 00	 jmp	 $LN349@Init
$LN34@Init:

  0196f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01975	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01978	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@NDCPGCDL@?1sendchaos?$AA@
  0197d	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL344@Init:
  01980	8a 01		 mov	 al, BYTE PTR [ecx]
  01982	88 02		 mov	 BYTE PTR [edx], al
  01984	41		 inc	 ecx
  01985	42		 inc	 edx
  01986	84 c0		 test	 al, al
  01988	75 f6		 jne	 SHORT $LL344@Init
  0198a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01990	c7 84 86 b0 36
	00 00 65 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 613 ; 00000265H
  0199b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  019a1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  019a8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  019ae	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  019b3	7d 07		 jge	 SHORT $LN341@Init
  019b5	40		 inc	 eax
  019b6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN341@Init:

  019bc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  019c2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  019c5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@HHKNNKBN@?1sendbless?$AA@
  019ca	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  019cd	8d 49 00	 npad	 3
$LL348@Init:
  019d0	8a 01		 mov	 al, BYTE PTR [ecx]
  019d2	88 02		 mov	 BYTE PTR [edx], al
  019d4	41		 inc	 ecx
  019d5	42		 inc	 edx
  019d6	84 c0		 test	 al, al
  019d8	75 f6		 jne	 SHORT $LL348@Init
  019da	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  019e0	c7 84 86 b0 36
	00 00 66 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 614 ; 00000266H
  019eb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  019f1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  019f8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  019fe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01a03	7d 07		 jge	 SHORT $LN345@Init
  01a05	40		 inc	 eax
  01a06	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN345@Init:

  01a0c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01a12	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01a15	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09PNKPBHLF@?1sendsoul?$AA@
  01a1a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01a1d	8d 49 00	 npad	 3
$LL352@Init:
  01a20	8a 01		 mov	 al, BYTE PTR [ecx]
  01a22	88 02		 mov	 BYTE PTR [edx], al
  01a24	41		 inc	 ecx
  01a25	42		 inc	 edx
  01a26	84 c0		 test	 al, al
  01a28	75 f6		 jne	 SHORT $LL352@Init
  01a2a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01a30	c7 84 86 b0 36
	00 00 67 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 615 ; 00000267H
  01a3b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01a41	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01a48	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01a4e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01a53	7d 07		 jge	 SHORT $LN349@Init
  01a55	40		 inc	 eax
  01a56	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN349@Init:

  01a5c	6a 09		 push	 9
  01a5e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01a63	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01a68	84 c0		 test	 al, al
  01a6a	74 0e		 je	 SHORT $LN32@Init

  01a6c	6a 01		 push	 1
  01a6e	68 68 02 00 00	 push	 616			; 00000268H
  01a73	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FGKJPHKD@?1sendjowbank?$AA@
  01a78	eb 55		 jmp	 SHORT $LN694@Init
$LN32@Init:

  01a7a	6a 07		 push	 7
  01a7c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01a81	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01a86	84 c0		 test	 al, al
  01a88	75 39		 jne	 SHORT $LN29@Init
  01a8a	6a 08		 push	 8
  01a8c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01a91	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01a96	84 c0		 test	 al, al
  01a98	75 29		 jne	 SHORT $LN29@Init
  01a9a	6a 2b		 push	 43			; 0000002bH
  01a9c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01aa1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01aa6	84 c0		 test	 al, al
  01aa8	75 19		 jne	 SHORT $LN29@Init

  01aaa	6a 01		 push	 1
  01aac	68 68 02 00 00	 push	 616			; 00000268H
  01ab1	68 8e 00 00 00	 push	 142			; 0000008eH
  01ab6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  01abb	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01ac0	50		 push	 eax
  01ac1	eb 0c		 jmp	 SHORT $LN694@Init
$LN29@Init:

  01ac3	6a 01		 push	 1
  01ac5	68 68 02 00 00	 push	 616			; 00000268H
  01aca	68 00 00 00 00	 push	 OFFSET ??_C@_09PFNGOOFK@?1sendlife?$AA@
$LN694@Init:
  01acf	8b ce		 mov	 ecx, esi
  01ad1	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  01ad6	6a 07		 push	 7
  01ad8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01add	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01ae2	84 c0		 test	 al, al
  01ae4	0f 85 7f 00 00
	00		 jne	 $LN26@Init
  01aea	6a 08		 push	 8
  01aec	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01af1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01af6	84 c0		 test	 al, al
  01af8	75 6f		 jne	 SHORT $LN26@Init
  01afa	6a 2b		 push	 43			; 0000002bH
  01afc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01b01	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01b06	84 c0		 test	 al, al
  01b08	75 5f		 jne	 SHORT $LN26@Init

  01b0a	6a 01		 push	 1
  01b0c	68 69 02 00 00	 push	 617			; 00000269H
  01b11	68 8f 00 00 00	 push	 143			; 0000008fH
  01b16	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  01b1b	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01b20	50		 push	 eax
  01b21	8b ce		 mov	 ecx, esi
  01b23	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  01b28	6a 01		 push	 1
  01b2a	68 6a 02 00 00	 push	 618			; 0000026aH
  01b2f	68 90 00 00 00	 push	 144			; 00000090H
  01b34	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  01b39	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01b3e	50		 push	 eax
  01b3f	8b ce		 mov	 ecx, esi
  01b41	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  01b46	6a 01		 push	 1
  01b48	68 6b 02 00 00	 push	 619			; 0000026bH
  01b4d	68 91 00 00 00	 push	 145			; 00000091H
  01b52	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  01b57	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01b5c	50		 push	 eax
  01b5d	8b ce		 mov	 ecx, esi
  01b5f	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add
  01b64	e9 f3 00 00 00	 jmp	 $LN361@Init
$LN26@Init:

  01b69	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01b6f	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01b72	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@FHKJJBDD@?1recvchaos?$AA@
  01b77	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01b7a	8d 9b 00 00 00
	00		 npad	 6
$LL356@Init:
  01b80	8a 01		 mov	 al, BYTE PTR [ecx]
  01b82	88 02		 mov	 BYTE PTR [edx], al
  01b84	41		 inc	 ecx
  01b85	42		 inc	 edx
  01b86	84 c0		 test	 al, al
  01b88	75 f6		 jne	 SHORT $LL356@Init
  01b8a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01b90	c7 84 86 b0 36
	00 00 69 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 617 ; 00000269H
  01b9b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01ba1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01ba8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01bae	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01bb3	7d 07		 jge	 SHORT $LN353@Init
  01bb5	40		 inc	 eax
  01bb6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN353@Init:

  01bbc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01bc2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01bc5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@PDCLCJBF@?1recvbless?$AA@
  01bca	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01bcd	8d 49 00	 npad	 3
$LL360@Init:
  01bd0	8a 01		 mov	 al, BYTE PTR [ecx]
  01bd2	88 02		 mov	 BYTE PTR [edx], al
  01bd4	41		 inc	 ecx
  01bd5	42		 inc	 edx
  01bd6	84 c0		 test	 al, al
  01bd8	75 f6		 jne	 SHORT $LL360@Init
  01bda	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01be0	c7 84 86 b0 36
	00 00 6a 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 618 ; 0000026aH
  01beb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01bf1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01bf8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01bfe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01c03	7d 07		 jge	 SHORT $LN357@Init
  01c05	40		 inc	 eax
  01c06	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN357@Init:

  01c0c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01c12	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01c15	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09MFBNMBKG@?1recvsoul?$AA@
  01c1a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01c1d	8d 49 00	 npad	 3
$LL364@Init:
  01c20	8a 01		 mov	 al, BYTE PTR [ecx]
  01c22	88 02		 mov	 BYTE PTR [edx], al
  01c24	41		 inc	 ecx
  01c25	42		 inc	 edx
  01c26	84 c0		 test	 al, al
  01c28	75 f6		 jne	 SHORT $LL364@Init
  01c2a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01c30	c7 84 86 b0 36
	00 00 6b 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 619 ; 0000026bH
  01c3b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01c41	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01c48	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01c4e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01c53	7d 07		 jge	 SHORT $LN361@Init
  01c55	40		 inc	 eax
  01c56	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN361@Init:

  01c5c	6a 09		 push	 9
  01c5e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01c63	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01c68	84 c0		 test	 al, al
  01c6a	74 0e		 je	 SHORT $LN24@Init

  01c6c	6a 01		 push	 1
  01c6e	68 6c 02 00 00	 push	 620			; 0000026cH
  01c73	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LKMEFKIL@?1recvjowbank?$AA@
  01c78	eb 55		 jmp	 SHORT $LN695@Init
$LN24@Init:

  01c7a	6a 07		 push	 7
  01c7c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01c81	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01c86	84 c0		 test	 al, al
  01c88	75 39		 jne	 SHORT $LN21@Init
  01c8a	6a 08		 push	 8
  01c8c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01c91	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01c96	84 c0		 test	 al, al
  01c98	75 29		 jne	 SHORT $LN21@Init
  01c9a	6a 2b		 push	 43			; 0000002bH
  01c9c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01ca1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01ca6	84 c0		 test	 al, al
  01ca8	75 19		 jne	 SHORT $LN21@Init

  01caa	6a 01		 push	 1
  01cac	68 6c 02 00 00	 push	 620			; 0000026cH
  01cb1	68 92 00 00 00	 push	 146			; 00000092H
  01cb6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  01cbb	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  01cc0	50		 push	 eax
  01cc1	eb 0c		 jmp	 SHORT $LN695@Init
$LN21@Init:

  01cc3	6a 01		 push	 1
  01cc5	68 6c 02 00 00	 push	 620			; 0000026cH
  01cca	68 00 00 00 00	 push	 OFFSET ??_C@_09MNGEDIEJ@?1recvlife?$AA@
$LN695@Init:
  01ccf	8b ce		 mov	 ecx, esi
  01cd1	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  01cd6	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01cdc	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01cdf	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04EHKEOHLL@?1buy?$AA@
  01ce4	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL368@Init:
  01ce7	8a 01		 mov	 al, BYTE PTR [ecx]
  01ce9	88 02		 mov	 BYTE PTR [edx], al
  01ceb	41		 inc	 ecx
  01cec	42		 inc	 edx
  01ced	84 c0		 test	 al, al
  01cef	75 f6		 jne	 SHORT $LL368@Init
  01cf1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01cf7	c7 84 86 b0 36
	00 00 6d 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 621 ; 0000026dH
  01d02	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01d08	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01d0f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01d15	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01d1a	7d 07		 jge	 SHORT $LN365@Init
  01d1c	40		 inc	 eax
  01d1d	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN365@Init:

  01d23	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01d29	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01d2c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@JGOFGPBN@?1sellcredit?$AA@
  01d31	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL372@Init:
  01d34	8a 01		 mov	 al, BYTE PTR [ecx]
  01d36	88 02		 mov	 BYTE PTR [edx], al
  01d38	41		 inc	 ecx
  01d39	42		 inc	 edx
  01d3a	84 c0		 test	 al, al
  01d3c	75 f6		 jne	 SHORT $LL372@Init
  01d3e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01d44	c7 84 86 b0 36
	00 00 6e 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 622 ; 0000026eH
  01d4f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01d55	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01d5c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01d62	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01d67	7d 07		 jge	 SHORT $LN369@Init
  01d69	40		 inc	 eax
  01d6a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN369@Init:

  01d70	6a 1e		 push	 30			; 0000001eH
  01d72	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01d77	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser

  01d7c	6a 01		 push	 1
  01d7e	8b ce		 mov	 ecx, esi
  01d80	68 6f 02 00 00	 push	 623			; 0000026fH
  01d85	84 c0		 test	 al, al
  01d87	74 07		 je	 SHORT $LN19@Init
  01d89	68 00 00 00 00	 push	 OFFSET ??_C@_09BGHBDPDO@?1?Q?$LA?G?s?W?i?$LG?S?$AA@

  01d8e	eb 05		 jmp	 SHORT $LN696@Init
$LN19@Init:

  01d90	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JDKKEGKI@?1autoparty?$AA@
$LN696@Init:
  01d95	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  01d9a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01da0	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01da3	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08FAEDODKP@?1sendzen?$AA@
  01da8	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01dab	eb 03 8d 49 00	 npad	 5
$LL376@Init:
  01db0	8a 01		 mov	 al, BYTE PTR [ecx]
  01db2	88 02		 mov	 BYTE PTR [edx], al
  01db4	41		 inc	 ecx
  01db5	42		 inc	 edx
  01db6	84 c0		 test	 al, al
  01db8	75 f6		 jne	 SHORT $LL376@Init
  01dba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01dc0	c7 84 86 b0 36
	00 00 70 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 624 ; 00000270H
  01dcb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01dd1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01dd8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01dde	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01de3	7d 07		 jge	 SHORT $LN373@Init
  01de5	40		 inc	 eax
  01de6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN373@Init:

  01dec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01df2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01df5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08DKFHDEAN@?1recvzen?$AA@
  01dfa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01dfd	8d 49 00	 npad	 3
$LL380@Init:
  01e00	8a 01		 mov	 al, BYTE PTR [ecx]
  01e02	88 02		 mov	 BYTE PTR [edx], al
  01e04	41		 inc	 ecx
  01e05	42		 inc	 edx
  01e06	84 c0		 test	 al, al
  01e08	75 f6		 jne	 SHORT $LL380@Init
  01e0a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01e10	c7 84 86 b0 36
	00 00 71 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 625 ; 00000271H
  01e1b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01e21	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01e28	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01e2e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01e33	7d 07		 jge	 SHORT $LN377@Init
  01e35	40		 inc	 eax
  01e36	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN377@Init:

  01e3c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01e42	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01e45	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06FIPLOCBG@?1class?$AA@
  01e4a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  01e4d	8d 49 00	 npad	 3
$LL384@Init:
  01e50	8a 01		 mov	 al, BYTE PTR [ecx]
  01e52	88 02		 mov	 BYTE PTR [edx], al
  01e54	41		 inc	 ecx
  01e55	42		 inc	 edx
  01e56	84 c0		 test	 al, al
  01e58	75 f6		 jne	 SHORT $LL384@Init
  01e5a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01e60	c7 84 86 b0 36
	00 00 72 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 626 ; 00000272H
  01e6b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01e71	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01e78	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01e7e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01e83	7d 07		 jge	 SHORT $LN381@Init
  01e85	40		 inc	 eax
  01e86	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN381@Init:

  01e8c	6a 1e		 push	 30			; 0000001eH
  01e8e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01e93	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser

  01e98	6a 01		 push	 1
  01e9a	8b ce		 mov	 ecx, esi
  01e9c	68 73 02 00 00	 push	 627			; 00000273H
  01ea1	84 c0		 test	 al, al
  01ea3	74 07		 je	 SHORT $LN17@Init
  01ea5	68 00 00 00 00	 push	 OFFSET ??_C@_09KMIJKELG@?1?$LJ?X?$LB?U?W?i?$LG?S?$AA@

  01eaa	eb 05		 jmp	 SHORT $LN697@Init
$LN17@Init:

  01eac	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FLPDDCNI@?1autopartyoff?$AA@
$LN697@Init:
  01eb1	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  01eb6	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01ebc	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01ebf	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07KPPMHOOK@?1credit?$AA@
  01ec4	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL388@Init:
  01ec7	8a 01		 mov	 al, BYTE PTR [ecx]
  01ec9	88 02		 mov	 BYTE PTR [edx], al
  01ecb	41		 inc	 ecx
  01ecc	42		 inc	 edx
  01ecd	84 c0		 test	 al, al
  01ecf	75 f6		 jne	 SHORT $LL388@Init
  01ed1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01ed7	c7 84 86 b0 36
	00 00 74 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 628 ; 00000274H
  01ee2	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01ee8	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01eef	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01ef5	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01efa	7d 07		 jge	 SHORT $LN385@Init
  01efc	40		 inc	 eax
  01efd	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN385@Init:

  01f03	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01f09	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01f0c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@NDNCBCHD@?1goblin?9wcoin?$AA@
  01f11	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL392@Init:
  01f14	8a 01		 mov	 al, BYTE PTR [ecx]
  01f16	88 02		 mov	 BYTE PTR [edx], al
  01f18	41		 inc	 ecx
  01f19	42		 inc	 edx
  01f1a	84 c0		 test	 al, al
  01f1c	75 f6		 jne	 SHORT $LL392@Init
  01f1e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01f24	c7 84 86 b0 36
	00 00 75 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 629 ; 00000275H
  01f2f	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01f35	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01f3c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01f42	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01f47	7d 07		 jge	 SHORT $LN389@Init
  01f49	40		 inc	 eax
  01f4a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN389@Init:

  01f50	6a 1c		 push	 28			; 0000001cH
  01f52	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01f57	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01f5c	84 c0		 test	 al, al
  01f5e	75 24		 jne	 SHORT $LN14@Init
  01f60	6a 07		 push	 7
  01f62	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01f67	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01f6c	84 c0		 test	 al, al
  01f6e	75 14		 jne	 SHORT $LN14@Init
  01f70	6a 08		 push	 8
  01f72	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  01f77	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  01f7c	84 c0		 test	 al, al
  01f7e	0f 84 38 01 00
	00		 je	 $LN405@Init
$LN14@Init:

  01f84	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01f8a	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01f8d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08OABDOBIG@?1exchaos?$AA@
  01f92	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL396@Init:
  01f95	8a 01		 mov	 al, BYTE PTR [ecx]
  01f97	88 02		 mov	 BYTE PTR [edx], al
  01f99	41		 inc	 ecx
  01f9a	42		 inc	 edx
  01f9b	84 c0		 test	 al, al
  01f9d	75 f6		 jne	 SHORT $LL396@Init
  01f9f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01fa5	c7 84 86 b0 36
	00 00 76 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 630 ; 00000276H
  01fb0	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  01fb6	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  01fbd	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01fc3	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  01fc8	7d 07		 jge	 SHORT $LN393@Init
  01fca	40		 inc	 eax
  01fcb	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN393@Init:

  01fd1	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01fd7	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  01fda	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08EEJBFJKA@?1exbless?$AA@
  01fdf	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL400@Init:
  01fe2	8a 01		 mov	 al, BYTE PTR [ecx]
  01fe4	88 02		 mov	 BYTE PTR [edx], al
  01fe6	41		 inc	 ecx
  01fe7	42		 inc	 edx
  01fe8	84 c0		 test	 al, al
  01fea	75 f6		 jne	 SHORT $LL400@Init
  01fec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  01ff2	c7 84 86 b0 36
	00 00 77 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 631 ; 00000277H
  01ffd	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02003	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  0200a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02010	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02015	7d 07		 jge	 SHORT $LN397@Init
  02017	40		 inc	 eax
  02018	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN397@Init:

  0201e	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02024	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02027	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07MCDBEPNI@?1exsoul?$AA@
  0202c	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0202f	90		 npad	 1
$LL404@Init:
  02030	8a 01		 mov	 al, BYTE PTR [ecx]
  02032	88 02		 mov	 BYTE PTR [edx], al
  02034	41		 inc	 ecx
  02035	42		 inc	 edx
  02036	84 c0		 test	 al, al
  02038	75 f6		 jne	 SHORT $LL404@Init
  0203a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02040	c7 84 86 b0 36
	00 00 78 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 632 ; 00000278H
  0204b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02051	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02058	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0205e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02063	7d 07		 jge	 SHORT $LN401@Init
  02065	40		 inc	 eax
  02066	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN401@Init:

  0206c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02072	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02075	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07MKEILGDH@?1exlife?$AA@
  0207a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0207d	8d 49 00	 npad	 3
$LL408@Init:
  02080	8a 01		 mov	 al, BYTE PTR [ecx]
  02082	88 02		 mov	 BYTE PTR [edx], al
  02084	41		 inc	 ecx
  02085	42		 inc	 edx
  02086	84 c0		 test	 al, al
  02088	75 f6		 jne	 SHORT $LL408@Init
  0208a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02090	c7 84 86 b0 36
	00 00 79 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 633 ; 00000279H
  0209b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  020a1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  020a8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  020ae	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  020b3	7d 07		 jge	 SHORT $LN405@Init
  020b5	40		 inc	 eax
  020b6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN405@Init:

  020bc	6a 1a		 push	 26			; 0000001aH
  020be	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  020c3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  020c8	84 c0		 test	 al, al
  020ca	0f 85 80 00 00
	00		 jne	 $LN12@Init
  020d0	6a 11		 push	 17			; 00000011H
  020d2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  020d7	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  020dc	84 c0		 test	 al, al
  020de	75 70		 jne	 SHORT $LN12@Init
  020e0	6a 01		 push	 1
  020e2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  020e7	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  020ec	84 c0		 test	 al, al
  020ee	75 60		 jne	 SHORT $LN12@Init
  020f0	6a 1c		 push	 28			; 0000001cH
  020f2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  020f7	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  020fc	84 c0		 test	 al, al
  020fe	75 50		 jne	 SHORT $LN12@Init
  02100	6a 25		 push	 37			; 00000025H
  02102	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02107	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0210c	84 c0		 test	 al, al
  0210e	75 40		 jne	 SHORT $LN12@Init
  02110	6a 36		 push	 54			; 00000036H
  02112	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02117	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0211c	84 c0		 test	 al, al
  0211e	75 30		 jne	 SHORT $LN12@Init
  02120	6a 35		 push	 53			; 00000035H
  02122	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02127	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0212c	84 c0		 test	 al, al
  0212e	75 20		 jne	 SHORT $LN12@Init
  02130	6a 40		 push	 64			; 00000040H
  02132	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02137	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0213c	84 c0		 test	 al, al
  0213e	74 10		 je	 SHORT $LN12@Init
  02140	6a 4f		 push	 79			; 0000004fH
  02142	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02147	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0214c	84 c0		 test	 al, al
  0214e	75 4d		 jne	 SHORT $LN409@Init
$LN12@Init:

  02150	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02156	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02159	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@IACMBDON@?1buypremium?$AA@
  0215e	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL412@Init:
  02161	8a 01		 mov	 al, BYTE PTR [ecx]
  02163	88 02		 mov	 BYTE PTR [edx], al
  02165	41		 inc	 ecx
  02166	42		 inc	 edx
  02167	84 c0		 test	 al, al
  02169	75 f6		 jne	 SHORT $LL412@Init
  0216b	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02171	c7 84 86 b0 36
	00 00 7d 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 637 ; 0000027dH
  0217c	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02182	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02189	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0218f	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02194	7d 07		 jge	 SHORT $LN409@Init
  02196	40		 inc	 eax
  02197	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN409@Init:

  0219d	6a 1c		 push	 28			; 0000001cH
  0219f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  021a4	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  021a9	84 c0		 test	 al, al
  021ab	75 20		 jne	 SHORT $LN10@Init
  021ad	6a 07		 push	 7
  021af	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  021b4	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  021b9	84 c0		 test	 al, al
  021bb	75 10		 jne	 SHORT $LN10@Init
  021bd	6a 08		 push	 8
  021bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  021c4	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  021c9	84 c0		 test	 al, al
  021cb	74 4f		 je	 SHORT $LN413@Init
$LN10@Init:

  021cd	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  021d3	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  021d6	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@NIKPNBKG@?1sendcredits?$AA@
  021db	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  021de	8b ff		 npad	 2
$LL416@Init:
  021e0	8a 01		 mov	 al, BYTE PTR [ecx]
  021e2	88 02		 mov	 BYTE PTR [edx], al
  021e4	41		 inc	 ecx
  021e5	42		 inc	 edx
  021e6	84 c0		 test	 al, al
  021e8	75 f6		 jne	 SHORT $LL416@Init
  021ea	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  021f0	c7 84 86 b0 36
	00 00 7e 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 638 ; 0000027eH
  021fb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02201	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02208	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0220e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02213	7d 07		 jge	 SHORT $LN413@Init
  02215	40		 inc	 eax
  02216	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN413@Init:

  0221c	6a 00		 push	 0
  0221e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02223	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02228	84 c0		 test	 al, al
  0222a	0f 85 0c 01 00
	00		 jne	 $LN8@Init
  02230	6a 17		 push	 23			; 00000017H
  02232	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02237	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0223c	84 c0		 test	 al, al
  0223e	0f 85 f8 00 00
	00		 jne	 $LN8@Init
  02244	6a 24		 push	 36			; 00000024H
  02246	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0224b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02250	84 c0		 test	 al, al
  02252	0f 85 e4 00 00
	00		 jne	 $LN8@Init
  02258	6a 20		 push	 32			; 00000020H
  0225a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0225f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02264	84 c0		 test	 al, al
  02266	0f 85 d0 00 00
	00		 jne	 $LN8@Init
  0226c	6a 21		 push	 33			; 00000021H
  0226e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02273	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02278	84 c0		 test	 al, al
  0227a	0f 85 bc 00 00
	00		 jne	 $LN8@Init
  02280	6a 22		 push	 34			; 00000022H
  02282	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02287	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0228c	84 c0		 test	 al, al
  0228e	0f 85 a8 00 00
	00		 jne	 $LN8@Init
  02294	6a 36		 push	 54			; 00000036H
  02296	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0229b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  022a0	84 c0		 test	 al, al
  022a2	0f 85 94 00 00
	00		 jne	 $LN8@Init
  022a8	6a 38		 push	 56			; 00000038H
  022aa	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  022af	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  022b4	84 c0		 test	 al, al
  022b6	0f 85 80 00 00
	00		 jne	 $LN8@Init
  022bc	6a 40		 push	 64			; 00000040H
  022be	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  022c3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  022c8	84 c0		 test	 al, al
  022ca	75 70		 jne	 SHORT $LN8@Init
  022cc	6a 30		 push	 48			; 00000030H
  022ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  022d3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  022d8	84 c0		 test	 al, al
  022da	75 60		 jne	 SHORT $LN8@Init
  022dc	6a 31		 push	 49			; 00000031H
  022de	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  022e3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  022e8	84 c0		 test	 al, al
  022ea	75 50		 jne	 SHORT $LN8@Init
  022ec	6a 43		 push	 67			; 00000043H
  022ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  022f3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  022f8	84 c0		 test	 al, al
  022fa	75 40		 jne	 SHORT $LN8@Init
  022fc	6a 46		 push	 70			; 00000046H
  022fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02303	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02308	84 c0		 test	 al, al
  0230a	75 30		 jne	 SHORT $LN8@Init
  0230c	6a 4e		 push	 78			; 0000004eH
  0230e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02313	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02318	84 c0		 test	 al, al
  0231a	75 20		 jne	 SHORT $LN8@Init
  0231c	6a 4f		 push	 79			; 0000004fH
  0231e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02323	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02328	84 c0		 test	 al, al
  0232a	75 10		 jne	 SHORT $LN8@Init
  0232c	6a 51		 push	 81			; 00000051H
  0232e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02333	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02338	84 c0		 test	 al, al
  0233a	74 50		 je	 SHORT $LN417@Init
$LN8@Init:

  0233c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02342	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02345	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09IIEGDHLF@?1dcfriend?$AA@
  0234a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0234d	8d 49 00	 npad	 3
$LL420@Init:
  02350	8a 01		 mov	 al, BYTE PTR [ecx]
  02352	88 02		 mov	 BYTE PTR [edx], al
  02354	41		 inc	 ecx
  02355	42		 inc	 edx
  02356	84 c0		 test	 al, al
  02358	75 f6		 jne	 SHORT $LL420@Init
  0235a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02360	c7 84 86 b0 36
	00 00 7f 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 639 ; 0000027fH
  0236b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02371	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02378	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0237e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02383	7d 07		 jge	 SHORT $LN417@Init
  02385	40		 inc	 eax
  02386	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN417@Init:

  0238c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02392	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02395	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@LDFBIEGN@?1brteleport?$AA@
  0239a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0239d	8d 49 00	 npad	 3
$LL424@Init:
  023a0	8a 01		 mov	 al, BYTE PTR [ecx]
  023a2	88 02		 mov	 BYTE PTR [edx], al
  023a4	41		 inc	 ecx
  023a5	42		 inc	 edx
  023a6	84 c0		 test	 al, al
  023a8	75 f6		 jne	 SHORT $LL424@Init
  023aa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  023b0	c7 84 86 b0 36
	00 00 80 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 640 ; 00000280H
  023bb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  023c1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  023c8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  023ce	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  023d3	7d 07		 jge	 SHORT $LN421@Init
  023d5	40		 inc	 eax
  023d6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN421@Init:

  023dc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  023e2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  023e5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08LDNPGJCN@?1brstart?$AA@
  023ea	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  023ed	8d 49 00	 npad	 3
$LL428@Init:
  023f0	8a 01		 mov	 al, BYTE PTR [ecx]
  023f2	88 02		 mov	 BYTE PTR [edx], al
  023f4	41		 inc	 ecx
  023f5	42		 inc	 edx
  023f6	84 c0		 test	 al, al
  023f8	75 f6		 jne	 SHORT $LL428@Init
  023fa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02400	c7 84 86 b0 36
	00 00 81 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 641 ; 00000281H
  0240b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02411	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02418	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0241e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02423	7d 07		 jge	 SHORT $LN425@Init
  02425	40		 inc	 eax
  02426	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN425@Init:

  0242c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02432	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02435	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07BDEEJNHJ@?1brexit?$AA@
  0243a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0243d	8d 49 00	 npad	 3
$LL432@Init:
  02440	8a 01		 mov	 al, BYTE PTR [ecx]
  02442	88 02		 mov	 BYTE PTR [edx], al
  02444	41		 inc	 ecx
  02445	42		 inc	 edx
  02446	84 c0		 test	 al, al
  02448	75 f6		 jne	 SHORT $LL432@Init
  0244a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02450	c7 84 86 b0 36
	00 00 82 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 642 ; 00000282H
  0245b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02461	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02468	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0246e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02473	7d 07		 jge	 SHORT $LN429@Init
  02475	40		 inc	 eax
  02476	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN429@Init:

  0247c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02482	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02485	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@IIPLGHKC@?1sendwcoinc?$AA@
  0248a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0248d	8d 49 00	 npad	 3
$LL436@Init:
  02490	8a 01		 mov	 al, BYTE PTR [ecx]
  02492	88 02		 mov	 BYTE PTR [edx], al
  02494	41		 inc	 ecx
  02495	42		 inc	 edx
  02496	84 c0		 test	 al, al
  02498	75 f6		 jne	 SHORT $LL436@Init
  0249a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  024a0	c7 84 86 b0 36
	00 00 83 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 643 ; 00000283H
  024ab	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  024b1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  024b8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  024be	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  024c3	7d 07		 jge	 SHORT $LN433@Init
  024c5	40		 inc	 eax
  024c6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN433@Init:

  024cc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  024d2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  024d5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@OJBECGDA@?1sendwcoinp?$AA@
  024da	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  024dd	8d 49 00	 npad	 3
$LL440@Init:
  024e0	8a 01		 mov	 al, BYTE PTR [ecx]
  024e2	88 02		 mov	 BYTE PTR [edx], al
  024e4	41		 inc	 ecx
  024e5	42		 inc	 edx
  024e6	84 c0		 test	 al, al
  024e8	75 f6		 jne	 SHORT $LL440@Init
  024ea	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  024f0	c7 84 86 b0 36
	00 00 84 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 644 ; 00000284H
  024fb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02501	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02508	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0250e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02513	7d 07		 jge	 SHORT $LN437@Init
  02515	40		 inc	 eax
  02516	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN437@Init:

  0251c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02522	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02525	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@OHEIGHFM@?1sendgoblin?$AA@
  0252a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0252d	8d 49 00	 npad	 3
$LL444@Init:
  02530	8a 01		 mov	 al, BYTE PTR [ecx]
  02532	88 02		 mov	 BYTE PTR [edx], al
  02534	41		 inc	 ecx
  02535	42		 inc	 edx
  02536	84 c0		 test	 al, al
  02538	75 f6		 jne	 SHORT $LL444@Init
  0253a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02540	c7 84 86 b0 36
	00 00 85 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 645 ; 00000285H
  0254b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02551	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02558	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0255e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02563	7d 07		 jge	 SHORT $LN441@Init
  02565	40		 inc	 eax
  02566	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN441@Init:

  0256c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02572	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02575	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BA@DAGCBHNP@?1inventoryclear?$AA@
  0257a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0257d	8d 49 00	 npad	 3
$LL448@Init:
  02580	8a 01		 mov	 al, BYTE PTR [ecx]
  02582	88 02		 mov	 BYTE PTR [edx], al
  02584	41		 inc	 ecx
  02585	42		 inc	 edx
  02586	84 c0		 test	 al, al
  02588	75 f6		 jne	 SHORT $LL448@Init
  0258a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02590	c7 84 86 b0 36
	00 00 94 01 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 404 ; 00000194H
  0259b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  025a1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  025a8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  025ae	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  025b3	7d 07		 jge	 SHORT $LN445@Init
  025b5	40		 inc	 eax
  025b6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN445@Init:

  025bc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  025c2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  025c5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06GINDBCMA@?1brnew?$AA@
  025ca	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  025cd	8d 49 00	 npad	 3
$LL452@Init:
  025d0	8a 01		 mov	 al, BYTE PTR [ecx]
  025d2	88 02		 mov	 BYTE PTR [edx], al
  025d4	41		 inc	 ecx
  025d5	42		 inc	 edx
  025d6	84 c0		 test	 al, al
  025d8	75 f6		 jne	 SHORT $LL452@Init
  025da	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  025e0	c7 84 86 b0 36
	00 00 86 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 646 ; 00000286H
  025eb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  025f1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  025f8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  025fe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02603	7d 07		 jge	 SHORT $LN449@Init
  02605	40		 inc	 eax
  02606	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN449@Init:

  0260c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02612	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02615	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07PDCMEENC@?1bminfo?$AA@
  0261a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0261d	8d 49 00	 npad	 3
$LL456@Init:
  02620	8a 01		 mov	 al, BYTE PTR [ecx]
  02622	88 02		 mov	 BYTE PTR [edx], al
  02624	41		 inc	 ecx
  02625	42		 inc	 edx
  02626	84 c0		 test	 al, al
  02628	75 f6		 jne	 SHORT $LL456@Init
  0262a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02630	c7 84 86 b0 36
	00 00 87 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 647 ; 00000287H
  0263b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02641	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02648	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0264e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02653	7d 07		 jge	 SHORT $LN453@Init
  02655	40		 inc	 eax
  02656	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN453@Init:

  0265c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02662	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02665	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06BNIOKPKM@?1dcall?$AA@
  0266a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0266d	8d 49 00	 npad	 3
$LL460@Init:
  02670	8a 01		 mov	 al, BYTE PTR [ecx]
  02672	88 02		 mov	 BYTE PTR [edx], al
  02674	41		 inc	 ecx
  02675	42		 inc	 edx
  02676	84 c0		 test	 al, al
  02678	75 f6		 jne	 SHORT $LL460@Init
  0267a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02680	c7 84 86 b0 36
	00 00 88 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 648 ; 00000288H
  0268b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02691	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02698	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0269e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  026a3	7d 07		 jge	 SHORT $LN457@Init
  026a5	40		 inc	 eax
  026a6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN457@Init:

  026ac	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  026b2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  026b5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@NFDFBKKN@?1marriageoff?$AA@
  026ba	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  026bd	8d 49 00	 npad	 3
$LL464@Init:
  026c0	8a 01		 mov	 al, BYTE PTR [ecx]
  026c2	88 02		 mov	 BYTE PTR [edx], al
  026c4	41		 inc	 ecx
  026c5	42		 inc	 edx
  026c6	84 c0		 test	 al, al
  026c8	75 f6		 jne	 SHORT $LL464@Init
  026ca	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  026d0	c7 84 86 b0 36
	00 00 89 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 649 ; 00000289H
  026db	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  026e1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  026e8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  026ee	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  026f3	7d 07		 jge	 SHORT $LN461@Init
  026f5	40		 inc	 eax
  026f6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN461@Init:

  026fc	6a 07		 push	 7
  026fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02703	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02708	84 c0		 test	 al, al
  0270a	0f 85 7f 00 00
	00		 jne	 $LN6@Init
  02710	6a 08		 push	 8
  02712	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02717	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0271c	84 c0		 test	 al, al
  0271e	75 6f		 jne	 SHORT $LN6@Init
  02720	6a 2b		 push	 43			; 0000002bH
  02722	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02727	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0272c	84 c0		 test	 al, al
  0272e	75 5f		 jne	 SHORT $LN6@Init

  02730	6a 20		 push	 32			; 00000020H
  02732	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02737	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0273c	84 c0		 test	 al, al
  0273e	75 24		 jne	 SHORT $LN3@Init
  02740	6a 21		 push	 33			; 00000021H
  02742	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02747	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0274c	84 c0		 test	 al, al
  0274e	75 14		 jne	 SHORT $LN3@Init
  02750	6a 22		 push	 34			; 00000022H
  02752	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02757	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0275c	84 c0		 test	 al, al
  0275e	0f 84 c8 00 00
	00		 je	 $LN469@Init
$LN3@Init:

  02764	6a 01		 push	 1
  02766	68 8a 02 00 00	 push	 650			; 0000028aH
  0276b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LLOBPIPD@?1sendcreation?$AA@
  02770	8b ce		 mov	 ecx, esi
  02772	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add

  02777	6a 01		 push	 1
  02779	68 8b 02 00 00	 push	 651			; 0000028bH
  0277e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IOLIDNKE@?1recvcreation?$AA@
  02783	8b ce		 mov	 ecx, esi
  02785	e8 00 00 00 00	 call	 ?Add@CGMCommand@@QAEXPADHH@Z ; CGMCommand::Add
  0278a	e9 9d 00 00 00	 jmp	 $LN469@Init
$LN6@Init:

  0278f	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02795	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02798	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@PBDHEHEL@?1sendcreateon?$AA@
  0279d	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL468@Init:
  027a0	8a 01		 mov	 al, BYTE PTR [ecx]
  027a2	88 02		 mov	 BYTE PTR [edx], al
  027a4	41		 inc	 ecx
  027a5	42		 inc	 edx
  027a6	84 c0		 test	 al, al
  027a8	75 f6		 jne	 SHORT $LL468@Init
  027aa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  027b0	c7 84 86 b0 36
	00 00 8a 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 650 ; 0000028aH
  027bb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  027c1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  027c8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  027ce	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  027d3	7d 07		 jge	 SHORT $LN465@Init
  027d5	40		 inc	 eax
  027d6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN465@Init:

  027dc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  027e2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  027e5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@MEGOICBM@?1recvcreateon?$AA@
  027ea	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  027ed	8d 49 00	 npad	 3
$LL472@Init:
  027f0	8a 01		 mov	 al, BYTE PTR [ecx]
  027f2	88 02		 mov	 BYTE PTR [edx], al
  027f4	41		 inc	 ecx
  027f5	42		 inc	 edx
  027f6	84 c0		 test	 al, al
  027f8	75 f6		 jne	 SHORT $LL472@Init
  027fa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02800	c7 84 86 b0 36
	00 00 8b 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 651 ; 0000028bH
  0280b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02811	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02818	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0281e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02823	7d 07		 jge	 SHORT $LN469@Init
  02825	40		 inc	 eax
  02826	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN469@Init:

  0282c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02832	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02835	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@DHAJNDE@?1excreateon?$AA@
  0283a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0283d	8d 49 00	 npad	 3
$LL476@Init:
  02840	8a 01		 mov	 al, BYTE PTR [ecx]
  02842	88 02		 mov	 BYTE PTR [edx], al
  02844	41		 inc	 ecx
  02845	42		 inc	 edx
  02846	84 c0		 test	 al, al
  02848	75 f6		 jne	 SHORT $LL476@Init
  0284a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02850	c7 84 86 b0 36
	00 00 8c 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 652 ; 0000028cH
  0285b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02861	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02868	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0286e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02873	7d 07		 jge	 SHORT $LN473@Init
  02875	40		 inc	 eax
  02876	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN473@Init:

  0287c	6a 20		 push	 32			; 00000020H
  0287e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02883	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02888	84 c0		 test	 al, al
  0288a	75 24		 jne	 SHORT $LN1@Init
  0288c	6a 22		 push	 34			; 00000022H
  0288e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  02893	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  02898	84 c0		 test	 al, al
  0289a	75 14		 jne	 SHORT $LN1@Init
  0289c	6a 21		 push	 33			; 00000021H
  0289e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  028a3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  028a8	84 c0		 test	 al, al
  028aa	0f 84 9c 00 00
	00		 je	 $LN481@Init
$LN1@Init:

  028b0	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  028b6	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  028b9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@ELCBKIJI@?1autoptoff?$AA@
  028be	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
$LL480@Init:
  028c1	8a 01		 mov	 al, BYTE PTR [ecx]
  028c3	88 02		 mov	 BYTE PTR [edx], al
  028c5	41		 inc	 ecx
  028c6	42		 inc	 edx
  028c7	84 c0		 test	 al, al
  028c9	75 f6		 jne	 SHORT $LL480@Init
  028cb	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  028d1	c7 84 86 b0 36
	00 00 8d 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 653 ; 0000028dH
  028dc	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  028e2	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  028e9	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  028ef	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  028f4	7d 07		 jge	 SHORT $LN477@Init
  028f6	40		 inc	 eax
  028f7	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN477@Init:

  028fd	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02903	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02906	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09EJHEJBEA@?1autopton?$AA@
  0290b	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0290e	8b ff		 npad	 2
$LL484@Init:
  02910	8a 01		 mov	 al, BYTE PTR [ecx]
  02912	88 02		 mov	 BYTE PTR [edx], al
  02914	41		 inc	 ecx
  02915	42		 inc	 edx
  02916	84 c0		 test	 al, al
  02918	75 f6		 jne	 SHORT $LL484@Init
  0291a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02920	c7 84 86 b0 36
	00 00 8e 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 654 ; 0000028eH
  0292b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02931	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02938	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0293e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02943	7d 07		 jge	 SHORT $LN481@Init
  02945	40		 inc	 eax
  02946	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN481@Init:

  0294c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02952	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02955	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07NCDKIDDB@?1donate?$AA@
  0295a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  0295d	8d 49 00	 npad	 3
$LL488@Init:
  02960	8a 01		 mov	 al, BYTE PTR [ecx]
  02962	88 02		 mov	 BYTE PTR [edx], al
  02964	41		 inc	 ecx
  02965	42		 inc	 edx
  02966	84 c0		 test	 al, al
  02968	75 f6		 jne	 SHORT $LL488@Init
  0296a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02970	c7 84 86 b0 36
	00 00 8f 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 655 ; 0000028fH
  0297b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02981	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02988	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  0298e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02993	7d 07		 jge	 SHORT $LN485@Init
  02995	40		 inc	 eax
  02996	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN485@Init:

  0299c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  029a2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  029a5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@CMGAEGID@?1dungeonstart?$AA@
  029aa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  029ad	8d 49 00	 npad	 3
$LL492@Init:
  029b0	8a 01		 mov	 al, BYTE PTR [ecx]
  029b2	88 02		 mov	 BYTE PTR [edx], al
  029b4	41		 inc	 ecx
  029b5	42		 inc	 edx
  029b6	84 c0		 test	 al, al
  029b8	75 f6		 jne	 SHORT $LL492@Init
  029ba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  029c0	c7 84 86 b0 36
	00 00 90 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 656 ; 00000290H
  029cb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  029d1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  029d8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  029de	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  029e3	7d 07		 jge	 SHORT $LN489@Init
  029e5	40		 inc	 eax
  029e6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN489@Init:

  029ec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  029f2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  029f5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06HAHILENG@?1debug?$AA@
  029fa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  029fd	8d 49 00	 npad	 3
$LL496@Init:
  02a00	8a 01		 mov	 al, BYTE PTR [ecx]
  02a02	88 02		 mov	 BYTE PTR [edx], al
  02a04	41		 inc	 ecx
  02a05	42		 inc	 edx
  02a06	84 c0		 test	 al, al
  02a08	75 f6		 jne	 SHORT $LL496@Init
  02a0a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02a10	c7 84 86 b0 36
	00 00 91 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 657 ; 00000291H
  02a1b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02a21	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02a28	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02a2e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02a33	7d 07		 jge	 SHORT $LN493@Init
  02a35	40		 inc	 eax
  02a36	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN493@Init:

  02a3c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02a42	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02a45	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04MKJBKCIE@?1hdd?$AA@
  02a4a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02a4d	8d 49 00	 npad	 3
$LL500@Init:
  02a50	8a 01		 mov	 al, BYTE PTR [ecx]
  02a52	88 02		 mov	 BYTE PTR [edx], al
  02a54	41		 inc	 ecx
  02a55	42		 inc	 edx
  02a56	84 c0		 test	 al, al
  02a58	75 f6		 jne	 SHORT $LL500@Init
  02a5a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02a60	c7 84 86 b0 36
	00 00 92 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 658 ; 00000292H
  02a6b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02a71	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02a78	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02a7e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02a83	7d 07		 jge	 SHORT $LN497@Init
  02a85	40		 inc	 eax
  02a86	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN497@Init:

  02a8c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02a92	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02a95	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_05FGPHNHGJ@?1item?$AA@
  02a9a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02a9d	8d 49 00	 npad	 3
$LL504@Init:
  02aa0	8a 01		 mov	 al, BYTE PTR [ecx]
  02aa2	88 02		 mov	 BYTE PTR [edx], al
  02aa4	41		 inc	 ecx
  02aa5	42		 inc	 edx
  02aa6	84 c0		 test	 al, al
  02aa8	75 f6		 jne	 SHORT $LL504@Init
  02aaa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ab0	c7 84 86 b0 36
	00 00 93 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 659 ; 00000293H
  02abb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02ac1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02ac8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ace	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02ad3	7d 07		 jge	 SHORT $LN501@Init
  02ad5	40		 inc	 eax
  02ad6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN501@Init:

  02adc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ae2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02ae5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@PNGPIFHM@?1vipbronze?$AA@
  02aea	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02aed	8d 49 00	 npad	 3
$LL508@Init:
  02af0	8a 01		 mov	 al, BYTE PTR [ecx]
  02af2	88 02		 mov	 BYTE PTR [edx], al
  02af4	41		 inc	 ecx
  02af5	42		 inc	 edx
  02af6	84 c0		 test	 al, al
  02af8	75 f6		 jne	 SHORT $LL508@Init
  02afa	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02b00	c7 84 86 b0 36
	00 00 94 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 660 ; 00000294H
  02b0b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02b11	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02b18	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02b1e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02b23	7d 07		 jge	 SHORT $LN505@Init
  02b25	40		 inc	 eax
  02b26	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN505@Init:

  02b2c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02b32	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02b35	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@JFCDIFCF@?1vipsilver?$AA@
  02b3a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02b3d	8d 49 00	 npad	 3
$LL512@Init:
  02b40	8a 01		 mov	 al, BYTE PTR [ecx]
  02b42	88 02		 mov	 BYTE PTR [edx], al
  02b44	41		 inc	 ecx
  02b45	42		 inc	 edx
  02b46	84 c0		 test	 al, al
  02b48	75 f6		 jne	 SHORT $LL512@Init
  02b4a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02b50	c7 84 86 b0 36
	00 00 95 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 661 ; 00000295H
  02b5b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02b61	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02b68	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02b6e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02b73	7d 07		 jge	 SHORT $LN509@Init
  02b75	40		 inc	 eax
  02b76	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN509@Init:

  02b7c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02b82	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02b85	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08DDIGOKCM@?1vipgold?$AA@
  02b8a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02b8d	8d 49 00	 npad	 3
$LL516@Init:
  02b90	8a 01		 mov	 al, BYTE PTR [ecx]
  02b92	88 02		 mov	 BYTE PTR [edx], al
  02b94	41		 inc	 ecx
  02b95	42		 inc	 edx
  02b96	84 c0		 test	 al, al
  02b98	75 f6		 jne	 SHORT $LL516@Init
  02b9a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ba0	c7 84 86 b0 36
	00 00 96 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 662 ; 00000296H
  02bab	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02bb1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02bb8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02bbe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02bc3	7d 07		 jge	 SHORT $LN513@Init
  02bc5	40		 inc	 eax
  02bc6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN513@Init:

  02bcc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02bd2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02bd5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06BJAPKEDH@?1value?$AA@
  02bda	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02bdd	8d 49 00	 npad	 3
$LL520@Init:
  02be0	8a 01		 mov	 al, BYTE PTR [ecx]
  02be2	88 02		 mov	 BYTE PTR [edx], al
  02be4	41		 inc	 ecx
  02be5	42		 inc	 edx
  02be6	84 c0		 test	 al, al
  02be8	75 f6		 jne	 SHORT $LL520@Init
  02bea	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02bf0	c7 84 86 b0 36
	00 00 97 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 663 ; 00000297H
  02bfb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02c01	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02c08	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02c0e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02c13	7d 07		 jge	 SHORT $LN517@Init
  02c15	40		 inc	 eax
  02c16	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN517@Init:

  02c1c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02c22	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02c25	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@IBGHDGLI@?1banhddchat?$AA@
  02c2a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02c2d	8d 49 00	 npad	 3
$LL524@Init:
  02c30	8a 01		 mov	 al, BYTE PTR [ecx]
  02c32	88 02		 mov	 BYTE PTR [edx], al
  02c34	41		 inc	 ecx
  02c35	42		 inc	 edx
  02c36	84 c0		 test	 al, al
  02c38	75 f6		 jne	 SHORT $LL524@Init
  02c3a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02c40	c7 84 86 b0 36
	00 00 98 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 664 ; 00000298H
  02c4b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02c51	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02c58	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02c5e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02c63	7d 07		 jge	 SHORT $LN521@Init
  02c65	40		 inc	 eax
  02c66	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN521@Init:

  02c6c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02c72	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02c75	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@LMOEHBDG@?1unbanhddchat?$AA@
  02c7a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02c7d	8d 49 00	 npad	 3
$LL528@Init:
  02c80	8a 01		 mov	 al, BYTE PTR [ecx]
  02c82	88 02		 mov	 BYTE PTR [edx], al
  02c84	41		 inc	 ecx
  02c85	42		 inc	 edx
  02c86	84 c0		 test	 al, al
  02c88	75 f6		 jne	 SHORT $LL528@Init
  02c8a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02c90	c7 84 86 b0 36
	00 00 99 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 665 ; 00000299H
  02c9b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02ca1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02ca8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02cae	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02cb3	7d 07		 jge	 SHORT $LN525@Init
  02cb5	40		 inc	 eax
  02cb6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN525@Init:

  02cbc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02cc2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02cc5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@NHDNJBDO@?1banhddchar?$AA@
  02cca	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02ccd	8d 49 00	 npad	 3
$LL532@Init:
  02cd0	8a 01		 mov	 al, BYTE PTR [ecx]
  02cd2	88 02		 mov	 BYTE PTR [edx], al
  02cd4	41		 inc	 ecx
  02cd5	42		 inc	 edx
  02cd6	84 c0		 test	 al, al
  02cd8	75 f6		 jne	 SHORT $LL532@Init
  02cda	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ce0	c7 84 86 b0 36
	00 00 9a 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 666 ; 0000029aH
  02ceb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02cf1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02cf8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02cfe	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02d03	7d 07		 jge	 SHORT $LN529@Init
  02d05	40		 inc	 eax
  02d06	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN529@Init:

  02d0c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02d12	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02d15	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@OKLONGLA@?1unbanhddchar?$AA@
  02d1a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02d1d	8d 49 00	 npad	 3
$LL536@Init:
  02d20	8a 01		 mov	 al, BYTE PTR [ecx]
  02d22	88 02		 mov	 BYTE PTR [edx], al
  02d24	41		 inc	 ecx
  02d25	42		 inc	 edx
  02d26	84 c0		 test	 al, al
  02d28	75 f6		 jne	 SHORT $LL536@Init
  02d2a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02d30	c7 84 86 b0 36
	00 00 9b 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 667 ; 0000029bH
  02d3b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02d41	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02d48	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02d4e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02d53	7d 07		 jge	 SHORT $LN533@Init
  02d55	40		 inc	 eax
  02d56	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN533@Init:

  02d5c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02d62	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02d65	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@FPMJEDH@?1exguardian?$AA@
  02d6a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02d6d	8d 49 00	 npad	 3
$LL540@Init:
  02d70	8a 01		 mov	 al, BYTE PTR [ecx]
  02d72	88 02		 mov	 BYTE PTR [edx], al
  02d74	41		 inc	 ecx
  02d75	42		 inc	 edx
  02d76	84 c0		 test	 al, al
  02d78	75 f6		 jne	 SHORT $LL540@Init
  02d7a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02d80	c7 84 86 b0 36
	00 00 9c 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 668 ; 0000029cH
  02d8b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02d91	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02d98	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02d9e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02da3	7d 07		 jge	 SHORT $LN537@Init
  02da5	40		 inc	 eax
  02da6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN537@Init:

  02dac	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02db2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02db5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@CLNPLLFC@?1exharmony?$AA@
  02dba	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02dbd	8d 49 00	 npad	 3
$LL544@Init:
  02dc0	8a 01		 mov	 al, BYTE PTR [ecx]
  02dc2	88 02		 mov	 BYTE PTR [edx], al
  02dc4	41		 inc	 ecx
  02dc5	42		 inc	 edx
  02dc6	84 c0		 test	 al, al
  02dc8	75 f6		 jne	 SHORT $LL544@Init
  02dca	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02dd0	c7 84 86 b0 36
	00 00 9d 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 669 ; 0000029dH
  02ddb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02de1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02de8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02dee	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02df3	7d 07		 jge	 SHORT $LN541@Init
  02df5	40		 inc	 eax
  02df6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN541@Init:

  02dfc	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02e02	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02e05	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@IKDALPA@?1exlowstone?$AA@
  02e0a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02e0d	8d 49 00	 npad	 3
$LL548@Init:
  02e10	8a 01		 mov	 al, BYTE PTR [ecx]
  02e12	88 02		 mov	 BYTE PTR [edx], al
  02e14	41		 inc	 ecx
  02e15	42		 inc	 edx
  02e16	84 c0		 test	 al, al
  02e18	75 f6		 jne	 SHORT $LL548@Init
  02e1a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02e20	c7 84 86 b0 36
	00 00 9e 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 670 ; 0000029eH
  02e2b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02e31	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02e38	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02e3e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02e43	7d 07		 jge	 SHORT $LN545@Init
  02e45	40		 inc	 eax
  02e46	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN545@Init:

  02e4c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02e52	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02e55	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@HIHAPALF@?1exhighstone?$AA@
  02e5a	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02e5d	8d 49 00	 npad	 3
$LL552@Init:
  02e60	8a 01		 mov	 al, BYTE PTR [ecx]
  02e62	88 02		 mov	 BYTE PTR [edx], al
  02e64	41		 inc	 ecx
  02e65	42		 inc	 edx
  02e66	84 c0		 test	 al, al
  02e68	75 f6		 jne	 SHORT $LL552@Init
  02e6a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02e70	c7 84 86 b0 36
	00 00 9f 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 671 ; 0000029fH
  02e7b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02e81	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02e88	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02e8e	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02e93	7d 07		 jge	 SHORT $LN549@Init
  02e95	40		 inc	 eax
  02e96	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN549@Init:

  02e9c	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ea2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02ea5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@NIJIEKGF@?1exgemstone?$AA@
  02eaa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02ead	8d 49 00	 npad	 3
$LL556@Init:
  02eb0	8a 01		 mov	 al, BYTE PTR [ecx]
  02eb2	88 02		 mov	 BYTE PTR [edx], al
  02eb4	41		 inc	 ecx
  02eb5	42		 inc	 edx
  02eb6	84 c0		 test	 al, al
  02eb8	75 f6		 jne	 SHORT $LL556@Init
  02eba	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ec0	c7 84 86 b0 36
	00 00 a0 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 672 ; 000002a0H
  02ecb	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02ed1	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02ed8	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ede	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02ee3	7d 07		 jge	 SHORT $LN553@Init
  02ee5	40		 inc	 eax
  02ee6	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
$LN553@Init:

  02eec	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02ef2	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  02ef5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07IDNEBNCB@?1devcmd?$AA@
  02efa	8d 14 96	 lea	 edx, DWORD PTR [esi+edx*4]
  02efd	8d 49 00	 npad	 3
$LL560@Init:
  02f00	8a 01		 mov	 al, BYTE PTR [ecx]
  02f02	88 02		 mov	 BYTE PTR [edx], al
  02f04	41		 inc	 ecx
  02f05	42		 inc	 edx
  02f06	84 c0		 test	 al, al
  02f08	75 f6		 jne	 SHORT $LL560@Init
  02f0a	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02f10	c7 84 86 b0 36
	00 00 b2 02 00
	00		 mov	 DWORD PTR [esi+eax*4+14000], 690 ; 000002b2H
  02f1b	8b 8e 90 4c 00
	00		 mov	 ecx, DWORD PTR [esi+19600]
  02f21	89 9c 8e a0 41
	00 00		 mov	 DWORD PTR [esi+ecx*4+16800], ebx
  02f28	8b 86 90 4c 00
	00		 mov	 eax, DWORD PTR [esi+19600]
  02f2e	5b		 pop	 ebx
  02f2f	3d bb 02 00 00	 cmp	 eax, 699		; 000002bbH
  02f34	7d 19		 jge	 SHORT $LN692@Init

  02f36	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02f39	40		 inc	 eax
  02f3a	89 86 90 4c 00
	00		 mov	 DWORD PTR [esi+19600], eax
  02f40	c7 82 e4 4c 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+19684], -1
  02f4a	5e		 pop	 esi

  02f4b	8b e5		 mov	 esp, ebp
  02f4d	5d		 pop	 ebp
  02f4e	c3		 ret	 0
$LN692@Init:

  02f4f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02f52	c7 80 e4 4c 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+19684], -1
  02f5c	5e		 pop	 esi

  02f5d	8b e5		 mov	 esp, ebp
  02f5f	5d		 pop	 ebp
  02f60	c3		 ret	 0
?Init@CGMMng@@QAEXXZ ENDP				; CGMMng::Init
_TEXT	ENDS
PUBLIC	?ManagerInit@CGMMng@@QAEXXZ			; CGMMng::ManagerInit
; Function compile flags: /Ogtp
;	COMDAT ?ManagerInit@CGMMng@@QAEXXZ
_TEXT	SEGMENT
?ManagerInit@CGMMng@@QAEXXZ PROC			; CGMMng::ManagerInit, COMDAT
; _this$ = ecx

  00000	83 c8 ff	 or	 eax, -1
  00003	89 81 d0 4c 00
	00		 mov	 DWORD PTR [ecx+19664], eax
  00009	89 81 d4 4c 00
	00		 mov	 DWORD PTR [ecx+19668], eax
  0000f	89 81 d8 4c 00
	00		 mov	 DWORD PTR [ecx+19672], eax
  00015	89 81 dc 4c 00
	00		 mov	 DWORD PTR [ecx+19676], eax
  0001b	89 81 e0 4c 00
	00		 mov	 DWORD PTR [ecx+19680], eax

  00021	c3		 ret	 0
?ManagerInit@CGMMng@@QAEXXZ ENDP			; CGMMng::ManagerInit
_TEXT	ENDS
PUBLIC	?ManagerAdd@CGMMng@@QAEHPADH@Z			; CGMMng::ManagerAdd
; Function compile flags: /Ogtp
;	COMDAT ?ManagerAdd@CGMMng@@QAEHPADH@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?ManagerAdd@CGMMng@@QAEHPADH@Z PROC			; CGMMng::ManagerAdd, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	33 c0		 xor	 eax, eax
  00005	8d 91 d0 4c 00
	00		 lea	 edx, DWORD PTR [ecx+19664]
  0000b	eb 03 8d 49 00	 npad	 5
$LL4@ManagerAdd:

  00010	83 3a ff	 cmp	 DWORD PTR [edx], -1
  00013	74 10		 je	 SHORT $LN10@ManagerAdd

  00015	40		 inc	 eax
  00016	83 c2 04	 add	 edx, 4
  00019	83 f8 05	 cmp	 eax, 5
  0001c	7c f2		 jl	 SHORT $LL4@ManagerAdd

  0001e	83 c8 ff	 or	 eax, -1

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
$LN10@ManagerAdd:

  00025	8b 55 08	 mov	 edx, DWORD PTR _name$[ebp]
  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	8b f0		 mov	 esi, eax
  0002c	6b f6 0b	 imul	 esi, 11			; 0000000bH
  0002f	8d b4 0e 98 4c
	00 00		 lea	 esi, DWORD PTR [esi+ecx+19608]
  00036	2b f2		 sub	 esi, edx
$LL7@ManagerAdd:
  00038	8a 1a		 mov	 bl, BYTE PTR [edx]
  0003a	88 1c 16	 mov	 BYTE PTR [esi+edx], bl
  0003d	42		 inc	 edx
  0003e	84 db		 test	 bl, bl
  00040	75 f6		 jne	 SHORT $LL7@ManagerAdd

  00042	8b 55 0c	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00045	5e		 pop	 esi
  00046	89 94 81 d0 4c
	00 00		 mov	 DWORD PTR [ecx+eax*4+19664], edx
  0004d	5b		 pop	 ebx

  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
?ManagerAdd@CGMMng@@QAEHPADH@Z ENDP			; CGMMng::ManagerAdd
_TEXT	ENDS
PUBLIC	?ManagerDel@CGMMng@@QAEXPAD@Z			; CGMMng::ManagerDel
; Function compile flags: /Ogtp
;	COMDAT ?ManagerDel@CGMMng@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
?ManagerDel@CGMMng@@QAEXPAD@Z PROC			; CGMMng::ManagerDel, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

  0000a	33 f6		 xor	 esi, esi
  0000c	8d b9 98 4c 00
	00		 lea	 edi, DWORD PTR [ecx+19608]
  00012	81 c1 d0 4c 00
	00		 add	 ecx, 19664		; 00004cd0H
$LL5@ManagerDel:

  00018	83 39 ff	 cmp	 DWORD PTR [ecx], -1
  0001b	74 2e		 je	 SHORT $LN4@ManagerDel

  0001d	8b 55 08	 mov	 edx, DWORD PTR _name$[ebp]
  00020	8b c7		 mov	 eax, edi
$LL11@ManagerDel:
  00022	8a 18		 mov	 bl, BYTE PTR [eax]
  00024	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00026	75 1a		 jne	 SHORT $LN12@ManagerDel
  00028	84 db		 test	 bl, bl
  0002a	74 12		 je	 SHORT $LN13@ManagerDel
  0002c	8a 58 01	 mov	 bl, BYTE PTR [eax+1]
  0002f	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00032	75 0e		 jne	 SHORT $LN12@ManagerDel
  00034	83 c0 02	 add	 eax, 2
  00037	83 c2 02	 add	 edx, 2
  0003a	84 db		 test	 bl, bl
  0003c	75 e4		 jne	 SHORT $LL11@ManagerDel
$LN13@ManagerDel:
  0003e	33 c0		 xor	 eax, eax
  00040	eb 05		 jmp	 SHORT $LN14@ManagerDel
$LN12@ManagerDel:
  00042	1b c0		 sbb	 eax, eax
  00044	83 d8 ff	 sbb	 eax, -1
$LN14@ManagerDel:
  00047	85 c0		 test	 eax, eax
  00049	74 15		 je	 SHORT $LN9@ManagerDel
$LN4@ManagerDel:

  0004b	46		 inc	 esi
  0004c	83 c1 04	 add	 ecx, 4
  0004f	83 c7 0b	 add	 edi, 11			; 0000000bH
  00052	83 fe 05	 cmp	 esi, 5
  00055	7c c1		 jl	 SHORT $LL5@ManagerDel
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
$LN9@ManagerDel:

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	5f		 pop	 edi
  00064	c7 84 b0 d0 4c
	00 00 ff ff ff
	ff		 mov	 DWORD PTR [eax+esi*4+19664], -1
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx

  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?ManagerDel@CGMMng@@QAEXPAD@Z ENDP			; CGMMng::ManagerDel
_TEXT	ENDS
PUBLIC	?ManagerSendData@CGMMng@@QAEXPADH@Z		; CGMMng::ManagerSendData
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
; Function compile flags: /Ogtp
;	COMDAT ?ManagerSendData@CGMMng@@QAEXPADH@Z
_TEXT	SEGMENT
_szMsg$ = 8						; size = 4
_size$ = 12						; size = 4
?ManagerSendData@CGMMng@@QAEXPADH@Z PROC		; CGMMng::ManagerSendData, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _szMsg$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8d b1 d0 4c 00
	00		 lea	 esi, DWORD PTR [ecx+19664]
  0000f	bf 05 00 00 00	 mov	 edi, 5
$LL4@ManagerSen:

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	83 f8 ff	 cmp	 eax, -1
  00019	74 0c		 je	 SHORT $LN3@ManagerSen

  0001b	6a 00		 push	 0
  0001d	50		 push	 eax
  0001e	53		 push	 ebx
  0001f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@ManagerSen:

  00027	83 c6 04	 add	 esi, 4
  0002a	4f		 dec	 edi
  0002b	75 e7		 jne	 SHORT $LL4@ManagerSen
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?ManagerSendData@CGMMng@@QAEXPADH@Z ENDP		; CGMMng::ManagerSendData
_TEXT	ENDS
PUBLIC	?DataSend@CGMMng@@QAEXPAEH@Z			; CGMMng::DataSend
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
; Function compile flags: /Ogtp
;	COMDAT ?DataSend@CGMMng@@QAEXPAEH@Z
_TEXT	SEGMENT
_szMsg$ = 8						; size = 4
_size$ = 12						; size = 4
?DataSend@CGMMng@@QAEXPAEH@Z PROC			; CGMMng::DataSend, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _size$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8d b1 d0 4c 00
	00		 lea	 esi, DWORD PTR [ecx+19664]
  0000f	bf 05 00 00 00	 mov	 edi, 5
$LL4@DataSend:

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	83 f8 ff	 cmp	 eax, -1
  00019	74 0e		 je	 SHORT $LN3@DataSend

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _szMsg$[ebp]
  0001e	53		 push	 ebx
  0001f	51		 push	 ecx
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@DataSend:

  00029	83 c6 04	 add	 esi, 4
  0002c	4f		 dec	 edi
  0002d	75 e5		 jne	 SHORT $LL4@DataSend
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx

  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?DataSend@CGMMng@@QAEXPAEH@Z ENDP			; CGMMng::DataSend
_TEXT	ENDS
PUBLIC	?BattleInfoSend@CGMMng@@QAEXPADE0E@Z		; CGMMng::BattleInfoSend
EXTRN	?GCGoalSend@@YAXHPADE0E@Z:PROC			; GCGoalSend
; Function compile flags: /Ogtp
;	COMDAT ?BattleInfoSend@CGMMng@@QAEXPADE0E@Z
_TEXT	SEGMENT
tv174 = -4						; size = 4
_Name1$ = 8						; size = 4
_score1$ = 12						; size = 1
_Name2$ = 16						; size = 4
_score2$ = 20						; size = 1
?BattleInfoSend@CGMMng@@QAEXPADE0E@Z PROC		; CGMMng::BattleInfoSend, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _Name1$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b 7d 10	 mov	 edi, DWORD PTR _Name2$[ebp]
  0000d	8d b1 d0 4c 00
	00		 lea	 esi, DWORD PTR [ecx+19664]
  00013	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR tv174[ebp], 5
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL4@BattleInfo:

  00020	8b 06		 mov	 eax, DWORD PTR [esi]
  00022	83 f8 ff	 cmp	 eax, -1
  00025	74 13		 je	 SHORT $LN3@BattleInfo

  00027	8b 4d 14	 mov	 ecx, DWORD PTR _score2$[ebp]
  0002a	8b 55 0c	 mov	 edx, DWORD PTR _score1$[ebp]
  0002d	51		 push	 ecx
  0002e	57		 push	 edi
  0002f	52		 push	 edx
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?GCGoalSend@@YAXHPADE0E@Z ; GCGoalSend
  00037	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@BattleInfo:

  0003a	83 c6 04	 add	 esi, 4
  0003d	ff 4d fc	 dec	 DWORD PTR tv174[ebp]
  00040	75 de		 jne	 SHORT $LL4@BattleInfo
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 10 00	 ret	 16			; 00000010H
?BattleInfoSend@CGMMng@@QAEXPADE0E@Z ENDP		; CGMMng::BattleInfoSend
_TEXT	ENDS
PUBLIC	?GetCmd@CGMMng@@QAEHPAD@Z			; CGMMng::GetCmd
EXTRN	_stricmp:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GetCmd@CGMMng@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_szCmd$ = 8						; size = 4
?GetCmd@CGMMng@@QAEHPAD@Z PROC				; CGMMng::GetCmd, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

  0000a	33 f6		 xor	 esi, esi
  0000c	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0000f	8d b9 b4 36 00
	00		 lea	 edi, DWORD PTR [ecx+14004]
$LL11@GetCmd:

  00015	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00018	7e 11		 jle	 SHORT $LN4@GetCmd

  0001a	8b 45 08	 mov	 eax, DWORD PTR _szCmd$[ebp]
  0001d	53		 push	 ebx
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _stricmp
  00024	83 c4 08	 add	 esp, 8
  00027	85 c0		 test	 eax, eax
  00029	74 1a		 je	 SHORT $LN9@GetCmd
$LN4@GetCmd:

  0002b	46		 inc	 esi
  0002c	83 c7 04	 add	 edi, 4
  0002f	83 c3 14	 add	 ebx, 20			; 00000014H
  00032	81 fe bc 02 00
	00		 cmp	 esi, 700		; 000002bcH
  00038	7c db		 jl	 SHORT $LL11@GetCmd

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	33 c0		 xor	 eax, eax
  0003e	5b		 pop	 ebx

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
$LN9@GetCmd:

  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 84 b1 b4 36
	00 00		 mov	 eax, DWORD PTR [ecx+esi*4+14004]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?GetCmd@CGMMng@@QAEHPAD@Z ENDP				; CGMMng::GetCmd
_TEXT	ENDS
PUBLIC	?GetData@CGMMng@@QAEEPADAAH1@Z			; CGMMng::GetData
; Function compile flags: /Ogtp
;	COMDAT ?GetData@CGMMng@@QAEEPADAAH1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_szCmd$ = 8						; size = 4
_command_code$ = 12					; size = 4
_gamemaster_code$ = 16					; size = 4
?GetData@CGMMng@@QAEEPADAAH1@Z PROC			; CGMMng::GetData, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

  0000a	33 f6		 xor	 esi, esi
  0000c	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0000f	8d b9 b4 36 00
	00		 lea	 edi, DWORD PTR [ecx+14004]
$LL11@GetData:

  00015	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00018	7e 11		 jle	 SHORT $LN4@GetData

  0001a	8b 45 08	 mov	 eax, DWORD PTR _szCmd$[ebp]
  0001d	53		 push	 ebx
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _stricmp
  00024	83 c4 08	 add	 esp, 8
  00027	85 c0		 test	 eax, eax
  00029	74 1a		 je	 SHORT $LN9@GetData
$LN4@GetData:

  0002b	46		 inc	 esi
  0002c	83 c7 04	 add	 edi, 4
  0002f	83 c3 14	 add	 ebx, 20			; 00000014H
  00032	81 fe bc 02 00
	00		 cmp	 esi, 700		; 000002bcH
  00038	7c db		 jl	 SHORT $LL11@GetData

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	32 c0		 xor	 al, al
  0003e	5b		 pop	 ebx

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 0c 00	 ret	 12			; 0000000cH
$LN9@GetData:

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 8c b0 b4 36
	00 00		 mov	 ecx, DWORD PTR [eax+esi*4+14004]
  0004f	8b 55 0c	 mov	 edx, DWORD PTR _command_code$[ebp]
  00052	89 0a		 mov	 DWORD PTR [edx], ecx

  00054	8b 84 b0 a4 41
	00 00		 mov	 eax, DWORD PTR [eax+esi*4+16804]
  0005b	8b 4d 10	 mov	 ecx, DWORD PTR _gamemaster_code$[ebp]
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	89 01		 mov	 DWORD PTR [ecx], eax

  00062	b0 01		 mov	 al, 1
  00064	5b		 pop	 ebx

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
?GetData@CGMMng@@QAEEPADAAH1@Z ENDP			; CGMMng::GetData
_TEXT	ENDS
PUBLIC	?GetTokenString@CGMMng@@QAEPADXZ		; CGMMng::GetTokenString
EXTRN	_strtok:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GetTokenString@CGMMng@@QAEPADXZ
_TEXT	SEGMENT
_seps$ = -4						; size = 2
?GetTokenString@CGMMng@@QAEPADXZ PROC			; CGMMng::GetTokenString, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

  00004	8d 4d fc	 lea	 ecx, DWORD PTR _seps$[ebp]
  00007	51		 push	 ecx
  00008	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0000d	6a 00		 push	 0
  0000f	66 89 45 fc	 mov	 WORD PTR _seps$[ebp], ax
  00013	e8 00 00 00 00	 call	 _strtok
  00018	83 c4 08	 add	 esp, 8

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?GetTokenString@CGMMng@@QAEPADXZ ENDP			; CGMMng::GetTokenString
_TEXT	ENDS
PUBLIC	?GetTokenNumber@CGMMng@@QAEHXZ			; CGMMng::GetTokenNumber
EXTRN	_atoi:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GetTokenNumber@CGMMng@@QAEHXZ
_TEXT	SEGMENT
_seps$ = -4						; size = 2
?GetTokenNumber@CGMMng@@QAEHXZ PROC			; CGMMng::GetTokenNumber, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

  00004	8d 4d fc	 lea	 ecx, DWORD PTR _seps$[ebp]
  00007	51		 push	 ecx
  00008	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0000d	6a 00		 push	 0
  0000f	66 89 45 fc	 mov	 WORD PTR _seps$[ebp], ax
  00013	e8 00 00 00 00	 call	 _strtok
  00018	83 c4 08	 add	 esp, 8

  0001b	85 c0		 test	 eax, eax
  0001d	74 0d		 je	 SHORT $LN1@GetTokenNu

  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 _atoi
  00025	83 c4 04	 add	 esp, 4

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN1@GetTokenNu:

  0002c	33 c0		 xor	 eax, eax

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?GetTokenNumber@CGMMng@@QAEHXZ ENDP			; CGMMng::GetTokenNumber
_TEXT	ENDS
PUBLIC	?CodePageToUnicode@@YAPA_WHPAD@Z		; CodePageToUnicode
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
; Function compile flags: /Ogtp
;	COMDAT ?CodePageToUnicode@@YAPA_WHPAD@Z
_TEXT	SEGMENT
_codePage$ = 8						; size = 4
_src$ = 12						; size = 4
?CodePageToUnicode@@YAPA_WHPAD@Z PROC			; CodePageToUnicode, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 55 0c	 mov	 edx, DWORD PTR _src$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	75 04		 jne	 SHORT $LN4@CodePageTo
  0000a	33 c0		 xor	 eax, eax

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
$LN4@CodePageTo:

  0000e	8b c2		 mov	 eax, edx
  00010	56		 push	 esi
  00011	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL7@CodePageTo:
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	40		 inc	 eax
  00017	84 c9		 test	 cl, cl
  00019	75 f9		 jne	 SHORT $LL7@CodePageTo
  0001b	2b c6		 sub	 eax, esi
  0001d	53		 push	 ebx
  0001e	8b d8		 mov	 ebx, eax

  00020	75 13		 jne	 SHORT $LN3@CodePageTo

  00022	6a 02		 push	 2
  00024	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00029	83 c4 04	 add	 esp, 4

  0002c	33 c9		 xor	 ecx, ecx
  0002e	5b		 pop	 ebx
  0002f	66 89 08	 mov	 WORD PTR [eax], cx
  00032	5e		 pop	 esi

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@CodePageTo:

  00035	6a 00		 push	 0
  00037	6a 00		 push	 0
  00039	53		 push	 ebx
  0003a	52		 push	 edx
  0003b	8b 55 08	 mov	 edx, DWORD PTR _codePage$[ebp]
  0003e	6a 00		 push	 0
  00040	52		 push	 edx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  00047	8b f0		 mov	 esi, eax

  00049	85 f6		 test	 esi, esi
  0004b	75 04		 jne	 SHORT $LN2@CodePageTo
  0004d	5b		 pop	 ebx
  0004e	5e		 pop	 esi

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN2@CodePageTo:

  00051	33 c9		 xor	 ecx, ecx
  00053	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00056	ba 02 00 00 00	 mov	 edx, 2
  0005b	f7 e2		 mul	 edx
  0005d	0f 90 c1	 seto	 cl
  00060	57		 push	 edi
  00061	f7 d9		 neg	 ecx
  00063	0b c8		 or	 ecx, eax
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

  0006b	8b 4d 0c	 mov	 ecx, DWORD PTR _src$[ebp]
  0006e	8b 55 08	 mov	 edx, DWORD PTR _codePage$[ebp]
  00071	83 c4 04	 add	 esp, 4
  00074	56		 push	 esi
  00075	8b f8		 mov	 edi, eax
  00077	57		 push	 edi
  00078	53		 push	 ebx
  00079	33 c0		 xor	 eax, eax
  0007b	51		 push	 ecx
  0007c	50		 push	 eax
  0007d	52		 push	 edx
  0007e	66 89 04 77	 mov	 WORD PTR [edi+esi*2], ax
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24

  00088	85 c0		 test	 eax, eax
  0008a	75 10		 jne	 SHORT $LN1@CodePageTo

  0008c	57		 push	 edi
  0008d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00092	83 c4 04	 add	 esp, 4
  00095	5f		 pop	 edi
  00096	5b		 pop	 ebx

  00097	33 c0		 xor	 eax, eax
  00099	5e		 pop	 esi

  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
$LN1@CodePageTo:

  0009c	8b c7		 mov	 eax, edi
  0009e	5f		 pop	 edi
  0009f	5b		 pop	 ebx
  000a0	5e		 pop	 esi

  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
?CodePageToUnicode@@YAPA_WHPAD@Z ENDP			; CodePageToUnicode
_TEXT	ENDS
PUBLIC	?UnicodeToCodePage@@YAPADHPA_W@Z		; UnicodeToCodePage
EXTRN	__imp__WideCharToMultiByte@32:PROC
; Function compile flags: /Ogtp
;	COMDAT ?UnicodeToCodePage@@YAPADHPA_W@Z
_TEXT	SEGMENT
_codePage$ = 8						; size = 4
_src$ = 12						; size = 4
?UnicodeToCodePage@@YAPADHPA_W@Z PROC			; UnicodeToCodePage, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 55 0c	 mov	 edx, DWORD PTR _src$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	75 04		 jne	 SHORT $LN4@UnicodeToC
  0000a	33 c0		 xor	 eax, eax

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
$LN4@UnicodeToC:

  0000e	8b c2		 mov	 eax, edx
  00010	56		 push	 esi
  00011	8d 70 02	 lea	 esi, DWORD PTR [eax+2]
$LL7@UnicodeToC:
  00014	66 8b 08	 mov	 cx, WORD PTR [eax]
  00017	83 c0 02	 add	 eax, 2
  0001a	66 85 c9	 test	 cx, cx
  0001d	75 f5		 jne	 SHORT $LL7@UnicodeToC
  0001f	2b c6		 sub	 eax, esi
  00021	d1 f8		 sar	 eax, 1
  00023	53		 push	 ebx
  00024	8b d8		 mov	 ebx, eax

  00026	75 11		 jne	 SHORT $LN3@UnicodeToC

  00028	6a 01		 push	 1
  0002a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0002f	83 c4 04	 add	 esp, 4
  00032	5b		 pop	 ebx

  00033	c6 00 00	 mov	 BYTE PTR [eax], 0
  00036	5e		 pop	 esi

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
$LN3@UnicodeToC:

  00039	8b 45 08	 mov	 eax, DWORD PTR _codePage$[ebp]
  0003c	6a 00		 push	 0
  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	6a 00		 push	 0
  00044	53		 push	 ebx
  00045	52		 push	 edx
  00046	6a 00		 push	 0
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0004f	8b f0		 mov	 esi, eax

  00051	85 f6		 test	 esi, esi
  00053	75 04		 jne	 SHORT $LN2@UnicodeToC
  00055	5b		 pop	 ebx
  00056	5e		 pop	 esi

  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
$LN2@UnicodeToC:

  00059	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0005c	57		 push	 edi
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

  00063	8b 55 0c	 mov	 edx, DWORD PTR _src$[ebp]
  00066	83 c4 04	 add	 esp, 4
  00069	6a 00		 push	 0
  0006b	6a 00		 push	 0
  0006d	56		 push	 esi
  0006e	8b f8		 mov	 edi, eax
  00070	8b 45 08	 mov	 eax, DWORD PTR _codePage$[ebp]
  00073	57		 push	 edi
  00074	53		 push	 ebx
  00075	52		 push	 edx
  00076	6a 00		 push	 0
  00078	50		 push	 eax
  00079	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

  00083	85 c0		 test	 eax, eax
  00085	75 10		 jne	 SHORT $LN1@UnicodeToC

  00087	57		 push	 edi
  00088	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0008d	83 c4 04	 add	 esp, 4
  00090	5f		 pop	 edi
  00091	5b		 pop	 ebx

  00092	33 c0		 xor	 eax, eax
  00094	5e		 pop	 esi

  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
$LN1@UnicodeToC:

  00097	8b c7		 mov	 eax, edi
  00099	5f		 pop	 edi
  0009a	5b		 pop	 ebx
  0009b	5e		 pop	 esi

  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?UnicodeToCodePage@@YAPADHPA_W@Z ENDP			; UnicodeToCodePage
_TEXT	ENDS
PUBLIC	?CirilicaFIX2@@YAXPAD@Z				; CirilicaFIX2
; Function compile flags: /Ogtp
;	COMDAT ?CirilicaFIX2@@YAXPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
?CirilicaFIX2@@YAXPAD@Z PROC				; CirilicaFIX2, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	56		 push	 esi
  00007	33 d2		 xor	 edx, edx
  00009	33 f6		 xor	 esi, esi
  0000b	38 11		 cmp	 BYTE PTR [ecx], dl
  0000d	74 28		 je	 SHORT $LN10@CirilicaFI
  0000f	90		 npad	 1
$LL5@CirilicaFI:

  00010	8a 04 0a	 mov	 al, BYTE PTR [edx+ecx]
  00013	84 c0		 test	 al, al
  00015	79 0e		 jns	 SHORT $LN2@CirilicaFI

  00017	c0 e0 06	 shl	 al, 6
  0001a	02 44 0a 01	 add	 al, BYTE PTR [edx+ecx+1]
  0001e	04 30		 add	 al, 48			; 00000030H

  00020	83 c2 02	 add	 edx, 2

  00023	eb 01		 jmp	 SHORT $LN11@CirilicaFI
$LN2@CirilicaFI:

  00025	42		 inc	 edx
$LN11@CirilicaFI:

  00026	88 04 0e	 mov	 BYTE PTR [esi+ecx], al
  00029	46		 inc	 esi
  0002a	80 3c 0a 00	 cmp	 BYTE PTR [edx+ecx], 0
  0002e	75 e0		 jne	 SHORT $LL5@CirilicaFI

  00030	c6 04 0e 00	 mov	 BYTE PTR [esi+ecx], 0
  00034	5e		 pop	 esi

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN10@CirilicaFI:

  00037	88 14 0e	 mov	 BYTE PTR [esi+ecx], dl
  0003a	5e		 pop	 esi

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?CirilicaFIX2@@YAXPAD@Z ENDP				; CirilicaFIX2
_TEXT	ENDS
PUBLIC	??_C@_0DP@FDLNLNME@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ ; `string'
PUBLIC	?GetInfinityArrowMPConsumption@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z ; CGMMng::GetInfinityArrowMPConsumption
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A:BYTE ; g_SkillAdditionInfo
;	COMDAT ??_C@_0DP@FDLNLNME@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
CONST	SEGMENT
??_C@_0DP@FDLNLNME@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ DB 0a7H
	DB	0a1H, 0a7H, 0b0H, 0a7H, 0a9H, 0a7H, 0a9H, '?', 0a7H, 0b1H, 0a7H
	DB	0a8H, '? ?', 0a7H, 0b8H, 0a1H, 0a4H, 0a7H, 0b0H, '?', 0a7H, 0deH
	DB	' MP ?', 0a7H, 0b4H, 0a7H, 0d7H, 0a7H, 0e2H, 0a1H, 0a4H, '?[+0'
	DB	':%d] [+1:%d] [+2:%d]', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?GetInfinityArrowMPConsumption@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetInfinityArrowMPConsumption@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; CGMMng::GetInfinityArrowMPConsumption, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+20
  00008	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+16
  0000e	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+12
  00014	50		 push	 eax
  00015	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00018	51		 push	 ecx
  00019	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@FDLNLNME@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00027	83 c4 14	 add	 esp, 20			; 00000014H

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?GetInfinityArrowMPConsumption@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; CGMMng::GetInfinityArrowMPConsumption
_TEXT	ENDS
PUBLIC	??_C@_0DI@FNDCCLMJ@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ ; `string'
PUBLIC	?ControlInfinityArrowMPConsumption0@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption0
;	COMDAT ??_C@_0DI@FNDCCLMJ@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
CONST	SEGMENT
??_C@_0DI@FNDCCLMJ@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ DB 0a7H
	DB	0a1H, 0a7H, 0b0H, 0a7H, 0a9H, 0a7H, 0a9H, '?', 0a7H, 0b1H, 0a7H
	DB	0a8H, '? ?', 0a7H, 0b8H, 0a1H, 0a4H, 0a7H, 0b0H, '?', 0a7H, 0deH
	DB	' MP ?', 0a7H, 0b4H, 0a7H, 0d7H, 0a7H, 0e2H, 0a1H, 0a4H, '? ??'
	DB	0a1H, 0e3H, 0a7H, 0d8H, '(+0) : %d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?ControlInfinityArrowMPConsumption0@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iValue$ = 12						; size = 4
?ControlInfinityArrowMPConsumption0@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CGMMng::ControlInfinityArrowMPConsumption0, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]

  00006	50		 push	 eax
  00007	a3 0c 00 00 00	 mov	 DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+12, eax
  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@FNDCCLMJ@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ControlInfinityArrowMPConsumption0@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CGMMng::ControlInfinityArrowMPConsumption0
_TEXT	ENDS
PUBLIC	??_C@_0DI@JBJICLFH@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ ; `string'
PUBLIC	?ControlInfinityArrowMPConsumption1@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption1
;	COMDAT ??_C@_0DI@JBJICLFH@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
CONST	SEGMENT
??_C@_0DI@JBJICLFH@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ DB 0a7H
	DB	0a1H, 0a7H, 0b0H, 0a7H, 0a9H, 0a7H, 0a9H, '?', 0a7H, 0b1H, 0a7H
	DB	0a8H, '? ?', 0a7H, 0b8H, 0a1H, 0a4H, 0a7H, 0b0H, '?', 0a7H, 0deH
	DB	' MP ?', 0a7H, 0b4H, 0a7H, 0d7H, 0a7H, 0e2H, 0a1H, 0a4H, '? ??'
	DB	0a1H, 0e3H, 0a7H, 0d8H, '(+1) : %d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?ControlInfinityArrowMPConsumption1@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iValue$ = 12						; size = 4
?ControlInfinityArrowMPConsumption1@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CGMMng::ControlInfinityArrowMPConsumption1, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]

  00006	50		 push	 eax
  00007	a3 10 00 00 00	 mov	 DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+16, eax
  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@JBJICLFH@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ControlInfinityArrowMPConsumption1@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CGMMng::ControlInfinityArrowMPConsumption1
_TEXT	ENDS
PUBLIC	??_C@_0DI@BPBHCMLE@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ ; `string'
PUBLIC	?ControlInfinityArrowMPConsumption2@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption2
;	COMDAT ??_C@_0DI@BPBHCMLE@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
CONST	SEGMENT
??_C@_0DI@BPBHCMLE@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ DB 0a7H
	DB	0a1H, 0a7H, 0b0H, 0a7H, 0a9H, 0a7H, 0a9H, '?', 0a7H, 0b1H, 0a7H
	DB	0a8H, '? ?', 0a7H, 0b8H, 0a1H, 0a4H, 0a7H, 0b0H, '?', 0a7H, 0deH
	DB	' MP ?', 0a7H, 0b4H, 0a7H, 0d7H, 0a7H, 0e2H, 0a1H, 0a4H, '? ??'
	DB	0a1H, 0e3H, 0a7H, 0d8H, '(+2) : %d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?ControlInfinityArrowMPConsumption2@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iValue$ = 12						; size = 4
?ControlInfinityArrowMPConsumption2@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CGMMng::ControlInfinityArrowMPConsumption2, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]

  00006	50		 push	 eax
  00007	a3 14 00 00 00	 mov	 DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+20, eax
  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@BPBHCMLE@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ControlInfinityArrowMPConsumption2@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CGMMng::ControlInfinityArrowMPConsumption2
_TEXT	ENDS
PUBLIC	??_C@_0DI@NDLNCMCK@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ ; `string'
PUBLIC	?ControlInfinityArrowMPConsumption3@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption3
;	COMDAT ??_C@_0DI@NDLNCMCK@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
CONST	SEGMENT
??_C@_0DI@NDLNCMCK@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@ DB 0a7H
	DB	0a1H, 0a7H, 0b0H, 0a7H, 0a9H, 0a7H, 0a9H, '?', 0a7H, 0b1H, 0a7H
	DB	0a8H, '? ?', 0a7H, 0b8H, 0a1H, 0a4H, 0a7H, 0b0H, '?', 0a7H, 0deH
	DB	' MP ?', 0a7H, 0b4H, 0a7H, 0d7H, 0a7H, 0e2H, 0a1H, 0a4H, '? ??'
	DB	0a1H, 0e3H, 0a7H, 0d8H, '(+3) : %d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?ControlInfinityArrowMPConsumption3@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iValue$ = 12						; size = 4
?ControlInfinityArrowMPConsumption3@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CGMMng::ControlInfinityArrowMPConsumption3, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]

  00006	50		 push	 eax
  00007	a3 18 00 00 00	 mov	 DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+24, eax
  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@NDLNCMCK@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5MP?5?$DP?$KH?$LE@
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ControlInfinityArrowMPConsumption3@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CGMMng::ControlInfinityArrowMPConsumption3
_TEXT	ENDS
PUBLIC	??_C@_0DP@OMKKMDIP@220?$KB?$KE?$KB?m?$DP?$KB?l?5?$KH?$KB?$KH?$KO?$DP?$KH?e?5?$KB?m?$KH?$KD?$KH?$KC?$KH?$OA?$DP?$KB?h?$KH?$KJ@ ; `string'
PUBLIC	??_C@_0DI@OCOHJKLM@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5?$DP?$KH?$KE?$KB?c?$DP@ ; `string'
PUBLIC	?SetInfinityArrowTime@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::SetInfinityArrowTime
;	COMDAT ??_C@_0DP@OMKKMDIP@220?$KB?$KE?$KB?m?$DP?$KB?l?5?$KH?$KB?$KH?$KO?$DP?$KH?e?5?$KB?m?$KH?$KD?$KH?$KC?$KH?$OA?$DP?$KB?h?$KH?$KJ@
CONST	SEGMENT
??_C@_0DP@OMKKMDIP@220?$KB?$KE?$KB?m?$DP?$KB?l?5?$KH?$KB?$KH?$KO?$DP?$KH?e?5?$KB?m?$KH?$KD?$KH?$KC?$KH?$OA?$DP?$KB?h?$KH?$KJ@ DB '2'
	DB	'20', 0a1H, 0a4H, 0a1H, 0edH, '?', 0a1H, 0ecH, ' ', 0a7H, 0a1H
	DB	0a7H, 0aeH, '?', 0a7H, 0e5H, ' ', 0a1H, 0edH, 0a7H, 0a3H, 0a7H
	DB	0a2H, 0a7H, 0e0H, '?', 0a1H, 0e8H, 0a7H, 0a9H, 0a7H, 0a2H, 0a7H
	DB	0d7H, 0a7H, 0d7H, ' ?', 0a7H, 0d9H, '?', 0a7H, 0ddH, 0a1H, 0e3H
	DB	'??', 0a7H, 0abH, 0a7H, 0a9H, 0a7H, 0b7H, '?', 0a7H, 0b1H, '?', 0a7H
	DB	0bbH, '.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@OCOHJKLM@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5?$DP?$KH?$KE?$KB?c?$DP@
CONST	SEGMENT
??_C@_0DI@OCOHJKLM@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5?$DP?$KH?$KE?$KB?c?$DP@ DB 0a7H
	DB	0a1H, 0a7H, 0b0H, 0a7H, 0a9H, 0a7H, 0a9H, '?', 0a7H, 0b1H, 0a7H
	DB	0a8H, '? ?', 0a7H, 0b8H, 0a1H, 0a4H, 0a7H, 0b0H, '?', 0a7H, 0deH
	DB	' ?', 0a7H, 0a4H, 0a1H, 0e3H, '? ', 0a1H, 0e3H, '?', 0a7H, 0a2H
	DB	'? ??', 0a7H, 0a2H, 0a1H, 0e8H, ' : %d', 0a7H, 0a4H, 0a7H, 0acH
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetInfinityArrowTime@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iValue$ = 12						; size = 4
?SetInfinityArrowTime@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CGMMng::SetInfinityArrowTime, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	66 83 b8 b8 00
	00 00 02	 cmp	 WORD PTR [eax+184], 2
  0000e	75 2b		 jne	 SHORT $LN2@SetInfinit
  00010	b9 01 00 00 00	 mov	 ecx, 1
  00015	66 39 48 68	 cmp	 WORD PTR [eax+104], cx
  00019	75 20		 jne	 SHORT $LN2@SetInfinit
  0001b	38 88 bb 00 00
	00		 cmp	 BYTE PTR [eax+187], cl
  00021	75 18		 jne	 SHORT $LN2@SetInfinit

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _iValue$[ebp]
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@OCOHJKLM@?$KH?$KB?$KH?$LA?$KH?$KJ?$KH?$KJ?$DP?$KH?$LB?$KH?$KI?$DP?5?$DP?$KH?$LI?$KB?$KE?$KH?$LA?$DP?$KH?$NO?5?$DP?$KH?$KE?$KB?c?$DP@
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN2@SetInfinit:

  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@OMKKMDIP@220?$KB?$KE?$KB?m?$DP?$KB?l?5?$KH?$KB?$KH?$KO?$DP?$KH?e?5?$KB?m?$KH?$KD?$KH?$KC?$KH?$OA?$DP?$KB?h?$KH?$KJ@
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00048	83 c4 08	 add	 esp, 8

  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?SetInfinityArrowTime@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CGMMng::SetInfinityArrowTime
_TEXT	ENDS
PUBLIC	??_C@_0DP@BMPEIHOB@?$KH?$KI?$KH?$KF?$KH?$KB?$KH?$KO?$DP?$KH?$OA?$DP?$DP?$KH?$KG?$DP?$KH?W?$DP?5?$DP?$KH?g?$DP?$KH?$NP?$DP?$DP?$KB?m?$KH?$KO@ ; `string'
PUBLIC	?ControlFireScreamDoubleAttackDistance@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlFireScreamDoubleAttackDistance
;	COMDAT ??_C@_0DP@BMPEIHOB@?$KH?$KI?$KH?$KF?$KH?$KB?$KH?$KO?$DP?$KH?$OA?$DP?$DP?$KH?$KG?$DP?$KH?W?$DP?5?$DP?$KH?g?$DP?$KH?$NP?$DP?$DP?$KB?m?$KH?$KO@
; File e:\work\tranet_version\gs\gameserver\skilladditioninfo.h
CONST	SEGMENT
??_C@_0DP@BMPEIHOB@?$KH?$KI?$KH?$KF?$KH?$KB?$KH?$KO?$DP?$KH?$OA?$DP?$DP?$KH?$KG?$DP?$KH?W?$DP?5?$DP?$KH?g?$DP?$KH?$NP?$DP?$DP?$KB?m?$KH?$KO@ DB 0a7H
	DB	0a8H, 0a7H, 0a5H, 0a7H, 0a1H, 0a7H, 0aeH, '?', 0a7H, 0e0H, '??'
	DB	0a7H, 0a6H, '?', 0a7H, 0d7H, '? ?', 0a7H, 0e7H, '?', 0a7H, 0dfH
	DB	'??', 0a1H, 0edH, 0a7H, 0aeH, 0a7H, 0a2H, 0a7H, 0e8H, ' ', 0a7H
	DB	0a8H, 0a7H, 0eaH, 0a1H, 0edH, 0a7H, 0c1H, 0a1H, 0e3H, 0a7H, 0a6H
	DB	0a7H, 0d7H, '? ??', 0a1H, 0e3H, 0a7H, 0d8H, ':%d', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?ControlFireScreamDoubleAttackDistance@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iValue$ = 12						; size = 4
?ControlFireScreamDoubleAttackDistance@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CGMMng::ControlFireScreamDoubleAttackDistance, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]

  00006	50		 push	 eax
  00007	a3 20 00 00 00	 mov	 DWORD PTR ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A+32, eax
  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@BMPEIHOB@?$KH?$KI?$KH?$KF?$KH?$KB?$KH?$KO?$DP?$KH?$OA?$DP?$DP?$KH?$KG?$DP?$KH?W?$DP?5?$DP?$KH?g?$DP?$KH?$NP?$DP?$DP?$KB?m?$KH?$KO@
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?ControlFireScreamDoubleAttackDistance@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CGMMng::ControlFireScreamDoubleAttackDistance
_TEXT	ENDS
PUBLIC	??_C@_0EC@DPIKBIMD@Strength?$FL?$CFd?$FN?5Dexterity?$FL?$CFd?$FN?5Vital@ ; `string'
PUBLIC	??_C@_08MCKKHFLN@Class?3?$CFs?$AA@		; `string'
PUBLIC	??_C@_08IGEBPGCA@SUMMONER?$AA@			; `string'
PUBLIC	??_C@_08LDDPEOE@DARKLORD?$AA@			; `string'
PUBLIC	??_C@_07MGHBJNEF@MAGUMSA?$AA@			; `string'
PUBLIC	??_C@_06OCLDHEIK@KNIGHT?$AA@			; `string'
PUBLIC	??_C@_06GJADEPB@WIZARD?$AA@			; `string'
PUBLIC	??_C@_0BD@CFKKKGDI@Result?9Ability?$CI?$CFs?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BG@GPJEKBCF@Result?9User?5Not?5Found?$AA@ ; `string'
PUBLIC	??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CmdAbility@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z	; CGMMng::CmdAbility
EXTRN	__imp__wsprintfA:PROC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjGetIndex@@YAHPAD@Z:PROC			; gObjGetIndex
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0EC@DPIKBIMD@Strength?$FL?$CFd?$FN?5Dexterity?$FL?$CFd?$FN?5Vital@
CONST	SEGMENT
??_C@_0EC@DPIKBIMD@Strength?$FL?$CFd?$FN?5Dexterity?$FL?$CFd?$FN?5Vital@ DB 'S'
	DB	'trength[%d] Dexterity[%d] Vitality[%d] Energy[%d] Leadership['
	DB	'%d]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08MCKKHFLN@Class?3?$CFs?$AA@
CONST	SEGMENT
??_C@_08MCKKHFLN@Class?3?$CFs?$AA@ DB 'Class:%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IGEBPGCA@SUMMONER?$AA@
CONST	SEGMENT
??_C@_08IGEBPGCA@SUMMONER?$AA@ DB 'SUMMONER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LDDPEOE@DARKLORD?$AA@
CONST	SEGMENT
??_C@_08LDDPEOE@DARKLORD?$AA@ DB 'DARKLORD', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MGHBJNEF@MAGUMSA?$AA@
CONST	SEGMENT
??_C@_07MGHBJNEF@MAGUMSA?$AA@ DB 'MAGUMSA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCLDHEIK@KNIGHT?$AA@
CONST	SEGMENT
??_C@_06OCLDHEIK@KNIGHT?$AA@ DB 'KNIGHT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GJADEPB@WIZARD?$AA@
CONST	SEGMENT
??_C@_06GJADEPB@WIZARD?$AA@ DB 'WIZARD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CFKKKGDI@Result?9Ability?$CI?$CFs?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@CFKKKGDI@Result?9Ability?$CI?$CFs?$CJ?$AA@ DB 'Result-Ability(%'
	DB	's)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GPJEKBCF@Result?9User?5Not?5Found?$AA@
CONST	SEGMENT
??_C@_0BG@GPJEKBCF@Result?9User?5Not?5Found?$AA@ DB 'Result-User Not Foun'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@
CONST	SEGMENT
??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@ DB 'Result-Invalid Argu'
	DB	'ment', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdAbility@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z
_TEXT	SEGMENT
_szText$ = -380						; size = 256
_classname$225696 = -124				; size = 120
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_szName$ = 12						; size = 4
?CmdAbility@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z PROC	; CGMMng::CmdAbility, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 7c 01 00
	00		 sub	 esp, 380		; 0000017cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 0c	 mov	 ebx, DWORD PTR _szName$[ebp]
  00017	57		 push	 edi
  00018	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]

  0001b	68 00 01 00 00	 push	 256			; 00000100H
  00020	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00026	6a 00		 push	 0
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 _memset
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

  00031	85 db		 test	 ebx, ebx
  00033	75 24		 jne	 SHORT $LN3@CmdAbility

  00035	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00037	6a 01		 push	 1
  00039	51		 push	 ecx
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@
  0003f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
  00047	5f		 pop	 edi
  00048	5b		 pop	 ebx

  00049	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004c	33 cd		 xor	 ecx, ebp
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
$LN3@CmdAbility:

  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  0005f	83 c4 04	 add	 esp, 4

  00062	85 c0		 test	 eax, eax
  00064	7f 24		 jg	 SHORT $LN2@CmdAbility

  00066	8b 17		 mov	 edx, DWORD PTR [edi]
  00068	6a 01		 push	 1
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GPJEKBCF@Result?9User?5Not?5Found?$AA@
  00070	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	5f		 pop	 edi
  00079	5b		 pop	 ebx

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
$LN2@CmdAbility:

  0008a	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00090	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00096	56		 push	 esi

  00097	53		 push	 ebx
  00098	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__wsprintfA
  0009e	8b f0		 mov	 esi, eax
  000a0	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CFKKKGDI@Result?9Ability?$CI?$CFs?$CJ?$AA@
  000ab	50		 push	 eax
  000ac	ff d3		 call	 ebx

  000ae	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000b0	6a 01		 push	 1
  000b2	51		 push	 ecx
  000b3	8d 95 84 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  000b9	52		 push	 edx
  000ba	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  000bf	68 00 01 00 00	 push	 256			; 00000100H
  000c4	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000ca	6a 00		 push	 0
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 _memset

  000d2	0f b7 8e b8 00
	00 00		 movzx	 ecx, WORD PTR [esi+184]
  000d9	83 c4 24	 add	 esp, 36			; 00000024H
  000dc	83 f9 05	 cmp	 ecx, 5
  000df	0f 87 05 01 00
	00		 ja	 $LN1@CmdAbility

  000e5	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06GJADEPB@WIZARD?$AA@+4
  000eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_06GJADEPB@WIZARD?$AA@
  000f1	66 89 45 88	 mov	 WORD PTR _classname$225696[ebp+4], ax
  000f5	33 c0		 xor	 eax, eax
  000f7	89 45 8b	 mov	 DWORD PTR _classname$225696[ebp+7], eax
  000fa	89 45 8f	 mov	 DWORD PTR _classname$225696[ebp+11], eax
  000fd	89 45 93	 mov	 DWORD PTR _classname$225696[ebp+15], eax
  00100	88 45 97	 mov	 BYTE PTR _classname$225696[ebp+19], al

  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06OCLDHEIK@KNIGHT?$AA@
  00108	89 45 98	 mov	 DWORD PTR _classname$225696[ebp+20], eax
  0010b	0f b6 05 06 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_06OCLDHEIK@KNIGHT?$AA@+6
  00112	88 45 9e	 mov	 BYTE PTR _classname$225696[ebp+26], al
  00115	33 c0		 xor	 eax, eax
  00117	89 45 9f	 mov	 DWORD PTR _classname$225696[ebp+27], eax
  0011a	89 45 a3	 mov	 DWORD PTR _classname$225696[ebp+31], eax
  0011d	89 45 a7	 mov	 DWORD PTR _classname$225696[ebp+35], eax
  00120	88 45 ab	 mov	 BYTE PTR _classname$225696[ebp+39], al

  00123	89 45 b0	 mov	 DWORD PTR _classname$225696[ebp+44], eax
  00126	89 45 b4	 mov	 DWORD PTR _classname$225696[ebp+48], eax
  00129	89 45 b8	 mov	 DWORD PTR _classname$225696[ebp+52], eax
  0012c	89 45 bc	 mov	 DWORD PTR _classname$225696[ebp+56], eax

  0012f	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_07MGHBJNEF@MAGUMSA?$AA@+4
  00134	89 45 c4	 mov	 DWORD PTR _classname$225696[ebp+64], eax
  00137	33 c0		 xor	 eax, eax
  00139	89 55 84	 mov	 DWORD PTR _classname$225696[ebp], edx
  0013c	0f b6 15 06 00
	00 00		 movzx	 edx, BYTE PTR ??_C@_06GJADEPB@WIZARD?$AA@+6
  00143	89 45 c8	 mov	 DWORD PTR _classname$225696[ebp+68], eax
  00146	89 45 cc	 mov	 DWORD PTR _classname$225696[ebp+72], eax
  00149	89 45 d0	 mov	 DWORD PTR _classname$225696[ebp+76], eax

  0014c	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_08LDDPEOE@DARKLORD?$AA@+4
  00151	89 45 d8	 mov	 DWORD PTR _classname$225696[ebp+84], eax
  00154	33 c0		 xor	 eax, eax
  00156	88 55 8a	 mov	 BYTE PTR _classname$225696[ebp+6], dl
  00159	66 8b 15 04 00
	00 00		 mov	 dx, WORD PTR ??_C@_06OCLDHEIK@KNIGHT?$AA@+4
  00160	89 45 dd	 mov	 DWORD PTR _classname$225696[ebp+89], eax
  00163	89 45 e1	 mov	 DWORD PTR _classname$225696[ebp+93], eax
  00166	66 89 45 e5	 mov	 WORD PTR _classname$225696[ebp+97], ax
  0016a	88 45 e7	 mov	 BYTE PTR _classname$225696[ebp+99], al

  0016d	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08IGEBPGCA@SUMMONER?$AA@
  00172	66 89 55 9c	 mov	 WORD PTR _classname$225696[ebp+24], dx
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_07MGHBJNEF@MAGUMSA?$AA@
  0017c	89 45 e8	 mov	 DWORD PTR _classname$225696[ebp+100], eax
  0017f	0f b6 05 08 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_08IGEBPGCA@SUMMONER?$AA@+8
  00186	89 55 c0	 mov	 DWORD PTR _classname$225696[ebp+60], edx
  00189	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_08LDDPEOE@DARKLORD?$AA@
  0018f	89 55 d4	 mov	 DWORD PTR _classname$225696[ebp+80], edx
  00192	0f b6 15 08 00
	00 00		 movzx	 edx, BYTE PTR ??_C@_08LDDPEOE@DARKLORD?$AA@+8
  00199	88 45 f0	 mov	 BYTE PTR _classname$225696[ebp+108], al
  0019c	33 c0		 xor	 eax, eax
  0019e	89 45 f1	 mov	 DWORD PTR _classname$225696[ebp+109], eax
  001a1	89 45 f5	 mov	 DWORD PTR _classname$225696[ebp+113], eax
  001a4	66 89 45 f9	 mov	 WORD PTR _classname$225696[ebp+117], ax
  001a8	88 45 fb	 mov	 BYTE PTR _classname$225696[ebp+119], al
  001ab	88 55 dc	 mov	 BYTE PTR _classname$225696[ebp+88], dl
  001ae	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_08IGEBPGCA@SUMMONER?$AA@+4

  001b4	8b c1		 mov	 eax, ecx
  001b6	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  001b9	89 55 ec	 mov	 DWORD PTR _classname$225696[ebp+104], edx
  001bc	8d 54 8d 84	 lea	 edx, DWORD PTR _classname$225696[ebp+ecx*4]
  001c0	52		 push	 edx
  001c1	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_08MCKKHFLN@Class?3?$CFs?$AA@
  001cc	50		 push	 eax
  001cd	c7 45 ac 45 4c
	46 00		 mov	 DWORD PTR _classname$225696[ebp+40], 4607045 ; 00464c45H
  001d4	ff d3		 call	 ebx

  001d6	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001d8	6a 01		 push	 1
  001da	51		 push	 ecx
  001db	8d 95 84 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  001e1	52		 push	 edx
  001e2	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  001e7	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@CmdAbility:

  001ea	68 00 01 00 00	 push	 256			; 00000100H
  001ef	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  001f5	6a 00		 push	 0
  001f7	50		 push	 eax
  001f8	e8 00 00 00 00	 call	 _memset

  001fd	0f b7 96 18 01
	00 00		 movzx	 edx, WORD PTR [esi+280]
  00204	0f b7 8e 1a 01
	00 00		 movzx	 ecx, WORD PTR [esi+282]
  0020b	0f bf 86 26 01
	00 00		 movsx	 eax, WORD PTR [esi+294]
  00212	03 ca		 add	 ecx, edx
  00214	0f bf 96 24 01
	00 00		 movsx	 edx, WORD PTR [esi+292]
  0021b	51		 push	 ecx
  0021c	0f b7 8e fa 00
	00 00		 movzx	 ecx, WORD PTR [esi+250]
  00223	03 c1		 add	 eax, ecx
  00225	0f bf 8e 22 01
	00 00		 movsx	 ecx, WORD PTR [esi+290]
  0022c	50		 push	 eax
  0022d	0f b7 86 f8 00
	00 00		 movzx	 eax, WORD PTR [esi+248]
  00234	03 d0		 add	 edx, eax
  00236	0f bf 86 20 01
	00 00		 movsx	 eax, WORD PTR [esi+288]
  0023d	52		 push	 edx
  0023e	0f b7 96 f6 00
	00 00		 movzx	 edx, WORD PTR [esi+246]
  00245	03 ca		 add	 ecx, edx
  00247	51		 push	 ecx
  00248	0f b7 8e f4 00
	00 00		 movzx	 ecx, WORD PTR [esi+244]
  0024f	03 c1		 add	 eax, ecx
  00251	50		 push	 eax
  00252	8d 95 84 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@DPIKBIMD@Strength?$FL?$CFd?$FN?5Dexterity?$FL?$CFd?$FN?5Vital@
  0025d	52		 push	 edx
  0025e	ff d3		 call	 ebx

  00260	8b 07		 mov	 eax, DWORD PTR [edi]
  00262	6a 01		 push	 1
  00264	50		 push	 eax
  00265	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0026b	51		 push	 ecx
  0026c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00271	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00274	83 c4 34	 add	 esp, 52			; 00000034H
  00277	5e		 pop	 esi
  00278	5f		 pop	 edi
  00279	33 cd		 xor	 ecx, ebp
  0027b	5b		 pop	 ebx
  0027c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00281	8b e5		 mov	 esp, ebp
  00283	5d		 pop	 ebp
  00284	c2 08 00	 ret	 8
?CmdAbility@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ENDP	; CGMMng::CmdAbility
_TEXT	ENDS
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	??_C@_08DHLCFGJM@?$CILeader?$CJ?$AA@		; `string'
PUBLIC	??_C@_0N@KGMENDNJ@Result?9Party?$AA@		; `string'
PUBLIC	??_C@_0BF@DHNHOHCA@Result?9Invalid?5Point?$AA@	; `string'
PUBLIC	??_C@_0BH@OLNBDHGL@Result?9Party?5Not?5Found?$AA@ ; `string'
PUBLIC	_lpObj$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?CmdParty@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z	; CGMMng::CmdParty
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DHLCFGJM@?$CILeader?$CJ?$AA@
CONST	SEGMENT
??_C@_08DHLCFGJM@?$CILeader?$CJ?$AA@ DB '(Leader)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGMENDNJ@Result?9Party?$AA@
CONST	SEGMENT
??_C@_0N@KGMENDNJ@Result?9Party?$AA@ DB 'Result-Party', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DHNHOHCA@Result?9Invalid?5Point?$AA@
CONST	SEGMENT
??_C@_0BF@DHNHOHCA@Result?9Invalid?5Point?$AA@ DB 'Result-Invalid Point', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OLNBDHGL@Result?9Party?5Not?5Found?$AA@
CONST	SEGMENT
??_C@_0BH@OLNBDHGL@Result?9Party?5Not?5Found?$AA@ DB 'Result-Party Not Fo'
	DB	'und', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdParty@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z
_TEXT	SEGMENT
_lpObj$GSCopy$ = -272					; size = 4
_lpParty$ = -268					; size = 4
_PartyCount$ = -264					; size = 4
_szText$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_szName$ = 12						; size = 4
?CmdParty@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z PROC	; CGMMng::CmdParty, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _szName$[ebp]
  00018	57		 push	 edi
  00019	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]

  0001c	68 00 01 00 00	 push	 256			; 00000100H
  00021	33 db		 xor	 ebx, ebx
  00023	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00029	53		 push	 ebx
  0002a	50		 push	 eax

  0002b	89 bd f0 fe ff
	ff		 mov	 DWORD PTR _lpObj$GSCopy$[ebp], edi
  00031	e8 00 00 00 00	 call	 _memset
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	3b f3		 cmp	 esi, ebx
  0003b	75 0f		 jne	 SHORT $LN12@CmdParty

  0003d	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0003f	6a 01		 push	 1
  00041	51		 push	 ecx
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@

  00047	e9 5b 01 00 00	 jmp	 $LN23@CmdParty
$LN12@CmdParty:

  0004c	56		 push	 esi
  0004d	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  00052	83 c4 04	 add	 esp, 4

  00055	6a 01		 push	 1
  00057	3b c3		 cmp	 eax, ebx
  00059	7f 0d		 jg	 SHORT $LN11@CmdParty
  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	52		 push	 edx
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GPJEKBCF@Result?9User?5Not?5Found?$AA@

  00063	e9 3f 01 00 00	 jmp	 $LN23@CmdParty
$LN11@CmdParty:

  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006e	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00074	8b 84 08 2c 04
	00 00		 mov	 eax, DWORD PTR [eax+ecx+1068]
  0007b	3b c3		 cmp	 eax, ebx
  0007d	7d 0d		 jge	 SHORT $LN10@CmdParty

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OLNBDHGL@Result?9Party?5Not?5Found?$AA@

  00087	e9 1b 01 00 00	 jmp	 $LN23@CmdParty
$LN10@CmdParty:

  0008c	6b c0 68	 imul	 eax, 104		; 00000068H
  0008f	05 08 00 00 00	 add	 eax, OFFSET ?gParty@@3VPartyClass@@A+8
  00094	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _lpParty$[ebp], eax

  0009a	75 0d		 jne	 SHORT $LN9@CmdParty

  0009c	8b 07		 mov	 eax, DWORD PTR [edi]
  0009e	50		 push	 eax
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DHNHOHCA@Result?9Invalid?5Point?$AA@

  000a4	e9 fe 00 00 00	 jmp	 $LN23@CmdParty
$LN9@CmdParty:

  000a9	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000ab	51		 push	 ecx
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KGMENDNJ@Result?9Party?$AA@
  000b1	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH

  000b9	89 9d f8 fe ff
	ff		 mov	 DWORD PTR _PartyCount$[ebp], ebx
  000bf	90		 npad	 1
$LL22@CmdParty:

  000c0	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _lpParty$[ebp]
  000c6	8b 44 9a 04	 mov	 eax, DWORD PTR [edx+ebx*4+4]

  000ca	85 c0		 test	 eax, eax
  000cc	0f 88 bf 00 00
	00		 js	 $LN7@CmdParty

  000d2	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000d8	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  000de	0f 84 ad 00 00
	00		 je	 $LN7@CmdParty

  000e4	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  000e8	0f 8c a3 00 00
	00		 jl	 $LN7@CmdParty

  000ee	ff 85 f8 fe ff
	ff		 inc	 DWORD PTR _PartyCount$[ebp]

  000f4	83 c0 77	 add	 eax, 119		; 00000077H
  000f7	8b c8		 mov	 ecx, eax
  000f9	8d a4 24 00 00
	00 00		 npad	 7
$LL17@CmdParty:
  00100	8a 10		 mov	 dl, BYTE PTR [eax]
  00102	40		 inc	 eax
  00103	84 d2		 test	 dl, dl
  00105	75 f9		 jne	 SHORT $LL17@CmdParty
  00107	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szText$[ebp]
  0010d	2b c1		 sub	 eax, ecx
  0010f	8b f1		 mov	 esi, ecx
  00111	4f		 dec	 edi
$LL18@CmdParty:
  00112	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00115	47		 inc	 edi
  00116	84 c9		 test	 cl, cl
  00118	75 f8		 jne	 SHORT $LL18@CmdParty
  0011a	8b c8		 mov	 ecx, eax
  0011c	c1 e9 02	 shr	 ecx, 2
  0011f	f3 a5		 rep movsd
  00121	8b c8		 mov	 ecx, eax
  00123	83 e1 03	 and	 ecx, 3
  00126	f3 a4		 rep movsb

  00128	85 db		 test	 ebx, ebx
  0012a	75 29		 jne	 SHORT $LN2@CmdParty

  0012c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00132	48		 dec	 eax
$LL19@CmdParty:
  00133	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00136	40		 inc	 eax
  00137	84 c9		 test	 cl, cl
  00139	75 f8		 jne	 SHORT $LL19@CmdParty
  0013b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08DHLCFGJM@?$CILeader?$CJ?$AA@
  00141	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_08DHLCFGJM@?$CILeader?$CJ?$AA@+4
  00147	89 08		 mov	 DWORD PTR [eax], ecx
  00149	8a 0d 08 00 00
	00		 mov	 cl, BYTE PTR ??_C@_08DHLCFGJM@?$CILeader?$CJ?$AA@+8
  0014f	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00152	88 48 08	 mov	 BYTE PTR [eax+8], cl
$LN2@CmdParty:

  00155	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _PartyCount$[ebp]
  0015b	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _lpParty$[ebp]
  00161	39 10		 cmp	 DWORD PTR [eax], edx
  00163	7e 26		 jle	 SHORT $LN21@CmdParty

  00165	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0016b	48		 dec	 eax
  0016c	8d 64 24 00	 npad	 4
$LL20@CmdParty:
  00170	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00173	40		 inc	 eax
  00174	84 c9		 test	 cl, cl
  00176	75 f8		 jne	 SHORT $LL20@CmdParty
  00178	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ??_C@_02KEGNLNML@?0?5?$AA@
  0017f	8a 15 02 00 00
	00		 mov	 dl, BYTE PTR ??_C@_02KEGNLNML@?0?5?$AA@+2
  00185	66 89 08	 mov	 WORD PTR [eax], cx
  00188	88 50 02	 mov	 BYTE PTR [eax+2], dl
$LN21@CmdParty:
  0018b	8b bd f0 fe ff
	ff		 mov	 edi, DWORD PTR _lpObj$GSCopy$[ebp]
$LN7@CmdParty:

  00191	43		 inc	 ebx
  00192	83 fb 05	 cmp	 ebx, 5
  00195	0f 8c 25 ff ff
	ff		 jl	 $LL22@CmdParty

  0019b	8b 07		 mov	 eax, DWORD PTR [edi]
  0019d	6a 01		 push	 1
  0019f	50		 push	 eax
  001a0	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  001a6	51		 push	 ecx
$LN23@CmdParty:
  001a7	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  001ac	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001af	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	33 cd		 xor	 ecx, ebp
  001b6	5b		 pop	 ebx
  001b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bc	8b e5		 mov	 esp, ebp
  001be	5d		 pop	 ebp
  001bf	c2 08 00	 ret	 8
?CmdParty@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ENDP	; CGMMng::CmdParty
_TEXT	ENDS
PUBLIC	??_C@_0BI@GPFMCLGD@Result?9ClearMonster?$CI?$CFd?$CJ?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CmdClearMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::CmdClearMonster
EXTRN	?GCDiePlayerSend@@YAXPAUOBJECTSTRUCT@@HEH@Z:PROC ; GCDiePlayerSend
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
;	COMDAT ??_C@_0BI@GPFMCLGD@Result?9ClearMonster?$CI?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BI@GPFMCLGD@Result?9ClearMonster?$CI?$CFd?$CJ?$AA@ DB 'Result-Clea'
	DB	'rMonster(%d)', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdClearMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_MapNumber$ = -268					; size = 4
_DeletedMonCount$ = -264				; size = 4
_szText$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_Dis$ = 12						; size = 4
?CmdClearMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC	; CGMMng::CmdClearMonster, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]

  00018	68 00 01 00 00	 push	 256			; 00000100H
  0001d	33 db		 xor	 ebx, ebx
  0001f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00025	53		 push	 ebx
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0002f	39 5d 0c	 cmp	 DWORD PTR _Dis$[ebp], ebx
  00032	7f 24		 jg	 SHORT $LN8@CmdClearMo

  00034	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00036	6a 01		 push	 1
  00038	51		 push	 ecx
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@
  0003e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	5f		 pop	 edi
  00047	5b		 pop	 ebx

  00048	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004b	33 cd		 xor	 ecx, ebp
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
$LN8@CmdClearMo:

  00058	0f b6 97 49 01
	00 00		 movzx	 edx, BYTE PTR [edi+329]
  0005f	89 95 f4 fe ff
	ff		 mov	 DWORD PTR _MapNumber$[ebp], edx

  00065	89 9d f8 fe ff
	ff		 mov	 DWORD PTR _DeletedMonCount$[ebp], ebx
  0006b	56		 push	 esi
  0006c	8d 64 24 00	 npad	 4
$LL14@CmdClearMo:

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  00075	0f b6 8c 03 49
	01 00 00	 movzx	 ecx, BYTE PTR [ebx+eax+329]
  0007d	8d 34 03	 lea	 esi, DWORD PTR [ebx+eax]
  00080	3b 8d f4 fe ff
	ff		 cmp	 ecx, DWORD PTR _MapNumber$[ebp]
  00086	0f 85 8a 00 00
	00		 jne	 $LN6@CmdClearMo
  0008c	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00090	0f 85 80 00 00
	00		 jne	 $LN6@CmdClearMo
  00096	b8 02 00 00 00	 mov	 eax, 2
  0009b	66 39 46 68	 cmp	 WORD PTR [esi+104], ax
  0009f	75 75		 jne	 SHORT $LN6@CmdClearMo
  000a1	80 7e 6a 00	 cmp	 BYTE PTR [esi+106], 0
  000a5	74 6f		 je	 SHORT $LN6@CmdClearMo
  000a7	39 86 20 02 00
	00		 cmp	 DWORD PTR [esi+544], eax
  000ad	75 67		 jne	 SHORT $LN6@CmdClearMo

  000af	56		 push	 esi
  000b0	57		 push	 edi
  000b1	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  000b6	83 c4 08	 add	 esp, 8
  000b9	3b 45 0c	 cmp	 eax, DWORD PTR _Dis$[ebp]
  000bc	7f 58		 jg	 SHORT $LN6@CmdClearMo

  000be	80 be b0 21 00
	00 01		 cmp	 BYTE PTR [esi+8624], 1
  000c5	75 0d		 jne	 SHORT $LN2@CmdClearMo

  000c7	8b 16		 mov	 edx, DWORD PTR [esi]
  000c9	52		 push	 edx
  000ca	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  000cf	83 c4 04	 add	 esp, 4

  000d2	eb 3c		 jmp	 SHORT $LN1@CmdClearMo
$LN2@CmdClearMo:

  000d4	c6 46 6a 00	 mov	 BYTE PTR [esi+106], 0

  000d8	c7 86 20 02 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+544], 4

  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

  000e8	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ea	89 86 a8 03 00
	00		 mov	 DWORD PTR [esi+936], eax
  000f0	c6 86 a2 03 00
	00 01		 mov	 BYTE PTR [esi+930], 1
  000f7	c7 86 84 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+388], 0
  00101	8b 07		 mov	 eax, DWORD PTR [edi]
  00103	50		 push	 eax
  00104	6a 00		 push	 0
  00106	51		 push	 ecx
  00107	56		 push	 esi
  00108	e8 00 00 00 00	 call	 ?GCDiePlayerSend@@YAXPAUOBJECTSTRUCT@@HEH@Z ; GCDiePlayerSend
  0010d	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@CmdClearMo:

  00110	ff 85 f8 fe ff
	ff		 inc	 DWORD PTR _DeletedMonCount$[ebp]
$LN6@CmdClearMo:

  00116	81 c3 50 2b 00
	00		 add	 ebx, 11088		; 00002b50H
  0011c	81 fb 80 76 97
	08		 cmp	 ebx, 144144000		; 08977680H
  00122	0f 8c 48 ff ff
	ff		 jl	 $LL14@CmdClearMo

  00128	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _DeletedMonCount$[ebp]
  0012e	52		 push	 edx
  0012f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GPFMCLGD@Result?9ClearMonster?$CI?$CFd?$CJ?$AA@
  0013a	50		 push	 eax
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  00141	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00143	6a 01		 push	 1
  00145	51		 push	 ecx
  00146	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  0014c	52		 push	 edx
  0014d	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00152	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00155	83 c4 18	 add	 esp, 24			; 00000018H
  00158	5e		 pop	 esi
  00159	5f		 pop	 edi
  0015a	33 cd		 xor	 ecx, ebp
  0015c	5b		 pop	 ebx
  0015d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00162	8b e5		 mov	 esp, ebp
  00164	5d		 pop	 ebp
  00165	c2 08 00	 ret	 8
?CmdClearMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP	; CGMMng::CmdClearMonster
_TEXT	ENDS
PUBLIC	??_C@_0BF@KOFDDOJB@Result?9ClearItem?$CI?$CFd?$CJ?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CmdClearItem@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z	; CGMMng::CmdClearItem
EXTRN	?GetVisibleItemCount@MapClass@@QAEHPAUOBJECTSTRUCT@@H@Z:PROC ; MapClass::GetVisibleItemCount
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
;	COMDAT ??_C@_0BF@KOFDDOJB@Result?9ClearItem?$CI?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@KOFDDOJB@Result?9ClearItem?$CI?$CFd?$CJ?$AA@ DB 'Result-ClearIt'
	DB	'em(%d)', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdClearItem@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_szText$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_Dis$ = 12						; size = 4
?CmdClearItem@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC	; CGMMng::CmdClearItem, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

  00017	68 00 01 00 00	 push	 256			; 00000100H
  0001c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00022	6a 00		 push	 0
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _memset

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _Dis$[ebp]
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	85 c0		 test	 eax, eax
  00032	7f 23		 jg	 SHORT $LN1@CmdClearIt

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00036	6a 01		 push	 1
  00038	51		 push	 ecx
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@
  0003e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	5e		 pop	 esi

  00047	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004a	33 cd		 xor	 ecx, ebp
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
$LN1@CmdClearIt:

  00057	0f b6 8e 49 01
	00 00		 movzx	 ecx, BYTE PTR [esi+329]
  0005e	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H

  00064	50		 push	 eax
  00065	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  0006b	56		 push	 esi
  0006c	e8 00 00 00 00	 call	 ?GetVisibleItemCount@MapClass@@QAEHPAUOBJECTSTRUCT@@H@Z ; MapClass::GetVisibleItemCount

  00071	50		 push	 eax
  00072	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KOFDDOJB@Result?9ClearItem?$CI?$CFd?$CJ?$AA@
  0007d	52		 push	 edx
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  00084	8b 06		 mov	 eax, DWORD PTR [esi]
  00086	6a 01		 push	 1
  00088	50		 push	 eax
  00089	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00095	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00098	83 c4 18	 add	 esp, 24			; 00000018H
  0009b	33 cd		 xor	 ecx, ebp
  0009d	5e		 pop	 esi
  0009e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 08 00	 ret	 8
?CmdClearItem@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP	; CGMMng::CmdClearItem
_TEXT	ENDS
PUBLIC	??_C@_0BG@EBKONDEM@Result?9ClearInven?$CI?$CFd?$CJ?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CmdClearInven@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z	; CGMMng::CmdClearInven
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?gObjInventoryDeleteItem@@YAEHH@Z:PROC		; gObjInventoryDeleteItem
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
;	COMDAT ??_C@_0BG@EBKONDEM@Result?9ClearInven?$CI?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BG@EBKONDEM@Result?9ClearInven?$CI?$CFd?$CJ?$AA@ DB 'Result-ClearI'
	DB	'nven(%d)', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdClearInven@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_ItemCount$ = -264					; size = 4
_szText$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?CmdClearInven@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; CGMMng::CmdClearInven, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00017	56		 push	 esi
  00018	57		 push	 edi

  00019	68 00 01 00 00	 push	 256			; 00000100H
  0001e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00024	6a 00		 push	 0
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0002f	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _ItemCount$[ebp], 0

  00039	bf 0c 00 00 00	 mov	 edi, 12			; 0000000cH

  0003e	be f0 09 00 00	 mov	 esi, 2544		; 000009f0H
$LL4@CmdClearIn:
  00043	8b 8b 24 0e 00
	00		 mov	 ecx, DWORD PTR [ebx+3620]
  00049	03 ce		 add	 ecx, esi
  0004b	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00050	83 f8 01	 cmp	 eax, 1
  00053	75 12		 jne	 SHORT $LN3@CmdClearIn

  00055	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00057	57		 push	 edi
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem
  0005e	83 c4 08	 add	 esp, 8

  00061	ff 85 f8 fe ff
	ff		 inc	 DWORD PTR _ItemCount$[ebp]
$LN3@CmdClearIn:

  00067	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  0006d	47		 inc	 edi
  0006e	81 fe f0 a8 00
	00		 cmp	 esi, 43248		; 0000a8f0H
  00074	7c cd		 jl	 SHORT $LL4@CmdClearIn

  00076	8b 13		 mov	 edx, DWORD PTR [ebx]
  00078	52		 push	 edx
  00079	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend

  0007e	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _ItemCount$[ebp]
  00084	50		 push	 eax
  00085	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EBKONDEM@Result?9ClearInven?$CI?$CFd?$CJ?$AA@
  00090	51		 push	 ecx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  00097	8b 13		 mov	 edx, DWORD PTR [ebx]
  00099	6a 01		 push	 1
  0009b	52		 push	 edx
  0009c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ab	83 c4 1c	 add	 esp, 28			; 0000001cH
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	33 cd		 xor	 ecx, ebp
  000b2	5b		 pop	 ebx
  000b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 04 00	 ret	 4
?CmdClearInven@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; CGMMng::CmdClearInven
_TEXT	ENDS
PUBLIC	??_C@_0BE@CJMFLBBF@Result?9Invalid?5Area?$AA@	; `string'
PUBLIC	??_C@_0BL@FBKFECEH@Result?9SummonCharacter?$CI?$CFs?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@FOCDIHKG@Result?9Disconnect?5User?$AA@ ; `string'
PUBLIC	_szName$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?CmdSummonChar@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ; CGMMng::CmdSummonChar
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
EXTRN	?GetAttr@MapClass@@QAEEHH@Z:PROC		; MapClass::GetAttr
;	COMDAT ??_C@_0BE@CJMFLBBF@Result?9Invalid?5Area?$AA@
CONST	SEGMENT
??_C@_0BE@CJMFLBBF@Result?9Invalid?5Area?$AA@ DB 'Result-Invalid Area', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FBKFECEH@Result?9SummonCharacter?$CI?$CFs?$CJ?$AA@
CONST	SEGMENT
??_C@_0BL@FBKFECEH@Result?9SummonCharacter?$CI?$CFs?$CJ?$AA@ DB 'Result-S'
	DB	'ummonCharacter(%s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FOCDIHKG@Result?9Disconnect?5User?$AA@
CONST	SEGMENT
??_C@_0BH@FOCDIHKG@Result?9Disconnect?5User?$AA@ DB 'Result-Disconnect Us'
	DB	'er', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdSummonChar@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z
_TEXT	SEGMENT
_szName$GSCopy$ = -272					; size = 4
_tIndex$ = -268						; size = 4
_MapNum$ = -264						; size = 4
_szText$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_szName$ = 12						; size = 4
?CmdSummonChar@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z PROC	; CGMMng::CmdSummonChar, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _szName$[ebp]

  0001b	68 00 01 00 00	 push	 256			; 00000100H
  00020	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00026	6a 00		 push	 0
  00028	50		 push	 eax

  00029	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR _szName$GSCopy$[ebp], esi
  0002f	e8 00 00 00 00	 call	 _memset
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
  00037	85 f6		 test	 esi, esi
  00039	75 24		 jne	 SHORT $LN5@CmdSummonC

  0003b	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003d	6a 01		 push	 1
  0003f	51		 push	 ecx
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@
  00045	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00052	33 cd		 xor	 ecx, ebp
  00054	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN5@CmdSummonC:

  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  00065	83 c4 04	 add	 esp, 4
  00068	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _tIndex$[ebp], eax

  0006e	85 c0		 test	 eax, eax
  00070	7f 24		 jg	 SHORT $LN4@CmdSummonC

  00072	8b 13		 mov	 edx, DWORD PTR [ebx]
  00074	6a 01		 push	 1
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GPJEKBCF@Result?9User?5Not?5Found?$AA@
  0007c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx

  00086	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00089	33 cd		 xor	 ecx, ebp
  0008b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
$LN4@CmdSummonC:

  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009c	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000a2	83 7c 08 04 03	 cmp	 DWORD PTR [eax+ecx+4], 3
  000a7	74 24		 je	 SHORT $LN3@CmdSummonC

  000a9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000ab	6a 01		 push	 1
  000ad	52		 push	 edx
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FOCDIHKG@Result?9Disconnect?5User?$AA@
  000b3	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c0	33 cd		 xor	 ecx, ebp
  000c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 08 00	 ret	 8
$LN3@CmdSummonC:

  000cd	0f b6 8b 49 01
	00 00		 movzx	 ecx, BYTE PTR [ebx+329]

  000d4	0f bf b3 44 01
	00 00		 movsx	 esi, WORD PTR [ebx+324]
  000db	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _MapNum$[ebp], ecx

  000e1	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  000e7	57		 push	 edi
  000e8	0f bf bb 46 01
	00 00		 movsx	 edi, WORD PTR [ebx+326]
  000ef	47		 inc	 edi
  000f0	57		 push	 edi
  000f1	46		 inc	 esi
  000f2	56		 push	 esi
  000f3	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  000f9	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr

  000fe	a8 0c		 test	 al, 12			; 0000000cH
  00100	75 55		 jne	 SHORT $LN1@CmdSummonC

  00102	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _szName$GSCopy$[ebp]
  00108	50		 push	 eax
  00109	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0010f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FBKFECEH@Result?9SummonCharacter?$CI?$CFs?$CJ?$AA@
  00114	51		 push	 ecx
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  0011b	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011d	6a 01		 push	 1
  0011f	52		 push	 edx
  00120	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  0012c	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _MapNum$[ebp]
  00132	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _tIndex$[ebp]
  00138	57		 push	 edi
  00139	56		 push	 esi
  0013a	51		 push	 ecx
  0013b	52		 push	 edx
  0013c	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  00141	83 c4 28	 add	 esp, 40			; 00000028H
  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx

  00147	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014a	33 cd		 xor	 ecx, ebp
  0014c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00151	8b e5		 mov	 esp, ebp
  00153	5d		 pop	 ebp
  00154	c2 08 00	 ret	 8
$LN1@CmdSummonC:

  00157	8b 03		 mov	 eax, DWORD PTR [ebx]
  00159	6a 01		 push	 1
  0015b	50		 push	 eax
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CJMFLBBF@Result?9Invalid?5Area?$AA@
  00161	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00166	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00169	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016c	5f		 pop	 edi
  0016d	5e		 pop	 esi
  0016e	33 cd		 xor	 ecx, ebp
  00170	5b		 pop	 ebx
  00171	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c2 08 00	 ret	 8
?CmdSummonChar@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ENDP	; CGMMng::CmdSummonChar
_TEXT	ENDS
PUBLIC	?GetType@CGMMng@@QAEHG@Z			; CGMMng::GetType
; Function compile flags: /Ogtp
;	COMDAT ?GetType@CGMMng@@QAEHG@Z
_TEXT	SEGMENT
_wClass$ = 8						; size = 2
?GetType@CGMMng@@QAEHG@Z PROC				; CGMMng::GetType, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00008	66 8b 55 08	 mov	 dx, WORD PTR _wClass$[ebp]
  0000c	56		 push	 esi
  0000d	be ff 00 00 00	 mov	 esi, 255		; 000000ffH

  00012	33 c9		 xor	 ecx, ecx
$LL5@GetType:

  00014	85 c0		 test	 eax, eax
  00016	74 09		 je	 SHORT $LN4@GetType

  00018	66 39 90 b8 00
	00 00		 cmp	 WORD PTR [eax+184], dx
  0001f	74 16		 je	 SHORT $LN9@GetType
$LN4@GetType:

  00021	41		 inc	 ecx
  00022	05 50 2b 00 00	 add	 eax, 11088		; 00002b50H
  00027	81 f9 c8 32 00
	00		 cmp	 ecx, 13000		; 000032c8H
  0002d	7c e5		 jl	 SHORT $LL5@GetType

  0002f	0f b7 c6	 movzx	 eax, si
  00032	5e		 pop	 esi

  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
$LN9@GetType:

  00037	0f b7 40 68	 movzx	 eax, WORD PTR [eax+104]
  0003b	5e		 pop	 esi

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?GetType@CGMMng@@QAEHG@Z ENDP				; CGMMng::GetType
_TEXT	ENDS
PUBLIC	??_C@_0CB@CAEJPCLD@Ware?5number?3?5?$CFd?5?$HM?5Min?3?50?$HM?5Max?3?54@ ; `string'
PUBLIC	??_C@_0BA@BLDNAHAD@Ware?5number?3?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0CP@KPNBGJHF@?$FL7?$FN?5Close?5NPC?5or?5Warehouse?5befor@ ; `string'
PUBLIC	??_C@_0CP@NABIPCOG@?$FL6?$FN?5Close?5NPC?5or?5Warehouse?5befor@ ; `string'
PUBLIC	??_C@_0CI@EFGNDPHK@?$FL4?$FN?5Close?5Warehouse?5befor?5change@ ; `string'
PUBLIC	??_C@_0CP@ILIGABHI@?$FL3?$FN?5Close?5NPC?5or?5Warehouse?5befor@ ; `string'
PUBLIC	??_C@_0CP@PEEPJKOL@?$FL2?$FN?5Close?5NPC?5or?5Warehouse?5befor@ ; `string'
PUBLIC	??_C@_0CP@HEBFDGFO@?$FL1?$FN?5Close?5NPC?5or?5Warehouse?5befor@ ; `string'
PUBLIC	??_C@_0CP@LNMKNMN@?$FL0?$FN?5Close?5NPC?5or?5Warehouse?5befor@ ; `string'
PUBLIC	??_C@_0DH@HDJMOPFN@You?5can?5do?5ware?5only?5in?5Capital?5@ ; `string'
PUBLIC	??_C@_0CB@MIHIAHOO@You?5need?5minimum?5premium?5level?51@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CmdWare@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z	; CGMMng::CmdWare
EXTRN	?SendToUser@TNotice@@QAAXHPADZZ:PROC		; TNotice::SendToUser
EXTRN	?GCCloseMsgSend@@YAXHE@Z:PROC			; GCCloseMsgSend
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	??0TNotice@@QAE@E@Z:PROC			; TNotice::TNotice
;	COMDAT ??_C@_0CB@CAEJPCLD@Ware?5number?3?5?$CFd?5?$HM?5Min?3?50?$HM?5Max?3?54@
CONST	SEGMENT
??_C@_0CB@CAEJPCLD@Ware?5number?3?5?$CFd?5?$HM?5Min?3?50?$HM?5Max?3?54@ DB 'W'
	DB	'are number: %d | Min: 0| Max: 4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BLDNAHAD@Ware?5number?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@BLDNAHAD@Ware?5number?3?5?$CFd?$AA@ DB 'Ware number: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KPNBGJHF@?$FL7?$FN?5Close?5NPC?5or?5Warehouse?5befor@
CONST	SEGMENT
??_C@_0CP@KPNBGJHF@?$FL7?$FN?5Close?5NPC?5or?5Warehouse?5befor@ DB '[7] C'
	DB	'lose NPC or Warehouse befor change number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NABIPCOG@?$FL6?$FN?5Close?5NPC?5or?5Warehouse?5befor@
CONST	SEGMENT
??_C@_0CP@NABIPCOG@?$FL6?$FN?5Close?5NPC?5or?5Warehouse?5befor@ DB '[6] C'
	DB	'lose NPC or Warehouse befor change number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@EFGNDPHK@?$FL4?$FN?5Close?5Warehouse?5befor?5change@
CONST	SEGMENT
??_C@_0CI@EFGNDPHK@?$FL4?$FN?5Close?5Warehouse?5befor?5change@ DB '[4] Cl'
	DB	'ose Warehouse befor change number', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@ILIGABHI@?$FL3?$FN?5Close?5NPC?5or?5Warehouse?5befor@
CONST	SEGMENT
??_C@_0CP@ILIGABHI@?$FL3?$FN?5Close?5NPC?5or?5Warehouse?5befor@ DB '[3] C'
	DB	'lose NPC or Warehouse befor change number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PEEPJKOL@?$FL2?$FN?5Close?5NPC?5or?5Warehouse?5befor@
CONST	SEGMENT
??_C@_0CP@PEEPJKOL@?$FL2?$FN?5Close?5NPC?5or?5Warehouse?5befor@ DB '[2] C'
	DB	'lose NPC or Warehouse befor change number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HEBFDGFO@?$FL1?$FN?5Close?5NPC?5or?5Warehouse?5befor@
CONST	SEGMENT
??_C@_0CP@HEBFDGFO@?$FL1?$FN?5Close?5NPC?5or?5Warehouse?5befor@ DB '[1] C'
	DB	'lose NPC or Warehouse befor change number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LNMKNMN@?$FL0?$FN?5Close?5NPC?5or?5Warehouse?5befor@
CONST	SEGMENT
??_C@_0CP@LNMKNMN@?$FL0?$FN?5Close?5NPC?5or?5Warehouse?5befor@ DB '[0] Cl'
	DB	'ose NPC or Warehouse befor change number', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@HDJMOPFN@You?5can?5do?5ware?5only?5in?5Capital?5@
CONST	SEGMENT
??_C@_0DH@HDJMOPFN@You?5can?5do?5ware?5only?5in?5Capital?5@ DB 'You can d'
	DB	'o ware only in Capital Devias town safe zone!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MIHIAHOO@You?5need?5minimum?5premium?5level?51@
CONST	SEGMENT
??_C@_0CB@MIHIAHOO@You?5need?5minimum?5premium?5level?51@ DB 'You need mi'
	DB	'nimum premium level 1', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdWare@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_number$ = 12						; size = 4
?CmdWare@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z PROC		; CGMMng::CmdWare, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

  00017	6a 01		 push	 1
  00019	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  00024	8b 06		 mov	 eax, DWORD PTR [esi]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0002c	83 c4 04	 add	 esp, 4
  0002f	85 c0		 test	 eax, eax
  00031	0f 84 1a 03 00
	00		 je	 $LN26@CmdWare

  00037	57		 push	 edi
  00038	6a 32		 push	 50			; 00000032H
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00044	8b 7d 0c	 mov	 edi, DWORD PTR _number$[ebp]
  00047	84 c0		 test	 al, al
  00049	0f 84 9a 00 00
	00		 je	 $LN16@CmdWare

  0004f	83 ff 02	 cmp	 edi, 2
  00052	75 31		 jne	 SHORT $LN23@CmdWare

  00054	83 be bc 22 00
	00 01		 cmp	 DWORD PTR [esi+8892], 1
  0005b	0f 8d 88 00 00
	00		 jge	 $LN16@CmdWare

  00061	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00063	6a 01		 push	 1
  00065	51		 push	 ecx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@MIHIAHOO@You?5need?5minimum?5premium?5level?51@
  0006b	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi

  00075	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00078	33 cd		 xor	 ecx, ebp
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
$LN23@CmdWare:

  00085	83 ff 03	 cmp	 edi, 3
  00088	75 2d		 jne	 SHORT $LN20@CmdWare

  0008a	83 be bc 22 00
	00 02		 cmp	 DWORD PTR [esi+8892], 2
  00091	7d 56		 jge	 SHORT $LN16@CmdWare

  00093	8b 16		 mov	 edx, DWORD PTR [esi]
  00095	6a 01		 push	 1
  00097	52		 push	 edx
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@MIHIAHOO@You?5need?5minimum?5premium?5level?51@
  0009d	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi

  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
$LN20@CmdWare:

  000b7	83 ff 04	 cmp	 edi, 4
  000ba	75 2d		 jne	 SHORT $LN16@CmdWare

  000bc	83 be bc 22 00
	00 03		 cmp	 DWORD PTR [esi+8892], 3
  000c3	7d 24		 jge	 SHORT $LN16@CmdWare

  000c5	8b 06		 mov	 eax, DWORD PTR [esi]
  000c7	6a 01		 push	 1
  000c9	50		 push	 eax
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@MIHIAHOO@You?5need?5minimum?5premium?5level?51@
  000cf	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi

  000d9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000dc	33 cd		 xor	 ecx, ebp
  000de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 08 00	 ret	 8
$LN16@CmdWare:

  000e9	0f bf 8e 46 01
	00 00		 movsx	 ecx, WORD PTR [esi+326]
  000f0	0f bf 96 44 01
	00 00		 movsx	 edx, WORD PTR [esi+324]
  000f7	51		 push	 ecx
  000f8	0f b6 8e 49 01
	00 00		 movzx	 ecx, BYTE PTR [esi+329]
  000ff	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  00105	52		 push	 edx
  00106	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  0010c	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  00111	a8 01		 test	 al, 1
  00113	75 24		 jne	 SHORT $LN15@CmdWare

  00115	8b 06		 mov	 eax, DWORD PTR [esi]
  00117	6a 01		 push	 1
  00119	50		 push	 eax
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@HDJMOPFN@You?5can?5do?5ware?5only?5in?5Capital?5@
  0011f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00124	83 c4 0c	 add	 esp, 12			; 0000000cH
  00127	5f		 pop	 edi
  00128	5e		 pop	 esi

  00129	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	33 cd		 xor	 ecx, ebp
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 08 00	 ret	 8
$LN15@CmdWare:

  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0013f	2b 86 1c 04 00
	00		 sub	 eax, DWORD PTR [esi+1052]
  00145	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  0014a	73 2c		 jae	 SHORT $LN14@CmdWare

  0014c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014e	6a 01		 push	 1
  00150	51		 push	 ecx
  00151	68 6d 04 00 00	 push	 1133			; 0000046dH
  00156	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0015b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00166	8b 16		 mov	 edx, DWORD PTR [esi]
  00168	68 ff 00 00 00	 push	 255			; 000000ffH
  0016d	52		 push	 edx
  0016e	e8 00 00 00 00	 call	 ?GCCloseMsgSend@@YAXHE@Z ; GCCloseMsgSend

  00173	e9 d5 01 00 00	 jmp	 $LN29@CmdWare
$LN14@CmdWare:

  00178	80 7e 0a 00	 cmp	 BYTE PTR [esi+10], 0
  0017c	7c 29		 jl	 SHORT $LN13@CmdWare

  0017e	8b 06		 mov	 eax, DWORD PTR [esi]
  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LNMKNMN@?$FL0?$FN?5Close?5NPC?5or?5Warehouse?5befor@
  00185	50		 push	 eax
  00186	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  0018c	51		 push	 ecx
  0018d	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00192	83 c4 0c	 add	 esp, 12			; 0000000cH
  00195	5f		 pop	 edi
  00196	5e		 pop	 esi

  00197	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019a	33 cd		 xor	 ecx, ebp
  0019c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a1	8b e5		 mov	 esp, ebp
  001a3	5d		 pop	 ebp
  001a4	c2 08 00	 ret	 8
$LN13@CmdWare:

  001a7	8b 86 1c 0e 00
	00		 mov	 eax, DWORD PTR [esi+3612]
  001ad	8b d0		 mov	 edx, eax
  001af	80 e2 3c	 and	 dl, 60			; 0000003cH
  001b2	80 fa 04	 cmp	 dl, 4
  001b5	75 29		 jne	 SHORT $LN12@CmdWare

  001b7	8b 06		 mov	 eax, DWORD PTR [esi]
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@HEBFDGFO@?$FL1?$FN?5Close?5NPC?5or?5Warehouse?5befor@
  001be	50		 push	 eax
  001bf	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  001c5	51		 push	 ecx
  001c6	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  001cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ce	5f		 pop	 edi
  001cf	5e		 pop	 esi

  001d0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d3	33 cd		 xor	 ecx, ebp
  001d5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001da	8b e5		 mov	 esp, ebp
  001dc	5d		 pop	 ebp
  001dd	c2 08 00	 ret	 8
$LN12@CmdWare:

  001e0	8b c8		 mov	 ecx, eax
  001e2	83 e1 03	 and	 ecx, 3
  001e5	76 29		 jbe	 SHORT $LN11@CmdWare

  001e7	8b 16		 mov	 edx, DWORD PTR [esi]
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PEEPJKOL@?$FL2?$FN?5Close?5NPC?5or?5Warehouse?5befor@
  001ee	52		 push	 edx
  001ef	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  001fb	83 c4 0c	 add	 esp, 12			; 0000000cH
  001fe	5f		 pop	 edi
  001ff	5e		 pop	 esi

  00200	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00203	33 cd		 xor	 ecx, ebp
  00205	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020a	8b e5		 mov	 esp, ebp
  0020c	5d		 pop	 ebp
  0020d	c2 08 00	 ret	 8
$LN11@CmdWare:

  00210	83 f9 01	 cmp	 ecx, 1
  00213	75 29		 jne	 SHORT $LN10@CmdWare

  00215	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00217	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@ILIGABHI@?$FL3?$FN?5Close?5NPC?5or?5Warehouse?5befor@
  0021c	51		 push	 ecx
  0021d	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00229	83 c4 0c	 add	 esp, 12			; 0000000cH
  0022c	5f		 pop	 edi
  0022d	5e		 pop	 esi

  0022e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00231	33 cd		 xor	 ecx, ebp
  00233	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00238	8b e5		 mov	 esp, ebp
  0023a	5d		 pop	 ebp
  0023b	c2 08 00	 ret	 8
$LN10@CmdWare:

  0023e	80 be 1c 11 00
	00 00		 cmp	 BYTE PTR [esi+4380], 0
  00245	74 29		 je	 SHORT $LN9@CmdWare

  00247	8b 06		 mov	 eax, DWORD PTR [esi]
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@EFGNDPHK@?$FL4?$FN?5Close?5Warehouse?5befor?5change@
  0024e	50		 push	 eax
  0024f	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00255	51		 push	 ecx
  00256	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  0025b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0025e	5f		 pop	 edi
  0025f	5e		 pop	 esi

  00260	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00263	33 cd		 xor	 ecx, ebp
  00265	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026a	8b e5		 mov	 esp, ebp
  0026c	5d		 pop	 ebp
  0026d	c2 08 00	 ret	 8
$LN9@CmdWare:

  00270	85 c9		 test	 ecx, ecx
  00272	74 39		 je	 SHORT $LN7@CmdWare
  00274	8b d0		 mov	 edx, eax
  00276	81 e2 c0 ff 00
	00		 and	 edx, 65472		; 0000ffc0H
  0027c	81 fa 80 01 00
	00		 cmp	 edx, 384		; 00000180H
  00282	75 29		 jne	 SHORT $LN7@CmdWare

  00284	8b 06		 mov	 eax, DWORD PTR [esi]
  00286	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NABIPCOG@?$FL6?$FN?5Close?5NPC?5or?5Warehouse?5befor@
  0028b	50		 push	 eax
  0028c	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00292	51		 push	 ecx
  00293	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00298	83 c4 0c	 add	 esp, 12			; 0000000cH
  0029b	5f		 pop	 edi
  0029c	5e		 pop	 esi

  0029d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a0	33 cd		 xor	 ecx, ebp
  002a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a7	8b e5		 mov	 esp, ebp
  002a9	5d		 pop	 ebp
  002aa	c2 08 00	 ret	 8
$LN7@CmdWare:

  002ad	25 c0 ff 00 00	 and	 eax, 65472		; 0000ffc0H
  002b2	3d 80 01 00 00	 cmp	 eax, 384		; 00000180H
  002b7	74 29		 je	 SHORT $LN6@CmdWare

  002b9	8b 16		 mov	 edx, DWORD PTR [esi]
  002bb	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KPNBGJHF@?$FL7?$FN?5Close?5NPC?5or?5Warehouse?5befor@
  002c0	52		 push	 edx
  002c1	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  002cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  002d0	5f		 pop	 edi
  002d1	5e		 pop	 esi

  002d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002d5	33 cd		 xor	 ecx, ebp
  002d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002dc	8b e5		 mov	 esp, ebp
  002de	5d		 pop	 ebp
  002df	c2 08 00	 ret	 8
$LN6@CmdWare:

  002e2	83 ff 04	 cmp	 edi, 4
  002e5	77 4f		 ja	 SHORT $LN3@CmdWare

  002e7	89 be e8 2a 00
	00		 mov	 DWORD PTR [esi+10984], edi

  002ed	7c 0a		 jl	 SHORT $LN2@CmdWare

  002ef	c7 86 e8 2a 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+10984], 4
$LN2@CmdWare:

  002f9	83 be e8 2a 00
	00 00		 cmp	 DWORD PTR [esi+10984], 0
  00300	7f 0a		 jg	 SHORT $LN1@CmdWare

  00302	c7 86 e8 2a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+10984], 0
$LN1@CmdWare:

  0030c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0030e	57		 push	 edi
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BLDNAHAD@Ware?5number?3?5?$CFd?$AA@
  00314	51		 push	 ecx
  00315	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  0031b	52		 push	 edx
  0031c	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00321	83 c4 10	 add	 esp, 16			; 00000010H
  00324	5f		 pop	 edi
  00325	5e		 pop	 esi

  00326	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00329	33 cd		 xor	 ecx, ebp
  0032b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00330	8b e5		 mov	 esp, ebp
  00332	5d		 pop	 ebp
  00333	c2 08 00	 ret	 8
$LN3@CmdWare:

  00336	8b 06		 mov	 eax, DWORD PTR [esi]
  00338	6a 00		 push	 0
  0033a	57		 push	 edi
  0033b	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@CAEJPCLD@Ware?5number?3?5?$CFd?5?$HM?5Min?3?50?$HM?5Max?3?54@
  00340	50		 push	 eax
  00341	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00347	51		 push	 ecx
  00348	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
$LN29@CmdWare:
  0034d	83 c4 14	 add	 esp, 20			; 00000014H
  00350	5f		 pop	 edi
$LN26@CmdWare:

  00351	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00354	33 cd		 xor	 ecx, ebp
  00356	5e		 pop	 esi
  00357	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0035c	8b e5		 mov	 esp, ebp
  0035e	5d		 pop	 ebp
  0035f	c2 08 00	 ret	 8
?CmdWare@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP		; CGMMng::CmdWare
_TEXT	ENDS
PUBLIC	??0CGMCommand@@QAE@XZ				; CGMCommand::CGMCommand
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.h
;	COMDAT ??0CGMCommand@@QAE@XZ
_TEXT	SEGMENT
??0CGMCommand@@QAE@XZ PROC				; CGMCommand::CGMCommand, COMDAT
; _this$ = ecx

; 31   : 	CGMCommand()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 80 b0 36 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+14000], -1

; 32   : 	{
; 33   : 		this->Init();

  0000c	c7 80 90 4c 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+19600], 0

; 34   : 	}

  00016	c3		 ret	 0
??0CGMCommand@@QAE@XZ ENDP				; CGMCommand::CGMCommand
_TEXT	ENDS
PUBLIC	??0CGMMng@@QAE@XZ				; CGMMng::CGMMng
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
;	COMDAT ??0CGMMng@@QAE@XZ
_TEXT	SEGMENT
??0CGMMng@@QAE@XZ PROC					; CGMMng::CGMMng, COMDAT
; _this$ = ecx

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGMMng@@6B@
  00006	c7 81 b4 36 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+14004], -1
  00010	c7 81 94 4c 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+19604], 0

  0001a	e8 00 00 00 00	 call	 ?ManagerInit@CGMMng@@QAEXXZ ; CGMMng::ManagerInit

  0001f	8b c1		 mov	 eax, ecx
  00021	c3		 ret	 0
??0CGMMng@@QAE@XZ ENDP					; CGMMng::CGMMng
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCGMMng@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGMMng@@UAEPAXI@Z PROC				; CGMMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGMMng@@UAE@XZ	; CGMMng::~CGMMng
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCGMMng@@UAEPAXI@Z ENDP				; CGMMng::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BM@HPFGBCLO@Result?9SummonMonster?$CI?$CFs?3?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CEPFBKKD@Result?9Monster?5Not?5Found?$AA@ ; `string'
PUBLIC	??_C@_0BF@KINKJFCO@Result?9Is?5Safetyzone?$AA@	; `string'
PUBLIC	??_C@_0BH@MMJEPHGM@Result?9Too?5Manay?5Count?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CmdSummonMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@PADH@Z ; CGMMng::CmdSummonMonster
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
EXTRN	_rand:PROC
EXTRN	?gObjAddMonster@@YAFH@Z:PROC			; gObjAddMonster
EXTRN	?GetAttr@CMonsterAttr@@QAEPAUMONSTER_ATTRIBUTE@@PAD@Z:PROC ; CMonsterAttr::GetAttr
EXTRN	?GetAttr@CMonsterAttr@@QAEPAUMONSTER_ATTRIBUTE@@H@Z:PROC ; CMonsterAttr::GetAttr
EXTRN	?gMAttr@@3VCMonsterAttr@@A:BYTE			; gMAttr
;	COMDAT ??_C@_0BM@HPFGBCLO@Result?9SummonMonster?$CI?$CFs?3?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BM@HPFGBCLO@Result?9SummonMonster?$CI?$CFs?3?$CFd?$CJ?$AA@ DB 'Res'
	DB	'ult-SummonMonster(%s:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CEPFBKKD@Result?9Monster?5Not?5Found?$AA@
CONST	SEGMENT
??_C@_0BJ@CEPFBKKD@Result?9Monster?5Not?5Found?$AA@ DB 'Result-Monster No'
	DB	't Found', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KINKJFCO@Result?9Is?5Safetyzone?$AA@
CONST	SEGMENT
??_C@_0BF@KINKJFCO@Result?9Is?5Safetyzone?$AA@ DB 'Result-Is Safetyzone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MMJEPHGM@Result?9Too?5Manay?5Count?$AA@
CONST	SEGMENT
??_C@_0BH@MMJEPHGM@Result?9Too?5Manay?5Count?$AA@ DB 'Result-Too Manay Co'
	DB	'unt', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CmdSummonMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@PADH@Z
_TEXT	SEGMENT
tv210 = -272						; size = 4
_this$ = -272						; size = 4
_lpMonsterAttr$ = -268					; size = 4
_X$225760 = -262					; size = 1
_Y$225761 = -261					; size = 1
_szText$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_szMonsterName$ = 12					; size = 4
_MonsterCount$ = 16					; size = 4
?CmdSummonMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@PADH@Z PROC ; CGMMng::CmdSummonMonster, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b 7d 0c	 mov	 edi, DWORD PTR _szMonsterName$[ebp]

  0001c	68 00 01 00 00	 push	 256			; 00000100H
  00021	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00027	6a 00		 push	 0
  00029	50		 push	 eax
  0002a	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  00030	e8 00 00 00 00	 call	 _memset

  00035	8b 75 10	 mov	 esi, DWORD PTR _MonsterCount$[ebp]
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	83 fe 01	 cmp	 esi, 1
  0003e	7d 0a		 jge	 SHORT $LN12@CmdSummonM

  00040	c7 45 10 01 00
	00 00		 mov	 DWORD PTR _MonsterCount$[ebp], 1
  00047	8b 75 10	 mov	 esi, DWORD PTR _MonsterCount$[ebp]
$LN12@CmdSummonM:

  0004a	85 ff		 test	 edi, edi
  0004c	75 25		 jne	 SHORT $LN11@CmdSummonM

  0004e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00050	6a 01		 push	 1
  00052	51		 push	 ecx
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DMPMDHFM@Result?9Invalid?5Argument?$AA@
  00058	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx

  00063	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00066	33 cd		 xor	 ecx, ebp
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 0c 00	 ret	 12			; 0000000cH
$LN11@CmdSummonM:

  00073	83 fe 14	 cmp	 esi, 20			; 00000014H
  00076	7e 25		 jle	 SHORT $LN10@CmdSummonM

  00078	8b 13		 mov	 edx, DWORD PTR [ebx]
  0007a	6a 01		 push	 1
  0007c	52		 push	 edx
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@MMJEPHGM@Result?9Too?5Manay?5Count?$AA@
  00082	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx

  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00090	33 cd		 xor	 ecx, ebp
  00092	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 0c 00	 ret	 12			; 0000000cH
$LN10@CmdSummonM:

  0009d	0f bf 83 46 01
	00 00		 movsx	 eax, WORD PTR [ebx+326]
  000a4	0f bf 8b 44 01
	00 00		 movsx	 ecx, WORD PTR [ebx+324]
  000ab	50		 push	 eax
  000ac	51		 push	 ecx
  000ad	0f b6 8b 49 01
	00 00		 movzx	 ecx, BYTE PTR [ebx+329]
  000b4	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  000ba	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  000c0	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  000c5	a8 01		 test	 al, 1
  000c7	74 25		 je	 SHORT $LN9@CmdSummonM

  000c9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000cb	6a 01		 push	 1
  000cd	52		 push	 edx
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KINKJFCO@Result?9Is?5Safetyzone?$AA@
  000d3	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  000d8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx

  000de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e1	33 cd		 xor	 ecx, ebp
  000e3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e8	8b e5		 mov	 esp, ebp
  000ea	5d		 pop	 ebp
  000eb	c2 0c 00	 ret	 12			; 0000000cH
$LN9@CmdSummonM:

  000ee	57		 push	 edi
  000ef	e8 00 00 00 00	 call	 _atoi
  000f4	83 c4 04	 add	 esp, 4

  000f7	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMAttr@@3VCMonsterAttr@@A ; gMAttr
  000fc	85 c0		 test	 eax, eax
  000fe	74 10		 je	 SHORT $LN8@CmdSummonM
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?GetAttr@CMonsterAttr@@QAEPAUMONSTER_ATTRIBUTE@@H@Z ; CMonsterAttr::GetAttr
  00106	8b f8		 mov	 edi, eax
  00108	89 bd f4 fe ff
	ff		 mov	 DWORD PTR _lpMonsterAttr$[ebp], edi

  0010e	eb 0e		 jmp	 SHORT $LN7@CmdSummonM
$LN8@CmdSummonM:

  00110	57		 push	 edi
  00111	e8 00 00 00 00	 call	 ?GetAttr@CMonsterAttr@@QAEPAUMONSTER_ATTRIBUTE@@PAD@Z ; CMonsterAttr::GetAttr
  00116	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _lpMonsterAttr$[ebp], eax
  0011c	8b f8		 mov	 edi, eax
$LN7@CmdSummonM:

  0011e	85 ff		 test	 edi, edi
  00120	75 25		 jne	 SHORT $LN6@CmdSummonM

  00122	8b 03		 mov	 eax, DWORD PTR [ebx]
  00124	6a 01		 push	 1
  00126	50		 push	 eax
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CEPFBKKD@Result?9Monster?5Not?5Found?$AA@
  0012c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00131	83 c4 0c	 add	 esp, 12			; 0000000cH
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx

  00137	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013a	33 cd		 xor	 ecx, ebp
  0013c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 0c 00	 ret	 12			; 0000000cH
$LN6@CmdSummonM:

  00147	0f b7 0f	 movzx	 ecx, WORD PTR [edi]
  0014a	51		 push	 ecx
  0014b	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?GetType@CGMMng@@QAEHG@Z ; CGMMng::GetType
  00156	83 f8 02	 cmp	 eax, 2
  00159	74 25		 je	 SHORT $LN5@CmdSummonM

  0015b	8b 13		 mov	 edx, DWORD PTR [ebx]
  0015d	6a 01		 push	 1
  0015f	52		 push	 edx
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CEPFBKKD@Result?9Monster?5Not?5Found?$AA@
  00165	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0016a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016d	5f		 pop	 edi
  0016e	5e		 pop	 esi
  0016f	5b		 pop	 ebx

  00170	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00173	33 cd		 xor	 ecx, ebp
  00175	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 0c 00	 ret	 12			; 0000000cH
$LN5@CmdSummonM:

  00180	85 f6		 test	 esi, esi
  00182	0f 8e 9a 01 00
	00		 jle	 $LN2@CmdSummonM
  00188	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR tv210[ebp], esi
  0018e	8b ff		 npad	 2
$LL4@CmdSummonM:

  00190	0f b6 93 49 01
	00 00		 movzx	 edx, BYTE PTR [ebx+329]
  00197	8a 83 44 01 00
	00		 mov	 al, BYTE PTR [ebx+324]
  0019d	8a 8b 46 01 00
	00		 mov	 cl, BYTE PTR [ebx+326]
  001a3	52		 push	 edx
  001a4	88 85 fa fe ff
	ff		 mov	 BYTE PTR _X$225760[ebp], al
  001aa	88 8d fb fe ff
	ff		 mov	 BYTE PTR _Y$225761[ebp], cl
  001b0	e8 00 00 00 00	 call	 ?gObjAddMonster@@YAFH@Z	; gObjAddMonster
  001b5	0f bf f8	 movsx	 edi, ax
  001b8	83 c4 04	 add	 esp, 4

  001bb	85 ff		 test	 edi, edi
  001bd	0f 88 4d 01 00
	00		 js	 $LN3@CmdSummonM

  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001c8	8b f7		 mov	 esi, edi
  001ca	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  001d0	c6 84 06 b0 21
	00 00 01	 mov	 BYTE PTR [esi+eax+8624], 1

  001d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  001de	0f b6 85 fa fe
	ff ff		 movzx	 eax, BYTE PTR _X$225760[ebp]
  001e5	83 c9 ff	 or	 ecx, -1
  001e8	66 89 8c 16 b0
	03 00 00	 mov	 WORD PTR [esi+edx+944], cx
  001f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  001f6	0f b6 95 fb fe
	ff ff		 movzx	 edx, BYTE PTR _Y$225761[ebp]
  001fd	66 89 84 0e 44
	01 00 00	 mov	 WORD PTR [esi+ecx+324], ax
  00205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0020a	66 89 94 06 46
	01 00 00	 mov	 WORD PTR [esi+eax+326], dx

  00212	0f b6 8b 49 01
	00 00		 movzx	 ecx, BYTE PTR [ebx+329]
  00219	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0021f	88 8c 16 49 01
	00 00		 mov	 BYTE PTR [esi+edx+329], cl

  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0022b	0f b7 8c 06 44
	01 00 00	 movzx	 ecx, WORD PTR [esi+eax+324]
  00233	66 89 8c 06 7c
	01 00 00	 mov	 WORD PTR [esi+eax+380], cx

  0023b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00240	0f b7 94 06 46
	01 00 00	 movzx	 edx, WORD PTR [esi+eax+326]
  00248	66 89 94 06 7e
	01 00 00	 mov	 WORD PTR [esi+eax+382], dx

  00250	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00255	0f b7 8c 06 44
	01 00 00	 movzx	 ecx, WORD PTR [esi+eax+324]
  0025d	66 89 8c 06 78
	01 00 00	 mov	 WORD PTR [esi+eax+376], cx

  00265	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0026a	0f b7 94 06 46
	01 00 00	 movzx	 edx, WORD PTR [esi+eax+326]
  00272	66 89 94 06 7a
	01 00 00	 mov	 WORD PTR [esi+eax+378], dx

  0027a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0027f	0f b6 8c 06 44
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+324]
  00287	88 8c 06 76 01
	00 00		 mov	 BYTE PTR [esi+eax+374], cl

  0028e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00293	8a 94 06 46 01
	00 00		 mov	 dl, BYTE PTR [esi+eax+326]
  0029a	88 94 06 77 01
	00 00		 mov	 BYTE PTR [esi+eax+375], dl

  002a1	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _lpMonsterAttr$[ebp]
  002a7	0f b7 48 1c	 movzx	 ecx, WORD PTR [eax+28]
  002ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002b1	66 89 8c 16 be
	00 00 00	 mov	 WORD PTR [esi+edx+190], cx

  002b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002bf	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  002c4	66 89 84 0e b6
	04 00 00	 mov	 WORD PTR [esi+ecx+1206], ax

  002cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002d2	c7 84 16 ac 03
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx+940], 0

  002dd	e8 00 00 00 00	 call	 _rand
  002e2	25 07 00 00 80	 and	 eax, -2147483641	; 80000007H
  002e7	79 05		 jns	 SHORT $LN17@CmdSummonM
  002e9	48		 dec	 eax
  002ea	83 c8 f8	 or	 eax, -8			; fffffff8H
  002ed	40		 inc	 eax
$LN17@CmdSummonM:
  002ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  002f4	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _lpMonsterAttr$[ebp]
  002fa	88 84 0e 48 01
	00 00		 mov	 BYTE PTR [esi+ecx+328], al
  00301	8b 02		 mov	 eax, DWORD PTR [edx]
  00303	50		 push	 eax
  00304	57		 push	 edi
  00305	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster
  0030a	8b 75 10	 mov	 esi, DWORD PTR _MonsterCount$[ebp]
  0030d	83 c4 08	 add	 esp, 8
$LN3@CmdSummonM:

  00310	ff 8d f0 fe ff
	ff		 dec	 DWORD PTR tv210[ebp]
  00316	0f 85 74 fe ff
	ff		 jne	 $LL4@CmdSummonM
  0031c	8b bd f4 fe ff
	ff		 mov	 edi, DWORD PTR _lpMonsterAttr$[ebp]
$LN2@CmdSummonM:

  00322	56		 push	 esi
  00323	83 c7 08	 add	 edi, 8
  00326	57		 push	 edi
  00327	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HPFGBCLO@Result?9SummonMonster?$CI?$CFs?3?$CFd?$CJ?$AA@
  00332	51		 push	 ecx
  00333	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  00339	8b 13		 mov	 edx, DWORD PTR [ebx]
  0033b	6a 01		 push	 1
  0033d	52		 push	 edx
  0033e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00344	50		 push	 eax
  00345	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  0034a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0034d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00350	5f		 pop	 edi
  00351	5e		 pop	 esi
  00352	33 cd		 xor	 ecx, ebp
  00354	5b		 pop	 ebx
  00355	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0035a	8b e5		 mov	 esp, ebp
  0035c	5d		 pop	 ebp
  0035d	c2 0c 00	 ret	 12			; 0000000cH
?CmdSummonMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@PADH@Z ENDP ; CGMMng::CmdSummonMonster
_TEXT	ENDS
PUBLIC	??_C@_0BD@EEMICJMK@?$FLUnBanCharHdd?$FN?3?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BG@LJCMCPPE@?$FLBanCharHdd?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IFDGJLMD@?$FLBanCharHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BI@LGOMGLKB@?$FLUnBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BD@EJNGFJIN@?$FLUnBanChatHdd?$FN?3?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BG@JLNGPLAG@?$FLBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BJ@ILEKCHEG@?$FLBanChatHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BD@EKAPJFKL@?$FL?$CFs?$FN?5vip?5level?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0P@LKDMPCOH@?$FLMake?$FN?5no?5item?$AA@	; `string'
PUBLIC	??_C@_0BB@OMAHHDDI@Name?3?5?$CFs?5HDD?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BL@MLCOMLB@?$FLDEBUG?$FN?5Test?5China?5Command?$AA@ ; `string'
PUBLIC	??_C@_0BE@JOEIPHHF@?$FLRECV?$FN?3?5Goblin?3?5?$CL?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BM@OHLNFCPF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5Goblin?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@NFLKJBKH@?$FLRECV?$FN?3?5WcoinP?3?5?$CL?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BM@BBAPMHNA@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinP?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@IDIMBHPE@?$FLRECV?$FN?3?5WcoinC?3?5?$CL?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BM@JEENLHOF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinC?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0CL@INDNBOFD@?$FLCredit?$FN?3?5You?5have?5sent?5?$CFd?5credi@ ; `string'
PUBLIC	??_C@_0CK@EJECHMEG@?$FLCredit?$FN?3?5Succesed?5added?5?$CFd?5Cred@ ; `string'
PUBLIC	??_C@_0CK@HGJOLEGA@?$FLCredit?$FN?3?5Error?5you?5don?$GAt?5have?5?$CF@ ; `string'
PUBLIC	??_C@_0BH@LEPLDKKA@?$FLNeed?5GoblinPoint?$FN?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BC@MKENDDB@?$FLNeed?5WCoinP?$FN?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BC@FKJCFFGC@?$FLNeed?5WCoinC?$FN?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BC@DNAEPCGG@?$FLNeed?5Credit?$FN?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BL@IEMKEHON@?$EA?$FLPremium?5Status?$FN?5?$CL?5?$CFd?5Day?$AA@ ; `string'
PUBLIC	??_C@_0P@JOEEOEIN@?$FLNeed?5Zen?$FN?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0N@GCMKKGGG@?$FLWCoin?$FN?3?5?$CL?$CFd?$AA@ ; `string'
PUBLIC	__real@4049000000000000
PUBLIC	__real@0000000000000000
PUBLIC	??_C@_0N@NKBNNBDB@?$FLCredit?$FN?3?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@JDGJNJPO@?$FLCredit?$FN?3?5?$CFs?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BH@IIMMMKAG@?$FLAutoParty?$FN?3?5Recv?5Off?5?$AA@ ; `string'
PUBLIC	??_C@_0BP@FGLEBLPD@?$FL?4?3?3AutoParty?3?3?4?$FN?$FL?$CFs?$FN?5?$CFs?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@EKOHGCJA@?$FLCredits?$FN?3?5?$CL?$CFd?5?$AA@ ; `string'
PUBLIC	??_C@_0BC@BIOCBJNL@?$FLCredits?$FN?3?5?$CFs?5?$CFd?5?$AA@ ; `string'
PUBLIC	??_C@_0P@FAJCCKAC@?$FLUnBanAllChat?$FN?$AA@	; `string'
PUBLIC	??_C@_0BD@MGPIBDPG@?$FLUnBanAllChat?$FN?3?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0M@KCDDKKH@?$FLUnBanPost?$FN?$AA@		; `string'
PUBLIC	??_C@_0BA@NGALHOKC@?$FLUnBanPost?$FN?3?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0M@MHFBAJJG@?$FLUnBanChat?$FN?$AA@	; `string'
PUBLIC	??_C@_0BA@EAGNBPNG@?$FLUnBanChat?$FN?3?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BG@GPLFHNOP@?$FLBanAllChat?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BJ@JEBLMDLC@?$FLBanAllChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BD@DPLJFOCG@?$FLBanChar?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BG@LNHKFFGH@?$FLBanChar?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BD@DEANLHKB@?$FLBanPost?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BG@BKLAGHFJ@?$FLBanPost?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BD@NAIEPLMG@?$FLBanChat?$FN?3?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BG@JPIAIBJF@?$FLBanChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ ; `string'
PUBLIC	??_C@_0BB@FJGOBKEK@User?5SetPosition?$AA@	; `string'
PUBLIC	??_C@_0FH@PLNMJHPN@?$KH?$KJ?$KH?$LK?$DP?$KH?Y?5?$KH?$KC?$KH?h?$DP?$DP?$KH?$KB?$KH?W?$KB?$KE?$KH?$LA?5?$KH?$KJ?$KH?h?$KH?$KB?$KH?Y?5@ ; `string'
PUBLIC	??_C@_0O@GLFLLIFN@?1?$DP?$DP?$KH?$KG?$KH?$KK?$KH?W?$DP?$DP?$KH?$KD?$AA@ ; `string'
PUBLIC	??_C@_0EG@HMKKLLPO@?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$KH?$KC?$KB?h?$DP?$KH?W?$KB?c?$DP?5?$KH?W?$DP?$DP?$KH?$KD?$DP?$KH?$KJ?$DP@ ; `string'
PUBLIC	??_C@_0BN@OGJFDCBA@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@ ; `string'
PUBLIC	??_C@_0CB@GFGEBJIN@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h@ ; `string'
PUBLIC	??_C@_0BK@GCCAHPBB@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@ ; `string'
PUBLIC	??_C@_0BA@MMIEACNF@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$DP?$DP?$KH?$KC?$KB?h?$AA@ ; `string'
PUBLIC	??_C@_0EF@PHLKPBLC@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?5?$DN?5?$CF@ ; `string'
PUBLIC	??_C@_0BL@MDPJCDCO@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$DN?5?$CF7?40f?5?1?5?$CF7?40f?$AA@ ; `string'
PUBLIC	??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@ ; `string'
PUBLIC	??_C@_0BG@GPMLDEKO@?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$DP?$KH?W?$KB?$MA?$KH?S?$AA@ ; `string'
PUBLIC	??_C@_03MCADLMAF@off?$AA@			; `string'
PUBLIC	??_C@_02LIELOMNJ@on?$AA@			; `string'
PUBLIC	??_C@_0N@KELDLAKD@Set?5GuildWar?$AA@		; `string'
PUBLIC	??_C@_0BC@MOJFCJJN@Free?5Ban?9Chatting?$AA@	; `string'
PUBLIC	??_C@_0N@KILIGKJC@Ban?5Chatting?$AA@		; `string'
PUBLIC	??_C@_0N@GPDFKJGB@End?5GuildWar?$AA@		; `string'
PUBLIC	??_C@_0BC@DPMLLFMM@Stop?5BattleSoccer?$AA@	; `string'
PUBLIC	??_C@_0BD@EFECDMGE@Start?5BattleSoccer?$AA@	; `string'
PUBLIC	??_C@_0BC@HIAMIIED@Guild?5SetPosition?$AA@	; `string'
PUBLIC	??_C@_0BB@BCPFBGGF@Guild?5Disconnect?$AA@	; `string'
PUBLIC	??_C@_0BA@MEJDKKFB@User?5Disconnect?$AA@	; `string'
PUBLIC	??_C@_0BH@NPPBDIDN@User?5Stat?5?$CIconnection?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0EA@DPOHDNID@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@ ; `string'
PUBLIC	??_C@_0O@HBGDJJNF@User?5Tracking?$AA@		; `string'
PUBLIC	??_C@_0BE@JKKCDFDH@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$DP?$KH?$KE?$KH?$KB?$KH?$LN?$AA@ ; `string'
PUBLIC	??_C@_0BE@CAJKHEN@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$KH?$KJ?$KH?$LK?$KH?$KC?$DP?$AA@ ; `string'
PUBLIC	??_C@_0EB@OBAKBBAF@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@ ; `string'
PUBLIC	??_C@_0O@MIJMFKGB@User?5Watching?$AA@		; `string'
PUBLIC	??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@ ; `string'
PUBLIC	??_C@_0L@FKKMDPJD@FIRECRACK?4?$AA@		; `string'
PUBLIC	??_C@_0BC@CHFHKJND@Ability?5Debug?3?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_03GCDBBDDL@Off?$AA@			; `string'
PUBLIC	??_C@_02IAAGKKDJ@On?$AA@			; `string'
PUBLIC	??_C@_0CH@MPGEEBEI@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1ms_re@ ; `string'
PUBLIC	??_C@_0BD@CJOPDKEC@Master?5Skill?5Reset?$AA@	; `string'
PUBLIC	??_C@_0DD@KJEOLPEF@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@ ; `string'
PUBLIC	??_C@_0DA@EDNEDAPJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@ ; `string'
PUBLIC	??_C@_0DE@FKDLGCCJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@ ; `string'
PUBLIC	??_C@_0DH@JMPPEKFD@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@ ; `string'
PUBLIC	??_C@_0BK@BFOILIFL@HP?3?$CF7?41f?1?$CF7?41f?5?0?5SD?3?$CFd?1?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BN@FFLABGDE@?$FL?$DP?$DP?$DP?$KH?V?$DP?$KH?h?$KH?$KF?$DP?$DP?$DP?$KH?$KC?$KB?h?$FN?5?$CFd?5?9?$DO?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0CM@DAKDBCPD@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$DP?$KH?U?$KH?$KC?$KB?h?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH@ ; `string'
PUBLIC	??_C@_0CL@PNECBEHH@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$KB?$MA?$KH?S?$DP?$DP?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH?$LE@ ; `string'
PUBLIC	??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@ ; `string'
PUBLIC	??_C@_0BF@EBIMJKMG@3?$KH?$KD?$KH?i?$KH?$KB?$KH?n?$KH?$KC?$KH?i?5?$DP?$DP?$KB?c?$KH?j?$AA@ ; `string'
PUBLIC	??_C@_0M@CJJPFILP@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@EIKIGGHM@Modi?4Stat?5Complete?$AA@	; `string'
PUBLIC	??_C@_0DM@IOPOKGDJ@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@ ; `string'
PUBLIC	??_C@_0DE@EONAICLH@?$KH?$KB?$KH?W?$KH?$KK?$KH?V?$KH?$KK?$KH?V?5?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$DP?$DP?$KH?$KG?$KH?$KK?5?$KH@ ; `string'
PUBLIC	??_C@_0DH@MCALDNDC@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@ ; `string'
PUBLIC	??_C@_0BM@KAGIKAMB@?$DP?$KH?$KN?$DP?$KH?h?5?$DP?$KH?j?$DP?$KH?$KD?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?4?4?$AA@ ; `string'
PUBLIC	??_C@_0CK@BOEHIACN@?$FL?5?$CFs?5?$FN?5?$KH?$KB?$KH?$KJ?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?5?$KH?$KB?$KH?$LA?$DP?$DP?$DP?$DP@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0CO@GHLFOKPF@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KH?$KB?$KH?$KJ?5HP?5?$DN?5@ ; `string'
PUBLIC	??_C@_0CI@FJDGBDEH@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KB?c?$DP?5?$DP?$KH?j?$DP?$KH?$KB@ ; `string'
PUBLIC	??_C@_0CF@BJPGHEGG@PK?$DP?$KH?e?$KH?$KG?$KH?$KD?$KH?W?$DP?5?$KH?$KE?$KH?$KM?$KB?$MA?$KH?S?$KH?$KK?$DP?5?$KH?$KJ?$KH?$LH?$DP?$KH?$LB@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?ManagementProc@CGMMng@@QAEHPAUOBJECTSTRUCT@@PADH@Z ; CGMMng::ManagementProc
EXTRN	?Search@CQuestionAnswer@@QAEXXZ:PROC		; CQuestionAnswer::Search
EXTRN	?g_QuestionAnswer@@3VCQuestionAnswer@@A:BYTE	; g_QuestionAnswer
EXTRN	?exGemStone@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exGemStone
EXTRN	?exHighStone@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exHighStone
EXTRN	?exLowStone@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exLowStone
EXTRN	?exHarmony@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exHarmony
EXTRN	?exGuardian@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exGuardian
EXTRN	?DSReqDelete@CBanSystem@@QAEXPAD@Z:PROC		; CBanSystem::DSReqDelete
EXTRN	?DSReqInsert@CBanSystem@@QAEXPADKKK@Z:PROC	; CBanSystem::DSReqInsert
EXTRN	?g_BanSystem@@3VCBanSystem@@A:BYTE		; g_BanSystem
EXTRN	?UserBuff@PremiumSystemZt@@QAEXH@Z:PROC		; PremiumSystemZt::UserBuff
EXTRN	?InfoMessage@PremiumSystemZt@@QAEXH@Z:PROC	; PremiumSystemZt::InfoMessage
EXTRN	?g_PremiumSystemZt@@3VPremiumSystemZt@@A:BYTE	; g_PremiumSystemZt
EXTRN	?ProcessStatusStart@CDungeonSiege@@QAEXXZ:PROC	; CDungeonSiege::ProcessStatusStart
EXTRN	?CheckStatus@CDungeonSiege@@QAE_NH@Z:PROC	; CDungeonSiege::CheckStatus
EXTRN	?g_DungeonSiege@@3VCDungeonSiege@@A:BYTE	; g_DungeonSiege
EXTRN	?NewShopRecv@@YAXPAUCG_NEW_CASH_SHOP@@H@Z:PROC	; NewShopRecv
EXTRN	?InSafeZone@ZtUser@@QAE_NH@Z:PROC		; ZtUser::InSafeZone
EXTRN	?g_ZtUser@@3VZtUser@@A:BYTE			; g_ZtUser
EXTRN	?GetCustom@CZtLicense@@QAEHXZ:PROC		; CZtLicense::GetCustom
EXTRN	?excreateon@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::excreateon
EXTRN	?recvcreateonbank@JewelsBank@@QAEXHH@Z:PROC	; JewelsBank::recvcreateonbank
EXTRN	?sendcreateonbank@JewelsBank@@QAEXHH@Z:PROC	; JewelsBank::sendcreateonbank
EXTRN	?GDDelete@CMarriage@@QAEXH@Z:PROC		; CMarriage::GDDelete
EXTRN	?g_Marriage@@3VCMarriage@@A:BYTE		; g_Marriage
EXTRN	?GJPUserClose@@YAXPAD@Z:PROC			; GJPUserClose
EXTRN	?CharacterInformation@cBMQuest@@QAEXH@Z:PROC	; cBMQuest::CharacterInformation
EXTRN	?BMQuest@@3VcBMQuest@@A:BYTE			; BMQuest
EXTRN	?NewAddBrother@Brotherhood@@QAE_NHH@Z:PROC	; Brotherhood::NewAddBrother
EXTRN	?UserExitBrother@Brotherhood@@QAEXH@Z:PROC	; Brotherhood::UserExitBrother
EXTRN	?UserAddedBrother@Brotherhood@@QAEXHPAD@Z:PROC	; Brotherhood::UserAddedBrother
EXTRN	?Teleport@Brotherhood@@QAEXPAUOBJECTSTRUCT@@H@Z:PROC ; Brotherhood::Teleport
EXTRN	?gBrotherhood@@3VBrotherhood@@A:BYTE		; gBrotherhood
EXTRN	?CheckDisconnectFriend@CAccountSecurity@@QAE_NHH@Z:PROC ; CAccountSecurity::CheckDisconnectFriend
EXTRN	?MessageChat@@YAXHPADZZ:PROC			; MessageChat
EXTRN	?Premium@@3VPremiumSystem@@A:BYTE		; Premium
EXTRN	?exlife@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exlife
EXTRN	?exsoul@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exsoul
EXTRN	?exbless@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exbless
EXTRN	?exchaos@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::exchaos
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?exClass@cCreditDonate@@QAEXHPAD@Z:PROC		; cCreditDonate::exClass
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
EXTRN	?ztMapName@@YAPADH@Z:PROC			; ztMapName
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?Chat@cCreditDonate@@QAEXHPADH@Z:PROC		; cCreditDonate::Chat
EXTRN	?gCreditDonate@@3VcCreditDonate@@A:BYTE		; gCreditDonate
EXTRN	?recvlifebank@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::recvlifebank
EXTRN	?recvsoulbank@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::recvsoulbank
EXTRN	?recvblessbank@JewelsBank@@QAEXHH@Z:PROC	; JewelsBank::recvblessbank
EXTRN	?recvchaosbank@JewelsBank@@QAEXHH@Z:PROC	; JewelsBank::recvchaosbank
EXTRN	?sendlifebank@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::sendlifebank
EXTRN	?sendsoulbank@JewelsBank@@QAEXHH@Z:PROC		; JewelsBank::sendsoulbank
EXTRN	?sendblessbank@JewelsBank@@QAEXHH@Z:PROC	; JewelsBank::sendblessbank
EXTRN	?sendchaosbank@JewelsBank@@QAEXHH@Z:PROC	; JewelsBank::sendchaosbank
EXTRN	?gJewelsBank@@3VJewelsBank@@A:BYTE		; gJewelsBank
EXTRN	?CheckInventory@CAccountSecurity@@QAE_NH@Z:PROC	; CAccountSecurity::CheckInventory
EXTRN	?g_AccountSecurity@@3VCAccountSecurity@@A:BYTE	; g_AccountSecurity
EXTRN	?OffExpStart@cOffExp@@QAEXHH@Z:PROC		; cOffExp::OffExpStart
EXTRN	?OffExp@@3VcOffExp@@A:BYTE			; OffExp
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?MsgNormal@@YAXHPADZZ:PROC			; MsgNormal
EXTRN	?SetLeader@PartyClass@@QAE_NHH@Z:PROC		; PartyClass::SetLeader
EXTRN	?OperateGmCommand@CRaklion@@QAEXHH@Z:PROC	; CRaklion::OperateGmCommand
EXTRN	?g_Raklion@@3VCRaklion@@A:BYTE			; g_Raklion
EXTRN	?gObjViewportListProtocolCreate@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjViewportListProtocolCreate
EXTRN	?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjRemoveBuffEffect
EXTRN	?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjViewportListProtocolDestroy
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
EXTRN	?CheckChaosCardInfo@CChaosCard@@QAEHPADPAVCItem@@@Z:PROC ; CChaosCard::CheckChaosCardInfo
EXTRN	?g_ChaosCard@@3VCChaosCard@@A:BYTE		; g_ChaosCard
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
EXTRN	?SetOptionItemByMacro@CItemSystemFor380@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CItemSystemFor380::SetOptionItemByMacro
EXTRN	?g_kItemSystemFor380@@3VCItemSystemFor380@@A:BYTE ; g_kItemSystemFor380
EXTRN	?StrengthenItemByMacro@CJewelOfHarmonySystem@@QAEXPAUOBJECTSTRUCT@@EEE@Z:PROC ; CJewelOfHarmonySystem::StrengthenItemByMacro
EXTRN	?g_kJewelOfHarmonySystem@@3VCJewelOfHarmonySystem@@A:BYTE ; g_kJewelOfHarmonySystem
EXTRN	?gObjLevelUp@@YA_NPAUOBJECTSTRUCT@@AA_JHH@Z:PROC ; gObjLevelUp
EXTRN	?SendNoticeToUser@TNotice@@SAXHPAX@Z:PROC	; TNotice::SendNoticeToUser
EXTRN	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ:PROC	; TNotice::MakeNoticeMsgEx
EXTRN	?AddUserData@CRaklionBattleUserMng@@QAEHH@Z:PROC ; CRaklionBattleUserMng::AddUserData
EXTRN	?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A:BYTE ; g_RaklionBattleUserMng
EXTRN	?CGRequestQuestInfo@@YAXH@Z:PROC		; CGRequestQuestInfo
EXTRN	?OperateGMCommand@CIllusionTempleEvent@@QAEXHE@Z:PROC ; CIllusionTempleEvent::OperateGMCommand
EXTRN	?g_IllusionTempleEvent@@3VCIllusionTempleEvent@@A:BYTE ; g_IllusionTempleEvent
EXTRN	?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z:PROC	; CItem::Convert
EXTRN	?SetMode@CDarkSpirit@@QAEXW4ePetItem_Mode@1@H@Z:PROC ; CDarkSpirit::SetMode
EXTRN	?gDarkSpirit@@3PAVCDarkSpirit@@A:BYTE		; gDarkSpirit
EXTRN	?gLevelExperience@@3PAKA:BYTE			; gLevelExperience
EXTRN	?OperateGmCommand@CKanturu@@QAEXHH@Z:PROC	; CKanturu::OperateGmCommand
EXTRN	?g_Kanturu@@3VCKanturu@@A:BYTE			; g_Kanturu
EXTRN	?OperateGmCommand@CCrywolf@@QAEXHH@Z:PROC	; CCrywolf::OperateGmCommand
EXTRN	?g_Crywolf@@3VCCrywolf@@A:BYTE			; g_Crywolf
EXTRN	?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z:PROC ; CCastleSiege::OperateGmCommand
EXTRN	?g_CastleSiege@@3VCCastleSiege@@A:BYTE		; g_CastleSiege
EXTRN	?giKundunRefillHPSec@@3HA:DWORD			; giKundunRefillHPSec
EXTRN	?giKundunRefillHP@@3HA:DWORD			; giKundunRefillHP
EXTRN	?giKundunRefillHPTime@@3HA:DWORD		; giKundunRefillHPTime
EXTRN	?Output@CLogToFile@@QAAXPADZZ:PROC		; CLogToFile::Output
EXTRN	?gObjSetDuelOption@@YAXHH@Z:PROC		; gObjSetDuelOption
EXTRN	?gObjSetTradeOption@@YAXHH@Z:PROC		; gObjSetTradeOption
EXTRN	?gObjBillRequest@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjBillRequest
EXTRN	?gEnableBattleSoccer@@3HA:DWORD			; gEnableBattleSoccer
EXTRN	?GCManagerGuildWarSet@@YAXPAD0H@Z:PROC		; GCManagerGuildWarSet
EXTRN	?GCGuildWarRequestResult@@YAXPADHH@Z:PROC	; GCGuildWarRequestResult
EXTRN	?GCServerMsgStringSendGuild@@YAXPAU_GUILD_INFO_STRUCT@@PADE@Z:PROC ; GCServerMsgStringSendGuild
EXTRN	?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z:PROC ; gObjAddMsgSendDelay
EXTRN	?GCManagerGuildWarEnd@@YAXPAD@Z:PROC		; GCManagerGuildWarEnd
EXTRN	?BattleSoccerGoalEnd@@YAXH@Z:PROC		; BattleSoccerGoalEnd
EXTRN	?BattleSoccerGoalStart@@YAXH@Z:PROC		; BattleSoccerGoalStart
EXTRN	?Move@CMoveCommand@@QAEHPAUOBJECTSTRUCT@@PAD@Z:PROC ; CMoveCommand::Move
EXTRN	?gMoveCommand@@3VCMoveCommand@@A:BYTE		; gMoveCommand
EXTRN	?GetPkLevel@PartyClass@@QAEDH@Z:PROC		; PartyClass::GetPkLevel
EXTRN	?ZtConfig@@3VcZtConfigs@@A:BYTE			; ZtConfig
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z:PROC ; CGuildClass::SearchGuild
EXTRN	?Guild@@3VCGuildClass@@A:BYTE			; Guild
EXTRN	?SendClose@ConnectZt@@QAEXHH@Z:PROC		; ConnectZt::SendClose
EXTRN	?g_ConnectZt@@3VConnectZt@@A:QWORD		; g_ConnectZt
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?gObjSendUserStatistic@@YAXHHH@Z:PROC		; gObjSendUserStatistic
EXTRN	?CheckCommand@GMManager@@QAE_NHH@Z:PROC		; GMManager::CheckCommand
EXTRN	?g_GMManager@@3VGMManager@@A:BYTE		; g_GMManager
EXTRN	?gObjFind@@YAPAUOBJECTSTRUCT@@PAD@Z:PROC	; gObjFind
EXTRN	?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z:PROC	; MsgSendV2
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
EXTRN	?ClearSlotOption@CSocketOption@@QAEXPAVCItem@@E@Z:PROC ; CSocketOption::ClearSlotOption
EXTRN	?RemakeSocketOption@CSocketOption@@QAEEPAVCItem@@E@Z:PROC ; CSocketOption::RemakeSocketOption
EXTRN	?GCInventoryItemOneSend@@YAXHH@Z:PROC		; GCInventoryItemOneSend
EXTRN	?MakeManualOptionbyCalc@CSocketOption@@QAEEPAVCItem@@EEE@Z:PROC ; CSocketOption::MakeManualOptionbyCalc
EXTRN	?g_SocketOption@@3VCSocketOption@@A:BYTE	; g_SocketOption
EXTRN	?g_bAbilityDebug@@3HA:DWORD			; g_bAbilityDebug
EXTRN	?Clear@CMagicInf@@QAEXXZ:PROC			; CMagicInf::Clear
EXTRN	?CheckRequireStatus@CMasterLevelSkillTreeSystem@@QAEHH@Z:PROC ; CMasterLevelSkillTreeSystem::CheckRequireStatus
EXTRN	?g_MasterSkillSystem@@3VCMasterLevelSkillTreeSystem@@A:BYTE ; g_MasterSkillSystem
EXTRN	?IsMagic@CMagicInf@@QAEHXZ:PROC			; CMagicInf::IsMagic
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?GCSendMasterLevelWindowStatus@CMasterLevelSystem@@QAEXPAUOBJECTSTRUCT@@@Z:PROC ; CMasterLevelSystem::GCSendMasterLevelWindowStatus
EXTRN	?GetLevelExperienceTable@CMasterLevelSystem@@QAE_JH@Z:PROC ; CMasterLevelSystem::GetLevelExperienceTable
EXTRN	?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z:PROC ; CMasterLevelSystem::CheckIsMasterLevelCharacter
EXTRN	?g_MasterLevelSystem@@3VCMasterLevelSystem@@A:BYTE ; g_MasterLevelSystem
EXTRN	?GCManaSend@@YAXHHEEH@Z:PROC			; GCManaSend
EXTRN	?SetManualItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HHH@Z:PROC ; CItemAddOption::SetManualItemEffect
EXTRN	?g_ItemAddOption@@3VCItemAddOption@@A:BYTE	; g_ItemAddOption
EXTRN	?GCReFillSend@@YAXHHEEH@Z:PROC			; GCReFillSend
EXTRN	?g_iFenrirElfMaxDurSmall@@3HA:DWORD		; g_iFenrirElfMaxDurSmall
EXTRN	?g_iFenrirDefaultMaxDurSmall@@3HA:DWORD		; g_iFenrirDefaultMaxDurSmall
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?QuestSuccessCommand@CQuestInfo@@QAEXHH@Z:PROC	; CQuestInfo::QuestSuccessCommand
EXTRN	?g_QuestInfo@@3VCQuestInfo@@A:BYTE		; g_QuestInfo
EXTRN	?gObjCloseSet@@YAXHH@Z:PROC			; gObjCloseSet
EXTRN	?DCInfo@@3Vclassdef@@A:BYTE			; DCInfo
EXTRN	?PetItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC ; PetItemSerialCreateSend
EXTRN	?ItemGetNumberMake@@YAHHH@Z:PROC		; ItemGetNumberMake
EXTRN	_sprintf:PROC
EXTRN	?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A:BYTE	; ItemAttribute
EXTRN	?GCPkLevelSend@@YAXHE@Z:PROC			; GCPkLevelSend
EXTRN	?SendToAllUser@TNotice@@QAAXPADZZ:PROC		; TNotice::SendToAllUser
EXTRN	?SetPkCount@PartyClass@@QAEXH@Z:PROC		; PartyClass::SetPkCount
EXTRN	?SetPkLevel@PartyClass@@QAEXHHHD@Z:PROC		; PartyClass::SetPkLevel
EXTRN	?GetSetOptionName@CSetItemOption@@QAEPADHH@Z:PROC ; CSetItemOption::GetSetOptionName
EXTRN	?gSetItemOption@@3VCSetItemOption@@A:BYTE	; gSetItemOption
EXTRN	?MakeRandomSetItem@@YAXH@Z:PROC			; MakeRandomSetItem
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?CheckAuthorityCondition@@YA_NHPAUOBJECTSTRUCT@@@Z:PROC ; CheckAuthorityCondition
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0BD@EEMICJMK@?$FLUnBanCharHdd?$FN?3?5?$CFs?$AA@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0BD@EEMICJMK@?$FLUnBanCharHdd?$FN?3?5?$CFs?$AA@ DB '[UnBanCharHdd]:'
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LJCMCPPE@?$FLBanCharHdd?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BG@LJCMCPPE@?$FLBanCharHdd?$FN?3?5?$CFd?5Hour?$AA@ DB '[BanCharHdd'
	DB	']: %d Hour', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IFDGJLMD@?$FLBanCharHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BJ@IFDGJLMD@?$FLBanCharHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ DB '[Ban'
	DB	'CharHdd]: %s %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LGOMGLKB@?$FLUnBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BI@LGOMGLKB@?$FLUnBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@ DB '[UnBanCha'
	DB	'tHdd]: %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EJNGFJIN@?$FLUnBanChatHdd?$FN?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BD@EJNGFJIN@?$FLUnBanChatHdd?$FN?3?5?$CFs?$AA@ DB '[UnBanChatHdd]:'
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JLNGPLAG@?$FLBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BG@JLNGPLAG@?$FLBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@ DB '[BanChatHdd'
	DB	']: %d Hour', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ILEKCHEG@?$FLBanChatHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BJ@ILEKCHEG@?$FLBanChatHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ DB '[Ban'
	DB	'ChatHdd]: %s %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EKAPJFKL@?$FL?$CFs?$FN?5vip?5level?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@EKAPJFKL@?$FL?$CFs?$FN?5vip?5level?3?5?$CFd?$AA@ DB '[%s] vip l'
	DB	'evel: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LKDMPCOH@?$FLMake?$FN?5no?5item?$AA@
CONST	SEGMENT
??_C@_0P@LKDMPCOH@?$FLMake?$FN?5no?5item?$AA@ DB '[Make] no item', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMAHHDDI@Name?3?5?$CFs?5HDD?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@OMAHHDDI@Name?3?5?$CFs?5HDD?3?5?$CFd?$AA@ DB 'Name: %s HDD: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MLCOMLB@?$FLDEBUG?$FN?5Test?5China?5Command?$AA@
CONST	SEGMENT
??_C@_0BL@MLCOMLB@?$FLDEBUG?$FN?5Test?5China?5Command?$AA@ DB '[DEBUG] Te'
	DB	'st China Command', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JOEIPHHF@?$FLRECV?$FN?3?5Goblin?3?5?$CL?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@JOEIPHHF@?$FLRECV?$FN?3?5Goblin?3?5?$CL?$CFd?$AA@ DB '[RECV]: G'
	DB	'oblin: +%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OHLNFCPF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5Goblin?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BM@OHLNFCPF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5Goblin?3?5?$CFd?$AA@ DB '['
	DB	'SEND]: Name: %s Goblin: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NFLKJBKH@?$FLRECV?$FN?3?5WcoinP?3?5?$CL?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@NFLKJBKH@?$FLRECV?$FN?3?5WcoinP?3?5?$CL?$CFd?$AA@ DB '[RECV]: W'
	DB	'coinP: +%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BBAPMHNA@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinP?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BM@BBAPMHNA@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinP?3?5?$CFd?$AA@ DB '['
	DB	'SEND]: Name: %s WcoinP: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IDIMBHPE@?$FLRECV?$FN?3?5WcoinC?3?5?$CL?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@IDIMBHPE@?$FLRECV?$FN?3?5WcoinC?3?5?$CL?$CFd?$AA@ DB '[RECV]: W'
	DB	'coinC: +%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JEENLHOF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinC?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BM@JEENLHOF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinC?3?5?$CFd?$AA@ DB '['
	DB	'SEND]: Name: %s WcoinC: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@INDNBOFD@?$FLCredit?$FN?3?5You?5have?5sent?5?$CFd?5credi@
CONST	SEGMENT
??_C@_0CL@INDNBOFD@?$FLCredit?$FN?3?5You?5have?5sent?5?$CFd?5credi@ DB '['
	DB	'Credit]: You have sent %d credits from %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EJECHMEG@?$FLCredit?$FN?3?5Succesed?5added?5?$CFd?5Cred@
CONST	SEGMENT
??_C@_0CK@EJECHMEG@?$FLCredit?$FN?3?5Succesed?5added?5?$CFd?5Cred@ DB '[C'
	DB	'redit]: Succesed added %d Credits to %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HGJOLEGA@?$FLCredit?$FN?3?5Error?5you?5don?$GAt?5have?5?$CF@
CONST	SEGMENT
??_C@_0CK@HGJOLEGA@?$FLCredit?$FN?3?5Error?5you?5don?$GAt?5have?5?$CF@ DB '['
	DB	'Credit]: Error you don`t have %d credits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LEPLDKKA@?$FLNeed?5GoblinPoint?$FN?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BH@LEPLDKKA@?$FLNeed?5GoblinPoint?$FN?3?5?$CFd?$AA@ DB '[Need Gobl'
	DB	'inPoint]: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MKENDDB@?$FLNeed?5WCoinP?$FN?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BC@MKENDDB@?$FLNeed?5WCoinP?$FN?3?5?$CFd?$AA@ DB '[Need WCoinP]: %'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FKJCFFGC@?$FLNeed?5WCoinC?$FN?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BC@FKJCFFGC@?$FLNeed?5WCoinC?$FN?3?5?$CFd?$AA@ DB '[Need WCoinC]: '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DNAEPCGG@?$FLNeed?5Credit?$FN?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BC@DNAEPCGG@?$FLNeed?5Credit?$FN?3?5?$CFd?$AA@ DB '[Need Credit]: '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IEMKEHON@?$EA?$FLPremium?5Status?$FN?5?$CL?5?$CFd?5Day?$AA@
CONST	SEGMENT
??_C@_0BL@IEMKEHON@?$EA?$FLPremium?5Status?$FN?5?$CL?5?$CFd?5Day?$AA@ DB '@'
	DB	'[Premium Status] + %d Day', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JOEEOEIN@?$FLNeed?5Zen?$FN?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@JOEEOEIN@?$FLNeed?5Zen?$FN?3?5?$CFd?$AA@ DB '[Need Zen]: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCMKKGGG@?$FLWCoin?$FN?3?5?$CL?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@GCMKKGGG@?$FLWCoin?$FN?3?5?$CL?$CFd?$AA@ DB '[WCoin]: +%d', 00H ; `string'
CONST	ENDS
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0N@NKBNNBDB@?$FLCredit?$FN?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@NKBNNBDB@?$FLCredit?$FN?3?5?$CFd?$AA@ DB '[Credit]: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JDGJNJPO@?$FLCredit?$FN?3?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@JDGJNJPO@?$FLCredit?$FN?3?5?$CFs?5?$CFd?$AA@ DB '[Credit]: %s %'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IIMMMKAG@?$FLAutoParty?$FN?3?5Recv?5Off?5?$AA@
CONST	SEGMENT
??_C@_0BH@IIMMMKAG@?$FLAutoParty?$FN?3?5Recv?5Off?5?$AA@ DB '[AutoParty]:'
	DB	' Recv Off ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FGLEBLPD@?$FL?4?3?3AutoParty?3?3?4?$FN?$FL?$CFs?$FN?5?$CFs?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BP@FGLEBLPD@?$FL?4?3?3AutoParty?3?3?4?$FN?$FL?$CFs?$FN?5?$CFs?5?$CFd?5?$CFd?$AA@ DB '['
	DB	'.::AutoParty::.][%s] %s %d %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EKOHGCJA@?$FLCredits?$FN?3?5?$CL?$CFd?5?$AA@
CONST	SEGMENT
??_C@_0BA@EKOHGCJA@?$FLCredits?$FN?3?5?$CL?$CFd?5?$AA@ DB '[Credits]: +%d'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BIOCBJNL@?$FLCredits?$FN?3?5?$CFs?5?$CFd?5?$AA@
CONST	SEGMENT
??_C@_0BC@BIOCBJNL@?$FLCredits?$FN?3?5?$CFs?5?$CFd?5?$AA@ DB '[Credits]: '
	DB	'%s %d ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FAJCCKAC@?$FLUnBanAllChat?$FN?$AA@
CONST	SEGMENT
??_C@_0P@FAJCCKAC@?$FLUnBanAllChat?$FN?$AA@ DB '[UnBanAllChat]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGPIBDPG@?$FLUnBanAllChat?$FN?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BD@MGPIBDPG@?$FLUnBanAllChat?$FN?3?5?$CFs?$AA@ DB '[UnBanAllChat]:'
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCDDKKH@?$FLUnBanPost?$FN?$AA@
CONST	SEGMENT
??_C@_0M@KCDDKKH@?$FLUnBanPost?$FN?$AA@ DB '[UnBanPost]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NGALHOKC@?$FLUnBanPost?$FN?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BA@NGALHOKC@?$FLUnBanPost?$FN?3?5?$CFs?$AA@ DB '[UnBanPost]: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHFBAJJG@?$FLUnBanChat?$FN?$AA@
CONST	SEGMENT
??_C@_0M@MHFBAJJG@?$FLUnBanChat?$FN?$AA@ DB '[UnBanChat]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EAGNBPNG@?$FLUnBanChat?$FN?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BA@EAGNBPNG@?$FLUnBanChat?$FN?3?5?$CFs?$AA@ DB '[UnBanChat]: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GPLFHNOP@?$FLBanAllChat?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BG@GPLFHNOP@?$FLBanAllChat?$FN?3?5?$CFd?5Hour?$AA@ DB '[BanAllChat'
	DB	']: %d Hour', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JEBLMDLC@?$FLBanAllChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BJ@JEBLMDLC@?$FLBanAllChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ DB '[Ban'
	DB	'AllChat]: %s %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPLJFOCG@?$FLBanChar?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BD@DPLJFOCG@?$FLBanChar?$FN?3?5?$CFd?5Hour?$AA@ DB '[BanChar]: %d '
	DB	'Hour', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LNHKFFGH@?$FLBanChar?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BG@LNHKFFGH@?$FLBanChar?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ DB '[BanCha'
	DB	'r]: %s %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DEANLHKB@?$FLBanPost?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BD@DEANLHKB@?$FLBanPost?$FN?3?5?$CFd?5Hour?$AA@ DB '[BanPost]: %d '
	DB	'Hour', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BKLAGHFJ@?$FLBanPost?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BG@BKLAGHFJ@?$FLBanPost?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ DB '[BanPos'
	DB	't]: %s %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NAIEPLMG@?$FLBanChat?$FN?3?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BD@NAIEPLMG@?$FLBanChat?$FN?3?5?$CFd?5Hour?$AA@ DB '[BanChat]: %d '
	DB	'Hour', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JPIAIBJF@?$FLBanChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
CONST	SEGMENT
??_C@_0BG@JPIAIBJF@?$FLBanChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@ DB '[BanCha'
	DB	't]: %s %d Hour', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FJGOBKEK@User?5SetPosition?$AA@
CONST	SEGMENT
??_C@_0BB@FJGOBKEK@User?5SetPosition?$AA@ DB 'User SetPosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@PLNMJHPN@?$KH?$KJ?$KH?$LK?$DP?$KH?Y?5?$KH?$KC?$KH?h?$DP?$DP?$KH?$KB?$KH?W?$KB?$KE?$KH?$LA?5?$KH?$KJ?$KH?h?$KH?$KB?$KH?Y?5@
CONST	SEGMENT
??_C@_0FH@PLNMJHPN@?$KH?$KJ?$KH?$LK?$DP?$KH?Y?5?$KH?$KC?$KH?h?$DP?$DP?$KH?$KB?$KH?W?$KB?$KE?$KH?$LA?5?$KH?$KJ?$KH?h?$KH?$KB?$KH?Y?5@ DB 0a7H
	DB	0a9H, 0a7H, 0baH, '?', 0a7H, 0d9H, ' ', 0a7H, 0a2H, 0a7H, 0e8H
	DB	'??', 0a7H, 0a1H, 0a7H, 0d7H, 0a1H, 0a4H, 0a7H, 0b0H, ' ', 0a7H
	DB	0a9H, 0a7H, 0e8H, 0a7H, 0a1H, 0a7H, 0d9H, ' ', 0a7H, 0a2H, 0a7H
	DB	0a3H, 0a7H, 0a9H, '?', 0a7H, 0a1H, 0a7H, 0aeH, '?? ', 0a7H, 0a9H
	DB	0a7H, 0b4H, ' ?', 0a7H, 0e8H, ' ?', 0a7H, 0eaH, '?', 0a7H, 0a1H
	DB	'?', 0a7H, 0b1H, '?', 0a7H, 0bbH, '. (?', 0a7H, 0b5H, '??', 0a7H
	DB	0a5H, 0a7H, 0bcH, '?', 0a7H, 0d6H, ':%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLFLLIFN@?1?$DP?$DP?$KH?$KG?$KH?$KK?$KH?W?$DP?$DP?$KH?$KD?$AA@
CONST	SEGMENT
??_C@_0O@GLFLLIFN@?1?$DP?$DP?$KH?$KG?$KH?$KK?$KH?W?$DP?$DP?$KH?$KD?$AA@ DB '/'
	DB	'??', 0a7H, 0a6H, 0a7H, 0aaH, 0a7H, 0d7H, '??', 0a7H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@HMKKLLPO@?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$KH?$KC?$KB?h?$DP?$KH?W?$KB?c?$DP?5?$KH?W?$DP?$DP?$KH?$KD?$DP?$KH?$KJ?$DP@
CONST	SEGMENT
??_C@_0EG@HMKKLLPO@?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$KH?$KC?$KB?h?$DP?$KH?W?$KB?c?$DP?5?$KH?W?$DP?$DP?$KH?$KD?$DP?$KH?$KJ?$DP@ DB 0a7H
	DB	0a5H, '?', 0a7H, 0d7H, '?', 0a7H, 0a6H, 0a7H, 0afH, ' ', 0a7H, 0a2H
	DB	0a1H, 0e8H, '?', 0a7H, 0d7H, 0a1H, 0e3H, '? ', 0a7H, 0d7H, '??'
	DB	0a7H, 0a3H, '?', 0a7H, 0a9H, '?', 0a7H, 0ecH, '?', 0a7H, 0a1H, '?'
	DB	0a7H, 0b1H, '?', 0a7H, 0bbH, '. ?', 0a7H, 0e7H, 0a1H, 0a4H, 0a7H
	DB	0b0H, ' ??', 0a1H, 0e3H, 0a7H, 0d2H, ' ', 0a7H, 0a9H, 0a7H, 0b1H
	DB	'???', 0a7H, 0d5H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OGJFDCBA@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@
CONST	SEGMENT
??_C@_0BN@OGJFDCBA@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 'HP', 0a7H, 0aaH, 0a7H, 0d7H
	DB	'?', 0a1H, 0edH, '?', 0a7H, 0a4H, 0a1H, 0e3H, '???', 0a7H, 0a2H
	DB	0a1H, 0e8H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GFGEBJIN@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h@
CONST	SEGMENT
??_C@_0CB@GFGEBJIN@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 'HP', 0a7H, 0a4H, 0a7H, 0acH
	DB	'?', 0a7H, 0d9H, 0a7H, 0aaH, 0a7H, 0d7H, '?', 0a1H, 0edH, 0a1H
	DB	0a4H, '???', 0a7H, 0a2H, 0a1H, 0e8H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GCCAHPBB@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@
CONST	SEGMENT
??_C@_0BK@GCCAHPBB@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 'HP', 0a7H, 0aaH, 0a7H, 0d7H
	DB	'?', 0a1H, 0edH, 0a1H, 0a4H, '???', 0a7H, 0a2H, 0a1H, 0e8H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MMIEACNF@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$DP?$DP?$KH?$KC?$KB?h?$AA@
CONST	SEGMENT
??_C@_0BA@MMIEACNF@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$DP?$DP?$KH?$KC?$KB?h?$AA@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, 'HP??', 0a7H, 0a2H, 0a1H, 0e8H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@PHLKPBLC@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?5?$DN?5?$CF@
CONST	SEGMENT
??_C@_0EF@PHLKPBLC@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?5?$DN?5?$CF@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, ' HP ', 0a7H, 0a4H, 0a7H, 0acH
	DB	'?', 0a7H, 0d9H, 0a7H, 0aaH, 0a7H, 0d7H, '?', 0a1H, 0edH, 0a1H
	DB	0a4H, '? = %d ', 0a7H, 0aaH, 0a7H, 0d7H, '?', 0a1H, 0edH, 0a1H
	DB	0a4H, '? = %d ', 0a7H, 0aaH, 0a7H, 0d7H, '?', 0a1H, 0edH, '?', 0a7H
	DB	0a4H, 0a1H, 0e3H, '? = %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MDPJCDCO@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$DN?5?$CF7?40f?5?1?5?$CF7?40f?$AA@
CONST	SEGMENT
??_C@_0BL@MDPJCDCO@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$DN?5?$CF7?40f?5?1?5?$CF7?40f?$AA@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, ' HP = %7.0f / %7.0f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
CONST	SEGMENT
??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@ DB '['
	DB	'KUNDUN] Use GM Command -> [ %s ]', 09H, '[ %s ]', 09H, '[ %s '
	DB	'] : %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GPMLDEKO@?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$DP?$KH?W?$KB?$MA?$KH?S?$AA@
CONST	SEGMENT
??_C@_0BG@GPMLDEKO@?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$DP?$KH?W?$KB?$MA?$KH?S?$AA@ DB 0a7H
	DB	0a5H, 0a7H, 0e1H, '?', 0a7H, 0b2H, '?', 0a7H, 0e5H, 0a7H, 0a6H
	DB	0a7H, 0a3H, '?', 0a7H, 0d7H, 0a1H, 0c0H, 0a7H, 0d3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCADLMAF@off?$AA@
CONST	SEGMENT
??_C@_03MCADLMAF@off?$AA@ DB 'off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LIELOMNJ@on?$AA@
CONST	SEGMENT
??_C@_02LIELOMNJ@on?$AA@ DB 'on', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KELDLAKD@Set?5GuildWar?$AA@
CONST	SEGMENT
??_C@_0N@KELDLAKD@Set?5GuildWar?$AA@ DB 'Set GuildWar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MOJFCJJN@Free?5Ban?9Chatting?$AA@
CONST	SEGMENT
??_C@_0BC@MOJFCJJN@Free?5Ban?9Chatting?$AA@ DB 'Free Ban-Chatting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KILIGKJC@Ban?5Chatting?$AA@
CONST	SEGMENT
??_C@_0N@KILIGKJC@Ban?5Chatting?$AA@ DB 'Ban Chatting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GPDFKJGB@End?5GuildWar?$AA@
CONST	SEGMENT
??_C@_0N@GPDFKJGB@End?5GuildWar?$AA@ DB 'End GuildWar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DPMLLFMM@Stop?5BattleSoccer?$AA@
CONST	SEGMENT
??_C@_0BC@DPMLLFMM@Stop?5BattleSoccer?$AA@ DB 'Stop BattleSoccer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EFECDMGE@Start?5BattleSoccer?$AA@
CONST	SEGMENT
??_C@_0BD@EFECDMGE@Start?5BattleSoccer?$AA@ DB 'Start BattleSoccer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HIAMIIED@Guild?5SetPosition?$AA@
CONST	SEGMENT
??_C@_0BC@HIAMIIED@Guild?5SetPosition?$AA@ DB 'Guild SetPosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BCPFBGGF@Guild?5Disconnect?$AA@
CONST	SEGMENT
??_C@_0BB@BCPFBGGF@Guild?5Disconnect?$AA@ DB 'Guild Disconnect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MEJDKKFB@User?5Disconnect?$AA@
CONST	SEGMENT
??_C@_0BA@MEJDKKFB@User?5Disconnect?$AA@ DB 'User Disconnect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NPPBDIDN@User?5Stat?5?$CIconnection?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@NPPBDIDN@User?5Stat?5?$CIconnection?$CJ?$AA@ DB 'User Stat (con'
	DB	'nection)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DPOHDNID@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
CONST	SEGMENT
??_C@_0EA@DPOHDNID@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@ DB 'U'
	DB	'se GM Command -> [ %s ]', 09H, '[ %s ]', 09H, '[ %s ] / Targe'
	DB	't : [%s][%s] : %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HBGDJJNF@User?5Tracking?$AA@
CONST	SEGMENT
??_C@_0O@HBGDJJNF@User?5Tracking?$AA@ DB 'User Tracking', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JKKCDFDH@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$DP?$KH?$KE?$KH?$KB?$KH?$LN?$AA@
CONST	SEGMENT
??_C@_0BE@JKKCDFDH@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$DP?$KH?$KE?$KH?$KB?$KH?$LN?$AA@ DB '%'
	DB	's : ', 0a1H, 0e3H, 0a7H, 0a7H, '?', 0a7H, 0a4H, '?', 0a7H, 0a4H
	DB	0a7H, 0a1H, 0a7H, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CAJKHEN@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$KH?$KJ?$KH?$LK?$KH?$KC?$DP?$AA@
CONST	SEGMENT
??_C@_0BE@CAJKHEN@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$KH?$KJ?$KH?$LK?$KH?$KC?$DP?$AA@ DB '%'
	DB	's : ', 0a1H, 0e3H, 0a7H, 0a7H, '?', 0a7H, 0a4H, 0a7H, 0a9H, 0a7H
	DB	0baH, 0a7H, 0a2H, '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OBAKBBAF@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
CONST	SEGMENT
??_C@_0EB@OBAKBBAF@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@ DB 'U'
	DB	'se GM Command -> [ %s ]', 09H, '[ %s ]', 09H, '[ %s ] / Targe'
	DB	't : [%s][%s] : %s ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIJMFKGB@User?5Watching?$AA@
CONST	SEGMENT
??_C@_0O@MIJMFKGB@User?5Watching?$AA@ DB 'User Watching', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
CONST	SEGMENT
??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@ DB 'U'
	DB	'se GM Command -> [ %s ]', 09H, '[ %s ]', 09H, '[ %s ] : %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKKMDPJD@FIRECRACK?4?$AA@
CONST	SEGMENT
??_C@_0L@FKKMDPJD@FIRECRACK?4?$AA@ DB 'FIRECRACK.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CHFHKJND@Ability?5Debug?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BC@CHFHKJND@Ability?5Debug?3?5?$CFs?$AA@ DB 'Ability Debug: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCDBBDDL@Off?$AA@
CONST	SEGMENT
??_C@_03GCDBBDDL@Off?$AA@ DB 'Off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IAAGKKDJ@On?$AA@
CONST	SEGMENT
??_C@_02IAAGKKDJ@On?$AA@ DB 'On', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPGEEBEI@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1ms_re@
CONST	SEGMENT
??_C@_0CH@MPGEEBEI@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1ms_re@ DB 'U'
	DB	'se Test Command [%s][%s] /ms_reset %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CJOPDKEC@Master?5Skill?5Reset?$AA@
CONST	SEGMENT
??_C@_0BD@CJOPDKEC@Master?5Skill?5Reset?$AA@ DB 'Master Skill Reset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KJEOLPEF@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@
CONST	SEGMENT
??_C@_0DD@KJEOLPEF@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@ DB 'U'
	DB	'se Test Command [%s][%s] /mlpoint %d -> Success!!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EDNEDAPJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@
CONST	SEGMENT
??_C@_0DA@EDNEDAPJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@ DB 'U'
	DB	'se Test Command [%s][%s] /mlpoint %d -> Fail!!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FKDLGCCJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@
CONST	SEGMENT
??_C@_0DE@FKDLGCCJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@ DB 'U'
	DB	'se Test Command [%s][%s] /masterlevel %d -> Fail!!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JMPPEKFD@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@
CONST	SEGMENT
??_C@_0DH@JMPPEKFD@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@ DB 'U'
	DB	'se Test Command [%s][%s] /masterlevel %d -> Success!!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BFOILIFL@HP?3?$CF7?41f?1?$CF7?41f?5?0?5SD?3?$CFd?1?$CFd?$AA@
CONST	SEGMENT
??_C@_0BK@BFOILIFL@HP?3?$CF7?41f?1?$CF7?41f?5?0?5SD?3?$CFd?1?$CFd?$AA@ DB 'H'
	DB	'P:%7.1f/%7.1f , SD:%d/%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FFLABGDE@?$FL?$DP?$DP?$DP?$KH?V?$DP?$KH?h?$KH?$KF?$DP?$DP?$DP?$KH?$KC?$KB?h?$FN?5?$CFd?5?9?$DO?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BN@FFLABGDE@?$FL?$DP?$DP?$DP?$KH?V?$DP?$KH?h?$KH?$KF?$DP?$DP?$DP?$KH?$KC?$KB?h?$FN?5?$CFd?5?9?$DO?5?$CFd?$AA@ DB '['
	DB	'???', 0a7H, 0d6H, '?', 0a7H, 0e8H, 0a7H, 0a5H, '???', 0a7H, 0a2H
	DB	0a1H, 0e8H, '] %d -> %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@DAKDBCPD@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$DP?$KH?U?$KH?$KC?$KB?h?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH@
CONST	SEGMENT
??_C@_0CM@DAKDBCPD@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$DP?$KH?U?$KH?$KC?$KB?h?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH@ DB '['
	DB	0a7H, 0a8H, 0a7H, 0d8H, 0a7H, 0d7H, 0a1H, 0c0H, '?', 0a7H, 0d5H
	DB	0a7H, 0a2H, 0a1H, 0e8H, '??', 0a1H, 0c0H, 0a7H, 0d7H, 0a1H, 0a4H
	DB	0a7H, 0a3H, 0a1H, 0e3H, 0a7H, 0a7H, '?', 0a7H, 0b4H, '] %d -> '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PNECBEHH@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$KB?$MA?$KH?S?$DP?$DP?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH?$LE@
CONST	SEGMENT
??_C@_0CL@PNECBEHH@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$KB?$MA?$KH?S?$DP?$DP?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH?$LE@ DB '['
	DB	0a7H, 0a8H, 0a7H, 0d8H, 0a7H, 0d7H, 0a1H, 0c0H, 0a1H, 0c0H, 0a7H
	DB	0d3H, '????', 0a1H, 0c0H, 0a7H, 0d7H, 0a1H, 0a4H, 0a7H, 0a3H, 0a1H
	DB	0e3H, 0a7H, 0a7H, '?', 0a7H, 0b4H, '] %d -> %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@
CONST	SEGMENT
??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@ DB 0a7H
	DB	0a1H, 0a7H, 0eeH, 0a7H, 0a2H, 0a7H, 0e9H, 0a7H, 0d7H, '??', 0a7H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EBIMJKMG@3?$KH?$KD?$KH?i?$KH?$KB?$KH?n?$KH?$KC?$KH?i?5?$DP?$DP?$KB?c?$KH?j?$AA@
CONST	SEGMENT
??_C@_0BF@EBIMJKMG@3?$KH?$KD?$KH?i?$KH?$KB?$KH?n?$KH?$KC?$KH?i?5?$DP?$DP?$KB?c?$KH?j?$AA@ DB '3'
	DB	0a7H, 0a3H, 0a7H, 0e9H, 0a7H, 0a1H, 0a7H, 0eeH, 0a7H, 0a2H, 0a7H
	DB	0e9H, ' ??', 0a1H, 0e3H, 0a7H, 0eaH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CJJPFILP@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?4?4?4?$AA@
CONST	SEGMENT
??_C@_0M@CJJPFILP@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?4?4?4?$AA@ DB 0a7H, 0a1H, 0a7H
	DB	0eeH, 0a7H, 0a2H, 0a7H, 0e9H, '...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EIKIGGHM@Modi?4Stat?5Complete?$AA@
CONST	SEGMENT
??_C@_0BD@EIKIGGHM@Modi?4Stat?5Complete?$AA@ DB 'Modi.Stat Complete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@IOPOKGDJ@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@
CONST	SEGMENT
??_C@_0DM@IOPOKGDJ@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@ DB '?'
	DB	'?', 0a7H, 0a6H, 0a7H, 0aaH, ' ??', 0a7H, 0a2H, 0a1H, 0e8H, 0a7H
	DB	0a1H, 0a7H, 0aeH, ' ', 0a7H, 0a1H, 0a7H, 0c1H, 0a7H, 0d7H, 0a7H
	DB	0eaH, ' ?', 0a7H, 0a8H, '?', 0a7H, 0a1H, '?', 0a7H, 0b1H, '?', 0a7H
	DB	0bbH, '.(', 0a1H, 0c0H, 0a7H, 0d3H, '??', 0a1H, 0e3H, '?', 0a1H
	DB	0edH, 0a7H, 0aeH, 0a7H, 0d7H, 0a7H, 0d7H, ')', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EONAICLH@?$KH?$KB?$KH?W?$KH?$KK?$KH?V?$KH?$KK?$KH?V?5?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$DP?$DP?$KH?$KG?$KH?$KK?5?$KH@
CONST	SEGMENT
??_C@_0DE@EONAICLH@?$KH?$KB?$KH?W?$KH?$KK?$KH?V?$KH?$KK?$KH?V?5?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$DP?$DP?$KH?$KG?$KH?$KK?5?$KH@ DB 0a7H
	DB	0a1H, 0a7H, 0d7H, 0a7H, 0aaH, 0a7H, 0d6H, 0a7H, 0aaH, 0a7H, 0d6H
	DB	' ', 0a7H, 0a5H, '?', 0a7H, 0d7H, '?', 0a7H, 0a6H, 0a7H, 0afH, ' '
	DB	'??', 0a7H, 0a6H, 0a7H, 0aaH, ' ', 0a7H, 0a1H, 0a7H, 0d9H, '??'
	DB	0a7H, 0a2H, 0a1H, 0e8H, ' ?', 0a7H, 0b1H, 0a1H, 0a4H, 0a7H, 0d2H
	DB	'!!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MCALDNDC@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@
CONST	SEGMENT
??_C@_0DH@MCALDNDC@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@ DB '?'
	DB	'?', 0a7H, 0a6H, 0a7H, 0aaH, ' ??', 0a7H, 0a2H, 0a1H, 0e8H, 0a7H
	DB	0a1H, 0a7H, 0aeH, ' ', 0a7H, 0a1H, 0a7H, 0c1H, 0a7H, 0d7H, 0a7H
	DB	0eaH, ' ?', 0a7H, 0a8H, '?', 0a7H, 0a1H, '?', 0a7H, 0b1H, '?', 0a7H
	DB	0bbH, '.(', 0a7H, 0a9H, 0a7H, 0b7H, 0a7H, 0a4H, 0a7H, 0acH, 0a1H
	DB	0e3H, 0a7H, 0ecH, ')', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KAGIKAMB@?$DP?$KH?$KN?$DP?$KH?h?5?$DP?$KH?j?$DP?$KH?$KD?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?4?4?$AA@
CONST	SEGMENT
??_C@_0BM@KAGIKAMB@?$DP?$KH?$KN?$DP?$KH?h?5?$DP?$KH?j?$DP?$KH?$KD?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?4?4?$AA@ DB '?'
	DB	0a7H, 0adH, '?', 0a7H, 0e8H, ' ?', 0a7H, 0eaH, '?', 0a7H, 0a3H
	DB	' ?', 0a7H, 0a8H, 0a7H, 0a1H, 0a7H, 0aeH, 0a7H, 0a6H, 0a7H, 0bdH
	DB	'..', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BOEHIACN@?$FL?5?$CFs?5?$FN?5?$KH?$KB?$KH?$KJ?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?5?$KH?$KB?$KH?$LA?$DP?$DP?$DP?$DP@
CONST	SEGMENT
??_C@_0CK@BOEHIACN@?$FL?5?$CFs?5?$FN?5?$KH?$KB?$KH?$KJ?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?5?$KH?$KB?$KH?$LA?$DP?$DP?$DP?$DP@ DB '['
	DB	' %s ] ', 0a7H, 0a1H, 0a7H, 0a9H, ' ?', 0a7H, 0a8H, 0a7H, 0a1H
	DB	0a7H, 0aeH, 0a7H, 0a6H, 0a7H, 0bdH, ' ', 0a7H, 0a1H, 0a7H, 0b0H
	DB	'???? = %d, %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GHLFOKPF@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KH?$KB?$KH?$KJ?5HP?5?$DN?5@
CONST	SEGMENT
??_C@_0CO@GHLFOKPF@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KH?$KB?$KH?$KJ?5HP?5?$DN?5@ DB '%'
	DB	'd ', 0a7H, 0a6H, '?', 0a1H, 0a4H, '??? ', 0a7H, 0d7H, 0a7H, 0e5H
	DB	'??', 0a7H, 0a6H, 0a7H, 0afH, 0a7H, 0a1H, 0a7H, 0a9H, ' HP = %'
	DB	'7.0f / %7.0f', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FJDGBDEH@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KB?c?$DP?5?$DP?$KH?j?$DP?$KH?$KB@
CONST	SEGMENT
??_C@_0CI@FJDGBDEH@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KB?c?$DP?5?$DP?$KH?j?$DP?$KH?$KB@ DB '%'
	DB	'd ', 0a7H, 0a6H, '?', 0a1H, 0a4H, '??? ', 0a7H, 0d7H, 0a7H, 0e5H
	DB	'??', 0a7H, 0a6H, 0a7H, 0afH, 0a1H, 0e3H, '? ?', 0a7H, 0eaH, '?'
	DB	0a7H, 0a1H, '?', 0a7H, 0b1H, '?', 0a7H, 0bbH, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BJPGHEGG@PK?$DP?$KH?e?$KH?$KG?$KH?$KD?$KH?W?$DP?5?$KH?$KE?$KH?$KM?$KB?$MA?$KH?S?$KH?$KK?$DP?5?$KH?$KJ?$KH?$LH?$DP?$KH?$LB@
CONST	SEGMENT
??_C@_0CF@BJPGHEGG@PK?$DP?$KH?e?$KH?$KG?$KH?$KD?$KH?W?$DP?5?$KH?$KE?$KH?$KM?$KB?$MA?$KH?S?$KH?$KK?$DP?5?$KH?$KJ?$KH?$LH?$DP?$KH?$LB@ DB 'P'
	DB	'K?', 0a7H, 0e5H, 0a7H, 0a6H, 0a7H, 0a3H, 0a7H, 0d7H, '? ', 0a7H
	DB	0a4H, 0a7H, 0acH, 0a1H, 0c0H, 0a7H, 0d3H, 0a7H, 0aaH, '? ', 0a7H
	DB	0a9H, 0a7H, 0b7H, '?', 0a7H, 0b1H, '?', 0a7H, 0bbH, '.', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\gmmng.cpp
CONST	ENDS
;	COMDAT ?ManagementProc@CGMMng@@QAEHPAUOBJECTSTRUCT@@PADH@Z
_TEXT	SEGMENT
_seps$ = -708						; size = 2
_ItemOpt$225534 = -704					; size = 4
_pMsg$225512 = -704					; size = 6
tv4569 = -704						; size = 4
_EBP7A0$224745 = -704					; size = 4
_EBP79C$224488 = -704					; size = 4
_iIndex$224276 = -704					; size = 4
_iDur$224170 = -704					; size = 4
tv10520 = -696						; size = 4
tv7095 = -696						; size = 4
_ItemSkill$225532 = -696				; size = 4
_iDur$224748 = -696					; size = 4
_EBP798$224487 = -696					; size = 4
_iOption1$224265 = -696					; size = 4
_iOptionType$224172 = -696				; size = 4
_ItemExc$225535 = -692					; size = 4
_iTokenNumber1$225060 = -692				; size = 4
_ItemIndex$224742 = -692				; size = 4
_EBP7A0$224489 = -692					; size = 4
_iClass$224379 = -692					; size = 4
_iAllPoints$224352 = -692				; size = 4
_iType$224275 = -692					; size = 4
_iTokenNumber$224224 = -692				; size = 4
_iLevel$224165 = -692					; size = 4
tv7086 = -688						; size = 4
_index$225530 = -688					; size = 4
_EBP7B4$224761 = -688					; size = 4
_EBP7B4$224505 = -688					; size = 4
_iOption3$224267 = -688					; size = 4
_iOption2$224167 = -688					; size = 4
_TargetName$225597 = -684				; size = 4
_iTargetIndex$225567 = -684				; size = 4
_iTargetIndex$225559 = -684				; size = 4
_iTargetIndex$225550 = -684				; size = 4
_ItemLuck$225533 = -684					; size = 4
_iTokenNumber1$225386 = -684				; size = 4
_EBP79C$224744 = -684					; size = 4
_iDur$224492 = -684					; size = 4
_iDexterity$224348 = -684				; size = 4
_iOption2$224266 = -684					; size = 4
_szSetItemName$224163 = -684				; size = 4
tv7428 = -680						; size = 4
_TargetIndex$225579 = -680				; size = 4
_iPremiumDay$225565 = -680				; size = 4
_iPremiumDay$225557 = -680				; size = 4
_iPremiumDay$225548 = -680				; size = 4
_ItemAncient$225536 = -680				; size = 4
_iTokenNumber1$225460 = -680				; size = 4
_iTokenNumber1$225445 = -680				; size = 4
_iTokenNumber1$225430 = -680				; size = 4
_TargetPass$225401 = -680				; size = 4
tv3980 = -680						; size = 4
_TargetIndex$225118 = -680				; size = 4
_iTokenNumber2$225061 = -680				; size = 4
tv3325 = -680						; size = 4
_unk0$224989 = -680					; size = 4
_iCoordY$224965 = -680					; size = 4
tv2046 = -680						; size = 4
_ItemType$224741 = -680					; size = 4
_lc151$224653 = -680					; size = 4
_pMsg$224620 = -680					; size = 7
_iItemPos$224599 = -680					; size = 4
_ItemIndex$224486 = -680				; size = 4
_iDexterity$224381 = -680				; size = 4
_iClass$224346 = -680					; size = 4
_iLevel$224264 = -680					; size = 4
_command_code$ = -680					; size = 4
tv7090 = -672						; size = 4
_ItemLevel$225531 = -672				; size = 4
_iLife$224853 = -672					; size = 4
_EBP7A4$224746 = -672					; size = 4
_EBP7A4$224490 = -672					; size = 4
_i$224277 = -672					; size = 4
_iDur$224269 = -672					; size = 4
_iOption3$224168 = -672					; size = 4
_EBP7A8$224747 = -668					; size = 1
_EBP7A8$224491 = -668					; size = 1
_NewOption$224268 = -668				; size = 1
_iStrength$224347 = -668				; size = 4
_iOption1$224166 = -668					; size = 4
tv9648 = -666						; size = 2
_pNotice$224976 = -664					; size = 272
_pNotice$224885 = -664					; size = 272
_pNotice$224873 = -664					; size = 272
_pNotice$224867 = -664					; size = 272
_pNotice$224847 = -664					; size = 272
_pNotice$224241 = -664					; size = 272
_pNotice$224238 = -664					; size = 272
_pNotice$224226 = -664					; size = 272
_pNotice$224220 = -664					; size = 272
_szTemp$224634 = -648					; size = 256
_szTemp$224594 = -648					; size = 256
_pItem$225000 = -604					; size = 212
_pMsg$225162 = -392					; size = 24
_szItemName$224336 = -388				; size = 20
_szItemName$224272 = -388				; size = 20
_string$ = -368						; size = 256
_szTemp$224728 = -112					; size = 100
_szText$224335 = -112					; size = 100
_szText$224271 = -112					; size = 100
_szItemName$225001 = -64				; size = 50
_addexp$224986 = -12					; size = 8
_QuestBitMask$224951 = -12				; size = 8
tv10669 = -8						; size = 4
tv10393 = -8						; size = 4
tv10389 = -8						; size = 4
tv10385 = -8						; size = 4
tv10381 = -8						; size = 4
tv10367 = -8						; size = 4
tv10362 = -8						; size = 4
tv10358 = -8						; size = 4
tv10354 = -8						; size = 4
tv9645 = -8						; size = 4
tv9643 = -8						; size = 4
tv9280 = -8						; size = 4
tv9246 = -8						; size = 4
tv9211 = -8						; size = 4
tv9176 = -8						; size = 4
tv8209 = -8						; size = 4
tv8129 = -8						; size = 4
tv8120 = -8						; size = 4
tv7255 = -8						; size = 4
tv7046 = -8						; size = 4
_iSocketSlot$224614 = -8				; size = 1
_EBP8FC$224600 = -8					; size = 1
_TargetIndex$225600 = -8				; size = 4
_TargetName$225576 = -8					; size = 4
_TargetName$225564 = -8					; size = 4
_TargetName$225556 = -8					; size = 4
_TargetName$225547 = -8					; size = 4
_type$225529 = -8					; size = 4
tv5115 = -8						; size = 4
tv4951 = -8						; size = 4
_TargetName$225459 = -8					; size = 4
_TargetName$225444 = -8					; size = 4
_TargetName$225429 = -8					; size = 4
_TargetName$225414 = -8					; size = 4
_TargetLogin$225400 = -8				; size = 4
_TargetName$225385 = -8					; size = 4
_iTokenNumber1$225312 = -8				; size = 4
_WCoin$225283 = -8					; size = 4
_iTokenNumber1$225274 = -8				; size = 4
_iTokenNumber1$225232 = -8				; size = 4
_iTokenNumber1$225116 = -8				; size = 4
_iTokenNumber1$225104 = -8				; size = 4
_TargetIndex$225094 = -8				; size = 4
_TargetIndex$225082 = -8				; size = 4
_iTokenNumber3$225062 = -8				; size = 4
_unk0$224995 = -8					; size = 4
_OptionType$224991 = -8					; size = 4
_iCoordX$224964 = -8					; size = 4
_bState$224828 = -8					; size = 4
_EBP798$224743 = -8					; size = 4
_iTokenNumber1$224697 = -8				; size = 4
_y$224619 = -8						; size = 4
_iItemPos$224604 = -8					; size = 4
_ItemType$224485 = -8					; size = 4
_iEffectValue$224460 = -8				; size = 4
_iIndex$224429 = -8					; size = 4
_iStrength$224380 = -8					; size = 4
_iEnergy$224350 = -8					; size = 4
_gamemaster_code$ = -8					; size = 4
_szCmdToken$ = -8					; size = 4
_pId$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_szCmd$ = 12						; size = 4
_aIndex$ = 16						; size = 4
?ManagementProc@CGMMng@@QAEHPAUOBJECTSTRUCT@@PADH@Z PROC ; CGMMng::ManagementProc, COMDAT
; _this$ = ecx

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 02 00
	00		 sub	 esp, 708		; 000002c4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 10	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00017	56		 push	 esi
  00018	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	57		 push	 edi

  0001c	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00021	8b f9		 mov	 edi, ecx

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _szCmd$[ebp]
  00026	66 89 85 3c fd
	ff ff		 mov	 WORD PTR _seps$[ebp], ax
  0002d	8b c1		 mov	 eax, ecx
  0002f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00032	89 55 f8	 mov	 DWORD PTR tv10669[ebp], edx
$LL1003@Management:
  00035	8a 10		 mov	 dl, BYTE PTR [eax]
  00037	40		 inc	 eax
  00038	84 d2		 test	 dl, dl
  0003a	75 f9		 jne	 SHORT $LL1003@Management
  0003c	2b 45 f8	 sub	 eax, DWORD PTR tv10669[ebp]

  0003f	48		 dec	 eax
  00040	3d f9 00 00 00	 cmp	 eax, 249		; 000000f9H
  00045	0f 87 1f 5f 00
	00		 ja	 $LN899@Management

  0004b	8d 95 90 fe ff
	ff		 lea	 edx, DWORD PTR _string$[ebp]
  00051	8b c1		 mov	 eax, ecx
  00053	2b d1		 sub	 edx, ecx
$LL903@Management:
  00055	8a 08		 mov	 cl, BYTE PTR [eax]
  00057	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  0005a	40		 inc	 eax
  0005b	84 c9		 test	 cl, cl
  0005d	75 f6		 jne	 SHORT $LL903@Management

  0005f	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _seps$[ebp]
  00065	50		 push	 eax
  00066	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR _string$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 _strtok
  00072	83 c4 08	 add	 esp, 8

  00075	50		 push	 eax
  00076	8b cf		 mov	 ecx, edi
  00078	89 45 f8	 mov	 DWORD PTR _szCmdToken$[ebp], eax
  0007b	e8 00 00 00 00	 call	 ?GetCmd@CGMMng@@QAEHPAD@Z ; CGMMng::GetCmd

  00080	8b 4d f8	 mov	 ecx, DWORD PTR _szCmdToken$[ebp]
  00083	8d 55 f8	 lea	 edx, DWORD PTR _gamemaster_code$[ebp]
  00086	52		 push	 edx
  00087	8d 85 58 fd ff
	ff		 lea	 eax, DWORD PTR _command_code$[ebp]
  0008d	50		 push	 eax
  0008e	51		 push	 ecx
  0008f	8b cf		 mov	 ecx, edi
  00091	e8 00 00 00 00	 call	 ?GetData@CGMMng@@QAEEPADAAH1@Z ; CGMMng::GetData
  00096	84 c0		 test	 al, al

  00098	0f 84 cc 5e 00
	00		 je	 $LN899@Management

  0009e	8b 55 f8	 mov	 edx, DWORD PTR _gamemaster_code$[ebp]
  000a1	56		 push	 esi
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?CheckAuthorityCondition@@YA_NHPAUOBJECTSTRUCT@@@Z ; CheckAuthorityCondition
  000a8	83 c4 08	 add	 esp, 8
  000ab	84 c0		 test	 al, al

  000ad	0f 84 b7 5e 00
	00		 je	 $LN899@Management

  000b3	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _command_code$[ebp]
  000b9	83 c0 9c	 add	 eax, -100		; ffffff9cH
  000bc	3d 4e 02 00 00	 cmp	 eax, 590		; 0000024eH
  000c1	0f 87 a3 5e 00
	00		 ja	 $LN899@Management
  000c7	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN1004@Management[eax]
  000ce	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1157@Management[eax*4]
$LN894@Management:
  000d5	8b f3		 mov	 esi, ebx
  000d7	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  000dd	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
$LL893@Management:

  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e7	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  000ef	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  000f7	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  000ff	6a 00		 push	 0
  00101	6a 00		 push	 0
  00103	6a ff		 push	 -1
  00105	6a 00		 push	 0
  00107	6a 00		 push	 0
  00109	6a 00		 push	 0
  0010b	6a 00		 push	 0
  0010d	6a 00		 push	 0
  0010f	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  00114	51		 push	 ecx
  00115	52		 push	 edx
  00116	50		 push	 eax
  00117	53		 push	 ebx
  00118	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0011d	83 c4 34	 add	 esp, 52			; 00000034H
  00120	4f		 dec	 edi
  00121	75 bf		 jne	 SHORT $LL893@Management

  00123	e9 42 5e 00 00	 jmp	 $LN899@Management
$LN890@Management:
  00128	8b f3		 mov	 esi, ebx
  0012a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  00130	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00135	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL889@Management:

  00140	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00145	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  0014d	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  00155	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  0015d	6a 00		 push	 0
  0015f	6a 00		 push	 0
  00161	6a ff		 push	 -1
  00163	6a 00		 push	 0
  00165	6a 00		 push	 0
  00167	6a 00		 push	 0
  00169	6a 00		 push	 0
  0016b	6a 00		 push	 0
  0016d	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  00172	51		 push	 ecx
  00173	52		 push	 edx
  00174	50		 push	 eax
  00175	53		 push	 ebx
  00176	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0017b	83 c4 34	 add	 esp, 52			; 00000034H
  0017e	4f		 dec	 edi
  0017f	75 bf		 jne	 SHORT $LL889@Management

  00181	e9 e4 5d 00 00	 jmp	 $LN899@Management
$LN886@Management:

  00186	be 14 00 00 00	 mov	 esi, 20			; 00000014H
  0018b	eb 03 8d 49 00	 npad	 5
$LL885@Management:

  00190	53		 push	 ebx
  00191	e8 00 00 00 00	 call	 ?MakeRandomSetItem@@YAXH@Z ; MakeRandomSetItem
  00196	83 c4 04	 add	 esp, 4
  00199	4e		 dec	 esi
  0019a	75 f4		 jne	 SHORT $LL885@Management

  0019c	e9 c9 5d 00 00	 jmp	 $LN899@Management
$LN882@Management:

  001a1	8b cf		 mov	 ecx, edi
  001a3	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  001a8	89 85 54 fd ff
	ff		 mov	 DWORD PTR _szSetItemName$224163[ebp], eax

  001ae	85 c0		 test	 eax, eax

  001b0	0f 84 b4 5d 00
	00		 je	 $LN899@Management

  001b6	8b cf		 mov	 ecx, edi
  001b8	c7 85 60 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _iOption3$224168[ebp], 0
  001c2	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  001c7	8b cf		 mov	 ecx, edi
  001c9	89 85 4c fd ff
	ff		 mov	 DWORD PTR _iLevel$224165[ebp], eax
  001cf	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  001d4	8b cf		 mov	 ecx, edi
  001d6	89 85 40 fd ff
	ff		 mov	 DWORD PTR _iDur$224170[ebp], eax
  001dc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  001e1	8b cf		 mov	 ecx, edi
  001e3	89 85 64 fd ff
	ff		 mov	 DWORD PTR _iOption1$224166[ebp], eax
  001e9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  001ee	8b cf		 mov	 ecx, edi
  001f0	89 85 50 fd ff
	ff		 mov	 DWORD PTR _iOption2$224167[ebp], eax
  001f6	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  001fb	8b cf		 mov	 ecx, edi
  001fd	8b f0		 mov	 esi, eax
  001ff	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  00204	89 85 48 fd ff
	ff		 mov	 DWORD PTR _iOptionType$224172[ebp], eax

  0020a	83 fe 04	 cmp	 esi, 4
  0020d	75 0c		 jne	 SHORT $LN880@Management

  0020f	c7 85 60 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _iOption3$224168[ebp], 1
  00219	eb 31		 jmp	 SHORT $LN874@Management
$LN880@Management:

  0021b	83 fe 08	 cmp	 esi, 8
  0021e	75 0c		 jne	 SHORT $LN878@Management

  00220	c7 85 60 fd ff
	ff 02 00 00 00	 mov	 DWORD PTR _iOption3$224168[ebp], 2
  0022a	eb 20		 jmp	 SHORT $LN874@Management
$LN878@Management:

  0022c	83 fe 0c	 cmp	 esi, 12			; 0000000cH
  0022f	75 0c		 jne	 SHORT $LN876@Management

  00231	c7 85 60 fd ff
	ff 03 00 00 00	 mov	 DWORD PTR _iOption3$224168[ebp], 3
  0023b	eb 0f		 jmp	 SHORT $LN874@Management
$LN876@Management:

  0023d	83 fe 10	 cmp	 esi, 16			; 00000010H
  00240	75 0a		 jne	 SHORT $LN874@Management

  00242	c7 85 60 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR _iOption3$224168[ebp], 4
$LN874@Management:

  0024c	33 ff		 xor	 edi, edi
  0024e	8b ff		 npad	 2
$LL873@Management:

  00250	8b b5 54 fd ff
	ff		 mov	 esi, DWORD PTR _szSetItemName$224163[ebp]
  00256	6a 01		 push	 1
  00258	57		 push	 edi
  00259	b9 00 00 00 00	 mov	 ecx, OFFSET ?gSetItemOption@@3VCSetItemOption@@A ; gSetItemOption
  0025e	e8 00 00 00 00	 call	 ?GetSetOptionName@CSetItemOption@@QAEPADHH@Z ; CSetItemOption::GetSetOptionName
$LL1005@Management:
  00263	8a 08		 mov	 cl, BYTE PTR [eax]
  00265	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00267	75 1a		 jne	 SHORT $LN1006@Management
  00269	84 c9		 test	 cl, cl
  0026b	74 12		 je	 SHORT $LN1007@Management
  0026d	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00270	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00273	75 0e		 jne	 SHORT $LN1006@Management
  00275	83 c0 02	 add	 eax, 2
  00278	83 c6 02	 add	 esi, 2
  0027b	84 c9		 test	 cl, cl
  0027d	75 e4		 jne	 SHORT $LL1005@Management
$LN1007@Management:
  0027f	33 c0		 xor	 eax, eax
  00281	eb 05		 jmp	 SHORT $LN1008@Management
$LN1006@Management:
  00283	1b c0		 sbb	 eax, eax
  00285	83 d8 ff	 sbb	 eax, -1
$LN1008@Management:
  00288	85 c0		 test	 eax, eax
  0028a	0f 85 8b 00 00
	00		 jne	 $LN870@Management

  00290	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR _iOptionType$224172[ebp]
  00296	85 c0		 test	 eax, eax
  00298	75 17		 jne	 SHORT $LN869@Management

  0029a	e8 00 00 00 00	 call	 _rand
  0029f	99		 cdq
  002a0	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  002a5	f7 f9		 idiv	 ecx
  002a7	33 c9		 xor	 ecx, ecx
  002a9	83 fa 50	 cmp	 edx, 80			; 00000050H
  002ac	0f 9d c1	 setge	 cl

  002af	eb 08		 jmp	 SHORT $LN1123@Management
$LN869@Management:

  002b1	33 c9		 xor	 ecx, ecx
  002b3	83 f8 01	 cmp	 eax, 1
  002b6	0f 95 c1	 setne	 cl
$LN1123@Management:

  002b9	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _iOption3$224168[ebp]
  002bf	8d 0c 8d 05 00
	00 00		 lea	 ecx, DWORD PTR [ecx*4+5]
  002c6	51		 push	 ecx
  002c7	8b 8d 50 fd ff
	ff		 mov	 ecx, DWORD PTR _iOption2$224167[ebp]
  002cd	6a 00		 push	 0
  002cf	6a ff		 push	 -1
  002d1	52		 push	 edx
  002d2	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR _iOption1$224166[ebp]
  002d8	51		 push	 ecx
  002d9	8b 8d 40 fd ff
	ff		 mov	 ecx, DWORD PTR _iDur$224170[ebp]
  002df	52		 push	 edx
  002e0	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR _iLevel$224165[ebp]
  002e6	8b c3		 mov	 eax, ebx
  002e8	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  002ee	51		 push	 ecx
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002f5	52		 push	 edx
  002f6	0f b6 94 08 46
	01 00 00	 movzx	 edx, BYTE PTR [eax+ecx+326]
  002fe	57		 push	 edi
  002ff	52		 push	 edx
  00300	0f b6 94 08 44
	01 00 00	 movzx	 edx, BYTE PTR [eax+ecx+324]
  00308	0f b6 84 08 49
	01 00 00	 movzx	 eax, BYTE PTR [eax+ecx+329]
  00310	52		 push	 edx
  00311	50		 push	 eax
  00312	53		 push	 ebx
  00313	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  00318	83 c4 34	 add	 esp, 52			; 00000034H
$LN870@Management:

  0031b	8b b5 54 fd ff
	ff		 mov	 esi, DWORD PTR _szSetItemName$224163[ebp]
  00321	6a 02		 push	 2
  00323	57		 push	 edi
  00324	b9 00 00 00 00	 mov	 ecx, OFFSET ?gSetItemOption@@3VCSetItemOption@@A ; gSetItemOption
  00329	e8 00 00 00 00	 call	 ?GetSetOptionName@CSetItemOption@@QAEPADHH@Z ; CSetItemOption::GetSetOptionName
  0032e	8b ff		 npad	 2
$LL1009@Management:
  00330	8a 08		 mov	 cl, BYTE PTR [eax]
  00332	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00334	75 1a		 jne	 SHORT $LN1010@Management
  00336	84 c9		 test	 cl, cl
  00338	74 12		 je	 SHORT $LN1011@Management
  0033a	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0033d	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00340	75 0e		 jne	 SHORT $LN1010@Management
  00342	83 c0 02	 add	 eax, 2
  00345	83 c6 02	 add	 esi, 2
  00348	84 c9		 test	 cl, cl
  0034a	75 e4		 jne	 SHORT $LL1009@Management
$LN1011@Management:
  0034c	33 c0		 xor	 eax, eax
  0034e	eb 05		 jmp	 SHORT $LN1012@Management
$LN1010@Management:
  00350	1b c0		 sbb	 eax, eax
  00352	83 d8 ff	 sbb	 eax, -1
$LN1012@Management:
  00355	85 c0		 test	 eax, eax
  00357	0f 85 8b 00 00
	00		 jne	 $LN872@Management

  0035d	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR _iOptionType$224172[ebp]
  00363	85 c0		 test	 eax, eax
  00365	75 17		 jne	 SHORT $LN862@Management

  00367	e8 00 00 00 00	 call	 _rand
  0036c	99		 cdq
  0036d	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00372	f7 f9		 idiv	 ecx
  00374	33 c9		 xor	 ecx, ecx
  00376	83 fa 50	 cmp	 edx, 80			; 00000050H
  00379	0f 9d c1	 setge	 cl

  0037c	eb 08		 jmp	 SHORT $LN1124@Management
$LN862@Management:

  0037e	33 c9		 xor	 ecx, ecx
  00380	83 f8 01	 cmp	 eax, 1
  00383	0f 95 c1	 setne	 cl
$LN1124@Management:

  00386	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _iOption3$224168[ebp]
  0038c	8d 0c 8d 06 00
	00 00		 lea	 ecx, DWORD PTR [ecx*4+6]
  00393	51		 push	 ecx
  00394	8b 8d 50 fd ff
	ff		 mov	 ecx, DWORD PTR _iOption2$224167[ebp]
  0039a	6a 00		 push	 0
  0039c	6a ff		 push	 -1
  0039e	52		 push	 edx
  0039f	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR _iOption1$224166[ebp]
  003a5	51		 push	 ecx
  003a6	8b 8d 40 fd ff
	ff		 mov	 ecx, DWORD PTR _iDur$224170[ebp]
  003ac	52		 push	 edx
  003ad	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR _iLevel$224165[ebp]
  003b3	8b c3		 mov	 eax, ebx
  003b5	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  003bb	51		 push	 ecx
  003bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003c2	52		 push	 edx
  003c3	0f b6 94 08 46
	01 00 00	 movzx	 edx, BYTE PTR [eax+ecx+326]
  003cb	57		 push	 edi
  003cc	52		 push	 edx
  003cd	0f b6 94 08 44
	01 00 00	 movzx	 edx, BYTE PTR [eax+ecx+324]
  003d5	0f b6 84 08 49
	01 00 00	 movzx	 eax, BYTE PTR [eax+ecx+329]
  003dd	52		 push	 edx
  003de	50		 push	 eax
  003df	53		 push	 ebx
  003e0	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  003e5	83 c4 34	 add	 esp, 52			; 00000034H
$LN872@Management:

  003e8	47		 inc	 edi
  003e9	81 ff 00 20 00
	00		 cmp	 edi, 8192		; 00002000H
  003ef	0f 8c 5b fe ff
	ff		 jl	 $LL873@Management

  003f5	e9 70 5b 00 00	 jmp	 $LN899@Management
$LN856@Management:

  003fa	6a 01		 push	 1
  003fc	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224220[ebp]
  00402	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  00407	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00409	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@BJPGHEGG@PK?$DP?$KH?e?$KH?$KG?$KH?$KD?$KH?W?$DP?5?$KH?$KE?$KH?$KM?$KB?$MA?$KH?S?$KH?$KK?$DP?5?$KH?$KJ?$KH?$LH?$DP?$KH?$LB@
  0040e	51		 push	 ecx
  0040f	8d 95 68 fd ff
	ff		 lea	 edx, DWORD PTR _pNotice$224220[ebp]
  00415	52		 push	 edx
  00416	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser

  0041b	8b 86 2c 04 00
	00		 mov	 eax, DWORD PTR [esi+1068]
  00421	83 c4 0c	 add	 esp, 12			; 0000000cH
  00424	66 c7 86 3c 01
	00 00 00 03	 mov	 WORD PTR [esi+316], 768	; 00000300H
  0042d	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0
  00437	85 c0		 test	 eax, eax
  00439	0f 88 2b 5b 00
	00		 js	 $LN899@Management

  0043f	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00442	8b 16		 mov	 edx, DWORD PTR [esi]
  00444	6a 03		 push	 3
  00446	51		 push	 ecx
  00447	52		 push	 edx
  00448	50		 push	 eax
  00449	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0044e	e8 00 00 00 00	 call	 ?SetPkLevel@PartyClass@@QAEXHHHD@Z ; PartyClass::SetPkLevel

  00453	8b 86 2c 04 00
	00		 mov	 eax, DWORD PTR [esi+1068]
  00459	50		 push	 eax
  0045a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0045f	e8 00 00 00 00	 call	 ?SetPkCount@PartyClass@@QAEXH@Z ; PartyClass::SetPkCount

  00464	e9 01 5b 00 00	 jmp	 $LN899@Management
$LN854@Management:

  00469	8b cf		 mov	 ecx, edi
  0046b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  00470	89 85 4c fd ff
	ff		 mov	 DWORD PTR _iTokenNumber$224224[ebp], eax

  00476	85 c0		 test	 eax, eax
  00478	75 29		 jne	 SHORT $LN853@Management

  0047a	6a 01		 push	 1
  0047c	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224226[ebp]
  00482	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  00487	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00489	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@FJDGBDEH@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KB?c?$DP?5?$DP?$KH?j?$DP?$KH?$KB@
  0048e	51		 push	 ecx
  0048f	8d 95 68 fd ff
	ff		 lea	 edx, DWORD PTR _pNotice$224226[ebp]
  00495	52		 push	 edx
  00496	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser

  0049b	83 c4 0c	 add	 esp, 12			; 0000000cH

  0049e	e9 c7 5a 00 00	 jmp	 $LN899@Management
$LN853@Management:

  004a3	8d 9e 2a 05 00
	00		 lea	 ebx, DWORD PTR [esi+1322]
  004a9	c7 85 40 fd ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv4569[ebp], 75 ; 0000004bH
$LL851@Management:

  004b3	80 7b fe 00	 cmp	 BYTE PTR [ebx-2], 0
  004b7	74 6d		 je	 SHORT $LN850@Management

  004b9	80 7b 02 02	 cmp	 BYTE PTR [ebx+2], 2
  004bd	75 67		 jne	 SHORT $LN850@Management

  004bf	0f b7 03	 movzx	 eax, WORD PTR [ebx]
  004c2	66 85 c0	 test	 ax, ax
  004c5	78 5f		 js	 SHORT $LN850@Management

  004c7	0f bf f8	 movsx	 edi, ax
  004ca	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  004d0	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  004d6	0f b7 87 b8 00
	00 00		 movzx	 eax, WORD PTR [edi+184]
  004dd	3b 85 4c fd ff
	ff		 cmp	 eax, DWORD PTR _iTokenNumber$224224[ebp]
  004e3	75 41		 jne	 SHORT $LN850@Management

  004e5	6a 01		 push	 1
  004e7	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224238[ebp]
  004ed	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  004f2	d9 87 00 01 00
	00		 fld	 DWORD PTR [edi+256]
  004f8	8b 8d 4c fd ff
	ff		 mov	 ecx, DWORD PTR _iTokenNumber$224224[ebp]
  004fe	8b 16		 mov	 edx, DWORD PTR [esi]
  00500	83 ec 10	 sub	 esp, 16			; 00000010H
  00503	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  00507	8d 85 68 fd ff
	ff		 lea	 eax, DWORD PTR _pNotice$224238[ebp]
  0050d	d9 87 fc 00 00
	00		 fld	 DWORD PTR [edi+252]
  00513	dd 1c 24	 fstp	 QWORD PTR [esp]
  00516	51		 push	 ecx
  00517	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@GHLFOKPF@?$CFd?5?$KH?$KG?$DP?$KB?$KE?$DP?$DP?$DP?5?$KH?W?$KH?e?$DP?$DP?$KH?$KG?$KH?$KP?$KH?$KB?$KH?$KJ?5HP?5?$DN?5@
  0051c	52		 push	 edx
  0051d	50		 push	 eax
  0051e	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  00523	83 c4 20	 add	 esp, 32			; 00000020H
$LN850@Management:

  00526	83 c3 0c	 add	 ebx, 12			; 0000000cH
  00529	ff 8d 40 fd ff
	ff		 dec	 DWORD PTR tv4569[ebp]
  0052f	75 82		 jne	 SHORT $LL851@Management

  00531	e9 34 5a 00 00	 jmp	 $LN899@Management
$LN844@Management:

  00536	6a 00		 push	 0
  00538	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224241[ebp]
  0053e	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  00543	8b cf		 mov	 ecx, edi
  00545	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  0054a	50		 push	 eax
  0054b	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224241[ebp]
  00551	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  00556	51		 push	 ecx
  00557	e8 00 00 00 00	 call	 ?SendToAllUser@TNotice@@QAAXPADZZ ; TNotice::SendToAllUser

  0055c	83 c4 0c	 add	 esp, 12			; 0000000cH

  0055f	e9 06 5a 00 00	 jmp	 $LN899@Management
$LN843@Management:

  00564	8b cf		 mov	 ecx, edi
  00566	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0056b	85 c0		 test	 eax, eax
  0056d	74 23		 je	 SHORT $LN1048@Management

  0056f	83 f8 01	 cmp	 eax, 1
  00572	75 08		 jne	 SHORT $LN841@Management

  00574	88 86 3d 01 00
	00		 mov	 BYTE PTR [esi+317], al
  0057a	eb 27		 jmp	 SHORT $LN830@Management
$LN841@Management:

  0057c	83 f8 02	 cmp	 eax, 2
  0057f	75 08		 jne	 SHORT $LN839@Management

  00581	88 86 3d 01 00
	00		 mov	 BYTE PTR [esi+317], al
  00587	eb 1a		 jmp	 SHORT $LN830@Management
$LN839@Management:

  00589	83 f8 03	 cmp	 eax, 3
  0058c	0f 85 8c 00 00
	00		 jne	 $LN837@Management
$LN1048@Management:

  00592	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0
$LN831@Management:

  0059c	c6 86 3d 01 00
	00 03		 mov	 BYTE PTR [esi+317], 3
$LN830@Management:

  005a3	80 be 3d 01 00
	00 04		 cmp	 BYTE PTR [esi+317], 4
  005aa	75 1d		 jne	 SHORT $LN829@Management

  005ac	8b 16		 mov	 edx, DWORD PTR [esi]
  005ae	6a 01		 push	 1
  005b0	52		 push	 edx
  005b1	68 71 04 00 00	 push	 1137			; 00000471H
  005b6	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  005bb	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  005c0	50		 push	 eax
  005c1	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  005c6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN829@Management:

  005c9	0f b6 86 3d 01
	00 00		 movzx	 eax, BYTE PTR [esi+317]
  005d0	3c 06		 cmp	 al, 6
  005d2	7f 0c		 jg	 SHORT $LN828@Management

  005d4	50		 push	 eax
  005d5	8b 06		 mov	 eax, DWORD PTR [esi]
  005d7	50		 push	 eax
  005d8	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  005dd	83 c4 08	 add	 esp, 8
$LN828@Management:

  005e0	8b 86 2c 04 00
	00		 mov	 eax, DWORD PTR [esi+1068]
  005e6	85 c0		 test	 eax, eax
  005e8	0f 88 7c 59 00
	00		 js	 $LN899@Management

  005ee	0f b6 8e 3d 01
	00 00		 movzx	 ecx, BYTE PTR [esi+317]
  005f5	8b 56 2c	 mov	 edx, DWORD PTR [esi+44]
  005f8	51		 push	 ecx
  005f9	8b 0e		 mov	 ecx, DWORD PTR [esi]
  005fb	52		 push	 edx
  005fc	51		 push	 ecx
  005fd	50		 push	 eax
  005fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00603	e8 00 00 00 00	 call	 ?SetPkLevel@PartyClass@@QAEXHHHD@Z ; PartyClass::SetPkLevel

  00608	8b 96 2c 04 00
	00		 mov	 edx, DWORD PTR [esi+1068]
  0060e	52		 push	 edx
  0060f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00614	e8 00 00 00 00	 call	 ?SetPkCount@PartyClass@@QAEXH@Z ; PartyClass::SetPkCount

  00619	e9 4c 59 00 00	 jmp	 $LN899@Management
$LN837@Management:

  0061e	83 f8 04	 cmp	 eax, 4
  00621	75 0e		 jne	 SHORT $LN835@Management

  00623	66 c7 86 3c 01
	00 00 01 04	 mov	 WORD PTR [esi+316], 1025 ; 00000401H

  0062c	e9 72 ff ff ff	 jmp	 $LN830@Management
$LN835@Management:

  00631	83 f8 05	 cmp	 eax, 5
  00634	75 0e		 jne	 SHORT $LN833@Management

  00636	66 c7 86 3c 01
	00 00 02 05	 mov	 WORD PTR [esi+316], 1282 ; 00000502H

  0063f	e9 5f ff ff ff	 jmp	 $LN830@Management
$LN833@Management:

  00644	83 f8 06	 cmp	 eax, 6
  00647	0f 85 4f ff ff
	ff		 jne	 $LN831@Management

  0064d	66 c7 86 3c 01
	00 00 03 06	 mov	 WORD PTR [esi+316], 1539 ; 00000603H

  00656	e9 48 ff ff ff	 jmp	 $LN830@Management
$LN826@Management:

  0065b	6a 63		 push	 99			; 00000063H
  0065d	8d 45 91	 lea	 eax, DWORD PTR _szText$224271[ebp+1]
  00660	6a 00		 push	 0
  00662	50		 push	 eax
  00663	c7 85 50 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _iOption3$224267[ebp], 0
  0066d	c6 85 64 fd ff
	ff 00		 mov	 BYTE PTR _NewOption$224268[ebp], 0
  00674	c6 45 90 00	 mov	 BYTE PTR _szText$224271[ebp], 0
  00678	e8 00 00 00 00	 call	 _memset

  0067d	33 c0		 xor	 eax, eax
  0067f	83 c4 0c	 add	 esp, 12			; 0000000cH

  00682	8b cf		 mov	 ecx, edi
  00684	89 85 7c fe ff
	ff		 mov	 DWORD PTR _szItemName$224272[ebp], eax
  0068a	89 85 80 fe ff
	ff		 mov	 DWORD PTR _szItemName$224272[ebp+4], eax
  00690	89 85 84 fe ff
	ff		 mov	 DWORD PTR _szItemName$224272[ebp+8], eax
  00696	89 85 88 fe ff
	ff		 mov	 DWORD PTR _szItemName$224272[ebp+12], eax
  0069c	89 85 8c fe ff
	ff		 mov	 DWORD PTR _szItemName$224272[ebp+16], eax
  006a2	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  006a7	8d 95 7c fe ff
	ff		 lea	 edx, DWORD PTR _szItemName$224272[ebp]
  006ad	2b d0		 sub	 edx, eax
  006af	90		 npad	 1
$LL904@Management:
  006b0	8a 08		 mov	 cl, BYTE PTR [eax]
  006b2	88 0c 10	 mov	 BYTE PTR [eax+edx], cl
  006b5	40		 inc	 eax
  006b6	84 c9		 test	 cl, cl
  006b8	75 f6		 jne	 SHORT $LL904@Management

  006ba	c7 85 60 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$224277[ebp], 0
  006c4	c7 85 48 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv10520[ebp], OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  006ce	8b ff		 npad	 2
$LL824@Management:

  006d0	8b 8d 48 fd ff
	ff		 mov	 ecx, DWORD PTR tv10520[ebp]
  006d6	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _szItemName$224272[ebp]
  006dc	8d 64 24 00	 npad	 4
$LL1013@Management:
  006e0	8a 10		 mov	 dl, BYTE PTR [eax]
  006e2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  006e4	75 1a		 jne	 SHORT $LN1014@Management
  006e6	84 d2		 test	 dl, dl
  006e8	74 12		 je	 SHORT $LN1015@Management
  006ea	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  006ed	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  006f0	75 0e		 jne	 SHORT $LN1014@Management
  006f2	83 c0 02	 add	 eax, 2
  006f5	83 c1 02	 add	 ecx, 2
  006f8	84 d2		 test	 dl, dl
  006fa	75 e4		 jne	 SHORT $LL1013@Management
$LN1015@Management:
  006fc	33 c0		 xor	 eax, eax
  006fe	eb 05		 jmp	 SHORT $LN1016@Management
$LN1014@Management:
  00700	1b c0		 sbb	 eax, eax
  00702	83 d8 ff	 sbb	 eax, -1
$LN1016@Management:
  00705	85 c0		 test	 eax, eax
  00707	74 1e		 je	 SHORT $LN963@Management

  00709	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR tv10520[ebp]
  0070f	ff 85 60 fd ff
	ff		 inc	 DWORD PTR _i$224277[ebp]
  00715	83 c0 70	 add	 eax, 112		; 00000070H
  00718	89 85 48 fd ff
	ff		 mov	 DWORD PTR tv10520[ebp], eax
  0071e	3d 00 00 0e 00	 cmp	 eax, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A+917504
  00723	7c ab		 jl	 SHORT $LL824@Management

  00725	eb 4c		 jmp	 SHORT $LN822@Management
$LN963@Management:

  00727	8b 8d 60 fd ff
	ff		 mov	 ecx, DWORD PTR _i$224277[ebp]
  0072d	8b c1		 mov	 eax, ecx
  0072f	99		 cdq
  00730	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00736	03 c2		 add	 eax, edx
  00738	c1 f8 09	 sar	 eax, 9

  0073b	8b d0		 mov	 edx, eax
  0073d	c1 e2 09	 shl	 edx, 9
  00740	2b ca		 sub	 ecx, edx

  00742	51		 push	 ecx
  00743	50		 push	 eax
  00744	89 85 4c fd ff
	ff		 mov	 DWORD PTR _iType$224275[ebp], eax
  0074a	8b 85 60 fd ff
	ff		 mov	 eax, DWORD PTR _i$224277[ebp]
  00750	6b c0 70	 imul	 eax, 112		; 00000070H
  00753	05 00 00 00 00	 add	 eax, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  00758	50		 push	 eax
  00759	89 8d 40 fd ff
	ff		 mov	 DWORD PTR _iIndex$224276[ebp], ecx
  0075f	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _szItemName$224272[ebp]
  00765	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@BOEHIACN@?$FL?5?$CFs?5?$FN?5?$KH?$KB?$KH?$KJ?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?5?$KH?$KB?$KH?$LA?$DP?$DP?$DP?$DP@
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 _sprintf
  00770	83 c4 14	 add	 esp, 20			; 00000014H
$LN822@Management:

  00773	81 bd 60 fd ff
	ff 00 20 00 00	 cmp	 DWORD PTR _i$224277[ebp], 8192 ; 00002000H
  0077d	75 24		 jne	 SHORT $LN820@Management

  0077f	8d 55 90	 lea	 edx, DWORD PTR _szText$224271[ebp]
  00782	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KAGIKAMB@?$DP?$KH?$KN?$DP?$KH?h?5?$DP?$KH?j?$DP?$KH?$KD?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?4?4?$AA@
  00787	52		 push	 edx
  00788	e8 00 00 00 00	 call	 _sprintf

  0078d	8b 06		 mov	 eax, DWORD PTR [esi]
  0078f	6a 01		 push	 1
  00791	50		 push	 eax
  00792	8d 4d 90	 lea	 ecx, DWORD PTR _szText$224271[ebp]
  00795	51		 push	 ecx
  00796	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0079b	83 c4 14	 add	 esp, 20			; 00000014H

  0079e	e9 c7 57 00 00	 jmp	 $LN899@Management
$LN820@Management:

  007a3	8b 16		 mov	 edx, DWORD PTR [esi]
  007a5	6a 01		 push	 1
  007a7	52		 push	 edx
  007a8	8d 45 90	 lea	 eax, DWORD PTR _szText$224271[ebp]
  007ab	50		 push	 eax
  007ac	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  007b1	83 c4 0c	 add	 esp, 12			; 0000000cH

  007b4	8b cf		 mov	 ecx, edi
  007b6	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  007bb	8b cf		 mov	 ecx, edi
  007bd	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iLevel$224264[ebp], eax
  007c3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  007c8	8b cf		 mov	 ecx, edi
  007ca	89 85 60 fd ff
	ff		 mov	 DWORD PTR _iDur$224269[ebp], eax
  007d0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  007d5	8b cf		 mov	 ecx, edi
  007d7	89 85 48 fd ff
	ff		 mov	 DWORD PTR _iOption1$224265[ebp], eax
  007dd	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  007e2	8b cf		 mov	 ecx, edi
  007e4	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iOption2$224266[ebp], eax
  007ea	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  007ef	83 bd 4c fd ff
	ff 0d		 cmp	 DWORD PTR _iType$224275[ebp], 13 ; 0000000dH
  007f6	75 16		 jne	 SHORT $LN1049@Management
  007f8	83 bd 40 fd ff
	ff 03		 cmp	 DWORD PTR _iIndex$224276[ebp], 3
  007ff	75 0d		 jne	 SHORT $LN1049@Management

  00801	83 f8 08	 cmp	 eax, 8
  00804	7d 4a		 jge	 SHORT $LN1050@Management

  00806	89 85 50 fd ff
	ff		 mov	 DWORD PTR _iOption3$224267[ebp], eax

  0080c	eb 42		 jmp	 SHORT $LN1050@Management
$LN1049@Management:

  0080e	83 f8 04	 cmp	 eax, 4
  00811	75 0c		 jne	 SHORT $LN816@Management

  00813	c7 85 50 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _iOption3$224267[ebp], 1
  0081d	eb 31		 jmp	 SHORT $LN1050@Management
$LN816@Management:

  0081f	83 f8 08	 cmp	 eax, 8
  00822	75 0c		 jne	 SHORT $LN814@Management

  00824	c7 85 50 fd ff
	ff 02 00 00 00	 mov	 DWORD PTR _iOption3$224267[ebp], 2
  0082e	eb 20		 jmp	 SHORT $LN1050@Management
$LN814@Management:

  00830	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00833	75 0c		 jne	 SHORT $LN812@Management

  00835	c7 85 50 fd ff
	ff 03 00 00 00	 mov	 DWORD PTR _iOption3$224267[ebp], 3
  0083f	eb 0f		 jmp	 SHORT $LN1050@Management
$LN812@Management:

  00841	83 f8 10	 cmp	 eax, 16			; 00000010H
  00844	75 0a		 jne	 SHORT $LN1050@Management

  00846	c7 85 50 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR _iOption3$224267[ebp], 4
$LN1050@Management:

  00850	8b cf		 mov	 ecx, edi
  00852	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00857	8b cf		 mov	 ecx, edi
  00859	8b f0		 mov	 esi, eax
  0085b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00860	85 f6		 test	 esi, esi
  00862	74 21		 je	 SHORT $LN803@Management

  00864	85 c0		 test	 eax, eax
  00866	0f 85 59 01 00
	00		 jne	 $LN808@Management

  0086c	e8 00 00 00 00	 call	 _rand
  00871	99		 cdq
  00872	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00877	f7 f9		 idiv	 ecx
  00879	83 fa 50	 cmp	 edx, 80			; 00000050H
  0087c	0f 8c 4c 01 00
	00		 jl	 $LN1125@Management
$LN804@Management:

  00882	83 ce 08	 or	 esi, 8
$LN803@Management:

  00885	8b cf		 mov	 ecx, edi
  00887	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0088c	85 c0		 test	 eax, eax
  0088e	7e 07		 jle	 SHORT $LN802@Management

  00890	c6 85 64 fd ff
	ff 20		 mov	 BYTE PTR _NewOption$224268[ebp], 32 ; 00000020H
$LN802@Management:

  00897	8b cf		 mov	 ecx, edi
  00899	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0089e	85 c0		 test	 eax, eax
  008a0	7e 07		 jle	 SHORT $LN801@Management

  008a2	80 8d 64 fd ff
	ff 10		 or	 BYTE PTR _NewOption$224268[ebp], 16 ; 00000010H
$LN801@Management:

  008a9	8b cf		 mov	 ecx, edi
  008ab	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  008b0	85 c0		 test	 eax, eax
  008b2	7e 07		 jle	 SHORT $LN800@Management

  008b4	80 8d 64 fd ff
	ff 08		 or	 BYTE PTR _NewOption$224268[ebp], 8
$LN800@Management:

  008bb	8b cf		 mov	 ecx, edi
  008bd	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  008c2	85 c0		 test	 eax, eax
  008c4	7e 07		 jle	 SHORT $LN799@Management

  008c6	80 8d 64 fd ff
	ff 04		 or	 BYTE PTR _NewOption$224268[ebp], 4
$LN799@Management:

  008cd	8b cf		 mov	 ecx, edi
  008cf	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  008d4	85 c0		 test	 eax, eax
  008d6	7e 07		 jle	 SHORT $LN798@Management

  008d8	80 8d 64 fd ff
	ff 02		 or	 BYTE PTR _NewOption$224268[ebp], 2
$LN798@Management:

  008df	8b cf		 mov	 ecx, edi
  008e1	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  008e6	85 c0		 test	 eax, eax
  008e8	7e 07		 jle	 SHORT $LN797@Management

  008ea	80 8d 64 fd ff
	ff 01		 or	 BYTE PTR _NewOption$224268[ebp], 1
$LN797@Management:

  008f1	8b 8d 4c fd ff
	ff		 mov	 ecx, DWORD PTR _iType$224275[ebp]
  008f7	85 c9		 test	 ecx, ecx
  008f9	0f 88 6b 56 00
	00		 js	 $LN899@Management
  008ff	81 f9 00 02 00
	00		 cmp	 ecx, 512		; 00000200H
  00905	0f 8d 5f 56 00
	00		 jge	 $LN899@Management
  0090b	8b 85 40 fd ff
	ff		 mov	 eax, DWORD PTR _iIndex$224276[ebp]
  00911	85 c0		 test	 eax, eax
  00913	0f 88 51 56 00
	00		 js	 $LN899@Management
  00919	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  0091e	0f 8d 46 56 00
	00		 jge	 $LN899@Management

  00924	50		 push	 eax
  00925	51		 push	 ecx
  00926	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  0092b	83 c4 08	 add	 esp, 8

  0092e	83 f8 13	 cmp	 eax, 19			; 00000013H
  00931	74 15		 je	 SHORT $LN794@Management
  00933	3d 12 08 00 00	 cmp	 eax, 2066		; 00000812H
  00938	74 0e		 je	 SHORT $LN794@Management
  0093a	3d 0a 0a 00 00	 cmp	 eax, 2570		; 00000a0aH
  0093f	74 07		 je	 SHORT $LN794@Management
  00941	3d 0d 04 00 00	 cmp	 eax, 1037		; 0000040dH
  00946	75 07		 jne	 SHORT $LN795@Management
$LN794@Management:

  00948	c6 85 64 fd ff
	ff 3f		 mov	 BYTE PTR _NewOption$224268[ebp], 63 ; 0000003fH
$LN795@Management:

  0094f	3d 04 1a 00 00	 cmp	 eax, 6660		; 00001a04H
  00954	0f 84 7c 00 00
	00		 je	 $LN792@Management
  0095a	3d 05 1a 00 00	 cmp	 eax, 6661		; 00001a05H
  0095f	74 75		 je	 SHORT $LN792@Management

  00961	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00967	8b d3		 mov	 edx, ebx
  00969	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0096f	03 ca		 add	 ecx, edx
  00971	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR _NewOption$224268[ebp]
  00977	56		 push	 esi
  00978	52		 push	 edx
  00979	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR _iOption3$224267[ebp]
  0097f	6a ff		 push	 -1
  00981	52		 push	 edx
  00982	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _iOption2$224266[ebp]
  00988	52		 push	 edx
  00989	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _iOption1$224265[ebp]
  0098f	52		 push	 edx
  00990	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _iDur$224269[ebp]
  00996	52		 push	 edx
  00997	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR _iLevel$224264[ebp]
$LN1155@Management:
  0099d	52		 push	 edx
  0099e	0f b6 91 44 01
	00 00		 movzx	 edx, BYTE PTR [ecx+324]
  009a5	50		 push	 eax
  009a6	0f b6 81 46 01
	00 00		 movzx	 eax, BYTE PTR [ecx+326]
  009ad	50		 push	 eax
  009ae	0f b6 81 49 01
	00 00		 movzx	 eax, BYTE PTR [ecx+329]
  009b5	52		 push	 edx
  009b6	50		 push	 eax
  009b7	53		 push	 ebx
  009b8	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  009bd	83 c4 34	 add	 esp, 52			; 00000034H

  009c0	e9 a5 55 00 00	 jmp	 $LN899@Management
$LN808@Management:

  009c5	83 f8 01	 cmp	 eax, 1
  009c8	0f 85 b4 fe ff
	ff		 jne	 $LN804@Management
$LN1125@Management:

  009ce	83 ce 04	 or	 esi, 4

  009d1	e9 af fe ff ff	 jmp	 $LN803@Management
$LN792@Management:

  009d6	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR _NewOption$224268[ebp]
  009dc	56		 push	 esi
  009dd	52		 push	 edx
  009de	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR _iOption3$224267[ebp]
  009e4	6a ff		 push	 -1
  009e6	52		 push	 edx
  009e7	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _iOption2$224266[ebp]
  009ed	52		 push	 edx
  009ee	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _iOption1$224265[ebp]
  009f4	52		 push	 edx
  009f5	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _iDur$224269[ebp]
  009fb	52		 push	 edx
  009fc	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR _iLevel$224264[ebp]
$LN1156@Management:
  00a02	8b cb		 mov	 ecx, ebx
  00a04	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00a0a	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a10	52		 push	 edx
  00a11	0f b6 91 44 01
	00 00		 movzx	 edx, BYTE PTR [ecx+324]
  00a18	50		 push	 eax
  00a19	0f b6 81 46 01
	00 00		 movzx	 eax, BYTE PTR [ecx+326]
  00a20	50		 push	 eax
  00a21	0f b6 81 49 01
	00 00		 movzx	 eax, BYTE PTR [ecx+329]
  00a28	52		 push	 edx
  00a29	50		 push	 eax
  00a2a	53		 push	 ebx
  00a2b	e8 00 00 00 00	 call	 ?PetItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; PetItemSerialCreateSend
  00a30	83 c4 34	 add	 esp, 52			; 00000034H

  00a33	e9 32 55 00 00	 jmp	 $LN899@Management
$LN790@Management:

  00a38	6a 63		 push	 99			; 00000063H
  00a3a	8d 4d 91	 lea	 ecx, DWORD PTR _szText$224335[ebp+1]
  00a3d	6a 00		 push	 0
  00a3f	51		 push	 ecx
  00a40	c6 45 90 00	 mov	 BYTE PTR _szText$224335[ebp], 0
  00a44	e8 00 00 00 00	 call	 _memset

  00a49	33 c0		 xor	 eax, eax
  00a4b	83 c4 0c	 add	 esp, 12			; 0000000cH

  00a4e	8b cf		 mov	 ecx, edi
  00a50	c6 85 7c fe ff
	ff 00		 mov	 BYTE PTR _szItemName$224336[ebp], 0
  00a57	89 85 7d fe ff
	ff		 mov	 DWORD PTR _szItemName$224336[ebp+1], eax
  00a5d	89 85 81 fe ff
	ff		 mov	 DWORD PTR _szItemName$224336[ebp+5], eax
  00a63	89 85 85 fe ff
	ff		 mov	 DWORD PTR _szItemName$224336[ebp+9], eax
  00a69	89 85 89 fe ff
	ff		 mov	 DWORD PTR _szItemName$224336[ebp+13], eax
  00a6f	66 89 85 8d fe
	ff ff		 mov	 WORD PTR _szItemName$224336[ebp+17], ax
  00a76	88 85 8f fe ff
	ff		 mov	 BYTE PTR _szItemName$224336[ebp+19], al
  00a7c	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  00a81	8d 95 7c fe ff
	ff		 lea	 edx, DWORD PTR _szItemName$224336[ebp]
  00a87	2b d0		 sub	 edx, eax
  00a89	8d a4 24 00 00
	00 00		 npad	 7
$LL905@Management:
  00a90	8a 08		 mov	 cl, BYTE PTR [eax]
  00a92	88 0c 10	 mov	 BYTE PTR [eax+edx], cl
  00a95	40		 inc	 eax
  00a96	84 c9		 test	 cl, cl
  00a98	75 f6		 jne	 SHORT $LL905@Management

  00a9a	33 db		 xor	 ebx, ebx
  00a9c	bf 00 00 00 00	 mov	 edi, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
$LL789@Management:

  00aa1	8b cf		 mov	 ecx, edi
  00aa3	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _szItemName$224336[ebp]
  00aa9	8d a4 24 00 00
	00 00		 npad	 7
$LL1017@Management:
  00ab0	8a 10		 mov	 dl, BYTE PTR [eax]
  00ab2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00ab4	75 1a		 jne	 SHORT $LN1018@Management
  00ab6	84 d2		 test	 dl, dl
  00ab8	74 12		 je	 SHORT $LN1019@Management
  00aba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00abd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00ac0	75 0e		 jne	 SHORT $LN1018@Management
  00ac2	83 c0 02	 add	 eax, 2
  00ac5	83 c1 02	 add	 ecx, 2
  00ac8	84 d2		 test	 dl, dl
  00aca	75 e4		 jne	 SHORT $LL1017@Management
$LN1019@Management:
  00acc	33 c0		 xor	 eax, eax
  00ace	eb 05		 jmp	 SHORT $LN1020@Management
$LN1018@Management:
  00ad0	1b c0		 sbb	 eax, eax
  00ad2	83 d8 ff	 sbb	 eax, -1
$LN1020@Management:
  00ad5	85 c0		 test	 eax, eax
  00ad7	74 0e		 je	 SHORT $LN964@Management

  00ad9	83 c7 70	 add	 edi, 112		; 00000070H
  00adc	43		 inc	 ebx
  00add	81 ff 00 00 0e
	00		 cmp	 edi, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A+917504
  00ae3	7c bc		 jl	 SHORT $LL789@Management

  00ae5	eb 36		 jmp	 SHORT $LN787@Management
$LN964@Management:

  00ae7	8b c3		 mov	 eax, ebx
  00ae9	99		 cdq
  00aea	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00af0	03 c2		 add	 eax, edx
  00af2	c1 f8 09	 sar	 eax, 9

  00af5	8b d0		 mov	 edx, eax
  00af7	c1 e2 09	 shl	 edx, 9
  00afa	8b cb		 mov	 ecx, ebx
  00afc	2b ca		 sub	 ecx, edx

  00afe	8b d3		 mov	 edx, ebx
  00b00	6b d2 70	 imul	 edx, 112		; 00000070H
  00b03	51		 push	 ecx
  00b04	50		 push	 eax
  00b05	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  00b0b	52		 push	 edx
  00b0c	8d 45 90	 lea	 eax, DWORD PTR _szText$224335[ebp]
  00b0f	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@BOEHIACN@?$FL?5?$CFs?5?$FN?5?$KH?$KB?$KH?$KJ?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?5?$KH?$KB?$KH?$LA?$DP?$DP?$DP?$DP@
  00b14	50		 push	 eax
  00b15	e8 00 00 00 00	 call	 _sprintf
  00b1a	83 c4 14	 add	 esp, 20			; 00000014H
$LN787@Management:

  00b1d	81 fb 00 20 00
	00		 cmp	 ebx, 8192		; 00002000H
  00b23	75 11		 jne	 SHORT $LN785@Management

  00b25	8d 4d 90	 lea	 ecx, DWORD PTR _szText$224335[ebp]
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KAGIKAMB@?$DP?$KH?$KN?$DP?$KH?h?5?$DP?$KH?j?$DP?$KH?$KD?5?$DP?$KH?$KI?$KH?$KB?$KH?$KO?$KH?$KG?$KH?$LN?4?4?$AA@
  00b2d	51		 push	 ecx
  00b2e	e8 00 00 00 00	 call	 _sprintf
  00b33	83 c4 08	 add	 esp, 8
$LN785@Management:

  00b36	8b 16		 mov	 edx, DWORD PTR [esi]
  00b38	6a 01		 push	 1
  00b3a	52		 push	 edx
  00b3b	8d 45 90	 lea	 eax, DWORD PTR _szText$224335[ebp]

  00b3e	50		 push	 eax
  00b3f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00b44	83 c4 0c	 add	 esp, 12			; 0000000cH

  00b47	e9 1e 54 00 00	 jmp	 $LN899@Management
$LN784@Management:

  00b4c	0f b7 8e b8 00
	00 00		 movzx	 ecx, WORD PTR [esi+184]
  00b53	89 8d 58 fd ff
	ff		 mov	 DWORD PTR _iClass$224346[ebp], ecx

  00b59	8b cf		 mov	 ecx, edi
  00b5b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00b60	8b cf		 mov	 ecx, edi
  00b62	89 85 64 fd ff
	ff		 mov	 DWORD PTR _iStrength$224347[ebp], eax
  00b68	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00b6d	8b cf		 mov	 ecx, edi
  00b6f	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iDexterity$224348[ebp], eax
  00b75	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00b7a	8b cf		 mov	 ecx, edi
  00b7c	8b d8		 mov	 ebx, eax
  00b7e	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  00b83	89 45 f8	 mov	 DWORD PTR _iEnergy$224350[ebp], eax

  00b86	03 c3		 add	 eax, ebx
  00b88	03 85 54 fd ff
	ff		 add	 eax, DWORD PTR _iDexterity$224348[ebp]
  00b8e	03 85 64 fd ff
	ff		 add	 eax, DWORD PTR _iStrength$224347[ebp]
  00b94	89 85 4c fd ff
	ff		 mov	 DWORD PTR _iAllPoints$224352[ebp], eax

  00b9a	0f b7 86 b8 00
	00 00		 movzx	 eax, WORD PTR [esi+184]
  00ba1	83 f8 04	 cmp	 eax, 4
  00ba4	74 63		 je	 SHORT $LN782@Management
  00ba6	83 f8 03	 cmp	 eax, 3
  00ba9	74 5e		 je	 SHORT $LN782@Management

  00bab	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _iClass$224346[ebp]
  00bb1	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00bb7	0f b7 91 0e 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+14]
  00bbe	0f b7 81 0c 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+12]
  00bc5	89 95 50 fd ff
	ff		 mov	 DWORD PTR tv7086[ebp], edx
  00bcb	0f b7 91 0a 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+10]
  00bd2	89 95 48 fd ff
	ff		 mov	 DWORD PTR tv7095[ebp], edx
  00bd8	0f bf 96 be 00
	00 00		 movsx	 edx, WORD PTR [esi+190]
  00bdf	89 85 60 fd ff
	ff		 mov	 DWORD PTR tv7090[ebp], eax
  00be5	0f b7 81 08 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+8]
  00bec	8d 3c 90	 lea	 edi, DWORD PTR [eax+edx*4]
  00bef	03 fa		 add	 edi, edx
  00bf1	03 bd 48 fd ff
	ff		 add	 edi, DWORD PTR tv7095[ebp]
  00bf7	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR tv7086[ebp]
  00bfd	03 bd 60 fd ff
	ff		 add	 edi, DWORD PTR tv7090[ebp]
  00c03	8d 54 17 fb	 lea	 edx, DWORD PTR [edi+edx-5]
  00c07	eb 62		 jmp	 SHORT $LN781@Management
$LN782@Management:

  00c09	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _iClass$224346[ebp]
  00c0f	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00c15	0f b7 81 0e 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+14]
  00c1c	0f b7 91 0c 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+12]
  00c23	89 85 50 fd ff
	ff		 mov	 DWORD PTR tv7086[ebp], eax
  00c29	0f b7 81 0a 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+10]
  00c30	89 95 60 fd ff
	ff		 mov	 DWORD PTR tv7090[ebp], edx
  00c36	0f bf 96 be 00
	00 00		 movsx	 edx, WORD PTR [esi+190]
  00c3d	89 85 48 fd ff
	ff		 mov	 DWORD PTR tv7095[ebp], eax
  00c43	0f b7 81 08 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+8]
  00c4a	8d 3c d5 00 00
	00 00		 lea	 edi, DWORD PTR [edx*8]
  00c51	2b fa		 sub	 edi, edx
  00c53	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR tv7086[ebp]
  00c59	03 f8		 add	 edi, eax
  00c5b	03 bd 48 fd ff
	ff		 add	 edi, DWORD PTR tv7095[ebp]
  00c61	03 bd 60 fd ff
	ff		 add	 edi, DWORD PTR tv7090[ebp]
  00c67	8d 54 17 f9	 lea	 edx, DWORD PTR [edi+edx-7]
$LN781@Management:

  00c6b	39 85 64 fd ff
	ff		 cmp	 DWORD PTR _iStrength$224347[ebp], eax
  00c71	0f 8c 45 01 00
	00		 jl	 $LN779@Management
  00c77	0f b7 81 0a 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+10]
  00c7e	39 85 54 fd ff
	ff		 cmp	 DWORD PTR _iDexterity$224348[ebp], eax
  00c84	0f 8c 32 01 00
	00		 jl	 $LN779@Management
  00c8a	0f b7 81 0c 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+12]
  00c91	3b d8		 cmp	 ebx, eax
  00c93	0f 8c 23 01 00
	00		 jl	 $LN779@Management
  00c99	0f b7 b9 0e 00
	00 00		 movzx	 edi, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+14]
  00ca0	8b 45 f8	 mov	 eax, DWORD PTR _iEnergy$224350[ebp]
  00ca3	3b c7		 cmp	 eax, edi
  00ca5	0f 8c 11 01 00
	00		 jl	 $LN779@Management

  00cab	39 95 4c fd ff
	ff		 cmp	 DWORD PTR _iAllPoints$224352[ebp], edx
  00cb1	7e 17		 jle	 SHORT $LN778@Management

  00cb3	8b 06		 mov	 eax, DWORD PTR [esi]
  00cb5	6a 01		 push	 1
  00cb7	50		 push	 eax
  00cb8	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@MCALDNDC@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@
  00cbd	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00cc2	83 c4 0c	 add	 esp, 12			; 0000000cH

  00cc5	e9 a0 52 00 00	 jmp	 $LN899@Management
$LN778@Management:

  00cca	0f b7 bd 64 fd
	ff ff		 movzx	 edi, WORD PTR _iStrength$224347[ebp]
  00cd1	66 89 be f4 00
	00 00		 mov	 WORD PTR [esi+244], di

  00cd8	0f b7 bd 54 fd
	ff ff		 movzx	 edi, WORD PTR _iDexterity$224348[ebp]
  00cdf	66 89 be f6 00
	00 00		 mov	 WORD PTR [esi+246], di

  00ce6	66 89 9e f8 00
	00 00		 mov	 WORD PTR [esi+248], bx
  00ced	c6 86 bb 00 00
	00 00		 mov	 BYTE PTR [esi+187], 0
  00cf4	c7 86 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+200], 0

  00cfe	66 89 86 fa 00
	00 00		 mov	 WORD PTR [esi+250], ax

  00d05	0f b7 81 0c 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+12]
  00d0c	8b fb		 mov	 edi, ebx
  00d0e	2b f8		 sub	 edi, eax
  00d10	89 7d f8	 mov	 DWORD PTR tv10393[ebp], edi

  00d13	8b fb		 mov	 edi, ebx
  00d15	db 45 f8	 fild	 DWORD PTR tv10393[ebp]

  00d18	6a 01		 push	 1
  00d1a	d8 89 10 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+16]
  00d20	d8 81 14 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+20]
  00d26	d9 9e fc 00 00
	00		 fstp	 DWORD PTR [esi+252]
  00d2c	0f b7 81 0c 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+12]
  00d33	2b f8		 sub	 edi, eax
  00d35	89 7d f8	 mov	 DWORD PTR tv10389[ebp], edi
  00d38	8b fb		 mov	 edi, ebx
  00d3a	db 45 f8	 fild	 DWORD PTR tv10389[ebp]
  00d3d	d8 89 10 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+16]
  00d43	d8 81 18 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+24]
  00d49	d9 9e 00 01 00
	00		 fstp	 DWORD PTR [esi+256]
  00d4f	0f b7 81 0e 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+14]
  00d56	2b f8		 sub	 edi, eax
  00d58	89 7d f8	 mov	 DWORD PTR tv10385[ebp], edi
  00d5b	db 45 f8	 fild	 DWORD PTR tv10385[ebp]
  00d5e	d8 89 1c 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+28]
  00d64	d8 81 20 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+32]
  00d6a	d9 9e 10 01 00
	00		 fstp	 DWORD PTR [esi+272]
  00d70	0f b7 81 0e 00
	00 00		 movzx	 eax, WORD PTR ?DCInfo@@3Vclassdef@@A[ecx+14]
  00d77	2b d8		 sub	 ebx, eax
  00d79	2b 95 4c fd ff
	ff		 sub	 edx, DWORD PTR _iAllPoints$224352[ebp]
  00d7f	89 5d f8	 mov	 DWORD PTR tv10381[ebp], ebx
  00d82	db 45 f8	 fild	 DWORD PTR tv10381[ebp]
  00d85	d8 89 1c 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+28]
  00d8b	d8 81 24 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+36]
  00d91	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00d93	51		 push	 ecx
  00d94	89 96 c0 00 00
	00		 mov	 DWORD PTR [esi+192], edx
  00d9a	d9 9e 14 01 00
	00		 fstp	 DWORD PTR [esi+276]
  00da0	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@EONAICLH@?$KH?$KB?$KH?W?$KH?$KK?$KH?V?$KH?$KK?$KH?V?5?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$DP?$DP?$KH?$KG?$KH?$KK?5?$KH@
$LN1141@Management:
  00da5	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00daa	8b 16		 mov	 edx, DWORD PTR [esi]
  00dac	6a 01		 push	 1
  00dae	52		 push	 edx
  00daf	e8 00 00 00 00	 call	 ?gObjCloseSet@@YAXHH@Z	; gObjCloseSet
  00db4	83 c4 14	 add	 esp, 20			; 00000014H

  00db7	e9 ae 51 00 00	 jmp	 $LN899@Management
$LN779@Management:

  00dbc	8b 06		 mov	 eax, DWORD PTR [esi]
  00dbe	6a 01		 push	 1
  00dc0	50		 push	 eax
  00dc1	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@IOPOKGDJ@?$DP?$DP?$KH?$KG?$KH?$KK?5?$DP?$DP?$KH?$KC?$KB?h?$KH?$KB?$KH?$KO?5?$KH?$KB?$KH?A?$KH?W?$KH?j?5?$DP?$KH?$KI?$DP?$KH@
  00dc6	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00dcb	83 c4 0c	 add	 esp, 12			; 0000000cH

  00dce	e9 97 51 00 00	 jmp	 $LN899@Management
$LN777@Management:

  00dd3	0f b7 8e b8 00
	00 00		 movzx	 ecx, WORD PTR [esi+184]
  00dda	89 8d 4c fd ff
	ff		 mov	 DWORD PTR _iClass$224379[ebp], ecx

  00de0	8b cf		 mov	 ecx, edi
  00de2	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00de7	8b cf		 mov	 ecx, edi
  00de9	89 45 f8	 mov	 DWORD PTR _iStrength$224380[ebp], eax
  00dec	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00df1	8b cf		 mov	 ecx, edi
  00df3	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iDexterity$224381[ebp], eax
  00df9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00dfe	8b cf		 mov	 ecx, edi
  00e00	8b d8		 mov	 ebx, eax
  00e02	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  00e07	66 8b 55 f8	 mov	 dx, WORD PTR _iStrength$224380[ebp]

  00e0b	66 8b 8d 58 fd
	ff ff		 mov	 cx, WORD PTR _iDexterity$224381[ebp]

  00e12	66 89 86 fa 00
	00 00		 mov	 WORD PTR [esi+250], ax

  00e19	8b 85 4c fd ff
	ff		 mov	 eax, DWORD PTR _iClass$224379[ebp]
  00e1f	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00e25	66 89 8e f6 00
	00 00		 mov	 WORD PTR [esi+246], cx
  00e2c	66 89 9e f8 00
	00 00		 mov	 WORD PTR [esi+248], bx
  00e33	c6 86 bb 00 00
	00 00		 mov	 BYTE PTR [esi+187], 0
  00e3a	c7 86 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+200], 0
  00e44	66 89 96 f4 00
	00 00		 mov	 WORD PTR [esi+244], dx
  00e4b	0f b7 90 0c 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+12]
  00e52	8b cb		 mov	 ecx, ebx
  00e54	2b ca		 sub	 ecx, edx
  00e56	89 4d f8	 mov	 DWORD PTR tv10367[ebp], ecx

  00e59	8b cb		 mov	 ecx, ebx
  00e5b	db 45 f8	 fild	 DWORD PTR tv10367[ebp]

  00e5e	6a 01		 push	 1
  00e60	d8 88 10 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+16]
  00e66	d8 80 14 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+20]
  00e6c	d9 9e fc 00 00
	00		 fstp	 DWORD PTR [esi+252]
  00e72	0f b7 90 0c 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+12]
  00e79	2b ca		 sub	 ecx, edx
  00e7b	89 4d f8	 mov	 DWORD PTR tv10362[ebp], ecx
  00e7e	8b cb		 mov	 ecx, ebx
  00e80	db 45 f8	 fild	 DWORD PTR tv10362[ebp]
  00e83	d8 88 10 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+16]
  00e89	d8 80 18 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+24]
  00e8f	d9 9e 00 01 00
	00		 fstp	 DWORD PTR [esi+256]
  00e95	0f b7 90 0e 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+14]
  00e9c	2b ca		 sub	 ecx, edx
  00e9e	89 4d f8	 mov	 DWORD PTR tv10358[ebp], ecx
  00ea1	db 45 f8	 fild	 DWORD PTR tv10358[ebp]
  00ea4	d8 88 1c 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+28]
  00eaa	d8 80 20 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+32]
  00eb0	d9 9e 10 01 00
	00		 fstp	 DWORD PTR [esi+272]
  00eb6	0f b7 90 0e 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+14]
  00ebd	2b da		 sub	 ebx, edx
  00ebf	89 5d f8	 mov	 DWORD PTR tv10354[ebp], ebx
  00ec2	db 45 f8	 fild	 DWORD PTR tv10354[ebp]
  00ec5	d8 88 1c 00 00
	00		 fmul	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+28]
  00ecb	d8 80 24 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+36]
  00ed1	8b 06		 mov	 eax, DWORD PTR [esi]
  00ed3	50		 push	 eax
  00ed4	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EIKIGGHM@Modi?4Stat?5Complete?$AA@
  00ed9	d9 9e 14 01 00
	00		 fstp	 DWORD PTR [esi+276]
  00edf	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00ee4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00ee6	6a 01		 push	 1
  00ee8	51		 push	 ecx
  00ee9	e8 00 00 00 00	 call	 ?gObjCloseSet@@YAXHH@Z	; gObjCloseSet
  00eee	83 c4 14	 add	 esp, 20			; 00000014H

  00ef1	e9 74 50 00 00	 jmp	 $LN899@Management
$LN776@Management:

  00ef6	0f b6 86 ba 00
	00 00		 movzx	 eax, BYTE PTR [esi+186]

  00efd	85 c0		 test	 eax, eax
  00eff	75 09		 jne	 SHORT $LN775@Management

  00f01	c6 86 ba 00 00
	00 01		 mov	 BYTE PTR [esi+186], 1
  00f08	eb 28		 jmp	 SHORT $LN769@Management
$LN775@Management:

  00f0a	83 f8 10	 cmp	 eax, 16			; 00000010H
  00f0d	75 09		 jne	 SHORT $LN773@Management

  00f0f	c6 86 ba 00 00
	00 11		 mov	 BYTE PTR [esi+186], 17	; 00000011H
  00f16	eb 1a		 jmp	 SHORT $LN769@Management
$LN773@Management:

  00f18	83 f8 20	 cmp	 eax, 32			; 00000020H
  00f1b	75 09		 jne	 SHORT $LN771@Management

  00f1d	c6 86 ba 00 00
	00 21		 mov	 BYTE PTR [esi+186], 33	; 00000021H
  00f24	eb 0c		 jmp	 SHORT $LN769@Management
$LN771@Management:

  00f26	83 f8 50	 cmp	 eax, 80			; 00000050H
  00f29	75 07		 jne	 SHORT $LN769@Management

  00f2b	c6 86 ba 00 00
	00 51		 mov	 BYTE PTR [esi+186], 81	; 00000051H
$LN769@Management:

  00f32	8b 16		 mov	 edx, DWORD PTR [esi]
  00f34	6a 01		 push	 1
  00f36	52		 push	 edx
  00f37	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CJJPFILP@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?4?4?4?$AA@
  00f3c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  00f41	8b 06		 mov	 eax, DWORD PTR [esi]
  00f43	6a 01		 push	 1
  00f45	50		 push	 eax
  00f46	e8 00 00 00 00	 call	 ?gObjCloseSet@@YAXHH@Z	; gObjCloseSet
  00f4b	83 c4 14	 add	 esp, 20			; 00000014H

  00f4e	e9 17 50 00 00	 jmp	 $LN899@Management
$LN768@Management:

  00f53	8a 86 ba 00 00
	00		 mov	 al, BYTE PTR [esi+186]
  00f59	84 c0		 test	 al, al
  00f5b	74 0c		 je	 SHORT $LN766@Management
  00f5d	3c 10		 cmp	 al, 16			; 00000010H
  00f5f	74 08		 je	 SHORT $LN766@Management
  00f61	3c 20		 cmp	 al, 32			; 00000020H
  00f63	74 04		 je	 SHORT $LN766@Management
  00f65	3c 50		 cmp	 al, 80			; 00000050H
  00f67	75 0f		 jne	 SHORT $LN767@Management
$LN766@Management:

  00f69	0c 01		 or	 al, 1
  00f6b	c6 86 bb 00 00
	00 01		 mov	 BYTE PTR [esi+187], 1
  00f72	88 86 ba 00 00
	00		 mov	 BYTE PTR [esi+186], al
$LN767@Management:

  00f78	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00f7a	80 8e ba 00 00
	00 02		 or	 BYTE PTR [esi+186], 2
  00f81	6a 01		 push	 1
  00f83	51		 push	 ecx
  00f84	c6 86 bc 00 00
	00 01		 mov	 BYTE PTR [esi+188], 1
  00f8b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EBIMJKMG@3?$KH?$KD?$KH?i?$KH?$KB?$KH?n?$KH?$KC?$KH?i?5?$DP?$DP?$KB?c?$KH?j?$AA@

  00f90	e9 10 fe ff ff	 jmp	 $LN1141@Management
$LN765@Management:

  00f95	0f b6 86 ba 00
	00 00		 movzx	 eax, BYTE PTR [esi+186]
  00f9c	48		 dec	 eax
  00f9d	66 c7 86 bb 00
	00 00 00 00	 mov	 WORD PTR [esi+187], 0
  00fa6	83 f8 52	 cmp	 eax, 82			; 00000052H
  00fa9	0f 87 83 00 00
	00		 ja	 $LN763@Management
  00faf	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN1021@Management[eax]
  00fb6	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1158@Management[eax*4]
$LN762@Management:

  00fbd	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00fbf	6a 01		 push	 1
  00fc1	51		 push	 ecx
  00fc2	c6 86 ba 00 00
	00 00		 mov	 BYTE PTR [esi+186], 0
  00fc9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@

  00fce	e9 d2 fd ff ff	 jmp	 $LN1141@Management
$LN761@Management:

  00fd3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00fd5	6a 01		 push	 1
  00fd7	51		 push	 ecx
  00fd8	c6 86 ba 00 00
	00 10		 mov	 BYTE PTR [esi+186], 16	; 00000010H
  00fdf	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@

  00fe4	e9 bc fd ff ff	 jmp	 $LN1141@Management
$LN760@Management:

  00fe9	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00feb	6a 01		 push	 1
  00fed	51		 push	 ecx
  00fee	c6 86 ba 00 00
	00 20		 mov	 BYTE PTR [esi+186], 32	; 00000020H
  00ff5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@

  00ffa	e9 a6 fd ff ff	 jmp	 $LN1141@Management
$LN759@Management:

  00fff	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01001	6a 01		 push	 1
  01003	51		 push	 ecx
  01004	c6 86 ba 00 00
	00 30		 mov	 BYTE PTR [esi+186], 48	; 00000030H
  0100b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@

  01010	e9 90 fd ff ff	 jmp	 $LN1141@Management
$LN758@Management:

  01015	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01017	6a 01		 push	 1
  01019	51		 push	 ecx
  0101a	c6 86 ba 00 00
	00 40		 mov	 BYTE PTR [esi+186], 64	; 00000040H
  01021	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@

  01026	e9 7a fd ff ff	 jmp	 $LN1141@Management
$LN757@Management:

  0102b	c6 86 ba 00 00
	00 50		 mov	 BYTE PTR [esi+186], 80	; 00000050H
$LN763@Management:

  01032	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01034	6a 01		 push	 1
  01036	51		 push	 ecx
  01037	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FPBGPFHH@?$KH?$KB?$KH?n?$KH?$KC?$KH?i?$KH?W?$DP?$DP?$KH?$KD?$AA@

  0103c	e9 64 fd ff ff	 jmp	 $LN1141@Management
$LN756@Management:

  01041	8b cf		 mov	 ecx, edi
  01043	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01048	83 f8 04	 cmp	 eax, 4
  0104b	0f 85 19 4f 00
	00		 jne	 $LN899@Management
  01051	8b f3		 mov	 esi, ebx
  01053	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  01059	8b f8		 mov	 edi, eax
  0105b	eb 03 8d 49 00	 npad	 5
$LL754@Management:

  01060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01065	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  0106d	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  01075	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  0107d	6a 00		 push	 0
  0107f	6a 00		 push	 0
  01081	6a ff		 push	 -1
  01083	6a 00		 push	 0
  01085	6a 00		 push	 0
  01087	6a 00		 push	 0
  01089	6a 00		 push	 0
  0108b	6a 00		 push	 0
  0108d	68 41 1c 00 00	 push	 7233			; 00001c41H
  01092	51		 push	 ecx
  01093	52		 push	 edx
  01094	50		 push	 eax
  01095	53		 push	 ebx
  01096	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

  0109b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010a0	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  010a8	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  010b0	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  010b8	6a 00		 push	 0
  010ba	6a 00		 push	 0
  010bc	6a ff		 push	 -1
  010be	6a 00		 push	 0
  010c0	6a 00		 push	 0
  010c2	6a 00		 push	 0
  010c4	6a 00		 push	 0
  010c6	6a 00		 push	 0
  010c8	68 42 1c 00 00	 push	 7234			; 00001c42H
  010cd	51		 push	 ecx
  010ce	52		 push	 edx
  010cf	50		 push	 eax
  010d0	53		 push	 ebx
  010d1	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

  010d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010db	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  010e3	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  010eb	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  010f3	83 c4 68	 add	 esp, 104		; 00000068H
  010f6	6a 00		 push	 0
  010f8	6a 00		 push	 0
  010fa	6a ff		 push	 -1
  010fc	6a 00		 push	 0
  010fe	6a 00		 push	 0
  01100	6a 00		 push	 0
  01102	6a 00		 push	 0
  01104	6a 00		 push	 0
  01106	68 43 1c 00 00	 push	 7235			; 00001c43H
  0110b	51		 push	 ecx
  0110c	52		 push	 edx
  0110d	50		 push	 eax
  0110e	53		 push	 ebx
  0110f	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  01114	83 c4 34	 add	 esp, 52			; 00000034H
  01117	4f		 dec	 edi
  01118	0f 85 42 ff ff
	ff		 jne	 $LL754@Management

  0111e	e9 47 4e 00 00	 jmp	 $LN899@Management
$LN751@Management:

  01123	8b cf		 mov	 ecx, edi
  01125	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0112a	8b cf		 mov	 ecx, edi
  0112c	8b f0		 mov	 esi, eax
  0112e	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01133	8b cf		 mov	 ecx, edi
  01135	89 45 f8	 mov	 DWORD PTR _iIndex$224429[ebp], eax
  01138	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0113d	85 c0		 test	 eax, eax
  0113f	7f 07		 jg	 SHORT $LN750@Management

  01141	b8 01 00 00 00	 mov	 eax, 1
  01146	eb 0a		 jmp	 SHORT $LN748@Management
$LN750@Management:

  01148	83 f8 32	 cmp	 eax, 50			; 00000032H
  0114b	7e 05		 jle	 SHORT $LN748@Management

  0114d	b8 32 00 00 00	 mov	 eax, 50			; 00000032H
$LN748@Management:

  01152	85 c0		 test	 eax, eax
  01154	0f 8e 10 4e 00
	00		 jle	 $LN899@Management

  0115a	c1 e6 09	 shl	 esi, 9
  0115d	03 75 f8	 add	 esi, DWORD PTR _iIndex$224429[ebp]
  01160	8b f8		 mov	 edi, eax
  01162	89 75 f8	 mov	 DWORD PTR tv7255[ebp], esi
  01165	8b f3		 mov	 esi, ebx
  01167	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0116d	8d 49 00	 npad	 3
$LL1082@Management:

  01170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01175	8b 55 f8	 mov	 edx, DWORD PTR tv7255[ebp]
  01178	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  01180	6a 00		 push	 0
  01182	6a 00		 push	 0
  01184	6a ff		 push	 -1
  01186	6a 00		 push	 0
  01188	6a 00		 push	 0
  0118a	6a 00		 push	 0
  0118c	6a 00		 push	 0
  0118e	6a 00		 push	 0
  01190	52		 push	 edx
  01191	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  01199	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  011a1	51		 push	 ecx
  011a2	52		 push	 edx
  011a3	50		 push	 eax
  011a4	53		 push	 ebx
  011a5	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  011aa	83 c4 34	 add	 esp, 52			; 00000034H
  011ad	4f		 dec	 edi
  011ae	75 c0		 jne	 SHORT $LL1082@Management

  011b0	e9 b5 4d 00 00	 jmp	 $LN899@Management
$LN744@Management:

  011b5	8b cf		 mov	 ecx, edi
  011b7	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  011bc	85 c0		 test	 eax, eax
  011be	0f 88 a6 4d 00
	00		 js	 $LN899@Management

  011c4	50		 push	 eax
  011c5	53		 push	 ebx
  011c6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_QuestInfo@@3VCQuestInfo@@A ; g_QuestInfo
  011cb	e8 00 00 00 00	 call	 ?QuestSuccessCommand@CQuestInfo@@QAEXHH@Z ; CQuestInfo::QuestSuccessCommand

  011d0	e9 95 4d 00 00	 jmp	 $LN899@Management
$LN742@Management:

  011d5	8b cf		 mov	 ecx, edi
  011d7	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  011dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011e2	8b cb		 mov	 ecx, ebx
  011e4	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  011ea	89 84 11 f0 00
	00 00		 mov	 DWORD PTR [ecx+edx+240], eax

  011f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011f6	8b 8c 01 f0 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax+240]
  011fd	51		 push	 ecx
  011fe	53		 push	 ebx
  011ff	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  01204	83 c4 08	 add	 esp, 8

  01207	e9 5e 4d 00 00	 jmp	 $LN899@Management
$LN741@Management:

  0120c	8b cf		 mov	 ecx, edi
  0120e	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01213	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iFenrirDefaultMaxDurSmall@@3HA ; g_iFenrirDefaultMaxDurSmall
  01219	8b f8		 mov	 edi, eax
  0121b	8b 06		 mov	 eax, DWORD PTR [esi]
  0121d	57		 push	 edi
  0121e	52		 push	 edx
  0121f	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@PNECBEHH@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$KB?$MA?$KH?S?$DP?$DP?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH?$LE@
  01224	50		 push	 eax
  01225	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0122a	83 c4 10	 add	 esp, 16			; 00000010H

  0122d	89 3d 00 00 00
	00		 mov	 DWORD PTR ?g_iFenrirDefaultMaxDurSmall@@3HA, edi ; g_iFenrirDefaultMaxDurSmall

  01233	e9 32 4d 00 00	 jmp	 $LN899@Management
$LN740@Management:

  01238	8b cf		 mov	 ecx, edi
  0123a	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0123f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iFenrirElfMaxDurSmall@@3HA ; g_iFenrirElfMaxDurSmall
  01245	8b 16		 mov	 edx, DWORD PTR [esi]
  01247	8b f8		 mov	 edi, eax
  01249	57		 push	 edi
  0124a	51		 push	 ecx
  0124b	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@DAKDBCPD@?$FL?$KH?$KI?$KH?X?$KH?W?$KB?$MA?$DP?$KH?U?$KH?$KC?$KB?h?$DP?$DP?$KB?$MA?$KH?W?$KB?$KE?$KH?$KD?$KB?c?$KH?$KH?$DP?$KH@
  01250	52		 push	 edx
  01251	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  01256	83 c4 10	 add	 esp, 16			; 00000010H

  01259	89 3d 00 00 00
	00		 mov	 DWORD PTR ?g_iFenrirElfMaxDurSmall@@3HA, edi ; g_iFenrirElfMaxDurSmall

  0125f	e9 06 4d 00 00	 jmp	 $LN899@Management
$LN739@Management:

  01264	8b cf		 mov	 ecx, edi
  01266	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0126b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0126d	8b f8		 mov	 edi, eax
  0126f	8b 86 54 01 00
	00		 mov	 eax, DWORD PTR [esi+340]
  01275	57		 push	 edi
  01276	50		 push	 eax
  01277	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@FFLABGDE@?$FL?$DP?$DP?$DP?$KH?V?$DP?$KH?h?$KH?$KF?$DP?$DP?$DP?$KH?$KC?$KB?h?$FN?5?$CFd?5?9?$DO?5?$CFd?$AA@
  0127c	51		 push	 ecx
  0127d	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

  01282	8b 86 58 01 00
	00		 mov	 eax, DWORD PTR [esi+344]
  01288	03 86 5c 01 00
	00		 add	 eax, DWORD PTR [esi+348]
  0128e	83 c4 10	 add	 esp, 16			; 00000010H
  01291	3b f8		 cmp	 edi, eax
  01293	7e 02		 jle	 SHORT $LN738@Management

  01295	8b f8		 mov	 edi, eax
$LN738@Management:

  01297	d9 86 fc 00 00
	00		 fld	 DWORD PTR [esi+252]
  0129d	57		 push	 edi
  0129e	6a 00		 push	 0
  012a0	68 ff 00 00 00	 push	 255			; 000000ffH
  012a5	89 be 54 01 00
	00		 mov	 DWORD PTR [esi+340], edi
  012ab	e8 00 00 00 00	 call	 __ftol2_sse
  012b0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  012b2	50		 push	 eax
  012b3	51		 push	 ecx
  012b4	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  012b9	83 c4 14	 add	 esp, 20			; 00000014H
  012bc	e9 a9 4c 00 00	 jmp	 $LN899@Management
$LN737@Management:

  012c1	8b 96 5c 01 00
	00		 mov	 edx, DWORD PTR [esi+348]
  012c7	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  012cd	03 96 58 01 00
	00		 add	 edx, DWORD PTR [esi+344]
  012d3	8b 86 54 01 00
	00		 mov	 eax, DWORD PTR [esi+340]
  012d9	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  012df	8b 0e		 mov	 ecx, DWORD PTR [esi]
  012e1	52		 push	 edx
  012e2	50		 push	 eax
  012e3	83 ec 10	 sub	 esp, 16			; 00000010H
  012e6	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  012ea	d9 86 fc 00 00
	00		 fld	 DWORD PTR [esi+252]
  012f0	dd 1c 24	 fstp	 QWORD PTR [esp]
  012f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BFOILIFL@HP?3?$CF7?41f?1?$CF7?41f?5?0?5SD?3?$CFd?1?$CFd?$AA@
  012f8	51		 push	 ecx
  012f9	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  012fe	83 c4 20	 add	 esp, 32			; 00000020H

  01301	e9 64 4c 00 00	 jmp	 $LN899@Management
$LN736@Management:

  01306	8b cf		 mov	 ecx, edi
  01308	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0130d	8b cf		 mov	 ecx, edi
  0130f	8b d8		 mov	 ebx, eax
  01311	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01316	8b cf		 mov	 ecx, edi
  01318	89 45 f8	 mov	 DWORD PTR _iEffectValue$224460[ebp], eax
  0131b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01320	8b 55 f8	 mov	 edx, DWORD PTR _iEffectValue$224460[ebp]
  01323	50		 push	 eax
  01324	52		 push	 edx
  01325	53		 push	 ebx
  01326	56		 push	 esi
  01327	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  0132c	e8 00 00 00 00	 call	 ?SetManualItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HHH@Z ; CItemAddOption::SetManualItemEffect

  01331	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  01337	8b 86 5c 01 00
	00		 mov	 eax, DWORD PTR [esi+348]
  0133d	03 86 58 01 00
	00		 add	 eax, DWORD PTR [esi+344]
  01343	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  01349	50		 push	 eax
  0134a	6a 00		 push	 0
  0134c	68 fe 00 00 00	 push	 254			; 000000feH
  01351	e8 00 00 00 00	 call	 __ftol2_sse
  01356	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01358	50		 push	 eax
  01359	51		 push	 ecx
  0135a	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend

  0135f	db 86 50 01 00
	00		 fild	 DWORD PTR [esi+336]
  01365	8b 96 30 01 00
	00		 mov	 edx, DWORD PTR [esi+304]
  0136b	03 96 2c 01 00
	00		 add	 edx, DWORD PTR [esi+300]
  01371	d8 86 14 01 00
	00		 fadd	 DWORD PTR [esi+276]
  01377	83 c4 14	 add	 esp, 20			; 00000014H
  0137a	52		 push	 edx
  0137b	6a 00		 push	 0
  0137d	68 fe 00 00 00	 push	 254			; 000000feH
  01382	e8 00 00 00 00	 call	 __ftol2_sse
  01387	50		 push	 eax
  01388	8b 06		 mov	 eax, DWORD PTR [esi]
  0138a	50		 push	 eax
  0138b	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01390	83 c4 14	 add	 esp, 20			; 00000014H
  01393	e9 d2 4b 00 00	 jmp	 $LN899@Management
$LN735@Management:

  01398	8b f3		 mov	 esi, ebx
  0139a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  013a0	bf 05 00 00 00	 mov	 edi, 5
  013a5	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL734@Management:

  013b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  013b5	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  013bd	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  013c5	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  013cd	6a 00		 push	 0
  013cf	6a 00		 push	 0
  013d1	6a ff		 push	 -1
  013d3	6a 00		 push	 0
  013d5	6a 00		 push	 0
  013d7	6a 00		 push	 0
  013d9	6a 00		 push	 0
  013db	6a 00		 push	 0
  013dd	68 0f 18 00 00	 push	 6159			; 0000180fH
  013e2	51		 push	 ecx
  013e3	52		 push	 edx
  013e4	50		 push	 eax
  013e5	53		 push	 ebx
  013e6	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  013eb	83 c4 34	 add	 esp, 52			; 00000034H
  013ee	4f		 dec	 edi
  013ef	75 bf		 jne	 SHORT $LL734@Management

  013f1	bf 05 00 00 00	 mov	 edi, 5
  013f6	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL731@Management:

  01400	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01405	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  0140d	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  01415	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  0141d	6a 00		 push	 0
  0141f	6a 00		 push	 0
  01421	6a ff		 push	 -1
  01423	6a 00		 push	 0
  01425	6a 00		 push	 0
  01427	6a 00		 push	 0
  01429	6a 00		 push	 0
  0142b	6a 00		 push	 0
  0142d	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  01432	51		 push	 ecx
  01433	52		 push	 edx
  01434	50		 push	 eax
  01435	53		 push	 ebx
  01436	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0143b	83 c4 34	 add	 esp, 52			; 00000034H
  0143e	4f		 dec	 edi
  0143f	75 bf		 jne	 SHORT $LL731@Management

  01441	bf 05 00 00 00	 mov	 edi, 5
  01446	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL728@Management:

  01450	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01455	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  0145d	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  01465	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  0146d	6a 00		 push	 0
  0146f	6a 00		 push	 0
  01471	6a ff		 push	 -1
  01473	6a 00		 push	 0
  01475	6a 00		 push	 0
  01477	6a 00		 push	 0
  01479	6a 00		 push	 0
  0147b	6a 00		 push	 0
  0147d	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  01482	51		 push	 ecx
  01483	52		 push	 edx
  01484	50		 push	 eax
  01485	53		 push	 ebx
  01486	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0148b	83 c4 34	 add	 esp, 52			; 00000034H
  0148e	4f		 dec	 edi
  0148f	75 bf		 jne	 SHORT $LL728@Management

  01491	e9 d4 4a 00 00	 jmp	 $LN899@Management
$LN725@Management:

  01496	8b cf		 mov	 ecx, edi
  01498	c7 85 60 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _EBP7A4$224490[ebp], 0
  014a2	c6 85 64 fd ff
	ff 00		 mov	 BYTE PTR _EBP7A8$224491[ebp], 0
  014a9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  014ae	8b f0		 mov	 esi, eax

  014b0	8b cf		 mov	 ecx, edi
  014b2	89 75 f8	 mov	 DWORD PTR _ItemType$224485[ebp], esi
  014b5	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  014ba	8b cf		 mov	 ecx, edi
  014bc	89 85 58 fd ff
	ff		 mov	 DWORD PTR _ItemIndex$224486[ebp], eax
  014c2	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  014c7	8b cf		 mov	 ecx, edi
  014c9	89 85 48 fd ff
	ff		 mov	 DWORD PTR _EBP798$224487[ebp], eax
  014cf	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  014d4	8b cf		 mov	 ecx, edi
  014d6	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iDur$224492[ebp], eax
  014dc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  014e1	8b cf		 mov	 ecx, edi
  014e3	89 85 40 fd ff
	ff		 mov	 DWORD PTR _EBP79C$224488[ebp], eax
  014e9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  014ee	8b cf		 mov	 ecx, edi
  014f0	89 85 4c fd ff
	ff		 mov	 DWORD PTR _EBP7A0$224489[ebp], eax
  014f6	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  014fb	b9 03 00 00 00	 mov	 ecx, 3
  01500	83 fe 0d	 cmp	 esi, 13			; 0000000dH
  01503	75 15		 jne	 SHORT $LN724@Management
  01505	39 8d 58 fd ff
	ff		 cmp	 DWORD PTR _ItemIndex$224486[ebp], ecx
  0150b	75 0d		 jne	 SHORT $LN724@Management

  0150d	83 f8 08	 cmp	 eax, 8
  01510	7d 46		 jge	 SHORT $LN1052@Management

  01512	89 85 60 fd ff
	ff		 mov	 DWORD PTR _EBP7A4$224490[ebp], eax

  01518	eb 3e		 jmp	 SHORT $LN1052@Management
$LN724@Management:

  0151a	83 f8 04	 cmp	 eax, 4
  0151d	75 0c		 jne	 SHORT $LN721@Management

  0151f	c7 85 60 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _EBP7A4$224490[ebp], 1
  01529	eb 2d		 jmp	 SHORT $LN1052@Management
$LN721@Management:

  0152b	83 f8 08	 cmp	 eax, 8
  0152e	75 0c		 jne	 SHORT $LN719@Management

  01530	c7 85 60 fd ff
	ff 02 00 00 00	 mov	 DWORD PTR _EBP7A4$224490[ebp], 2
  0153a	eb 1c		 jmp	 SHORT $LN1052@Management
$LN719@Management:

  0153c	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  0153f	75 08		 jne	 SHORT $LN717@Management

  01541	89 8d 60 fd ff
	ff		 mov	 DWORD PTR _EBP7A4$224490[ebp], ecx
  01547	eb 0f		 jmp	 SHORT $LN1052@Management
$LN717@Management:

  01549	83 f8 10	 cmp	 eax, 16			; 00000010H
  0154c	75 0a		 jne	 SHORT $LN1052@Management

  0154e	c7 85 60 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR _EBP7A4$224490[ebp], 4
$LN1052@Management:

  01558	8b cf		 mov	 ecx, edi
  0155a	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  0155f	8b f0		 mov	 esi, eax

  01561	8b cf		 mov	 ecx, edi
  01563	89 b5 50 fd ff
	ff		 mov	 DWORD PTR _EBP7B4$224505[ebp], esi
  01569	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0156e	85 f6		 test	 esi, esi
  01570	74 2e		 je	 SHORT $LN708@Management

  01572	85 c0		 test	 eax, eax
  01574	75 17		 jne	 SHORT $LN713@Management

  01576	e8 00 00 00 00	 call	 _rand
  0157b	99		 cdq
  0157c	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01581	f7 f9		 idiv	 ecx
  01583	83 fa 50	 cmp	 edx, 80			; 00000050H
  01586	7d 0f		 jge	 SHORT $LN709@Management

  01588	83 ce 04	 or	 esi, 4

  0158b	eb 0d		 jmp	 SHORT $LN1126@Management
$LN713@Management:

  0158d	83 f8 01	 cmp	 eax, 1
  01590	75 05		 jne	 SHORT $LN709@Management

  01592	83 ce 04	 or	 esi, 4

  01595	eb 03		 jmp	 SHORT $LN1126@Management
$LN709@Management:

  01597	83 ce 08	 or	 esi, 8
$LN1126@Management:
  0159a	89 b5 50 fd ff
	ff		 mov	 DWORD PTR _EBP7B4$224505[ebp], esi
$LN708@Management:

  015a0	8b cf		 mov	 ecx, edi
  015a2	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  015a7	85 c0		 test	 eax, eax
  015a9	7e 07		 jle	 SHORT $LN707@Management

  015ab	c6 85 64 fd ff
	ff 20		 mov	 BYTE PTR _EBP7A8$224491[ebp], 32 ; 00000020H
$LN707@Management:

  015b2	8b cf		 mov	 ecx, edi
  015b4	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  015b9	85 c0		 test	 eax, eax
  015bb	7e 07		 jle	 SHORT $LN706@Management

  015bd	80 8d 64 fd ff
	ff 10		 or	 BYTE PTR _EBP7A8$224491[ebp], 16 ; 00000010H
$LN706@Management:

  015c4	8b cf		 mov	 ecx, edi
  015c6	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  015cb	85 c0		 test	 eax, eax
  015cd	7e 07		 jle	 SHORT $LN705@Management

  015cf	80 8d 64 fd ff
	ff 08		 or	 BYTE PTR _EBP7A8$224491[ebp], 8
$LN705@Management:

  015d6	8b cf		 mov	 ecx, edi
  015d8	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  015dd	85 c0		 test	 eax, eax
  015df	7e 07		 jle	 SHORT $LN704@Management

  015e1	80 8d 64 fd ff
	ff 04		 or	 BYTE PTR _EBP7A8$224491[ebp], 4
$LN704@Management:

  015e8	8b cf		 mov	 ecx, edi
  015ea	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  015ef	85 c0		 test	 eax, eax
  015f1	7e 07		 jle	 SHORT $LN703@Management

  015f3	80 8d 64 fd ff
	ff 02		 or	 BYTE PTR _EBP7A8$224491[ebp], 2
$LN703@Management:

  015fa	8b cf		 mov	 ecx, edi
  015fc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01601	85 c0		 test	 eax, eax
  01603	7e 07		 jle	 SHORT $LN702@Management

  01605	80 8d 64 fd ff
	ff 01		 or	 BYTE PTR _EBP7A8$224491[ebp], 1
$LN702@Management:

  0160c	8b 4d f8	 mov	 ecx, DWORD PTR _ItemType$224485[ebp]
  0160f	81 f9 ff 01 00
	00		 cmp	 ecx, 511		; 000001ffH
  01615	0f 87 4f 49 00
	00		 ja	 $LN899@Management
  0161b	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$224486[ebp]
  01621	3d ff 01 00 00	 cmp	 eax, 511		; 000001ffH
  01626	0f 87 3e 49 00
	00		 ja	 $LN899@Management

  0162c	50		 push	 eax
  0162d	51		 push	 ecx
  0162e	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  01633	8b f8		 mov	 edi, eax
  01635	83 c4 08	 add	 esp, 8

  01638	83 ff 13	 cmp	 edi, 19			; 00000013H
  0163b	74 18		 je	 SHORT $LN699@Management
  0163d	81 ff 12 08 00
	00		 cmp	 edi, 2066		; 00000812H
  01643	74 10		 je	 SHORT $LN699@Management
  01645	81 ff 0a 0a 00
	00		 cmp	 edi, 2570		; 00000a0aH
  0164b	74 08		 je	 SHORT $LN699@Management
  0164d	81 ff 0d 04 00
	00		 cmp	 edi, 1037		; 0000040dH
  01653	75 07		 jne	 SHORT $LN700@Management
$LN699@Management:

  01655	c6 85 64 fd ff
	ff 3f		 mov	 BYTE PTR _EBP7A8$224491[ebp], 63 ; 0000003fH
$LN700@Management:
  0165c	8b f3		 mov	 esi, ebx
  0165e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  01664	c7 85 58 fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv3980[ebp], 15 ; 0000000fH
  0166e	8b ff		 npad	 2
$LL698@Management:

  01670	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7B4$224505[ebp]
  01676	8b 85 64 fd ff
	ff		 mov	 eax, DWORD PTR _EBP7A8$224491[ebp]
  0167c	8b 8d 60 fd ff
	ff		 mov	 ecx, DWORD PTR _EBP7A4$224490[ebp]
  01682	52		 push	 edx
  01683	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A0$224489[ebp]
  01689	50		 push	 eax
  0168a	8b 85 40 fd ff
	ff		 mov	 eax, DWORD PTR _EBP79C$224488[ebp]
  01690	6a ff		 push	 -1
  01692	51		 push	 ecx
  01693	8b 8d 54 fd ff
	ff		 mov	 ecx, DWORD PTR _iDur$224492[ebp]
  01699	52		 push	 edx
  0169a	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _EBP798$224487[ebp]
  016a0	50		 push	 eax
  016a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016a6	51		 push	 ecx
  016a7	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  016af	52		 push	 edx
  016b0	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  016b8	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  016c0	57		 push	 edi
  016c1	51		 push	 ecx
  016c2	52		 push	 edx
  016c3	50		 push	 eax
  016c4	53		 push	 ebx
  016c5	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  016ca	83 c4 34	 add	 esp, 52			; 00000034H
  016cd	ff 8d 58 fd ff
	ff		 dec	 DWORD PTR tv3980[ebp]
  016d3	75 9b		 jne	 SHORT $LL698@Management

  016d5	e9 90 48 00 00	 jmp	 $LN899@Management
$LN695@Management:
  016da	8b f3		 mov	 esi, ebx
  016dc	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  016e2	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  016e7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL694@Management:

  016f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016f5	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  016fd	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  01705	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  0170d	6a 00		 push	 0
  0170f	6a 00		 push	 0
  01711	6a ff		 push	 -1
  01713	6a 00		 push	 0
  01715	6a 00		 push	 0
  01717	6a 00		 push	 0
  01719	6a 00		 push	 0
  0171b	6a 00		 push	 0
  0171d	68 0f 18 00 00	 push	 6159			; 0000180fH
  01722	51		 push	 ecx
  01723	52		 push	 edx
  01724	50		 push	 eax
  01725	53		 push	 ebx
  01726	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0172b	83 c4 34	 add	 esp, 52			; 00000034H
  0172e	4f		 dec	 edi
  0172f	75 bf		 jne	 SHORT $LL694@Management

  01731	e9 34 48 00 00	 jmp	 $LN899@Management
$LN691@Management:
  01736	8b f3		 mov	 esi, ebx
  01738	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  0173e	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
$LL690@Management:

  01743	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01748	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  01750	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  01758	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  01760	6a 00		 push	 0
  01762	6a 00		 push	 0
  01764	6a ff		 push	 -1
  01766	6a 00		 push	 0
  01768	6a 00		 push	 0
  0176a	6a 00		 push	 0
  0176c	6a 00		 push	 0
  0176e	6a 00		 push	 0
  01770	68 10 1c 00 00	 push	 7184			; 00001c10H
  01775	51		 push	 ecx
  01776	52		 push	 edx
  01777	50		 push	 eax
  01778	53		 push	 ebx
  01779	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0177e	83 c4 34	 add	 esp, 52			; 00000034H
  01781	4f		 dec	 edi
  01782	75 bf		 jne	 SHORT $LL690@Management

  01784	e9 e1 47 00 00	 jmp	 $LN899@Management
$LN687@Management:
  01789	8b f3		 mov	 esi, ebx
  0178b	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

  01791	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  01796	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL686@Management:

  017a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  017a5	0f b6 8c 06 46
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+326]
  017ad	0f b6 94 06 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+324]
  017b5	0f b6 84 06 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+329]
  017bd	6a 00		 push	 0
  017bf	6a 00		 push	 0
  017c1	6a ff		 push	 -1
  017c3	6a 00		 push	 0
  017c5	6a 00		 push	 0
  017c7	6a 00		 push	 0
  017c9	6a 00		 push	 0
  017cb	6a 00		 push	 0
  017cd	68 16 1c 00 00	 push	 7190			; 00001c16H
  017d2	51		 push	 ecx
  017d3	52		 push	 edx
  017d4	50		 push	 eax
  017d5	53		 push	 ebx
  017d6	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  017db	83 c4 34	 add	 esp, 52			; 00000034H
  017de	4f		 dec	 edi
  017df	75 bf		 jne	 SHORT $LL686@Management

  017e1	e9 84 47 00 00	 jmp	 $LN899@Management
$LN683@Management:

  017e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  017ec	8b cb		 mov	 ecx, ebx
  017ee	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H

  017f4	6a 00		 push	 0
  017f6	53		 push	 ebx
  017f7	c7 84 11 f0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+edx+240], 0
  01802	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  01807	83 c4 08	 add	 esp, 8

  0180a	e9 5b 47 00 00	 jmp	 $LN899@Management
$LN682@Management:

  0180f	8b cf		 mov	 ecx, edi
  01811	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  01816	8b f8		 mov	 edi, eax

  01818	85 ff		 test	 edi, edi
  0181a	79 04		 jns	 SHORT $LN681@Management

  0181c	33 ff		 xor	 edi, edi
  0181e	eb 0d		 jmp	 SHORT $LN679@Management
$LN681@Management:

  01820	81 ff c8 00 00
	00		 cmp	 edi, 200		; 000000c8H
  01826	7e 05		 jle	 SHORT $LN679@Management

  01828	bf c8 00 00 00	 mov	 edi, 200		; 000000c8H
$LN679@Management:

  0182d	56		 push	 esi
  0182e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  01833	e8 00 00 00 00	 call	 ?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; CMasterLevelSystem::CheckIsMasterLevelCharacter
  01838	85 c0		 test	 eax, eax
  0183a	74 6d		 je	 SHORT $LN677@Management
  0183c	66 83 be d0 00
	00 00 00	 cmp	 WORD PTR [esi+208], 0
  01844	7c 04		 jl	 SHORT $LN678@Management
  01846	85 ff		 test	 edi, edi
  01848	74 5f		 je	 SHORT $LN677@Management
$LN678@Management:

  0184a	57		 push	 edi
  0184b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  01850	66 89 be d0 00
	00 00		 mov	 WORD PTR [esi+208], di
  01857	e8 00 00 00 00	 call	 ?GetLevelExperienceTable@CMasterLevelSystem@@QAE_JH@Z ; CMasterLevelSystem::GetLevelExperienceTable
  0185c	89 86 d8 00 00
	00		 mov	 DWORD PTR [esi+216], eax

  01862	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  01865	50		 push	 eax
  01866	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  0186b	89 96 dc 00 00
	00		 mov	 DWORD PTR [esi+220], edx
  01871	e8 00 00 00 00	 call	 ?GetLevelExperienceTable@CMasterLevelSystem@@QAE_JH@Z ; CMasterLevelSystem::GetLevelExperienceTable

  01876	56		 push	 esi
  01877	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  0187c	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax
  01882	89 96 e4 00 00
	00		 mov	 DWORD PTR [esi+228], edx
  01888	e8 00 00 00 00	 call	 ?GCSendMasterLevelWindowStatus@CMasterLevelSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; CMasterLevelSystem::GCSendMasterLevelWindowStatus

  0188d	57		 push	 edi
  0188e	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  01891	51		 push	 ecx
  01892	83 c6 6c	 add	 esi, 108		; 0000006cH
  01895	56		 push	 esi
  01896	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JMPPEKFD@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@
  0189b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  018a1	83 c4 10	 add	 esp, 16			; 00000010H

  018a4	e9 c1 46 00 00	 jmp	 $LN899@Management
$LN677@Management:

  018a9	57		 push	 edi
  018aa	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  018ad	52		 push	 edx
  018ae	83 c6 6c	 add	 esi, 108		; 0000006cH
  018b1	56		 push	 esi
  018b2	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@FKDLGCCJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1maste@
  018b7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  018bd	83 c4 10	 add	 esp, 16			; 00000010H

  018c0	e9 a5 46 00 00	 jmp	 $LN899@Management
$LN676@Management:

  018c5	8b cf		 mov	 ecx, edi
  018c7	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  018cc	56		 push	 esi
  018cd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  018d2	8b f8		 mov	 edi, eax
  018d4	e8 00 00 00 00	 call	 ?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; CMasterLevelSystem::CheckIsMasterLevelCharacter
  018d9	85 c0		 test	 eax, eax
  018db	75 1c		 jne	 SHORT $LN675@Management

  018dd	57		 push	 edi
  018de	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  018e1	50		 push	 eax
  018e2	83 c6 6c	 add	 esi, 108		; 0000006cH
  018e5	56		 push	 esi
  018e6	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EDNEDAPJ@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@
  018eb	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  018f1	83 c4 10	 add	 esp, 16			; 00000010H

  018f4	e9 71 46 00 00	 jmp	 $LN899@Management
$LN675@Management:

  018f9	56		 push	 esi
  018fa	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  018ff	89 be e8 00 00
	00		 mov	 DWORD PTR [esi+232], edi
  01905	e8 00 00 00 00	 call	 ?GCSendMasterLevelWindowStatus@CMasterLevelSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; CMasterLevelSystem::GCSendMasterLevelWindowStatus

  0190a	57		 push	 edi
  0190b	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  0190e	51		 push	 ecx
  0190f	83 c6 6c	 add	 esi, 108		; 0000006cH
  01912	56		 push	 esi
  01913	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEOLPEF@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1mlpoi@
  01918	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0191e	83 c4 10	 add	 esp, 16			; 00000010H

  01921	e9 44 46 00 00	 jmp	 $LN899@Management
$LN674@Management:

  01926	33 ff		 xor	 edi, edi
  01928	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL673@Management:

  01930	8b 8e c8 04 00
	00		 mov	 ecx, DWORD PTR [esi+1224]
  01936	03 cf		 add	 ecx, edi
  01938	e8 00 00 00 00	 call	 ?IsMagic@CMagicInf@@QAEHXZ ; CMagicInf::IsMagic
  0193d	83 f8 01	 cmp	 eax, 1
  01940	75 26		 jne	 SHORT $LN672@Management

  01942	8b 96 c8 04 00
	00		 mov	 edx, DWORD PTR [esi+1224]
  01948	8b 44 3a 08	 mov	 eax, DWORD PTR [edx+edi+8]
  0194c	50		 push	 eax
  0194d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterSkillSystem@@3VCMasterLevelSkillTreeSystem@@A ; g_MasterSkillSystem
  01952	e8 00 00 00 00	 call	 ?CheckRequireStatus@CMasterLevelSkillTreeSystem@@QAEHH@Z ; CMasterLevelSkillTreeSystem::CheckRequireStatus
  01957	85 c0		 test	 eax, eax
  01959	74 0d		 je	 SHORT $LN672@Management

  0195b	8b 8e c8 04 00
	00		 mov	 ecx, DWORD PTR [esi+1224]
  01961	03 cf		 add	 ecx, edi
  01963	e8 00 00 00 00	 call	 ?Clear@CMagicInf@@QAEXXZ ; CMagicInf::Clear
$LN672@Management:

  01968	83 c7 18	 add	 edi, 24			; 00000018H
  0196b	81 ff 10 0e 00
	00		 cmp	 edi, 3600		; 00000e10H
  01971	7c bd		 jl	 SHORT $LL673@Management

  01973	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01975	6a 01		 push	 1
  01977	51		 push	 ecx
  01978	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CJOPDKEC@Master?5Skill?5Reset?$AA@
  0197d	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  01982	8b 96 e8 00 00
	00		 mov	 edx, DWORD PTR [esi+232]
  01988	52		 push	 edx
  01989	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  0198c	50		 push	 eax
  0198d	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  01990	51		 push	 ecx
  01991	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MPGEEBEI@Use?5Test?5Command?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5?1ms_re@
  01996	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  0199c	8b 16		 mov	 edx, DWORD PTR [esi]
  0199e	6a 01		 push	 1
  019a0	52		 push	 edx
  019a1	e8 00 00 00 00	 call	 ?gObjCloseSet@@YAXHH@Z	; gObjCloseSet
  019a6	83 c4 24	 add	 esp, 36			; 00000024H

  019a9	e9 bc 45 00 00	 jmp	 $LN899@Management
$LN668@Management:

  019ae	8b cf		 mov	 ecx, edi
  019b0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  019b5	48		 dec	 eax
  019b6	f7 d8		 neg	 eax
  019b8	1b c0		 sbb	 eax, eax
  019ba	40		 inc	 eax
  019bb	a3 00 00 00 00	 mov	 DWORD PTR ?g_bAbilityDebug@@3HA, eax ; g_bAbilityDebug

  019c0	83 f8 01	 cmp	 eax, 1
  019c3	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02IAAGKKDJ@On?$AA@
  019c8	74 05		 je	 SHORT $LN907@Management
  019ca	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03GCDBBDDL@Off?$AA@
$LN907@Management:
  019cf	50		 push	 eax
  019d0	8d 85 78 fd ff
	ff		 lea	 eax, DWORD PTR _szTemp$224594[ebp]
  019d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CHFHKJND@Ability?5Debug?3?5?$CFs?$AA@
  019db	50		 push	 eax
  019dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  019e2	8b 0e		 mov	 ecx, DWORD PTR [esi]
  019e4	6a 01		 push	 1
  019e6	51		 push	 ecx
  019e7	8d 95 78 fd ff
	ff		 lea	 edx, DWORD PTR _szTemp$224594[ebp]
  019ed	52		 push	 edx
  019ee	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  019f3	83 c4 18	 add	 esp, 24			; 00000018H

  019f6	e9 6f 45 00 00	 jmp	 $LN899@Management
$LN667@Management:

  019fb	8b cf		 mov	 ecx, edi
  019fd	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01a02	8b cf		 mov	 ecx, edi
  01a04	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iItemPos$224599[ebp], eax
  01a0a	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01a0f	8b cf		 mov	 ecx, edi
  01a11	88 45 f8	 mov	 BYTE PTR _EBP8FC$224600[ebp], al
  01a14	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01a19	8b cf		 mov	 ecx, edi

  01a1b	8d 58 ff	 lea	 ebx, DWORD PTR [eax-1]
  01a1e	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  01a23	8b bd 58 fd ff
	ff		 mov	 edi, DWORD PTR _iItemPos$224599[ebp]
  01a29	8b 55 f8	 mov	 edx, DWORD PTR _EBP8FC$224600[ebp]
  01a2c	fe c8		 dec	 al
  01a2e	0f b6 c0	 movzx	 eax, al
  01a31	50		 push	 eax
  01a32	8b c7		 mov	 eax, edi
  01a34	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  01a3a	03 86 24 0e 00
	00		 add	 eax, DWORD PTR [esi+3620]
  01a40	0f b6 cb	 movzx	 ecx, bl
  01a43	51		 push	 ecx
  01a44	52		 push	 edx
  01a45	50		 push	 eax
  01a46	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  01a4b	e8 00 00 00 00	 call	 ?MakeManualOptionbyCalc@CSocketOption@@QAEEPAVCItem@@EEE@Z ; CSocketOption::MakeManualOptionbyCalc

  01a50	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01a52	57		 push	 edi
  01a53	51		 push	 ecx
  01a54	e8 00 00 00 00	 call	 ?GCInventoryItemOneSend@@YAXHH@Z ; GCInventoryItemOneSend
  01a59	83 c4 08	 add	 esp, 8

  01a5c	e9 09 45 00 00	 jmp	 $LN899@Management
$LN666@Management:

  01a61	8b cf		 mov	 ecx, edi
  01a63	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  01a68	8b d8		 mov	 ebx, eax

  01a6a	8b cf		 mov	 ecx, edi
  01a6c	89 5d f8	 mov	 DWORD PTR _iItemPos$224604[ebp], ebx
  01a6f	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01a74	84 c0		 test	 al, al
  01a76	75 36		 jne	 SHORT $LN665@Management

  01a78	33 ff		 xor	 edi, edi
  01a7a	69 db d4 00 00
	00		 imul	 ebx, 212		; 000000d4H
$LL664@Management:

  01a80	8b 96 24 0e 00
	00		 mov	 edx, DWORD PTR [esi+3620]
  01a86	57		 push	 edi
  01a87	03 d3		 add	 edx, ebx
  01a89	52		 push	 edx
  01a8a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  01a8f	e8 00 00 00 00	 call	 ?RemakeSocketOption@CSocketOption@@QAEEPAVCItem@@E@Z ; CSocketOption::RemakeSocketOption
  01a94	47		 inc	 edi
  01a95	83 ff 05	 cmp	 edi, 5
  01a98	7c e6		 jl	 SHORT $LL664@Management

  01a9a	8b 5d f8	 mov	 ebx, DWORD PTR _iItemPos$224604[ebp]

  01a9d	8b 16		 mov	 edx, DWORD PTR [esi]
  01a9f	53		 push	 ebx
  01aa0	52		 push	 edx
  01aa1	e8 00 00 00 00	 call	 ?GCInventoryItemOneSend@@YAXHH@Z ; GCInventoryItemOneSend
  01aa6	83 c4 08	 add	 esp, 8

  01aa9	e9 bc 44 00 00	 jmp	 $LN899@Management
$LN665@Management:

  01aae	8b cb		 mov	 ecx, ebx
  01ab0	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  01ab6	03 8e 24 0e 00
	00		 add	 ecx, DWORD PTR [esi+3620]
  01abc	fe c8		 dec	 al
  01abe	0f b6 c0	 movzx	 eax, al
  01ac1	50		 push	 eax
  01ac2	51		 push	 ecx
  01ac3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  01ac8	e8 00 00 00 00	 call	 ?RemakeSocketOption@CSocketOption@@QAEEPAVCItem@@E@Z ; CSocketOption::RemakeSocketOption

  01acd	8b 16		 mov	 edx, DWORD PTR [esi]
  01acf	53		 push	 ebx
  01ad0	52		 push	 edx
  01ad1	e8 00 00 00 00	 call	 ?GCInventoryItemOneSend@@YAXHH@Z ; GCInventoryItemOneSend
  01ad6	83 c4 08	 add	 esp, 8

  01ad9	e9 8c 44 00 00	 jmp	 $LN899@Management
$LN660@Management:

  01ade	8b cf		 mov	 ecx, edi
  01ae0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01ae5	8b cf		 mov	 ecx, edi
  01ae7	8b d8		 mov	 ebx, eax
  01ae9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01aee	8b cb		 mov	 ecx, ebx
  01af0	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  01af6	03 8e 24 0e 00
	00		 add	 ecx, DWORD PTR [esi+3620]
  01afc	88 45 f8	 mov	 BYTE PTR _iSocketSlot$224614[ebp], al
  01aff	8b 45 f8	 mov	 eax, DWORD PTR _iSocketSlot$224614[ebp]
  01b02	50		 push	 eax
  01b03	51		 push	 ecx
  01b04	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  01b09	e8 00 00 00 00	 call	 ?ClearSlotOption@CSocketOption@@QAEXPAVCItem@@E@Z ; CSocketOption::ClearSlotOption

  01b0e	8b 16		 mov	 edx, DWORD PTR [esi]
  01b10	53		 push	 ebx
  01b11	52		 push	 edx
  01b12	e8 00 00 00 00	 call	 ?GCInventoryItemOneSend@@YAXHH@Z ; GCInventoryItemOneSend
  01b17	83 c4 08	 add	 esp, 8

  01b1a	e9 4b 44 00 00	 jmp	 $LN899@Management
$LN659@Management:

  01b1f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FKKMDPJD@FIRECRACK?4?$AA@
  01b24	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  01b27	50		 push	 eax
  01b28	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  01b2b	51		 push	 ecx
  01b2c	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  01b2f	52		 push	 edx
  01b30	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01b35	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  01b3b	0f bf 86 46 01
	00 00		 movsx	 eax, WORD PTR [esi+326]
  01b42	0f bf 9e 44 01
	00 00		 movsx	 ebx, WORD PTR [esi+324]

  01b49	6a 07		 push	 7
  01b4b	6a 40		 push	 64			; 00000040H
  01b4d	8d 8d 58 fd ff
	ff		 lea	 ecx, DWORD PTR _pMsg$224620[ebp]
  01b53	68 f3 00 00 00	 push	 243			; 000000f3H
  01b58	51		 push	 ecx
  01b59	89 45 f8	 mov	 DWORD PTR _y$224619[ebp], eax
  01b5c	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  01b61	83 c4 24	 add	 esp, 36			; 00000024H

  01b64	c6 85 5c fd ff
	ff 00		 mov	 BYTE PTR _pMsg$224620[ebp+4], 0
  01b6b	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
$LL658@Management:

  01b70	e8 00 00 00 00	 call	 _rand
  01b75	99		 cdq
  01b76	b9 05 00 00 00	 mov	 ecx, 5
  01b7b	f7 f9		 idiv	 ecx
  01b7d	02 d2		 add	 dl, dl
  01b7f	02 d3		 add	 dl, bl
  01b81	80 ea 04	 sub	 dl, 4
  01b84	88 95 5d fd ff
	ff		 mov	 BYTE PTR _pMsg$224620[ebp+5], dl

  01b8a	e8 00 00 00 00	 call	 _rand
  01b8f	99		 cdq
  01b90	b9 05 00 00 00	 mov	 ecx, 5
  01b95	f7 f9		 idiv	 ecx

  01b97	6a 07		 push	 7
  01b99	02 d2		 add	 dl, dl
  01b9b	02 55 f8	 add	 dl, BYTE PTR _y$224619[ebp]
  01b9e	80 ea 04	 sub	 dl, 4
  01ba1	88 95 5e fd ff
	ff		 mov	 BYTE PTR _pMsg$224620[ebp+6], dl
  01ba7	8d 95 58 fd ff
	ff		 lea	 edx, DWORD PTR _pMsg$224620[ebp]
  01bad	52		 push	 edx
  01bae	56		 push	 esi
  01baf	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z ; MsgSendV2

  01bb4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01bb6	6a 07		 push	 7
  01bb8	8d 85 58 fd ff
	ff		 lea	 eax, DWORD PTR _pMsg$224620[ebp]
  01bbe	50		 push	 eax
  01bbf	51		 push	 ecx
  01bc0	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01bc5	83 c4 18	 add	 esp, 24			; 00000018H
  01bc8	4f		 dec	 edi
  01bc9	75 a5		 jne	 SHORT $LL658@Management

  01bcb	e9 9a 43 00 00	 jmp	 $LN899@Management
$LN655@Management:

  01bd0	8b cf		 mov	 ecx, edi
  01bd2	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  01bd7	85 c0		 test	 eax, eax

  01bd9	0f 84 8b 43 00
	00		 je	 $LN899@Management

  01bdf	50		 push	 eax
  01be0	e8 00 00 00 00	 call	 ?gObjFind@@YAPAUOBJECTSTRUCT@@PAD@Z ; gObjFind
  01be5	8b d8		 mov	 ebx, eax
  01be7	83 c4 04	 add	 esp, 4

  01bea	85 db		 test	 ebx, ebx

  01bec	0f 84 78 43 00
	00		 je	 $LN899@Management

  01bf2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MIJMFKGB@User?5Watching?$AA@
  01bf7	8d 43 77	 lea	 eax, DWORD PTR [ebx+119]
  01bfa	50		 push	 eax
  01bfb	8d 53 6c	 lea	 edx, DWORD PTR [ebx+108]
  01bfe	52		 push	 edx
  01bff	89 85 58 fd ff
	ff		 mov	 DWORD PTR tv7428[ebp], eax
  01c05	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  01c08	50		 push	 eax
  01c09	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  01c0c	51		 push	 ecx
  01c0d	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  01c10	52		 push	 edx
  01c11	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@OBAKBBAF@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01c16	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  01c1c	8b 87 e4 4c 00
	00		 mov	 eax, DWORD PTR [edi+19684]
  01c22	83 c4 1c	 add	 esp, 28			; 0000001cH
  01c25	3b 03		 cmp	 eax, DWORD PTR [ebx]
  01c27	75 3c		 jne	 SHORT $LN652@Management

  01c29	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR tv7428[ebp]
  01c2f	51		 push	 ecx
  01c30	8d 95 78 fd ff
	ff		 lea	 edx, DWORD PTR _szTemp$224634[ebp]
  01c36	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CAJKHEN@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$KH?$KJ?$KH?$LK?$KH?$KC?$DP?$AA@
  01c3b	52		 push	 edx
  01c3c	c7 87 e4 4c 00
	00 ff ff ff ff	 mov	 DWORD PTR [edi+19684], -1
  01c46	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  01c4c	8b 06		 mov	 eax, DWORD PTR [esi]
  01c4e	6a 01		 push	 1
  01c50	50		 push	 eax
  01c51	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _szTemp$224634[ebp]
  01c57	51		 push	 ecx
  01c58	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  01c5d	83 c4 18	 add	 esp, 24			; 00000018H

  01c60	e9 05 43 00 00	 jmp	 $LN899@Management
$LN652@Management:

  01c65	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR tv7428[ebp]
  01c6b	52		 push	 edx
  01c6c	8d 85 78 fd ff
	ff		 lea	 eax, DWORD PTR _szTemp$224634[ebp]
  01c72	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JKKCDFDH@?$CFs?5?3?5?$KB?c?$KH?$KH?$DP?$KH?$KE?$DP?$KH?$KE?$KH?$KB?$KH?$LN?$AA@
  01c77	50		 push	 eax
  01c78	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  01c7e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01c80	6a 01		 push	 1
  01c82	51		 push	 ecx
  01c83	8d 95 78 fd ff
	ff		 lea	 edx, DWORD PTR _szTemp$224634[ebp]
  01c89	52		 push	 edx
  01c8a	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  01c8f	8b 03		 mov	 eax, DWORD PTR [ebx]
  01c91	83 c4 18	 add	 esp, 24			; 00000018H
  01c94	89 87 e4 4c 00
	00		 mov	 DWORD PTR [edi+19684], eax

  01c9a	e9 cb 42 00 00	 jmp	 $LN899@Management
$LN650@Management:

  01c9f	6a 08		 push	 8
  01ca1	53		 push	 ebx
  01ca2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  01ca7	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  01cac	84 c0		 test	 al, al

  01cae	0f 84 b6 42 00
	00		 je	 $LN899@Management

  01cb4	8b cf		 mov	 ecx, edi
  01cb6	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  01cbb	85 c0		 test	 eax, eax

  01cbd	0f 84 a7 42 00
	00		 je	 $LN899@Management

  01cc3	50		 push	 eax
  01cc4	e8 00 00 00 00	 call	 ?gObjFind@@YAPAUOBJECTSTRUCT@@PAD@Z ; gObjFind
  01cc9	8b f8		 mov	 edi, eax
  01ccb	83 c4 04	 add	 esp, 4

  01cce	85 ff		 test	 edi, edi

  01cd0	0f 84 94 42 00
	00		 je	 $LN899@Management

  01cd6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HBGDJJNF@User?5Tracking?$AA@
  01cdb	8d 4f 77	 lea	 ecx, DWORD PTR [edi+119]
  01cde	51		 push	 ecx
  01cdf	8d 57 6c	 lea	 edx, DWORD PTR [edi+108]
  01ce2	52		 push	 edx
  01ce3	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  01ce6	50		 push	 eax
  01ce7	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  01cea	51		 push	 ecx
  01ceb	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  01cee	52		 push	 edx
  01cef	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@DPOHDNID@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01cf4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  01cfa	8b 36		 mov	 esi, DWORD PTR [esi]
  01cfc	83 c4 1c	 add	 esp, 28			; 0000001cH

  01cff	85 f6		 test	 esi, esi
  01d01	0f 88 63 42 00
	00		 js	 $LN899@Management

  01d07	0f bf 87 46 01
	00 00		 movsx	 eax, WORD PTR [edi+326]
  01d0e	0f bf 8f 44 01
	00 00		 movsx	 ecx, WORD PTR [edi+324]
  01d15	0f b6 97 49 01
	00 00		 movzx	 edx, BYTE PTR [edi+329]
  01d1c	50		 push	 eax
  01d1d	51		 push	 ecx
  01d1e	52		 push	 edx
  01d1f	56		 push	 esi
  01d20	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  01d25	83 c4 10	 add	 esp, 16			; 00000010H

  01d28	e9 3d 42 00 00	 jmp	 $LN899@Management
$LN645@Management:

  01d2d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NPPBDIDN@User?5Stat?5?$CIconnection?$CJ?$AA@
  01d32	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  01d35	50		 push	 eax
  01d36	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  01d39	51		 push	 ecx
  01d3a	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  01d3d	52		 push	 edx
  01d3e	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01d43	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01d49	83 c4 14	 add	 esp, 20			; 00000014H

  01d4c	8b cf		 mov	 ecx, edi
  01d4e	c7 85 58 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _lc151$224653[ebp], 0
  01d58	bb 90 01 00 00	 mov	 ebx, 400		; 00000190H
  01d5d	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01d62	85 c0		 test	 eax, eax
  01d64	7e 06		 jle	 SHORT $LN644@Management

  01d66	89 85 58 fd ff
	ff		 mov	 DWORD PTR _lc151$224653[ebp], eax
$LN644@Management:

  01d6c	8b cf		 mov	 ecx, edi
  01d6e	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01d73	85 c0		 test	 eax, eax
  01d75	7e 02		 jle	 SHORT $LN643@Management

  01d77	8b d8		 mov	 ebx, eax
$LN643@Management:

  01d79	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _lc151$224653[ebp]
  01d7f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01d81	53		 push	 ebx
  01d82	50		 push	 eax
  01d83	51		 push	 ecx
  01d84	e8 00 00 00 00	 call	 ?gObjSendUserStatistic@@YAXHHH@Z ; gObjSendUserStatistic

  01d89	83 c4 0c	 add	 esp, 12			; 0000000cH

  01d8c	e9 d9 41 00 00	 jmp	 $LN899@Management
$LN642@Management:

  01d91	6a 07		 push	 7
  01d93	53		 push	 ebx
  01d94	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  01d99	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  01d9e	84 c0		 test	 al, al

  01da0	0f 84 c4 41 00
	00		 je	 $LN899@Management

  01da6	8b cf		 mov	 ecx, edi
  01da8	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  01dad	8b d8		 mov	 ebx, eax

  01daf	85 db		 test	 ebx, ebx

  01db1	0f 84 b3 41 00
	00		 je	 $LN899@Management

  01db7	53		 push	 ebx
  01db8	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  01dbd	83 c4 04	 add	 esp, 4

  01dc0	85 c0		 test	 eax, eax
  01dc2	0f 88 a2 41 00
	00		 js	 $LN899@Management

  01dc8	53		 push	 ebx
  01dc9	e8 00 00 00 00	 call	 ?gObjFind@@YAPAUOBJECTSTRUCT@@PAD@Z ; gObjFind
  01dce	8b f8		 mov	 edi, eax
  01dd0	83 c4 04	 add	 esp, 4

  01dd3	85 ff		 test	 edi, edi

  01dd5	0f 84 8f 41 00
	00		 je	 $LN899@Management

  01ddb	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MEJDKKFB@User?5Disconnect?$AA@
  01de0	8d 57 77	 lea	 edx, DWORD PTR [edi+119]
  01de3	52		 push	 edx
  01de4	8d 47 6c	 lea	 eax, DWORD PTR [edi+108]
  01de7	50		 push	 eax
  01de8	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  01deb	51		 push	 ecx
  01dec	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  01def	52		 push	 edx
  01df0	83 c6 18	 add	 esi, 24			; 00000018H
  01df3	56		 push	 esi
  01df4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@DPOHDNID@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01df9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01dff	83 c4 1c	 add	 esp, 28			; 0000001cH

  01e02	53		 push	 ebx
  01e03	68 bf 01 00 00	 push	 447			; 000001bfH
  01e08	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  01e0d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  01e12	50		 push	 eax
  01e13	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

  01e19	8b 07		 mov	 eax, DWORD PTR [edi]
  01e1b	83 c4 08	 add	 esp, 8
  01e1e	6a 00		 push	 0
  01e20	50		 push	 eax
  01e21	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectZt@@3VConnectZt@@A ; g_ConnectZt
  01e26	e8 00 00 00 00	 call	 ?SendClose@ConnectZt@@QAEXHH@Z ; ConnectZt::SendClose

  01e2b	e9 3a 41 00 00	 jmp	 $LN899@Management
$LN637@Management:

  01e30	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BCPFBGGF@Guild?5Disconnect?$AA@
  01e35	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  01e38	51		 push	 ecx
  01e39	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  01e3c	52		 push	 edx
  01e3d	83 c6 18	 add	 esi, 24			; 00000018H
  01e40	56		 push	 esi
  01e41	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01e46	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01e4c	83 c4 14	 add	 esp, 20			; 00000014H

  01e4f	8b cf		 mov	 ecx, edi
  01e51	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  01e56	8b d8		 mov	 ebx, eax

  01e58	85 db		 test	 ebx, ebx

  01e5a	0f 84 0a 41 00
	00		 je	 $LN899@Management

  01e60	53		 push	 ebx
  01e61	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  01e66	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

  01e6b	85 c0		 test	 eax, eax
  01e6d	0f 84 f7 40 00
	00		 je	 $LN899@Management

  01e73	8d b8 a0 03 00
	00		 lea	 edi, DWORD PTR [eax+928]
  01e79	c7 85 58 fd ff
	ff 50 00 00 00	 mov	 DWORD PTR tv3325[ebp], 80 ; 00000050H
$LL1084@Management:

  01e83	0f b7 07	 movzx	 eax, WORD PTR [edi]
  01e86	66 85 c0	 test	 ax, ax
  01e89	78 27		 js	 SHORT $LN633@Management

  01e8b	0f bf f0	 movsx	 esi, ax

  01e8e	85 f6		 test	 esi, esi
  01e90	78 20		 js	 SHORT $LN633@Management

  01e92	53		 push	 ebx
  01e93	68 bf 01 00 00	 push	 447			; 000001bfH
  01e98	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  01e9d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  01ea2	50		 push	 eax
  01ea3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

  01ea9	56		 push	 esi
  01eaa	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  01eaf	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN633@Management:

  01eb2	83 c7 02	 add	 edi, 2
  01eb5	ff 8d 58 fd ff
	ff		 dec	 DWORD PTR tv3325[ebp]
  01ebb	75 c6		 jne	 SHORT $LL1084@Management

  01ebd	e9 a8 40 00 00	 jmp	 $LN899@Management
$LN629@Management:

  01ec2	8b cf		 mov	 ecx, edi
  01ec4	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  01ec9	89 45 f8	 mov	 DWORD PTR _pId$[ebp], eax

  01ecc	85 c0		 test	 eax, eax
  01ece	0f 84 96 40 00
	00		 je	 $LN899@Management

  01ed4	80 be a0 03 00
	00 00		 cmp	 BYTE PTR [esi+928], 0
  01edb	74 22		 je	 SHORT $LN627@Management
$LN1147@Management:

  01edd	8b 06		 mov	 eax, DWORD PTR [esi]
  01edf	6a 01		 push	 1
  01ee1	50		 push	 eax
$LN1148@Management:
  01ee2	68 44 06 00 00	 push	 1604			; 00000644H
$LN1149@Management:
  01ee7	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  01eec	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  01ef1	50		 push	 eax
  01ef2	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  01ef7	83 c4 0c	 add	 esp, 12			; 0000000cH

  01efa	e9 6b 40 00 00	 jmp	 $LN899@Management
$LN627@Management:

  01eff	8b 86 1c 0e 00
	00		 mov	 eax, DWORD PTR [esi+3612]
  01f05	a8 03		 test	 al, 3
  01f07	74 25		 je	 SHORT $LN625@Management

  01f09	8b c8		 mov	 ecx, eax
  01f0b	81 e1 c0 ff 00
	00		 and	 ecx, 65472		; 0000ffc0H
  01f11	81 f9 c0 00 00
	00		 cmp	 ecx, 192		; 000000c0H
  01f17	75 15		 jne	 SHORT $LN625@Management

  01f19	83 ca ff	 or	 edx, -1

  01f1c	25 3c 00 ff ff	 and	 eax, -65476		; ffff003cH
  01f21	66 89 96 5a 04
	00 00		 mov	 WORD PTR [esi+1114], dx
  01f28	89 86 1c 0e 00
	00		 mov	 DWORD PTR [esi+3612], eax
$LN625@Management:

  01f2e	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3

  01f35	77 a6		 ja	 SHORT $LN1147@Management

  01f37	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01f3c	69 db 50 2b 00
	00		 imul	 ebx, 11088		; 00002b50H
  01f42	80 bc 03 46 10
	00 00 00	 cmp	 BYTE PTR [ebx+eax+4166], 0
  01f4a	74 07		 je	 SHORT $LN623@Management

  01f4c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01f4e	6a 01		 push	 1
  01f50	51		 push	 ecx

  01f51	eb 8f		 jmp	 SHORT $LN1148@Management
$LN623@Management:

  01f53	33 ff		 xor	 edi, edi

  01f55	39 3d 38 09 00
	00		 cmp	 DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+2360, edi
  01f5b	74 1f		 je	 SHORT $LN1046@Management
  01f5d	8b 84 03 2c 04
	00 00		 mov	 eax, DWORD PTR [ebx+eax+1068]
  01f64	85 c0		 test	 eax, eax
  01f66	78 14		 js	 SHORT $LN1046@Management

  01f68	50		 push	 eax
  01f69	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01f6e	e8 00 00 00 00	 call	 ?GetPkLevel@PartyClass@@QAEDH@Z ; PartyClass::GetPkLevel
  01f73	3c 05		 cmp	 al, 5
  01f75	7c 05		 jl	 SHORT $LN1046@Management

  01f77	bf 01 00 00 00	 mov	 edi, 1
$LN1046@Management:

  01f7c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01f82	80 bc 13 3d 01
	00 00 05	 cmp	 BYTE PTR [ebx+edx+317], 5
  01f8a	7d 05		 jge	 SHORT $LN1085@Management

  01f8c	83 ff 01	 cmp	 edi, 1
  01f8f	75 0f		 jne	 SHORT $LN619@Management
$LN1085@Management:

  01f91	8b 06		 mov	 eax, DWORD PTR [esi]
  01f93	6a 01		 push	 1
  01f95	50		 push	 eax
  01f96	68 65 04 00 00	 push	 1125			; 00000465H

  01f9b	e9 47 ff ff ff	 jmp	 $LN1149@Management
$LN619@Management:

  01fa0	8b 4d f8	 mov	 ecx, DWORD PTR _pId$[ebp]
  01fa3	51		 push	 ecx
  01fa4	56		 push	 esi
  01fa5	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMoveCommand@@3VCMoveCommand@@A ; gMoveCommand
  01faa	e8 00 00 00 00	 call	 ?Move@CMoveCommand@@QAEHPAUOBJECTSTRUCT@@PAD@Z ; CMoveCommand::Move

  01faf	e9 b6 3f 00 00	 jmp	 $LN899@Management
$LN618@Management:

  01fb4	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HIAMIIED@Guild?5SetPosition?$AA@
  01fb9	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  01fbc	52		 push	 edx
  01fbd	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  01fc0	50		 push	 eax
  01fc1	83 c6 18	 add	 esi, 24			; 00000018H
  01fc4	56		 push	 esi
  01fc5	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  01fca	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01fd0	83 c4 14	 add	 esp, 20			; 00000014H

  01fd3	8b cf		 mov	 ecx, edi
  01fd5	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  01fda	8b d8		 mov	 ebx, eax

  01fdc	85 db		 test	 ebx, ebx

  01fde	0f 84 86 3f 00
	00		 je	 $LN899@Management

  01fe4	8b cf		 mov	 ecx, edi
  01fe6	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01feb	8b cf		 mov	 ecx, edi
  01fed	89 45 f8	 mov	 DWORD PTR _iTokenNumber1$224697[ebp], eax
  01ff0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01ff5	8b cf		 mov	 ecx, edi
  01ff7	8b f0		 mov	 esi, eax
  01ff9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  01ffe	53		 push	 ebx
  01fff	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  02004	8b f8		 mov	 edi, eax
  02006	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

  0200b	85 c0		 test	 eax, eax
  0200d	0f 84 57 3f 00
	00		 je	 $LN899@Management

  02013	8d 98 a0 03 00
	00		 lea	 ebx, DWORD PTR [eax+928]
  02019	c7 85 58 fd ff
	ff 50 00 00 00	 mov	 DWORD PTR tv2046[ebp], 80 ; 00000050H
$LL615@Management:

  02023	0f b7 0b	 movzx	 ecx, WORD PTR [ebx]
  02026	66 85 c9	 test	 cx, cx
  02029	78 15		 js	 SHORT $LN614@Management

  0202b	8b 55 f8	 mov	 edx, DWORD PTR _iTokenNumber1$224697[ebp]
  0202e	8b c6		 mov	 eax, esi
  02030	57		 push	 edi
  02031	50		 push	 eax
  02032	0f bf c1	 movsx	 eax, cx
  02035	52		 push	 edx
  02036	50		 push	 eax
  02037	46		 inc	 esi
  02038	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  0203d	83 c4 10	 add	 esp, 16			; 00000010H
$LN614@Management:

  02040	83 c3 02	 add	 ebx, 2
  02043	ff 8d 58 fd ff
	ff		 dec	 DWORD PTR tv2046[ebp]
  02049	75 d8		 jne	 SHORT $LL615@Management

  0204b	e9 1a 3f 00 00	 jmp	 $LN899@Management
$LN611@Management:

  02050	f6 86 0c 02 00
	00 02		 test	 BYTE PTR [esi+524], 2
  02057	0f 84 0d 3f 00
	00		 je	 $LN899@Management

  0205d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EFECDMGE@Start?5BattleSoccer?$AA@
  02062	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  02065	51		 push	 ecx
  02066	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  02069	52		 push	 edx
  0206a	83 c6 18	 add	 esi, 24			; 00000018H
  0206d	56		 push	 esi
  0206e	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  02073	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  02079	6a 00		 push	 0
  0207b	e8 00 00 00 00	 call	 ?BattleSoccerGoalStart@@YAXH@Z ; BattleSoccerGoalStart
  02080	83 c4 18	 add	 esp, 24			; 00000018H

  02083	e9 e2 3e 00 00	 jmp	 $LN899@Management
$LN609@Management:

  02088	f6 86 0c 02 00
	00 02		 test	 BYTE PTR [esi+524], 2
  0208f	0f 84 d5 3e 00
	00		 je	 $LN899@Management

  02095	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DPMLLFMM@Stop?5BattleSoccer?$AA@
  0209a	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  0209d	50		 push	 eax
  0209e	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  020a1	51		 push	 ecx
  020a2	83 c6 18	 add	 esi, 24			; 00000018H
  020a5	56		 push	 esi
  020a6	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  020ab	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  020b1	6a 00		 push	 0
  020b3	e8 00 00 00 00	 call	 ?BattleSoccerGoalEnd@@YAXH@Z ; BattleSoccerGoalEnd
  020b8	83 c4 18	 add	 esp, 24			; 00000018H

  020bb	e9 aa 3e 00 00	 jmp	 $LN899@Management
$LN602@Management:

  020c0	f6 86 0c 02 00
	00 02		 test	 BYTE PTR [esi+524], 2
  020c7	74 3c		 je	 SHORT $LN601@Management

  020c9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GPDFKJGB@End?5GuildWar?$AA@
  020ce	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  020d1	52		 push	 edx
  020d2	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  020d5	50		 push	 eax
  020d6	83 c6 18	 add	 esi, 24			; 00000018H
  020d9	56		 push	 esi
  020da	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  020df	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  020e5	83 c4 14	 add	 esp, 20			; 00000014H

  020e8	8b cf		 mov	 ecx, edi
  020ea	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  020ef	85 c0		 test	 eax, eax
  020f1	0f 84 73 3e 00
	00		 je	 $LN899@Management

  020f7	50		 push	 eax
  020f8	e8 00 00 00 00	 call	 ?GCManagerGuildWarEnd@@YAXPAD@Z ; GCManagerGuildWarEnd
  020fd	83 c4 04	 add	 esp, 4

  02100	e9 65 3e 00 00	 jmp	 $LN899@Management
$LN601@Management:

  02105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0210b	8b fb		 mov	 edi, ebx
  0210d	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  02113	8b 94 0f 38 04
	00 00		 mov	 edx, DWORD PTR [edi+ecx+1080]
  0211a	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
  0211d	89 45 f8	 mov	 DWORD PTR tv7046[ebp], eax
  02120	85 d2		 test	 edx, edx
  02122	0f 84 42 3e 00
	00		 je	 $LN899@Management
  02128	83 ba 8c 05 00
	00 00		 cmp	 DWORD PTR [edx+1420], 0
  0212f	0f 84 35 3e 00
	00		 je	 $LN899@Management

  02135	8d 72 2f	 lea	 esi, DWORD PTR [edx+47]
  02138	83 c0 77	 add	 eax, 119		; 00000077H
  0213b	eb 03 8d 49 00	 npad	 5
$LL1022@Management:
  02140	8a 08		 mov	 cl, BYTE PTR [eax]
  02142	3a 0e		 cmp	 cl, BYTE PTR [esi]
  02144	75 1a		 jne	 SHORT $LN1023@Management
  02146	84 c9		 test	 cl, cl
  02148	74 12		 je	 SHORT $LN1024@Management
  0214a	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0214d	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  02150	75 0e		 jne	 SHORT $LN1023@Management
  02152	83 c0 02	 add	 eax, 2
  02155	83 c6 02	 add	 esi, 2
  02158	84 c9		 test	 cl, cl
  0215a	75 e4		 jne	 SHORT $LL1022@Management
$LN1024@Management:
  0215c	33 c0		 xor	 eax, eax
  0215e	eb 05		 jmp	 SHORT $LN1025@Management
$LN1023@Management:
  02160	1b c0		 sbb	 eax, eax
  02162	83 d8 ff	 sbb	 eax, -1
$LN1025@Management:
  02165	85 c0		 test	 eax, eax
  02167	0f 85 fd 3d 00
	00		 jne	 $LN899@Management

  0216d	80 ba 92 05 00
	00 01		 cmp	 BYTE PTR [edx+1426], 1
  02174	0f 85 f0 3d 00
	00		 jne	 $LN899@Management

  0217a	8b 55 f8	 mov	 edx, DWORD PTR tv7046[ebp]
  0217d	50		 push	 eax
  0217e	68 10 27 00 00	 push	 10000			; 00002710H
  02183	53		 push	 ebx
  02184	6a 07		 push	 7
  02186	52		 push	 edx
  02187	e8 00 00 00 00	 call	 ?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; gObjAddMsgSendDelay

  0218c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  02191	8b 8c 07 38 04
	00 00		 mov	 ecx, DWORD PTR [edi+eax+1080]
  02198	83 c4 14	 add	 esp, 20			; 00000014H
  0219b	83 c1 2f	 add	 ecx, 47			; 0000002fH
  0219e	51		 push	 ecx
  0219f	68 81 04 00 00	 push	 1153			; 00000481H
  021a4	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  021a9	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  021ae	50		 push	 eax
  021af	8d 55 90	 lea	 edx, DWORD PTR _szTemp$224728[ebp]
  021b2	52		 push	 edx
  021b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

  021b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  021bf	8b 94 0f 38 04
	00 00		 mov	 edx, DWORD PTR [edi+ecx+1080]
  021c6	6a 01		 push	 1
  021c8	8d 45 90	 lea	 eax, DWORD PTR _szTemp$224728[ebp]
  021cb	50		 push	 eax
  021cc	52		 push	 edx
  021cd	e8 00 00 00 00	 call	 ?GCServerMsgStringSendGuild@@YAXPAU_GUILD_INFO_STRUCT@@PADE@Z ; GCServerMsgStringSendGuild

  021d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  021d8	8b 94 0f 38 04
	00 00		 mov	 edx, DWORD PTR [edi+ecx+1080]
  021df	6a 01		 push	 1
  021e1	8d 45 90	 lea	 eax, DWORD PTR _szTemp$224728[ebp]
  021e4	50		 push	 eax
  021e5	8b 82 8c 05 00
	00		 mov	 eax, DWORD PTR [edx+1420]
  021eb	50		 push	 eax
  021ec	e8 00 00 00 00	 call	 ?GCServerMsgStringSendGuild@@YAXPAU_GUILD_INFO_STRUCT@@PADE@Z ; GCServerMsgStringSendGuild
  021f1	83 c4 24	 add	 esp, 36			; 00000024H

  021f4	e9 71 3d 00 00	 jmp	 $LN899@Management
$LN595@Management:

  021f9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KILIGKJC@Ban?5Chatting?$AA@
  021fe	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  02201	51		 push	 ecx
  02202	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  02205	52		 push	 edx
  02206	83 c6 18	 add	 esi, 24			; 00000018H
  02209	56		 push	 esi
  0220a	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  0220f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  02215	83 c4 14	 add	 esp, 20			; 00000014H

  02218	8b cf		 mov	 ecx, edi
  0221a	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0221f	85 c0		 test	 eax, eax

  02221	0f 84 43 3d 00
	00		 je	 $LN899@Management

  02227	50		 push	 eax
  02228	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  0222d	83 c4 04	 add	 esp, 4

  02230	85 c0		 test	 eax, eax
  02232	0f 88 32 3d 00
	00		 js	 $LN899@Management

  02238	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0223e	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  02244	83 8c 08 10 02
	00 00 02	 or	 DWORD PTR [eax+ecx+528], 2
  0224c	8d 84 08 10 02
	00 00		 lea	 eax, DWORD PTR [eax+ecx+528]

  02253	e9 12 3d 00 00	 jmp	 $LN899@Management
$LN592@Management:

  02258	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MOJFCJJN@Free?5Ban?9Chatting?$AA@
  0225d	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  02260	52		 push	 edx
  02261	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  02264	50		 push	 eax
  02265	83 c6 18	 add	 esi, 24			; 00000018H
  02268	56		 push	 esi
  02269	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  0226e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  02274	83 c4 14	 add	 esp, 20			; 00000014H

  02277	8b cf		 mov	 ecx, edi
  02279	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0227e	85 c0		 test	 eax, eax

  02280	0f 84 e4 3c 00
	00		 je	 $LN899@Management

  02286	50		 push	 eax
  02287	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  0228c	83 c4 04	 add	 esp, 4

  0228f	85 c0		 test	 eax, eax
  02291	0f 88 d3 3c 00
	00		 js	 $LN899@Management

  02297	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0229d	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  022a3	83 a4 08 10 02
	00 00 fd	 and	 DWORD PTR [eax+ecx+528], -3 ; fffffffdH
  022ab	8d 84 08 10 02
	00 00		 lea	 eax, DWORD PTR [eax+ecx+528]

  022b2	e9 b3 3c 00 00	 jmp	 $LN899@Management
$LN589@Management:

  022b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  022bd	8b f3		 mov	 esi, ebx
  022bf	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  022c5	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  022c8	50		 push	 eax
  022c9	6a 40		 push	 64			; 00000040H
  022cb	e8 00 00 00 00	 call	 ?CheckAuthorityCondition@@YA_NHPAUOBJECTSTRUCT@@@Z ; CheckAuthorityCondition
  022d0	83 c4 08	 add	 esp, 8
  022d3	84 c0		 test	 al, al
  022d5	0f 84 8f 3c 00
	00		 je	 $LN899@Management

  022db	8b cf		 mov	 ecx, edi
  022dd	c7 85 60 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _EBP7A4$224746[ebp], 0
  022e7	c6 85 64 fd ff
	ff 00		 mov	 BYTE PTR _EBP7A8$224747[ebp], 0
  022ee	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  022f3	8b cf		 mov	 ecx, edi
  022f5	89 85 58 fd ff
	ff		 mov	 DWORD PTR _ItemType$224741[ebp], eax
  022fb	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02300	8b cf		 mov	 ecx, edi
  02302	89 85 4c fd ff
	ff		 mov	 DWORD PTR _ItemIndex$224742[ebp], eax
  02308	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0230d	8b cf		 mov	 ecx, edi
  0230f	89 45 f8	 mov	 DWORD PTR _EBP798$224743[ebp], eax
  02312	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02317	8b cf		 mov	 ecx, edi
  02319	89 85 48 fd ff
	ff		 mov	 DWORD PTR _iDur$224748[ebp], eax
  0231f	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02324	8b cf		 mov	 ecx, edi
  02326	89 85 54 fd ff
	ff		 mov	 DWORD PTR _EBP79C$224744[ebp], eax
  0232c	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02331	8b cf		 mov	 ecx, edi
  02333	89 85 40 fd ff
	ff		 mov	 DWORD PTR _EBP7A0$224745[ebp], eax
  02339	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0233e	83 bd 58 fd ff
	ff 0d		 cmp	 DWORD PTR _ItemType$224741[ebp], 13 ; 0000000dH
  02345	b9 03 00 00 00	 mov	 ecx, 3
  0234a	75 15		 jne	 SHORT $LN587@Management
  0234c	39 8d 4c fd ff
	ff		 cmp	 DWORD PTR _ItemIndex$224742[ebp], ecx
  02352	75 0d		 jne	 SHORT $LN587@Management

  02354	83 f8 08	 cmp	 eax, 8
  02357	7d 46		 jge	 SHORT $LN1054@Management

  02359	89 85 60 fd ff
	ff		 mov	 DWORD PTR _EBP7A4$224746[ebp], eax

  0235f	eb 3e		 jmp	 SHORT $LN1054@Management
$LN587@Management:

  02361	83 f8 04	 cmp	 eax, 4
  02364	75 0c		 jne	 SHORT $LN584@Management

  02366	c7 85 60 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _EBP7A4$224746[ebp], 1
  02370	eb 2d		 jmp	 SHORT $LN1054@Management
$LN584@Management:

  02372	83 f8 08	 cmp	 eax, 8
  02375	75 0c		 jne	 SHORT $LN582@Management

  02377	c7 85 60 fd ff
	ff 02 00 00 00	 mov	 DWORD PTR _EBP7A4$224746[ebp], 2
  02381	eb 1c		 jmp	 SHORT $LN1054@Management
$LN582@Management:

  02383	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  02386	75 08		 jne	 SHORT $LN580@Management

  02388	89 8d 60 fd ff
	ff		 mov	 DWORD PTR _EBP7A4$224746[ebp], ecx
  0238e	eb 0f		 jmp	 SHORT $LN1054@Management
$LN580@Management:

  02390	83 f8 10	 cmp	 eax, 16			; 00000010H
  02393	75 0a		 jne	 SHORT $LN1054@Management

  02395	c7 85 60 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR _EBP7A4$224746[ebp], 4
$LN1054@Management:

  0239f	8b cf		 mov	 ecx, edi
  023a1	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  023a6	8b cf		 mov	 ecx, edi
  023a8	89 85 50 fd ff
	ff		 mov	 DWORD PTR _EBP7B4$224761[ebp], eax
  023ae	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  023b3	83 bd 50 fd ff
	ff 00		 cmp	 DWORD PTR _EBP7B4$224761[ebp], 0
  023ba	74 25		 je	 SHORT $LN571@Management

  023bc	85 c0		 test	 eax, eax
  023be	0f 85 49 01 00
	00		 jne	 $LN576@Management

  023c4	e8 00 00 00 00	 call	 _rand
  023c9	99		 cdq
  023ca	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  023cf	f7 f9		 idiv	 ecx
  023d1	83 fa 50	 cmp	 edx, 80			; 00000050H
  023d4	0f 8c 3c 01 00
	00		 jl	 $LN1127@Management
$LN572@Management:

  023da	83 8d 50 fd ff
	ff 08		 or	 DWORD PTR _EBP7B4$224761[ebp], 8
$LN571@Management:

  023e1	8b cf		 mov	 ecx, edi
  023e3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  023e8	85 c0		 test	 eax, eax
  023ea	7e 07		 jle	 SHORT $LN570@Management

  023ec	c6 85 64 fd ff
	ff 20		 mov	 BYTE PTR _EBP7A8$224747[ebp], 32 ; 00000020H
$LN570@Management:

  023f3	8b cf		 mov	 ecx, edi
  023f5	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  023fa	85 c0		 test	 eax, eax
  023fc	7e 07		 jle	 SHORT $LN569@Management

  023fe	80 8d 64 fd ff
	ff 10		 or	 BYTE PTR _EBP7A8$224747[ebp], 16 ; 00000010H
$LN569@Management:

  02405	8b cf		 mov	 ecx, edi
  02407	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0240c	85 c0		 test	 eax, eax
  0240e	7e 07		 jle	 SHORT $LN568@Management

  02410	80 8d 64 fd ff
	ff 08		 or	 BYTE PTR _EBP7A8$224747[ebp], 8
$LN568@Management:

  02417	8b cf		 mov	 ecx, edi
  02419	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0241e	85 c0		 test	 eax, eax
  02420	7e 07		 jle	 SHORT $LN567@Management

  02422	80 8d 64 fd ff
	ff 04		 or	 BYTE PTR _EBP7A8$224747[ebp], 4
$LN567@Management:

  02429	8b cf		 mov	 ecx, edi
  0242b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02430	85 c0		 test	 eax, eax
  02432	7e 07		 jle	 SHORT $LN566@Management

  02434	80 8d 64 fd ff
	ff 02		 or	 BYTE PTR _EBP7A8$224747[ebp], 2
$LN566@Management:

  0243b	8b cf		 mov	 ecx, edi
  0243d	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02442	85 c0		 test	 eax, eax
  02444	7e 07		 jle	 SHORT $LN565@Management

  02446	80 8d 64 fd ff
	ff 01		 or	 BYTE PTR _EBP7A8$224747[ebp], 1
$LN565@Management:

  0244d	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _ItemType$224741[ebp]
  02453	81 f9 ff 01 00
	00		 cmp	 ecx, 511		; 000001ffH
  02459	0f 87 0b 3b 00
	00		 ja	 $LN899@Management
  0245f	8b 85 4c fd ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$224742[ebp]
  02465	3d ff 01 00 00	 cmp	 eax, 511		; 000001ffH
  0246a	0f 87 fa 3a 00
	00		 ja	 $LN899@Management

  02470	50		 push	 eax
  02471	51		 push	 ecx
  02472	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  02477	83 c4 08	 add	 esp, 8

  0247a	83 f8 13	 cmp	 eax, 19			; 00000013H
  0247d	74 15		 je	 SHORT $LN562@Management
  0247f	3d 12 08 00 00	 cmp	 eax, 2066		; 00000812H
  02484	74 0e		 je	 SHORT $LN562@Management
  02486	3d 0a 0a 00 00	 cmp	 eax, 2570		; 00000a0aH
  0248b	74 07		 je	 SHORT $LN562@Management
  0248d	3d 0d 04 00 00	 cmp	 eax, 1037		; 0000040dH
  02492	75 07		 jne	 SHORT $LN563@Management
$LN562@Management:

  02494	c6 85 64 fd ff
	ff 3f		 mov	 BYTE PTR _EBP7A8$224747[ebp], 63 ; 0000003fH
$LN563@Management:

  0249b	3d 04 1a 00 00	 cmp	 eax, 6660		; 00001a04H
  024a0	0f 84 7c 00 00
	00		 je	 $LN560@Management
  024a6	3d 05 1a 00 00	 cmp	 eax, 6661		; 00001a05H
  024ab	74 75		 je	 SHORT $LN560@Management

  024ad	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7B4$224761[ebp]
  024b3	52		 push	 edx
  024b4	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A8$224747[ebp]
  024ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  024c0	52		 push	 edx
  024c1	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A4$224746[ebp]
  024c7	6a ff		 push	 -1
  024c9	52		 push	 edx
  024ca	8b 95 40 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A0$224745[ebp]
  024d0	52		 push	 edx
  024d1	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _EBP79C$224744[ebp]
  024d7	52		 push	 edx
  024d8	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _iDur$224748[ebp]
  024de	52		 push	 edx
  024df	8b 55 f8	 mov	 edx, DWORD PTR _EBP798$224743[ebp]
  024e2	52		 push	 edx
  024e3	0f b6 94 0e 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+ecx+324]
  024eb	50		 push	 eax
  024ec	0f b6 84 0e 46
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+326]
  024f4	50		 push	 eax
  024f5	0f b6 84 0e 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+329]
  024fd	52		 push	 edx
  024fe	50		 push	 eax
  024ff	53		 push	 ebx
  02500	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  02505	83 c4 34	 add	 esp, 52			; 00000034H
  02508	e9 5d 3a 00 00	 jmp	 $LN899@Management
$LN576@Management:

  0250d	83 f8 01	 cmp	 eax, 1
  02510	0f 85 c4 fe ff
	ff		 jne	 $LN572@Management
$LN1127@Management:

  02516	83 8d 50 fd ff
	ff 04		 or	 DWORD PTR _EBP7B4$224761[ebp], 4

  0251d	e9 bf fe ff ff	 jmp	 $LN571@Management
$LN560@Management:

  02522	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7B4$224761[ebp]
  02528	52		 push	 edx
  02529	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A8$224747[ebp]
  0252f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  02535	52		 push	 edx
  02536	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A4$224746[ebp]
  0253c	6a ff		 push	 -1
  0253e	52		 push	 edx
  0253f	8b 95 40 fd ff
	ff		 mov	 edx, DWORD PTR _EBP7A0$224745[ebp]
  02545	52		 push	 edx
  02546	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _EBP79C$224744[ebp]
  0254c	52		 push	 edx
  0254d	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _iDur$224748[ebp]
  02553	52		 push	 edx
  02554	8b 55 f8	 mov	 edx, DWORD PTR _EBP798$224743[ebp]
  02557	52		 push	 edx
  02558	0f b6 94 0e 44
	01 00 00	 movzx	 edx, BYTE PTR [esi+ecx+324]
  02560	50		 push	 eax
  02561	0f b6 84 0e 46
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+326]
  02569	50		 push	 eax
  0256a	0f b6 84 0e 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+329]
  02572	52		 push	 edx
  02573	50		 push	 eax
  02574	53		 push	 ebx
  02575	e8 00 00 00 00	 call	 ?PetItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; PetItemSerialCreateSend
  0257a	83 c4 34	 add	 esp, 52			; 00000034H

  0257d	e9 e8 39 00 00	 jmp	 $LN899@Management
$LN558@Management:

  02582	8b cf		 mov	 ecx, edi
  02584	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  02589	85 c0		 test	 eax, eax
  0258b	0f 84 d9 39 00
	00		 je	 $LN899@Management

  02591	8b c8		 mov	 ecx, eax
  02593	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL1026@Management:
  02596	8a 11		 mov	 dl, BYTE PTR [ecx]
  02598	41		 inc	 ecx
  02599	84 d2		 test	 dl, dl
  0259b	75 f9		 jne	 SHORT $LL1026@Management
  0259d	2b ce		 sub	 ecx, esi
  0259f	83 f9 01	 cmp	 ecx, 1
  025a2	0f 82 c2 39 00
	00		 jb	 $LN899@Management

  025a8	6a 00		 push	 0
  025aa	53		 push	 ebx
  025ab	50		 push	 eax
  025ac	e8 00 00 00 00	 call	 ?GCGuildWarRequestResult@@YAXPADHH@Z ; GCGuildWarRequestResult
  025b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  025b4	e9 b1 39 00 00	 jmp	 $LN899@Management
$LN555@Management:

  025b9	f6 86 0c 02 00
	00 02		 test	 BYTE PTR [esi+524], 2
  025c0	0f 84 84 00 00
	00		 je	 $LN554@Management

  025c6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KELDLAKD@Set?5GuildWar?$AA@
  025cb	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  025ce	51		 push	 ecx
  025cf	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  025d2	52		 push	 edx
  025d3	83 c6 18	 add	 esi, 24			; 00000018H
  025d6	56		 push	 esi
  025d7	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FGOOHLMI@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  025dc	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  025e2	83 c4 14	 add	 esp, 20			; 00000014H

  025e5	8b cf		 mov	 ecx, edi
  025e7	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  025ec	8b d8		 mov	 ebx, eax

  025ee	85 db		 test	 ebx, ebx
  025f0	0f 84 74 39 00
	00		 je	 $LN899@Management

  025f6	8b cf		 mov	 ecx, edi
  025f8	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  025fd	85 c0		 test	 eax, eax
  025ff	0f 84 65 39 00
	00		 je	 $LN899@Management

  02605	8b cb		 mov	 ecx, ebx
  02607	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0260a	8d 9b 00 00 00
	00		 npad	 6
$LL1027@Management:
  02610	8a 11		 mov	 dl, BYTE PTR [ecx]
  02612	41		 inc	 ecx
  02613	84 d2		 test	 dl, dl
  02615	75 f9		 jne	 SHORT $LL1027@Management
  02617	2b ce		 sub	 ecx, esi
  02619	83 f9 01	 cmp	 ecx, 1
  0261c	0f 82 48 39 00
	00		 jb	 $LN899@Management

  02622	8b c8		 mov	 ecx, eax
  02624	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL1028@Management:
  02627	8a 11		 mov	 dl, BYTE PTR [ecx]
  02629	41		 inc	 ecx
  0262a	84 d2		 test	 dl, dl
  0262c	75 f9		 jne	 SHORT $LL1028@Management
  0262e	2b ce		 sub	 ecx, esi
  02630	83 f9 01	 cmp	 ecx, 1
  02633	0f 82 31 39 00
	00		 jb	 $LN899@Management

  02639	6a 01		 push	 1
  0263b	50		 push	 eax
  0263c	53		 push	 ebx
  0263d	e8 00 00 00 00	 call	 ?GCManagerGuildWarSet@@YAXPAD0H@Z ; GCManagerGuildWarSet
  02642	83 c4 0c	 add	 esp, 12			; 0000000cH
  02645	e9 20 39 00 00	 jmp	 $LN899@Management
$LN554@Management:

  0264a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gEnableBattleSoccer@@3HA, 0 ; gEnableBattleSoccer
  02651	0f 84 13 39 00
	00		 je	 $LN899@Management

  02657	8b cf		 mov	 ecx, edi
  02659	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0265e	85 c0		 test	 eax, eax
  02660	0f 84 04 39 00
	00		 je	 $LN899@Management

  02666	8b c8		 mov	 ecx, eax
  02668	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0266b	eb 03 8d 49 00	 npad	 5
$LL1029@Management:
  02670	8a 11		 mov	 dl, BYTE PTR [ecx]
  02672	41		 inc	 ecx
  02673	84 d2		 test	 dl, dl
  02675	75 f9		 jne	 SHORT $LL1029@Management
  02677	2b ce		 sub	 ecx, esi
  02679	83 f9 01	 cmp	 ecx, 1
  0267c	0f 82 e8 38 00
	00		 jb	 $LN899@Management

  02682	6a 01		 push	 1
  02684	53		 push	 ebx
  02685	50		 push	 eax
  02686	e8 00 00 00 00	 call	 ?GCGuildWarRequestResult@@YAXPADHH@Z ; GCGuildWarRequestResult
  0268b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0268e	e9 d7 38 00 00	 jmp	 $LN899@Management
$LN545@Management:

  02693	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  02698	69 db 50 2b 00
	00		 imul	 ebx, 11088		; 00002b50H
  0269e	8d 0c 03	 lea	 ecx, DWORD PTR [ebx+eax]
  026a1	51		 push	 ecx
  026a2	e8 00 00 00 00	 call	 ?gObjBillRequest@@YAXPAUOBJECTSTRUCT@@@Z ; gObjBillRequest

  026a7	03 1d 00 00 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  026ad	53		 push	 ebx
  026ae	6a 40		 push	 64			; 00000040H
  026b0	e8 00 00 00 00	 call	 ?CheckAuthorityCondition@@YA_NHPAUOBJECTSTRUCT@@@Z ; CheckAuthorityCondition
  026b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  026b8	e9 ad 38 00 00	 jmp	 $LN899@Management
$LN543@Management:

  026bd	8b cf		 mov	 ecx, edi
  026bf	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  026c4	85 c0		 test	 eax, eax
  026c6	0f 84 9e 38 00
	00		 je	 $LN899@Management

  026cc	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_02LIELOMNJ@on?$AA@
  026d1	8b c8		 mov	 ecx, eax
$LL1030@Management:
  026d3	8a 11		 mov	 dl, BYTE PTR [ecx]
  026d5	3a 16		 cmp	 dl, BYTE PTR [esi]
  026d7	75 1a		 jne	 SHORT $LN1031@Management
  026d9	84 d2		 test	 dl, dl
  026db	74 12		 je	 SHORT $LN1032@Management
  026dd	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  026e0	3a 56 01	 cmp	 dl, BYTE PTR [esi+1]
  026e3	75 0e		 jne	 SHORT $LN1031@Management
  026e5	83 c1 02	 add	 ecx, 2
  026e8	83 c6 02	 add	 esi, 2
  026eb	84 d2		 test	 dl, dl
  026ed	75 e4		 jne	 SHORT $LL1030@Management
$LN1032@Management:
  026ef	33 c9		 xor	 ecx, ecx
  026f1	eb 05		 jmp	 SHORT $LN1033@Management
$LN1031@Management:
  026f3	1b c9		 sbb	 ecx, ecx
  026f5	83 d9 ff	 sbb	 ecx, -1
$LN1033@Management:
  026f8	85 c9		 test	 ecx, ecx
  026fa	75 05		 jne	 SHORT $LN541@Management

  026fc	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  026ff	eb 46		 jmp	 SHORT $LN1002@Management
$LN541@Management:

  02701	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_03MCADLMAF@off?$AA@
$LL1034@Management:
  02706	8a 08		 mov	 cl, BYTE PTR [eax]
  02708	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0270a	75 1a		 jne	 SHORT $LN1035@Management
  0270c	84 c9		 test	 cl, cl
  0270e	74 12		 je	 SHORT $LN1036@Management
  02710	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  02713	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  02716	75 0e		 jne	 SHORT $LN1035@Management
  02718	83 c0 02	 add	 eax, 2
  0271b	83 c6 02	 add	 esi, 2
  0271e	84 c9		 test	 cl, cl
  02720	75 e4		 jne	 SHORT $LL1034@Management
$LN1036@Management:
  02722	33 c0		 xor	 eax, eax
  02724	eb 05		 jmp	 SHORT $LN1037@Management
$LN1035@Management:
  02726	1b c0		 sbb	 eax, eax
  02728	83 d8 ff	 sbb	 eax, -1
$LN1037@Management:
  0272b	85 c0		 test	 eax, eax
  0272d	75 04		 jne	 SHORT $LN539@Management

  0272f	33 f6		 xor	 esi, esi

  02731	eb 14		 jmp	 SHORT $LN1002@Management
$LN539@Management:
  02733	8b 75 f8	 mov	 esi, DWORD PTR _bState$224828[ebp]
  02736	85 f6		 test	 esi, esi
  02738	0f 88 2c 38 00
	00		 js	 $LN899@Management
  0273e	83 fe 01	 cmp	 esi, 1
  02741	0f 8f 23 38 00
	00		 jg	 $LN899@Management
$LN1002@Management:

  02747	56		 push	 esi
  02748	53		 push	 ebx
  02749	e8 00 00 00 00	 call	 ?gObjSetTradeOption@@YAXHH@Z ; gObjSetTradeOption

  0274e	56		 push	 esi
  0274f	53		 push	 ebx
  02750	e8 00 00 00 00	 call	 ?gObjSetDuelOption@@YAXHH@Z ; gObjSetDuelOption
  02755	83 c4 10	 add	 esp, 16			; 00000010H

  02758	e9 0d 38 00 00	 jmp	 $LN899@Management
$LN537@Management:

  0275d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GPMLDEKO@?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$DP?$KH?W?$KB?$MA?$KH?S?$AA@
  02762	8d 7e 77	 lea	 edi, DWORD PTR [esi+119]
  02765	57		 push	 edi
  02766	8d 5e 6c	 lea	 ebx, DWORD PTR [esi+108]
  02769	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0276c	53		 push	 ebx
  0276d	50		 push	 eax
  0276e	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02773	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  02779	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GPMLDEKO@?$KH?$KF?$KH?a?$DP?$KH?$LC?$DP?$KH?e?$KH?$KG?$KH?$KD?$DP?$KH?W?$KB?$MA?$KH?S?$AA@
  0277e	57		 push	 edi
  0277f	53		 push	 ebx
  02780	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  02783	50		 push	 eax
  02784	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02789	68 00 00 00 00	 push	 OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  0278e	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  02793	83 c4 2c	 add	 esp, 44			; 0000002cH
  02796	8d 9e 2a 05 00
	00		 lea	 ebx, DWORD PTR [esi+1322]
  0279c	c7 45 f8 4b 00
	00 00		 mov	 DWORD PTR tv4951[ebp], 75 ; 0000004bH
$LL536@Management:

  027a3	80 7b fe 00	 cmp	 BYTE PTR [ebx-2], 0
  027a7	0f 84 95 00 00
	00		 je	 $LN535@Management

  027ad	80 7b 02 02	 cmp	 BYTE PTR [ebx+2], 2
  027b1	0f 85 8b 00 00
	00		 jne	 $LN535@Management

  027b7	0f b7 03	 movzx	 eax, WORD PTR [ebx]
  027ba	66 85 c0	 test	 ax, ax
  027bd	0f 88 7f 00 00
	00		 js	 $LN535@Management

  027c3	0f bf f8	 movsx	 edi, ax
  027c6	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  027cc	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  027d2	b8 13 01 00 00	 mov	 eax, 275		; 00000113H
  027d7	66 39 87 b8 00
	00 00		 cmp	 WORD PTR [edi+184], ax
  027de	75 62		 jne	 SHORT $LN535@Management

  027e0	6a 01		 push	 1
  027e2	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224847[ebp]
  027e8	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  027ed	d9 87 00 01 00
	00		 fld	 DWORD PTR [edi+256]
  027f3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  027f5	83 ec 10	 sub	 esp, 16			; 00000010H
  027f8	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  027fc	8d 95 68 fd ff
	ff		 lea	 edx, DWORD PTR _pNotice$224847[ebp]
  02802	d9 87 fc 00 00
	00		 fld	 DWORD PTR [edi+252]
  02808	dd 1c 24	 fstp	 QWORD PTR [esp]
  0280b	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MDPJCDCO@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$DN?5?$CF7?40f?5?1?5?$CF7?40f?$AA@
  02810	51		 push	 ecx
  02811	52		 push	 edx
  02812	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser

  02817	a1 00 00 00 00	 mov	 eax, DWORD PTR ?giKundunRefillHPTime@@3HA ; giKundunRefillHPTime
  0281c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?giKundunRefillHP@@3HA ; giKundunRefillHP
  02822	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?giKundunRefillHPSec@@3HA ; giKundunRefillHPSec
  02828	50		 push	 eax
  02829	8b 06		 mov	 eax, DWORD PTR [esi]
  0282b	51		 push	 ecx
  0282c	52		 push	 edx
  0282d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@PHLKPBLC@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?5?$DN?5?$CF@
  02832	50		 push	 eax
  02833	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224847[ebp]
  02839	51		 push	 ecx
  0283a	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  0283f	83 c4 34	 add	 esp, 52			; 00000034H
$LN535@Management:

  02842	83 c3 0c	 add	 ebx, 12			; 0000000cH
  02845	ff 4d f8	 dec	 DWORD PTR tv4951[ebp]
  02848	0f 85 55 ff ff
	ff		 jne	 $LL536@Management

  0284e	e9 17 37 00 00	 jmp	 $LN899@Management
$LN529@Management:

  02853	69 db 50 2b 00
	00		 imul	 ebx, 11088		; 00002b50H
  02859	03 1d 00 00 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0285f	53		 push	 ebx
  02860	6a 62		 push	 98			; 00000062H
  02862	e8 00 00 00 00	 call	 ?CheckAuthorityCondition@@YA_NHPAUOBJECTSTRUCT@@@Z ; CheckAuthorityCondition
  02867	83 c4 08	 add	 esp, 8
  0286a	84 c0		 test	 al, al
  0286c	0f 84 f8 36 00
	00		 je	 $LN899@Management

  02872	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MMIEACNF@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$DP?$DP?$KH?$KC?$KB?h?$AA@
  02877	8d 5e 77	 lea	 ebx, DWORD PTR [esi+119]
  0287a	53		 push	 ebx
  0287b	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  0287e	50		 push	 eax
  0287f	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  02882	51		 push	 ecx
  02883	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02888	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  0288e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MMIEACNF@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$DP?$DP?$KH?$KC?$KB?h?$AA@
  02893	53		 push	 ebx
  02894	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  02897	50		 push	 eax
  02898	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0289b	50		 push	 eax
  0289c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  028a1	68 00 00 00 00	 push	 OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  028a6	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  028ab	83 c4 2c	 add	 esp, 44			; 0000002cH

  028ae	8b cf		 mov	 ecx, edi
  028b0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  028b5	89 85 60 fd ff
	ff		 mov	 DWORD PTR _iLife$224853[ebp], eax
  028bb	8d 9e 2a 05 00
	00		 lea	 ebx, DWORD PTR [esi+1322]
  028c1	c7 45 f8 4b 00
	00 00		 mov	 DWORD PTR tv5115[ebp], 75 ; 0000004bH
  028c8	b9 88 13 00 00	 mov	 ecx, 5000		; 00001388H
  028cd	8d 49 00	 npad	 3
$LL527@Management:

  028d0	80 7b fe 00	 cmp	 BYTE PTR [ebx-2], 0
  028d4	0f 84 b6 00 00
	00		 je	 $LN526@Management

  028da	80 7b 02 02	 cmp	 BYTE PTR [ebx+2], 2
  028de	0f 85 ac 00 00
	00		 jne	 $LN526@Management

  028e4	0f b7 03	 movzx	 eax, WORD PTR [ebx]
  028e7	66 85 c0	 test	 ax, ax
  028ea	0f 88 a0 00 00
	00		 js	 $LN526@Management

  028f0	0f bf f8	 movsx	 edi, ax
  028f3	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  028f9	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  028ff	ba 13 01 00 00	 mov	 edx, 275		; 00000113H
  02904	66 39 97 b8 00
	00 00		 cmp	 WORD PTR [edi+184], dx
  0290b	0f 85 7f 00 00
	00		 jne	 $LN526@Management

  02911	39 8d 60 fd ff
	ff		 cmp	 DWORD PTR _iLife$224853[ebp], ecx
  02917	7f 06		 jg	 SHORT $LN520@Management

  02919	89 8d 60 fd ff
	ff		 mov	 DWORD PTR _iLife$224853[ebp], ecx
$LN520@Management:

  0291f	db 85 60 fd ff
	ff		 fild	 DWORD PTR _iLife$224853[ebp]
  02925	d9 87 00 01 00
	00		 fld	 DWORD PTR [edi+256]
  0292b	de d9		 fcompp
  0292d	df e0		 fnstsw	 ax
  0292f	f6 c4 05	 test	 ah, 5
  02932	7a 11		 jp	 SHORT $LN519@Management

  02934	d9 87 00 01 00
	00		 fld	 DWORD PTR [edi+256]
  0293a	e8 00 00 00 00	 call	 __ftol2_sse
  0293f	89 85 60 fd ff
	ff		 mov	 DWORD PTR _iLife$224853[ebp], eax
$LN519@Management:

  02945	db 85 60 fd ff
	ff		 fild	 DWORD PTR _iLife$224853[ebp]

  0294b	6a 01		 push	 1
  0294d	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224867[ebp]
  02953	d9 9f fc 00 00
	00		 fstp	 DWORD PTR [edi+252]
  02959	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  0295e	d9 87 00 01 00
	00		 fld	 DWORD PTR [edi+256]
  02964	8b 06		 mov	 eax, DWORD PTR [esi]
  02966	83 ec 10	 sub	 esp, 16			; 00000010H
  02969	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  0296d	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224867[ebp]
  02973	d9 87 fc 00 00
	00		 fld	 DWORD PTR [edi+252]
  02979	dd 1c 24	 fstp	 QWORD PTR [esp]
  0297c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MDPJCDCO@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$DN?5?$CF7?40f?5?1?5?$CF7?40f?$AA@
  02981	50		 push	 eax
  02982	51		 push	 ecx
  02983	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  02988	83 c4 1c	 add	 esp, 28			; 0000001cH
  0298b	b9 88 13 00 00	 mov	 ecx, 5000		; 00001388H
$LN526@Management:

  02990	83 c3 0c	 add	 ebx, 12			; 0000000cH
  02993	ff 4d f8	 dec	 DWORD PTR tv5115[ebp]
  02996	0f 85 34 ff ff
	ff		 jne	 $LL527@Management

  0299c	e9 c9 35 00 00	 jmp	 $LN899@Management
$LN518@Management:

  029a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GCCAHPBB@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@
  029a6	8d 5e 77	 lea	 ebx, DWORD PTR [esi+119]
  029a9	53		 push	 ebx
  029aa	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  029ad	50		 push	 eax
  029ae	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  029b1	51		 push	 ecx
  029b2	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  029b7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  029bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GCCAHPBB@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@
  029c2	53		 push	 ebx
  029c3	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  029c6	50		 push	 eax
  029c7	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  029ca	50		 push	 eax
  029cb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  029d0	68 00 00 00 00	 push	 OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  029d5	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  029da	83 c4 2c	 add	 esp, 44			; 0000002cH

  029dd	8b cf		 mov	 ecx, edi
  029df	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  029e4	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  029e7	81 fa 3f 4b 4c
	00		 cmp	 edx, 4999999		; 004c4b3fH
  029ed	0f 87 77 35 00
	00		 ja	 $LN899@Management

  029f3	a3 00 00 00 00	 mov	 DWORD PTR ?giKundunRefillHP@@3HA, eax ; giKundunRefillHP
$LN1144@Management:

  029f8	6a 00		 push	 0
  029fa	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224873[ebp]
  02a00	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  02a05	a1 00 00 00 00	 mov	 eax, DWORD PTR ?giKundunRefillHPTime@@3HA ; giKundunRefillHPTime
  02a0a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?giKundunRefillHP@@3HA ; giKundunRefillHP
  02a10	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?giKundunRefillHPSec@@3HA ; giKundunRefillHPSec
  02a16	50		 push	 eax
  02a17	8b 06		 mov	 eax, DWORD PTR [esi]
  02a19	51		 push	 ecx
  02a1a	52		 push	 edx
  02a1b	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@PHLKPBLC@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?5?$DN?5?$CF@
  02a20	50		 push	 eax
  02a21	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224873[ebp]
  02a27	51		 push	 ecx
  02a28	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  02a2d	83 c4 18	 add	 esp, 24			; 00000018H

  02a30	e9 35 35 00 00	 jmp	 $LN899@Management
$LN515@Management:

  02a35	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GFGEBJIN@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h@
  02a3a	8d 5e 77	 lea	 ebx, DWORD PTR [esi+119]
  02a3d	53		 push	 ebx
  02a3e	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  02a41	50		 push	 eax
  02a42	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  02a45	51		 push	 ecx
  02a46	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02a4b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  02a51	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GFGEBJIN@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?$DP?$DP?$KH?$KC?$KB?h@
  02a56	53		 push	 ebx
  02a57	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  02a5a	50		 push	 eax
  02a5b	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  02a5e	50		 push	 eax
  02a5f	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02a64	68 00 00 00 00	 push	 OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  02a69	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  02a6e	83 c4 2c	 add	 esp, 44			; 0000002cH

  02a71	8b cf		 mov	 ecx, edi
  02a73	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02a78	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  02a7b	81 fa 0f 27 00
	00		 cmp	 edx, 9999		; 0000270fH
  02a81	0f 87 e3 34 00
	00		 ja	 $LN899@Management

  02a87	a3 00 00 00 00	 mov	 DWORD PTR ?giKundunRefillHPSec@@3HA, eax ; giKundunRefillHPSec

  02a8c	e9 67 ff ff ff	 jmp	 $LN1144@Management
$LN512@Management:

  02a91	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OGJFDCBA@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@
  02a96	8d 5e 77	 lea	 ebx, DWORD PTR [esi+119]
  02a99	53		 push	 ebx
  02a9a	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  02a9d	50		 push	 eax
  02a9e	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  02aa1	51		 push	 ecx
  02aa2	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02aa7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  02aad	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OGJFDCBA@?$KH?$KF?$KH?a?$DP?$KH?$LCHP?$KH?$KK?$KH?W?$DP?$KB?m?$DP?$KH?$KE?$KB?c?$DP?$DP?$DP?$KH?$KC?$KB?h?$AA@
  02ab2	53		 push	 ebx
  02ab3	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  02ab6	50		 push	 eax
  02ab7	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  02aba	50		 push	 eax
  02abb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GLPGGMOI@?$FLKUNDUN?$FN?5Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5@
  02ac0	68 00 00 00 00	 push	 OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  02ac5	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  02aca	83 c4 2c	 add	 esp, 44			; 0000002cH

  02acd	8b cf		 mov	 ecx, edi
  02acf	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02ad4	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  02ad9	0f 87 8b 34 00
	00		 ja	 $LN899@Management

  02adf	6a 00		 push	 0
  02ae1	8d 8d 68 fd ff
	ff		 lea	 ecx, DWORD PTR _pNotice$224885[ebp]
  02ae7	a3 00 00 00 00	 mov	 DWORD PTR ?giKundunRefillHPTime@@3HA, eax ; giKundunRefillHPTime
  02aec	e8 00 00 00 00	 call	 ??0TNotice@@QAE@E@Z	; TNotice::TNotice

  02af1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?giKundunRefillHPTime@@3HA ; giKundunRefillHPTime
  02af7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?giKundunRefillHP@@3HA ; giKundunRefillHP
  02afc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?giKundunRefillHPSec@@3HA ; giKundunRefillHPSec
  02b02	52		 push	 edx
  02b03	8b 16		 mov	 edx, DWORD PTR [esi]
  02b05	50		 push	 eax
  02b06	51		 push	 ecx
  02b07	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@PHLKPBLC@?$KH?$KF?$KH?a?$DP?$KH?$LC?5HP?5?$KH?$KE?$KH?$KM?$DP?$KH?Y?$KH?$KK?$KH?W?$DP?$KB?m?$KB?$KE?$DP?5?$DN?5?$CF@
  02b0c	52		 push	 edx
  02b0d	8d 85 68 fd ff
	ff		 lea	 eax, DWORD PTR _pNotice$224885[ebp]
  02b13	50		 push	 eax
  02b14	e8 00 00 00 00	 call	 ?SendToUser@TNotice@@QAAXHPADZZ ; TNotice::SendToUser
  02b19	83 c4 18	 add	 esp, 24			; 00000018H
  02b1c	e9 49 34 00 00	 jmp	 $LN899@Management
$LN509@Management:

  02b21	8b cf		 mov	 ecx, edi
  02b23	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  02b28	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02b2a	50		 push	 eax
  02b2b	6a 00		 push	 0
  02b2d	51		 push	 ecx
  02b2e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02b33	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02b38	e9 2d 34 00 00	 jmp	 $LN899@Management
$LN508@Management:

  02b3d	8b 16		 mov	 edx, DWORD PTR [esi]
  02b3f	6a 00		 push	 0
  02b41	6a 01		 push	 1
  02b43	52		 push	 edx
  02b44	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02b49	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02b4e	e9 17 34 00 00	 jmp	 $LN899@Management
$LN507@Management:

  02b53	8b 06		 mov	 eax, DWORD PTR [esi]
  02b55	6a 00		 push	 0
  02b57	6a 02		 push	 2
  02b59	50		 push	 eax
  02b5a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02b5f	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02b64	e9 01 34 00 00	 jmp	 $LN899@Management
$LN506@Management:

  02b69	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02b6b	6a 00		 push	 0
  02b6d	6a 03		 push	 3
  02b6f	51		 push	 ecx
  02b70	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02b75	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02b7a	e9 eb 33 00 00	 jmp	 $LN899@Management
$LN505@Management:

  02b7f	8b 16		 mov	 edx, DWORD PTR [esi]
  02b81	6a 00		 push	 0
  02b83	6a 04		 push	 4
  02b85	52		 push	 edx
  02b86	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02b8b	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02b90	e9 d5 33 00 00	 jmp	 $LN899@Management
$LN504@Management:

  02b95	8b 06		 mov	 eax, DWORD PTR [esi]
  02b97	6a 00		 push	 0
  02b99	6a 05		 push	 5
  02b9b	50		 push	 eax
  02b9c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02ba1	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02ba6	e9 bf 33 00 00	 jmp	 $LN899@Management
$LN503@Management:

  02bab	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02bad	6a 00		 push	 0
  02baf	6a 06		 push	 6
  02bb1	51		 push	 ecx
  02bb2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02bb7	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02bbc	e9 a9 33 00 00	 jmp	 $LN899@Management
$LN502@Management:

  02bc1	8b 16		 mov	 edx, DWORD PTR [esi]
  02bc3	6a 00		 push	 0
  02bc5	6a 07		 push	 7
  02bc7	52		 push	 edx
  02bc8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02bcd	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02bd2	e9 93 33 00 00	 jmp	 $LN899@Management
$LN501@Management:

  02bd7	8b cf		 mov	 ecx, edi
  02bd9	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  02bde	50		 push	 eax
  02bdf	8b 06		 mov	 eax, DWORD PTR [esi]
  02be1	6a 08		 push	 8
  02be3	50		 push	 eax
  02be4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  02be9	e8 00 00 00 00	 call	 ?OperateGmCommand@CCastleSiege@@QAEXHHPAX@Z ; CCastleSiege::OperateGmCommand

  02bee	e9 77 33 00 00	 jmp	 $LN899@Management
$LN500@Management:

  02bf3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02bf5	6a 01		 push	 1
  02bf7	51		 push	 ecx
  02bf8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Crywolf@@3VCCrywolf@@A ; g_Crywolf
  02bfd	e8 00 00 00 00	 call	 ?OperateGmCommand@CCrywolf@@QAEXHH@Z ; CCrywolf::OperateGmCommand

  02c02	e9 63 33 00 00	 jmp	 $LN899@Management
$LN499@Management:

  02c07	8b 16		 mov	 edx, DWORD PTR [esi]
  02c09	6a 02		 push	 2
  02c0b	52		 push	 edx
  02c0c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Crywolf@@3VCCrywolf@@A ; g_Crywolf
  02c11	e8 00 00 00 00	 call	 ?OperateGmCommand@CCrywolf@@QAEXHH@Z ; CCrywolf::OperateGmCommand

  02c16	e9 4f 33 00 00	 jmp	 $LN899@Management
$LN498@Management:

  02c1b	8b 06		 mov	 eax, DWORD PTR [esi]
  02c1d	6a 03		 push	 3
  02c1f	50		 push	 eax
  02c20	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Crywolf@@3VCCrywolf@@A ; g_Crywolf
  02c25	e8 00 00 00 00	 call	 ?OperateGmCommand@CCrywolf@@QAEXHH@Z ; CCrywolf::OperateGmCommand

  02c2a	e9 3b 33 00 00	 jmp	 $LN899@Management
$LN497@Management:

  02c2f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02c31	6a 00		 push	 0
  02c33	51		 push	 ecx
  02c34	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Crywolf@@3VCCrywolf@@A ; g_Crywolf
  02c39	e8 00 00 00 00	 call	 ?OperateGmCommand@CCrywolf@@QAEXHH@Z ; CCrywolf::OperateGmCommand

  02c3e	e9 27 33 00 00	 jmp	 $LN899@Management
$LN496@Management:

  02c43	8b 16		 mov	 edx, DWORD PTR [esi]
  02c45	6a 00		 push	 0
  02c47	52		 push	 edx
  02c48	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02c4d	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02c52	e9 13 33 00 00	 jmp	 $LN899@Management
$LN495@Management:

  02c57	8b 06		 mov	 eax, DWORD PTR [esi]
  02c59	6a 01		 push	 1
  02c5b	50		 push	 eax
  02c5c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02c61	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02c66	e9 ff 32 00 00	 jmp	 $LN899@Management
$LN494@Management:

  02c6b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02c6d	6a 02		 push	 2
  02c6f	51		 push	 ecx
  02c70	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02c75	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02c7a	e9 eb 32 00 00	 jmp	 $LN899@Management
$LN493@Management:

  02c7f	8b 16		 mov	 edx, DWORD PTR [esi]
  02c81	6a 03		 push	 3
  02c83	52		 push	 edx
  02c84	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02c89	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02c8e	e9 d7 32 00 00	 jmp	 $LN899@Management
$LN492@Management:

  02c93	8b 06		 mov	 eax, DWORD PTR [esi]
  02c95	6a 04		 push	 4
  02c97	50		 push	 eax
  02c98	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02c9d	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02ca2	e9 c3 32 00 00	 jmp	 $LN899@Management
$LN491@Management:

  02ca7	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02ca9	6a 05		 push	 5
  02cab	51		 push	 ecx
  02cac	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02cb1	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02cb6	e9 af 32 00 00	 jmp	 $LN899@Management
$LN490@Management:

  02cbb	8b 16		 mov	 edx, DWORD PTR [esi]
  02cbd	6a 06		 push	 6
  02cbf	52		 push	 edx
  02cc0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02cc5	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02cca	e9 9b 32 00 00	 jmp	 $LN899@Management
$LN489@Management:

  02ccf	8b 06		 mov	 eax, DWORD PTR [esi]
  02cd1	6a 07		 push	 7
  02cd3	50		 push	 eax
  02cd4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02cd9	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02cde	e9 87 32 00 00	 jmp	 $LN899@Management
$LN488@Management:

  02ce3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02ce5	6a 08		 push	 8
  02ce7	51		 push	 ecx
  02ce8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02ced	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02cf2	e9 73 32 00 00	 jmp	 $LN899@Management
$LN487@Management:

  02cf7	8b 16		 mov	 edx, DWORD PTR [esi]
  02cf9	6a 09		 push	 9
  02cfb	52		 push	 edx
  02cfc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d01	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d06	e9 5f 32 00 00	 jmp	 $LN899@Management
$LN486@Management:

  02d0b	8b 06		 mov	 eax, DWORD PTR [esi]
  02d0d	6a 0a		 push	 10			; 0000000aH
  02d0f	50		 push	 eax
  02d10	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d15	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d1a	e9 4b 32 00 00	 jmp	 $LN899@Management
$LN485@Management:

  02d1f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02d21	6a 0b		 push	 11			; 0000000bH
  02d23	51		 push	 ecx
  02d24	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d29	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d2e	e9 37 32 00 00	 jmp	 $LN899@Management
$LN484@Management:

  02d33	8b 16		 mov	 edx, DWORD PTR [esi]
  02d35	6a 0c		 push	 12			; 0000000cH
  02d37	52		 push	 edx
  02d38	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d3d	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d42	e9 23 32 00 00	 jmp	 $LN899@Management
$LN483@Management:

  02d47	8b 06		 mov	 eax, DWORD PTR [esi]
  02d49	6a 0d		 push	 13			; 0000000dH
  02d4b	50		 push	 eax
  02d4c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d51	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d56	e9 0f 32 00 00	 jmp	 $LN899@Management
$LN482@Management:

  02d5b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02d5d	6a 0e		 push	 14			; 0000000eH
  02d5f	51		 push	 ecx
  02d60	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d65	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d6a	e9 fb 31 00 00	 jmp	 $LN899@Management
$LN481@Management:

  02d6f	8b 16		 mov	 edx, DWORD PTR [esi]
  02d71	6a 0f		 push	 15			; 0000000fH
  02d73	52		 push	 edx
  02d74	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d79	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d7e	e9 e7 31 00 00	 jmp	 $LN899@Management
$LN480@Management:

  02d83	8b 06		 mov	 eax, DWORD PTR [esi]
  02d85	6a 10		 push	 16			; 00000010H
  02d87	50		 push	 eax
  02d88	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02d8d	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02d92	e9 d3 31 00 00	 jmp	 $LN899@Management
$LN479@Management:

  02d97	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02d99	6a 11		 push	 17			; 00000011H
  02d9b	51		 push	 ecx
  02d9c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02da1	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02da6	e9 bf 31 00 00	 jmp	 $LN899@Management
$LN478@Management:

  02dab	8b 16		 mov	 edx, DWORD PTR [esi]
  02dad	6a 12		 push	 18			; 00000012H
  02daf	52		 push	 edx
  02db0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02db5	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02dba	e9 ab 31 00 00	 jmp	 $LN899@Management
$LN477@Management:

  02dbf	8b 06		 mov	 eax, DWORD PTR [esi]
  02dc1	6a 13		 push	 19			; 00000013H
  02dc3	50		 push	 eax
  02dc4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02dc9	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02dce	e9 97 31 00 00	 jmp	 $LN899@Management
$LN476@Management:

  02dd3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02dd5	6a 14		 push	 20			; 00000014H
  02dd7	51		 push	 ecx
  02dd8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  02ddd	e8 00 00 00 00	 call	 ?OperateGmCommand@CKanturu@@QAEXHH@Z ; CKanturu::OperateGmCommand

  02de2	e9 83 31 00 00	 jmp	 $LN899@Management
$LN475@Management:

  02de7	0f b7 8e b8 00
	00 00		 movzx	 ecx, WORD PTR [esi+184]
  02dee	8b c1		 mov	 eax, ecx

  02df0	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  02df6	c6 86 bb 00 00
	00 00		 mov	 BYTE PTR [esi+187], 0
  02dfd	0f b7 90 08 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+8]
  02e04	66 89 96 f4 00
	00 00		 mov	 WORD PTR [esi+244], dx

  02e0b	0f b7 90 0a 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+10]
  02e12	66 89 96 f6 00
	00 00		 mov	 WORD PTR [esi+246], dx

  02e19	0f b7 90 0c 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+12]
  02e20	66 89 96 f8 00
	00 00		 mov	 WORD PTR [esi+248], dx

  02e27	0f b7 90 0e 00
	00 00		 movzx	 edx, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+14]
  02e2e	66 89 96 fa 00
	00 00		 mov	 WORD PTR [esi+250], dx

  02e35	d9 80 14 00 00
	00		 fld	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+20]
  02e3b	d9 9e fc 00 00
	00		 fstp	 DWORD PTR [esi+252]

  02e41	d9 80 18 00 00
	00		 fld	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+24]
  02e47	d9 9e 00 01 00
	00		 fstp	 DWORD PTR [esi+256]

  02e4d	d9 80 20 00 00
	00		 fld	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+32]
  02e53	d9 9e 10 01 00
	00		 fstp	 DWORD PTR [esi+272]

  02e59	d9 80 24 00 00
	00		 fld	 DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+36]
  02e5f	d9 9e 14 01 00
	00		 fstp	 DWORD PTR [esi+276]

  02e65	66 8b 80 c8 0b
	00 00		 mov	 ax, WORD PTR ?DCInfo@@3Vclassdef@@A[eax+3016]
  02e6c	66 89 86 18 01
	00 00		 mov	 WORD PTR [esi+280], ax

  02e73	83 f9 04	 cmp	 ecx, 4
  02e76	74 18		 je	 SHORT $LN473@Management
  02e78	83 f9 03	 cmp	 ecx, 3
  02e7b	74 13		 je	 SHORT $LN473@Management

  02e7d	0f bf 86 be 00
	00 00		 movsx	 eax, WORD PTR [esi+190]
  02e84	8d 4c 80 fb	 lea	 ecx, DWORD PTR [eax+eax*4-5]
  02e88	89 8e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ecx
  02e8e	eb 19		 jmp	 SHORT $LN472@Management
$LN473@Management:

  02e90	0f bf 86 be 00
	00 00		 movsx	 eax, WORD PTR [esi+190]
  02e97	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  02e9e	2b d0		 sub	 edx, eax
  02ea0	83 ea 07	 sub	 edx, 7
  02ea3	89 96 c0 00 00
	00		 mov	 DWORD PTR [esi+192], edx
$LN472@Management:

  02ea9	8b 06		 mov	 eax, DWORD PTR [esi]
  02eab	6a 01		 push	 1
  02ead	50		 push	 eax
  02eae	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@HMKKLLPO@?$KH?$KF?$DP?$KH?W?$DP?$KH?$KG?$KH?$KP?5?$KH?$KC?$KB?h?$DP?$KH?W?$KB?c?$DP?5?$KH?W?$DP?$DP?$KH?$KD?$DP?$KH?$KJ?$DP@
  02eb3	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

  02eb8	8b 0e		 mov	 ecx, DWORD PTR [esi]
  02eba	6a 01		 push	 1
  02ebc	51		 push	 ecx
  02ebd	e8 00 00 00 00	 call	 ?gObjCloseSet@@YAXHH@Z	; gObjCloseSet
  02ec2	83 c4 14	 add	 esp, 20			; 00000014H
  02ec5	e9 a0 30 00 00	 jmp	 $LN899@Management
$LN471@Management:

  02eca	8b cf		 mov	 ecx, edi
  02ecc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02ed1	83 f8 01	 cmp	 eax, 1
  02ed4	7d 05		 jge	 SHORT $LN470@Management

  02ed6	b8 01 00 00 00	 mov	 eax, 1
$LN470@Management:

  02edb	0f bf d0	 movsx	 edx, ax

  02ede	53		 push	 ebx
  02edf	66 89 86 be 00
	00 00		 mov	 WORD PTR [esi+190], ax
  02ee6	8b 04 95 fc ff
	ff ff		 mov	 eax, DWORD PTR ?gLevelExperience@@3PAKA[edx*4-4]
  02eed	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GLFLLIFN@?1?$DP?$DP?$KH?$KG?$KH?$KK?$KH?W?$DP?$DP?$KH?$KD?$AA@
  02ef2	56		 push	 esi
  02ef3	8b cf		 mov	 ecx, edi
  02ef5	89 86 c8 00 00
	00		 mov	 DWORD PTR [esi+200], eax
  02efb	c7 86 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+196], 0
  02f05	e8 00 00 00 00	 call	 ?ManagementProc@CGMMng@@QAEHPAUOBJECTSTRUCT@@PADH@Z ; CGMMng::ManagementProc

  02f0a	e9 5b 30 00 00	 jmp	 $LN899@Management
$LN469@Management:

  02f0f	8b cf		 mov	 ecx, edi
  02f11	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02f16	33 c9		 xor	 ecx, ecx

  02f18	85 c0		 test	 eax, eax
  02f1a	74 19		 je	 SHORT $LN462@Management
$LN468@Management:

  02f1c	83 f8 01	 cmp	 eax, 1
  02f1f	75 04		 jne	 SHORT $LN466@Management

  02f21	8b c8		 mov	 ecx, eax
  02f23	eb 10		 jmp	 SHORT $LN462@Management
$LN466@Management:

  02f25	83 f8 02	 cmp	 eax, 2
  02f28	75 04		 jne	 SHORT $LN464@Management

  02f2a	8b c8		 mov	 ecx, eax
  02f2c	eb 07		 jmp	 SHORT $LN462@Management
$LN464@Management:

  02f2e	83 f8 03	 cmp	 eax, 3
  02f31	75 02		 jne	 SHORT $LN462@Management

  02f33	8b c8		 mov	 ecx, eax
$LN462@Management:

  02f35	8b 36		 mov	 esi, DWORD PTR [esi]
  02f37	6a ff		 push	 -1
  02f39	51		 push	 ecx
  02f3a	8d 0c b6	 lea	 ecx, DWORD PTR [esi+esi*4]
  02f3d	8d 0c cd 00 00
	00 00		 lea	 ecx, DWORD PTR ?gDarkSpirit@@3PAVCDarkSpirit@@A[ecx*8]
  02f44	e8 00 00 00 00	 call	 ?SetMode@CDarkSpirit@@QAEXW4ePetItem_Mode@1@H@Z ; CDarkSpirit::SetMode

  02f49	e9 1c 30 00 00	 jmp	 $LN899@Management
$LN461@Management:

  02f4e	8b cf		 mov	 ecx, edi
  02f50	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02f55	8b cf		 mov	 ecx, edi
  02f57	8b d8		 mov	 ebx, eax
  02f59	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  02f5e	8b 96 24 0e 00
	00		 mov	 edx, DWORD PTR [esi+3620]
  02f64	8b cb		 mov	 ecx, ebx
  02f66	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H

  02f6c	6a 03		 push	 3
  02f6e	89 84 11 bc 00
	00 00		 mov	 DWORD PTR [ecx+edx+188], eax
  02f75	03 8e 24 0e 00
	00		 add	 ecx, DWORD PTR [esi+3620]
  02f7b	6a 00		 push	 0
  02f7d	0f b6 91 ca 00
	00 00		 movzx	 edx, BYTE PTR [ecx+202]
  02f84	0f b6 81 ae 00
	00 00		 movzx	 eax, BYTE PTR [ecx+174]
  02f8b	68 ff 00 00 00	 push	 255			; 000000ffH
  02f90	6a 00		 push	 0
  02f92	52		 push	 edx
  02f93	0f b6 91 97 00
	00 00		 movzx	 edx, BYTE PTR [ecx+151]
  02f9a	50		 push	 eax
  02f9b	0f b6 81 96 00
	00 00		 movzx	 eax, BYTE PTR [ecx+150]
  02fa2	52		 push	 edx
  02fa3	0f b6 91 95 00
	00 00		 movzx	 edx, BYTE PTR [ecx+149]
  02faa	50		 push	 eax
  02fab	0f b6 81 94 00
	00 00		 movzx	 eax, BYTE PTR [ecx+148]
  02fb2	52		 push	 edx
  02fb3	0f bf 51 06	 movsx	 edx, WORD PTR [ecx+6]
  02fb7	50		 push	 eax
  02fb8	52		 push	 edx
  02fb9	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

  02fbe	e9 a7 2f 00 00	 jmp	 $LN899@Management
$LN460@Management:

  02fc3	0f b6 86 49 01
	00 00		 movzx	 eax, BYTE PTR [esi+329]
  02fca	50		 push	 eax
  02fcb	6a 01		 push	 1
  02fcd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTempleEvent@@3VCIllusionTempleEvent@@A ; g_IllusionTempleEvent
  02fd2	e8 00 00 00 00	 call	 ?OperateGMCommand@CIllusionTempleEvent@@QAEXHE@Z ; CIllusionTempleEvent::OperateGMCommand

  02fd7	e9 8e 2f 00 00	 jmp	 $LN899@Management
$LN459@Management:

  02fdc	0f b6 8e 49 01
	00 00		 movzx	 ecx, BYTE PTR [esi+329]
  02fe3	51		 push	 ecx
  02fe4	6a 02		 push	 2
  02fe6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTempleEvent@@3VCIllusionTempleEvent@@A ; g_IllusionTempleEvent
  02feb	e8 00 00 00 00	 call	 ?OperateGMCommand@CIllusionTempleEvent@@QAEXHE@Z ; CIllusionTempleEvent::OperateGMCommand

  02ff0	e9 75 2f 00 00	 jmp	 $LN899@Management
$LN458@Management:

  02ff5	0f b6 96 49 01
	00 00		 movzx	 edx, BYTE PTR [esi+329]
  02ffc	52		 push	 edx
  02ffd	6a 03		 push	 3
  02fff	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTempleEvent@@3VCIllusionTempleEvent@@A ; g_IllusionTempleEvent
  03004	e8 00 00 00 00	 call	 ?OperateGMCommand@CIllusionTempleEvent@@QAEXHE@Z ; CIllusionTempleEvent::OperateGMCommand

  03009	e9 5c 2f 00 00	 jmp	 $LN899@Management
$LN457@Management:

  0300e	8b cf		 mov	 ecx, edi
  03010	c7 45 f4 fc fc
	f3 f3		 mov	 DWORD PTR _QuestBitMask$224951[ebp], -202113796 ; f3f3fcfcH
  03017	c7 45 f8 cf cf
	3f 3f		 mov	 DWORD PTR _QuestBitMask$224951[ebp+4], 1061146575 ; 3f3fcfcfH
  0301e	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  03023	8b f8		 mov	 edi, eax

  03025	85 ff		 test	 edi, edi
  03027	75 27		 jne	 SHORT $LN456@Management

  03029	6a 32		 push	 50			; 00000032H
  0302b	8d 86 8c 10 00
	00		 lea	 eax, DWORD PTR [esi+4236]
  03031	68 ff 00 00 00	 push	 255			; 000000ffH
  03036	50		 push	 eax
  03037	e8 00 00 00 00	 call	 _memset

  0303c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0303e	51		 push	 ecx
  0303f	c6 86 be 10 00
	00 00		 mov	 BYTE PTR [esi+4286], 0
  03046	e8 00 00 00 00	 call	 ?CGRequestQuestInfo@@YAXH@Z ; CGRequestQuestInfo
  0304b	83 c4 10	 add	 esp, 16			; 00000010H

  0304e	eb 44		 jmp	 SHORT $LN455@Management
$LN456@Management:

  03050	99		 cdq
  03051	83 e2 03	 and	 edx, 3
  03054	03 c2		 add	 eax, edx
  03056	c1 f8 02	 sar	 eax, 2

  03059	81 e7 03 00 00
	80		 and	 edi, -2147483645	; 80000003H
  0305f	79 05		 jns	 SHORT $LN1122@Management
  03061	4f		 dec	 edi
  03062	83 cf fc	 or	 edi, -4			; fffffffcH
  03065	47		 inc	 edi
$LN1122@Management:
  03066	03 ff		 add	 edi, edi

  03068	8a 54 3d f4	 mov	 dl, BYTE PTR _QuestBitMask$224951[ebp+edi]
  0306c	22 94 06 8c 10
	00 00		 and	 dl, BYTE PTR [esi+eax+4236]

  03073	8b cf		 mov	 ecx, edi
  03075	b3 03		 mov	 bl, 3
  03077	d2 e3		 shl	 bl, cl
  03079	0a d3		 or	 dl, bl
  0307b	88 94 06 8c 10
	00 00		 mov	 BYTE PTR [esi+eax+4236], dl

  03082	8b 06		 mov	 eax, DWORD PTR [esi]
  03084	50		 push	 eax
  03085	c6 86 be 10 00
	00 00		 mov	 BYTE PTR [esi+4286], 0
  0308c	e8 00 00 00 00	 call	 ?CGRequestQuestInfo@@YAXH@Z ; CGRequestQuestInfo
  03091	83 c4 04	 add	 esp, 4
$LN455@Management:

  03094	83 c8 ff	 or	 eax, -1
  03097	89 86 60 10 00
	00		 mov	 DWORD PTR [esi+4192], eax

  0309d	89 86 64 10 00
	00		 mov	 DWORD PTR [esi+4196], eax

  030a3	89 86 68 10 00
	00		 mov	 DWORD PTR [esi+4200], eax
  030a9	89 86 6c 10 00
	00		 mov	 DWORD PTR [esi+4204], eax
  030af	89 86 70 10 00
	00		 mov	 DWORD PTR [esi+4208], eax
  030b5	89 86 74 10 00
	00		 mov	 DWORD PTR [esi+4212], eax
  030bb	89 86 78 10 00
	00		 mov	 DWORD PTR [esi+4216], eax
  030c1	89 86 7c 10 00
	00		 mov	 DWORD PTR [esi+4220], eax
  030c7	89 86 80 10 00
	00		 mov	 DWORD PTR [esi+4224], eax
  030cd	89 86 84 10 00
	00		 mov	 DWORD PTR [esi+4228], eax
  030d3	89 86 88 10 00
	00		 mov	 DWORD PTR [esi+4232], eax

  030d9	e9 8c 2e 00 00	 jmp	 $LN899@Management
$LN451@Management:

  030de	8b cf		 mov	 ecx, edi
  030e0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  030e5	8b cf		 mov	 ecx, edi
  030e7	8b d8		 mov	 ebx, eax
  030e9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  030ee	8b cf		 mov	 ecx, edi
  030f0	89 45 f8	 mov	 DWORD PTR _iCoordX$224964[ebp], eax
  030f3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  030f8	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iCoordY$224965[ebp], eax

  030fe	85 db		 test	 ebx, ebx
  03100	0f 88 64 2e 00
	00		 js	 $LN899@Management
  03106	33 c9		 xor	 ecx, ecx
  03108	83 fb 52	 cmp	 ebx, 82			; 00000052H
  0310b	0f 9e c1	 setle	 cl
  0310e	85 c9		 test	 ecx, ecx
  03110	0f 84 54 2e 00
	00		 je	 $LN899@Management

  03116	8b 7d f8	 mov	 edi, DWORD PTR _iCoordX$224964[ebp]
  03119	85 ff		 test	 edi, edi
  0311b	0f 88 49 2e 00
	00		 js	 $LN899@Management
  03121	33 c9		 xor	 ecx, ecx
  03123	81 ff ff 00 00
	00		 cmp	 edi, 255		; 000000ffH
  03129	0f 9e c1	 setle	 cl
  0312c	85 c9		 test	 ecx, ecx
  0312e	0f 84 36 2e 00
	00		 je	 $LN899@Management

  03134	8b cb		 mov	 ecx, ebx
  03136	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  0313c	50		 push	 eax
  0313d	57		 push	 edi
  0313e	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  03144	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr

  03149	a8 0c		 test	 al, 12			; 0000000cH
  0314b	75 2f		 jne	 SHORT $LN446@Management

  0314d	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _iCoordY$224965[ebp]
  03153	8b 16		 mov	 edx, DWORD PTR [esi]
  03155	51		 push	 ecx
  03156	57		 push	 edi
  03157	53		 push	 ebx
  03158	52		 push	 edx
  03159	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  0315e	83 c4 10	 add	 esp, 16			; 00000010H

  03161	83 fb 3a	 cmp	 ebx, 58			; 0000003aH
  03164	0f 85 00 2e 00
	00		 jne	 $LN899@Management

  0316a	8b 06		 mov	 eax, DWORD PTR [esi]
  0316c	50		 push	 eax
  0316d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  03172	e8 00 00 00 00	 call	 ?AddUserData@CRaklionBattleUserMng@@QAEHH@Z ; CRaklionBattleUserMng::AddUserData

  03177	e9 ee 2d 00 00	 jmp	 $LN899@Management
$LN446@Management:

  0317c	0f b6 c8	 movzx	 ecx, al
  0317f	51		 push	 ecx
  03180	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@PLNMJHPN@?$KH?$KJ?$KH?$LK?$DP?$KH?Y?5?$KH?$KC?$KH?h?$DP?$DP?$KH?$KB?$KH?W?$KB?$KE?$KH?$LA?5?$KH?$KJ?$KH?h?$KH?$KB?$KH?Y?5@
  03185	8d 95 68 fd ff
	ff		 lea	 edx, DWORD PTR _pNotice$224976[ebp]
  0318b	6a 00		 push	 0
  0318d	52		 push	 edx
  0318e	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx

  03193	8b 0e		 mov	 ecx, DWORD PTR [esi]
  03195	8d 85 68 fd ff
	ff		 lea	 eax, DWORD PTR _pNotice$224976[ebp]
  0319b	50		 push	 eax
  0319c	51		 push	 ecx
  0319d	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  031a2	83 c4 18	 add	 esp, 24			; 00000018H
  031a5	e9 c0 2d 00 00	 jmp	 $LN899@Management
$LN444@Management:

  031aa	56		 push	 esi
  031ab	8b cf		 mov	 ecx, edi
  031ad	e8 00 00 00 00	 call	 ?GetInfinityArrowMPConsumption@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z ; CGMMng::GetInfinityArrowMPConsumption

  031b2	e9 b3 2d 00 00	 jmp	 $LN899@Management
$LN443@Management:

  031b7	8b cf		 mov	 ecx, edi
  031b9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  031be	50		 push	 eax
  031bf	56		 push	 esi
  031c0	8b cf		 mov	 ecx, edi
  031c2	e8 00 00 00 00	 call	 ?ControlInfinityArrowMPConsumption0@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption0

  031c7	e9 9e 2d 00 00	 jmp	 $LN899@Management
$LN442@Management:

  031cc	8b cf		 mov	 ecx, edi
  031ce	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  031d3	50		 push	 eax
  031d4	56		 push	 esi
  031d5	8b cf		 mov	 ecx, edi
  031d7	e8 00 00 00 00	 call	 ?ControlInfinityArrowMPConsumption1@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption1

  031dc	e9 89 2d 00 00	 jmp	 $LN899@Management
$LN441@Management:

  031e1	8b cf		 mov	 ecx, edi
  031e3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  031e8	50		 push	 eax
  031e9	56		 push	 esi
  031ea	8b cf		 mov	 ecx, edi
  031ec	e8 00 00 00 00	 call	 ?ControlInfinityArrowMPConsumption2@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption2

  031f1	e9 74 2d 00 00	 jmp	 $LN899@Management
$LN440@Management:

  031f6	8b cf		 mov	 ecx, edi
  031f8	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  031fd	50		 push	 eax
  031fe	56		 push	 esi
  031ff	8b cf		 mov	 ecx, edi
  03201	e8 00 00 00 00	 call	 ?ControlInfinityArrowMPConsumption3@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlInfinityArrowMPConsumption3

  03206	e9 5f 2d 00 00	 jmp	 $LN899@Management
$LN439@Management:

  0320b	8b cf		 mov	 ecx, edi
  0320d	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  03212	50		 push	 eax
  03213	56		 push	 esi
  03214	8b cf		 mov	 ecx, edi
  03216	e8 00 00 00 00	 call	 ?SetInfinityArrowTime@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::SetInfinityArrowTime

  0321b	e9 4a 2d 00 00	 jmp	 $LN899@Management
$LN438@Management:

  03220	8b cf		 mov	 ecx, edi
  03222	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  03227	99		 cdq

  03228	6a 00		 push	 0
  0322a	89 55 f8	 mov	 DWORD PTR _addexp$224986[ebp+4], edx
  0322d	6a 00		 push	 0
  0322f	8d 55 f4	 lea	 edx, DWORD PTR _addexp$224986[ebp]
  03232	52		 push	 edx
  03233	56		 push	 esi
  03234	89 45 f4	 mov	 DWORD PTR _addexp$224986[ebp], eax
  03237	e8 00 00 00 00	 call	 ?gObjLevelUp@@YA_NPAUOBJECTSTRUCT@@AA_JHH@Z ; gObjLevelUp
  0323c	83 c4 10	 add	 esp, 16			; 00000010H

  0323f	e9 26 2d 00 00	 jmp	 $LN899@Management
$LN437@Management:

  03244	8b cf		 mov	 ecx, edi
  03246	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  0324b	50		 push	 eax
  0324c	56		 push	 esi
  0324d	8b cf		 mov	 ecx, edi
  0324f	e8 00 00 00 00	 call	 ?ControlFireScreamDoubleAttackDistance@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::ControlFireScreamDoubleAttackDistance

  03254	e9 11 2d 00 00	 jmp	 $LN899@Management
$LN436@Management:

  03259	8b cf		 mov	 ecx, edi
  0325b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03260	8b cf		 mov	 ecx, edi
  03262	89 85 58 fd ff
	ff		 mov	 DWORD PTR _unk0$224989[ebp], eax
  03268	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0326d	8b cf		 mov	 ecx, edi
  0326f	8b d8		 mov	 ebx, eax
  03271	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03276	8b cf		 mov	 ecx, edi
  03278	89 45 f8	 mov	 DWORD PTR _OptionType$224991[ebp], eax
  0327b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03280	02 db		 add	 bl, bl
  03282	02 db		 add	 bl, bl
  03284	02 db		 add	 bl, bl
  03286	02 9d 58 fd ff
	ff		 add	 bl, BYTE PTR _unk0$224989[ebp]

  0328c	50		 push	 eax
  0328d	8b 45 f8	 mov	 eax, DWORD PTR _OptionType$224991[ebp]
  03290	80 c3 03	 add	 bl, 3
  03293	0f b6 cb	 movzx	 ecx, bl
  03296	50		 push	 eax
  03297	51		 push	 ecx
  03298	56		 push	 esi
  03299	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_kJewelOfHarmonySystem@@3VCJewelOfHarmonySystem@@A ; g_kJewelOfHarmonySystem
  0329e	e8 00 00 00 00	 call	 ?StrengthenItemByMacro@CJewelOfHarmonySystem@@QAEXPAUOBJECTSTRUCT@@EEE@Z ; CJewelOfHarmonySystem::StrengthenItemByMacro

  032a3	e9 c2 2c 00 00	 jmp	 $LN899@Management
$LN435@Management:

  032a8	8b cf		 mov	 ecx, edi
  032aa	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  032af	8b cf		 mov	 ecx, edi
  032b1	89 45 f8	 mov	 DWORD PTR _unk0$224995[ebp], eax
  032b4	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  032b9	8b cf		 mov	 ecx, edi
  032bb	8b d8		 mov	 ebx, eax
  032bd	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  032c2	02 db		 add	 bl, bl
  032c4	02 db		 add	 bl, bl
  032c6	02 db		 add	 bl, bl
  032c8	02 5d f8	 add	 bl, BYTE PTR _unk0$224995[ebp]

  032cb	50		 push	 eax
  032cc	80 c3 03	 add	 bl, 3
  032cf	0f b6 d3	 movzx	 edx, bl
  032d2	52		 push	 edx
  032d3	56		 push	 esi
  032d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_kItemSystemFor380@@3VCItemSystemFor380@@A ; g_kItemSystemFor380
  032d9	e8 00 00 00 00	 call	 ?SetOptionItemByMacro@CItemSystemFor380@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CItemSystemFor380::SetOptionItemByMacro

  032de	e9 87 2c 00 00	 jmp	 $LN899@Management
$LN434@Management:

  032e3	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _pItem$225000[ebp]
  032e9	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem

  032ee	6a 32		 push	 50			; 00000032H
  032f0	8d 45 c0	 lea	 eax, DWORD PTR _szItemName$225001[ebp]
  032f3	6a 00		 push	 0
  032f5	50		 push	 eax
  032f6	e8 00 00 00 00	 call	 _memset
  032fb	83 c4 0c	 add	 esp, 12			; 0000000cH

  032fe	8b cf		 mov	 ecx, edi
  03300	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  03305	8d 55 c0	 lea	 edx, DWORD PTR _szItemName$225001[ebp]
  03308	2b d0		 sub	 edx, eax
  0330a	8d 9b 00 00 00
	00		 npad	 6
$LL914@Management:
  03310	8a 08		 mov	 cl, BYTE PTR [eax]
  03312	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  03315	40		 inc	 eax
  03316	84 c9		 test	 cl, cl
  03318	75 f6		 jne	 SHORT $LL914@Management

  0331a	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _pItem$225000[ebp]
  03320	51		 push	 ecx
  03321	8d 55 c0	 lea	 edx, DWORD PTR _szItemName$225001[ebp]
  03324	52		 push	 edx
  03325	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ChaosCard@@3VCChaosCard@@A ; g_ChaosCard
  0332a	e8 00 00 00 00	 call	 ?CheckChaosCardInfo@CChaosCard@@QAEHPADPAVCItem@@@Z ; CChaosCard::CheckChaosCardInfo

  0332f	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _pItem$225000[ebp]
  03335	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0333a	85 c0		 test	 eax, eax
  0333c	0f 84 28 2c 00
	00		 je	 $LN899@Management

  03342	8b 85 3b fe ff
	ff		 mov	 eax, DWORD PTR _pItem$225000[ebp+151]
  03348	d9 85 c8 fd ff
	ff		 fld	 DWORD PTR _pItem$225000[ebp+36]
  0334e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  03350	d9 bd 66 fd ff
	ff		 fnstcw	 WORD PTR tv9648[ebp]
  03356	8b 95 3a fe ff
	ff		 mov	 edx, DWORD PTR _pItem$225000[ebp+150]
  0335c	6a 00		 push	 0
  0335e	50		 push	 eax
  0335f	8b 85 39 fe ff
	ff		 mov	 eax, DWORD PTR _pItem$225000[ebp+149]
  03365	51		 push	 ecx
  03366	52		 push	 edx
  03367	8b 95 38 fe ff
	ff		 mov	 edx, DWORD PTR _pItem$225000[ebp+148]
  0336d	50		 push	 eax
  0336e	0f b7 85 66 fd
	ff ff		 movzx	 eax, WORD PTR tv9648[ebp]
  03375	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0337a	89 45 f8	 mov	 DWORD PTR tv9645[ebp], eax
  0337d	52		 push	 edx
  0337e	d9 6d f8	 fldcw	 WORD PTR tv9645[ebp]
  03381	db 5d f8	 fistp	 DWORD PTR tv9643[ebp]
  03384	8a 45 f8	 mov	 al, BYTE PTR tv9643[ebp]
  03387	0f b6 d0	 movzx	 edx, al
  0338a	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR _pItem$225000[ebp+8]
  03390	52		 push	 edx
  03391	0f bf 95 aa fd
	ff ff		 movsx	 edx, WORD PTR _pItem$225000[ebp+6]
  03398	d9 ad 66 fd ff
	ff		 fldcw	 WORD PTR tv9648[ebp]
  0339e	50		 push	 eax
  0339f	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  033a6	52		 push	 edx
  033a7	0f b6 96 44 01
	00 00		 movzx	 edx, BYTE PTR [esi+324]
  033ae	50		 push	 eax
  033af	0f b6 86 49 01
	00 00		 movzx	 eax, BYTE PTR [esi+329]
  033b6	52		 push	 edx
  033b7	50		 push	 eax
  033b8	51		 push	 ecx
  033b9	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  033be	83 c4 34	 add	 esp, 52			; 00000034H

  033c1	e9 a4 2b 00 00	 jmp	 $LN899@Management
$LN432@Management:

  033c6	8b cf		 mov	 ecx, edi
  033c8	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  033cd	8b cf		 mov	 ecx, edi
  033cf	8b d8		 mov	 ebx, eax
  033d1	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  033d6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  033d8	8d 44 c3 03	 lea	 eax, DWORD PTR [ebx+eax*8+3]
  033dc	50		 push	 eax
  033dd	51		 push	 ecx
  033de	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem

  033e3	8b 16		 mov	 edx, DWORD PTR [esi]
  033e5	52		 push	 edx
  033e6	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend
  033eb	83 c4 0c	 add	 esp, 12			; 0000000cH
  033ee	e9 77 2b 00 00	 jmp	 $LN899@Management
$LN431@Management:

  033f3	bb 0c 00 00 00	 mov	 ebx, 12			; 0000000cH
  033f8	bf f0 09 00 00	 mov	 edi, 2544		; 000009f0H
  033fd	8d 49 00	 npad	 3
$LL430@Management:

  03400	8b 8e 24 0e 00
	00		 mov	 ecx, DWORD PTR [esi+3620]
  03406	03 cf		 add	 ecx, edi
  03408	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0340d	83 f8 01	 cmp	 eax, 1
  03410	75 0c		 jne	 SHORT $LN429@Management

  03412	8b 06		 mov	 eax, DWORD PTR [esi]
  03414	53		 push	 ebx
  03415	50		 push	 eax
  03416	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem
  0341b	83 c4 08	 add	 esp, 8
$LN429@Management:

  0341e	81 c7 d4 00 00
	00		 add	 edi, 212		; 000000d4H
  03424	43		 inc	 ebx
  03425	81 ff 70 c3 00
	00		 cmp	 edi, 50032		; 0000c370H
  0342b	7c d3		 jl	 SHORT $LL430@Management

  0342d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0342f	51		 push	 ecx
  03430	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend
  03435	83 c4 04	 add	 esp, 4

  03438	e9 2d 2b 00 00	 jmp	 $LN899@Management
$LN426@Management:

  0343d	f6 86 0c 02 00
	00 20		 test	 BYTE PTR [esi+524], 32	; 00000020H

  03444	0f 84 20 2b 00
	00		 je	 $LN899@Management

  0344a	6a f6		 push	 -10			; fffffff6H
  0344c	6a 00		 push	 0
  0344e	6a 00		 push	 0
  03450	6a 00		 push	 0
  03452	6a 00		 push	 0
  03454	6a 12		 push	 18			; 00000012H
  03456	56		 push	 esi
  03457	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration

  0345c	56		 push	 esi
  0345d	e8 00 00 00 00	 call	 ?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportListProtocolDestroy
  03462	83 c4 20	 add	 esp, 32			; 00000020H

  03465	e9 00 2b 00 00	 jmp	 $LN899@Management
$LN424@Management:

  0346a	f6 86 0c 02 00
	00 20		 test	 BYTE PTR [esi+524], 32	; 00000020H

  03471	0f 84 f3 2a 00
	00		 je	 $LN899@Management

  03477	6a 12		 push	 18			; 00000012H
  03479	56		 push	 esi
  0347a	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect

  0347f	56		 push	 esi
  03480	e8 00 00 00 00	 call	 ?gObjViewportListProtocolCreate@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportListProtocolCreate
  03485	83 c4 0c	 add	 esp, 12			; 0000000cH
  03488	e9 dd 2a 00 00	 jmp	 $LN899@Management
$LN422@Management:

  0348d	8b 16		 mov	 edx, DWORD PTR [esi]
  0348f	6a 02		 push	 2
  03491	52		 push	 edx
  03492	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  03497	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  0349c	e9 c9 2a 00 00	 jmp	 $LN899@Management
$LN421@Management:

  034a1	8b 06		 mov	 eax, DWORD PTR [esi]
  034a3	6a 0a		 push	 10			; 0000000aH
  034a5	50		 push	 eax
  034a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  034ab	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  034b0	e9 b5 2a 00 00	 jmp	 $LN899@Management
$LN420@Management:

  034b5	8b 0e		 mov	 ecx, DWORD PTR [esi]
  034b7	6a 0b		 push	 11			; 0000000bH
  034b9	51		 push	 ecx
  034ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  034bf	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  034c4	e9 a1 2a 00 00	 jmp	 $LN899@Management
$LN419@Management:

  034c9	8b 16		 mov	 edx, DWORD PTR [esi]
  034cb	6a 0c		 push	 12			; 0000000cH
  034cd	52		 push	 edx
  034ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  034d3	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  034d8	e9 8d 2a 00 00	 jmp	 $LN899@Management
$LN418@Management:

  034dd	8b 06		 mov	 eax, DWORD PTR [esi]
  034df	6a 0d		 push	 13			; 0000000dH
  034e1	50		 push	 eax
  034e2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  034e7	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  034ec	e9 79 2a 00 00	 jmp	 $LN899@Management
$LN417@Management:

  034f1	8b 0e		 mov	 ecx, DWORD PTR [esi]
  034f3	6a 0e		 push	 14			; 0000000eH
  034f5	51		 push	 ecx
  034f6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  034fb	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  03500	e9 65 2a 00 00	 jmp	 $LN899@Management
$LN416@Management:

  03505	8b 16		 mov	 edx, DWORD PTR [esi]
  03507	6a 0f		 push	 15			; 0000000fH
  03509	52		 push	 edx
  0350a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0350f	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  03514	e9 51 2a 00 00	 jmp	 $LN899@Management
$LN415@Management:

  03519	8b 06		 mov	 eax, DWORD PTR [esi]
  0351b	6a 10		 push	 16			; 00000010H
  0351d	50		 push	 eax
  0351e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  03523	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  03528	e9 3d 2a 00 00	 jmp	 $LN899@Management
$LN414@Management:

  0352d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0352f	6a 11		 push	 17			; 00000011H
  03531	51		 push	 ecx
  03532	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  03537	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  0353c	e9 29 2a 00 00	 jmp	 $LN899@Management
$LN413@Management:

  03541	8b 16		 mov	 edx, DWORD PTR [esi]
  03543	6a 12		 push	 18			; 00000012H
  03545	52		 push	 edx
  03546	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0354b	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  03550	e9 15 2a 00 00	 jmp	 $LN899@Management
$LN412@Management:

  03555	8b 06		 mov	 eax, DWORD PTR [esi]
  03557	6a 13		 push	 19			; 00000013H
  03559	50		 push	 eax
  0355a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0355f	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  03564	e9 01 2a 00 00	 jmp	 $LN899@Management
$LN411@Management:

  03569	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0356b	6a 14		 push	 20			; 00000014H
  0356d	51		 push	 ecx
  0356e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  03573	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  03578	e9 ed 29 00 00	 jmp	 $LN899@Management
$LN410@Management:

  0357d	8b 16		 mov	 edx, DWORD PTR [esi]
  0357f	6a 15		 push	 21			; 00000015H
  03581	52		 push	 edx
  03582	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  03587	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  0358c	e9 d9 29 00 00	 jmp	 $LN899@Management
$LN409@Management:

  03591	8b 06		 mov	 eax, DWORD PTR [esi]
  03593	6a 16		 push	 22			; 00000016H
  03595	50		 push	 eax
  03596	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0359b	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  035a0	e9 c5 29 00 00	 jmp	 $LN899@Management
$LN408@Management:

  035a5	8b 0e		 mov	 ecx, DWORD PTR [esi]
  035a7	6a 17		 push	 23			; 00000017H
  035a9	51		 push	 ecx
  035aa	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  035af	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  035b4	e9 b1 29 00 00	 jmp	 $LN899@Management
$LN407@Management:

  035b9	8b 16		 mov	 edx, DWORD PTR [esi]
  035bb	6a 18		 push	 24			; 00000018H
  035bd	52		 push	 edx
  035be	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  035c3	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  035c8	e9 9d 29 00 00	 jmp	 $LN899@Management
$LN406@Management:

  035cd	8b 06		 mov	 eax, DWORD PTR [esi]
  035cf	6a 19		 push	 25			; 00000019H
  035d1	50		 push	 eax
  035d2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  035d7	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  035dc	e9 89 29 00 00	 jmp	 $LN899@Management
$LN405@Management:

  035e1	8b 0e		 mov	 ecx, DWORD PTR [esi]
  035e3	6a 1a		 push	 26			; 0000001aH
  035e5	51		 push	 ecx
  035e6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  035eb	e8 00 00 00 00	 call	 ?OperateGmCommand@CRaklion@@QAEXHH@Z ; CRaklion::OperateGmCommand

  035f0	e9 75 29 00 00	 jmp	 $LN899@Management
$LN404@Management:

  035f5	8b cf		 mov	 ecx, edi
  035f7	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  035fc	50		 push	 eax
  035fd	56		 push	 esi
  035fe	8b cf		 mov	 ecx, edi
  03600	e8 00 00 00 00	 call	 ?CmdAbility@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ; CGMMng::CmdAbility

  03605	e9 60 29 00 00	 jmp	 $LN899@Management
$LN403@Management:

  0360a	8b cf		 mov	 ecx, edi
  0360c	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  03611	50		 push	 eax
  03612	56		 push	 esi
  03613	8b cf		 mov	 ecx, edi
  03615	e8 00 00 00 00	 call	 ?CmdParty@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ; CGMMng::CmdParty

  0361a	e9 4b 29 00 00	 jmp	 $LN899@Management
$LN402@Management:

  0361f	8b cf		 mov	 ecx, edi
  03621	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03626	8b cf		 mov	 ecx, edi
  03628	8b d8		 mov	 ebx, eax
  0362a	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0362f	50		 push	 eax
  03630	53		 push	 ebx
  03631	56		 push	 esi
  03632	8b cf		 mov	 ecx, edi
  03634	e8 00 00 00 00	 call	 ?CmdSummonMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@PADH@Z ; CGMMng::CmdSummonMonster

  03639	e9 2c 29 00 00	 jmp	 $LN899@Management
$LN401@Management:

  0363e	8b cf		 mov	 ecx, edi
  03640	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  03645	50		 push	 eax
  03646	56		 push	 esi
  03647	8b cf		 mov	 ecx, edi
  03649	e8 00 00 00 00	 call	 ?CmdClearMonster@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::CmdClearMonster

  0364e	e9 17 29 00 00	 jmp	 $LN899@Management
$LN400@Management:

  03653	8b cf		 mov	 ecx, edi
  03655	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  0365a	50		 push	 eax
  0365b	56		 push	 esi
  0365c	8b cf		 mov	 ecx, edi
  0365e	e8 00 00 00 00	 call	 ?CmdClearItem@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::CmdClearItem

  03663	e9 02 29 00 00	 jmp	 $LN899@Management
$LN399@Management:

  03668	56		 push	 esi
  03669	8b cf		 mov	 ecx, edi
  0366b	e8 00 00 00 00	 call	 ?CmdClearInven@CGMMng@@QAEXPAUOBJECTSTRUCT@@@Z ; CGMMng::CmdClearInven

  03670	e9 f5 28 00 00	 jmp	 $LN899@Management
$LN398@Management:

  03675	8b cf		 mov	 ecx, edi
  03677	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  0367c	50		 push	 eax
  0367d	56		 push	 esi
  0367e	8b cf		 mov	 ecx, edi
  03680	e8 00 00 00 00	 call	 ?CmdSummonChar@CGMMng@@QAEXPAUOBJECTSTRUCT@@PAD@Z ; CGMMng::CmdSummonChar

  03685	e9 e0 28 00 00	 jmp	 $LN899@Management
$LN395@Management:

  0368a	8b 86 0c 02 00
	00		 mov	 eax, DWORD PTR [esi+524]
  03690	83 f8 08	 cmp	 eax, 8
  03693	74 09		 je	 SHORT $LN393@Management
  03695	83 f8 20	 cmp	 eax, 32			; 00000020H
  03698	0f 85 cc 28 00
	00		 jne	 $LN899@Management
$LN393@Management:

  0369e	6a 03		 push	 3
  036a0	53		 push	 ebx
  036a1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  036a6	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  036ab	84 c0		 test	 al, al

  036ad	0f 84 b7 28 00
	00		 je	 $LN899@Management

  036b3	8b cf		 mov	 ecx, edi
  036b5	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  036ba	8b d8		 mov	 ebx, eax

  036bc	85 db		 test	 ebx, ebx

  036be	0f 84 a6 28 00
	00		 je	 $LN899@Management

  036c4	8b cf		 mov	 ecx, edi
  036c6	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  036cb	8b cf		 mov	 ecx, edi
  036cd	89 85 4c fd ff
	ff		 mov	 DWORD PTR _iTokenNumber1$225060[ebp], eax
  036d3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  036d8	8b cf		 mov	 ecx, edi
  036da	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iTokenNumber2$225061[ebp], eax
  036e0	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  036e5	53		 push	 ebx
  036e6	89 45 f8	 mov	 DWORD PTR _iTokenNumber3$225062[ebp], eax
  036e9	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  036ee	8b f8		 mov	 edi, eax
  036f0	83 c4 04	 add	 esp, 4

  036f3	85 ff		 test	 edi, edi
  036f5	0f 88 6f 28 00
	00		 js	 $LN899@Management

  036fb	53		 push	 ebx
  036fc	e8 00 00 00 00	 call	 ?gObjFind@@YAPAUOBJECTSTRUCT@@PAD@Z ; gObjFind
  03701	83 c4 04	 add	 esp, 4

  03704	85 c0		 test	 eax, eax

  03706	0f 84 5e 28 00
	00		 je	 $LN899@Management

  0370c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FJGOBKEK@User?5SetPosition?$AA@
  03711	8d 50 77	 lea	 edx, DWORD PTR [eax+119]
  03714	52		 push	 edx
  03715	83 c0 6c	 add	 eax, 108		; 0000006cH
  03718	50		 push	 eax
  03719	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  0371c	50		 push	 eax
  0371d	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  03720	51		 push	 ecx
  03721	83 c6 18	 add	 esi, 24			; 00000018H
  03724	56		 push	 esi
  03725	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@DPOHDNID@Use?5GM?5Command?5?9?$DO?5?$FL?5?$CFs?5?$FN?7?$FL?5?$CFs?5?$FN?7@
  0372a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

  03730	8b 55 f8	 mov	 edx, DWORD PTR _iTokenNumber3$225062[ebp]
  03733	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _iTokenNumber2$225061[ebp]
  03739	8b 8d 4c fd ff
	ff		 mov	 ecx, DWORD PTR _iTokenNumber1$225060[ebp]
  0373f	52		 push	 edx
  03740	50		 push	 eax
  03741	51		 push	 ecx
  03742	57		 push	 edi
  03743	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  03748	83 c4 2c	 add	 esp, 44			; 0000002cH

  0374b	e9 1a 28 00 00	 jmp	 $LN899@Management
$LN387@Management:

  03750	83 3d 0c 01 00
	00 00		 cmp	 DWORD PTR ?ZtConfig@@3VcZtConfigs@@A+268, 0
  03757	0f 84 0d 28 00
	00		 je	 $LN899@Management

  0375d	8b cf		 mov	 ecx, edi
  0375f	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03764	85 c0		 test	 eax, eax
  03766	0f 84 fe 27 00
	00		 je	 $LN899@Management

  0376c	50		 push	 eax
  0376d	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex

  03772	8b 16		 mov	 edx, DWORD PTR [esi]
  03774	83 c4 04	 add	 esp, 4
  03777	50		 push	 eax
  03778	52		 push	 edx
  03779	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0377e	e8 00 00 00 00	 call	 ?SetLeader@PartyClass@@QAE_NHH@Z ; PartyClass::SetLeader

  03783	e9 e2 27 00 00	 jmp	 $LN899@Management
$LN383@Management:

  03788	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  0378e	83 fe 08	 cmp	 esi, 8
  03791	74 09		 je	 SHORT $LN381@Management
  03793	83 fe 20	 cmp	 esi, 32			; 00000020H
  03796	0f 85 ce 27 00
	00		 jne	 $LN899@Management
$LN381@Management:

  0379c	6a 06		 push	 6
  0379e	53		 push	 ebx
  0379f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  037a4	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  037a9	84 c0		 test	 al, al

  037ab	0f 84 b9 27 00
	00		 je	 $LN899@Management

  037b1	8b cf		 mov	 ecx, edi
  037b3	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  037b8	8b cf		 mov	 ecx, edi
  037ba	8b f0		 mov	 esi, eax
  037bc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  037c1	8b f8		 mov	 edi, eax

  037c3	85 f6		 test	 esi, esi
  037c5	0f 84 9f 27 00
	00		 je	 $LN899@Management

  037cb	56		 push	 esi
  037cc	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  037d1	83 c4 04	 add	 esp, 4
  037d4	89 45 f8	 mov	 DWORD PTR _TargetIndex$225082[ebp], eax

  037d7	83 f8 ff	 cmp	 eax, -1
  037da	0f 84 8a 27 00
	00		 je	 $LN899@Management

  037e0	8b f0		 mov	 esi, eax
  037e2	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  037e8	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  037ee	6a 00		 push	 0
  037f0	e8 00 00 00 00	 call	 __time64
  037f5	8b cf		 mov	 ecx, edi
  037f7	69 c9 10 0e 00
	00		 imul	 ecx, 3600		; 00000e10H
  037fd	03 c1		 add	 eax, ecx
  037ff	89 86 b4 27 00
	00		 mov	 DWORD PTR [esi+10164], eax

  03805	57		 push	 edi
  03806	83 c6 77	 add	 esi, 119		; 00000077H
  03809	56		 push	 esi
  0380a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JPIAIBJF@?$FLBanChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
  0380f	53		 push	 ebx
  03810	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  03815	8b 55 f8	 mov	 edx, DWORD PTR _TargetIndex$225082[ebp]
  03818	57		 push	 edi
  03819	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NAIEPLMG@?$FLBanChat?$FN?3?5?$CFd?5Hour?$AA@
  0381e	52		 push	 edx
  0381f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  03824	83 c4 20	 add	 esp, 32			; 00000020H

  03827	e9 3e 27 00 00	 jmp	 $LN899@Management
$LN377@Management:

  0382c	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  03832	83 fe 08	 cmp	 esi, 8
  03835	74 09		 je	 SHORT $LN375@Management
  03837	83 fe 20	 cmp	 esi, 32			; 00000020H
  0383a	0f 85 2a 27 00
	00		 jne	 $LN899@Management
$LN375@Management:

  03840	6a 06		 push	 6
  03842	53		 push	 ebx
  03843	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  03848	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  0384d	84 c0		 test	 al, al

  0384f	0f 84 15 27 00
	00		 je	 $LN899@Management

  03855	8b cf		 mov	 ecx, edi
  03857	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0385c	8b cf		 mov	 ecx, edi
  0385e	8b f0		 mov	 esi, eax
  03860	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  03865	8b f8		 mov	 edi, eax

  03867	85 f6		 test	 esi, esi
  03869	0f 84 fb 26 00
	00		 je	 $LN899@Management

  0386f	56		 push	 esi
  03870	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  03875	83 c4 04	 add	 esp, 4
  03878	89 45 f8	 mov	 DWORD PTR _TargetIndex$225094[ebp], eax

  0387b	83 f8 ff	 cmp	 eax, -1
  0387e	0f 84 e6 26 00
	00		 je	 $LN899@Management

  03884	8b f0		 mov	 esi, eax
  03886	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0388c	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  03892	6a 00		 push	 0
  03894	e8 00 00 00 00	 call	 __time64
  03899	8b cf		 mov	 ecx, edi
  0389b	69 c9 10 0e 00
	00		 imul	 ecx, 3600		; 00000e10H
  038a1	03 c1		 add	 eax, ecx
  038a3	89 86 b8 27 00
	00		 mov	 DWORD PTR [esi+10168], eax

  038a9	57		 push	 edi
  038aa	83 c6 77	 add	 esi, 119		; 00000077H
  038ad	56		 push	 esi
  038ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@BKLAGHFJ@?$FLBanPost?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
  038b3	53		 push	 ebx
  038b4	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  038b9	8b 55 f8	 mov	 edx, DWORD PTR _TargetIndex$225094[ebp]
  038bc	57		 push	 edi
  038bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DEANLHKB@?$FLBanPost?$FN?3?5?$CFd?5Hour?$AA@
  038c2	52		 push	 edx
  038c3	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  038c8	83 c4 20	 add	 esp, 32			; 00000020H

  038cb	e9 9a 26 00 00	 jmp	 $LN899@Management
$LN371@Management:

  038d0	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  038d6	83 fe 08	 cmp	 esi, 8
  038d9	74 09		 je	 SHORT $LN369@Management
  038db	83 fe 20	 cmp	 esi, 32			; 00000020H
  038de	0f 85 86 26 00
	00		 jne	 $LN899@Management
$LN369@Management:

  038e4	6a 04		 push	 4
  038e6	53		 push	 ebx
  038e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  038ec	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  038f1	84 c0		 test	 al, al

  038f3	0f 84 71 26 00
	00		 je	 $LN899@Management

  038f9	8b cf		 mov	 ecx, edi
  038fb	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03900	8b cf		 mov	 ecx, edi
  03902	8b f0		 mov	 esi, eax
  03904	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  03909	89 45 f8	 mov	 DWORD PTR _iTokenNumber1$225104[ebp], eax

  0390c	85 f6		 test	 esi, esi
  0390e	0f 84 56 26 00
	00		 je	 $LN899@Management

  03914	56		 push	 esi
  03915	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  0391a	8b f8		 mov	 edi, eax
  0391c	83 c4 04	 add	 esp, 4

  0391f	83 ff ff	 cmp	 edi, -1
  03922	0f 84 42 26 00
	00		 je	 $LN899@Management

  03928	8b f7		 mov	 esi, edi
  0392a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  03930	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  03936	6a 00		 push	 0
  03938	e8 00 00 00 00	 call	 __time64
  0393d	8b c8		 mov	 ecx, eax
  0393f	8b 45 f8	 mov	 eax, DWORD PTR _iTokenNumber1$225104[ebp]
  03942	8b d0		 mov	 edx, eax
  03944	69 d2 10 0e 00
	00		 imul	 edx, 3600		; 00000e10H
  0394a	03 ca		 add	 ecx, edx

  0394c	50		 push	 eax
  0394d	89 8e bc 27 00
	00		 mov	 DWORD PTR [esi+10172], ecx
  03953	83 c6 77	 add	 esi, 119		; 00000077H
  03956	56		 push	 esi
  03957	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LNHKFFGH@?$FLBanChar?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
  0395c	53		 push	 ebx
  0395d	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  03962	8b 45 f8	 mov	 eax, DWORD PTR _iTokenNumber1$225104[ebp]
  03965	50		 push	 eax
  03966	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DPLJFOCG@?$FLBanChar?$FN?3?5?$CFd?5Hour?$AA@
  0396b	57		 push	 edi
  0396c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  03971	83 c4 20	 add	 esp, 32			; 00000020H

  03974	6a 00		 push	 0
  03976	57		 push	 edi
  03977	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectZt@@3VConnectZt@@A ; g_ConnectZt
  0397c	e8 00 00 00 00	 call	 ?SendClose@ConnectZt@@QAEXHH@Z ; ConnectZt::SendClose

  03981	e9 e4 25 00 00	 jmp	 $LN899@Management
$LN365@Management:

  03986	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  0398c	83 fe 08	 cmp	 esi, 8
  0398f	74 09		 je	 SHORT $LN363@Management
  03991	83 fe 20	 cmp	 esi, 32			; 00000020H
  03994	0f 85 d0 25 00
	00		 jne	 $LN899@Management
$LN363@Management:

  0399a	6a 06		 push	 6
  0399c	53		 push	 ebx
  0399d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  039a2	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  039a7	84 c0		 test	 al, al

  039a9	0f 84 bb 25 00
	00		 je	 $LN899@Management

  039af	8b cf		 mov	 ecx, edi
  039b1	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  039b6	8b cf		 mov	 ecx, edi
  039b8	8b f0		 mov	 esi, eax
  039ba	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  039bf	89 45 f8	 mov	 DWORD PTR _iTokenNumber1$225116[ebp], eax

  039c2	85 f6		 test	 esi, esi
  039c4	0f 84 a0 25 00
	00		 je	 $LN899@Management

  039ca	56		 push	 esi
  039cb	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  039d0	83 c4 04	 add	 esp, 4
  039d3	89 85 58 fd ff
	ff		 mov	 DWORD PTR _TargetIndex$225118[ebp], eax

  039d9	83 f8 ff	 cmp	 eax, -1
  039dc	0f 84 88 25 00
	00		 je	 $LN899@Management

  039e2	8b 7d f8	 mov	 edi, DWORD PTR _iTokenNumber1$225116[ebp]
  039e5	8b f0		 mov	 esi, eax
  039e7	69 ff 10 0e 00
	00		 imul	 edi, 3600		; 00000e10H
  039ed	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  039f3	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  039f9	6a 00		 push	 0
  039fb	e8 00 00 00 00	 call	 __time64
  03a00	03 c7		 add	 eax, edi

  03a02	6a 00		 push	 0
  03a04	89 86 b4 27 00
	00		 mov	 DWORD PTR [esi+10164], eax
  03a0a	e8 00 00 00 00	 call	 __time64
  03a0f	03 c7		 add	 eax, edi

  03a11	8b 7d f8	 mov	 edi, DWORD PTR _iTokenNumber1$225116[ebp]
  03a14	89 86 b8 27 00
	00		 mov	 DWORD PTR [esi+10168], eax
  03a1a	57		 push	 edi
  03a1b	83 c6 77	 add	 esi, 119		; 00000077H
  03a1e	56		 push	 esi
  03a1f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JEBLMDLC@?$FLBanAllChat?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
  03a24	53		 push	 ebx
  03a25	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  03a2a	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _TargetIndex$225118[ebp]
  03a30	57		 push	 edi
  03a31	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GPLFHNOP@?$FLBanAllChat?$FN?3?5?$CFd?5Hour?$AA@
  03a36	51		 push	 ecx
  03a37	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  03a3c	83 c4 24	 add	 esp, 36			; 00000024H

  03a3f	e9 26 25 00 00	 jmp	 $LN899@Management
$LN359@Management:

  03a44	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  03a4a	83 fe 08	 cmp	 esi, 8
  03a4d	74 09		 je	 SHORT $LN357@Management
  03a4f	83 fe 20	 cmp	 esi, 32			; 00000020H
  03a52	0f 85 12 25 00
	00		 jne	 $LN899@Management
$LN357@Management:

  03a58	6a 06		 push	 6
  03a5a	53		 push	 ebx
  03a5b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  03a60	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  03a65	84 c0		 test	 al, al

  03a67	0f 84 fd 24 00
	00		 je	 $LN899@Management

  03a6d	8b cf		 mov	 ecx, edi
  03a6f	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03a74	85 c0		 test	 eax, eax
  03a76	0f 84 ee 24 00
	00		 je	 $LN899@Management

  03a7c	50		 push	 eax
  03a7d	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  03a82	8b f0		 mov	 esi, eax
  03a84	83 c4 04	 add	 esp, 4

  03a87	83 fe ff	 cmp	 esi, -1
  03a8a	0f 84 da 24 00
	00		 je	 $LN899@Management

  03a90	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  03a96	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  03a9c	c7 80 b4 27 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10164], 0

  03aa6	83 c0 77	 add	 eax, 119		; 00000077H
  03aa9	50		 push	 eax
  03aaa	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EAGNBPNG@?$FLUnBanChat?$FN?3?5?$CFs?$AA@
  03aaf	53		 push	 ebx
  03ab0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  03ab5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MHFBAJJG@?$FLUnBanChat?$FN?$AA@
  03aba	56		 push	 esi
  03abb	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  03ac0	83 c4 14	 add	 esp, 20			; 00000014H
  03ac3	e9 a2 24 00 00	 jmp	 $LN899@Management
$LN353@Management:

  03ac8	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  03ace	83 fe 08	 cmp	 esi, 8
  03ad1	74 09		 je	 SHORT $LN351@Management
  03ad3	83 fe 20	 cmp	 esi, 32			; 00000020H
  03ad6	0f 85 8e 24 00
	00		 jne	 $LN899@Management
$LN351@Management:

  03adc	6a 06		 push	 6
  03ade	53		 push	 ebx
  03adf	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  03ae4	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  03ae9	84 c0		 test	 al, al

  03aeb	0f 84 79 24 00
	00		 je	 $LN899@Management

  03af1	8b cf		 mov	 ecx, edi
  03af3	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03af8	85 c0		 test	 eax, eax
  03afa	0f 84 6a 24 00
	00		 je	 $LN899@Management

  03b00	50		 push	 eax
  03b01	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  03b06	8b f0		 mov	 esi, eax
  03b08	83 c4 04	 add	 esp, 4

  03b0b	83 fe ff	 cmp	 esi, -1
  03b0e	0f 84 56 24 00
	00		 je	 $LN899@Management

  03b14	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  03b1a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  03b20	c7 80 b8 27 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10168], 0

  03b2a	83 c0 77	 add	 eax, 119		; 00000077H
  03b2d	50		 push	 eax
  03b2e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NGALHOKC@?$FLUnBanPost?$FN?3?5?$CFs?$AA@
  03b33	53		 push	 ebx
  03b34	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  03b39	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KCDDKKH@?$FLUnBanPost?$FN?$AA@
  03b3e	56		 push	 esi
  03b3f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  03b44	83 c4 14	 add	 esp, 20			; 00000014H
  03b47	e9 1e 24 00 00	 jmp	 $LN899@Management
$LN347@Management:

  03b4c	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  03b52	83 fe 08	 cmp	 esi, 8
  03b55	74 09		 je	 SHORT $LN345@Management
  03b57	83 fe 20	 cmp	 esi, 32			; 00000020H
  03b5a	0f 85 0a 24 00
	00		 jne	 $LN899@Management
$LN345@Management:

  03b60	6a 06		 push	 6
  03b62	53		 push	 ebx
  03b63	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  03b68	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  03b6d	84 c0		 test	 al, al

  03b6f	0f 84 f5 23 00
	00		 je	 $LN899@Management

  03b75	8b cf		 mov	 ecx, edi
  03b77	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03b7c	33 ff		 xor	 edi, edi
  03b7e	3b c7		 cmp	 eax, edi
  03b80	0f 84 e4 23 00
	00		 je	 $LN899@Management

  03b86	50		 push	 eax
  03b87	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  03b8c	8b f0		 mov	 esi, eax
  03b8e	83 c4 04	 add	 esp, 4

  03b91	83 fe ff	 cmp	 esi, -1
  03b94	0f 84 d0 23 00
	00		 je	 $LN899@Management

  03b9a	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  03ba0	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  03ba6	89 b8 b4 27 00
	00		 mov	 DWORD PTR [eax+10164], edi

  03bac	89 b8 b8 27 00
	00		 mov	 DWORD PTR [eax+10168], edi

  03bb2	83 c0 77	 add	 eax, 119		; 00000077H
  03bb5	50		 push	 eax
  03bb6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MGPIBDPG@?$FLUnBanAllChat?$FN?3?5?$CFs?$AA@
  03bbb	53		 push	 ebx
  03bbc	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  03bc1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FAJCCKAC@?$FLUnBanAllChat?$FN?$AA@
  03bc6	56		 push	 esi
  03bc7	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  03bcc	83 c4 14	 add	 esp, 20			; 00000014H
  03bcf	e9 96 23 00 00	 jmp	 $LN899@Management
$LN341@Management:

  03bd4	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  03bda	83 fe 08	 cmp	 esi, 8
  03bdd	74 09		 je	 SHORT $LN339@Management
  03bdf	83 fe 20	 cmp	 esi, 32			; 00000020H
  03be2	0f 85 82 23 00
	00		 jne	 $LN899@Management
$LN339@Management:

  03be8	6a 04		 push	 4
  03bea	53		 push	 ebx
  03beb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  03bf0	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  03bf5	84 c0		 test	 al, al

  03bf7	0f 84 6d 23 00
	00		 je	 $LN899@Management

  03bfd	8b cf		 mov	 ecx, edi
  03bff	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03c04	85 c0		 test	 eax, eax
  03c06	0f 84 5e 23 00
	00		 je	 $LN899@Management

  03c0c	c7 85 78 fe ff
	ff c1 18 e2 00	 mov	 DWORD PTR _pMsg$225162[ebp], 14817473 ; 00e218c1H

  03c16	66 c7 85 7c fe
	ff ff 01 03	 mov	 WORD PTR _pMsg$225162[ebp+4], 769 ; 00000301H

  03c1f	89 9d 80 fe ff
	ff		 mov	 DWORD PTR _pMsg$225162[ebp+8], ebx

  03c25	8b 10		 mov	 edx, DWORD PTR [eax]
  03c27	89 95 84 fe ff
	ff		 mov	 DWORD PTR _pMsg$225162[ebp+12], edx
  03c2d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  03c30	89 8d 88 fe ff
	ff		 mov	 DWORD PTR _pMsg$225162[ebp+16], ecx
  03c36	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

  03c3a	6a 18		 push	 24			; 00000018H
  03c3c	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$225162[ebp]
  03c42	66 89 95 8c fe
	ff ff		 mov	 WORD PTR _pMsg$225162[ebp+20], dx
  03c49	8a 40 0a	 mov	 al, BYTE PTR [eax+10]
  03c4c	51		 push	 ecx
  03c4d	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  03c52	88 85 8e fe ff
	ff		 mov	 BYTE PTR _pMsg$225162[ebp+22], al
  03c58	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

  03c5d	e9 08 23 00 00	 jmp	 $LN899@Management
$LN336@Management:

  03c62	6a 00		 push	 0
  03c64	53		 push	 ebx
  03c65	b9 00 00 00 00	 mov	 ecx, OFFSET ?OffExp@@3VcOffExp@@A ; OffExp
  03c6a	e8 00 00 00 00	 call	 ?OffExpStart@cOffExp@@QAEXHH@Z ; cOffExp::OffExpStart

  03c6f	e9 f6 22 00 00	 jmp	 $LN899@Management
$LN335@Management:

  03c74	8b 16		 mov	 edx, DWORD PTR [esi]
  03c76	52		 push	 edx
  03c77	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03c7c	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03c81	84 c0		 test	 al, al

  03c83	0f 84 e1 22 00
	00		 je	 $LN899@Management

  03c89	6a 51		 push	 81			; 00000051H
  03c8b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03c90	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03c95	84 c0		 test	 al, al

  03c97	0f 85 cd 22 00
	00		 jne	 $LN899@Management

  03c9d	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03ca4	0f 87 c0 22 00
	00		 ja	 $LN899@Management

  03caa	8b cf		 mov	 ecx, edi
  03cac	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03cb1	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03cb4	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03cba	0f 87 aa 22 00
	00		 ja	 $LN899@Management

  03cc0	50		 push	 eax
  03cc1	53		 push	 ebx
  03cc2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03cc7	e8 00 00 00 00	 call	 ?sendchaosbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendchaosbank
  03ccc	5f		 pop	 edi
  03ccd	5e		 pop	 esi

  03cce	b8 01 00 00 00	 mov	 eax, 1
  03cd3	5b		 pop	 ebx

  03cd4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03cd7	33 cd		 xor	 ecx, ebp
  03cd9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03cde	8b e5		 mov	 esp, ebp
  03ce0	5d		 pop	 ebp
  03ce1	c2 0c 00	 ret	 12			; 0000000cH
$LN329@Management:

  03ce4	8b 16		 mov	 edx, DWORD PTR [esi]
  03ce6	52		 push	 edx
  03ce7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03cec	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03cf1	84 c0		 test	 al, al

  03cf3	0f 84 71 22 00
	00		 je	 $LN899@Management

  03cf9	6a 51		 push	 81			; 00000051H
  03cfb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03d00	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03d05	84 c0		 test	 al, al

  03d07	0f 85 5d 22 00
	00		 jne	 $LN899@Management

  03d0d	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03d14	0f 87 50 22 00
	00		 ja	 $LN899@Management

  03d1a	8b cf		 mov	 ecx, edi
  03d1c	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03d21	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03d24	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03d2a	0f 87 3a 22 00
	00		 ja	 $LN899@Management

  03d30	50		 push	 eax
  03d31	53		 push	 ebx
  03d32	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03d37	e8 00 00 00 00	 call	 ?sendblessbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendblessbank
  03d3c	5f		 pop	 edi
  03d3d	5e		 pop	 esi

  03d3e	b8 01 00 00 00	 mov	 eax, 1
  03d43	5b		 pop	 ebx

  03d44	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03d47	33 cd		 xor	 ecx, ebp
  03d49	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03d4e	8b e5		 mov	 esp, ebp
  03d50	5d		 pop	 ebp
  03d51	c2 0c 00	 ret	 12			; 0000000cH
$LN323@Management:

  03d54	8b 16		 mov	 edx, DWORD PTR [esi]
  03d56	52		 push	 edx
  03d57	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03d5c	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03d61	84 c0		 test	 al, al

  03d63	0f 84 01 22 00
	00		 je	 $LN899@Management

  03d69	6a 51		 push	 81			; 00000051H
  03d6b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03d70	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03d75	84 c0		 test	 al, al

  03d77	0f 85 ed 21 00
	00		 jne	 $LN899@Management

  03d7d	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03d84	0f 87 e0 21 00
	00		 ja	 $LN899@Management

  03d8a	8b cf		 mov	 ecx, edi
  03d8c	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03d91	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03d94	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03d9a	0f 87 ca 21 00
	00		 ja	 $LN899@Management

  03da0	50		 push	 eax
  03da1	53		 push	 ebx
  03da2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03da7	e8 00 00 00 00	 call	 ?sendsoulbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendsoulbank
  03dac	5f		 pop	 edi
  03dad	5e		 pop	 esi

  03dae	b8 01 00 00 00	 mov	 eax, 1
  03db3	5b		 pop	 ebx

  03db4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03db7	33 cd		 xor	 ecx, ebp
  03db9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03dbe	8b e5		 mov	 esp, ebp
  03dc0	5d		 pop	 ebp
  03dc1	c2 0c 00	 ret	 12			; 0000000cH
$LN317@Management:

  03dc4	8b 16		 mov	 edx, DWORD PTR [esi]
  03dc6	52		 push	 edx
  03dc7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03dcc	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03dd1	84 c0		 test	 al, al

  03dd3	0f 84 91 21 00
	00		 je	 $LN899@Management

  03dd9	6a 51		 push	 81			; 00000051H
  03ddb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03de0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03de5	84 c0		 test	 al, al

  03de7	0f 85 7d 21 00
	00		 jne	 $LN899@Management

  03ded	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03df4	0f 87 70 21 00
	00		 ja	 $LN899@Management

  03dfa	8b cf		 mov	 ecx, edi
  03dfc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03e01	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03e04	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03e0a	0f 87 5a 21 00
	00		 ja	 $LN899@Management

  03e10	50		 push	 eax
  03e11	53		 push	 ebx
  03e12	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03e17	e8 00 00 00 00	 call	 ?sendlifebank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendlifebank
  03e1c	5f		 pop	 edi
  03e1d	5e		 pop	 esi

  03e1e	b8 01 00 00 00	 mov	 eax, 1
  03e23	5b		 pop	 ebx

  03e24	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03e27	33 cd		 xor	 ecx, ebp
  03e29	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03e2e	8b e5		 mov	 esp, ebp
  03e30	5d		 pop	 ebp
  03e31	c2 0c 00	 ret	 12			; 0000000cH
$LN311@Management:

  03e34	8b 16		 mov	 edx, DWORD PTR [esi]
  03e36	52		 push	 edx
  03e37	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03e3c	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03e41	84 c0		 test	 al, al

  03e43	0f 84 21 21 00
	00		 je	 $LN899@Management

  03e49	6a 51		 push	 81			; 00000051H
  03e4b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03e50	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03e55	84 c0		 test	 al, al

  03e57	0f 85 0d 21 00
	00		 jne	 $LN899@Management

  03e5d	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03e64	0f 87 00 21 00
	00		 ja	 $LN899@Management

  03e6a	8b cf		 mov	 ecx, edi
  03e6c	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03e71	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03e74	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03e7a	0f 87 ea 20 00
	00		 ja	 $LN899@Management

  03e80	50		 push	 eax
  03e81	53		 push	 ebx
  03e82	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03e87	e8 00 00 00 00	 call	 ?recvchaosbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvchaosbank
  03e8c	5f		 pop	 edi
  03e8d	5e		 pop	 esi

  03e8e	b8 01 00 00 00	 mov	 eax, 1
  03e93	5b		 pop	 ebx

  03e94	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03e97	33 cd		 xor	 ecx, ebp
  03e99	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03e9e	8b e5		 mov	 esp, ebp
  03ea0	5d		 pop	 ebp
  03ea1	c2 0c 00	 ret	 12			; 0000000cH
$LN305@Management:

  03ea4	8b 16		 mov	 edx, DWORD PTR [esi]
  03ea6	52		 push	 edx
  03ea7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03eac	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03eb1	84 c0		 test	 al, al

  03eb3	0f 84 b1 20 00
	00		 je	 $LN899@Management

  03eb9	6a 51		 push	 81			; 00000051H
  03ebb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03ec0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03ec5	84 c0		 test	 al, al

  03ec7	0f 85 9d 20 00
	00		 jne	 $LN899@Management

  03ecd	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03ed4	0f 87 90 20 00
	00		 ja	 $LN899@Management

  03eda	8b cf		 mov	 ecx, edi
  03edc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03ee1	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03ee4	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03eea	0f 87 7a 20 00
	00		 ja	 $LN899@Management

  03ef0	50		 push	 eax
  03ef1	53		 push	 ebx
  03ef2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03ef7	e8 00 00 00 00	 call	 ?recvblessbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvblessbank
  03efc	5f		 pop	 edi
  03efd	5e		 pop	 esi

  03efe	b8 01 00 00 00	 mov	 eax, 1
  03f03	5b		 pop	 ebx

  03f04	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03f07	33 cd		 xor	 ecx, ebp
  03f09	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03f0e	8b e5		 mov	 esp, ebp
  03f10	5d		 pop	 ebp
  03f11	c2 0c 00	 ret	 12			; 0000000cH
$LN299@Management:

  03f14	8b 16		 mov	 edx, DWORD PTR [esi]
  03f16	52		 push	 edx
  03f17	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03f1c	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03f21	84 c0		 test	 al, al

  03f23	0f 84 41 20 00
	00		 je	 $LN899@Management

  03f29	6a 51		 push	 81			; 00000051H
  03f2b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03f30	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03f35	84 c0		 test	 al, al

  03f37	0f 85 2d 20 00
	00		 jne	 $LN899@Management

  03f3d	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03f44	0f 87 20 20 00
	00		 ja	 $LN899@Management

  03f4a	8b cf		 mov	 ecx, edi
  03f4c	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03f51	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03f54	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03f5a	0f 87 0a 20 00
	00		 ja	 $LN899@Management

  03f60	50		 push	 eax
  03f61	53		 push	 ebx
  03f62	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03f67	e8 00 00 00 00	 call	 ?recvsoulbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvsoulbank
  03f6c	5f		 pop	 edi
  03f6d	5e		 pop	 esi

  03f6e	b8 01 00 00 00	 mov	 eax, 1
  03f73	5b		 pop	 ebx

  03f74	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03f77	33 cd		 xor	 ecx, ebp
  03f79	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03f7e	8b e5		 mov	 esp, ebp
  03f80	5d		 pop	 ebp
  03f81	c2 0c 00	 ret	 12			; 0000000cH
$LN293@Management:

  03f84	8b 16		 mov	 edx, DWORD PTR [esi]
  03f86	52		 push	 edx
  03f87	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  03f8c	e8 00 00 00 00	 call	 ?CheckInventory@CAccountSecurity@@QAE_NH@Z ; CAccountSecurity::CheckInventory
  03f91	84 c0		 test	 al, al

  03f93	0f 84 d1 1f 00
	00		 je	 $LN899@Management

  03f99	6a 51		 push	 81			; 00000051H
  03f9b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  03fa0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  03fa5	84 c0		 test	 al, al

  03fa7	0f 85 bd 1f 00
	00		 jne	 $LN899@Management

  03fad	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  03fb4	0f 87 b0 1f 00
	00		 ja	 $LN899@Management

  03fba	8b cf		 mov	 ecx, edi
  03fbc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  03fc1	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  03fc4	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  03fca	0f 87 9a 1f 00
	00		 ja	 $LN899@Management

  03fd0	50		 push	 eax
  03fd1	53		 push	 ebx
  03fd2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  03fd7	e8 00 00 00 00	 call	 ?recvlifebank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvlifebank
  03fdc	5f		 pop	 edi
  03fdd	5e		 pop	 esi

  03fde	b8 01 00 00 00	 mov	 eax, 1
  03fe3	5b		 pop	 ebx

  03fe4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  03fe7	33 cd		 xor	 ecx, ebp
  03fe9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  03fee	8b e5		 mov	 esp, ebp
  03ff0	5d		 pop	 ebp
  03ff1	c2 0c 00	 ret	 12			; 0000000cH
$LN287@Management:

  03ff4	8b cf		 mov	 ecx, edi
  03ff6	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  03ffb	8b cf		 mov	 ecx, edi
  03ffd	8b f0		 mov	 esi, eax
  03fff	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  04004	85 f6		 test	 esi, esi
  04006	0f 84 5e 1f 00
	00		 je	 $LN899@Management

  0400c	50		 push	 eax
  0400d	56		 push	 esi
  0400e	53		 push	 ebx
  0400f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gCreditDonate@@3VcCreditDonate@@A ; gCreditDonate
  04014	e8 00 00 00 00	 call	 ?Chat@cCreditDonate@@QAEXHPADH@Z ; cCreditDonate::Chat

  04019	e9 4c 1f 00 00	 jmp	 $LN899@Management
$LN285@Management:

  0401e	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  04024	83 fe 08	 cmp	 esi, 8
  04027	74 09		 je	 SHORT $LN283@Management
  04029	83 fe 20	 cmp	 esi, 32			; 00000020H
  0402c	0f 85 38 1f 00
	00		 jne	 $LN899@Management
$LN283@Management:

  04032	6a 02		 push	 2
  04034	53		 push	 ebx
  04035	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  0403a	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  0403f	84 c0		 test	 al, al

  04041	0f 84 23 1f 00
	00		 je	 $LN899@Management

  04047	8b cf		 mov	 ecx, edi
  04049	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0404e	8b cf		 mov	 ecx, edi
  04050	8b f0		 mov	 esi, eax
  04052	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  04057	8b f8		 mov	 edi, eax
  04059	89 7d f8	 mov	 DWORD PTR _iTokenNumber1$225232[ebp], edi

  0405c	85 f6		 test	 esi, esi
  0405e	0f 84 06 1f 00
	00		 je	 $LN899@Management

  04064	85 ff		 test	 edi, edi
  04066	0f 84 fe 1e 00
	00		 je	 $LN899@Management

  0406c	56		 push	 esi
  0406d	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  04072	8b f0		 mov	 esi, eax
  04074	83 c4 04	 add	 esp, 4

  04077	83 fe ff	 cmp	 esi, -1
  0407a	0f 84 ea 1e 00
	00		 je	 $LN899@Management

  04080	db 45 f8	 fild	 DWORD PTR _iTokenNumber1$225232[ebp]
  04083	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  04089	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  0408f	57		 push	 edi
  04090	83 c0 77	 add	 eax, 119		; 00000077H
  04093	50		 push	 eax
  04094	d8 80 31 22 00
	00		 fadd	 DWORD PTR [eax+8753]
  0409a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BIOCBJNL@?$FLCredits?$FN?3?5?$CFs?5?$CFd?5?$AA@
  0409f	53		 push	 ebx
  040a0	d9 98 31 22 00
	00		 fstp	 DWORD PTR [eax+8753]
  040a6	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  040ab	57		 push	 edi
  040ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EKOHGCJA@?$FLCredits?$FN?3?5?$CL?$CFd?5?$AA@
  040b1	56		 push	 esi
  040b2	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  040b7	56		 push	 esi
  040b8	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  040bd	83 c4 20	 add	 esp, 32			; 00000020H
$LN1153@Management:

  040c0	5f		 pop	 edi
  040c1	5e		 pop	 esi
  040c2	b8 01 00 00 00	 mov	 eax, 1
  040c7	5b		 pop	 ebx

  040c8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  040cb	33 cd		 xor	 ecx, ebp
  040cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  040d2	8b e5		 mov	 esp, ebp
  040d4	5d		 pop	 ebp
  040d5	c2 0c 00	 ret	 12			; 0000000cH
$LN278@Management:

  040d8	80 3d 08 00 00
	00 00		 cmp	 BYTE PTR ?ZtConfig@@3VcZtConfigs@@A+8, 0

  040df	74 df		 je	 SHORT $LN1153@Management

  040e1	8b cf		 mov	 ecx, edi
  040e3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  040e8	85 c0		 test	 eax, eax
  040ea	75 0e		 jne	 SHORT $LN276@Management

  040ec	33 d2		 xor	 edx, edx
  040ee	66 89 96 10 28
	00 00		 mov	 WORD PTR [esi+10256], dx
  040f5	e9 70 1e 00 00	 jmp	 $LN899@Management
$LN276@Management:

  040fa	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  040fd	81 f9 8f 01 00
	00		 cmp	 ecx, 399		; 0000018fH
  04103	0f 87 61 1e 00
	00		 ja	 $LN899@Management

  04109	0f bf 96 46 01
	00 00		 movsx	 edx, WORD PTR [esi+326]
  04110	0f b6 8e 49 01
	00 00		 movzx	 ecx, BYTE PTR [esi+329]
  04117	66 89 86 10 28
	00 00		 mov	 WORD PTR [esi+10256], ax
  0411e	0f bf 86 44 01
	00 00		 movsx	 eax, WORD PTR [esi+324]
  04125	52		 push	 edx
  04126	50		 push	 eax
  04127	51		 push	 ecx
  04128	e8 00 00 00 00	 call	 ?ztMapName@@YAPADH@Z	; ztMapName
  0412d	83 c4 04	 add	 esp, 4
  04130	50		 push	 eax
  04131	83 c6 77	 add	 esi, 119		; 00000077H
  04134	56		 push	 esi
  04135	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@FGLEBLPD@?$FL?4?3?3AutoParty?3?3?4?$FN?$FL?$CFs?$FN?5?$CFs?5?$CFd?5?$CFd?$AA@
  0413a	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0413f	83 c4 14	 add	 esp, 20			; 00000014H
  04142	e9 23 1e 00 00	 jmp	 $LN899@Management
$LN273@Management:

  04147	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  0414e	0f 87 16 1e 00
	00		 ja	 $LN899@Management

  04154	8b cf		 mov	 ecx, edi
  04156	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0415b	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  0415e	81 fa e6 03 00
	00		 cmp	 edx, 998		; 000003e6H
  04164	0f 87 00 1e 00
	00		 ja	 $LN899@Management

  0416a	8b 8e f0 00 00
	00		 mov	 ecx, DWORD PTR [esi+240]
  04170	8b d0		 mov	 edx, eax
  04172	69 d2 40 42 0f
	00		 imul	 edx, 1000000		; 000f4240H
  04178	3b d1		 cmp	 edx, ecx
  0417a	0f 87 ea 1d 00
	00		 ja	 $LN899@Management

  04180	01 86 14 28 00
	00		 add	 DWORD PTR [esi+10260], eax
  04186	2b ca		 sub	 ecx, edx

  04188	51		 push	 ecx
  04189	53		 push	 ebx
  0418a	89 8e f0 00 00
	00		 mov	 DWORD PTR [esi+240], ecx
  04190	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

  04195	53		 push	 ebx
  04196	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0419b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0419e	e9 c7 1d 00 00	 jmp	 $LN899@Management
$LN268@Management:

  041a3	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  041aa	0f 87 ba 1d 00
	00		 ja	 $LN899@Management

  041b0	8b cf		 mov	 ecx, edi
  041b2	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  041b7	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  041ba	81 f9 e6 03 00
	00		 cmp	 ecx, 998		; 000003e6H
  041c0	0f 87 a4 1d 00
	00		 ja	 $LN899@Management

  041c6	8b 96 f0 00 00
	00		 mov	 edx, DWORD PTR [esi+240]
  041cc	8b c8		 mov	 ecx, eax
  041ce	69 c9 40 42 0f
	00		 imul	 ecx, 1000000		; 000f4240H
  041d4	03 d1		 add	 edx, ecx

  041d6	81 fa 00 94 35
	77		 cmp	 edx, 2000000000		; 77359400H
  041dc	0f 87 88 1d 00
	00		 ja	 $LN899@Management

  041e2	8b 8e 14 28 00
	00		 mov	 ecx, DWORD PTR [esi+10260]
  041e8	3b c1		 cmp	 eax, ecx
  041ea	0f 8f 7a 1d 00
	00		 jg	 $LN899@Management

  041f0	52		 push	 edx
  041f1	2b c8		 sub	 ecx, eax
  041f3	53		 push	 ebx
  041f4	89 96 f0 00 00
	00		 mov	 DWORD PTR [esi+240], edx
  041fa	89 8e 14 28 00
	00		 mov	 DWORD PTR [esi+10260], ecx
  04200	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

  04205	53		 push	 ebx
  04206	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0420b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0420e	e9 57 1d 00 00	 jmp	 $LN899@Management
$LN262@Management:

  04213	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  0421a	0f 87 4a 1d 00
	00		 ja	 $LN899@Management

  04220	8b cf		 mov	 ecx, edi
  04222	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  04227	85 c0		 test	 eax, eax
  04229	0f 84 3b 1d 00
	00		 je	 $LN899@Management

  0422f	50		 push	 eax
  04230	53		 push	 ebx
  04231	b9 00 00 00 00	 mov	 ecx, OFFSET ?gCreditDonate@@3VcCreditDonate@@A ; gCreditDonate
  04236	e8 00 00 00 00	 call	 ?exClass@cCreditDonate@@QAEXHPAD@Z ; cCreditDonate::exClass

  0423b	e9 2a 1d 00 00	 jmp	 $LN899@Management
$LN259@Management:

  04240	33 c0		 xor	 eax, eax

  04242	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IIMMMKAG@?$FLAutoParty?$FN?3?5Recv?5Off?5?$AA@
  04247	53		 push	 ebx
  04248	66 89 86 10 28
	00 00		 mov	 WORD PTR [esi+10256], ax
  0424f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04254	83 c4 08	 add	 esp, 8

  04257	e9 0e 1d 00 00	 jmp	 $LN899@Management
$LN258@Management:

  0425c	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  04262	83 fe 08	 cmp	 esi, 8
  04265	74 09		 je	 SHORT $LN256@Management
  04267	83 fe 20	 cmp	 esi, 32			; 00000020H
  0426a	0f 85 fa 1c 00
	00		 jne	 $LN899@Management
$LN256@Management:

  04270	6a 02		 push	 2
  04272	53		 push	 ebx
  04273	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  04278	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  0427d	84 c0		 test	 al, al

  0427f	0f 84 e5 1c 00
	00		 je	 $LN899@Management

  04285	8b cf		 mov	 ecx, edi
  04287	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0428c	8b cf		 mov	 ecx, edi
  0428e	8b f0		 mov	 esi, eax
  04290	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  04295	8b f8		 mov	 edi, eax
  04297	89 7d f8	 mov	 DWORD PTR _iTokenNumber1$225274[ebp], edi

  0429a	85 f6		 test	 esi, esi
  0429c	0f 84 c8 1c 00
	00		 je	 $LN899@Management

  042a2	85 ff		 test	 edi, edi
  042a4	0f 88 c0 1c 00
	00		 js	 $LN899@Management

  042aa	56		 push	 esi
  042ab	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  042b0	8b f0		 mov	 esi, eax
  042b2	83 c4 04	 add	 esp, 4

  042b5	83 fe ff	 cmp	 esi, -1
  042b8	0f 84 ac 1c 00
	00		 je	 $LN899@Management

  042be	db 45 f8	 fild	 DWORD PTR _iTokenNumber1$225274[ebp]
  042c1	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  042c7	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  042cd	57		 push	 edi
  042ce	83 c0 77	 add	 eax, 119		; 00000077H
  042d1	50		 push	 eax
  042d2	d8 80 31 22 00
	00		 fadd	 DWORD PTR [eax+8753]
  042d8	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JDGJNJPO@?$FLCredit?$FN?3?5?$CFs?5?$CFd?$AA@
  042dd	53		 push	 ebx
  042de	d9 98 31 22 00
	00		 fstp	 DWORD PTR [eax+8753]
  042e4	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  042e9	57		 push	 edi
  042ea	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NKBNNBDB@?$FLCredit?$FN?3?5?$CFd?$AA@
  042ef	56		 push	 esi
  042f0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  042f5	56		 push	 esi
  042f6	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  042fb	83 c4 20	 add	 esp, 32			; 00000020H

  042fe	e9 67 1c 00 00	 jmp	 $LN899@Management
$LN251@Management:

  04303	dd 86 08 23 00
	00		 fld	 QWORD PTR [esi+8968]
  04309	d9 ee		 fldz
  0430b	d9 c0		 fld	 ST(0)
  0430d	dd ea		 fucomp	 ST(2)
  0430f	df e0		 fnstsw	 ax
  04311	dd d9		 fstp	 ST(1)
  04313	f6 c4 44	 test	 ah, 68			; 00000044H
  04316	7a 07		 jp	 SHORT $LN250@Management
  04318	dd d8		 fstp	 ST(0)

  0431a	e9 4b 1c 00 00	 jmp	 $LN899@Management
$LN250@Management:

  0431f	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  04325	df e0		 fnstsw	 ax
  04327	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4049000000000000
  0432d	f6 c4 05	 test	 ah, 5
  04330	7a 19		 jp	 SHORT $LN248@Management
  04332	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  04338	df e0		 fnstsw	 ax
  0433a	f6 c4 41	 test	 ah, 65			; 00000041H
  0433d	75 0c		 jne	 SHORT $LN248@Management

  0433f	bf 01 00 00 00	 mov	 edi, 1
  04344	dd d8		 fstp	 ST(0)
  04346	89 7d f8	 mov	 DWORD PTR _WCoin$225283[ebp], edi

  04349	eb 10		 jmp	 SHORT $LN247@Management
$LN248@Management:

  0434b	dc be 08 23 00
	00		 fdivr	 QWORD PTR [esi+8968]
  04351	e8 00 00 00 00	 call	 __ftol2_sse
  04356	8b f8		 mov	 edi, eax
  04358	89 45 f8	 mov	 DWORD PTR _WCoin$225283[ebp], eax
$LN247@Management:

  0435b	dd 9e 08 23 00
	00		 fstp	 QWORD PTR [esi+8968]

  04361	53		 push	 ebx
  04362	db 45 f8	 fild	 DWORD PTR _WCoin$225283[ebp]
  04365	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  0436a	dc 86 00 23 00
	00		 fadd	 QWORD PTR [esi+8960]
  04370	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]
  04376	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

  0437b	57		 push	 edi
  0437c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GCMKKGGG@?$FLWCoin?$FN?3?5?$CL?$CFd?$AA@
  04381	53		 push	 ebx
  04382	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04387	83 c4 0c	 add	 esp, 12			; 0000000cH
  0438a	5f		 pop	 edi
  0438b	5e		 pop	 esi

  0438c	b8 01 00 00 00	 mov	 eax, 1
  04391	5b		 pop	 ebx

  04392	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  04395	33 cd		 xor	 ecx, ebp
  04397	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0439c	8b e5		 mov	 esp, ebp
  0439e	5d		 pop	 ebp
  0439f	c2 0c 00	 ret	 12			; 0000000cH
$LN246@Management:

  043a2	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  043a9	0f 87 bb 1b 00
	00		 ja	 $LN899@Management

  043af	8b cf		 mov	 ecx, edi
  043b1	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  043b6	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  043b9	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  043bf	0f 87 a5 1b 00
	00		 ja	 $LN899@Management

  043c5	50		 push	 eax
  043c6	53		 push	 ebx
  043c7	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  043cc	e8 00 00 00 00	 call	 ?exchaos@JewelsBank@@QAEXHH@Z ; JewelsBank::exchaos
  043d1	5f		 pop	 edi
  043d2	5e		 pop	 esi

  043d3	b8 01 00 00 00	 mov	 eax, 1
  043d8	5b		 pop	 ebx

  043d9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  043dc	33 cd		 xor	 ecx, ebp
  043de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  043e3	8b e5		 mov	 esp, ebp
  043e5	5d		 pop	 ebp
  043e6	c2 0c 00	 ret	 12			; 0000000cH
$LN242@Management:

  043e9	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  043f0	0f 87 74 1b 00
	00		 ja	 $LN899@Management

  043f6	8b cf		 mov	 ecx, edi
  043f8	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  043fd	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  04400	81 fa 8b 00 00
	00		 cmp	 edx, 139		; 0000008bH
  04406	0f 87 5e 1b 00
	00		 ja	 $LN899@Management

  0440c	50		 push	 eax
  0440d	53		 push	 ebx
  0440e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  04413	e8 00 00 00 00	 call	 ?exbless@JewelsBank@@QAEXHH@Z ; JewelsBank::exbless
  04418	5f		 pop	 edi
  04419	5e		 pop	 esi

  0441a	b8 01 00 00 00	 mov	 eax, 1
  0441f	5b		 pop	 ebx

  04420	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  04423	33 cd		 xor	 ecx, ebp
  04425	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0442a	8b e5		 mov	 esp, ebp
  0442c	5d		 pop	 ebp
  0442d	c2 0c 00	 ret	 12			; 0000000cH
$LN238@Management:

  04430	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  04437	0f 87 2d 1b 00
	00		 ja	 $LN899@Management

  0443d	8b cf		 mov	 ecx, edi
  0443f	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  04444	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  04447	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  0444d	0f 87 17 1b 00
	00		 ja	 $LN899@Management

  04453	50		 push	 eax
  04454	53		 push	 ebx
  04455	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  0445a	e8 00 00 00 00	 call	 ?exsoul@JewelsBank@@QAEXHH@Z ; JewelsBank::exsoul
  0445f	5f		 pop	 edi
  04460	5e		 pop	 esi

  04461	b8 01 00 00 00	 mov	 eax, 1
  04466	5b		 pop	 ebx

  04467	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0446a	33 cd		 xor	 ecx, ebp
  0446c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  04471	8b e5		 mov	 esp, ebp
  04473	5d		 pop	 ebp
  04474	c2 0c 00	 ret	 12			; 0000000cH
$LN234@Management:

  04477	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  0447e	0f 87 e6 1a 00
	00		 ja	 $LN899@Management

  04484	8b cf		 mov	 ecx, edi
  04486	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0448b	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  0448e	81 fa 8b 00 00
	00		 cmp	 edx, 139		; 0000008bH
  04494	0f 87 d0 1a 00
	00		 ja	 $LN899@Management

  0449a	50		 push	 eax
  0449b	53		 push	 ebx
  0449c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  044a1	e8 00 00 00 00	 call	 ?exlife@JewelsBank@@QAEXHH@Z ; JewelsBank::exlife
  044a6	5f		 pop	 edi
  044a7	5e		 pop	 esi

  044a8	b8 01 00 00 00	 mov	 eax, 1
  044ad	5b		 pop	 ebx

  044ae	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  044b1	33 cd		 xor	 ecx, ebp
  044b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  044b8	8b e5		 mov	 esp, ebp
  044ba	5d		 pop	 ebp
  044bb	c2 0c 00	 ret	 12			; 0000000cH
$LN230@Management:

  044be	6a 1a		 push	 26			; 0000001aH
  044c0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  044c5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  044ca	84 c0		 test	 al, al
  044cc	0f 85 98 00 00
	00		 jne	 $LN228@Management
  044d2	6a 11		 push	 17			; 00000011H
  044d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  044d9	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  044de	84 c0		 test	 al, al
  044e0	0f 85 84 00 00
	00		 jne	 $LN228@Management
  044e6	6a 01		 push	 1
  044e8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  044ed	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  044f2	84 c0		 test	 al, al
  044f4	75 74		 jne	 SHORT $LN228@Management
  044f6	6a 1c		 push	 28			; 0000001cH
  044f8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  044fd	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04502	84 c0		 test	 al, al
  04504	75 64		 jne	 SHORT $LN228@Management
  04506	6a 25		 push	 37			; 00000025H
  04508	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0450d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04512	84 c0		 test	 al, al
  04514	75 54		 jne	 SHORT $LN228@Management
  04516	6a 36		 push	 54			; 00000036H
  04518	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0451d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04522	84 c0		 test	 al, al
  04524	75 44		 jne	 SHORT $LN228@Management
  04526	6a 35		 push	 53			; 00000035H
  04528	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0452d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04532	84 c0		 test	 al, al
  04534	75 34		 jne	 SHORT $LN228@Management
  04536	6a 40		 push	 64			; 00000040H
  04538	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0453d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04542	84 c0		 test	 al, al
  04544	75 24		 jne	 SHORT $LN228@Management
  04546	6a 32		 push	 50			; 00000032H
  04548	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0454d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04552	84 c0		 test	 al, al
  04554	75 14		 jne	 SHORT $LN228@Management
  04556	6a 4f		 push	 79			; 0000004fH
  04558	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0455d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04562	84 c0		 test	 al, al
  04564	0f 84 00 1a 00
	00		 je	 $LN899@Management
$LN228@Management:

  0456a	6a 25		 push	 37			; 00000025H
  0456c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04571	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04576	84 c0		 test	 al, al
  04578	75 50		 jne	 SHORT $LN226@Management
  0457a	6a 36		 push	 54			; 00000036H
  0457c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04581	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04586	84 c0		 test	 al, al
  04588	75 40		 jne	 SHORT $LN226@Management
  0458a	6a 35		 push	 53			; 00000035H
  0458c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04591	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04596	84 c0		 test	 al, al
  04598	75 30		 jne	 SHORT $LN226@Management
  0459a	6a 40		 push	 64			; 00000040H
  0459c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  045a1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  045a6	84 c0		 test	 al, al
  045a8	75 20		 jne	 SHORT $LN226@Management
  045aa	6a 32		 push	 50			; 00000032H
  045ac	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  045b1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  045b6	84 c0		 test	 al, al
  045b8	75 10		 jne	 SHORT $LN226@Management
  045ba	6a 4f		 push	 79			; 0000004fH
  045bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  045c1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  045c6	84 c0		 test	 al, al
  045c8	74 17		 je	 SHORT $LN1047@Management
$LN226@Management:

  045ca	8b cf		 mov	 ecx, edi
  045cc	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  045d1	8b f8		 mov	 edi, eax

  045d3	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  045d6	83 f8 1e	 cmp	 eax, 30			; 0000001eH
  045d9	0f 87 8b 19 00
	00		 ja	 $LN899@Management
  045df	eb 03		 jmp	 SHORT $LN225@Management
$LN1047@Management:
  045e1	8b 7d f8	 mov	 edi, DWORD PTR _iTokenNumber1$225312[ebp]
$LN225@Management:

  045e4	a1 0c 2f 00 00	 mov	 eax, DWORD PTR ?Premium@@3VPremiumSystem@@A+12044
  045e9	83 f8 01	 cmp	 eax, 1
  045ec	0f 85 94 01 00
	00		 jne	 $LN223@Management

  045f2	6a 25		 push	 37			; 00000025H
  045f4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  045f9	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  045fe	84 c0		 test	 al, al
  04600	0f 85 8e 00 00
	00		 jne	 $LN1055@Management
  04606	6a 36		 push	 54			; 00000036H
  04608	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0460d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04612	84 c0		 test	 al, al
  04614	0f 85 7a 00 00
	00		 jne	 $LN1055@Management
  0461a	6a 35		 push	 53			; 00000035H
  0461c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04621	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04626	84 c0		 test	 al, al
  04628	75 6a		 jne	 SHORT $LN1055@Management
  0462a	6a 40		 push	 64			; 00000040H
  0462c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04631	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04636	84 c0		 test	 al, al
  04638	75 5a		 jne	 SHORT $LN1055@Management
  0463a	6a 32		 push	 50			; 00000032H
  0463c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04641	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04646	84 c0		 test	 al, al
  04648	75 4a		 jne	 SHORT $LN1055@Management
  0464a	6a 4f		 push	 79			; 0000004fH
  0464c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04651	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04656	84 c0		 test	 al, al
  04658	75 3a		 jne	 SHORT $LN1055@Management

  0465a	8b 86 14 28 00
	00		 mov	 eax, DWORD PTR [esi+10260]
  04660	8b 0d 08 2f 00
	00		 mov	 ecx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04666	3b c8		 cmp	 ecx, eax
  04668	7e 16		 jle	 SHORT $LN218@Management

  0466a	51		 push	 ecx
  0466b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0466d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JOEEOEIN@?$FLNeed?5Zen?$FN?3?5?$CFd?$AA@
  04672	51		 push	 ecx
  04673	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04678	83 c4 0c	 add	 esp, 12			; 0000000cH
  0467b	e9 ea 18 00 00	 jmp	 $LN899@Management
$LN218@Management:

  04680	2b c1		 sub	 eax, ecx

  04682	81 86 b8 22 00
	00 80 de 28 00	 add	 DWORD PTR [esi+8888], 2678400 ; 0028de80H
  0468c	89 86 14 28 00
	00		 mov	 DWORD PTR [esi+10260], eax
  04692	eb 41		 jmp	 SHORT $LN219@Management
$LN1055@Management:

  04694	8b 15 08 2f 00
	00		 mov	 edx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  0469a	8b 8e 14 28 00
	00		 mov	 ecx, DWORD PTR [esi+10260]
  046a0	8b c7		 mov	 eax, edi
  046a2	0f af c2	 imul	 eax, edx
  046a5	3b c1		 cmp	 eax, ecx
  046a7	7e 16		 jle	 SHORT $LN220@Management

  046a9	52		 push	 edx
  046aa	8b 16		 mov	 edx, DWORD PTR [esi]
  046ac	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JOEEOEIN@?$FLNeed?5Zen?$FN?3?5?$CFd?$AA@
  046b1	52		 push	 edx
  046b2	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  046b7	83 c4 0c	 add	 esp, 12			; 0000000cH
  046ba	e9 ab 18 00 00	 jmp	 $LN899@Management
$LN220@Management:

  046bf	2b c8		 sub	 ecx, eax

  046c1	8b c7		 mov	 eax, edi
  046c3	69 c0 80 51 01
	00		 imul	 eax, 86400		; 00015180H
  046c9	01 86 b8 22 00
	00		 add	 DWORD PTR [esi+8888], eax
  046cf	89 8e 14 28 00
	00		 mov	 DWORD PTR [esi+10260], ecx
$LN219@Management:

  046d5	6a 01		 push	 1
  046d7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  046dc	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  046e1	84 c0		 test	 al, al
  046e3	75 73		 jne	 SHORT $LN213@Management

  046e5	6a 25		 push	 37			; 00000025H
  046e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  046ec	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  046f1	84 c0		 test	 al, al
  046f3	75 54		 jne	 SHORT $LN214@Management
  046f5	6a 36		 push	 54			; 00000036H
  046f7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  046fc	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04701	84 c0		 test	 al, al
  04703	75 44		 jne	 SHORT $LN214@Management
  04705	6a 35		 push	 53			; 00000035H
  04707	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0470c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04711	84 c0		 test	 al, al
  04713	75 34		 jne	 SHORT $LN214@Management
  04715	6a 40		 push	 64			; 00000040H
  04717	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0471c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04721	84 c0		 test	 al, al
  04723	75 24		 jne	 SHORT $LN214@Management
  04725	6a 32		 push	 50			; 00000032H
  04727	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0472c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04731	84 c0		 test	 al, al
  04733	75 14		 jne	 SHORT $LN214@Management
  04735	6a 4f		 push	 79			; 0000004fH
  04737	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0473c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04741	84 c0		 test	 al, al
  04743	75 04		 jne	 SHORT $LN214@Management

  04745	6a 1f		 push	 31			; 0000001fH
  04747	eb 01		 jmp	 SHORT $LN1129@Management
$LN214@Management:

  04749	57		 push	 edi
$LN1129@Management:
  0474a	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@IEMKEHON@?$EA?$FLPremium?5Status?$FN?5?$CL?5?$CFd?5Day?$AA@
  0474f	53		 push	 ebx
  04750	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  04755	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN213@Management:

  04758	8b 8e f0 00 00
	00		 mov	 ecx, DWORD PTR [esi+240]
  0475e	51		 push	 ecx
  0475f	53		 push	 ebx
  04760	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

  04765	53		 push	 ebx
  04766	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0476b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0476e	5f		 pop	 edi
  0476f	5e		 pop	 esi

  04770	b8 01 00 00 00	 mov	 eax, 1
  04775	5b		 pop	 ebx

  04776	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  04779	33 cd		 xor	 ecx, ebp
  0477b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  04780	8b e5		 mov	 esp, ebp
  04782	5d		 pop	 ebp
  04783	c2 0c 00	 ret	 12			; 0000000cH
$LN223@Management:

  04786	83 f8 02	 cmp	 eax, 2
  04789	0f 85 a9 01 00
	00		 jne	 $LN211@Management

  0478f	6a 25		 push	 37			; 00000025H
  04791	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04796	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0479b	84 c0		 test	 al, al
  0479d	0f 85 99 00 00
	00		 jne	 $LN1060@Management
  047a3	6a 36		 push	 54			; 00000036H
  047a5	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  047aa	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  047af	84 c0		 test	 al, al
  047b1	0f 85 85 00 00
	00		 jne	 $LN1060@Management
  047b7	6a 35		 push	 53			; 00000035H
  047b9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  047be	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  047c3	84 c0		 test	 al, al
  047c5	75 75		 jne	 SHORT $LN1060@Management
  047c7	6a 40		 push	 64			; 00000040H
  047c9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  047ce	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  047d3	84 c0		 test	 al, al
  047d5	75 65		 jne	 SHORT $LN1060@Management
  047d7	6a 32		 push	 50			; 00000032H
  047d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  047de	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  047e3	84 c0		 test	 al, al
  047e5	75 55		 jne	 SHORT $LN1060@Management
  047e7	6a 4f		 push	 79			; 0000004fH
  047e9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  047ee	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  047f3	84 c0		 test	 al, al
  047f5	75 45		 jne	 SHORT $LN1060@Management

  047f7	db 05 08 2f 00
	00		 fild	 DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  047fd	d9 5d f8	 fstp	 DWORD PTR tv8120[ebp]
  04800	d9 45 f8	 fld	 DWORD PTR tv8120[ebp]
  04803	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  04809	d8 d9		 fcomp	 ST(1)
  0480b	df e0		 fnstsw	 ax
  0480d	f6 c4 05	 test	 ah, 5
  04810	7a 1e		 jp	 SHORT $LN206@Management

  04812	8b 15 08 2f 00
	00		 mov	 edx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04818	dd d8		 fstp	 ST(0)
  0481a	8b 06		 mov	 eax, DWORD PTR [esi]
  0481c	52		 push	 edx
  0481d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DNAEPCGG@?$FLNeed?5Credit?$FN?3?5?$CFd?$AA@
  04822	50		 push	 eax
  04823	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04828	83 c4 0c	 add	 esp, 12			; 0000000cH
  0482b	e9 3a 17 00 00	 jmp	 $LN899@Management
$LN206@Management:

  04830	81 86 b8 22 00
	00 80 de 28 00	 add	 DWORD PTR [esi+8888], 2678400 ; 0028de80H
  0483a	eb 4c		 jmp	 SHORT $LN1130@Management
$LN1060@Management:

  0483c	8b 0d 08 2f 00
	00		 mov	 ecx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04842	8b d7		 mov	 edx, edi
  04844	0f af d1	 imul	 edx, ecx
  04847	89 55 f8	 mov	 DWORD PTR tv9280[ebp], edx
  0484a	db 45 f8	 fild	 DWORD PTR tv9280[ebp]
  0484d	d9 5d f8	 fstp	 DWORD PTR tv8129[ebp]
  04850	d9 45 f8	 fld	 DWORD PTR tv8129[ebp]
  04853	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  04859	d8 d9		 fcomp	 ST(1)
  0485b	df e0		 fnstsw	 ax
  0485d	f6 c4 05	 test	 ah, 5
  04860	7a 18		 jp	 SHORT $LN208@Management

  04862	8b 06		 mov	 eax, DWORD PTR [esi]
  04864	dd d8		 fstp	 ST(0)
  04866	51		 push	 ecx
  04867	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DNAEPCGG@?$FLNeed?5Credit?$FN?3?5?$CFd?$AA@
  0486c	50		 push	 eax
  0486d	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04872	83 c4 0c	 add	 esp, 12			; 0000000cH
  04875	e9 f0 16 00 00	 jmp	 $LN899@Management
$LN208@Management:

  0487a	8b cf		 mov	 ecx, edi
  0487c	69 c9 80 51 01
	00		 imul	 ecx, 86400		; 00015180H
  04882	01 8e b8 22 00
	00		 add	 DWORD PTR [esi+8888], ecx
$LN1130@Management:

  04888	d8 ae a8 22 00
	00		 fsubr	 DWORD PTR [esi+8872]
  0488e	6a 01		 push	 1
  04890	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04895	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  0489b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  048a0	84 c0		 test	 al, al
  048a2	75 73		 jne	 SHORT $LN201@Management

  048a4	6a 25		 push	 37			; 00000025H
  048a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  048ab	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  048b0	84 c0		 test	 al, al
  048b2	75 54		 jne	 SHORT $LN202@Management
  048b4	6a 36		 push	 54			; 00000036H
  048b6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  048bb	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  048c0	84 c0		 test	 al, al
  048c2	75 44		 jne	 SHORT $LN202@Management
  048c4	6a 35		 push	 53			; 00000035H
  048c6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  048cb	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  048d0	84 c0		 test	 al, al
  048d2	75 34		 jne	 SHORT $LN202@Management
  048d4	6a 40		 push	 64			; 00000040H
  048d6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  048db	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  048e0	84 c0		 test	 al, al
  048e2	75 24		 jne	 SHORT $LN202@Management
  048e4	6a 32		 push	 50			; 00000032H
  048e6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  048eb	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  048f0	84 c0		 test	 al, al
  048f2	75 14		 jne	 SHORT $LN202@Management
  048f4	6a 4f		 push	 79			; 0000004fH
  048f6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  048fb	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04900	84 c0		 test	 al, al
  04902	75 04		 jne	 SHORT $LN202@Management

  04904	6a 1f		 push	 31			; 0000001fH
  04906	eb 01		 jmp	 SHORT $LN1131@Management
$LN202@Management:

  04908	57		 push	 edi
$LN1131@Management:
  04909	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@IEMKEHON@?$EA?$FLPremium?5Status?$FN?5?$CL?5?$CFd?5Day?$AA@
  0490e	53		 push	 ebx
  0490f	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  04914	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN201@Management:

  04917	53		 push	 ebx
  04918	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0491d	83 c4 04	 add	 esp, 4
  04920	5f		 pop	 edi
  04921	5e		 pop	 esi

  04922	b8 01 00 00 00	 mov	 eax, 1
  04927	5b		 pop	 ebx

  04928	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0492b	33 cd		 xor	 ecx, ebp
  0492d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  04932	8b e5		 mov	 esp, ebp
  04934	5d		 pop	 ebp
  04935	c2 0c 00	 ret	 12			; 0000000cH
$LN211@Management:

  04938	83 f8 03	 cmp	 eax, 3
  0493b	0f 85 88 01 00
	00		 jne	 $LN199@Management

  04941	6a 25		 push	 37			; 00000025H
  04943	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04948	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0494d	84 c0		 test	 al, al
  0494f	0f 85 91 00 00
	00		 jne	 $LN1065@Management
  04955	6a 36		 push	 54			; 00000036H
  04957	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0495c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04961	84 c0		 test	 al, al
  04963	0f 85 7d 00 00
	00		 jne	 $LN1065@Management
  04969	6a 35		 push	 53			; 00000035H
  0496b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04970	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04975	84 c0		 test	 al, al
  04977	75 6d		 jne	 SHORT $LN1065@Management
  04979	6a 40		 push	 64			; 00000040H
  0497b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04980	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04985	84 c0		 test	 al, al
  04987	75 5d		 jne	 SHORT $LN1065@Management
  04989	6a 32		 push	 50			; 00000032H
  0498b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04990	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04995	84 c0		 test	 al, al
  04997	75 4d		 jne	 SHORT $LN1065@Management
  04999	6a 4f		 push	 79			; 0000004fH
  0499b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  049a0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  049a5	84 c0		 test	 al, al
  049a7	75 3d		 jne	 SHORT $LN1065@Management

  049a9	db 05 08 2f 00
	00		 fild	 DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  049af	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  049b5	df e0		 fnstsw	 ax
  049b7	f6 c4 41	 test	 ah, 65			; 00000041H
  049ba	75 1e		 jne	 SHORT $LN194@Management

  049bc	8b 15 08 2f 00
	00		 mov	 edx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  049c2	dd d8		 fstp	 ST(0)
  049c4	8b 06		 mov	 eax, DWORD PTR [esi]
  049c6	52		 push	 edx
  049c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FKJCFFGC@?$FLNeed?5WCoinC?$FN?3?5?$CFd?$AA@
  049cc	50		 push	 eax
  049cd	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  049d2	83 c4 0c	 add	 esp, 12			; 0000000cH
  049d5	e9 90 15 00 00	 jmp	 $LN899@Management
$LN194@Management:

  049da	81 86 b8 22 00
	00 80 de 28 00	 add	 DWORD PTR [esi+8888], 2678400 ; 0028de80H
  049e4	eb 44		 jmp	 SHORT $LN1132@Management
$LN1065@Management:

  049e6	8b 0d 08 2f 00
	00		 mov	 ecx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  049ec	8b d7		 mov	 edx, edi
  049ee	0f af d1	 imul	 edx, ecx
  049f1	89 55 f8	 mov	 DWORD PTR tv9246[ebp], edx
  049f4	db 45 f8	 fild	 DWORD PTR tv9246[ebp]
  049f7	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  049fd	df e0		 fnstsw	 ax
  049ff	f6 c4 41	 test	 ah, 65			; 00000041H
  04a02	75 18		 jne	 SHORT $LN196@Management

  04a04	8b 06		 mov	 eax, DWORD PTR [esi]
  04a06	dd d8		 fstp	 ST(0)
  04a08	51		 push	 ecx
  04a09	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FKJCFFGC@?$FLNeed?5WCoinC?$FN?3?5?$CFd?$AA@
  04a0e	50		 push	 eax
  04a0f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04a14	83 c4 0c	 add	 esp, 12			; 0000000cH
  04a17	e9 4e 15 00 00	 jmp	 $LN899@Management
$LN196@Management:

  04a1c	8b cf		 mov	 ecx, edi
  04a1e	69 c9 80 51 01
	00		 imul	 ecx, 86400		; 00015180H
  04a24	01 8e b8 22 00
	00		 add	 DWORD PTR [esi+8888], ecx
$LN1132@Management:

  04a2a	dc ae 00 23 00
	00		 fsubr	 QWORD PTR [esi+8960]
  04a30	6a 01		 push	 1
  04a32	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04a37	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]
  04a3d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04a42	84 c0		 test	 al, al
  04a44	0f 85 cd fe ff
	ff		 jne	 $LN201@Management

  04a4a	6a 25		 push	 37			; 00000025H
  04a4c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04a51	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04a56	84 c0		 test	 al, al
  04a58	0f 85 aa fe ff
	ff		 jne	 $LN202@Management
  04a5e	6a 36		 push	 54			; 00000036H
  04a60	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04a65	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04a6a	84 c0		 test	 al, al
  04a6c	0f 85 96 fe ff
	ff		 jne	 $LN202@Management
  04a72	6a 35		 push	 53			; 00000035H
  04a74	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04a79	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04a7e	84 c0		 test	 al, al
  04a80	0f 85 82 fe ff
	ff		 jne	 $LN202@Management
  04a86	6a 40		 push	 64			; 00000040H
  04a88	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04a8d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04a92	84 c0		 test	 al, al
  04a94	0f 85 6e fe ff
	ff		 jne	 $LN202@Management
  04a9a	6a 32		 push	 50			; 00000032H
  04a9c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04aa1	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04aa6	84 c0		 test	 al, al
  04aa8	0f 85 5a fe ff
	ff		 jne	 $LN202@Management
  04aae	6a 4f		 push	 79			; 0000004fH
  04ab0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04ab5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04aba	84 c0		 test	 al, al
  04abc	0f 85 46 fe ff
	ff		 jne	 $LN202@Management

  04ac2	6a 1f		 push	 31			; 0000001fH
  04ac4	e9 40 fe ff ff	 jmp	 $LN1131@Management
$LN199@Management:

  04ac9	83 f8 04	 cmp	 eax, 4
  04acc	0f 85 88 01 00
	00		 jne	 $LN187@Management

  04ad2	6a 25		 push	 37			; 00000025H
  04ad4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04ad9	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04ade	84 c0		 test	 al, al
  04ae0	0f 85 91 00 00
	00		 jne	 $LN1070@Management
  04ae6	6a 36		 push	 54			; 00000036H
  04ae8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04aed	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04af2	84 c0		 test	 al, al
  04af4	0f 85 7d 00 00
	00		 jne	 $LN1070@Management
  04afa	6a 35		 push	 53			; 00000035H
  04afc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04b01	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04b06	84 c0		 test	 al, al
  04b08	75 6d		 jne	 SHORT $LN1070@Management
  04b0a	6a 40		 push	 64			; 00000040H
  04b0c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04b11	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04b16	84 c0		 test	 al, al
  04b18	75 5d		 jne	 SHORT $LN1070@Management
  04b1a	6a 32		 push	 50			; 00000032H
  04b1c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04b21	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04b26	84 c0		 test	 al, al
  04b28	75 4d		 jne	 SHORT $LN1070@Management
  04b2a	6a 4f		 push	 79			; 0000004fH
  04b2c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04b31	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04b36	84 c0		 test	 al, al
  04b38	75 3d		 jne	 SHORT $LN1070@Management

  04b3a	db 05 08 2f 00
	00		 fild	 DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04b40	dc 96 f8 22 00
	00		 fcom	 QWORD PTR [esi+8952]
  04b46	df e0		 fnstsw	 ax
  04b48	f6 c4 41	 test	 ah, 65			; 00000041H
  04b4b	75 1e		 jne	 SHORT $LN182@Management

  04b4d	8b 15 08 2f 00
	00		 mov	 edx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04b53	dd d8		 fstp	 ST(0)
  04b55	8b 06		 mov	 eax, DWORD PTR [esi]
  04b57	52		 push	 edx
  04b58	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MKENDDB@?$FLNeed?5WCoinP?$FN?3?5?$CFd?$AA@
  04b5d	50		 push	 eax
  04b5e	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04b63	83 c4 0c	 add	 esp, 12			; 0000000cH
  04b66	e9 ff 13 00 00	 jmp	 $LN899@Management
$LN182@Management:

  04b6b	81 86 b8 22 00
	00 80 de 28 00	 add	 DWORD PTR [esi+8888], 2678400 ; 0028de80H
  04b75	eb 44		 jmp	 SHORT $LN1134@Management
$LN1070@Management:

  04b77	8b 0d 08 2f 00
	00		 mov	 ecx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04b7d	8b d7		 mov	 edx, edi
  04b7f	0f af d1	 imul	 edx, ecx
  04b82	89 55 f8	 mov	 DWORD PTR tv9211[ebp], edx
  04b85	db 45 f8	 fild	 DWORD PTR tv9211[ebp]
  04b88	dc 96 f8 22 00
	00		 fcom	 QWORD PTR [esi+8952]
  04b8e	df e0		 fnstsw	 ax
  04b90	f6 c4 41	 test	 ah, 65			; 00000041H
  04b93	75 18		 jne	 SHORT $LN184@Management

  04b95	8b 06		 mov	 eax, DWORD PTR [esi]
  04b97	dd d8		 fstp	 ST(0)
  04b99	51		 push	 ecx
  04b9a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MKENDDB@?$FLNeed?5WCoinP?$FN?3?5?$CFd?$AA@
  04b9f	50		 push	 eax
  04ba0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04ba5	83 c4 0c	 add	 esp, 12			; 0000000cH
  04ba8	e9 bd 13 00 00	 jmp	 $LN899@Management
$LN184@Management:

  04bad	8b cf		 mov	 ecx, edi
  04baf	69 c9 80 51 01
	00		 imul	 ecx, 86400		; 00015180H
  04bb5	01 8e b8 22 00
	00		 add	 DWORD PTR [esi+8888], ecx
$LN1134@Management:

  04bbb	dc ae f8 22 00
	00		 fsubr	 QWORD PTR [esi+8952]
  04bc1	6a 01		 push	 1
  04bc3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04bc8	dd 9e f8 22 00
	00		 fstp	 QWORD PTR [esi+8952]
  04bce	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04bd3	84 c0		 test	 al, al
  04bd5	0f 85 3c fd ff
	ff		 jne	 $LN201@Management

  04bdb	6a 25		 push	 37			; 00000025H
  04bdd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04be2	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04be7	84 c0		 test	 al, al
  04be9	0f 85 19 fd ff
	ff		 jne	 $LN202@Management
  04bef	6a 36		 push	 54			; 00000036H
  04bf1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04bf6	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04bfb	84 c0		 test	 al, al
  04bfd	0f 85 05 fd ff
	ff		 jne	 $LN202@Management
  04c03	6a 35		 push	 53			; 00000035H
  04c05	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c0a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c0f	84 c0		 test	 al, al
  04c11	0f 85 f1 fc ff
	ff		 jne	 $LN202@Management
  04c17	6a 40		 push	 64			; 00000040H
  04c19	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c1e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c23	84 c0		 test	 al, al
  04c25	0f 85 dd fc ff
	ff		 jne	 $LN202@Management
  04c2b	6a 32		 push	 50			; 00000032H
  04c2d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c32	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c37	84 c0		 test	 al, al
  04c39	0f 85 c9 fc ff
	ff		 jne	 $LN202@Management
  04c3f	6a 4f		 push	 79			; 0000004fH
  04c41	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c46	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c4b	84 c0		 test	 al, al
  04c4d	0f 85 b5 fc ff
	ff		 jne	 $LN202@Management

  04c53	6a 1f		 push	 31			; 0000001fH
  04c55	e9 af fc ff ff	 jmp	 $LN1131@Management
$LN187@Management:

  04c5a	83 f8 05	 cmp	 eax, 5
  04c5d	0f 85 07 13 00
	00		 jne	 $LN899@Management

  04c63	6a 25		 push	 37			; 00000025H
  04c65	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c6a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c6f	84 c0		 test	 al, al
  04c71	0f 85 91 00 00
	00		 jne	 $LN1075@Management
  04c77	6a 36		 push	 54			; 00000036H
  04c79	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c7e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c83	84 c0		 test	 al, al
  04c85	0f 85 7d 00 00
	00		 jne	 $LN1075@Management
  04c8b	6a 35		 push	 53			; 00000035H
  04c8d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04c92	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04c97	84 c0		 test	 al, al
  04c99	75 6d		 jne	 SHORT $LN1075@Management
  04c9b	6a 40		 push	 64			; 00000040H
  04c9d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04ca2	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04ca7	84 c0		 test	 al, al
  04ca9	75 5d		 jne	 SHORT $LN1075@Management
  04cab	6a 32		 push	 50			; 00000032H
  04cad	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04cb2	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04cb7	84 c0		 test	 al, al
  04cb9	75 4d		 jne	 SHORT $LN1075@Management
  04cbb	6a 4f		 push	 79			; 0000004fH
  04cbd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04cc2	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04cc7	84 c0		 test	 al, al
  04cc9	75 3d		 jne	 SHORT $LN1075@Management

  04ccb	db 05 08 2f 00
	00		 fild	 DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04cd1	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  04cd7	df e0		 fnstsw	 ax
  04cd9	f6 c4 41	 test	 ah, 65			; 00000041H
  04cdc	75 1e		 jne	 SHORT $LN170@Management

  04cde	8b 15 08 2f 00
	00		 mov	 edx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04ce4	dd d8		 fstp	 ST(0)
  04ce6	8b 06		 mov	 eax, DWORD PTR [esi]
  04ce8	52		 push	 edx
  04ce9	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LEPLDKKA@?$FLNeed?5GoblinPoint?$FN?3?5?$CFd?$AA@
  04cee	50		 push	 eax
  04cef	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04cf4	83 c4 0c	 add	 esp, 12			; 0000000cH
  04cf7	e9 6e 12 00 00	 jmp	 $LN899@Management
$LN170@Management:

  04cfc	81 86 b8 22 00
	00 80 de 28 00	 add	 DWORD PTR [esi+8888], 2678400 ; 0028de80H
  04d06	eb 44		 jmp	 SHORT $LN1136@Management
$LN1075@Management:

  04d08	8b 0d 08 2f 00
	00		 mov	 ecx, DWORD PTR ?Premium@@3VPremiumSystem@@A+12040
  04d0e	8b d7		 mov	 edx, edi
  04d10	0f af d1	 imul	 edx, ecx
  04d13	89 55 f8	 mov	 DWORD PTR tv9176[ebp], edx
  04d16	db 45 f8	 fild	 DWORD PTR tv9176[ebp]
  04d19	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  04d1f	df e0		 fnstsw	 ax
  04d21	f6 c4 41	 test	 ah, 65			; 00000041H
  04d24	75 18		 jne	 SHORT $LN172@Management

  04d26	8b 06		 mov	 eax, DWORD PTR [esi]
  04d28	dd d8		 fstp	 ST(0)
  04d2a	51		 push	 ecx
  04d2b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LEPLDKKA@?$FLNeed?5GoblinPoint?$FN?3?5?$CFd?$AA@
  04d30	50		 push	 eax
  04d31	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04d36	83 c4 0c	 add	 esp, 12			; 0000000cH
  04d39	e9 2c 12 00 00	 jmp	 $LN899@Management
$LN172@Management:

  04d3e	8b cf		 mov	 ecx, edi
  04d40	69 c9 80 51 01
	00		 imul	 ecx, 86400		; 00015180H
  04d46	01 8e b8 22 00
	00		 add	 DWORD PTR [esi+8888], ecx
$LN1136@Management:

  04d4c	dc ae 08 23 00
	00		 fsubr	 QWORD PTR [esi+8968]
  04d52	6a 01		 push	 1
  04d54	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04d59	dd 9e 08 23 00
	00		 fstp	 QWORD PTR [esi+8968]
  04d5f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04d64	84 c0		 test	 al, al
  04d66	0f 85 ab fb ff
	ff		 jne	 $LN201@Management

  04d6c	6a 25		 push	 37			; 00000025H
  04d6e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04d73	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04d78	84 c0		 test	 al, al
  04d7a	0f 85 88 fb ff
	ff		 jne	 $LN202@Management
  04d80	6a 36		 push	 54			; 00000036H
  04d82	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04d87	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04d8c	84 c0		 test	 al, al
  04d8e	0f 85 74 fb ff
	ff		 jne	 $LN202@Management
  04d94	6a 35		 push	 53			; 00000035H
  04d96	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04d9b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04da0	84 c0		 test	 al, al
  04da2	0f 85 60 fb ff
	ff		 jne	 $LN202@Management
  04da8	6a 40		 push	 64			; 00000040H
  04daa	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04daf	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04db4	84 c0		 test	 al, al
  04db6	0f 85 4c fb ff
	ff		 jne	 $LN202@Management
  04dbc	6a 32		 push	 50			; 00000032H
  04dbe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04dc3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04dc8	84 c0		 test	 al, al
  04dca	0f 85 38 fb ff
	ff		 jne	 $LN202@Management
  04dd0	6a 4f		 push	 79			; 0000004fH
  04dd2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04dd7	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04ddc	84 c0		 test	 al, al
  04dde	0f 85 24 fb ff
	ff		 jne	 $LN202@Management

  04de4	6a 1f		 push	 31			; 0000001fH
  04de6	e9 1e fb ff ff	 jmp	 $LN1131@Management
$LN164@Management:

  04deb	6a 1c		 push	 28			; 0000001cH
  04ded	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04df2	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04df7	84 c0		 test	 al, al
  04df9	75 24		 jne	 SHORT $LN162@Management
  04dfb	6a 07		 push	 7
  04dfd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04e02	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04e07	84 c0		 test	 al, al
  04e09	75 14		 jne	 SHORT $LN162@Management
  04e0b	6a 08		 push	 8
  04e0d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04e12	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04e17	84 c0		 test	 al, al
  04e19	0f 84 4b 11 00
	00		 je	 $LN899@Management
$LN162@Management:

  04e1f	8b cf		 mov	 ecx, edi
  04e21	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  04e26	8b cf		 mov	 ecx, edi
  04e28	89 45 f8	 mov	 DWORD PTR _TargetName$225385[ebp], eax
  04e2b	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  04e30	83 7d f8 00	 cmp	 DWORD PTR _TargetName$225385[ebp], 0
  04e34	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iTokenNumber1$225386[ebp], eax
  04e3a	0f 84 2a 11 00
	00		 je	 $LN899@Management

  04e40	85 c0		 test	 eax, eax
  04e42	0f 88 22 11 00
	00		 js	 $LN899@Management

  04e48	8b 55 f8	 mov	 edx, DWORD PTR _TargetName$225385[ebp]
  04e4b	52		 push	 edx
  04e4c	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  04e51	8b f8		 mov	 edi, eax
  04e53	83 c4 04	 add	 esp, 4

  04e56	83 ff ff	 cmp	 edi, -1
  04e59	0f 84 0b 11 00
	00		 je	 $LN899@Management

  04e5f	3b df		 cmp	 ebx, edi
  04e61	0f 84 03 11 00
	00		 je	 $LN899@Management

  04e67	db 85 54 fd ff
	ff		 fild	 DWORD PTR _iTokenNumber1$225386[ebp]
  04e6d	8b cf		 mov	 ecx, edi
  04e6f	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  04e75	d9 5d f8	 fstp	 DWORD PTR tv8209[ebp]
  04e78	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  04e7e	d9 45 f8	 fld	 DWORD PTR tv8209[ebp]
  04e81	d8 d1		 fcom	 ST(1)
  04e83	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  04e89	df e0		 fnstsw	 ax
  04e8b	dd d9		 fstp	 ST(1)
  04e8d	f6 c4 41	 test	 ah, 65			; 00000041H
  04e90	75 1f		 jne	 SHORT $LN157@Management

  04e92	d8 a6 a8 22 00
	00		 fsub	 DWORD PTR [esi+8872]
  04e98	83 ec 08	 sub	 esp, 8
  04e9b	dd 1c 24	 fstp	 QWORD PTR [esp]
  04e9e	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@HGJOLEGA@?$FLCredit?$FN?3?5Error?5you?5don?$GAt?5have?5?$CF@
  04ea3	53		 push	 ebx
  04ea4	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  04ea9	83 c4 10	 add	 esp, 16			; 00000010H

  04eac	e9 b9 10 00 00	 jmp	 $LN899@Management
$LN157@Management:

  04eb1	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]

  04eb7	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR _iTokenNumber1$225386[ebp]
  04ebd	d8 e1		 fsub	 ST(0), ST(1)
  04ebf	83 c1 77	 add	 ecx, 119		; 00000077H
  04ec2	51		 push	 ecx
  04ec3	50		 push	 eax
  04ec4	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  04eca	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EJECHMEG@?$FLCredit?$FN?3?5Succesed?5added?5?$CFd?5Cred@
  04ecf	53		 push	 ebx
  04ed0	d8 81 31 22 00
	00		 fadd	 DWORD PTR [ecx+8753]
  04ed6	d9 99 31 22 00
	00		 fstp	 DWORD PTR [ecx+8753]
  04edc	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  04ee1	8b 8d 54 fd ff
	ff		 mov	 ecx, DWORD PTR _iTokenNumber1$225386[ebp]
  04ee7	83 c6 77	 add	 esi, 119		; 00000077H
  04eea	56		 push	 esi
  04eeb	51		 push	 ecx
  04eec	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@INDNBOFD@?$FLCredit?$FN?3?5You?5have?5sent?5?$CFd?5credi@
  04ef1	57		 push	 edi
  04ef2	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  04ef7	53		 push	 ebx
  04ef8	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

  04efd	57		 push	 edi
  04efe	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  04f03	83 c4 28	 add	 esp, 40			; 00000028H

  04f06	e9 5f 10 00 00	 jmp	 $LN899@Management
$LN156@Management:

  04f0b	6a 00		 push	 0
  04f0d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f12	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f17	84 c0		 test	 al, al
  04f19	0f 85 fc 00 00
	00		 jne	 $LN154@Management
  04f1f	6a 17		 push	 23			; 00000017H
  04f21	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f26	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f2b	84 c0		 test	 al, al
  04f2d	0f 85 e8 00 00
	00		 jne	 $LN154@Management
  04f33	6a 24		 push	 36			; 00000024H
  04f35	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f3a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f3f	84 c0		 test	 al, al
  04f41	0f 85 d4 00 00
	00		 jne	 $LN154@Management
  04f47	6a 20		 push	 32			; 00000020H
  04f49	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f4e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f53	84 c0		 test	 al, al
  04f55	0f 85 c0 00 00
	00		 jne	 $LN154@Management
  04f5b	6a 21		 push	 33			; 00000021H
  04f5d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f62	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f67	84 c0		 test	 al, al
  04f69	0f 85 ac 00 00
	00		 jne	 $LN154@Management
  04f6f	6a 22		 push	 34			; 00000022H
  04f71	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f76	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f7b	84 c0		 test	 al, al
  04f7d	0f 85 98 00 00
	00		 jne	 $LN154@Management
  04f83	6a 36		 push	 54			; 00000036H
  04f85	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f8a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04f8f	84 c0		 test	 al, al
  04f91	0f 85 84 00 00
	00		 jne	 $LN154@Management
  04f97	6a 40		 push	 64			; 00000040H
  04f99	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04f9e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04fa3	84 c0		 test	 al, al
  04fa5	75 74		 jne	 SHORT $LN154@Management
  04fa7	6a 30		 push	 48			; 00000030H
  04fa9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04fae	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04fb3	84 c0		 test	 al, al
  04fb5	75 64		 jne	 SHORT $LN154@Management
  04fb7	6a 31		 push	 49			; 00000031H
  04fb9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04fbe	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04fc3	84 c0		 test	 al, al
  04fc5	75 54		 jne	 SHORT $LN154@Management
  04fc7	6a 43		 push	 67			; 00000043H
  04fc9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04fce	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04fd3	84 c0		 test	 al, al
  04fd5	75 44		 jne	 SHORT $LN154@Management
  04fd7	6a 46		 push	 70			; 00000046H
  04fd9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04fde	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04fe3	84 c0		 test	 al, al
  04fe5	75 34		 jne	 SHORT $LN154@Management
  04fe7	6a 4e		 push	 78			; 0000004eH
  04fe9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04fee	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  04ff3	84 c0		 test	 al, al
  04ff5	75 24		 jne	 SHORT $LN154@Management
  04ff7	6a 4f		 push	 79			; 0000004fH
  04ff9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  04ffe	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05003	84 c0		 test	 al, al
  05005	75 14		 jne	 SHORT $LN154@Management
  05007	6a 51		 push	 81			; 00000051H
  05009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0500e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05013	84 c0		 test	 al, al
  05015	0f 84 4f 0f 00
	00		 je	 $LN899@Management
$LN154@Management:

  0501b	8b cf		 mov	 ecx, edi
  0501d	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  05022	8b f0		 mov	 esi, eax

  05024	8b cf		 mov	 ecx, edi
  05026	89 75 f8	 mov	 DWORD PTR _TargetLogin$225400[ebp], esi
  05029	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  0502e	89 85 58 fd ff
	ff		 mov	 DWORD PTR _TargetPass$225401[ebp], eax

  05034	85 f6		 test	 esi, esi
  05036	0f 84 2e 0f 00
	00		 je	 $LN899@Management

  0503c	85 c0		 test	 eax, eax
  0503e	0f 84 26 0f 00
	00		 je	 $LN899@Management

  05044	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0504a	be b0 36 00 00	 mov	 esi, 14000		; 000036b0H
  0504f	81 c7 6c a7 40
	09		 add	 edi, 155232108		; 0940a76cH
$LL151@Management:

  05055	83 7f 98 03	 cmp	 DWORD PTR [edi-104], 3
  05059	7c 6e		 jl	 SHORT $LN150@Management

  0505b	8a 17		 mov	 dl, BYTE PTR [edi]
  0505d	8b 45 f8	 mov	 eax, DWORD PTR _TargetLogin$225400[ebp]
  05060	3a 10		 cmp	 dl, BYTE PTR [eax]
  05062	75 65		 jne	 SHORT $LN150@Management

  05064	8b d0		 mov	 edx, eax
  05066	8b cf		 mov	 ecx, edi
$LL1038@Management:
  05068	8a 01		 mov	 al, BYTE PTR [ecx]
  0506a	3a 02		 cmp	 al, BYTE PTR [edx]
  0506c	75 1a		 jne	 SHORT $LN1039@Management
  0506e	84 c0		 test	 al, al
  05070	74 12		 je	 SHORT $LN1040@Management
  05072	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  05075	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  05078	75 0e		 jne	 SHORT $LN1039@Management
  0507a	83 c1 02	 add	 ecx, 2
  0507d	83 c2 02	 add	 edx, 2
  05080	84 c0		 test	 al, al
  05082	75 e4		 jne	 SHORT $LL1038@Management
$LN1040@Management:
  05084	33 c0		 xor	 eax, eax
  05086	eb 05		 jmp	 SHORT $LN1041@Management
$LN1039@Management:
  05088	1b c0		 sbb	 eax, eax
  0508a	83 d8 ff	 sbb	 eax, -1
$LN1041@Management:
  0508d	85 c0		 test	 eax, eax
  0508f	75 38		 jne	 SHORT $LN150@Management

  05091	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR _TargetPass$225401[ebp]
  05097	8d 4f 16	 lea	 ecx, DWORD PTR [edi+22]
  0509a	8d 9b 00 00 00
	00		 npad	 6
$LL1042@Management:
  050a0	8a 01		 mov	 al, BYTE PTR [ecx]
  050a2	3a 02		 cmp	 al, BYTE PTR [edx]
  050a4	75 1a		 jne	 SHORT $LN1043@Management
  050a6	84 c0		 test	 al, al
  050a8	74 12		 je	 SHORT $LN1044@Management
  050aa	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  050ad	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  050b0	75 0e		 jne	 SHORT $LN1043@Management
  050b2	83 c1 02	 add	 ecx, 2
  050b5	83 c2 02	 add	 edx, 2
  050b8	84 c0		 test	 al, al
  050ba	75 e4		 jne	 SHORT $LL1042@Management
$LN1044@Management:
  050bc	33 c0		 xor	 eax, eax
  050be	eb 05		 jmp	 SHORT $LN1045@Management
$LN1043@Management:
  050c0	1b c0		 sbb	 eax, eax
  050c2	83 d8 ff	 sbb	 eax, -1
$LN1045@Management:
  050c5	85 c0		 test	 eax, eax
  050c7	74 18		 je	 SHORT $LN965@Management
$LN150@Management:

  050c9	46		 inc	 esi
  050ca	81 c7 50 2b 00
	00		 add	 edi, 11088		; 00002b50H
  050d0	81 fe 98 3a 00
	00		 cmp	 esi, 15000		; 00003a98H
  050d6	0f 8c 79 ff ff
	ff		 jl	 $LL151@Management

  050dc	e9 89 0e 00 00	 jmp	 $LN899@Management
$LN965@Management:

  050e1	53		 push	 ebx
  050e2	56		 push	 esi
  050e3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_AccountSecurity@@3VCAccountSecurity@@A ; g_AccountSecurity
  050e8	e8 00 00 00 00	 call	 ?CheckDisconnectFriend@CAccountSecurity@@QAE_NHH@Z ; CAccountSecurity::CheckDisconnectFriend
  050ed	3c 01		 cmp	 al, 1
  050ef	0f 85 75 0e 00
	00		 jne	 $LN899@Management

  050f5	6a 00		 push	 0
  050f7	56		 push	 esi
  050f8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectZt@@3VConnectZt@@A ; g_ConnectZt
  050fd	e8 00 00 00 00	 call	 ?SendClose@ConnectZt@@QAEXHH@Z ; ConnectZt::SendClose

  05102	e9 63 0e 00 00	 jmp	 $LN899@Management
$LN143@Management:

  05107	8b cf		 mov	 ecx, edi
  05109	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0510e	8b cf		 mov	 ecx, edi
  05110	89 45 f8	 mov	 DWORD PTR _TargetName$225414[ebp], eax
  05113	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05118	83 7d f8 00	 cmp	 DWORD PTR _TargetName$225414[ebp], 0
  0511c	0f 84 48 0e 00
	00		 je	 $LN899@Management

  05122	85 c0		 test	 eax, eax
  05124	0f 88 40 0e 00
	00		 js	 $LN899@Management

  0512a	8b 4d f8	 mov	 ecx, DWORD PTR _TargetName$225414[ebp]
  0512d	51		 push	 ecx
  0512e	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05133	83 c4 04	 add	 esp, 4

  05136	83 f8 ff	 cmp	 eax, -1
  05139	0f 84 2b 0e 00
	00		 je	 $LN899@Management

  0513f	3b d8		 cmp	 ebx, eax
  05141	0f 84 23 0e 00
	00		 je	 $LN899@Management

  05147	50		 push	 eax
  05148	56		 push	 esi
  05149	b9 00 00 00 00	 mov	 ecx, OFFSET ?gBrotherhood@@3VBrotherhood@@A ; gBrotherhood
  0514e	e8 00 00 00 00	 call	 ?Teleport@Brotherhood@@QAEXPAUOBJECTSTRUCT@@H@Z ; Brotherhood::Teleport

  05153	e9 12 0e 00 00	 jmp	 $LN899@Management
$LN138@Management:

  05158	8b cf		 mov	 ecx, edi
  0515a	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0515f	85 c0		 test	 eax, eax
  05161	0f 84 03 0e 00
	00		 je	 $LN899@Management

  05167	50		 push	 eax
  05168	53		 push	 ebx
  05169	b9 00 00 00 00	 mov	 ecx, OFFSET ?gBrotherhood@@3VBrotherhood@@A ; gBrotherhood
  0516e	e8 00 00 00 00	 call	 ?UserAddedBrother@Brotherhood@@QAEXHPAD@Z ; Brotherhood::UserAddedBrother

  05173	e9 f2 0d 00 00	 jmp	 $LN899@Management
$LN136@Management:

  05178	53		 push	 ebx
  05179	b9 00 00 00 00	 mov	 ecx, OFFSET ?gBrotherhood@@3VBrotherhood@@A ; gBrotherhood
  0517e	e8 00 00 00 00	 call	 ?UserExitBrother@Brotherhood@@QAEXH@Z ; Brotherhood::UserExitBrother

  05183	e9 e2 0d 00 00	 jmp	 $LN899@Management
$LN135@Management:

  05188	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  0518e	83 fe 08	 cmp	 esi, 8
  05191	74 09		 je	 SHORT $LN133@Management
  05193	83 fe 20	 cmp	 esi, 32			; 00000020H
  05196	0f 85 ce 0d 00
	00		 jne	 $LN899@Management
$LN133@Management:

  0519c	6a 09		 push	 9
  0519e	53		 push	 ebx
  0519f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  051a4	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  051a9	84 c0		 test	 al, al

  051ab	0f 84 b9 0d 00
	00		 je	 $LN899@Management

  051b1	8b cf		 mov	 ecx, edi
  051b3	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  051b8	8b cf		 mov	 ecx, edi
  051ba	89 45 f8	 mov	 DWORD PTR _TargetName$225429[ebp], eax
  051bd	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  051c2	8b f0		 mov	 esi, eax

  051c4	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225429[ebp]
  051c7	89 b5 58 fd ff
	ff		 mov	 DWORD PTR _iTokenNumber1$225430[ebp], esi
  051cd	85 c0		 test	 eax, eax
  051cf	0f 84 95 0d 00
	00		 je	 $LN899@Management

  051d5	85 f6		 test	 esi, esi
  051d7	0f 88 8d 0d 00
	00		 js	 $LN899@Management

  051dd	50		 push	 eax
  051de	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  051e3	8b f8		 mov	 edi, eax
  051e5	83 c4 04	 add	 esp, 4

  051e8	83 ff ff	 cmp	 edi, -1
  051eb	0f 84 79 0d 00
	00		 je	 $LN899@Management

  051f1	8d 56 ff	 lea	 edx, DWORD PTR [esi-1]
  051f4	81 fa fe ff 00
	00		 cmp	 edx, 65534		; 0000fffeH
  051fa	0f 87 6a 0d 00
	00		 ja	 $LN899@Management

  05200	db 85 58 fd ff
	ff		 fild	 DWORD PTR _iTokenNumber1$225430[ebp]
  05206	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0520c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  05212	57		 push	 edi
  05213	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  05218	dc 80 00 23 00
	00		 fadd	 QWORD PTR [eax+8960]
  0521e	dd 98 00 23 00
	00		 fstp	 QWORD PTR [eax+8960]
  05224	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

  05229	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225429[ebp]
  0522c	56		 push	 esi
  0522d	50		 push	 eax
  0522e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JEENLHOF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinC?3?5?$CFd?$AA@
  05233	53		 push	 ebx
  05234	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  05239	56		 push	 esi
  0523a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IDIMBHPE@?$FLRECV?$FN?3?5WcoinC?3?5?$CL?$CFd?$AA@
  0523f	57		 push	 edi
  05240	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  05245	83 c4 1c	 add	 esp, 28			; 0000001cH

  05248	e9 1d 0d 00 00	 jmp	 $LN899@Management
$LN126@Management:

  0524d	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05253	83 fe 08	 cmp	 esi, 8
  05256	74 09		 je	 SHORT $LN124@Management
  05258	83 fe 20	 cmp	 esi, 32			; 00000020H
  0525b	0f 85 09 0d 00
	00		 jne	 $LN899@Management
$LN124@Management:

  05261	6a 09		 push	 9
  05263	53		 push	 ebx
  05264	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  05269	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  0526e	84 c0		 test	 al, al

  05270	0f 84 f4 0c 00
	00		 je	 $LN899@Management

  05276	8b cf		 mov	 ecx, edi
  05278	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  0527d	8b cf		 mov	 ecx, edi
  0527f	89 45 f8	 mov	 DWORD PTR _TargetName$225444[ebp], eax
  05282	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  05287	8b f0		 mov	 esi, eax

  05289	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225444[ebp]
  0528c	89 b5 58 fd ff
	ff		 mov	 DWORD PTR _iTokenNumber1$225445[ebp], esi
  05292	85 c0		 test	 eax, eax
  05294	0f 84 d0 0c 00
	00		 je	 $LN899@Management

  0529a	85 f6		 test	 esi, esi
  0529c	0f 88 c8 0c 00
	00		 js	 $LN899@Management

  052a2	50		 push	 eax
  052a3	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  052a8	8b f8		 mov	 edi, eax
  052aa	83 c4 04	 add	 esp, 4

  052ad	83 ff ff	 cmp	 edi, -1
  052b0	0f 84 b4 0c 00
	00		 je	 $LN899@Management

  052b6	8d 4e ff	 lea	 ecx, DWORD PTR [esi-1]
  052b9	81 f9 fe ff 00
	00		 cmp	 ecx, 65534		; 0000fffeH
  052bf	0f 87 a5 0c 00
	00		 ja	 $LN899@Management

  052c5	db 85 58 fd ff
	ff		 fild	 DWORD PTR _iTokenNumber1$225445[ebp]
  052cb	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  052d1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  052d7	57		 push	 edi
  052d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  052dd	dc 80 f8 22 00
	00		 fadd	 QWORD PTR [eax+8952]
  052e3	dd 98 f8 22 00
	00		 fstp	 QWORD PTR [eax+8952]
  052e9	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

  052ee	8b 55 f8	 mov	 edx, DWORD PTR _TargetName$225444[ebp]
  052f1	56		 push	 esi
  052f2	52		 push	 edx
  052f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BBAPMHNA@?$FLSEND?$FN?3?5Name?3?5?$CFs?5WcoinP?3?5?$CFd?$AA@
  052f8	53		 push	 ebx
  052f9	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  052fe	56		 push	 esi
  052ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NFLKJBKH@?$FLRECV?$FN?3?5WcoinP?3?5?$CL?$CFd?$AA@
  05304	57		 push	 edi
  05305	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0530a	83 c4 1c	 add	 esp, 28			; 0000001cH

  0530d	e9 58 0c 00 00	 jmp	 $LN899@Management
$LN117@Management:

  05312	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05318	83 fe 08	 cmp	 esi, 8
  0531b	74 09		 je	 SHORT $LN115@Management
  0531d	83 fe 20	 cmp	 esi, 32			; 00000020H
  05320	0f 85 44 0c 00
	00		 jne	 $LN899@Management
$LN115@Management:

  05326	6a 09		 push	 9
  05328	53		 push	 ebx
  05329	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  0532e	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  05333	84 c0		 test	 al, al

  05335	0f 84 2f 0c 00
	00		 je	 $LN899@Management

  0533b	8b cf		 mov	 ecx, edi
  0533d	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  05342	8b cf		 mov	 ecx, edi
  05344	89 45 f8	 mov	 DWORD PTR _TargetName$225459[ebp], eax
  05347	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  0534c	8b f0		 mov	 esi, eax

  0534e	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225459[ebp]
  05351	89 b5 58 fd ff
	ff		 mov	 DWORD PTR _iTokenNumber1$225460[ebp], esi
  05357	85 c0		 test	 eax, eax
  05359	0f 84 0b 0c 00
	00		 je	 $LN899@Management

  0535f	85 f6		 test	 esi, esi
  05361	0f 88 03 0c 00
	00		 js	 $LN899@Management

  05367	50		 push	 eax
  05368	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  0536d	8b f8		 mov	 edi, eax
  0536f	83 c4 04	 add	 esp, 4

  05372	83 ff ff	 cmp	 edi, -1
  05375	0f 84 ef 0b 00
	00		 je	 $LN899@Management

  0537b	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  0537e	3d fe ff 00 00	 cmp	 eax, 65534		; 0000fffeH
  05383	0f 87 e1 0b 00
	00		 ja	 $LN899@Management

  05389	db 85 58 fd ff
	ff		 fild	 DWORD PTR _iTokenNumber1$225460[ebp]
  0538f	8b c7		 mov	 eax, edi
  05391	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  05397	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  0539d	57		 push	 edi
  0539e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  053a3	dc 80 08 23 00
	00		 fadd	 QWORD PTR [eax+8968]
  053a9	dd 98 08 23 00
	00		 fstp	 QWORD PTR [eax+8968]
  053af	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

  053b4	8b 4d f8	 mov	 ecx, DWORD PTR _TargetName$225459[ebp]
  053b7	56		 push	 esi
  053b8	51		 push	 ecx
  053b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OHLNFCPF@?$FLSEND?$FN?3?5Name?3?5?$CFs?5Goblin?3?5?$CFd?$AA@
  053be	53		 push	 ebx
  053bf	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  053c4	56		 push	 esi
  053c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JOEIPHHF@?$FLRECV?$FN?3?5Goblin?3?5?$CL?$CFd?$AA@
  053ca	57		 push	 edi
  053cb	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  053d0	83 c4 1c	 add	 esp, 28			; 0000001cH

  053d3	e9 92 0b 00 00	 jmp	 $LN899@Management
$LN108@Management:

  053d8	8b cf		 mov	 ecx, edi
  053da	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  053df	85 c0		 test	 eax, eax
  053e1	0f 84 83 0b 00
	00		 je	 $LN899@Management

  053e7	50		 push	 eax
  053e8	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  053ed	83 c4 04	 add	 esp, 4

  053f0	83 f8 ff	 cmp	 eax, -1
  053f3	0f 84 71 0b 00
	00		 je	 $LN899@Management

  053f9	50		 push	 eax
  053fa	53		 push	 ebx
  053fb	b9 00 00 00 00	 mov	 ecx, OFFSET ?gBrotherhood@@3VBrotherhood@@A ; gBrotherhood
  05400	e8 00 00 00 00	 call	 ?NewAddBrother@Brotherhood@@QAE_NHH@Z ; Brotherhood::NewAddBrother

  05405	e9 60 0b 00 00	 jmp	 $LN899@Management
$LN105@Management:

  0540a	53		 push	 ebx
  0540b	b9 00 00 00 00	 mov	 ecx, OFFSET ?BMQuest@@3VcBMQuest@@A ; BMQuest
  05410	e8 00 00 00 00	 call	 ?CharacterInformation@cBMQuest@@QAEXH@Z ; cBMQuest::CharacterInformation

  05415	e9 50 0b 00 00	 jmp	 $LN899@Management
$LN104@Management:

  0541a	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05420	83 fe 08	 cmp	 esi, 8
  05423	74 09		 je	 SHORT $LN102@Management
  05425	83 fe 20	 cmp	 esi, 32			; 00000020H
  05428	0f 85 3c 0b 00
	00		 jne	 $LN899@Management
$LN102@Management:

  0542e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  05433	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  05438	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  0543d	8d 49 00	 npad	 3
$LL1081@Management:

  05440	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  05445	7c 6e		 jl	 SHORT $LN100@Management

  05447	83 bc 06 98 22
	00 00 00	 cmp	 DWORD PTR [esi+eax+8856], 0
  0544f	74 25		 je	 SHORT $LN97@Management

  05451	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  05455	52		 push	 edx
  05456	e8 00 00 00 00	 call	 ?GJPUserClose@@YAXPAD@Z	; GJPUserClose

  0545b	57		 push	 edi
  0545c	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel

  05461	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  05466	83 c4 08	 add	 esp, 8
  05469	c7 84 06 98 22
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+8856], 0
  05474	eb 3a		 jmp	 SHORT $LN1138@Management
$LN97@Management:

  05476	80 bc 06 d4 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10452], 0
  0547e	74 23		 je	 SHORT $LN95@Management

  05480	8d 4c 06 6c	 lea	 ecx, DWORD PTR [esi+eax+108]
  05484	51		 push	 ecx
  05485	e8 00 00 00 00	 call	 ?GJPUserClose@@YAXPAD@Z	; GJPUserClose

  0548a	57		 push	 edi
  0548b	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel

  05490	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  05496	83 c4 08	 add	 esp, 8
  05499	c6 84 16 d4 28
	00 00 00	 mov	 BYTE PTR [esi+edx+10452], 0

  054a1	eb 0d		 jmp	 SHORT $LN1138@Management
$LN95@Management:

  054a3	6a 00		 push	 0
  054a5	57		 push	 edi
  054a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectZt@@3VConnectZt@@A ; g_ConnectZt
  054ab	e8 00 00 00 00	 call	 ?SendClose@ConnectZt@@QAEXHH@Z ; ConnectZt::SendClose
$LN1138@Management:
  054b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN100@Management:

  054b5	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  054bb	47		 inc	 edi
  054bc	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  054c2	0f 8c 78 ff ff
	ff		 jl	 $LL1081@Management

  054c8	e9 9d 0a 00 00	 jmp	 $LN899@Management
$LN93@Management:

  054cd	80 be ed 28 00
	00 00		 cmp	 BYTE PTR [esi+10477], 0
  054d4	0f 84 90 0a 00
	00		 je	 $LN899@Management

  054da	53		 push	 ebx
  054db	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Marriage@@3VCMarriage@@A ; g_Marriage
  054e0	e8 00 00 00 00	 call	 ?GDDelete@CMarriage@@QAEXH@Z ; CMarriage::GDDelete

  054e5	e9 80 0a 00 00	 jmp	 $LN899@Management
$LN91@Management:

  054ea	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  054f1	0f 87 73 0a 00
	00		 ja	 $LN899@Management

  054f7	8b cf		 mov	 ecx, edi
  054f9	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  054fe	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  05501	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  05507	0f 87 5d 0a 00
	00		 ja	 $LN899@Management

  0550d	50		 push	 eax
  0550e	53		 push	 ebx
  0550f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  05514	e8 00 00 00 00	 call	 ?sendcreateonbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendcreateonbank
  05519	5f		 pop	 edi
  0551a	5e		 pop	 esi

  0551b	b8 01 00 00 00	 mov	 eax, 1
  05520	5b		 pop	 ebx

  05521	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  05524	33 cd		 xor	 ecx, ebp
  05526	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0552b	8b e5		 mov	 esp, ebp
  0552d	5d		 pop	 ebp
  0552e	c2 0c 00	 ret	 12			; 0000000cH
$LN87@Management:

  05531	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  05538	0f 87 2c 0a 00
	00		 ja	 $LN899@Management

  0553e	8b cf		 mov	 ecx, edi
  05540	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05545	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  05548	81 fa 8b 00 00
	00		 cmp	 edx, 139		; 0000008bH
  0554e	0f 87 16 0a 00
	00		 ja	 $LN899@Management

  05554	50		 push	 eax
  05555	53		 push	 ebx
  05556	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  0555b	e8 00 00 00 00	 call	 ?recvcreateonbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvcreateonbank
  05560	5f		 pop	 edi
  05561	5e		 pop	 esi

  05562	b8 01 00 00 00	 mov	 eax, 1
  05567	5b		 pop	 ebx

  05568	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0556b	33 cd		 xor	 ecx, ebp
  0556d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  05572	8b e5		 mov	 esp, ebp
  05574	5d		 pop	 ebp
  05575	c2 0c 00	 ret	 12			; 0000000cH
$LN83@Management:

  05578	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  0557f	0f 87 e5 09 00
	00		 ja	 $LN899@Management

  05585	8b cf		 mov	 ecx, edi
  05587	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0558c	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  0558f	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  05595	0f 87 cf 09 00
	00		 ja	 $LN899@Management

  0559b	50		 push	 eax
  0559c	53		 push	 ebx
  0559d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  055a2	e8 00 00 00 00	 call	 ?excreateon@JewelsBank@@QAEXHH@Z ; JewelsBank::excreateon
  055a7	5f		 pop	 edi
  055a8	5e		 pop	 esi

  055a9	b8 01 00 00 00	 mov	 eax, 1
  055ae	5b		 pop	 ebx

  055af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  055b2	33 cd		 xor	 ecx, ebp
  055b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  055b9	8b e5		 mov	 esp, ebp
  055bb	5d		 pop	 ebp
  055bc	c2 0c 00	 ret	 12			; 0000000cH
$LN79@Management:
  055bf	5f		 pop	 edi

  055c0	c6 86 f9 28 00
	00 00		 mov	 BYTE PTR [esi+10489], 0
  055c7	5e		 pop	 esi

  055c8	b8 01 00 00 00	 mov	 eax, 1
  055cd	5b		 pop	 ebx

  055ce	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  055d1	33 cd		 xor	 ecx, ebp
  055d3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  055d8	8b e5		 mov	 esp, ebp
  055da	5d		 pop	 ebp
  055db	c2 0c 00	 ret	 12			; 0000000cH
$LN78@Management:
  055de	5f		 pop	 edi

  055df	c6 86 f9 28 00
	00 01		 mov	 BYTE PTR [esi+10489], 1
  055e6	5e		 pop	 esi

  055e7	b8 01 00 00 00	 mov	 eax, 1
  055ec	5b		 pop	 ebx

  055ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  055f0	33 cd		 xor	 ecx, ebp
  055f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  055f7	8b e5		 mov	 esp, ebp
  055f9	5d		 pop	 ebp
  055fa	c2 0c 00	 ret	 12			; 0000000cH
$LN77@Management:

  055fd	6a 32		 push	 50			; 00000032H
  055ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05604	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05609	84 c0		 test	 al, al
  0560b	0f 85 4a 01 00
	00		 jne	 $LN75@Management
  05611	6a 2e		 push	 46			; 0000002eH
  05613	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05618	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0561d	84 c0		 test	 al, al
  0561f	0f 85 36 01 00
	00		 jne	 $LN75@Management
  05625	6a 36		 push	 54			; 00000036H
  05627	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0562c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05631	84 c0		 test	 al, al
  05633	0f 85 22 01 00
	00		 jne	 $LN75@Management
  05639	6a 00		 push	 0
  0563b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05640	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05645	84 c0		 test	 al, al
  05647	0f 85 0e 01 00
	00		 jne	 $LN75@Management
  0564d	6a 37		 push	 55			; 00000037H
  0564f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05654	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05659	84 c0		 test	 al, al
  0565b	0f 85 fa 00 00
	00		 jne	 $LN75@Management
  05661	6a 38		 push	 56			; 00000038H
  05663	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05668	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0566d	84 c0		 test	 al, al
  0566f	0f 85 e6 00 00
	00		 jne	 $LN75@Management
  05675	6a 30		 push	 48			; 00000030H
  05677	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0567c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05681	84 c0		 test	 al, al
  05683	0f 85 d2 00 00
	00		 jne	 $LN75@Management
  05689	6a 31		 push	 49			; 00000031H
  0568b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05690	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05695	84 c0		 test	 al, al
  05697	0f 85 be 00 00
	00		 jne	 $LN75@Management
  0569d	6a 3b		 push	 59			; 0000003bH
  0569f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  056a4	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  056a9	84 c0		 test	 al, al
  056ab	0f 85 aa 00 00
	00		 jne	 $LN75@Management
  056b1	6a 40		 push	 64			; 00000040H
  056b3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  056b8	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  056bd	84 c0		 test	 al, al
  056bf	0f 85 96 00 00
	00		 jne	 $LN75@Management
  056c5	6a 43		 push	 67			; 00000043H
  056c7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  056cc	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  056d1	84 c0		 test	 al, al
  056d3	0f 85 82 00 00
	00		 jne	 $LN75@Management
  056d9	6a 42		 push	 66			; 00000042H
  056db	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  056e0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  056e5	84 c0		 test	 al, al
  056e7	75 72		 jne	 SHORT $LN75@Management
  056e9	6a 46		 push	 70			; 00000046H
  056eb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  056f0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  056f5	84 c0		 test	 al, al
  056f7	75 62		 jne	 SHORT $LN75@Management
  056f9	6a 48		 push	 72			; 00000048H
  056fb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05700	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05705	84 c0		 test	 al, al
  05707	75 52		 jne	 SHORT $LN75@Management
  05709	6a 4e		 push	 78			; 0000004eH
  0570b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05710	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05715	84 c0		 test	 al, al
  05717	75 42		 jne	 SHORT $LN75@Management
  05719	6a 4f		 push	 79			; 0000004fH
  0571b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05720	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05725	84 c0		 test	 al, al
  05727	75 32		 jne	 SHORT $LN75@Management
  05729	6a 51		 push	 81			; 00000051H
  0572b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05730	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05735	84 c0		 test	 al, al
  05737	75 22		 jne	 SHORT $LN75@Management
  05739	6a 3e		 push	 62			; 0000003eH
  0573b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05740	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05745	84 c0		 test	 al, al
  05747	75 12		 jne	 SHORT $LN75@Management
  05749	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0574e	e8 00 00 00 00	 call	 ?GetCustom@CZtLicense@@QAEHXZ ; CZtLicense::GetCustom
  05753	85 c0		 test	 eax, eax
  05755	0f 84 0f 08 00
	00		 je	 $LN899@Management
$LN75@Management:

  0575b	80 3d 1d 00 00
	00 00		 cmp	 BYTE PTR ?ZtConfig@@3VcZtConfigs@@A+29, 0
  05762	0f 84 02 08 00
	00		 je	 $LN899@Management

  05768	53		 push	 ebx
  05769	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtUser@@3VZtUser@@A ; g_ZtUser
  0576e	e8 00 00 00 00	 call	 ?InSafeZone@ZtUser@@QAE_NH@Z ; ZtUser::InSafeZone
  05773	3c 01		 cmp	 al, 1
  05775	0f 85 ef 07 00
	00		 jne	 $LN899@Management

  0577b	8d 85 40 fd ff
	ff		 lea	 eax, DWORD PTR _pMsg$225512[ebp]
  05781	ba 14 00 00 00	 mov	 edx, 20			; 00000014H
  05786	53		 push	 ebx
  05787	50		 push	 eax
  05788	66 89 95 44 fd
	ff ff		 mov	 WORD PTR _pMsg$225512[ebp+4], dx
  0578f	e8 00 00 00 00	 call	 ?NewShopRecv@@YAXPAUCG_NEW_CASH_SHOP@@H@Z ; NewShopRecv
  05794	83 c4 08	 add	 esp, 8
  05797	5f		 pop	 edi
  05798	5e		 pop	 esi

  05799	b8 01 00 00 00	 mov	 eax, 1
  0579e	5b		 pop	 ebx

  0579f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  057a2	33 cd		 xor	 ecx, ebp
  057a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  057a9	8b e5		 mov	 esp, ebp
  057ab	5d		 pop	 ebp
  057ac	c2 0c 00	 ret	 12			; 0000000cH
$LN72@Management:

  057af	6a 00		 push	 0
  057b1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_DungeonSiege@@3VCDungeonSiege@@A ; g_DungeonSiege
  057b6	e8 00 00 00 00	 call	 ?CheckStatus@CDungeonSiege@@QAE_NH@Z ; CDungeonSiege::CheckStatus
  057bb	84 c0		 test	 al, al
  057bd	0f 84 a7 07 00
	00		 je	 $LN899@Management

  057c3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_DungeonSiege@@3VCDungeonSiege@@A ; g_DungeonSiege
  057c8	e8 00 00 00 00	 call	 ?ProcessStatusStart@CDungeonSiege@@QAEXXZ ; CDungeonSiege::ProcessStatusStart

  057cd	e9 98 07 00 00	 jmp	 $LN899@Management
$LN70@Management:

  057d2	8b 0e		 mov	 ecx, DWORD PTR [esi]
  057d4	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MLCOMLB@?$FLDEBUG?$FN?5Test?5China?5Command?$AA@
  057d9	51		 push	 ecx
  057da	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  057df	83 c4 08	 add	 esp, 8

  057e2	e9 83 07 00 00	 jmp	 $LN899@Management
$LN69@Management:

  057e7	8b 86 0c 02 00
	00		 mov	 eax, DWORD PTR [esi+524]
  057ed	83 f8 08	 cmp	 eax, 8
  057f0	74 09		 je	 SHORT $LN67@Management
  057f2	83 f8 20	 cmp	 eax, 32			; 00000020H
  057f5	0f 85 6f 07 00
	00		 jne	 $LN899@Management
$LN67@Management:

  057fb	8b cf		 mov	 ecx, edi
  057fd	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  05802	8b f8		 mov	 edi, eax

  05804	85 ff		 test	 edi, edi
  05806	0f 84 5e 07 00
	00		 je	 $LN899@Management

  0580c	57		 push	 edi
  0580d	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05812	83 c4 04	 add	 esp, 4

  05815	83 f8 ff	 cmp	 eax, -1
  05818	0f 84 4c 07 00
	00		 je	 $LN899@Management

  0581e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  05824	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0582a	8b 84 10 8c 28
	00 00		 mov	 eax, DWORD PTR [eax+edx+10380]
  05831	8b 0e		 mov	 ecx, DWORD PTR [esi]
  05833	50		 push	 eax
  05834	57		 push	 edi
  05835	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OMAHHDDI@Name?3?5?$CFs?5HDD?3?5?$CFd?$AA@
  0583a	51		 push	 ecx
  0583b	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  05840	83 c4 10	 add	 esp, 16			; 00000010H

  05843	e9 22 07 00 00	 jmp	 $LN899@Management
$LN64@Management:

  05848	8b 86 0c 02 00
	00		 mov	 eax, DWORD PTR [esi+524]
  0584e	83 f8 08	 cmp	 eax, 8
  05851	74 09		 je	 SHORT $LN62@Management
  05853	83 f8 20	 cmp	 eax, 32			; 00000020H
  05856	0f 85 0e 07 00
	00		 jne	 $LN899@Management
$LN62@Management:

  0585c	6a 0a		 push	 10			; 0000000aH
  0585e	53		 push	 ebx
  0585f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  05864	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  05869	84 c0		 test	 al, al

  0586b	0f 84 f9 06 00
	00		 je	 $LN899@Management

  05871	8b cf		 mov	 ecx, edi
  05873	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05878	8b cf		 mov	 ecx, edi
  0587a	89 45 f8	 mov	 DWORD PTR _type$225529[ebp], eax
  0587d	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05882	8b cf		 mov	 ecx, edi
  05884	89 85 50 fd ff
	ff		 mov	 DWORD PTR _index$225530[ebp], eax
  0588a	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0588f	8b cf		 mov	 ecx, edi
  05891	89 85 60 fd ff
	ff		 mov	 DWORD PTR _ItemLevel$225531[ebp], eax
  05897	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  0589c	8b cf		 mov	 ecx, edi
  0589e	89 85 48 fd ff
	ff		 mov	 DWORD PTR _ItemSkill$225532[ebp], eax
  058a4	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  058a9	8b cf		 mov	 ecx, edi
  058ab	89 85 54 fd ff
	ff		 mov	 DWORD PTR _ItemLuck$225533[ebp], eax
  058b1	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  058b6	8b cf		 mov	 ecx, edi
  058b8	89 85 40 fd ff
	ff		 mov	 DWORD PTR _ItemOpt$225534[ebp], eax
  058be	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  058c3	8b cf		 mov	 ecx, edi
  058c5	89 85 4c fd ff
	ff		 mov	 DWORD PTR _ItemExc$225535[ebp], eax
  058cb	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  058d0	8b cf		 mov	 ecx, edi
  058d2	89 85 58 fd ff
	ff		 mov	 DWORD PTR _ItemAncient$225536[ebp], eax
  058d8	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  058dd	83 7d f8 0f	 cmp	 DWORD PTR _type$225529[ebp], 15 ; 0000000fH
  058e1	8b f8		 mov	 edi, eax
  058e3	0f 87 81 06 00
	00		 ja	 $LN899@Management

  058e9	8b 95 50 fd ff
	ff		 mov	 edx, DWORD PTR _index$225530[ebp]
  058ef	8b 45 f8	 mov	 eax, DWORD PTR _type$225529[ebp]
  058f2	52		 push	 edx
  058f3	50		 push	 eax
  058f4	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  058f9	83 c4 08	 add	 esp, 8

  058fc	83 f8 ff	 cmp	 eax, -1
  058ff	75 17		 jne	 SHORT $LN59@Management

  05901	8b 0e		 mov	 ecx, DWORD PTR [esi]
  05903	6a 01		 push	 1
  05905	51		 push	 ecx
  05906	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LKDMPCOH@?$FLMake?$FN?5no?5item?$AA@
  0590b	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  05910	83 c4 0c	 add	 esp, 12			; 0000000cH
  05913	e9 52 06 00 00	 jmp	 $LN899@Management
$LN59@Management:

  05918	3d 04 1a 00 00	 cmp	 eax, 6660		; 00001a04H
  0591d	74 47		 je	 SHORT $LN57@Management
  0591f	3d 05 1a 00 00	 cmp	 eax, 6661		; 00001a05H
  05924	74 40		 je	 SHORT $LN57@Management

  05926	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0592c	8b d3		 mov	 edx, ebx
  0592e	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  05934	03 ca		 add	 ecx, edx
  05936	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR _ItemAncient$225536[ebp]
  0593c	52		 push	 edx
  0593d	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR _ItemExc$225535[ebp]
  05943	52		 push	 edx
  05944	8b 95 40 fd ff
	ff		 mov	 edx, DWORD PTR _ItemOpt$225534[ebp]
  0594a	53		 push	 ebx
  0594b	52		 push	 edx
  0594c	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _ItemLuck$225533[ebp]
  05952	52		 push	 edx
  05953	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _ItemSkill$225532[ebp]
  05959	52		 push	 edx
  0595a	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _ItemLevel$225531[ebp]
  05960	57		 push	 edi
  05961	e9 37 b0 ff ff	 jmp	 $LN1155@Management
$LN57@Management:

  05966	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR _ItemAncient$225536[ebp]
  0596c	52		 push	 edx
  0596d	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR _ItemExc$225535[ebp]
  05973	52		 push	 edx
  05974	8b 95 40 fd ff
	ff		 mov	 edx, DWORD PTR _ItemOpt$225534[ebp]
  0597a	53		 push	 ebx
  0597b	52		 push	 edx
  0597c	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _ItemLuck$225533[ebp]
  05982	52		 push	 edx
  05983	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _ItemSkill$225532[ebp]
  05989	52		 push	 edx
  0598a	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR _ItemLevel$225531[ebp]
  05990	57		 push	 edi

  05991	e9 6c b0 ff ff	 jmp	 $LN1156@Management
$LN55@Management:

  05996	80 3d ee 00 00
	00 01		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+238, 1
  0599d	0f 85 c7 05 00
	00		 jne	 $LN899@Management
  059a3	6a 01		 push	 1
  059a5	53		 push	 ebx
  059a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  059ab	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  059b0	84 c0		 test	 al, al
  059b2	0f 84 b2 05 00
	00		 je	 $LN899@Management

  059b8	8b cf		 mov	 ecx, edi
  059ba	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  059bf	8b cf		 mov	 ecx, edi
  059c1	89 45 f8	 mov	 DWORD PTR _TargetName$225547[ebp], eax
  059c4	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  059c9	83 7d f8 00	 cmp	 DWORD PTR _TargetName$225547[ebp], 0
  059cd	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iPremiumDay$225548[ebp], eax
  059d3	0f 84 91 05 00
	00		 je	 $LN899@Management
  059d9	85 c0		 test	 eax, eax
  059db	0f 8e 89 05 00
	00		 jle	 $LN899@Management

  059e1	8b 4d f8	 mov	 ecx, DWORD PTR _TargetName$225547[ebp]
  059e4	51		 push	 ecx
  059e5	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  059ea	83 c4 04	 add	 esp, 4
  059ed	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iTargetIndex$225550[ebp], eax

  059f3	83 f8 ff	 cmp	 eax, -1
  059f6	74 70		 je	 SHORT $LN52@Management

  059f8	8b c8		 mov	 ecx, eax

  059fa	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _iPremiumDay$225548[ebp]
  05a00	8b f9		 mov	 edi, ecx
  05a02	69 c0 80 51 01
	00		 imul	 eax, 86400		; 00015180H
  05a08	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  05a0e	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  05a14	51		 push	 ecx
  05a15	01 87 b8 22 00
	00		 add	 DWORD PTR [edi+8888], eax
  05a1b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  05a20	c7 87 bc 22 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+8892], 1
  05a2a	e8 00 00 00 00	 call	 ?InfoMessage@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::InfoMessage

  05a2f	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _iTargetIndex$225550[ebp]
  05a35	52		 push	 edx
  05a36	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

  05a3b	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR _iTargetIndex$225550[ebp]
  05a41	83 c4 04	 add	 esp, 4
  05a44	50		 push	 eax
  05a45	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  05a4a	e8 00 00 00 00	 call	 ?UserBuff@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::UserBuff

  05a4f	8b 8f bc 22 00
	00		 mov	 ecx, DWORD PTR [edi+8892]
  05a55	51		 push	 ecx
$LN1154@Management:
  05a56	83 c6 77	 add	 esi, 119		; 00000077H
  05a59	56		 push	 esi
  05a5a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EKAPJFKL@?$FL?$CFs?$FN?5vip?5level?3?5?$CFd?$AA@
  05a5f	53		 push	 ebx
  05a60	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  05a65	83 c4 10	 add	 esp, 16			; 00000010H
$LN52@Management:

  05a68	5f		 pop	 edi
  05a69	5e		 pop	 esi
  05a6a	b8 01 00 00 00	 mov	 eax, 1
  05a6f	5b		 pop	 ebx

  05a70	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  05a73	33 cd		 xor	 ecx, ebp
  05a75	e8 00 00 00 00	 call	 @__security_check_cookie@4
  05a7a	8b e5		 mov	 esp, ebp
  05a7c	5d		 pop	 ebp
  05a7d	c2 0c 00	 ret	 12			; 0000000cH
$LN51@Management:

  05a80	80 3d ee 00 00
	00 01		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+238, 1
  05a87	0f 85 dd 04 00
	00		 jne	 $LN899@Management
  05a8d	6a 01		 push	 1
  05a8f	53		 push	 ebx
  05a90	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  05a95	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  05a9a	84 c0		 test	 al, al
  05a9c	0f 84 c8 04 00
	00		 je	 $LN899@Management

  05aa2	8b cf		 mov	 ecx, edi
  05aa4	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  05aa9	8b cf		 mov	 ecx, edi
  05aab	89 45 f8	 mov	 DWORD PTR _TargetName$225556[ebp], eax
  05aae	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05ab3	83 7d f8 00	 cmp	 DWORD PTR _TargetName$225556[ebp], 0
  05ab7	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iPremiumDay$225557[ebp], eax
  05abd	0f 84 a7 04 00
	00		 je	 $LN899@Management
  05ac3	85 c0		 test	 eax, eax
  05ac5	0f 8e 9f 04 00
	00		 jle	 $LN899@Management

  05acb	8b 55 f8	 mov	 edx, DWORD PTR _TargetName$225556[ebp]
  05ace	52		 push	 edx
  05acf	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05ad4	83 c4 04	 add	 esp, 4
  05ad7	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iTargetIndex$225559[ebp], eax

  05add	83 f8 ff	 cmp	 eax, -1
  05ae0	74 86		 je	 SHORT $LN52@Management

  05ae2	8b c8		 mov	 ecx, eax

  05ae4	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _iPremiumDay$225557[ebp]
  05aea	8b f9		 mov	 edi, ecx
  05aec	69 c0 80 51 01
	00		 imul	 eax, 86400		; 00015180H
  05af2	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  05af8	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  05afe	51		 push	 ecx
  05aff	01 87 b8 22 00
	00		 add	 DWORD PTR [edi+8888], eax
  05b05	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  05b0a	c7 87 bc 22 00
	00 02 00 00 00	 mov	 DWORD PTR [edi+8892], 2
  05b14	e8 00 00 00 00	 call	 ?InfoMessage@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::InfoMessage

  05b19	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR _iTargetIndex$225559[ebp]
  05b1f	50		 push	 eax
  05b20	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

  05b25	8b 8d 54 fd ff
	ff		 mov	 ecx, DWORD PTR _iTargetIndex$225559[ebp]
  05b2b	83 c4 04	 add	 esp, 4
  05b2e	51		 push	 ecx
  05b2f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  05b34	e8 00 00 00 00	 call	 ?UserBuff@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::UserBuff

  05b39	8b 97 bc 22 00
	00		 mov	 edx, DWORD PTR [edi+8892]
  05b3f	52		 push	 edx

  05b40	e9 11 ff ff ff	 jmp	 $LN1154@Management
$LN47@Management:

  05b45	80 3d ee 00 00
	00 01		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+238, 1
  05b4c	0f 85 18 04 00
	00		 jne	 $LN899@Management
  05b52	6a 01		 push	 1
  05b54	53		 push	 ebx
  05b55	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GMManager@@3VGMManager@@A ; g_GMManager
  05b5a	e8 00 00 00 00	 call	 ?CheckCommand@GMManager@@QAE_NHH@Z ; GMManager::CheckCommand
  05b5f	84 c0		 test	 al, al
  05b61	0f 84 03 04 00
	00		 je	 $LN899@Management

  05b67	8b cf		 mov	 ecx, edi
  05b69	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  05b6e	8b cf		 mov	 ecx, edi
  05b70	89 45 f8	 mov	 DWORD PTR _TargetName$225564[ebp], eax
  05b73	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05b78	83 7d f8 00	 cmp	 DWORD PTR _TargetName$225564[ebp], 0
  05b7c	89 85 58 fd ff
	ff		 mov	 DWORD PTR _iPremiumDay$225565[ebp], eax
  05b82	0f 84 e2 03 00
	00		 je	 $LN899@Management
  05b88	85 c0		 test	 eax, eax
  05b8a	0f 8e da 03 00
	00		 jle	 $LN899@Management

  05b90	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225564[ebp]
  05b93	50		 push	 eax
  05b94	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05b99	83 c4 04	 add	 esp, 4
  05b9c	89 85 54 fd ff
	ff		 mov	 DWORD PTR _iTargetIndex$225567[ebp], eax

  05ba2	83 f8 ff	 cmp	 eax, -1
  05ba5	0f 84 bd fe ff
	ff		 je	 $LN52@Management

  05bab	8b c8		 mov	 ecx, eax

  05bad	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _iPremiumDay$225565[ebp]
  05bb3	8b f9		 mov	 edi, ecx
  05bb5	69 c0 80 51 01
	00		 imul	 eax, 86400		; 00015180H
  05bbb	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  05bc1	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

  05bc7	51		 push	 ecx
  05bc8	01 87 b8 22 00
	00		 add	 DWORD PTR [edi+8888], eax
  05bce	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  05bd3	c7 87 bc 22 00
	00 03 00 00 00	 mov	 DWORD PTR [edi+8892], 3
  05bdd	e8 00 00 00 00	 call	 ?InfoMessage@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::InfoMessage

  05be2	8b 8d 54 fd ff
	ff		 mov	 ecx, DWORD PTR _iTargetIndex$225567[ebp]
  05be8	51		 push	 ecx
  05be9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

  05bee	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _iTargetIndex$225567[ebp]
  05bf4	83 c4 04	 add	 esp, 4
  05bf7	52		 push	 edx
  05bf8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  05bfd	e8 00 00 00 00	 call	 ?UserBuff@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::UserBuff

  05c02	8b 87 bc 22 00
	00		 mov	 eax, DWORD PTR [edi+8892]
  05c08	50		 push	 eax

  05c09	e9 48 fe ff ff	 jmp	 $LN1154@Management
$LN43@Management:

  05c0e	6a 20		 push	 32			; 00000020H
  05c10	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05c15	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05c1a	84 c0		 test	 al, al
  05c1c	75 42		 jne	 SHORT $LN41@Management
  05c1e	6a 21		 push	 33			; 00000021H
  05c20	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05c25	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05c2a	84 c0		 test	 al, al
  05c2c	75 32		 jne	 SHORT $LN41@Management
  05c2e	6a 22		 push	 34			; 00000022H
  05c30	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05c35	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05c3a	84 c0		 test	 al, al
  05c3c	75 22		 jne	 SHORT $LN41@Management
  05c3e	6a 32		 push	 50			; 00000032H
  05c40	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05c45	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  05c4a	84 c0		 test	 al, al
  05c4c	75 12		 jne	 SHORT $LN41@Management
  05c4e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  05c53	e8 00 00 00 00	 call	 ?GetCustom@CZtLicense@@QAEHXZ ; CZtLicense::GetCustom
  05c58	85 c0		 test	 eax, eax
  05c5a	0f 84 0a 03 00
	00		 je	 $LN899@Management
$LN41@Management:

  05c60	8b cf		 mov	 ecx, edi
  05c62	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  05c67	50		 push	 eax
  05c68	56		 push	 esi
  05c69	8b cf		 mov	 ecx, edi
  05c6b	e8 00 00 00 00	 call	 ?CmdWare@CGMMng@@QAEXPAUOBJECTSTRUCT@@H@Z ; CGMMng::CmdWare

  05c70	e9 f3 fd ff ff	 jmp	 $LN52@Management
$LN40@Management:

  05c75	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05c7b	83 fe 08	 cmp	 esi, 8
  05c7e	74 09		 je	 SHORT $LN38@Management
  05c80	83 fe 20	 cmp	 esi, 32			; 00000020H
  05c83	0f 85 e1 02 00
	00		 jne	 $LN899@Management
$LN38@Management:

  05c89	8b cf		 mov	 ecx, edi
  05c8b	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  05c90	8b cf		 mov	 ecx, edi
  05c92	89 45 f8	 mov	 DWORD PTR _TargetName$225576[ebp], eax
  05c95	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  05c9a	8b f0		 mov	 esi, eax

  05c9c	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225576[ebp]
  05c9f	85 c0		 test	 eax, eax
  05ca1	0f 84 c3 02 00
	00		 je	 $LN899@Management

  05ca7	50		 push	 eax
  05ca8	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05cad	83 c4 04	 add	 esp, 4
  05cb0	89 85 58 fd ff
	ff		 mov	 DWORD PTR _TargetIndex$225579[ebp], eax

  05cb6	83 f8 ff	 cmp	 eax, -1
  05cb9	0f 84 ab 02 00
	00		 je	 $LN899@Management

  05cbf	8b f8		 mov	 edi, eax

  05cc1	8b 45 f8	 mov	 eax, DWORD PTR _TargetName$225576[ebp]
  05cc4	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  05cca	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  05cd0	8b ce		 mov	 ecx, esi
  05cd2	8b 97 8c 28 00
	00		 mov	 edx, DWORD PTR [edi+10380]
  05cd8	69 c9 10 0e 00
	00		 imul	 ecx, 3600		; 00000e10H
  05cde	6a 01		 push	 1
  05ce0	51		 push	 ecx
  05ce1	52		 push	 edx
  05ce2	50		 push	 eax
  05ce3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BanSystem@@3VCBanSystem@@A ; g_BanSystem
  05ce8	e8 00 00 00 00	 call	 ?DSReqInsert@CBanSystem@@QAEXPADKKK@Z ; CBanSystem::DSReqInsert

  05ced	56		 push	 esi
  05cee	83 c7 77	 add	 edi, 119		; 00000077H
  05cf1	57		 push	 edi
  05cf2	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ILEKCHEG@?$FLBanChatHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
  05cf7	53		 push	 ebx
  05cf8	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  05cfd	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _TargetIndex$225579[ebp]
  05d03	56		 push	 esi
  05d04	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JLNGPLAG@?$FLBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@
  05d09	51		 push	 ecx
  05d0a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  05d0f	83 c4 1c	 add	 esp, 28			; 0000001cH

  05d12	e9 53 02 00 00	 jmp	 $LN899@Management
$LN35@Management:

  05d17	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05d1d	83 fe 08	 cmp	 esi, 8
  05d20	74 09		 je	 SHORT $LN33@Management
  05d22	83 fe 20	 cmp	 esi, 32			; 00000020H
  05d25	0f 85 3f 02 00
	00		 jne	 $LN899@Management
$LN33@Management:

  05d2b	8b cf		 mov	 ecx, edi
  05d2d	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  05d32	8b cf		 mov	 ecx, edi
  05d34	8b f0		 mov	 esi, eax
  05d36	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber
  05d3b	8b f8		 mov	 edi, eax

  05d3d	85 f6		 test	 esi, esi
  05d3f	0f 84 25 02 00
	00		 je	 $LN899@Management

  05d45	56		 push	 esi
  05d46	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BanSystem@@3VCBanSystem@@A ; g_BanSystem
  05d4b	e8 00 00 00 00	 call	 ?DSReqDelete@CBanSystem@@QAEXPAD@Z ; CBanSystem::DSReqDelete

  05d50	56		 push	 esi
  05d51	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EJNGFJIN@?$FLUnBanChatHdd?$FN?3?5?$CFs?$AA@
  05d56	53		 push	 ebx
  05d57	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  05d5c	56		 push	 esi
  05d5d	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05d62	83 c4 10	 add	 esp, 16			; 00000010H

  05d65	83 f8 ff	 cmp	 eax, -1
  05d68	0f 84 fc 01 00
	00		 je	 $LN899@Management

  05d6e	57		 push	 edi
  05d6f	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LGOMGLKB@?$FLUnBanChatHdd?$FN?3?5?$CFd?5Hour?$AA@
  05d74	50		 push	 eax
  05d75	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  05d7a	83 c4 0c	 add	 esp, 12			; 0000000cH
  05d7d	e9 e8 01 00 00	 jmp	 $LN899@Management
$LN30@Management:

  05d82	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05d88	83 fe 08	 cmp	 esi, 8
  05d8b	74 09		 je	 SHORT $LN28@Management
  05d8d	83 fe 20	 cmp	 esi, 32			; 00000020H
  05d90	0f 85 d4 01 00
	00		 jne	 $LN899@Management
$LN28@Management:

  05d96	8b cf		 mov	 ecx, edi
  05d98	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString

  05d9d	8b cf		 mov	 ecx, edi
  05d9f	89 85 54 fd ff
	ff		 mov	 DWORD PTR _TargetName$225597[ebp], eax
  05da5	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05daa	83 bd 54 fd ff
	ff 00		 cmp	 DWORD PTR _TargetName$225597[ebp], 0
  05db1	8b f0		 mov	 esi, eax
  05db3	0f 84 b1 01 00
	00		 je	 $LN899@Management

  05db9	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _TargetName$225597[ebp]
  05dbf	52		 push	 edx
  05dc0	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  05dc5	83 c4 04	 add	 esp, 4
  05dc8	89 45 f8	 mov	 DWORD PTR _TargetIndex$225600[ebp], eax

  05dcb	83 f8 ff	 cmp	 eax, -1
  05dce	0f 84 96 01 00
	00		 je	 $LN899@Management

  05dd4	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR _TargetName$225597[ebp]
  05dda	8b f8		 mov	 edi, eax
  05ddc	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  05de2	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  05de8	8b c6		 mov	 eax, esi
  05dea	8b 8f 8c 28 00
	00		 mov	 ecx, DWORD PTR [edi+10380]
  05df0	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  05df6	6a 00		 push	 0
  05df8	50		 push	 eax
  05df9	51		 push	 ecx
  05dfa	52		 push	 edx
  05dfb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BanSystem@@3VCBanSystem@@A ; g_BanSystem
  05e00	e8 00 00 00 00	 call	 ?DSReqInsert@CBanSystem@@QAEXPADKKK@Z ; CBanSystem::DSReqInsert

  05e05	56		 push	 esi
  05e06	83 c7 77	 add	 edi, 119		; 00000077H
  05e09	57		 push	 edi
  05e0a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@IFDGJLMD@?$FLBanCharHdd?$FN?3?5?$CFs?5?$CFd?5Hour?$AA@
  05e0f	53		 push	 ebx
  05e10	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal

  05e15	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$225600[ebp]
  05e18	56		 push	 esi
  05e19	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LJCMCPPE@?$FLBanCharHdd?$FN?3?5?$CFd?5Hour?$AA@
  05e1e	50		 push	 eax
  05e1f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  05e24	83 c4 1c	 add	 esp, 28			; 0000001cH

  05e27	e9 3e 01 00 00	 jmp	 $LN899@Management
$LN25@Management:

  05e2c	8b b6 0c 02 00
	00		 mov	 esi, DWORD PTR [esi+524]
  05e32	83 fe 08	 cmp	 esi, 8
  05e35	74 09		 je	 SHORT $LN23@Management
  05e37	83 fe 20	 cmp	 esi, 32			; 00000020H
  05e3a	0f 85 2a 01 00
	00		 jne	 $LN899@Management
$LN23@Management:

  05e40	8b cf		 mov	 ecx, edi
  05e42	e8 00 00 00 00	 call	 ?GetTokenString@CGMMng@@QAEPADXZ ; CGMMng::GetTokenString
  05e47	8b f0		 mov	 esi, eax

  05e49	85 f6		 test	 esi, esi
  05e4b	0f 84 19 01 00
	00		 je	 $LN899@Management

  05e51	56		 push	 esi
  05e52	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BanSystem@@3VCBanSystem@@A ; g_BanSystem
  05e57	e8 00 00 00 00	 call	 ?DSReqDelete@CBanSystem@@QAEXPAD@Z ; CBanSystem::DSReqDelete

  05e5c	56		 push	 esi
  05e5d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EEMICJMK@?$FLUnBanCharHdd?$FN?3?5?$CFs?$AA@
  05e62	53		 push	 ebx
  05e63	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  05e68	83 c4 0c	 add	 esp, 12			; 0000000cH
  05e6b	e9 fa 00 00 00	 jmp	 $LN899@Management
$LN21@Management:

  05e70	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  05e77	0f 87 ed 00 00
	00		 ja	 $LN899@Management

  05e7d	8b cf		 mov	 ecx, edi
  05e7f	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05e84	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  05e87	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  05e8d	0f 87 d7 00 00
	00		 ja	 $LN899@Management

  05e93	50		 push	 eax
  05e94	53		 push	 ebx
  05e95	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  05e9a	e8 00 00 00 00	 call	 ?exGuardian@JewelsBank@@QAEXHH@Z ; JewelsBank::exGuardian
  05e9f	e9 c4 fb ff ff	 jmp	 $LN52@Management
$LN17@Management:

  05ea4	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  05eab	0f 87 b9 00 00
	00		 ja	 $LN899@Management

  05eb1	8b cf		 mov	 ecx, edi
  05eb3	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05eb8	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  05ebb	81 fa 8b 00 00
	00		 cmp	 edx, 139		; 0000008bH
  05ec1	0f 87 a3 00 00
	00		 ja	 $LN899@Management

  05ec7	50		 push	 eax
  05ec8	53		 push	 ebx
  05ec9	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  05ece	e8 00 00 00 00	 call	 ?exHarmony@JewelsBank@@QAEXHH@Z ; JewelsBank::exHarmony
  05ed3	e9 90 fb ff ff	 jmp	 $LN52@Management
$LN13@Management:

  05ed8	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  05edf	0f 87 85 00 00
	00		 ja	 $LN899@Management

  05ee5	8b cf		 mov	 ecx, edi
  05ee7	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05eec	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  05eef	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  05ef5	77 73		 ja	 SHORT $LN899@Management

  05ef7	50		 push	 eax
  05ef8	53		 push	 ebx
  05ef9	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  05efe	e8 00 00 00 00	 call	 ?exLowStone@JewelsBank@@QAEXHH@Z ; JewelsBank::exLowStone
  05f03	e9 60 fb ff ff	 jmp	 $LN52@Management
$LN9@Management:

  05f08	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  05f0f	77 59		 ja	 SHORT $LN899@Management

  05f11	8b cf		 mov	 ecx, edi
  05f13	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05f18	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  05f1b	81 fa 8b 00 00
	00		 cmp	 edx, 139		; 0000008bH
  05f21	77 47		 ja	 SHORT $LN899@Management

  05f23	50		 push	 eax
  05f24	53		 push	 ebx
  05f25	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  05f2a	e8 00 00 00 00	 call	 ?exHighStone@JewelsBank@@QAEXHH@Z ; JewelsBank::exHighStone
  05f2f	e9 34 fb ff ff	 jmp	 $LN52@Management
$LN5@Management:

  05f34	f6 86 1c 0e 00
	00 03		 test	 BYTE PTR [esi+3612], 3
  05f3b	77 2d		 ja	 SHORT $LN899@Management

  05f3d	8b cf		 mov	 ecx, edi
  05f3f	e8 00 00 00 00	 call	 ?GetTokenNumber@CGMMng@@QAEHXZ ; CGMMng::GetTokenNumber

  05f44	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  05f47	81 f9 8b 00 00
	00		 cmp	 ecx, 139		; 0000008bH
  05f4d	77 1b		 ja	 SHORT $LN899@Management

  05f4f	50		 push	 eax
  05f50	53		 push	 ebx
  05f51	b9 00 00 00 00	 mov	 ecx, OFFSET ?gJewelsBank@@3VJewelsBank@@A ; gJewelsBank
  05f56	e8 00 00 00 00	 call	 ?exGemStone@JewelsBank@@QAEXHH@Z ; JewelsBank::exGemStone
  05f5b	e9 08 fb ff ff	 jmp	 $LN52@Management
$LN1@Management:

  05f60	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_QuestionAnswer@@3VCQuestionAnswer@@A ; g_QuestionAnswer
  05f65	e8 00 00 00 00	 call	 ?Search@CQuestionAnswer@@QAEXXZ ; CQuestionAnswer::Search
$LN899@Management:

  05f6a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  05f6d	5f		 pop	 edi
  05f6e	5e		 pop	 esi
  05f6f	33 cd		 xor	 ecx, ebp
  05f71	33 c0		 xor	 eax, eax
  05f73	5b		 pop	 ebx
  05f74	e8 00 00 00 00	 call	 @__security_check_cookie@4
  05f79	8b e5		 mov	 esp, ebp
  05f7b	5d		 pop	 ebp
  05f7c	c2 0c 00	 ret	 12			; 0000000cH
  05f7f	90		 npad	 1
$LN1157@Management:
  05f80	00 00 00 00	 DD	 $LN642@Management
  05f84	00 00 00 00	 DD	 $LN629@Management
  05f88	00 00 00 00	 DD	 $LN595@Management
  05f8c	00 00 00 00	 DD	 $LN592@Management
  05f90	00 00 00 00	 DD	 $LN589@Management
  05f94	00 00 00 00	 DD	 $LN618@Management
  05f98	00 00 00 00	 DD	 $LN611@Management
  05f9c	00 00 00 00	 DD	 $LN609@Management
  05fa0	00 00 00 00	 DD	 $LN602@Management
  05fa4	00 00 00 00	 DD	 $LN637@Management
  05fa8	00 00 00 00	 DD	 $LN558@Management
  05fac	00 00 00 00	 DD	 $LN545@Management
  05fb0	00 00 00 00	 DD	 $LN555@Management
  05fb4	00 00 00 00	 DD	 $LN543@Management
  05fb8	00 00 00 00	 DD	 $LN645@Management
  05fbc	00 00 00 00	 DD	 $LN650@Management
  05fc0	00 00 00 00	 DD	 $LN655@Management
  05fc4	00 00 00 00	 DD	 $LN659@Management
  05fc8	00 00 00 00	 DD	 $LN475@Management
  05fcc	00 00 00 00	 DD	 $LN457@Management
  05fd0	00 00 00 00	 DD	 $LN451@Management
  05fd4	00 00 00 00	 DD	 $LN894@Management
  05fd8	00 00 00 00	 DD	 $LN890@Management
  05fdc	00 00 00 00	 DD	 $LN882@Management
  05fe0	00 00 00 00	 DD	 $LN886@Management
  05fe4	00 00 00 00	 DD	 $LN695@Management
  05fe8	00 00 00 00	 DD	 $LN691@Management
  05fec	00 00 00 00	 DD	 $LN687@Management
  05ff0	00 00 00 00	 DD	 $LN735@Management
  05ff4	00 00 00 00	 DD	 $LN784@Management
  05ff8	00 00 00 00	 DD	 $LN790@Management
  05ffc	00 00 00 00	 DD	 $LN844@Management
  06000	00 00 00 00	 DD	 $LN683@Management
  06004	00 00 00 00	 DD	 $LN725@Management
  06008	00 00 00 00	 DD	 $LN471@Management
  0600c	00 00 00 00	 DD	 $LN843@Management
  06010	00 00 00 00	 DD	 $LN469@Management
  06014	00 00 00 00	 DD	 $LN461@Management
  06018	00 00 00 00	 DD	 $LN826@Management
  0601c	00 00 00 00	 DD	 $LN854@Management
  06020	00 00 00 00	 DD	 $LN537@Management
  06024	00 00 00 00	 DD	 $LN529@Management
  06028	00 00 00 00	 DD	 $LN518@Management
  0602c	00 00 00 00	 DD	 $LN515@Management
  06030	00 00 00 00	 DD	 $LN512@Management
  06034	00 00 00 00	 DD	 $LN856@Management
  06038	00 00 00 00	 DD	 $LN509@Management
  0603c	00 00 00 00	 DD	 $LN508@Management
  06040	00 00 00 00	 DD	 $LN507@Management
  06044	00 00 00 00	 DD	 $LN506@Management
  06048	00 00 00 00	 DD	 $LN505@Management
  0604c	00 00 00 00	 DD	 $LN504@Management
  06050	00 00 00 00	 DD	 $LN503@Management
  06054	00 00 00 00	 DD	 $LN502@Management
  06058	00 00 00 00	 DD	 $LN777@Management
  0605c	00 00 00 00	 DD	 $LN501@Management
  06060	00 00 00 00	 DD	 $LN776@Management
  06064	00 00 00 00	 DD	 $LN741@Management
  06068	00 00 00 00	 DD	 $LN740@Management
  0606c	00 00 00 00	 DD	 $LN500@Management
  06070	00 00 00 00	 DD	 $LN499@Management
  06074	00 00 00 00	 DD	 $LN498@Management
  06078	00 00 00 00	 DD	 $LN497@Management
  0607c	00 00 00 00	 DD	 $LN739@Management
  06080	00 00 00 00	 DD	 $LN737@Management
  06084	00 00 00 00	 DD	 $LN736@Management
  06088	00 00 00 00	 DD	 $LN444@Management
  0608c	00 00 00 00	 DD	 $LN443@Management
  06090	00 00 00 00	 DD	 $LN442@Management
  06094	00 00 00 00	 DD	 $LN441@Management
  06098	00 00 00 00	 DD	 $LN439@Management
  0609c	00 00 00 00	 DD	 $LN438@Management
  060a0	00 00 00 00	 DD	 $LN437@Management
  060a4	00 00 00 00	 DD	 $LN436@Management
  060a8	00 00 00 00	 DD	 $LN435@Management
  060ac	00 00 00 00	 DD	 $LN496@Management
  060b0	00 00 00 00	 DD	 $LN495@Management
  060b4	00 00 00 00	 DD	 $LN494@Management
  060b8	00 00 00 00	 DD	 $LN493@Management
  060bc	00 00 00 00	 DD	 $LN492@Management
  060c0	00 00 00 00	 DD	 $LN491@Management
  060c4	00 00 00 00	 DD	 $LN490@Management
  060c8	00 00 00 00	 DD	 $LN489@Management
  060cc	00 00 00 00	 DD	 $LN488@Management
  060d0	00 00 00 00	 DD	 $LN487@Management
  060d4	00 00 00 00	 DD	 $LN486@Management
  060d8	00 00 00 00	 DD	 $LN485@Management
  060dc	00 00 00 00	 DD	 $LN484@Management
  060e0	00 00 00 00	 DD	 $LN483@Management
  060e4	00 00 00 00	 DD	 $LN482@Management
  060e8	00 00 00 00	 DD	 $LN481@Management
  060ec	00 00 00 00	 DD	 $LN480@Management
  060f0	00 00 00 00	 DD	 $LN479@Management
  060f4	00 00 00 00	 DD	 $LN478@Management
  060f8	00 00 00 00	 DD	 $LN477@Management
  060fc	00 00 00 00	 DD	 $LN476@Management
  06100	00 00 00 00	 DD	 $LN426@Management
  06104	00 00 00 00	 DD	 $LN424@Management
  06108	00 00 00 00	 DD	 $LN460@Management
  0610c	00 00 00 00	 DD	 $LN459@Management
  06110	00 00 00 00	 DD	 $LN458@Management
  06114	00 00 00 00	 DD	 $LN768@Management
  06118	00 00 00 00	 DD	 $LN765@Management
  0611c	00 00 00 00	 DD	 $LN756@Management
  06120	00 00 00 00	 DD	 $LN751@Management
  06124	00 00 00 00	 DD	 $LN744@Management
  06128	00 00 00 00	 DD	 $LN742@Management
  0612c	00 00 00 00	 DD	 $LN434@Management
  06130	00 00 00 00	 DD	 $LN432@Management
  06134	00 00 00 00	 DD	 $LN431@Management
  06138	00 00 00 00	 DD	 $LN682@Management
  0613c	00 00 00 00	 DD	 $LN676@Management
  06140	00 00 00 00	 DD	 $LN674@Management
  06144	00 00 00 00	 DD	 $LN422@Management
  06148	00 00 00 00	 DD	 $LN421@Management
  0614c	00 00 00 00	 DD	 $LN420@Management
  06150	00 00 00 00	 DD	 $LN419@Management
  06154	00 00 00 00	 DD	 $LN418@Management
  06158	00 00 00 00	 DD	 $LN417@Management
  0615c	00 00 00 00	 DD	 $LN416@Management
  06160	00 00 00 00	 DD	 $LN415@Management
  06164	00 00 00 00	 DD	 $LN414@Management
  06168	00 00 00 00	 DD	 $LN413@Management
  0616c	00 00 00 00	 DD	 $LN412@Management
  06170	00 00 00 00	 DD	 $LN411@Management
  06174	00 00 00 00	 DD	 $LN410@Management
  06178	00 00 00 00	 DD	 $LN409@Management
  0617c	00 00 00 00	 DD	 $LN408@Management
  06180	00 00 00 00	 DD	 $LN407@Management
  06184	00 00 00 00	 DD	 $LN406@Management
  06188	00 00 00 00	 DD	 $LN405@Management
  0618c	00 00 00 00	 DD	 $LN667@Management
  06190	00 00 00 00	 DD	 $LN666@Management
  06194	00 00 00 00	 DD	 $LN660@Management
  06198	00 00 00 00	 DD	 $LN668@Management
  0619c	00 00 00 00	 DD	 $LN440@Management
  061a0	00 00 00 00	 DD	 $LN404@Management
  061a4	00 00 00 00	 DD	 $LN403@Management
  061a8	00 00 00 00	 DD	 $LN402@Management
  061ac	00 00 00 00	 DD	 $LN401@Management
  061b0	00 00 00 00	 DD	 $LN400@Management
  061b4	00 00 00 00	 DD	 $LN399@Management
  061b8	00 00 00 00	 DD	 $LN398@Management
  061bc	00 00 00 00	 DD	 $LN395@Management
  061c0	00 00 00 00	 DD	 $LN387@Management
  061c4	00 00 00 00	 DD	 $LN383@Management
  061c8	00 00 00 00	 DD	 $LN377@Management
  061cc	00 00 00 00	 DD	 $LN371@Management
  061d0	00 00 00 00	 DD	 $LN365@Management
  061d4	00 00 00 00	 DD	 $LN359@Management
  061d8	00 00 00 00	 DD	 $LN353@Management
  061dc	00 00 00 00	 DD	 $LN347@Management
  061e0	00 00 00 00	 DD	 $LN341@Management
  061e4	00 00 00 00	 DD	 $LN336@Management
  061e8	00 00 00 00	 DD	 $LN335@Management
  061ec	00 00 00 00	 DD	 $LN329@Management
  061f0	00 00 00 00	 DD	 $LN323@Management
  061f4	00 00 00 00	 DD	 $LN317@Management
  061f8	00 00 00 00	 DD	 $LN311@Management
  061fc	00 00 00 00	 DD	 $LN305@Management
  06200	00 00 00 00	 DD	 $LN299@Management
  06204	00 00 00 00	 DD	 $LN293@Management
  06208	00 00 00 00	 DD	 $LN287@Management
  0620c	00 00 00 00	 DD	 $LN285@Management
  06210	00 00 00 00	 DD	 $LN278@Management
  06214	00 00 00 00	 DD	 $LN273@Management
  06218	00 00 00 00	 DD	 $LN268@Management
  0621c	00 00 00 00	 DD	 $LN262@Management
  06220	00 00 00 00	 DD	 $LN259@Management
  06224	00 00 00 00	 DD	 $LN258@Management
  06228	00 00 00 00	 DD	 $LN251@Management
  0622c	00 00 00 00	 DD	 $LN246@Management
  06230	00 00 00 00	 DD	 $LN242@Management
  06234	00 00 00 00	 DD	 $LN238@Management
  06238	00 00 00 00	 DD	 $LN234@Management
  0623c	00 00 00 00	 DD	 $LN230@Management
  06240	00 00 00 00	 DD	 $LN164@Management
  06244	00 00 00 00	 DD	 $LN156@Management
  06248	00 00 00 00	 DD	 $LN143@Management
  0624c	00 00 00 00	 DD	 $LN138@Management
  06250	00 00 00 00	 DD	 $LN136@Management
  06254	00 00 00 00	 DD	 $LN135@Management
  06258	00 00 00 00	 DD	 $LN126@Management
  0625c	00 00 00 00	 DD	 $LN117@Management
  06260	00 00 00 00	 DD	 $LN108@Management
  06264	00 00 00 00	 DD	 $LN105@Management
  06268	00 00 00 00	 DD	 $LN104@Management
  0626c	00 00 00 00	 DD	 $LN93@Management
  06270	00 00 00 00	 DD	 $LN91@Management
  06274	00 00 00 00	 DD	 $LN87@Management
  06278	00 00 00 00	 DD	 $LN83@Management
  0627c	00 00 00 00	 DD	 $LN79@Management
  06280	00 00 00 00	 DD	 $LN78@Management
  06284	00 00 00 00	 DD	 $LN77@Management
  06288	00 00 00 00	 DD	 $LN72@Management
  0628c	00 00 00 00	 DD	 $LN70@Management
  06290	00 00 00 00	 DD	 $LN69@Management
  06294	00 00 00 00	 DD	 $LN64@Management
  06298	00 00 00 00	 DD	 $LN55@Management
  0629c	00 00 00 00	 DD	 $LN51@Management
  062a0	00 00 00 00	 DD	 $LN47@Management
  062a4	00 00 00 00	 DD	 $LN43@Management
  062a8	00 00 00 00	 DD	 $LN40@Management
  062ac	00 00 00 00	 DD	 $LN35@Management
  062b0	00 00 00 00	 DD	 $LN30@Management
  062b4	00 00 00 00	 DD	 $LN25@Management
  062b8	00 00 00 00	 DD	 $LN21@Management
  062bc	00 00 00 00	 DD	 $LN17@Management
  062c0	00 00 00 00	 DD	 $LN13@Management
  062c4	00 00 00 00	 DD	 $LN9@Management
  062c8	00 00 00 00	 DD	 $LN5@Management
  062cc	00 00 00 00	 DD	 $LN1@Management
  062d0	00 00 00 00	 DD	 $LN899@Management
$LN1004@Management:
  062d4	00		 DB	 0
  062d5	01		 DB	 1
  062d6	d4		 DB	 -44			; ffffffd4H
  062d7	d4		 DB	 -44			; ffffffd4H
  062d8	02		 DB	 2
  062d9	d4		 DB	 -44			; ffffffd4H
  062da	03		 DB	 3
  062db	04		 DB	 4
  062dc	05		 DB	 5
  062dd	06		 DB	 6
  062de	07		 DB	 7
  062df	08		 DB	 8
  062e0	09		 DB	 9
  062e1	d4		 DB	 -44			; ffffffd4H
  062e2	d4		 DB	 -44			; ffffffd4H
  062e3	d4		 DB	 -44			; ffffffd4H
  062e4	d4		 DB	 -44			; ffffffd4H
  062e5	d4		 DB	 -44			; ffffffd4H
  062e6	d4		 DB	 -44			; ffffffd4H
  062e7	d4		 DB	 -44			; ffffffd4H
  062e8	d4		 DB	 -44			; ffffffd4H
  062e9	d4		 DB	 -44			; ffffffd4H
  062ea	d4		 DB	 -44			; ffffffd4H
  062eb	d4		 DB	 -44			; ffffffd4H
  062ec	d4		 DB	 -44			; ffffffd4H
  062ed	d4		 DB	 -44			; ffffffd4H
  062ee	d4		 DB	 -44			; ffffffd4H
  062ef	d4		 DB	 -44			; ffffffd4H
  062f0	d4		 DB	 -44			; ffffffd4H
  062f1	d4		 DB	 -44			; ffffffd4H
  062f2	d4		 DB	 -44			; ffffffd4H
  062f3	d4		 DB	 -44			; ffffffd4H
  062f4	d4		 DB	 -44			; ffffffd4H
  062f5	d4		 DB	 -44			; ffffffd4H
  062f6	d4		 DB	 -44			; ffffffd4H
  062f7	d4		 DB	 -44			; ffffffd4H
  062f8	d4		 DB	 -44			; ffffffd4H
  062f9	d4		 DB	 -44			; ffffffd4H
  062fa	d4		 DB	 -44			; ffffffd4H
  062fb	d4		 DB	 -44			; ffffffd4H
  062fc	d4		 DB	 -44			; ffffffd4H
  062fd	d4		 DB	 -44			; ffffffd4H
  062fe	d4		 DB	 -44			; ffffffd4H
  062ff	d4		 DB	 -44			; ffffffd4H
  06300	d4		 DB	 -44			; ffffffd4H
  06301	d4		 DB	 -44			; ffffffd4H
  06302	d4		 DB	 -44			; ffffffd4H
  06303	d4		 DB	 -44			; ffffffd4H
  06304	d4		 DB	 -44			; ffffffd4H
  06305	d4		 DB	 -44			; ffffffd4H
  06306	d4		 DB	 -44			; ffffffd4H
  06307	d4		 DB	 -44			; ffffffd4H
  06308	d4		 DB	 -44			; ffffffd4H
  06309	d4		 DB	 -44			; ffffffd4H
  0630a	d4		 DB	 -44			; ffffffd4H
  0630b	d4		 DB	 -44			; ffffffd4H
  0630c	d4		 DB	 -44			; ffffffd4H
  0630d	d4		 DB	 -44			; ffffffd4H
  0630e	d4		 DB	 -44			; ffffffd4H
  0630f	d4		 DB	 -44			; ffffffd4H
  06310	d4		 DB	 -44			; ffffffd4H
  06311	d4		 DB	 -44			; ffffffd4H
  06312	d4		 DB	 -44			; ffffffd4H
  06313	d4		 DB	 -44			; ffffffd4H
  06314	d4		 DB	 -44			; ffffffd4H
  06315	d4		 DB	 -44			; ffffffd4H
  06316	d4		 DB	 -44			; ffffffd4H
  06317	d4		 DB	 -44			; ffffffd4H
  06318	d4		 DB	 -44			; ffffffd4H
  06319	d4		 DB	 -44			; ffffffd4H
  0631a	d4		 DB	 -44			; ffffffd4H
  0631b	d4		 DB	 -44			; ffffffd4H
  0631c	d4		 DB	 -44			; ffffffd4H
  0631d	d4		 DB	 -44			; ffffffd4H
  0631e	d4		 DB	 -44			; ffffffd4H
  0631f	d4		 DB	 -44			; ffffffd4H
  06320	d4		 DB	 -44			; ffffffd4H
  06321	d4		 DB	 -44			; ffffffd4H
  06322	d4		 DB	 -44			; ffffffd4H
  06323	d4		 DB	 -44			; ffffffd4H
  06324	d4		 DB	 -44			; ffffffd4H
  06325	d4		 DB	 -44			; ffffffd4H
  06326	d4		 DB	 -44			; ffffffd4H
  06327	d4		 DB	 -44			; ffffffd4H
  06328	d4		 DB	 -44			; ffffffd4H
  06329	d4		 DB	 -44			; ffffffd4H
  0632a	d4		 DB	 -44			; ffffffd4H
  0632b	d4		 DB	 -44			; ffffffd4H
  0632c	d4		 DB	 -44			; ffffffd4H
  0632d	d4		 DB	 -44			; ffffffd4H
  0632e	d4		 DB	 -44			; ffffffd4H
  0632f	d4		 DB	 -44			; ffffffd4H
  06330	d4		 DB	 -44			; ffffffd4H
  06331	d4		 DB	 -44			; ffffffd4H
  06332	d4		 DB	 -44			; ffffffd4H
  06333	d4		 DB	 -44			; ffffffd4H
  06334	d4		 DB	 -44			; ffffffd4H
  06335	d4		 DB	 -44			; ffffffd4H
  06336	d4		 DB	 -44			; ffffffd4H
  06337	d4		 DB	 -44			; ffffffd4H
  06338	0a		 DB	 10			; 0000000aH
  06339	0b		 DB	 11			; 0000000bH
  0633a	0c		 DB	 12			; 0000000cH
  0633b	0d		 DB	 13			; 0000000dH
  0633c	d4		 DB	 -44			; ffffffd4H
  0633d	d4		 DB	 -44			; ffffffd4H
  0633e	d4		 DB	 -44			; ffffffd4H
  0633f	d4		 DB	 -44			; ffffffd4H
  06340	d4		 DB	 -44			; ffffffd4H
  06341	d4		 DB	 -44			; ffffffd4H
  06342	d4		 DB	 -44			; ffffffd4H
  06343	d4		 DB	 -44			; ffffffd4H
  06344	d4		 DB	 -44			; ffffffd4H
  06345	d4		 DB	 -44			; ffffffd4H
  06346	0e		 DB	 14			; 0000000eH
  06347	0f		 DB	 15			; 0000000fH
  06348	10		 DB	 16			; 00000010H
  06349	11		 DB	 17			; 00000011H
  0634a	12		 DB	 18			; 00000012H
  0634b	13		 DB	 19			; 00000013H
  0634c	14		 DB	 20			; 00000014H
  0634d	d4		 DB	 -44			; ffffffd4H
  0634e	d4		 DB	 -44			; ffffffd4H
  0634f	d4		 DB	 -44			; ffffffd4H
  06350	d4		 DB	 -44			; ffffffd4H
  06351	d4		 DB	 -44			; ffffffd4H
  06352	d4		 DB	 -44			; ffffffd4H
  06353	d4		 DB	 -44			; ffffffd4H
  06354	d4		 DB	 -44			; ffffffd4H
  06355	d4		 DB	 -44			; ffffffd4H
  06356	15		 DB	 21			; 00000015H
  06357	16		 DB	 22			; 00000016H
  06358	17		 DB	 23			; 00000017H
  06359	18		 DB	 24			; 00000018H
  0635a	d4		 DB	 -44			; ffffffd4H
  0635b	d4		 DB	 -44			; ffffffd4H
  0635c	d4		 DB	 -44			; ffffffd4H
  0635d	d4		 DB	 -44			; ffffffd4H
  0635e	d4		 DB	 -44			; ffffffd4H
  0635f	d4		 DB	 -44			; ffffffd4H
  06360	d4		 DB	 -44			; ffffffd4H
  06361	d4		 DB	 -44			; ffffffd4H
  06362	d4		 DB	 -44			; ffffffd4H
  06363	d4		 DB	 -44			; ffffffd4H
  06364	d4		 DB	 -44			; ffffffd4H
  06365	d4		 DB	 -44			; ffffffd4H
  06366	d4		 DB	 -44			; ffffffd4H
  06367	d4		 DB	 -44			; ffffffd4H
  06368	d4		 DB	 -44			; ffffffd4H
  06369	d4		 DB	 -44			; ffffffd4H
  0636a	d4		 DB	 -44			; ffffffd4H
  0636b	d4		 DB	 -44			; ffffffd4H
  0636c	d4		 DB	 -44			; ffffffd4H
  0636d	d4		 DB	 -44			; ffffffd4H
  0636e	d4		 DB	 -44			; ffffffd4H
  0636f	d4		 DB	 -44			; ffffffd4H
  06370	d4		 DB	 -44			; ffffffd4H
  06371	d4		 DB	 -44			; ffffffd4H
  06372	d4		 DB	 -44			; ffffffd4H
  06373	d4		 DB	 -44			; ffffffd4H
  06374	d4		 DB	 -44			; ffffffd4H
  06375	d4		 DB	 -44			; ffffffd4H
  06376	d4		 DB	 -44			; ffffffd4H
  06377	d4		 DB	 -44			; ffffffd4H
  06378	d4		 DB	 -44			; ffffffd4H
  06379	d4		 DB	 -44			; ffffffd4H
  0637a	d4		 DB	 -44			; ffffffd4H
  0637b	d4		 DB	 -44			; ffffffd4H
  0637c	d4		 DB	 -44			; ffffffd4H
  0637d	d4		 DB	 -44			; ffffffd4H
  0637e	d4		 DB	 -44			; ffffffd4H
  0637f	d4		 DB	 -44			; ffffffd4H
  06380	d4		 DB	 -44			; ffffffd4H
  06381	d4		 DB	 -44			; ffffffd4H
  06382	d4		 DB	 -44			; ffffffd4H
  06383	d4		 DB	 -44			; ffffffd4H
  06384	d4		 DB	 -44			; ffffffd4H
  06385	d4		 DB	 -44			; ffffffd4H
  06386	d4		 DB	 -44			; ffffffd4H
  06387	d4		 DB	 -44			; ffffffd4H
  06388	d4		 DB	 -44			; ffffffd4H
  06389	d4		 DB	 -44			; ffffffd4H
  0638a	d4		 DB	 -44			; ffffffd4H
  0638b	d4		 DB	 -44			; ffffffd4H
  0638c	d4		 DB	 -44			; ffffffd4H
  0638d	d4		 DB	 -44			; ffffffd4H
  0638e	d4		 DB	 -44			; ffffffd4H
  0638f	d4		 DB	 -44			; ffffffd4H
  06390	d4		 DB	 -44			; ffffffd4H
  06391	d4		 DB	 -44			; ffffffd4H
  06392	d4		 DB	 -44			; ffffffd4H
  06393	d4		 DB	 -44			; ffffffd4H
  06394	d4		 DB	 -44			; ffffffd4H
  06395	d4		 DB	 -44			; ffffffd4H
  06396	d4		 DB	 -44			; ffffffd4H
  06397	d4		 DB	 -44			; ffffffd4H
  06398	d4		 DB	 -44			; ffffffd4H
  06399	d4		 DB	 -44			; ffffffd4H
  0639a	d4		 DB	 -44			; ffffffd4H
  0639b	d4		 DB	 -44			; ffffffd4H
  0639c	d4		 DB	 -44			; ffffffd4H
  0639d	19		 DB	 25			; 00000019H
  0639e	1a		 DB	 26			; 0000001aH
  0639f	1b		 DB	 27			; 0000001bH
  063a0	1c		 DB	 28			; 0000001cH
  063a1	1d		 DB	 29			; 0000001dH
  063a2	d4		 DB	 -44			; ffffffd4H
  063a3	d4		 DB	 -44			; ffffffd4H
  063a4	1e		 DB	 30			; 0000001eH
  063a5	1f		 DB	 31			; 0000001fH
  063a6	20		 DB	 32			; 00000020H
  063a7	21		 DB	 33			; 00000021H
  063a8	22		 DB	 34			; 00000022H
  063a9	d4		 DB	 -44			; ffffffd4H
  063aa	23		 DB	 35			; 00000023H
  063ab	d4		 DB	 -44			; ffffffd4H
  063ac	24		 DB	 36			; 00000024H
  063ad	25		 DB	 37			; 00000025H
  063ae	26		 DB	 38			; 00000026H
  063af	27		 DB	 39			; 00000027H
  063b0	28		 DB	 40			; 00000028H
  063b1	29		 DB	 41			; 00000029H
  063b2	2a		 DB	 42			; 0000002aH
  063b3	2b		 DB	 43			; 0000002bH
  063b4	2c		 DB	 44			; 0000002cH
  063b5	d4		 DB	 -44			; ffffffd4H
  063b6	d4		 DB	 -44			; ffffffd4H
  063b7	d4		 DB	 -44			; ffffffd4H
  063b8	d4		 DB	 -44			; ffffffd4H
  063b9	d4		 DB	 -44			; ffffffd4H
  063ba	2d		 DB	 45			; 0000002dH
  063bb	2e		 DB	 46			; 0000002eH
  063bc	2f		 DB	 47			; 0000002fH
  063bd	30		 DB	 48			; 00000030H
  063be	31		 DB	 49			; 00000031H
  063bf	32		 DB	 50			; 00000032H
  063c0	33		 DB	 51			; 00000033H
  063c1	34		 DB	 52			; 00000034H
  063c2	35		 DB	 53			; 00000035H
  063c3	36		 DB	 54			; 00000036H
  063c4	37		 DB	 55			; 00000037H
  063c5	38		 DB	 56			; 00000038H
  063c6	39		 DB	 57			; 00000039H
  063c7	3a		 DB	 58			; 0000003aH
  063c8	d4		 DB	 -44			; ffffffd4H
  063c9	3b		 DB	 59			; 0000003bH
  063ca	3c		 DB	 60			; 0000003cH
  063cb	3d		 DB	 61			; 0000003dH
  063cc	3e		 DB	 62			; 0000003eH
  063cd	3f		 DB	 63			; 0000003fH
  063ce	40		 DB	 64			; 00000040H
  063cf	d4		 DB	 -44			; ffffffd4H
  063d0	41		 DB	 65			; 00000041H
  063d1	d4		 DB	 -44			; ffffffd4H
  063d2	d4		 DB	 -44			; ffffffd4H
  063d3	d4		 DB	 -44			; ffffffd4H
  063d4	d4		 DB	 -44			; ffffffd4H
  063d5	d4		 DB	 -44			; ffffffd4H
  063d6	d4		 DB	 -44			; ffffffd4H
  063d7	d4		 DB	 -44			; ffffffd4H
  063d8	42		 DB	 66			; 00000042H
  063d9	43		 DB	 67			; 00000043H
  063da	44		 DB	 68			; 00000044H
  063db	45		 DB	 69			; 00000045H
  063dc	46		 DB	 70			; 00000046H
  063dd	47		 DB	 71			; 00000047H
  063de	48		 DB	 72			; 00000048H
  063df	49		 DB	 73			; 00000049H
  063e0	4a		 DB	 74			; 0000004aH
  063e1	4b		 DB	 75			; 0000004bH
  063e2	4c		 DB	 76			; 0000004cH
  063e3	4d		 DB	 77			; 0000004dH
  063e4	4e		 DB	 78			; 0000004eH
  063e5	4f		 DB	 79			; 0000004fH
  063e6	50		 DB	 80			; 00000050H
  063e7	51		 DB	 81			; 00000051H
  063e8	52		 DB	 82			; 00000052H
  063e9	53		 DB	 83			; 00000053H
  063ea	54		 DB	 84			; 00000054H
  063eb	55		 DB	 85			; 00000055H
  063ec	56		 DB	 86			; 00000056H
  063ed	57		 DB	 87			; 00000057H
  063ee	58		 DB	 88			; 00000058H
  063ef	59		 DB	 89			; 00000059H
  063f0	5a		 DB	 90			; 0000005aH
  063f1	5b		 DB	 91			; 0000005bH
  063f2	5c		 DB	 92			; 0000005cH
  063f3	5d		 DB	 93			; 0000005dH
  063f4	5e		 DB	 94			; 0000005eH
  063f5	5f		 DB	 95			; 0000005fH
  063f6	60		 DB	 96			; 00000060H
  063f7	61		 DB	 97			; 00000061H
  063f8	62		 DB	 98			; 00000062H
  063f9	63		 DB	 99			; 00000063H
  063fa	64		 DB	 100			; 00000064H
  063fb	d4		 DB	 -44			; ffffffd4H
  063fc	65		 DB	 101			; 00000065H
  063fd	66		 DB	 102			; 00000066H
  063fe	67		 DB	 103			; 00000067H
  063ff	68		 DB	 104			; 00000068H
  06400	69		 DB	 105			; 00000069H
  06401	6a		 DB	 106			; 0000006aH
  06402	6b		 DB	 107			; 0000006bH
  06403	6c		 DB	 108			; 0000006cH
  06404	6d		 DB	 109			; 0000006dH
  06405	d4		 DB	 -44			; ffffffd4H
  06406	6e		 DB	 110			; 0000006eH
  06407	6f		 DB	 111			; 0000006fH
  06408	70		 DB	 112			; 00000070H
  06409	d4		 DB	 -44			; ffffffd4H
  0640a	d4		 DB	 -44			; ffffffd4H
  0640b	71		 DB	 113			; 00000071H
  0640c	d4		 DB	 -44			; ffffffd4H
  0640d	d4		 DB	 -44			; ffffffd4H
  0640e	d4		 DB	 -44			; ffffffd4H
  0640f	d4		 DB	 -44			; ffffffd4H
  06410	d4		 DB	 -44			; ffffffd4H
  06411	d4		 DB	 -44			; ffffffd4H
  06412	d4		 DB	 -44			; ffffffd4H
  06413	72		 DB	 114			; 00000072H
  06414	73		 DB	 115			; 00000073H
  06415	74		 DB	 116			; 00000074H
  06416	75		 DB	 117			; 00000075H
  06417	76		 DB	 118			; 00000076H
  06418	77		 DB	 119			; 00000077H
  06419	78		 DB	 120			; 00000078H
  0641a	79		 DB	 121			; 00000079H
  0641b	7a		 DB	 122			; 0000007aH
  0641c	7b		 DB	 123			; 0000007bH
  0641d	7c		 DB	 124			; 0000007cH
  0641e	7d		 DB	 125			; 0000007dH
  0641f	7e		 DB	 126			; 0000007eH
  06420	7f		 DB	 127			; 0000007fH
  06421	80		 DB	 -128			; ffffff80H
  06422	81		 DB	 -127			; ffffff81H
  06423	82		 DB	 -126			; ffffff82H
  06424	83		 DB	 -125			; ffffff83H
  06425	84		 DB	 -124			; ffffff84H
  06426	85		 DB	 -123			; ffffff85H
  06427	86		 DB	 -122			; ffffff86H
  06428	d4		 DB	 -44			; ffffffd4H
  06429	d4		 DB	 -44			; ffffffd4H
  0642a	d4		 DB	 -44			; ffffffd4H
  0642b	87		 DB	 -121			; ffffff87H
  0642c	d4		 DB	 -44			; ffffffd4H
  0642d	d4		 DB	 -44			; ffffffd4H
  0642e	d4		 DB	 -44			; ffffffd4H
  0642f	d4		 DB	 -44			; ffffffd4H
  06430	d4		 DB	 -44			; ffffffd4H
  06431	d4		 DB	 -44			; ffffffd4H
  06432	d4		 DB	 -44			; ffffffd4H
  06433	d4		 DB	 -44			; ffffffd4H
  06434	d4		 DB	 -44			; ffffffd4H
  06435	d4		 DB	 -44			; ffffffd4H
  06436	d4		 DB	 -44			; ffffffd4H
  06437	d4		 DB	 -44			; ffffffd4H
  06438	d4		 DB	 -44			; ffffffd4H
  06439	d4		 DB	 -44			; ffffffd4H
  0643a	d4		 DB	 -44			; ffffffd4H
  0643b	d4		 DB	 -44			; ffffffd4H
  0643c	d4		 DB	 -44			; ffffffd4H
  0643d	d4		 DB	 -44			; ffffffd4H
  0643e	d4		 DB	 -44			; ffffffd4H
  0643f	d4		 DB	 -44			; ffffffd4H
  06440	d4		 DB	 -44			; ffffffd4H
  06441	d4		 DB	 -44			; ffffffd4H
  06442	d4		 DB	 -44			; ffffffd4H
  06443	d4		 DB	 -44			; ffffffd4H
  06444	d4		 DB	 -44			; ffffffd4H
  06445	d4		 DB	 -44			; ffffffd4H
  06446	d4		 DB	 -44			; ffffffd4H
  06447	d4		 DB	 -44			; ffffffd4H
  06448	d4		 DB	 -44			; ffffffd4H
  06449	d4		 DB	 -44			; ffffffd4H
  0644a	d4		 DB	 -44			; ffffffd4H
  0644b	d4		 DB	 -44			; ffffffd4H
  0644c	d4		 DB	 -44			; ffffffd4H
  0644d	d4		 DB	 -44			; ffffffd4H
  0644e	d4		 DB	 -44			; ffffffd4H
  0644f	d4		 DB	 -44			; ffffffd4H
  06450	d4		 DB	 -44			; ffffffd4H
  06451	d4		 DB	 -44			; ffffffd4H
  06452	d4		 DB	 -44			; ffffffd4H
  06453	d4		 DB	 -44			; ffffffd4H
  06454	d4		 DB	 -44			; ffffffd4H
  06455	d4		 DB	 -44			; ffffffd4H
  06456	d4		 DB	 -44			; ffffffd4H
  06457	d4		 DB	 -44			; ffffffd4H
  06458	d4		 DB	 -44			; ffffffd4H
  06459	d4		 DB	 -44			; ffffffd4H
  0645a	d4		 DB	 -44			; ffffffd4H
  0645b	d4		 DB	 -44			; ffffffd4H
  0645c	d4		 DB	 -44			; ffffffd4H
  0645d	d4		 DB	 -44			; ffffffd4H
  0645e	d4		 DB	 -44			; ffffffd4H
  0645f	d4		 DB	 -44			; ffffffd4H
  06460	d4		 DB	 -44			; ffffffd4H
  06461	d4		 DB	 -44			; ffffffd4H
  06462	d4		 DB	 -44			; ffffffd4H
  06463	d4		 DB	 -44			; ffffffd4H
  06464	d4		 DB	 -44			; ffffffd4H
  06465	88		 DB	 -120			; ffffff88H
  06466	89		 DB	 -119			; ffffff89H
  06467	8a		 DB	 -118			; ffffff8aH
  06468	8b		 DB	 -117			; ffffff8bH
  06469	8c		 DB	 -116			; ffffff8cH
  0646a	8d		 DB	 -115			; ffffff8dH
  0646b	8e		 DB	 -114			; ffffff8eH
  0646c	d4		 DB	 -44			; ffffffd4H
  0646d	d4		 DB	 -44			; ffffffd4H
  0646e	d4		 DB	 -44			; ffffffd4H
  0646f	d4		 DB	 -44			; ffffffd4H
  06470	d4		 DB	 -44			; ffffffd4H
  06471	d4		 DB	 -44			; ffffffd4H
  06472	d4		 DB	 -44			; ffffffd4H
  06473	d4		 DB	 -44			; ffffffd4H
  06474	d4		 DB	 -44			; ffffffd4H
  06475	d4		 DB	 -44			; ffffffd4H
  06476	d4		 DB	 -44			; ffffffd4H
  06477	d4		 DB	 -44			; ffffffd4H
  06478	d4		 DB	 -44			; ffffffd4H
  06479	d4		 DB	 -44			; ffffffd4H
  0647a	d4		 DB	 -44			; ffffffd4H
  0647b	d4		 DB	 -44			; ffffffd4H
  0647c	d4		 DB	 -44			; ffffffd4H
  0647d	d4		 DB	 -44			; ffffffd4H
  0647e	d4		 DB	 -44			; ffffffd4H
  0647f	d4		 DB	 -44			; ffffffd4H
  06480	d4		 DB	 -44			; ffffffd4H
  06481	d4		 DB	 -44			; ffffffd4H
  06482	d4		 DB	 -44			; ffffffd4H
  06483	d4		 DB	 -44			; ffffffd4H
  06484	d4		 DB	 -44			; ffffffd4H
  06485	d4		 DB	 -44			; ffffffd4H
  06486	d4		 DB	 -44			; ffffffd4H
  06487	d4		 DB	 -44			; ffffffd4H
  06488	d4		 DB	 -44			; ffffffd4H
  06489	d4		 DB	 -44			; ffffffd4H
  0648a	d4		 DB	 -44			; ffffffd4H
  0648b	d4		 DB	 -44			; ffffffd4H
  0648c	d4		 DB	 -44			; ffffffd4H
  0648d	d4		 DB	 -44			; ffffffd4H
  0648e	d4		 DB	 -44			; ffffffd4H
  0648f	d4		 DB	 -44			; ffffffd4H
  06490	d4		 DB	 -44			; ffffffd4H
  06491	d4		 DB	 -44			; ffffffd4H
  06492	d4		 DB	 -44			; ffffffd4H
  06493	d4		 DB	 -44			; ffffffd4H
  06494	d4		 DB	 -44			; ffffffd4H
  06495	d4		 DB	 -44			; ffffffd4H
  06496	d4		 DB	 -44			; ffffffd4H
  06497	d4		 DB	 -44			; ffffffd4H
  06498	d4		 DB	 -44			; ffffffd4H
  06499	d4		 DB	 -44			; ffffffd4H
  0649a	d4		 DB	 -44			; ffffffd4H
  0649b	d4		 DB	 -44			; ffffffd4H
  0649c	d4		 DB	 -44			; ffffffd4H
  0649d	d4		 DB	 -44			; ffffffd4H
  0649e	d4		 DB	 -44			; ffffffd4H
  0649f	d4		 DB	 -44			; ffffffd4H
  064a0	d4		 DB	 -44			; ffffffd4H
  064a1	d4		 DB	 -44			; ffffffd4H
  064a2	d4		 DB	 -44			; ffffffd4H
  064a3	d4		 DB	 -44			; ffffffd4H
  064a4	d4		 DB	 -44			; ffffffd4H
  064a5	d4		 DB	 -44			; ffffffd4H
  064a6	d4		 DB	 -44			; ffffffd4H
  064a7	d4		 DB	 -44			; ffffffd4H
  064a8	d4		 DB	 -44			; ffffffd4H
  064a9	d4		 DB	 -44			; ffffffd4H
  064aa	d4		 DB	 -44			; ffffffd4H
  064ab	d4		 DB	 -44			; ffffffd4H
  064ac	d4		 DB	 -44			; ffffffd4H
  064ad	d4		 DB	 -44			; ffffffd4H
  064ae	d4		 DB	 -44			; ffffffd4H
  064af	d4		 DB	 -44			; ffffffd4H
  064b0	d4		 DB	 -44			; ffffffd4H
  064b1	d4		 DB	 -44			; ffffffd4H
  064b2	d4		 DB	 -44			; ffffffd4H
  064b3	d4		 DB	 -44			; ffffffd4H
  064b4	d4		 DB	 -44			; ffffffd4H
  064b5	d4		 DB	 -44			; ffffffd4H
  064b6	d4		 DB	 -44			; ffffffd4H
  064b7	d4		 DB	 -44			; ffffffd4H
  064b8	d4		 DB	 -44			; ffffffd4H
  064b9	d4		 DB	 -44			; ffffffd4H
  064ba	d4		 DB	 -44			; ffffffd4H
  064bb	d4		 DB	 -44			; ffffffd4H
  064bc	d4		 DB	 -44			; ffffffd4H
  064bd	d4		 DB	 -44			; ffffffd4H
  064be	d4		 DB	 -44			; ffffffd4H
  064bf	d4		 DB	 -44			; ffffffd4H
  064c0	d4		 DB	 -44			; ffffffd4H
  064c1	d4		 DB	 -44			; ffffffd4H
  064c2	d4		 DB	 -44			; ffffffd4H
  064c3	d4		 DB	 -44			; ffffffd4H
  064c4	d4		 DB	 -44			; ffffffd4H
  064c5	d4		 DB	 -44			; ffffffd4H
  064c6	d4		 DB	 -44			; ffffffd4H
  064c7	d4		 DB	 -44			; ffffffd4H
  064c8	8f		 DB	 -113			; ffffff8fH
  064c9	d4		 DB	 -44			; ffffffd4H
  064ca	90		 DB	 -112			; ffffff90H
  064cb	d4		 DB	 -44			; ffffffd4H
  064cc	91		 DB	 -111			; ffffff91H
  064cd	92		 DB	 -110			; ffffff92H
  064ce	93		 DB	 -109			; ffffff93H
  064cf	94		 DB	 -108			; ffffff94H
  064d0	95		 DB	 -107			; ffffff95H
  064d1	96		 DB	 -106			; ffffff96H
  064d2	97		 DB	 -105			; ffffff97H
  064d3	98		 DB	 -104			; ffffff98H
  064d4	99		 DB	 -103			; ffffff99H
  064d5	9a		 DB	 -102			; ffffff9aH
  064d6	9b		 DB	 -101			; ffffff9bH
  064d7	9c		 DB	 -100			; ffffff9cH
  064d8	9d		 DB	 -99			; ffffff9dH
  064d9	9e		 DB	 -98			; ffffff9eH
  064da	9f		 DB	 -97			; ffffff9fH
  064db	a0		 DB	 -96			; ffffffa0H
  064dc	a1		 DB	 -95			; ffffffa1H
  064dd	a2		 DB	 -94			; ffffffa2H
  064de	a3		 DB	 -93			; ffffffa3H
  064df	a4		 DB	 -92			; ffffffa4H
  064e0	a5		 DB	 -91			; ffffffa5H
  064e1	a6		 DB	 -90			; ffffffa6H
  064e2	a7		 DB	 -89			; ffffffa7H
  064e3	a8		 DB	 -88			; ffffffa8H
  064e4	a9		 DB	 -87			; ffffffa9H
  064e5	aa		 DB	 -86			; ffffffaaH
  064e6	ab		 DB	 -85			; ffffffabH
  064e7	ac		 DB	 -84			; ffffffacH
  064e8	ad		 DB	 -83			; ffffffadH
  064e9	ae		 DB	 -82			; ffffffaeH
  064ea	d4		 DB	 -44			; ffffffd4H
  064eb	d4		 DB	 -44			; ffffffd4H
  064ec	d4		 DB	 -44			; ffffffd4H
  064ed	af		 DB	 -81			; ffffffafH
  064ee	b0		 DB	 -80			; ffffffb0H
  064ef	b1		 DB	 -79			; ffffffb1H
  064f0	b2		 DB	 -78			; ffffffb2H
  064f1	b3		 DB	 -77			; ffffffb3H
  064f2	b4		 DB	 -76			; ffffffb4H
  064f3	b5		 DB	 -75			; ffffffb5H
  064f4	b6		 DB	 -74			; ffffffb6H
  064f5	b7		 DB	 -73			; ffffffb7H
  064f6	b8		 DB	 -72			; ffffffb8H
  064f7	b9		 DB	 -71			; ffffffb9H
  064f8	ba		 DB	 -70			; ffffffbaH
  064f9	bb		 DB	 -69			; ffffffbbH
  064fa	bc		 DB	 -68			; ffffffbcH
  064fb	bd		 DB	 -67			; ffffffbdH
  064fc	be		 DB	 -66			; ffffffbeH
  064fd	bf		 DB	 -65			; ffffffbfH
  064fe	c0		 DB	 -64			; ffffffc0H
  064ff	c1		 DB	 -63			; ffffffc1H
  06500	c2		 DB	 -62			; ffffffc2H
  06501	c3		 DB	 -61			; ffffffc3H
  06502	c4		 DB	 -60			; ffffffc4H
  06503	c5		 DB	 -59			; ffffffc5H
  06504	c6		 DB	 -58			; ffffffc6H
  06505	c7		 DB	 -57			; ffffffc7H
  06506	c8		 DB	 -56			; ffffffc8H
  06507	c9		 DB	 -55			; ffffffc9H
  06508	ca		 DB	 -54			; ffffffcaH
  06509	cb		 DB	 -53			; ffffffcbH
  0650a	cc		 DB	 -52			; ffffffccH
  0650b	cd		 DB	 -51			; ffffffcdH
  0650c	ce		 DB	 -50			; ffffffceH
  0650d	cf		 DB	 -49			; ffffffcfH
  0650e	d0		 DB	 -48			; ffffffd0H
  0650f	d1		 DB	 -47			; ffffffd1H
  06510	d2		 DB	 -46			; ffffffd2H
  06511	d4		 DB	 -44			; ffffffd4H
  06512	d4		 DB	 -44			; ffffffd4H
  06513	d4		 DB	 -44			; ffffffd4H
  06514	d4		 DB	 -44			; ffffffd4H
  06515	d4		 DB	 -44			; ffffffd4H
  06516	d4		 DB	 -44			; ffffffd4H
  06517	d4		 DB	 -44			; ffffffd4H
  06518	d4		 DB	 -44			; ffffffd4H
  06519	d4		 DB	 -44			; ffffffd4H
  0651a	d4		 DB	 -44			; ffffffd4H
  0651b	d4		 DB	 -44			; ffffffd4H
  0651c	d4		 DB	 -44			; ffffffd4H
  0651d	d4		 DB	 -44			; ffffffd4H
  0651e	d4		 DB	 -44			; ffffffd4H
  0651f	d4		 DB	 -44			; ffffffd4H
  06520	d4		 DB	 -44			; ffffffd4H
  06521	d4		 DB	 -44			; ffffffd4H
  06522	d3		 DB	 -45			; ffffffd3H
  06523	90		 npad	 1
$LN1158@Management:
  06524	00 00 00 00	 DD	 $LN762@Management
  06528	00 00 00 00	 DD	 $LN761@Management
  0652c	00 00 00 00	 DD	 $LN760@Management
  06530	00 00 00 00	 DD	 $LN759@Management
  06534	00 00 00 00	 DD	 $LN758@Management
  06538	00 00 00 00	 DD	 $LN757@Management
  0653c	00 00 00 00	 DD	 $LN763@Management
$LN1021@Management:
  06540	00		 DB	 0
  06541	06		 DB	 6
  06542	00		 DB	 0
  06543	06		 DB	 6
  06544	06		 DB	 6
  06545	06		 DB	 6
  06546	06		 DB	 6
  06547	06		 DB	 6
  06548	06		 DB	 6
  06549	06		 DB	 6
  0654a	06		 DB	 6
  0654b	06		 DB	 6
  0654c	06		 DB	 6
  0654d	06		 DB	 6
  0654e	06		 DB	 6
  0654f	06		 DB	 6
  06550	01		 DB	 1
  06551	06		 DB	 6
  06552	01		 DB	 1
  06553	06		 DB	 6
  06554	06		 DB	 6
  06555	06		 DB	 6
  06556	06		 DB	 6
  06557	06		 DB	 6
  06558	06		 DB	 6
  06559	06		 DB	 6
  0655a	06		 DB	 6
  0655b	06		 DB	 6
  0655c	06		 DB	 6
  0655d	06		 DB	 6
  0655e	06		 DB	 6
  0655f	06		 DB	 6
  06560	02		 DB	 2
  06561	06		 DB	 6
  06562	02		 DB	 2
  06563	06		 DB	 6
  06564	06		 DB	 6
  06565	06		 DB	 6
  06566	06		 DB	 6
  06567	06		 DB	 6
  06568	06		 DB	 6
  06569	06		 DB	 6
  0656a	06		 DB	 6
  0656b	06		 DB	 6
  0656c	06		 DB	 6
  0656d	06		 DB	 6
  0656e	06		 DB	 6
  0656f	06		 DB	 6
  06570	06		 DB	 6
  06571	03		 DB	 3
  06572	06		 DB	 6
  06573	06		 DB	 6
  06574	06		 DB	 6
  06575	06		 DB	 6
  06576	06		 DB	 6
  06577	06		 DB	 6
  06578	06		 DB	 6
  06579	06		 DB	 6
  0657a	06		 DB	 6
  0657b	06		 DB	 6
  0657c	06		 DB	 6
  0657d	06		 DB	 6
  0657e	06		 DB	 6
  0657f	06		 DB	 6
  06580	06		 DB	 6
  06581	04		 DB	 4
  06582	06		 DB	 6
  06583	06		 DB	 6
  06584	06		 DB	 6
  06585	06		 DB	 6
  06586	06		 DB	 6
  06587	06		 DB	 6
  06588	06		 DB	 6
  06589	06		 DB	 6
  0658a	06		 DB	 6
  0658b	06		 DB	 6
  0658c	06		 DB	 6
  0658d	06		 DB	 6
  0658e	06		 DB	 6
  0658f	06		 DB	 6
  06590	05		 DB	 5
  06591	06		 DB	 6
  06592	05		 DB	 5
?ManagementProc@CGMMng@@QAEHPAUOBJECTSTRUCT@@PADH@Z ENDP ; CGMMng::ManagementProc
_TEXT	ENDS
PUBLIC	??_C@_0BE@JELMHMFI@KUNDUN_EVENT_GM_LOG?$AA@	; `string'
PUBLIC	??_C@_0BG@PIGDOKKG@?4?2KUNDUN_EVENT_GM_LOG?$AA@	; `string'
EXTRN	_atexit:PROC
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
;	COMDAT ??_C@_0BE@JELMHMFI@KUNDUN_EVENT_GM_LOG?$AA@
CONST	SEGMENT
??_C@_0BE@JELMHMFI@KUNDUN_EVENT_GM_LOG?$AA@ DB 'KUNDUN_EVENT_GM_LOG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PIGDOKKG@?4?2KUNDUN_EVENT_GM_LOG?$AA@
CONST	SEGMENT
??_C@_0BG@PIGDOKKG@?4?2KUNDUN_EVENT_GM_LOG?$AA@ DB '.\KUNDUN_EVENT_GM_LOG'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??__EKUNDUN_GM_LOG@@YAXXZ
text$yc	SEGMENT
??__EKUNDUN_GM_LOG@@YAXXZ PROC				; `dynamic initializer for 'KUNDUN_GM_LOG'', COMDAT

  00000	6a 01		 push	 1
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PIGDOKKG@?4?2KUNDUN_EVENT_GM_LOG?$AA@
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JELMHMFI@KUNDUN_EVENT_GM_LOG?$AA@
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  00011	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  00016	68 00 00 00 00	 push	 OFFSET ??__FKUNDUN_GM_LOG@@YAXXZ ; `dynamic atexit destructor for 'KUNDUN_GM_LOG''
  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__EKUNDUN_GM_LOG@@YAXXZ ENDP				; `dynamic initializer for 'KUNDUN_GM_LOG''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__EcManager@@YAXXZ
text$yc	SEGMENT
??__EcManager@@YAXXZ PROC				; `dynamic initializer for 'cManager'', COMDAT

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?cManager@@3VCGMMng@@A ; cManager
  00005	e8 00 00 00 00	 call	 ??0CGMMng@@QAE@XZ	; CGMMng::CGMMng
  0000a	68 00 00 00 00	 push	 OFFSET ??__FcManager@@YAXXZ ; `dynamic atexit destructor for 'cManager''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EcManager@@YAXXZ ENDP				; `dynamic initializer for 'cManager''
text$yc	ENDS
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
; Function compile flags: /Ogtp
;	COMDAT ??__FKUNDUN_GM_LOG@@YAXXZ
text$yd	SEGMENT
??__FKUNDUN_GM_LOG@@YAXXZ PROC				; `dynamic atexit destructor for 'KUNDUN_GM_LOG'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?KUNDUN_GM_LOG@@3VCLogToFile@@A ; KUNDUN_GM_LOG
  00005	e9 00 00 00 00	 jmp	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
??__FKUNDUN_GM_LOG@@YAXXZ ENDP				; `dynamic atexit destructor for 'KUNDUN_GM_LOG''
; Function compile flags: /Ogtp
text$yd	ENDS
;	COMDAT ??__FcManager@@YAXXZ
text$yd	SEGMENT
??__FcManager@@YAXXZ PROC				; `dynamic atexit destructor for 'cManager'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?cManager@@3VCGMMng@@A ; cManager
  00005	e9 00 00 00 00	 jmp	 ??1CGMMng@@UAE@XZ	; CGMMng::~CGMMng
??__FcManager@@YAXXZ ENDP				; `dynamic atexit destructor for 'cManager''
text$yd	ENDS
PUBLIC	?cManager@@3VCGMMng@@A				; cManager
PUBLIC	?KUNDUN_GM_LOG@@3VCLogToFile@@A			; KUNDUN_GM_LOG
_BSS	SEGMENT
?cManager@@3VCGMMng@@A DB 04ce8H DUP (?)		; cManager
?KUNDUN_GM_LOG@@3VCLogToFile@@A DB 010228H DUP (?)	; KUNDUN_GM_LOG
_BSS	ENDS
CRT$XCU	SEGMENT
_KUNDUN_GM_LOG$initializer$ DD FLAT:??__EKUNDUN_GM_LOG@@YAXXZ
_cManager$initializer$ DD FLAT:??__EcManager@@YAXXZ
CRT$XCU	ENDS
END
