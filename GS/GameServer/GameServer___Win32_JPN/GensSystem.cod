; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\GensSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_06NHOCOOCC@Vanert?$AA@			; `string'
PUBLIC	??_C@_07PFCPPCNE@Duprian?$AA@			; `string'
PUBLIC	??_C@_0P@EMILGBDM@NONE_INFLUENCE?$AA@		; `string'
PUBLIC	?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A	; pGensMsg
PUBLIC	?pGensCount@@3UPMSG_SEND_GENS_MEMBER_VIEWPORT@@A ; pGensCount
PUBLIC	?lpViewportAdd@@3PAEA				; lpViewportAdd
PUBLIC	?StartContribution@@3HA				; StartContribution
PUBLIC	?RequiredLevel@@3HA				; RequiredLevel
PUBLIC	?RequiredReset@@3HA				; RequiredReset
PUBLIC	?szInfluence@@3PAPADA				; szInfluence
_BSS	SEGMENT
?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A DB 010H DUP (?) ; pGensMsg
?pGensCount@@3UPMSG_SEND_GENS_MEMBER_VIEWPORT@@A DF 01H DUP (?) ; pGensCount
	ALIGN	4

?lpViewportAdd@@3PAEA DB 07fdH DUP (?)			; lpViewportAdd
	ALIGN	4

?RequiredReset@@3HA DD 01H DUP (?)			; RequiredReset
_BSS	ENDS
;	COMDAT ??_C@_06NHOCOOCC@Vanert?$AA@
CONST	SEGMENT
??_C@_06NHOCOOCC@Vanert?$AA@ DB 'Vanert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PFCPPCNE@Duprian?$AA@
CONST	SEGMENT
??_C@_07PFCPPCNE@Duprian?$AA@ DB 'Duprian', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EMILGBDM@NONE_INFLUENCE?$AA@
CONST	SEGMENT
??_C@_0P@EMILGBDM@NONE_INFLUENCE?$AA@ DB 'NONE_INFLUENCE', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
?StartContribution@@3HA DD 014H				; StartContribution
?RequiredLevel@@3HA DD 032H				; RequiredLevel
?szInfluence@@3PAPADA DD FLAT:??_C@_0P@EMILGBDM@NONE_INFLUENCE?$AA@ ; szInfluence
	DD	FLAT:??_C@_07PFCPPCNE@Duprian?$AA@
	DD	FLAT:??_C@_06NHOCOOCC@Vanert?$AA@
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_ungetc:PROC
EXTRN	_getc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_TokenNumber DD	01H DUP (?)
_CurrentToken DD 01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\common\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	TokenString[0] = '\0';

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL30@GetToken:

; 27   : 
; 28   : 	do
; 29   : 	{
; 30   : 		// 현재 파일의 끝이면 END 리턴
; 31   : 		if( (ch = (char)fgetc(SMDFile)) == EOF )

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 5f		 je	 SHORT $LN39@GetToken

; 33   : 
; 34   : 		// 만일 // 값이면 '\n'이 나올때 까지 돌아라.
; 35   : 		if( ch == '/' && ( ch = (char)fgetc(SMDFile) ) == '/' )	

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 2c		 jne	 SHORT $LN29@GetToken
  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 16		 jne	 SHORT $LN29@GetToken
$LL25@GetToken:

; 36   : 		{
; 37   : 			while( (ch = (char)fgetc(SMDFile)) != '\n' );

  00050	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 _fgetc
  0005c	8a d8		 mov	 bl, al
  0005e	83 c4 04	 add	 esp, 4
  00061	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00064	75 ea		 jne	 SHORT $LL25@GetToken
$LN29@GetToken:

; 38   : 		}
; 39   : 	} while( isspace(ch) );

  00066	0f be c3	 movsx	 eax, bl
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 _isspace
  0006f	83 c4 04	 add	 esp, 4
  00072	85 c0		 test	 eax, eax
  00074	75 aa		 jne	 SHORT $LL30@GetToken

; 40   : 	
; 41   : 	char *p, TempString[100];
; 42   : 
; 43   : 	switch(ch)

  00076	0f be c3	 movsx	 eax, bl
  00079	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  0007c	56		 push	 esi
  0007d	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00080	0f 87 8d 01 00
	00		 ja	 $LN5@GetToken
  00086	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN45@GetToken[ecx]
  0008d	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN49@GetToken[ecx*4]
$LN39@GetToken:

; 32   : 			return END;

  00094	b8 02 00 00 00	 mov	 eax, 2
  00099	5b		 pop	 ebx

; 92   : 	}
; 93   : }

  0009a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009d	33 cd		 xor	 ecx, ebp
  0009f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
$LN21@GetToken:

; 44   : 	{	
; 45   : 	case '#':
; 46   : 		p = TokenString;
; 47   : 		while ( ( (ch = getc(SMDFile) ) != EOF) && (ch!='#'))// || isalnum(ch)) )

  000a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000ae	52		 push	 edx
  000af	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  000b4	e8 00 00 00 00	 call	 _getc
  000b9	83 c4 04	 add	 esp, 4
  000bc	3c ff		 cmp	 al, -1
  000be	74 19		 je	 SHORT $LN19@GetToken
$LL20@GetToken:
  000c0	3c 23		 cmp	 al, 35			; 00000023H
  000c2	74 2c		 je	 SHORT $LN18@GetToken

; 48   : 			*p++ = ch;

  000c4	88 06		 mov	 BYTE PTR [esi], al
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000cb	50		 push	 eax
  000cc	46		 inc	 esi
  000cd	e8 00 00 00 00	 call	 _getc
  000d2	83 c4 04	 add	 esp, 4
  000d5	3c ff		 cmp	 al, -1
  000d7	75 e7		 jne	 SHORT $LL20@GetToken
$LN19@GetToken:

; 49   : 		if (ch!='#')

  000d9	3c 23		 cmp	 al, 35			; 00000023H
  000db	74 13		 je	 SHORT $LN18@GetToken

; 50   : 			ungetc(ch,SMDFile);

  000dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  000e3	0f be d0	 movsx	 edx, al
  000e6	51		 push	 ecx
  000e7	52		 push	 edx
  000e8	e8 00 00 00 00	 call	 _ungetc
  000ed	83 c4 08	 add	 esp, 8
$LN18@GetToken:

; 51   : 		*p = 0;

  000f0	c6 06 00	 mov	 BYTE PTR [esi], 0
  000f3	5e		 pop	 esi

; 52   : 		return CurrentToken = COMMAND;

  000f4	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  000fe	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  00103	5b		 pop	 ebx

; 92   : 	}
; 93   : }

  00104	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00107	33 cd		 xor	 ecx, ebp
  00109	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c3		 ret	 0
$LN17@GetToken:

; 53   : 	case ';':
; 54   : 		return CurrentToken = SEMICOLON;

  00112	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  00117	e9 92 01 00 00	 jmp	 $LN47@GetToken
$LN16@GetToken:

; 55   : 	case ',':
; 56   : 		return CurrentToken = COMMA;

  0011c	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  00121	e9 88 01 00 00	 jmp	 $LN47@GetToken
$LN15@GetToken:

; 57   : 	case '{':
; 58   : 		return CurrentToken = LP;

  00126	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  0012b	e9 7e 01 00 00	 jmp	 $LN47@GetToken
$LN14@GetToken:

; 59   : 	case '}':
; 60   : 		return CurrentToken = RP;

  00130	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  00135	e9 74 01 00 00	 jmp	 $LN47@GetToken
$LN13@GetToken:

; 61   : 	case '0':	case '1':	case '2':	case '3':	case '4':
; 62   : 	case '5':	case '6':	case '7':	case '8':	case '9':
; 63   : 	case '.':	case '-':
; 64   : 		ungetc(ch,SMDFile);

  0013a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00140	51		 push	 ecx
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 _ungetc

; 65   : 		p = TempString;
; 66   : 		while ( (  (ch = getc(SMDFile) ) !=EOF) && (ch=='.' || isdigit(ch) || ch=='-') )

  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0014d	52		 push	 edx
  0014e	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  00151	e8 00 00 00 00	 call	 _getc
  00156	8a d8		 mov	 bl, al
  00158	83 c4 0c	 add	 esp, 12			; 0000000cH
  0015b	80 fb ff	 cmp	 bl, -1
  0015e	74 33		 je	 SHORT $LN11@GetToken
$LL12@GetToken:
  00160	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00163	74 15		 je	 SHORT $LN10@GetToken
  00165	0f be c3	 movsx	 eax, bl
  00168	50		 push	 eax
  00169	e8 00 00 00 00	 call	 _isdigit
  0016e	83 c4 04	 add	 esp, 4
  00171	85 c0		 test	 eax, eax
  00173	75 05		 jne	 SHORT $LN10@GetToken
  00175	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  00178	75 19		 jne	 SHORT $LN11@GetToken
$LN10@GetToken:
  0017a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile

; 67   : 			*p++ = ch;

  00180	88 1e		 mov	 BYTE PTR [esi], bl
  00182	51		 push	 ecx
  00183	46		 inc	 esi
  00184	e8 00 00 00 00	 call	 _getc
  00189	8a d8		 mov	 bl, al
  0018b	83 c4 04	 add	 esp, 4
  0018e	80 fb ff	 cmp	 bl, -1
  00191	75 cd		 jne	 SHORT $LL12@GetToken
$LN11@GetToken:

; 68   : 		*p = 0;
; 69   : 		TokenNumber = (float)atof(TempString);

  00193	8d 55 98	 lea	 edx, DWORD PTR _TempString$[ebp]
  00196	52		 push	 edx
  00197	c6 06 00	 mov	 BYTE PTR [esi], 0
  0019a	e8 00 00 00 00	 call	 _atof
  0019f	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  001a5	83 c4 04	 add	 esp, 4
  001a8	5e		 pop	 esi

; 70   : 		//			sscanf(TempString," %f ",&TokenNumber);
; 71   : 		return CurrentToken = NUMBER;

  001a9	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  001b3	b8 01 00 00 00	 mov	 eax, 1
  001b8	5b		 pop	 ebx

; 92   : 	}
; 93   : }

  001b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bc	33 cd		 xor	 ecx, ebp
  001be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c3	8b e5		 mov	 esp, ebp
  001c5	5d		 pop	 ebp
  001c6	c3		 ret	 0
$LN9@GetToken:

; 72   : 	case '"':
; 73   : 		p = TokenString;
; 74   : 		while ( (  (ch = getc(SMDFile) ) !=EOF) && (ch!='"'))// || isalnum(ch)) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  001d2	e8 00 00 00 00	 call	 _getc
  001d7	83 c4 04	 add	 esp, 4
  001da	3c ff		 cmp	 al, -1
  001dc	74 20		 je	 SHORT $LN7@GetToken
  001de	8b ff		 npad	 2
$LL8@GetToken:
  001e0	3c 22		 cmp	 al, 34			; 00000022H
  001e2	0f 84 a2 00 00
	00		 je	 $LN6@GetToken
  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile

; 75   : 			*p++ = ch;

  001ee	88 06		 mov	 BYTE PTR [esi], al
  001f0	51		 push	 ecx
  001f1	46		 inc	 esi
  001f2	e8 00 00 00 00	 call	 _getc
  001f7	83 c4 04	 add	 esp, 4
  001fa	3c ff		 cmp	 al, -1
  001fc	75 e2		 jne	 SHORT $LL8@GetToken
$LN7@GetToken:

; 76   : 		if (ch!='"')

  001fe	3c 22		 cmp	 al, 34			; 00000022H
  00200	0f 84 84 00 00
	00		 je	 $LN6@GetToken

; 77   : 			ungetc(ch,SMDFile);

  00206	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0020c	0f be c0	 movsx	 eax, al
  0020f	52		 push	 edx
  00210	50		 push	 eax

; 78   : 		*p = 0;
; 79   : 		return CurrentToken = NAME;

  00211	eb 6f		 jmp	 SHORT $LN48@GetToken
$LN5@GetToken:

; 80   : 	default:
; 81   : 		if (isalpha(ch))	

  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 _isalpha
  00219	83 c4 04	 add	 esp, 4
  0021c	85 c0		 test	 eax, eax
  0021e	0f 84 85 00 00
	00		 je	 $LN4@GetToken

; 82   : 		{
; 83   : 			p = TokenString;
; 84   : 			*p++ = ch;
; 85   : 			while ( (  (ch = getc(SMDFile) ) !=EOF) && (ch=='.' || ch=='_' || isalnum(ch)) )

  00224	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  0022a	51		 push	 ecx
  0022b	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  00231	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  00236	e8 00 00 00 00	 call	 _getc
  0023b	8a d8		 mov	 bl, al
  0023d	83 c4 04	 add	 esp, 4
  00240	80 fb ff	 cmp	 bl, -1
  00243	74 32		 je	 SHORT $LN2@GetToken
$LL3@GetToken:
  00245	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00248	74 15		 je	 SHORT $LN1@GetToken
  0024a	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  0024d	74 10		 je	 SHORT $LN1@GetToken
  0024f	0f be d3	 movsx	 edx, bl
  00252	52		 push	 edx
  00253	e8 00 00 00 00	 call	 _isalnum
  00258	83 c4 04	 add	 esp, 4
  0025b	85 c0		 test	 eax, eax
  0025d	74 18		 je	 SHORT $LN2@GetToken
$LN1@GetToken:
  0025f	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile

; 86   : 				*p++ = ch;

  00264	88 1e		 mov	 BYTE PTR [esi], bl
  00266	50		 push	 eax
  00267	46		 inc	 esi
  00268	e8 00 00 00 00	 call	 _getc
  0026d	8a d8		 mov	 bl, al
  0026f	83 c4 04	 add	 esp, 4
  00272	80 fb ff	 cmp	 bl, -1
  00275	75 ce		 jne	 SHORT $LL3@GetToken
$LN2@GetToken:

; 87   : 			ungetc(ch,SMDFile);

  00277	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  0027d	0f be d3	 movsx	 edx, bl
  00280	51		 push	 ecx
  00281	52		 push	 edx
$LN48@GetToken:
  00282	e8 00 00 00 00	 call	 _ungetc
  00287	83 c4 08	 add	 esp, 8
$LN6@GetToken:

; 88   : 			*p = 0;

  0028a	c6 06 00	 mov	 BYTE PTR [esi], 0
  0028d	5e		 pop	 esi

; 89   : 			return CurrentToken = NAME;

  0028e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  00298	33 c0		 xor	 eax, eax
  0029a	5b		 pop	 ebx

; 92   : 	}
; 93   : }

  0029b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029e	33 cd		 xor	 ecx, ebp
  002a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a5	8b e5		 mov	 esp, ebp
  002a7	5d		 pop	 ebp
  002a8	c3		 ret	 0
$LN4@GetToken:

; 90   : 		}
; 91   : 		return CurrentToken = SMD_ERROR;

  002a9	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN47@GetToken:

; 92   : 	}
; 93   : }

  002ae	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b1	5e		 pop	 esi
  002b2	33 cd		 xor	 ecx, ebp
  002b4	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  002b9	5b		 pop	 ebx
  002ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002bf	8b e5		 mov	 esp, ebp
  002c1	5d		 pop	 ebp
  002c2	c3		 ret	 0
  002c3	90		 npad	 1
$LN49@GetToken:
  002c4	00 00 00 00	 DD	 $LN9@GetToken
  002c8	00 00 00 00	 DD	 $LN21@GetToken
  002cc	00 00 00 00	 DD	 $LN16@GetToken
  002d0	00 00 00 00	 DD	 $LN13@GetToken
  002d4	00 00 00 00	 DD	 $LN17@GetToken
  002d8	00 00 00 00	 DD	 $LN15@GetToken
  002dc	00 00 00 00	 DD	 $LN14@GetToken
  002e0	00 00 00 00	 DD	 $LN5@GetToken
$LN45@GetToken:
  002e4	00		 DB	 0
  002e5	01		 DB	 1
  002e6	07		 DB	 7
  002e7	07		 DB	 7
  002e8	07		 DB	 7
  002e9	07		 DB	 7
  002ea	07		 DB	 7
  002eb	07		 DB	 7
  002ec	07		 DB	 7
  002ed	07		 DB	 7
  002ee	02		 DB	 2
  002ef	03		 DB	 3
  002f0	03		 DB	 3
  002f1	07		 DB	 7
  002f2	03		 DB	 3
  002f3	03		 DB	 3
  002f4	03		 DB	 3
  002f5	03		 DB	 3
  002f6	03		 DB	 3
  002f7	03		 DB	 3
  002f8	03		 DB	 3
  002f9	03		 DB	 3
  002fa	03		 DB	 3
  002fb	03		 DB	 3
  002fc	07		 DB	 7
  002fd	04		 DB	 4
  002fe	07		 DB	 7
  002ff	07		 DB	 7
  00300	07		 DB	 7
  00301	07		 DB	 7
  00302	07		 DB	 7
  00303	07		 DB	 7
  00304	07		 DB	 7
  00305	07		 DB	 7
  00306	07		 DB	 7
  00307	07		 DB	 7
  00308	07		 DB	 7
  00309	07		 DB	 7
  0030a	07		 DB	 7
  0030b	07		 DB	 7
  0030c	07		 DB	 7
  0030d	07		 DB	 7
  0030e	07		 DB	 7
  0030f	07		 DB	 7
  00310	07		 DB	 7
  00311	07		 DB	 7
  00312	07		 DB	 7
  00313	07		 DB	 7
  00314	07		 DB	 7
  00315	07		 DB	 7
  00316	07		 DB	 7
  00317	07		 DB	 7
  00318	07		 DB	 7
  00319	07		 DB	 7
  0031a	07		 DB	 7
  0031b	07		 DB	 7
  0031c	07		 DB	 7
  0031d	07		 DB	 7
  0031e	07		 DB	 7
  0031f	07		 DB	 7
  00320	07		 DB	 7
  00321	07		 DB	 7
  00322	07		 DB	 7
  00323	07		 DB	 7
  00324	07		 DB	 7
  00325	07		 DB	 7
  00326	07		 DB	 7
  00327	07		 DB	 7
  00328	07		 DB	 7
  00329	07		 DB	 7
  0032a	07		 DB	 7
  0032b	07		 DB	 7
  0032c	07		 DB	 7
  0032d	07		 DB	 7
  0032e	07		 DB	 7
  0032f	07		 DB	 7
  00330	07		 DB	 7
  00331	07		 DB	 7
  00332	07		 DB	 7
  00333	07		 DB	 7
  00334	07		 DB	 7
  00335	07		 DB	 7
  00336	07		 DB	 7
  00337	07		 DB	 7
  00338	07		 DB	 7
  00339	07		 DB	 7
  0033a	07		 DB	 7
  0033b	07		 DB	 7
  0033c	07		 DB	 7
  0033d	05		 DB	 5
  0033e	07		 DB	 7
  0033f	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??_7GensSystem@@6B@				; GensSystem::`vftable'
PUBLIC	??0GensSystem@@QAE@XZ				; GensSystem::GensSystem
PUBLIC	??_R4GensSystem@@6B@				; GensSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGensSystem@@@8				; GensSystem `RTTI Type Descriptor'
PUBLIC	??_R3GensSystem@@8				; GensSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GensSystem@@8				; GensSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GensSystem@@8			; GensSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EGensSystem@@UAEPAXI@Z:PROC			; GensSystem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@GensSystem@@8
; File e:\work\tranet_version\gs\gameserver\genssystem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@GensSystem@@8 DD FLAT:??_R0?AVGensSystem@@@8 ; GensSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GensSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2GensSystem@@8
rdata$r	SEGMENT
??_R2GensSystem@@8 DD FLAT:??_R1A@?0A@EA@GensSystem@@8	; GensSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3GensSystem@@8
rdata$r	SEGMENT
??_R3GensSystem@@8 DD 00H				; GensSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GensSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGensSystem@@@8
_DATA	SEGMENT
??_R0?AVGensSystem@@@8 DD FLAT:??_7type_info@@6B@	; GensSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGensSystem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GensSystem@@6B@
rdata$r	SEGMENT
??_R4GensSystem@@6B@ DD 00H				; GensSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGensSystem@@@8
	DD	FLAT:??_R3GensSystem@@8
rdata$r	ENDS
;	COMDAT ??_7GensSystem@@6B@
CONST	SEGMENT
??_7GensSystem@@6B@ DD FLAT:??_R4GensSystem@@6B@	; GensSystem::`vftable'
	DD	FLAT:??_EGensSystem@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0GensSystem@@QAE@XZ
_TEXT	SEGMENT
??0GensSystem@@QAE@XZ PROC				; GensSystem::GensSystem, COMDAT
; _this$ = ecx

; 38   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7GensSystem@@6B@

; 39   : 	this->ChatPrice = 0;

  00008	c7 80 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+180], 0

; 40   : }

  00012	c3		 ret	 0
??0GensSystem@@QAE@XZ ENDP				; GensSystem::GensSystem
_TEXT	ENDS
PUBLIC	??1GensSystem@@UAE@XZ				; GensSystem::~GensSystem
; Function compile flags: /Ogtp
;	COMDAT ??1GensSystem@@UAE@XZ
_TEXT	SEGMENT
??1GensSystem@@UAE@XZ PROC				; GensSystem::~GensSystem, COMDAT
; _this$ = ecx

; 44   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7GensSystem@@6B@

; 45   : 	// ----
; 46   : }

  00006	c3		 ret	 0
??1GensSystem@@UAE@XZ ENDP				; GensSystem::~GensSystem
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDReqAbusingInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GDReqAbusingInfo
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjIsConnected
; Function compile flags: /Ogtp
;	COMDAT ?GDReqAbusingInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$210949 = -24					; size = 17
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GDReqAbusingInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GDReqAbusingInfo, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 55   : 	if( !OBJMAX_RANGE(lpObj->m_Index) )

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	85 c0		 test	 eax, eax
  00018	0f 88 82 00 00
	00		 js	 $LN1@GDReqAbusi
  0001e	33 c9		 xor	 ecx, ecx
  00020	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00025	0f 9e c1	 setle	 cl
  00028	8b c1		 mov	 eax, ecx
  0002a	85 c0		 test	 eax, eax

; 56   : 	{
; 57   : 		return false;

  0002c	74 72		 je	 SHORT $LN1@GDReqAbusi

; 58   : 	}
; 59   : 	// ----
; 60   : 	if( gObjIsConnected(lpObj) )

  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00034	83 c4 04	 add	 esp, 4
  00037	85 c0		 test	 eax, eax
  00039	74 65		 je	 SHORT $LN1@GDReqAbusi

; 61   : 	{
; 62   : 		PMSG_REQ_ABUSING_INFO pMsg;		
; 63   : 		// ----
; 64   : 		PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  0003b	6a 11		 push	 17			; 00000011H
  0003d	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$210949[ebp]
  00040	68 f8 00 00 00	 push	 248			; 000000f8H
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 65   : 		// ----
; 66   : 		memcpy(pMsg.Name, lpObj->Name, 10);

  0004b	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  0004e	66 8b 56 7f	 mov	 dx, WORD PTR [esi+127]
  00052	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  00055	89 45 ec	 mov	 DWORD PTR _pMsg$210949[ebp+4], eax

; 67   : 		pMsg.bIndexH = SET_NUMBERH(lpObj->m_Index);

  00058	8b 06		 mov	 eax, DWORD PTR [esi]
  0005a	66 89 55 f4	 mov	 WORD PTR _pMsg$210949[ebp+12], dx

; 68   : 		pMsg.bIndexL = SET_NUMBERL(lpObj->m_Index);
; 69   : 		// ----
; 70   : 		pMsg.bResult = 9;
; 71   : 		// ----
; 72   : 		if( wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size) )

  0005e	0f b6 55 e9	 movzx	 edx, BYTE PTR _pMsg$210949[ebp+1]
  00062	c1 e8 08	 shr	 eax, 8
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	89 4d f0	 mov	 DWORD PTR _pMsg$210949[ebp+8], ecx
  0006b	8a 0e		 mov	 cl, BYTE PTR [esi]
  0006d	88 45 f7	 mov	 BYTE PTR _pMsg$210949[ebp+15], al
  00070	52		 push	 edx
  00071	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$210949[ebp]
  00074	88 4d f8	 mov	 BYTE PTR _pMsg$210949[ebp+16], cl
  00077	50		 push	 eax
  00078	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0007d	c6 45 f6 09	 mov	 BYTE PTR _pMsg$210949[ebp+14], 9
  00081	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  00086	85 c0		 test	 eax, eax
  00088	74 16		 je	 SHORT $LN1@GDReqAbusi

; 73   : 		{
; 74   : 			return true;

  0008a	b8 01 00 00 00	 mov	 eax, 1
  0008f	5e		 pop	 esi

; 75   : 		}
; 76   : 	}
; 77   : 	// ----
; 78   : 	return false;
; 79   : }

  00090	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00093	33 cd		 xor	 ecx, ebp
  00095	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
$LN1@GDReqAbusi:
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	33 cd		 xor	 ecx, ebp
  000a5	33 c0		 xor	 eax, eax
  000a7	5e		 pop	 esi
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 04 00	 ret	 4
?GDReqAbusingInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GDReqAbusingInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReqExDBGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqExDBGensInfo
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
; Function compile flags: /Ogtp
;	COMDAT ?ReqExDBGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$210964 = -24					; size = 17
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?ReqExDBGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::ReqExDBGensInfo, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 90   : 	if( !OBJMAX_RANGE(lpObj->m_Index) ) 

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	85 c0		 test	 eax, eax
  00018	0f 88 84 00 00
	00		 js	 $LN1@ReqExDBGen
  0001e	33 c9		 xor	 ecx, ecx
  00020	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00025	0f 9e c1	 setle	 cl
  00028	8b c1		 mov	 eax, ecx
  0002a	85 c0		 test	 eax, eax

; 91   : 	{
; 92   : 		return false;

  0002c	74 74		 je	 SHORT $LN1@ReqExDBGen

; 93   : 	}
; 94   : 	// ----
; 95   : 	if( gObjIsConnected(lpObj) )

  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00034	83 c4 04	 add	 esp, 4
  00037	85 c0		 test	 eax, eax
  00039	74 67		 je	 SHORT $LN1@ReqExDBGen

; 96   : 	{
; 97   : 		PMSG_REQ_ABUSING_INFO pMsg;			
; 98   : 		// ----
; 99   : 		PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x1, sizeof(pMsg));

  0003b	6a 11		 push	 17			; 00000011H
  0003d	6a 01		 push	 1
  0003f	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$210964[ebp]
  00042	68 f8 00 00 00	 push	 248			; 000000f8H
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 100  : 		// ----
; 101  : 		pMsg.bResult = 0;
; 102  : 		memcpy(pMsg.Name, lpObj->Name, 10);

  0004d	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  00050	66 8b 56 7f	 mov	 dx, WORD PTR [esi+127]
  00054	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  00057	89 45 ec	 mov	 DWORD PTR _pMsg$210964[ebp+4], eax

; 103  : 		pMsg.bIndexH = SET_NUMBERH(lpObj->m_Index);

  0005a	8b 06		 mov	 eax, DWORD PTR [esi]
  0005c	66 89 55 f4	 mov	 WORD PTR _pMsg$210964[ebp+12], dx

; 104  : 		pMsg.bIndexL = SET_NUMBERL(lpObj->m_Index);
; 105  : 		// ----
; 106  : 		if( cDBSMng.Send((PCHAR)&pMsg, pMsg.h.size) )

  00060	0f b6 55 e9	 movzx	 edx, BYTE PTR _pMsg$210964[ebp+1]
  00064	c1 e8 08	 shr	 eax, 8
  00067	83 c4 10	 add	 esp, 16			; 00000010H
  0006a	89 4d f0	 mov	 DWORD PTR _pMsg$210964[ebp+8], ecx
  0006d	8a 0e		 mov	 cl, BYTE PTR [esi]
  0006f	88 45 f7	 mov	 BYTE PTR _pMsg$210964[ebp+15], al
  00072	52		 push	 edx
  00073	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$210964[ebp]
  00076	88 4d f8	 mov	 BYTE PTR _pMsg$210964[ebp+16], cl
  00079	50		 push	 eax
  0007a	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0007f	c6 45 f6 00	 mov	 BYTE PTR _pMsg$210964[ebp+14], 0
  00083	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  00088	85 c0		 test	 eax, eax
  0008a	74 16		 je	 SHORT $LN1@ReqExDBGen

; 107  : 		{
; 108  : 			return true;

  0008c	b8 01 00 00 00	 mov	 eax, 1
  00091	5e		 pop	 esi

; 109  : 		}
; 110  : 	}
; 111  : 	return false;
; 112  : }

  00092	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00095	33 cd		 xor	 ecx, ebp
  00097	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
$LN1@ReqExDBGen:
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	33 cd		 xor	 ecx, ebp
  000a7	33 c0		 xor	 eax, eax
  000a9	5e		 pop	 esi
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 04 00	 ret	 4
?ReqExDBGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::ReqExDBGensInfo
_TEXT	ENDS
PUBLIC	??_C@_0CG@MKOGLMEJ@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$CFs?5?$CFs?5Lin@ ; `string'
PUBLIC	??_C@_0M@CBPLBNGD@btInfluence?$AA@		; `string'
PUBLIC	??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?ReqRegGensMember@GensSystem@@QAEXPAUOBJECTSTRUCT@@E@Z ; GensSystem::ReqRegGensMember
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0CG@MKOGLMEJ@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$CFs?5?$CFs?5Lin@
CONST	SEGMENT
??_C@_0CG@MKOGLMEJ@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$CFs?5?$CFs?5Lin@ DB '['
	DB	'GensSystem] - Error - %s %s Line: %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CBPLBNGD@btInfluence?$AA@
CONST	SEGMENT
??_C@_0M@CBPLBNGD@btInfluence?$AA@ DB 'btInfluence', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
CONST	SEGMENT
??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@ DB 'GensSystem.cpp', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?ReqRegGensMember@GensSystem@@QAEXPAUOBJECTSTRUCT@@E@Z
_TEXT	SEGMENT
_pMsg$210999 = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_btInfluence$ = 12					; size = 1
?ReqRegGensMember@GensSystem@@QAEXPAUOBJECTSTRUCT@@E@Z PROC ; GensSystem::ReqRegGensMember, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 121  : 	//-----
; 122  : 	_GUILD_INFO_STRUCT *lpGuildInfo = lpObj->lpGuild;
; 123  : 	//-----
; 124  : 	if (!OBJMAX_RANGE(lpObj->m_Index)) return;

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	57		 push	 edi
  00017	8b be 38 04 00
	00		 mov	 edi, DWORD PTR [esi+1080]
  0001d	85 c0		 test	 eax, eax
  0001f	0f 88 ce 00 00
	00		 js	 $LN2@ReqRegGens
  00025	33 c9		 xor	 ecx, ecx
  00027	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0002c	0f 9e c1	 setle	 cl
  0002f	85 c9		 test	 ecx, ecx
  00031	0f 84 bc 00 00
	00		 je	 $LN2@ReqRegGens

; 125  : 	// ----
; 126  : 	if (gObjIsConnected(lpObj->m_Index))

  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0003d	83 c4 04	 add	 esp, 4
  00040	85 c0		 test	 eax, eax
  00042	0f 84 ab 00 00
	00		 je	 $LN2@ReqRegGens

; 127  : 	{
; 128  : 		if (btInfluence == VANERT_INFLUENCE || btInfluence == DUPRIAN_INFLUENCE) 

  00048	53		 push	 ebx
  00049	8a 5d 0c	 mov	 bl, BYTE PTR _btInfluence$[ebp]
  0004c	80 fb 01	 cmp	 bl, 1
  0004f	74 35		 je	 SHORT $LN6@ReqRegGens
  00051	80 fb 02	 cmp	 bl, 2
  00054	74 30		 je	 SHORT $LN6@ReqRegGens

; 153  : 			}
; 154  : 		}
; 155  : 		else
; 156  : 		{
; 157  : 			LogAddTD("[GensSystem] - Error - %s %s Line: %d", "btInfluence", __FILE__, __LINE__);       

  00056	68 9d 00 00 00	 push	 157			; 0000009dH
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CBPLBNGD@btInfluence?$AA@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MKOGLMEJ@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$CFs?5?$CFs?5Lin@
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00070	83 c4 10	 add	 esp, 16			; 00000010H
  00073	5b		 pop	 ebx
  00074	5f		 pop	 edi
  00075	5e		 pop	 esi

; 158  : 		}
; 159  : 	}
; 160  : }

  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
$LN6@ReqRegGens:

; 129  : 		{
; 130  : 			//-----
; 131  : 			PMSG_REQ_REG_GENS_MEMBER_EXDB pMsg;		
; 132  : 			//-----
; 133  : 	
; 134  : 			if (btInfluence == VANERT_INFLUENCE || btInfluence == DUPRIAN_INFLUENCE)
; 135  : 			{
; 136  : 				PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x03, sizeof(pMsg));

  00086	6a 18		 push	 24			; 00000018H
  00088	6a 03		 push	 3
  0008a	8d 45 e4	 lea	 eax, DWORD PTR _pMsg$210999[ebp]
  0008d	68 f8 00 00 00	 push	 248			; 000000f8H
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 137  : 				//-----
; 138  : 				memcpy(pMsg.Name, lpObj->Name, sizeof(lpObj->Name));	

  00098	8b 4e 77	 mov	 ecx, DWORD PTR [esi+119]
  0009b	8b 56 7b	 mov	 edx, DWORD PTR [esi+123]
  0009e	66 8b 46 7f	 mov	 ax, WORD PTR [esi+127]
  000a2	89 4d e9	 mov	 DWORD PTR _pMsg$210999[ebp+5], ecx
  000a5	8a 8e 81 00 00
	00		 mov	 cl, BYTE PTR [esi+129]
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	88 4d f3	 mov	 BYTE PTR _pMsg$210999[ebp+15], cl
  000b1	89 55 ed	 mov	 DWORD PTR _pMsg$210999[ebp+9], edx
  000b4	66 89 45 f1	 mov	 WORD PTR _pMsg$210999[ebp+13], ax

; 139  : 				//-----
; 140  : 			 	pMsg.bMessage = 0;

  000b8	c6 45 f3 00	 mov	 BYTE PTR _pMsg$210999[ebp+15], 0

; 141  : 				//-----
; 142  : 				pMsg.bInfluence = btInfluence;

  000bc	88 5d f4	 mov	 BYTE PTR _pMsg$210999[ebp+16], bl

; 143  : 				//-----
; 144  : 				if (lpGuildInfo)

  000bf	85 ff		 test	 edi, edi
  000c1	74 0f		 je	 SHORT $LN3@ReqRegGens

; 145  : 				{
; 146  : 					pMsg.wNumberH = SET_NUMBERHW(lpGuildInfo->Number);

  000c3	66 8b 57 02	 mov	 dx, WORD PTR [edi+2]

; 147  : 					pMsg.wNumberL = SET_NUMBERLW(lpGuildInfo->Number);

  000c7	66 8b 07	 mov	 ax, WORD PTR [edi]
  000ca	66 89 55 f6	 mov	 WORD PTR _pMsg$210999[ebp+18], dx
  000ce	66 89 45 f8	 mov	 WORD PTR _pMsg$210999[ebp+20], ax
$LN3@ReqRegGens:

; 148  : 				}
; 149  : 				//-----
; 150  : 				pMsg.bIndexH = SET_NUMBERH(lpObj->m_Index);

  000d2	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 151  : 				pMsg.bIndexL = SET_NUMBERL(lpObj->m_Index);				//-----
; 152  : 				if( cDBSMng.Send((char*)&pMsg, pMsg.h.size) ) return;

  000d4	0f b6 45 e5	 movzx	 eax, BYTE PTR _pMsg$210999[ebp+1]
  000d8	8a 16		 mov	 dl, BYTE PTR [esi]
  000da	c1 e9 08	 shr	 ecx, 8
  000dd	88 4d fa	 mov	 BYTE PTR _pMsg$210999[ebp+22], cl
  000e0	50		 push	 eax
  000e1	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$210999[ebp]
  000e4	51		 push	 ecx
  000e5	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000ea	88 55 fb	 mov	 BYTE PTR _pMsg$210999[ebp+23], dl
  000ed	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  000f2	5b		 pop	 ebx
$LN2@ReqRegGens:

; 158  : 		}
; 159  : 	}
; 160  : }

  000f3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f6	5f		 pop	 edi
  000f7	33 cd		 xor	 ecx, ebp
  000f9	5e		 pop	 esi
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 08 00	 ret	 8
?ReqRegGensMember@GensSystem@@QAEXPAUOBJECTSTRUCT@@E@Z ENDP ; GensSystem::ReqRegGensMember
_TEXT	ENDS
PUBLIC	?AnsRegGensMember@GensSystem@@QAEHHE@Z		; GensSystem::AnsRegGensMember
; Function compile flags: /Ogtp
;	COMDAT ?AnsRegGensMember@GensSystem@@QAEHHE@Z
_TEXT	SEGMENT
_iObjIndex$ = 8						; size = 4
_btResult$ = 12						; size = 1
?AnsRegGensMember@GensSystem@@QAEHHE@Z PROC		; GensSystem::AnsRegGensMember, COMDAT
; _this$ = ecx

; 169  : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 170  : }

  00002	c2 08 00	 ret	 8
?AnsRegGensMember@GensSystem@@QAEHHE@Z ENDP		; GensSystem::AnsRegGensMember
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReqSecedeGensMember@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqSecedeGensMember
; Function compile flags: /Ogtp
;	COMDAT ?ReqSecedeGensMember@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211034 = -28					; size = 22
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?ReqSecedeGensMember@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::ReqSecedeGensMember, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 194  : 	if (gObjIsConnected(lpObj->m_Index))

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001c	83 c4 04	 add	 esp, 4
  0001f	85 c0		 test	 eax, eax
  00021	74 69		 je	 SHORT $LN1@ReqSecedeG

; 195  : 	{
; 196  : 		PMSG_REQ_SECEDE_GENS_MEMBER_EXDB pMsg;
; 197  : 		// ----
; 198  : 		PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x4, sizeof(pMsg)); 

  00023	6a 16		 push	 22			; 00000016H
  00025	6a 04		 push	 4
  00027	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$211034[ebp]
  0002a	68 f8 00 00 00	 push	 248			; 000000f8H
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 199  : 		// ----
; 200  : 		pMsg.bResult = 0; //[GensSystem] [%s][%s] Gens Request - Leave [%s]
; 201  : 		// ----
; 202  : 		pMsg.bIndexH = SET_NUMBERH(lpObj->m_Index);

  00035	8b 16		 mov	 edx, DWORD PTR [esi]

; 203  : 		//-----
; 204  : 		pMsg.bIndexL = SET_NUMBERL(lpObj->m_Index);
; 205  : 		// ----
; 206  : 		memcpy(pMsg.Name, lpObj->Name, sizeof(lpObj->Name));

  00037	8b 4e 77	 mov	 ecx, DWORD PTR [esi+119]
  0003a	8a 06		 mov	 al, BYTE PTR [esi]
  0003c	c1 ea 08	 shr	 edx, 8
  0003f	88 55 f8	 mov	 BYTE PTR _pMsg$211034[ebp+20], dl
  00042	8b 56 7b	 mov	 edx, DWORD PTR [esi+123]
  00045	83 c4 10	 add	 esp, 16			; 00000010H
  00048	89 4d e8	 mov	 DWORD PTR _pMsg$211034[ebp+4], ecx
  0004b	8a 8e 81 00 00
	00		 mov	 cl, BYTE PTR [esi+129]
  00051	89 55 ec	 mov	 DWORD PTR _pMsg$211034[ebp+8], edx
  00054	88 45 f9	 mov	 BYTE PTR _pMsg$211034[ebp+21], al
  00057	66 8b 46 7f	 mov	 ax, WORD PTR [esi+127]

; 207  : 		// ----
; 208  : 		if (cDBSMng.Send((char*)&pMsg, sizeof(pMsg))) return true;

  0005b	6a 16		 push	 22			; 00000016H
  0005d	8d 55 e4	 lea	 edx, DWORD PTR _pMsg$211034[ebp]
  00060	88 4d f2	 mov	 BYTE PTR _pMsg$211034[ebp+14], cl
  00063	52		 push	 edx
  00064	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00069	66 89 45 f0	 mov	 WORD PTR _pMsg$211034[ebp+12], ax
  0006d	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  00072	85 c0		 test	 eax, eax
  00074	74 16		 je	 SHORT $LN1@ReqSecedeG
  00076	b8 01 00 00 00	 mov	 eax, 1
  0007b	5e		 pop	 esi

; 209  : 	}
; 210  : 	return false;
; 211  : }

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
$LN1@ReqSecedeG:
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008f	33 cd		 xor	 ecx, ebp
  00091	33 c0		 xor	 eax, eax
  00093	5e		 pop	 esi
  00094	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 04 00	 ret	 4
?ReqSecedeGensMember@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::ReqSecedeGensMember
_TEXT	ENDS
PUBLIC	?AnsSecedeGensMember@GensSystem@@QAEHHE@Z	; GensSystem::AnsSecedeGensMember
; Function compile flags: /Ogtp
;	COMDAT ?AnsSecedeGensMember@GensSystem@@QAEHHE@Z
_TEXT	SEGMENT
_iObjIndex$ = 8						; size = 4
_btResult$ = 12						; size = 1
?AnsSecedeGensMember@GensSystem@@QAEHHE@Z PROC		; GensSystem::AnsSecedeGensMember, COMDAT
; _this$ = ecx

; 248  : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 249  : }

  00002	c2 08 00	 ret	 8
?AnsSecedeGensMember@GensSystem@@QAEHHE@Z ENDP		; GensSystem::AnsSecedeGensMember
_TEXT	ENDS
PUBLIC	?SendPkPenaltyMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::SendPkPenaltyMapMove
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
; Function compile flags: /Ogtp
;	COMDAT ?SendPkPenaltyMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211064 = 8					; size = 4
_lpObj$ = 8						; size = 4
?SendPkPenaltyMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::SendPkPenaltyMapMove, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 258  : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	85 c0		 test	 eax, eax
  0000b	78 3f		 js	 SHORT $LN1@SendPkPena
  0000d	33 c9		 xor	 ecx, ecx
  0000f	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00014	0f 9e c1	 setle	 cl
  00017	8b c1		 mov	 eax, ecx
  00019	85 c0		 test	 eax, eax

; 259  :  	return 0;

  0001b	74 2f		 je	 SHORT $LN1@SendPkPena

; 260  : 
; 261  : 	if (gObjIsConnected(lpObj))

  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00023	83 c4 04	 add	 esp, 4
  00026	85 c0		 test	 eax, eax
  00028	74 22		 je	 SHORT $LN1@SendPkPena

; 262  : 	{
; 263  : 		BYTE pMsg[4] = { 0xC1, 0x04, 0xF8, 0x08 };
; 264  : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg[1]);

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	6a 04		 push	 4
  0002e	8d 55 08	 lea	 edx, DWORD PTR _pMsg$211064[ebp]
  00031	52		 push	 edx
  00032	50		 push	 eax
  00033	c7 45 08 c1 04
	f8 08		 mov	 DWORD PTR _pMsg$211064[ebp], 150471873 ; 08f804c1H
  0003a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 265  : 		return true;

  00042	b8 01 00 00 00	 mov	 eax, 1
  00047	5e		 pop	 esi

; 268  : }

  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN1@SendPkPena:

; 266  : 	}
; 267  : 	return false;

  0004c	33 c0		 xor	 eax, eax
  0004e	5e		 pop	 esi

; 268  : }

  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?SendPkPenaltyMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::SendPkPenaltyMapMove
_TEXT	ENDS
PUBLIC	?IsMoveMapBattleZone@GensSystem@@QAEHH@Z	; GensSystem::IsMoveMapBattleZone
EXTRN	?gPkLimitFree@@3HA:DWORD			; gPkLimitFree
; Function compile flags: /Ogtp
;	COMDAT ?IsMoveMapBattleZone@GensSystem@@QAEHH@Z
_TEXT	SEGMENT
_iMapIndex$ = 8						; size = 4
?IsMoveMapBattleZone@GensSystem@@QAEHH@Z PROC		; GensSystem::IsMoveMapBattleZone, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 385  : 	//if (gPkLimitFree)
; 386  : 	{
; 387  : 		/*switch (iMapIndex)
; 388  : 		{
; 389  : 		case 11:
; 390  : 		case 12:
; 391  : 		case 13:
; 392  : 		case 25:
; 393  : 		case 27:
; 394  : 		case 28:
; 395  : 		case 29:
; 396  : 		case 33:
; 397  : 		case 42:
; 398  : 		case 45:
; 399  : 			return 1;
; 400  : 		default:
; 401  : 			break;
; 402  : 		}*/
; 403  : 		for( int i = 0; i < MAX_BATTLE_ZONE; i++ )

  00003	8b 55 08	 mov	 edx, DWORD PTR _iMapIndex$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	56		 push	 esi
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL4@IsMoveMapB:

; 404  : 		{
; 405  : 			if( iMapIndex == this->BattleMapList[i] )

  00010	0f b6 74 01 0f	 movzx	 esi, BYTE PTR [ecx+eax+15]
  00015	3b d6		 cmp	 edx, esi
  00017	74 1b		 je	 SHORT $LN10@IsMoveMapB

; 385  : 	//if (gPkLimitFree)
; 386  : 	{
; 387  : 		/*switch (iMapIndex)
; 388  : 		{
; 389  : 		case 11:
; 390  : 		case 12:
; 391  : 		case 13:
; 392  : 		case 25:
; 393  : 		case 27:
; 394  : 		case 28:
; 395  : 		case 29:
; 396  : 		case 33:
; 397  : 		case 42:
; 398  : 		case 45:
; 399  : 			return 1;
; 400  : 		default:
; 401  : 			break;
; 402  : 		}*/
; 403  : 		for( int i = 0; i < MAX_BATTLE_ZONE; i++ )

  00019	40		 inc	 eax
  0001a	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0001d	7c f1		 jl	 SHORT $LL4@IsMoveMapB

; 408  : 			}
; 409  : 		}
; 410  : 	}
; 411  : 	// ----
; 412  : 	return !gPkLimitFree && iMapIndex == 42;

  0001f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPkLimitFree@@3HA, 0 ; gPkLimitFree
  00026	75 05		 jne	 SHORT $LN7@IsMoveMapB
  00028	83 fa 2a	 cmp	 edx, 42			; 0000002aH
  0002b	74 07		 je	 SHORT $LN10@IsMoveMapB
$LN7@IsMoveMapB:
  0002d	33 c0		 xor	 eax, eax
  0002f	5e		 pop	 esi

; 413  : }

  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
$LN10@IsMoveMapB:

; 406  : 			{
; 407  : 				return true;

  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	5e		 pop	 esi

; 413  : }

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?IsMoveMapBattleZone@GensSystem@@QAEHH@Z ENDP		; GensSystem::IsMoveMapBattleZone
_TEXT	ENDS
PUBLIC	?IsMapBattleZone@GensSystem@@QAEHH@Z		; GensSystem::IsMapBattleZone
EXTRN	?gGENS@@3HA:DWORD				; gGENS
EXTRN	?gNonPK@@3HA:DWORD				; gNonPK
; Function compile flags: /Ogtp
;	COMDAT ?IsMapBattleZone@GensSystem@@QAEHH@Z
_TEXT	SEGMENT
_iMapIndex$ = 8						; size = 4
?IsMapBattleZone@GensSystem@@QAEHH@Z PROC		; GensSystem::IsMapBattleZone, COMDAT
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 511  : 	if (gNonPK)
; 512  : 	{
; 513  : 		return FALSE;

  00003	33 c0		 xor	 eax, eax
  00005	39 05 00 00 00
	00		 cmp	 DWORD PTR ?gNonPK@@3HA, eax ; gNonPK
  0000b	75 25		 jne	 SHORT $LN7@IsMapBattl

; 514  : 	}
; 515  : 
; 516  : 	if(!gGENS)

  0000d	39 05 00 00 00
	00		 cmp	 DWORD PTR ?gGENS@@3HA, eax ; gGENS

; 517  : 	{
; 518  : 		return false;

  00013	74 1d		 je	 SHORT $LN7@IsMapBattl

; 519  : 	}
; 520  : 
; 521  : 
; 522  : 	//if (gPkLimitFree)
; 523  : 	{
; 524  : 		/*switch (iMapIndex)
; 525  : 		{
; 526  : 		case 7:
; 527  : 
; 528  : 		case 33:
; 529  : 
; 530  : 		case 37:
; 531  : 
; 532  : 		case 56:
; 533  : 
; 534  : 		case 63:
; 535  : 			return TRUE;
; 536  : 			break;
; 537  : 
; 538  : 		default:
; 539  : 		break;
; 540  : 		}*/
; 541  : 		for( int i = 0; i < MAX_BATTLE_ZONE; i++ )

  00015	8b 55 08	 mov	 edx, DWORD PTR _iMapIndex$[ebp]
  00018	56		 push	 esi
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL4@IsMapBattl:

; 542  : 		{
; 543  : 			if( iMapIndex == this->BattleZoneList[i] )

  00020	0f b6 74 01 04	 movzx	 esi, BYTE PTR [ecx+eax+4]
  00025	3b d6		 cmp	 edx, esi
  00027	74 0d		 je	 SHORT $LN10@IsMapBattl

; 519  : 	}
; 520  : 
; 521  : 
; 522  : 	//if (gPkLimitFree)
; 523  : 	{
; 524  : 		/*switch (iMapIndex)
; 525  : 		{
; 526  : 		case 7:
; 527  : 
; 528  : 		case 33:
; 529  : 
; 530  : 		case 37:
; 531  : 
; 532  : 		case 56:
; 533  : 
; 534  : 		case 63:
; 535  : 			return TRUE;
; 536  : 			break;
; 537  : 
; 538  : 		default:
; 539  : 		break;
; 540  : 		}*/
; 541  : 		for( int i = 0; i < MAX_BATTLE_ZONE; i++ )

  00029	40		 inc	 eax
  0002a	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0002d	7c f1		 jl	 SHORT $LL4@IsMapBattl

; 546  : 			}
; 547  : 		}
; 548  : 	}
; 549  : 	// ----
; 550  : 	return false;

  0002f	33 c0		 xor	 eax, eax
  00031	5e		 pop	 esi
$LN7@IsMapBattl:

; 551  : 	//return (!gPkLimitFree && iMapIndex == 63);
; 552  : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN10@IsMapBattl:

; 544  : 			{
; 545  : 				return true;

  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	5e		 pop	 esi

; 551  : 	//return (!gPkLimitFree && iMapIndex == 63);
; 552  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?IsMapBattleZone@GensSystem@@QAEHH@Z ENDP		; GensSystem::IsMapBattleZone
_TEXT	ENDS
PUBLIC	??_C@_0DE@PDEMNHNK@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@ ; `string'
PUBLIC	?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensInfluence
;	COMDAT ??_C@_0DE@PDEMNHNK@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@
CONST	SEGMENT
??_C@_0DE@PDEMNHNK@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@ DB '['
	DB	'GensSystem] - Error - [%s][%s] Influence[%d] %s %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iInfluence$ = 12					; size = 4
?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::SetGensInfluence, COMDAT
; _this$ = ecx

; 561  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 562  : 	if (iInfluence != VANERT_INFLUENCE && iInfluence != DUPRIAN_INFLUENCE && iInfluence != LEAVED_INFLUENCE)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iInfluence$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	74 32		 je	 SHORT $LN3@SetGensInf
  0000b	83 f8 02	 cmp	 eax, 2
  0000e	74 2d		 je	 SHORT $LN3@SetGensInf
  00010	83 f8 ff	 cmp	 eax, -1
  00013	74 2d		 je	 SHORT $LN6@SetGensInf

; 563  : 	{
; 564  : 		LogAddTD("[GensSystem] - Error - [%s][%s] Influence[%d] %s %d",	
; 565  : 			lpObj->AccountID, lpObj->Name, iInfluence, __FILE__, __LINE__);

  00015	68 35 02 00 00	 push	 565			; 00000235H
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  0001f	50		 push	 eax
  00020	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00023	8d 48 77	 lea	 ecx, DWORD PTR [eax+119]
  00026	51		 push	 ecx
  00027	83 c0 6c	 add	 eax, 108		; 0000006cH
  0002a	50		 push	 eax
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@PDEMNHNK@?$FLGensSystem?$FN?5?9?5Error?5?9?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00036	83 c4 18	 add	 esp, 24			; 00000018H

; 572  : 	}
; 573  : }

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN3@SetGensInf:

; 566  : 	}
; 567  : 	else
; 568  : 	{
; 569  : 		if (iInfluence == LEAVED_INFLUENCE) iInfluence = NONE_INFLUENCE;

  0003d	83 f8 ff	 cmp	 eax, -1
  00040	75 02		 jne	 SHORT $LN1@SetGensInf
$LN6@SetGensInf:
  00042	33 c0		 xor	 eax, eax
$LN1@SetGensInf:

; 570  : 
; 571  : 		lpObj->m_GensInfluence = iInfluence;

  00044	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00047	89 82 c4 22 00
	00		 mov	 DWORD PTR [edx+8900], eax

; 572  : 	}
; 573  : }

  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::SetGensInfluence
_TEXT	ENDS
PUBLIC	??_C@_0CP@LAOMEGEG@?$FLGensSystem?$FN?5Error?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens@ ; `string'
PUBLIC	?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
;	COMDAT ??_C@_0CP@LAOMEGEG@?$FLGensSystem?$FN?5Error?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens@
CONST	SEGMENT
??_C@_0CP@LAOMEGEG@?$FLGensSystem?$FN?5Error?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens@ DB '['
	DB	'GensSystem] Error [%s][%s] GensInfluence [%d]', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GetGensInfluence, COMDAT
; _this$ = ecx

; 628  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 629  : 	if (lpObj->m_GensInfluence == LEAVED_INFLUENCE || lpObj->m_GensInfluence < NONE_INFLUENCE || lpObj->m_GensInfluence > DUPRIAN_INFLUENCE) 

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00006	8b 81 c4 22 00
	00		 mov	 eax, DWORD PTR [ecx+8900]
  0000c	83 f8 ff	 cmp	 eax, -1
  0000f	74 09		 je	 SHORT $LN1@GetGensInf
  00011	85 c0		 test	 eax, eax
  00013	78 05		 js	 SHORT $LN1@GetGensInf
  00015	83 f8 02	 cmp	 eax, 2

; 632  : 	}
; 633  : 	return lpObj->m_GensInfluence;

  00018	7e 19		 jle	 SHORT $LN3@GetGensInf
$LN1@GetGensInf:

; 630  : 	{
; 631  : 		LogAddTD("[GensSystem] Error [%s][%s] GensInfluence [%d]", lpObj->AccountID, lpObj->Name, lpObj->m_GensInfluence); return 0;

  0001a	50		 push	 eax
  0001b	8d 41 77	 lea	 eax, DWORD PTR [ecx+119]
  0001e	50		 push	 eax
  0001f	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00022	51		 push	 ecx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LAOMEGEG@?$FLGensSystem?$FN?5Error?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens@
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0002e	83 c4 10	 add	 esp, 16			; 00000010H
  00031	33 c0		 xor	 eax, eax
$LN3@GetGensInf:

; 634  : }

  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GetGensInfluence
_TEXT	ENDS
PUBLIC	?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
; Function compile flags: /Ogtp
;	COMDAT ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GetGensInfluenceName, COMDAT
; _this$ = ecx

; 659  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 660  : 	if (lpObj->m_GensInfluence == LEAVED_INFLUENCE || lpObj->m_GensInfluence < NONE_INFLUENCE || lpObj->m_GensInfluence > DUPRIAN_INFLUENCE) 

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00006	8b 81 c4 22 00
	00		 mov	 eax, DWORD PTR [ecx+8900]
  0000c	83 f8 ff	 cmp	 eax, -1
  0000f	74 14		 je	 SHORT $LN1@GetGensInf@2
  00011	85 c0		 test	 eax, eax
  00013	78 10		 js	 SHORT $LN1@GetGensInf@2
  00015	83 f8 02	 cmp	 eax, 2
  00018	7f 0b		 jg	 SHORT $LN1@GetGensInf@2

; 664  : 	}
; 665  : 	return szInfluence[lpObj->m_GensInfluence];

  0001a	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?szInfluence@@3PAPADA[eax*4]

; 666  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN1@GetGensInf@2:

; 661  : 	{
; 662  : 		LogAddTD("[GensSystem] Error [%s][%s] GensInfluence [%d]", lpObj->AccountID, lpObj->Name, lpObj->m_GensInfluence);

  00025	50		 push	 eax
  00026	8d 41 77	 lea	 eax, DWORD PTR [ecx+119]
  00029	50		 push	 eax
  0002a	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LAOMEGEG@?$FLGensSystem?$FN?5Error?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00039	83 c4 10	 add	 esp, 16			; 00000010H

; 663  : 		return NULL;

  0003c	33 c0		 xor	 eax, eax

; 666  : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GetGensInfluenceName
_TEXT	ENDS
PUBLIC	?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsRegGensInfluence
; Function compile flags: /Ogtp
;	COMDAT ?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::IsRegGensInfluence, COMDAT
; _this$ = ecx

; 676  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 677  : 	if (this->GetGensInfluence(lpObj) == VANERT_INFLUENCE || this->GetGensInfluence(lpObj) == DUPRIAN_INFLUENCE)

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00010	83 f8 01	 cmp	 eax, 1
  00013	74 15		 je	 SHORT $LN1@IsRegGensI
  00015	57		 push	 edi
  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  0001d	83 f8 02	 cmp	 eax, 2
  00020	74 08		 je	 SHORT $LN1@IsRegGensI

; 680  : 	}
; 681  : 	return false;

  00022	5f		 pop	 edi
  00023	32 c0		 xor	 al, al
  00025	5e		 pop	 esi

; 682  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
$LN1@IsRegGensI:
  0002a	5f		 pop	 edi

; 678  : 	{
; 679  : 		return true;

  0002b	b0 01		 mov	 al, 1
  0002d	5e		 pop	 esi

; 682  : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::IsRegGensInfluence
_TEXT	ENDS
PUBLIC	?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetUserBattleZoneEnable
; Function compile flags: /Ogtp
;	COMDAT ?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_bBattleZoneEnable$ = 12				; size = 4
?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::SetUserBattleZoneEnable, COMDAT
; _this$ = ecx

; 691  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 692  : 	return lpObj->m_UserBattleZoneEnable = bBattleZoneEnable;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _bBattleZoneEnable$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00009	89 81 e8 22 00
	00		 mov	 DWORD PTR [ecx+8936], eax

; 693  : }

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::SetUserBattleZoneEnable
_TEXT	ENDS
PUBLIC	?IsUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::IsUserBattleZoneEnable
; Function compile flags: /Ogtp
;	COMDAT ?IsUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?IsUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::IsUserBattleZoneEnable, COMDAT
; _this$ = ecx

; 702  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 703  : 	return lpObj->m_UserBattleZoneEnable;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	8b 80 e8 22 00
	00		 mov	 eax, DWORD PTR [eax+8936]

; 704  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?IsUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::IsUserBattleZoneEnable
_TEXT	ENDS
PUBLIC	?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetContributePoint
; Function compile flags: /Ogtp
;	COMDAT ?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iContributePoint$ = 12					; size = 4
?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::SetContributePoint, COMDAT
; _this$ = ecx

; 713  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 714  : 	return lpObj->m_ContributePoint = iContributePoint;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iContributePoint$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00009	89 81 ec 22 00
	00		 mov	 DWORD PTR [ecx+8940], eax

; 715  : }

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::SetContributePoint
_TEXT	ENDS
PUBLIC	?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetContributePoint
; Function compile flags: /Ogtp
;	COMDAT ?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GetContributePoint, COMDAT
; _this$ = ecx

; 762  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 763  : 	return lpObj->m_ContributePoint;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	8b 80 ec 22 00
	00		 mov	 eax, DWORD PTR [eax+8940]

; 764  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GetContributePoint
_TEXT	ENDS
PUBLIC	?PkPenaltyAddNeedZenMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::PkPenaltyAddNeedZenMapMove
; Function compile flags: /Ogtp
;	COMDAT ?PkPenaltyAddNeedZenMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?PkPenaltyAddNeedZenMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::PkPenaltyAddNeedZenMapMove, COMDAT
; _this$ = ecx

; 773  : 	//if (gPkLimitFree)
; 774  : 	{
; 775  : 		if (this->IsMapBattleZone(lpObj->MapNumber))

  00000	b8 01 00 00 00	 mov	 eax, 1

; 776  : 		{
; 777  : 			return 1;
; 778  : 		}
; 779  : 		return 1;
; 780  : 	}
; 781  : 	return 0;
; 782  : }

  00005	c2 04 00	 ret	 4
?PkPenaltyAddNeedZenMapMove@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::PkPenaltyAddNeedZenMapMove
_TEXT	ENDS
PUBLIC	?PkPenaltyDropInvenItem@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::PkPenaltyDropInvenItem
; Function compile flags: /Ogtp
;	COMDAT ?PkPenaltyDropInvenItem@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?PkPenaltyDropInvenItem@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::PkPenaltyDropInvenItem, COMDAT
; _this$ = ecx

; 790  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 791  : 	//if (gPkLimitFree)
; 792  : 	{
; 793  : 		if (this->IsMapBattleZone(lpObj->MapNumber))

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	0f b6 90 49 01
	00 00		 movzx	 edx, BYTE PTR [eax+329]
  0000d	52		 push	 edx
  0000e	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  00013	85 c0		 test	 eax, eax
  00015	74 0a		 je	 SHORT $LN4@PkPenaltyD

; 794  : 		{
; 795  : 			this->b_PkPenaltyDropInvenItem = TRUE; 		

  00017	c7 81 bc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+188], 1
$LN4@PkPenaltyD:

; 796  : 		}
; 797  : 	}
; 798  : 	this->b_PkPenaltyDropInvenItem = FALSE;	

  00021	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0

; 799  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?PkPenaltyDropInvenItem@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::PkPenaltyDropInvenItem
_TEXT	ENDS
PUBLIC	?PkPenaltyDropZen@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::PkPenaltyDropZen
; Function compile flags: /Ogtp
;	COMDAT ?PkPenaltyDropZen@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?PkPenaltyDropZen@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::PkPenaltyDropZen, COMDAT
; _this$ = ecx

; 807  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 808  : 	//if (gPkLimitFree)
; 809  : 	{
; 810  : 		if (this->IsMapBattleZone(lpObj->MapNumber))

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	0f b6 90 49 01
	00 00		 movzx	 edx, BYTE PTR [eax+329]
  0000d	52		 push	 edx
  0000e	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  00013	85 c0		 test	 eax, eax
  00015	74 0a		 je	 SHORT $LN4@PkPenaltyD@2

; 811  : 		{
; 812  : 			this->b_PkPenaltyDropZen = TRUE;		

  00017	c7 81 b8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+184], 1
$LN4@PkPenaltyD@2:

; 813  : 		}	
; 814  : 	}
; 815  : 	this->b_PkPenaltyDropZen = FALSE;

  00021	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 816  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?PkPenaltyDropZen@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::PkPenaltyDropZen
_TEXT	ENDS
PUBLIC	?SendPKPenaltyDebuff@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::SendPKPenaltyDebuff
; Function compile flags: /Ogtp
;	COMDAT ?SendPKPenaltyDebuff@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?SendPKPenaltyDebuff@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::SendPKPenaltyDebuff, COMDAT
; _this$ = ecx

; 824  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 825  : 	if (lpObj->Type)

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	66 83 78 68 00	 cmp	 WORD PTR [eax+104], 0
  0000b	74 11		 je	 SHORT $LN1@SendPKPena

; 826  : 	{
; 827  : 		//if (gPkLimitFree)
; 828  : 		{
; 829  : 			return this->IsMapBattleZone(lpObj->MapNumber);

  0000d	0f b6 80 49 01
	00 00		 movzx	 eax, BYTE PTR [eax+329]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone

; 833  : }

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
$LN1@SendPKPena:

; 830  : 		}
; 831  : 	}
; 832  : 	return 0;

  0001e	33 c0		 xor	 eax, eax

; 833  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SendPKPenaltyDebuff@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::SendPKPenaltyDebuff
_TEXT	ENDS
PUBLIC	??_C@_0DM@FPCBOICI@?$FLGensSystem?$FN?5Abusing?5List?5?$FL?$CFs?$FN?$FL?$CF@ ; `string'
PUBLIC	?InsertKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z ; GensSystem::InsertKillUserName
;	COMDAT ??_C@_0DM@FPCBOICI@?$FLGensSystem?$FN?5Abusing?5List?5?$FL?$CFs?$FN?$FL?$CF@
CONST	SEGMENT
??_C@_0DM@FPCBOICI@?$FLGensSystem?$FN?5Abusing?5List?5?$FL?$CFs?$FN?$FL?$CF@ DB '['
	DB	'GensSystem] Abusing List [%s][%s] KillUserName[%s] Cnt[%d]', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?InsertKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z
_TEXT	SEGMENT
_iKillUserToCnt$ = 8					; size = 4
_lpObj$ = 8						; size = 4
_szCharName$ = 12					; size = 4
?InsertKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z PROC ; GensSystem::InsertKillUserName, COMDAT
; _this$ = ecx

; 1135 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 1136 : 	int iKillUserToCnt = lpObj->m_KillUserTotCnt;

  00005	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00008	8b 86 e4 22 00
	00		 mov	 eax, DWORD PTR [esi+8932]
  0000e	57		 push	 edi
  0000f	89 45 08	 mov	 DWORD PTR _iKillUserToCnt$[ebp], eax

; 1137 : 
; 1138 : 	if (iKillUserToCnt >= 10)

  00012	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00015	7c 0b		 jl	 SHORT $LN12@InsertKill

; 1139 : 	{
; 1140 : 		lpObj->m_KillUserTotCnt = 0; iKillUserToCnt = 0; 

  00017	33 c0		 xor	 eax, eax
  00019	89 86 e4 22 00
	00		 mov	 DWORD PTR [esi+8932], eax
  0001f	89 45 08	 mov	 DWORD PTR _iKillUserToCnt$[ebp], eax
$LN12@InsertKill:

; 1141 : 	}
; 1142 : 
; 1143 : 	memset(lpObj->m_szCharName, 0, 0x0B);

  00022	33 c9		 xor	 ecx, ecx
  00024	8d be c8 22 00
	00		 lea	 edi, DWORD PTR [esi+8904]
  0002a	89 0f		 mov	 DWORD PTR [edi], ecx
  0002c	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  0002f	66 89 4f 08	 mov	 WORD PTR [edi+8], cx
  00033	88 4f 0a	 mov	 BYTE PTR [edi+10], cl

; 1144 : 	strcpy(lpObj->m_szCharName, szCharName);

  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _szCharName$[ebp]
  00039	8b df		 mov	 ebx, edi
  0003b	2b d9		 sub	 ebx, ecx
  0003d	b8 01 00 00 00	 mov	 eax, 1
$LL7@InsertKill:
  00042	8a 11		 mov	 dl, BYTE PTR [ecx]
  00044	88 14 0b	 mov	 BYTE PTR [ebx+ecx], dl
  00047	03 c8		 add	 ecx, eax
  00049	84 d2		 test	 dl, dl
  0004b	75 f5		 jne	 SHORT $LL7@InsertKill

; 1145 : 
; 1146 : 	++lpObj->m_KillUserCnt;
; 1147 : 	++lpObj->m_KillUserTotCnt;

  0004d	01 86 e4 22 00
	00		 add	 DWORD PTR [esi+8932], eax
  00053	8b 8e e4 22 00
	00		 mov	 ecx, DWORD PTR [esi+8932]
  00059	01 86 e0 22 00
	00		 add	 DWORD PTR [esi+8928], eax

; 1148 : 
; 1149 : 	for (int i = 0; i < lpObj->m_KillUserTotCnt; ++i)

  0005f	33 db		 xor	 ebx, ebx
  00061	85 c9		 test	 ecx, ecx
  00063	7e 30		 jle	 SHORT $LN11@InsertKill
$LL3@InsertKill:

; 1150 : 	{
; 1151 : 		LogAddTD("[GensSystem] Abusing List [%s][%s] KillUserName[%s] Cnt[%d]", lpObj->AccountID, lpObj->Name, lpObj->m_szCharName, lpObj->m_KillUserCnt);

  00065	8b 86 e0 22 00
	00		 mov	 eax, DWORD PTR [esi+8928]
  0006b	50		 push	 eax
  0006c	57		 push	 edi
  0006d	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  00070	50		 push	 eax
  00071	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@FPCBOICI@?$FLGensSystem?$FN?5Abusing?5List?5?$FL?$CFs?$FN?$FL?$CF@
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1152 : 		iKillUserToCnt = i + 1;

  00080	43		 inc	 ebx
  00081	83 c4 14	 add	 esp, 20			; 00000014H
  00084	3b 9e e4 22 00
	00		 cmp	 ebx, DWORD PTR [esi+8932]
  0008a	7c d9		 jl	 SHORT $LL3@InsertKill

; 1153 : 	}
; 1154 : 	return iKillUserToCnt;

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	8b c3		 mov	 eax, ebx
  00090	5b		 pop	 ebx

; 1155 : }

  00091	5d		 pop	 ebp
  00092	c2 08 00	 ret	 8
$LN11@InsertKill:

; 1153 : 	}
; 1154 : 	return iKillUserToCnt;

  00095	8b 45 08	 mov	 eax, DWORD PTR _iKillUserToCnt$[ebp]
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx

; 1155 : }

  0009b	5d		 pop	 ebp
  0009c	c2 08 00	 ret	 8
?InsertKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z ENDP ; GensSystem::InsertKillUserName
_TEXT	ENDS
PUBLIC	?MoveInBattleZonePartySplit@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::MoveInBattleZonePartySplit
EXTRN	?GCResultSend@@YAXHEE@Z:PROC			; GCResultSend
EXTRN	?GetIndex@PartyClass@@QAEHHHH@Z:PROC		; PartyClass::GetIndex
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
; Function compile flags: /Ogtp
;	COMDAT ?MoveInBattleZonePartySplit@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?MoveInBattleZonePartySplit@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::MoveInBattleZonePartySplit, COMDAT
; _this$ = ecx

; 1163 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1164 : 	PMSG_PARTYDELUSER pMsg;	
; 1165 : 
; 1166 : 	if (/*gPkLimitFree != TRUE &&*/ lpObj->PartyNumber >= 0)

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	8b 86 2c 04 00
	00		 mov	 eax, DWORD PTR [esi+1068]
  0000d	85 c0		 test	 eax, eax
  0000f	78 25		 js	 SHORT $LN1@MoveInBatt

; 1167 : 	{
; 1168 : 		int pindex = gParty.GetIndex(lpObj->PartyNumber, lpObj->m_Index, lpObj->DBNumber);

  00011	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00014	8b 16		 mov	 edx, DWORD PTR [esi]
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	50		 push	 eax
  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0001e	e8 00 00 00 00	 call	 ?GetIndex@PartyClass@@QAEHHHH@Z ; PartyClass::GetIndex

; 1169 : 
; 1170 : 		if (pindex >= 0)

  00023	85 c0		 test	 eax, eax
  00025	78 0f		 js	 SHORT $LN1@MoveInBatt

; 1171 : 		{
; 1172 : 			pMsg.Number = pindex;
; 1173 : 			//CGPartyDelUser(&pMsg, lpObj->m_Index);	//hz
; 1174 : 			GCResultSend(lpObj->m_Index, 0x41, 0x7);

  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	6a 07		 push	 7
  0002b	6a 41		 push	 65			; 00000041H
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?GCResultSend@@YAXHEE@Z	; GCResultSend
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@MoveInBatt:
  00036	5e		 pop	 esi

; 1175 : 		}
; 1176 : 	}
; 1177 : }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?MoveInBattleZonePartySplit@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::MoveInBattleZonePartySplit
_TEXT	ENDS
PUBLIC	?AbusingInfoReset@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::AbusingInfoReset
; Function compile flags: /Ogtp
;	COMDAT ?AbusingInfoReset@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?AbusingInfoReset@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::AbusingInfoReset, COMDAT
; _this$ = ecx

; 1186 : 	/*if (!OBJMAX_RANGE(lpObj->m_Index))
; 1187 : 		return;
; 1188 : 
; 1189 : 	if (!gObjIsConnected(lpObj->m_Index))
; 1190 : 	{
; 1191 : 		if (this->IsRegGensInfluence(lpObj))
; 1192 : 		{
; 1193 : 			if (g_GensAbusingResetTime > 0 && GetTickCount() - lpObj->m_GensAbusingTick >= 60000 * g_GensAbusingResetTime)
; 1194 : 			{
; 1195 : 				EnterCriticalSection((LPCRITICAL_SECTION)&criti);
; 1196 : 
; 1197 : 				lpObj->m_GensAbusingTick = GetTickCount();
; 1198 : 
; 1199 : 				for (int i = 0; i < 10; ++i)
; 1200 : 				{
; 1201 : 					lpObj->m_KillUserCnt = 0;
; 1202 : 					memset(lpObj->m_szCharName, 0, 0x0B);
; 1203 : 				}
; 1204 : 
; 1205 : 				lpObj->m_KillUserTotCnt = 0;
; 1206 : 
; 1207 : 				LeaveCriticalSection((LPCRITICAL_SECTION)&criti);
; 1208 : 			}
; 1209 : 		}
; 1210 : 		else
; 1211 : 		{
; 1212 : 			lpObj->m_GensAbusingTick = GetTickCount();
; 1213 : 		}
; 1214 : 	}*/
; 1215 : }

  00000	c2 04 00	 ret	 4
?AbusingInfoReset@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::AbusingInfoReset
_TEXT	ENDS
PUBLIC	?CalGensClass@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::CalGensClass
; Function compile flags: /Ogtp
;	COMDAT ?CalGensClass@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?CalGensClass@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; GensSystem::CalGensClass, COMDAT
; _this$ = ecx

; 1223 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1224 : 	if( lpObj->m_GensRanking > 300 || lpObj->m_GensRanking == 0 )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00006	8b 81 f0 22 00
	00		 mov	 eax, DWORD PTR [ecx+8944]
  0000c	3d 2c 01 00 00	 cmp	 eax, 300		; 0000012cH
  00011	0f 8f a6 00 00
	00		 jg	 $LN16@CalGensCla
  00017	85 c0		 test	 eax, eax
  00019	0f 84 9e 00 00
	00		 je	 $LN16@CalGensCla

; 1254 : 		}
; 1255 : 	}
; 1256 : 	else
; 1257 : 	{
; 1258 : 		if( lpObj->m_GensRanking == 1 )

  0001f	83 f8 01	 cmp	 eax, 1
  00022	75 06		 jne	 SHORT $LN8@CalGensCla

; 1259 : 		{
; 1260 : 			lpObj->m_GensClass = 1; //-> Grand Duke

  00024	89 81 f4 22 00
	00		 mov	 DWORD PTR [ecx+8948], eax
$LN8@CalGensCla:

; 1261 : 		}
; 1262 : 		// ----
; 1263 : 		if( lpObj->m_GensRanking >= 2 && lpObj->m_GensRanking <= 5 )

  0002a	83 f8 02	 cmp	 eax, 2
  0002d	7c 0f		 jl	 SHORT $LN7@CalGensCla
  0002f	83 f8 05	 cmp	 eax, 5
  00032	7f 0a		 jg	 SHORT $LN7@CalGensCla

; 1264 : 		{
; 1265 : 			lpObj->m_GensClass = 2; //-> Duke

  00034	c7 81 f4 22 00
	00 02 00 00 00	 mov	 DWORD PTR [ecx+8948], 2
$LN7@CalGensCla:

; 1266 : 		}
; 1267 : 		// ----
; 1268 : 		if( lpObj->m_GensRanking >= 6 && lpObj->m_GensRanking <= 10 )

  0003e	83 f8 06	 cmp	 eax, 6
  00041	7c 0f		 jl	 SHORT $LN6@CalGensCla
  00043	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00046	7f 0a		 jg	 SHORT $LN6@CalGensCla

; 1269 : 		{
; 1270 : 			lpObj->m_GensClass = 3; //-> Marquis

  00048	c7 81 f4 22 00
	00 03 00 00 00	 mov	 DWORD PTR [ecx+8948], 3
$LN6@CalGensCla:

; 1271 : 		}
; 1272 : 		// ----
; 1273 : 		if( lpObj->m_GensRanking >= 11 && lpObj->m_GensRanking <= 30 )

  00052	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00055	7c 0f		 jl	 SHORT $LN5@CalGensCla
  00057	83 f8 1e	 cmp	 eax, 30			; 0000001eH
  0005a	7f 0a		 jg	 SHORT $LN5@CalGensCla

; 1274 : 		{
; 1275 : 			lpObj->m_GensClass = 4; //-> Count

  0005c	c7 81 f4 22 00
	00 04 00 00 00	 mov	 DWORD PTR [ecx+8948], 4
$LN5@CalGensCla:

; 1276 : 		}
; 1277 : 		// ----
; 1278 : 		if( lpObj->m_GensRanking >= 31 && lpObj->m_GensRanking <= 50 )

  00066	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00069	7c 0f		 jl	 SHORT $LN4@CalGensCla
  0006b	83 f8 32	 cmp	 eax, 50			; 00000032H
  0006e	7f 0a		 jg	 SHORT $LN4@CalGensCla

; 1279 : 		{
; 1280 : 			lpObj->m_GensClass = 5; //-> Viscount

  00070	c7 81 f4 22 00
	00 05 00 00 00	 mov	 DWORD PTR [ecx+8948], 5
$LN4@CalGensCla:

; 1281 : 		}
; 1282 : 		// ----
; 1283 : 		if( lpObj->m_GensRanking >= 51 && lpObj->m_GensRanking <= 100 )

  0007a	83 f8 33	 cmp	 eax, 51			; 00000033H
  0007d	7c 0f		 jl	 SHORT $LN3@CalGensCla
  0007f	83 f8 64	 cmp	 eax, 100		; 00000064H
  00082	7f 0a		 jg	 SHORT $LN3@CalGensCla

; 1284 : 		{
; 1285 : 			lpObj->m_GensClass = 6; //-> Baron

  00084	c7 81 f4 22 00
	00 06 00 00 00	 mov	 DWORD PTR [ecx+8948], 6
$LN3@CalGensCla:

; 1286 : 		}
; 1287 : 		// ----
; 1288 : 		if( lpObj->m_GensRanking >= 101 && lpObj->m_GensRanking <= 200 )

  0008e	83 f8 65	 cmp	 eax, 101		; 00000065H
  00091	7c 11		 jl	 SHORT $LN2@CalGensCla
  00093	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  00098	7f 0a		 jg	 SHORT $LN2@CalGensCla

; 1289 : 		{
; 1290 : 			lpObj->m_GensClass = 7; //-> Knight Commander

  0009a	c7 81 f4 22 00
	00 07 00 00 00	 mov	 DWORD PTR [ecx+8948], 7
$LN2@CalGensCla:

; 1291 : 		}
; 1292 : 		// ----
; 1293 : 		if( lpObj->m_GensRanking >= 201 && lpObj->m_GensRanking <= 300 )

  000a4	3d c9 00 00 00	 cmp	 eax, 201		; 000000c9H
  000a9	0f 8c 9a 00 00
	00		 jl	 $LN10@CalGensCla

; 1294 : 		{
; 1295 : 			lpObj->m_GensClass = 8; //-> Super Knight

  000af	c7 81 f4 22 00
	00 08 00 00 00	 mov	 DWORD PTR [ecx+8948], 8

; 1296 : 		}
; 1297 : 	}
; 1298 : 	/*
; 1299 : 	if (lpObj->m_ContributePoint > 200)
; 1300 : 	{
; 1301 : 		if (lpObj->m_ContributePoint < 224)
; 1302 : 		{
; 1303 : 			if (lpObj->m_ContributePoint < 248)
; 1304 : 			{
; 1305 : 				if (lpObj->m_ContributePoint < 272)
; 1306 : 				{
; 1307 : 					if (lpObj->m_ContributePoint < 296)
; 1308 : 					{
; 1309 : 						if (lpObj->m_ContributePoint < 320)
; 1310 : 						{
; 1311 : 							return 0; // WTF? >< if rank from 297 to 319 your rank is 0???
; 1312 : 						}
; 1313 : 						else 
; 1314 : 						{
; 1315 : 							return 14;
; 1316 : 						}
; 1317 : 					}
; 1318 : 					else
; 1319 : 					{
; 1320 : 						return 13;
; 1321 : 					}
; 1322 : 				}
; 1323 : 				else 
; 1324 : 				{
; 1325 : 					return 12;
; 1326 : 				}
; 1327 : 			}
; 1328 : 			else
; 1329 : 			{
; 1330 : 				return 11;
; 1331 : 			}
; 1332 : 		}
; 1333 : 		else
; 1334 : 		{
; 1335 : 			return 10;
; 1336 : 		}
; 1337 : 	}
; 1338 : 	else
; 1339 : 	{
; 1340 : 		if (lpObj->m_ContributePoint > 8)
; 1341 : 		{
; 1342 : 			if (lpObj->m_ContributePoint > 32)
; 1343 : 			{
; 1344 : 				if (lpObj->m_ContributePoint > 56)
; 1345 : 				{
; 1346 : 					if (lpObj->m_ContributePoint > 80)
; 1347 : 					{
; 1348 : 						if (lpObj->m_ContributePoint > 104)
; 1349 : 						{
; 1350 : 							if (lpObj->m_ContributePoint > 128)
; 1351 : 							{
; 1352 : 								if (lpObj->m_ContributePoint > 152)
; 1353 : 								{
; 1354 : 									if (lpObj->m_ContributePoint > 176)
; 1355 : 									{
; 1356 : 										return 9;
; 1357 : 									}
; 1358 : 									else
; 1359 : 									{
; 1360 : 										return 8;
; 1361 : 									}
; 1362 : 								}
; 1363 : 								else
; 1364 : 								{
; 1365 : 									return 7;
; 1366 : 								}
; 1367 : 							}
; 1368 : 							else 
; 1369 : 							{
; 1370 : 								return 6;
; 1371 : 							}
; 1372 : 						}
; 1373 : 						else 
; 1374 : 						{
; 1375 : 							return 5;
; 1376 : 						}
; 1377 : 					}
; 1378 : 					else
; 1379 : 					{
; 1380 : 						return 4;
; 1381 : 					}
; 1382 : 				}
; 1383 : 				else
; 1384 : 				{
; 1385 : 					return 3;
; 1386 : 				}
; 1387 : 			}
; 1388 : 			else 
; 1389 : 			{
; 1390 : 				return 2;
; 1391 : 			}
; 1392 : 		}
; 1393 : 		else
; 1394 : 		{
; 1395 : 			return 1;
; 1396 : 		}
; 1397 : 	}
; 1398 : 	return 0;*/
; 1399 : }

  000b9	5d		 pop	 ebp
  000ba	c2 04 00	 ret	 4
$LN16@CalGensCla:

; 1225 : 	{
; 1226 : 		if( lpObj->m_ContributePoint >= 0 && lpObj->m_ContributePoint <= 499 )

  000bd	8b 81 ec 22 00
	00		 mov	 eax, DWORD PTR [ecx+8940]
  000c3	85 c0		 test	 eax, eax
  000c5	78 11		 js	 SHORT $LN15@CalGensCla
  000c7	3d f3 01 00 00	 cmp	 eax, 499		; 000001f3H
  000cc	7f 0a		 jg	 SHORT $LN15@CalGensCla

; 1227 : 		{
; 1228 : 			lpObj->m_GensClass = 14; //-> Private

  000ce	c7 81 f4 22 00
	00 0e 00 00 00	 mov	 DWORD PTR [ecx+8948], 14 ; 0000000eH
$LN15@CalGensCla:

; 1229 : 		}
; 1230 : 		// ----
; 1231 : 		if( lpObj->m_ContributePoint >= 500 && lpObj->m_ContributePoint <= 1499 )

  000d8	3d f4 01 00 00	 cmp	 eax, 500		; 000001f4H
  000dd	7c 11		 jl	 SHORT $LN14@CalGensCla
  000df	3d db 05 00 00	 cmp	 eax, 1499		; 000005dbH
  000e4	7f 0a		 jg	 SHORT $LN14@CalGensCla

; 1232 : 		{
; 1233 : 			lpObj->m_GensClass = 13; //-> Sergeant

  000e6	c7 81 f4 22 00
	00 0d 00 00 00	 mov	 DWORD PTR [ecx+8948], 13 ; 0000000dH
$LN14@CalGensCla:

; 1234 : 		}
; 1235 : 		// ----
; 1236 : 		if( lpObj->m_ContributePoint >= 1500 && lpObj->m_ContributePoint <= 2999 )

  000f0	3d dc 05 00 00	 cmp	 eax, 1500		; 000005dcH
  000f5	7c 11		 jl	 SHORT $LN13@CalGensCla
  000f7	3d b7 0b 00 00	 cmp	 eax, 2999		; 00000bb7H
  000fc	7f 0a		 jg	 SHORT $LN13@CalGensCla

; 1237 : 		{
; 1238 : 			lpObj->m_GensClass = 12; //-> Lieutenant

  000fe	c7 81 f4 22 00
	00 0c 00 00 00	 mov	 DWORD PTR [ecx+8948], 12 ; 0000000cH
$LN13@CalGensCla:

; 1239 : 		}
; 1240 : 		// ----
; 1241 : 		if( lpObj->m_ContributePoint >= 3000 && lpObj->m_ContributePoint <= 5999 )

  00108	3d b8 0b 00 00	 cmp	 eax, 3000		; 00000bb8H
  0010d	7c 11		 jl	 SHORT $LN12@CalGensCla
  0010f	3d 6f 17 00 00	 cmp	 eax, 5999		; 0000176fH
  00114	7f 0a		 jg	 SHORT $LN12@CalGensCla

; 1242 : 		{
; 1243 : 			lpObj->m_GensClass = 11; //-> Officer

  00116	c7 81 f4 22 00
	00 0b 00 00 00	 mov	 DWORD PTR [ecx+8948], 11 ; 0000000bH
$LN12@CalGensCla:

; 1244 : 		}
; 1245 : 		// ----
; 1246 : 		if( lpObj->m_ContributePoint >= 6000 && lpObj->m_ContributePoint <= 9999 )

  00120	3d 70 17 00 00	 cmp	 eax, 6000		; 00001770H
  00125	7c 11		 jl	 SHORT $LN11@CalGensCla
  00127	3d 0f 27 00 00	 cmp	 eax, 9999		; 0000270fH
  0012c	7f 0a		 jg	 SHORT $LN11@CalGensCla

; 1247 : 		{
; 1248 : 			lpObj->m_GensClass = 10; //-> Guard Perfect

  0012e	c7 81 f4 22 00
	00 0a 00 00 00	 mov	 DWORD PTR [ecx+8948], 10 ; 0000000aH
$LN11@CalGensCla:

; 1249 : 		}
; 1250 : 		// ----
; 1251 : 		if( lpObj->m_ContributePoint >= 10000 )

  00138	3d 10 27 00 00	 cmp	 eax, 10000		; 00002710H
  0013d	7c 0a		 jl	 SHORT $LN10@CalGensCla

; 1252 : 		{
; 1253 : 			lpObj->m_GensClass = 9; //-> Knight

  0013f	c7 81 f4 22 00
	00 09 00 00 00	 mov	 DWORD PTR [ecx+8948], 9
$LN10@CalGensCla:

; 1296 : 		}
; 1297 : 	}
; 1298 : 	/*
; 1299 : 	if (lpObj->m_ContributePoint > 200)
; 1300 : 	{
; 1301 : 		if (lpObj->m_ContributePoint < 224)
; 1302 : 		{
; 1303 : 			if (lpObj->m_ContributePoint < 248)
; 1304 : 			{
; 1305 : 				if (lpObj->m_ContributePoint < 272)
; 1306 : 				{
; 1307 : 					if (lpObj->m_ContributePoint < 296)
; 1308 : 					{
; 1309 : 						if (lpObj->m_ContributePoint < 320)
; 1310 : 						{
; 1311 : 							return 0; // WTF? >< if rank from 297 to 319 your rank is 0???
; 1312 : 						}
; 1313 : 						else 
; 1314 : 						{
; 1315 : 							return 14;
; 1316 : 						}
; 1317 : 					}
; 1318 : 					else
; 1319 : 					{
; 1320 : 						return 13;
; 1321 : 					}
; 1322 : 				}
; 1323 : 				else 
; 1324 : 				{
; 1325 : 					return 12;
; 1326 : 				}
; 1327 : 			}
; 1328 : 			else
; 1329 : 			{
; 1330 : 				return 11;
; 1331 : 			}
; 1332 : 		}
; 1333 : 		else
; 1334 : 		{
; 1335 : 			return 10;
; 1336 : 		}
; 1337 : 	}
; 1338 : 	else
; 1339 : 	{
; 1340 : 		if (lpObj->m_ContributePoint > 8)
; 1341 : 		{
; 1342 : 			if (lpObj->m_ContributePoint > 32)
; 1343 : 			{
; 1344 : 				if (lpObj->m_ContributePoint > 56)
; 1345 : 				{
; 1346 : 					if (lpObj->m_ContributePoint > 80)
; 1347 : 					{
; 1348 : 						if (lpObj->m_ContributePoint > 104)
; 1349 : 						{
; 1350 : 							if (lpObj->m_ContributePoint > 128)
; 1351 : 							{
; 1352 : 								if (lpObj->m_ContributePoint > 152)
; 1353 : 								{
; 1354 : 									if (lpObj->m_ContributePoint > 176)
; 1355 : 									{
; 1356 : 										return 9;
; 1357 : 									}
; 1358 : 									else
; 1359 : 									{
; 1360 : 										return 8;
; 1361 : 									}
; 1362 : 								}
; 1363 : 								else
; 1364 : 								{
; 1365 : 									return 7;
; 1366 : 								}
; 1367 : 							}
; 1368 : 							else 
; 1369 : 							{
; 1370 : 								return 6;
; 1371 : 							}
; 1372 : 						}
; 1373 : 						else 
; 1374 : 						{
; 1375 : 							return 5;
; 1376 : 						}
; 1377 : 					}
; 1378 : 					else
; 1379 : 					{
; 1380 : 						return 4;
; 1381 : 					}
; 1382 : 				}
; 1383 : 				else
; 1384 : 				{
; 1385 : 					return 3;
; 1386 : 				}
; 1387 : 			}
; 1388 : 			else 
; 1389 : 			{
; 1390 : 				return 2;
; 1391 : 			}
; 1392 : 		}
; 1393 : 		else
; 1394 : 		{
; 1395 : 			return 1;
; 1396 : 		}
; 1397 : 	}
; 1398 : 	return 0;*/
; 1399 : }

  00149	5d		 pop	 ebp
  0014a	c2 04 00	 ret	 4
?CalGensClass@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; GensSystem::CalGensClass
_TEXT	ENDS
PUBLIC	?SetGensRanking@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensRanking
; Function compile flags: /Ogtp
;	COMDAT ?SetGensRanking@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iGensRanking$ = 12					; size = 4
?SetGensRanking@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::SetGensRanking, COMDAT
; _this$ = ecx

; 1407 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1408 : 	return lpObj->m_GensRanking = iGensRanking;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iGensRanking$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00009	89 81 f0 22 00
	00		 mov	 DWORD PTR [ecx+8944], eax

; 1409 : }

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?SetGensRanking@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::SetGensRanking
_TEXT	ENDS
PUBLIC	?SetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensClass
; Function compile flags: /Ogtp
;	COMDAT ?SetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iGensClass$ = 12					; size = 4
?SetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC	; GensSystem::SetGensClass, COMDAT
; _this$ = ecx

; 1417 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1418 : 	return lpObj->m_GensClass = iGensClass;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iGensClass$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00009	89 81 f4 22 00
	00		 mov	 DWORD PTR [ecx+8948], eax

; 1419 : }

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?SetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP	; GensSystem::SetGensClass
_TEXT	ENDS
PUBLIC	?GetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensClass
; Function compile flags: /Ogtp
;	COMDAT ?GetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC	; GensSystem::GetGensClass, COMDAT
; _this$ = ecx

; 1427 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1428 : 	return lpObj->m_GensClass;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	8b 80 f4 22 00
	00		 mov	 eax, DWORD PTR [eax+8948]

; 1429 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP	; GensSystem::GetGensClass
_TEXT	ENDS
PUBLIC	?GetNextContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetNextContributePoint
; Function compile flags: /Ogtp
;	COMDAT ?GetNextContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetNextContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GetNextContributePoint, COMDAT
; _this$ = ecx

; 1437 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1438 : 	if (this->IsRegGensInfluence(lpObj))

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 ?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsRegGensInfluence
  0000d	84 c0		 test	 al, al
  0000f	74 74		 je	 SHORT $LN12@GetNextCon

; 1439 : 	{
; 1440 : 		if (lpObj->m_NextContributePoint > 499)

  00011	8b 8e c0 22 00
	00		 mov	 ecx, DWORD PTR [esi+8896]
  00017	81 f9 f3 01 00
	00		 cmp	 ecx, 499		; 000001f3H
  0001d	7e 5a		 jle	 SHORT $LN11@GetNextCon

; 1441 : 		{
; 1442 : 			if (lpObj->m_NextContributePoint > 1499)

  0001f	81 f9 db 05 00
	00		 cmp	 ecx, 1499		; 000005dbH
  00025	7e 46		 jle	 SHORT $LN10@GetNextCon

; 1443 : 			{
; 1444 : 				if (lpObj->m_NextContributePoint > 2999)

  00027	81 f9 b7 0b 00
	00		 cmp	 ecx, 2999		; 00000bb7H
  0002d	7e 32		 jle	 SHORT $LN9@GetNextCon

; 1445 : 				{
; 1446 : 					if (lpObj->m_NextContributePoint > 5999)

  0002f	81 f9 6f 17 00
	00		 cmp	 ecx, 5999		; 0000176fH
  00035	7e 1e		 jle	 SHORT $LN8@GetNextCon

; 1447 : 					{
; 1448 : 						if (lpObj->m_NextContributePoint > 9999)

  00037	81 f9 0f 27 00
	00		 cmp	 ecx, 9999		; 0000270fH
  0003d	7e 0a		 jle	 SHORT $LN7@GetNextCon

; 1449 : 						{
; 1450 : 							return -2;

  0003f	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00044	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
$LN7@GetNextCon:

; 1451 : 						}
; 1452 : 						else
; 1453 : 						{
; 1454 : 							return 10000 - lpObj->m_NextContributePoint;

  00049	b8 10 27 00 00	 mov	 eax, 10000		; 00002710H
  0004e	2b c1		 sub	 eax, ecx
  00050	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN8@GetNextCon:

; 1455 : 						}
; 1456 : 					}
; 1457 : 					else
; 1458 : 					{
; 1459 : 						return 6000 - lpObj->m_NextContributePoint;

  00055	b8 70 17 00 00	 mov	 eax, 6000		; 00001770H
  0005a	2b c1		 sub	 eax, ecx
  0005c	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN9@GetNextCon:

; 1460 : 					}
; 1461 : 				}
; 1462 : 				else
; 1463 : 				{
; 1464 : 					return 3000 - lpObj->m_NextContributePoint;

  00061	b8 b8 0b 00 00	 mov	 eax, 3000		; 00000bb8H
  00066	2b c1		 sub	 eax, ecx
  00068	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
$LN10@GetNextCon:

; 1465 : 				}
; 1466 : 			}
; 1467 : 			else
; 1468 : 			{
; 1469 : 		 	return 1500 - lpObj->m_NextContributePoint;

  0006d	b8 dc 05 00 00	 mov	 eax, 1500		; 000005dcH
  00072	2b c1		 sub	 eax, ecx
  00074	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
$LN11@GetNextCon:

; 1470 : 			}
; 1471 : 		}
; 1472 : 		else
; 1473 : 		{
; 1474 : 			return 500 - lpObj->m_NextContributePoint;

  00079	b8 f4 01 00 00	 mov	 eax, 500		; 000001f4H
  0007e	2b c1		 sub	 eax, ecx
  00080	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
$LN12@GetNextCon:

; 1475 : 		}
; 1476 : 	}
; 1477 : 	else
; 1478 : 	{
; 1479 : 		return -1;

  00085	83 c8 ff	 or	 eax, -1
  00088	5e		 pop	 esi

; 1480 : 	}
; 1481 : 
; 1482 : 	return 0;
; 1483 : }

  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?GetNextContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GetNextContributePoint
_TEXT	ENDS
PUBLIC	?SetGensMemberCount@GensSystem@@QAEHHH@Z	; GensSystem::SetGensMemberCount
; Function compile flags: /Ogtp
;	COMDAT ?SetGensMemberCount@GensSystem@@QAEHHH@Z
_TEXT	SEGMENT
_iInfluence$ = 8					; size = 4
_iMemberCount$ = 12					; size = 4
?SetGensMemberCount@GensSystem@@QAEHHH@Z PROC		; GensSystem::SetGensMemberCount, COMDAT
; _this$ = ecx

; 1491 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1492 : 	if (iInfluence == VANERT_INFLUENCE)

  00003	8b 45 08	 mov	 eax, DWORD PTR _iInfluence$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	75 0f		 jne	 SHORT $LN3@SetGensMem

; 1493 : 	{
; 1494 : 		this->iVanertMemberCount = iMemberCount;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _iMemberCount$[ebp]
  0000e	89 81 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], eax

; 1500 : 	}
; 1501 : 
; 1502 : 	return NONE_INFLUENCE;

  00014	33 c0		 xor	 eax, eax

; 1503 : }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN3@SetGensMem:

; 1495 : 	}
; 1496 : 	else 
; 1497 : 	{
; 1498 : 		if (iInfluence == DUPRIAN_INFLUENCE)

  0001a	83 f8 02	 cmp	 eax, 2
  0001d	75 09		 jne	 SHORT $LN6@SetGensMem

; 1499 : 		 this->iDuprianMemberCount = iMemberCount;

  0001f	8b 55 0c	 mov	 edx, DWORD PTR _iMemberCount$[ebp]
  00022	89 91 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], edx
$LN6@SetGensMem:

; 1500 : 	}
; 1501 : 
; 1502 : 	return NONE_INFLUENCE;

  00028	33 c0		 xor	 eax, eax

; 1503 : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?SetGensMemberCount@GensSystem@@QAEHHH@Z ENDP		; GensSystem::SetGensMemberCount
_TEXT	ENDS
PUBLIC	?GetGensMemberCount@GensSystem@@QAEHH@Z		; GensSystem::GetGensMemberCount
; Function compile flags: /Ogtp
;	COMDAT ?GetGensMemberCount@GensSystem@@QAEHH@Z
_TEXT	SEGMENT
_iInfluence$ = 8					; size = 4
?GetGensMemberCount@GensSystem@@QAEHH@Z PROC		; GensSystem::GetGensMemberCount, COMDAT
; _this$ = ecx

; 1511 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1512 : 	if (iInfluence == VANERT_INFLUENCE)

  00003	8b 45 08	 mov	 eax, DWORD PTR _iInfluence$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	75 0a		 jne	 SHORT $LN4@GetGensMem

; 1513 : 	{
; 1514 : 		return this->iVanertMemberCount;

  0000b	8b 81 c0 00 00
	00		 mov	 eax, DWORD PTR [ecx+192]

; 1523 : 	}
; 1524 : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
$LN4@GetGensMem:

; 1515 : 	}
; 1516 : 	else 	if (iInfluence == DUPRIAN_INFLUENCE)

  00015	83 f8 02	 cmp	 eax, 2
  00018	75 0a		 jne	 SHORT $LN2@GetGensMem

; 1517 : 	{
; 1518 : 		return this->iDuprianMemberCount;

  0001a	8b 81 c4 00 00
	00		 mov	 eax, DWORD PTR [ecx+196]

; 1523 : 	}
; 1524 : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN2@GetGensMem:

; 1519 : 	}
; 1520 : 	else
; 1521 : 	{
; 1522 : 	 return -1;

  00024	83 c8 ff	 or	 eax, -1

; 1523 : 	}
; 1524 : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?GetGensMemberCount@GensSystem@@QAEHH@Z ENDP		; GensSystem::GetGensMemberCount
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReqExDBGensRewardCheck@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::ReqExDBGensRewardCheck
; Function compile flags: /Ogtp
;	COMDAT ?ReqExDBGensRewardCheck@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_pMsg$211441 = -32					; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_iInfluence$ = 12					; size = 4
?ReqExDBGensRewardCheck@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::ReqExDBGensRewardCheck, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1533 : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	85 c0		 test	 eax, eax
  00018	0f 88 92 00 00
	00		 js	 $LN1@ReqExDBGen@2
  0001e	33 c9		 xor	 ecx, ecx
  00020	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00025	0f 9e c1	 setle	 cl
  00028	8b c1		 mov	 eax, ecx
  0002a	85 c0		 test	 eax, eax

; 1534 : 		return false;

  0002c	0f 84 7e 00 00
	00		 je	 $LN1@ReqExDBGen@2

; 1535 : 
; 1536 : 	if (gObjIsConnected(lpObj))

  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00038	83 c4 04	 add	 esp, 4
  0003b	85 c0		 test	 eax, eax
  0003d	74 71		 je	 SHORT $LN1@ReqExDBGen@2

; 1537 : 	{
; 1538 : 		PMSG_REQ_GENS_REWARD_CHECK_EXDB pMsg;	
; 1539 : 
; 1540 : 		PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  0003f	6a 1c		 push	 28			; 0000001cH
  00041	8d 55 e0	 lea	 edx, DWORD PTR _pMsg$211441[ebp]
  00044	68 f8 00 00 00	 push	 248			; 000000f8H
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1541 : 	
; 1542 : 		pMsg.bResult	= 12;
; 1543 : 		strcpy(pMsg.Name, lpObj->Name);

  0004f	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  00052	8d 55 e3	 lea	 edx, DWORD PTR _pMsg$211441[ebp+3]
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	c6 45 f0 0c	 mov	 BYTE PTR _pMsg$211441[ebp+16], 12 ; 0000000cH
  0005c	2b d0		 sub	 edx, eax
  0005e	8b ff		 npad	 2
$LL8@ReqExDBGen@2:
  00060	8a 08		 mov	 cl, BYTE PTR [eax]
  00062	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00065	40		 inc	 eax
  00066	84 c9		 test	 cl, cl
  00068	75 f6		 jne	 SHORT $LL8@ReqExDBGen@2

; 1544 : 		pMsg.wIndexH	= SET_NUMBERH(lpObj->m_Index);

  0006a	8b 06		 mov	 eax, DWORD PTR [esi]

; 1545 : 		pMsg.wIndexL	= SET_NUMBERL(lpObj->m_Index);

  0006c	0f b6 16	 movzx	 edx, BYTE PTR [esi]
  0006f	c1 e8 08	 shr	 eax, 8
  00072	0f b6 c8	 movzx	 ecx, al

; 1546 : 		pMsg.iInfluence = iInfluence;

  00075	8b 45 0c	 mov	 eax, DWORD PTR _iInfluence$[ebp]
  00078	66 89 4d f2	 mov	 WORD PTR _pMsg$211441[ebp+18], cx

; 1547 : 			
; 1548 : 		if (wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size))

  0007c	0f b6 4d e1	 movzx	 ecx, BYTE PTR _pMsg$211441[ebp+1]
  00080	66 89 55 f4	 mov	 WORD PTR _pMsg$211441[ebp+20], dx
  00084	51		 push	 ecx
  00085	8d 55 e0	 lea	 edx, DWORD PTR _pMsg$211441[ebp]
  00088	52		 push	 edx
  00089	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0008e	89 45 f8	 mov	 DWORD PTR _pMsg$211441[ebp+24], eax
  00091	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  00096	85 c0		 test	 eax, eax
  00098	74 16		 je	 SHORT $LN1@ReqExDBGen@2

; 1549 : 			return true;

  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	5e		 pop	 esi

; 1550 : 	}
; 1551 : 	return false;
; 1552 : }

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	33 cd		 xor	 ecx, ebp
  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN1@ReqExDBGen@2:
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b3	33 cd		 xor	 ecx, ebp
  000b5	33 c0		 xor	 eax, eax
  000b7	5e		 pop	 esi
  000b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
?ReqExDBGensRewardCheck@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::ReqExDBGensRewardCheck
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReqExDBGensRewardComplete@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqExDBGensRewardComplete
; Function compile flags: /Ogtp
;	COMDAT ?ReqExDBGensRewardComplete@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211456 = -24					; size = 20
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?ReqExDBGensRewardComplete@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::ReqExDBGensRewardComplete, COMDAT
; _this$ = ecx

; 1560 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1561 : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	85 c0		 test	 eax, eax
  00018	0f 88 84 00 00
	00		 js	 $LN1@ReqExDBGen@3
  0001e	33 c9		 xor	 ecx, ecx
  00020	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00025	0f 9e c1	 setle	 cl
  00028	8b c1		 mov	 eax, ecx
  0002a	85 c0		 test	 eax, eax

; 1562 : 		return false;

  0002c	74 74		 je	 SHORT $LN1@ReqExDBGen@3

; 1563 : 
; 1564 : 	if (gObjIsConnected(lpObj))

  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00034	83 c4 04	 add	 esp, 4
  00037	85 c0		 test	 eax, eax
  00039	74 67		 je	 SHORT $LN1@ReqExDBGen@3

; 1565 : 	{
; 1566 : 		PMSG_REQ_GENS_REWARD_COMPLETE_EXDB pMsg;
; 1567 : 
; 1568 : 		PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  0003b	6a 14		 push	 20			; 00000014H
  0003d	8d 55 e8	 lea	 edx, DWORD PTR _pMsg$211456[ebp]
  00040	68 f8 00 00 00	 push	 248			; 000000f8H
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1569 : 
; 1570 : 		pMsg.bResult = 14;
; 1571 : 		memcpy(pMsg.Name, lpObj->Name, 0x0A);

  0004b	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  0004e	66 8b 56 7f	 mov	 dx, WORD PTR [esi+127]
  00052	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  00055	89 45 ec	 mov	 DWORD PTR _pMsg$211456[ebp+4], eax

; 1572 : 		pMsg.wIndexH = SET_NUMBERHW(lpObj->m_Index);

  00058	66 8b 46 02	 mov	 ax, WORD PTR [esi+2]
  0005c	66 89 55 f4	 mov	 WORD PTR _pMsg$211456[ebp+12], dx

; 1573 : 		pMsg.wIndexL = SET_NUMBERLW(lpObj->m_Index);
; 1574 : 
; 1575 : 		if (wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size))

  00060	0f b6 55 e9	 movzx	 edx, BYTE PTR _pMsg$211456[ebp+1]
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	89 4d f0	 mov	 DWORD PTR _pMsg$211456[ebp+8], ecx
  0006a	66 8b 0e	 mov	 cx, WORD PTR [esi]
  0006d	66 89 45 f8	 mov	 WORD PTR _pMsg$211456[ebp+16], ax
  00071	52		 push	 edx
  00072	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$211456[ebp]
  00075	66 89 4d fa	 mov	 WORD PTR _pMsg$211456[ebp+18], cx
  00079	50		 push	 eax
  0007a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0007f	c6 45 eb 0e	 mov	 BYTE PTR _pMsg$211456[ebp+3], 14 ; 0000000eH
  00083	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  00088	85 c0		 test	 eax, eax
  0008a	74 16		 je	 SHORT $LN1@ReqExDBGen@3

; 1576 : 			return true;

  0008c	b8 01 00 00 00	 mov	 eax, 1
  00091	5e		 pop	 esi

; 1577 : 	}
; 1578 : 	return false;
; 1579 : }

  00092	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00095	33 cd		 xor	 ecx, ebp
  00097	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
$LN1@ReqExDBGen@3:
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	33 cd		 xor	 ecx, ebp
  000a7	33 c0		 xor	 eax, eax
  000a9	5e		 pop	 esi
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 04 00	 ret	 4
?ReqExDBGensRewardComplete@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::ReqExDBGensRewardComplete
_TEXT	ENDS
PUBLIC	?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z ; GensSystem::SendGensReward
; Function compile flags: /Ogtp
;	COMDAT ?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z
_TEXT	SEGMENT
_pMsg$211472 = -8					; size = 5
_lpObj$ = 8						; size = 4
_btResult$ = 12						; size = 1
?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z PROC ; GensSystem::SendGensReward, COMDAT
; _this$ = ecx

; 1587 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1588 : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00007	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0000a	8b 06		 mov	 eax, DWORD PTR [esi]
  0000c	85 c0		 test	 eax, eax
  0000e	78 5b		 js	 SHORT $LN1@SendGensRe
  00010	33 c9		 xor	 ecx, ecx
  00012	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00017	0f 9e c1	 setle	 cl
  0001a	8b c1		 mov	 eax, ecx
  0001c	85 c0		 test	 eax, eax

; 1589 : 		return false;

  0001e	74 4b		 je	 SHORT $LN1@SendGensRe

; 1590 : 
; 1591 : 	if (gObjIsConnected(lpObj))

  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00026	83 c4 04	 add	 esp, 4
  00029	85 c0		 test	 eax, eax
  0002b	74 3e		 je	 SHORT $LN1@SendGensRe

; 1592 : 	{
; 1593 : 		PMSG_SEND_GENS_REWARD pMsg;
; 1594 : 
; 1595 : 		PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  0002d	6a 05		 push	 5
  0002f	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$211472[ebp]
  00032	68 f8 00 00 00	 push	 248			; 000000f8H
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1596 : 
; 1597 : 		pMsg.bResult = 10;
; 1598 : 		pMsg.bItemType = btResult;
; 1599 : 
; 1600 : 		if (DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size))

  0003d	0f b6 4d f9	 movzx	 ecx, BYTE PTR _pMsg$211472[ebp+1]
  00041	8a 45 0c	 mov	 al, BYTE PTR _btResult$[ebp]
  00044	51		 push	 ecx
  00045	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$211472[ebp]
  00048	88 45 fc	 mov	 BYTE PTR _pMsg$211472[ebp+4], al
  0004b	8b 06		 mov	 eax, DWORD PTR [esi]
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	c6 45 fb 0a	 mov	 BYTE PTR _pMsg$211472[ebp+3], 10 ; 0000000aH
  00053	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00058	83 c4 18	 add	 esp, 24			; 00000018H
  0005b	85 c0		 test	 eax, eax
  0005d	74 0c		 je	 SHORT $LN1@SendGensRe

; 1601 : 		 return true;

  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	5e		 pop	 esi

; 1604 : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
$LN1@SendGensRe:

; 1602 : 	}
; 1603 : 	return false;

  0006b	33 c0		 xor	 eax, eax
  0006d	5e		 pop	 esi

; 1604 : }

  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z ENDP ; GensSystem::SendGensReward
_TEXT	ENDS
PUBLIC	?GensRewardInventoryCheck@GensSystem@@QAE_NPAUOBJECTSTRUCT@@H@Z ; GensSystem::GensRewardInventoryCheck
EXTRN	?gObjOnlyInventoryRectCheck@@YAEHHHHH@Z:PROC	; gObjOnlyInventoryRectCheck
; Function compile flags: /Ogtp
;	COMDAT ?GensRewardInventoryCheck@GensSystem@@QAE_NPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_iCount$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iItemCount$ = 12					; size = 4
?GensRewardInventoryCheck@GensSystem@@QAE_NPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::GensRewardInventoryCheck, COMDAT
; _this$ = ecx

; 1652 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1653 : 	unsigned char blank = NULL;
; 1654 : 	
; 1655 : 	int iCount = 0;
; 1656 : 
; 1657 : 	for (int h = 0; h < 8; ++h)

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	33 ff		 xor	 edi, edi
  0000c	89 7d fc	 mov	 DWORD PTR _iCount$[ebp], edi
  0000f	90		 npad	 1
$LL17@GensReward:

; 1658 : 	{
; 1659 : 		for (int w = 0; w < 8; ++w)

  00010	33 f6		 xor	 esi, esi
  00012	eb 0c 8d a4 24
	00 00 00 00 eb
	03 8d 49 00	 npad	 14
$LL5@GensReward:

; 1660 : 		{
; 1661 : 			if (*(BYTE*)(lpObj->pInventoryMap + (h) * 8 + (w)) == 255)

  00020	8b 8b 28 0e 00
	00		 mov	 ecx, DWORD PTR [ebx+3624]
  00026	8d 04 fd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*8]
  0002d	03 c8		 add	 ecx, eax
  0002f	80 3c 31 ff	 cmp	 BYTE PTR [ecx+esi], 255	; 000000ffH
  00033	75 18		 jne	 SHORT $LN4@GensReward

; 1662 : 			{
; 1663 : 				if (gObjOnlyInventoryRectCheck(lpObj->m_Index, w, h, 1, 1))

  00035	8b 13		 mov	 edx, DWORD PTR [ebx]
  00037	6a 01		 push	 1
  00039	6a 01		 push	 1
  0003b	57		 push	 edi
  0003c	56		 push	 esi
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ?gObjOnlyInventoryRectCheck@@YAEHHHHH@Z ; gObjOnlyInventoryRectCheck
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	84 c0		 test	 al, al
  00048	74 03		 je	 SHORT $LN4@GensReward

; 1664 : 				{
; 1665 : 					++iCount;

  0004a	ff 45 fc	 inc	 DWORD PTR _iCount$[ebp]
$LN4@GensReward:

; 1658 : 	{
; 1659 : 		for (int w = 0; w < 8; ++w)

  0004d	46		 inc	 esi
  0004e	83 fe 08	 cmp	 esi, 8
  00051	7c cd		 jl	 SHORT $LL5@GensReward

; 1653 : 	unsigned char blank = NULL;
; 1654 : 	
; 1655 : 	int iCount = 0;
; 1656 : 
; 1657 : 	for (int h = 0; h < 8; ++h)

  00053	47		 inc	 edi
  00054	83 ff 08	 cmp	 edi, 8
  00057	7c b7		 jl	 SHORT $LL17@GensReward

; 1666 : 				}
; 1667 : 			}
; 1668 : 		}
; 1669 : 	}
; 1670 : 	return iItemCount <= iCount;

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _iCount$[ebp]
  0005c	33 c0		 xor	 eax, eax
  0005e	39 4d 0c	 cmp	 DWORD PTR _iItemCount$[ebp], ecx
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	0f 9e c0	 setle	 al
  00066	5b		 pop	 ebx

; 1671 : }

  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?GensRewardInventoryCheck@GensSystem@@QAE_NPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::GensRewardInventoryCheck
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReqExDBGensMemberCount@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqExDBGensMemberCount
; Function compile flags: /Ogtp
;	COMDAT ?ReqExDBGensMemberCount@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211517 = -28					; size = 22
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?ReqExDBGensMemberCount@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::ReqExDBGensMemberCount, COMDAT
; _this$ = ecx

; 1679 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1680 : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	85 c0		 test	 eax, eax
  00018	78 70		 js	 SHORT $LN1@ReqExDBGen@4
  0001a	33 c9		 xor	 ecx, ecx
  0001c	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00021	0f 9e c1	 setle	 cl
  00024	8b c1		 mov	 eax, ecx
  00026	85 c0		 test	 eax, eax

; 1681 : 		return false;

  00028	74 60		 je	 SHORT $LN1@ReqExDBGen@4

; 1682 : 
; 1683 : 	if (gObjIsConnected(lpObj))

  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00030	83 c4 04	 add	 esp, 4
  00033	85 c0		 test	 eax, eax
  00035	74 53		 je	 SHORT $LN1@ReqExDBGen@4

; 1684 : 	{
; 1685 : 		PMSG_REQ_GENS_MEMBER_COUNT pMsg;
; 1686 : 
; 1687 : 		PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  00037	6a 16		 push	 22			; 00000016H
  00039	8d 55 e4	 lea	 edx, DWORD PTR _pMsg$211517[ebp]
  0003c	68 f8 00 00 00	 push	 248			; 000000f8H
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1688 : 
; 1689 : 		pMsg.bResult = 0xF;
; 1690 : 		pMsg.wIndexH = SET_NUMBERHW(lpObj->m_Index);

  00047	66 8b 46 02	 mov	 ax, WORD PTR [esi+2]

; 1691 : 		pMsg.wIndexL = SET_NUMBERLW(lpObj->m_Index);
; 1692 : 
; 1693 : 		if (wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size))

  0004b	0f b6 55 e5	 movzx	 edx, BYTE PTR _pMsg$211517[ebp+1]
  0004f	66 8b 0e	 mov	 cx, WORD PTR [esi]
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	66 89 45 f6	 mov	 WORD PTR _pMsg$211517[ebp+18], ax
  00059	52		 push	 edx
  0005a	8d 45 e4	 lea	 eax, DWORD PTR _pMsg$211517[ebp]
  0005d	66 89 4d f8	 mov	 WORD PTR _pMsg$211517[ebp+20], cx
  00061	50		 push	 eax
  00062	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00067	c6 45 e7 0f	 mov	 BYTE PTR _pMsg$211517[ebp+3], 15 ; 0000000fH
  0006b	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  00070	85 c0		 test	 eax, eax
  00072	74 16		 je	 SHORT $LN1@ReqExDBGen@4

; 1694 : 			return true;

  00074	b8 01 00 00 00	 mov	 eax, 1
  00079	5e		 pop	 esi

; 1695 : 	}
; 1696 : 	return false;
; 1697 : }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
$LN1@ReqExDBGen@4:
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008d	33 cd		 xor	 ecx, ebp
  0008f	33 c0		 xor	 eax, eax
  00091	5e		 pop	 esi
  00092	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
?ReqExDBGensMemberCount@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::ReqExDBGensMemberCount
_TEXT	ENDS
PUBLIC	?ReqExDBSetGensRewardDay@GensSystem@@QAEHXZ	; GensSystem::ReqExDBSetGensRewardDay
; Function compile flags: /Ogtp
;	COMDAT ?ReqExDBSetGensRewardDay@GensSystem@@QAEHXZ
_TEXT	SEGMENT
_pMsg$ = -4						; size = 4
?ReqExDBSetGensRewardDay@GensSystem@@QAEHXZ PROC	; GensSystem::ReqExDBSetGensRewardDay, COMDAT
; _this$ = ecx

; 1702 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1703 : 	PMSG_SET_GENS_REWARD_DAY_EXDB pMsg;
; 1704 : 
; 1705 : 	PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  00004	6a 04		 push	 4
  00006	8d 45 fc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00009	68 f8 00 00 00	 push	 248			; 000000f8H
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1706 : 	pMsg.bRewardDay = 17;
; 1707 : 
; 1708 : 	return wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00014	0f b6 4d fd	 movzx	 ecx, BYTE PTR _pMsg$[ebp+1]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	51		 push	 ecx
  0001c	8d 55 fc	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0001f	52		 push	 edx
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00025	c6 45 ff 11	 mov	 BYTE PTR _pMsg$[ebp+3], 17 ; 00000011H
  00029	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1709 : };

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?ReqExDBSetGensRewardDay@GensSystem@@QAEHXZ ENDP	; GensSystem::ReqExDBSetGensRewardDay
_TEXT	ENDS
PUBLIC	?ReqExDBSetGensRanking@GensSystem@@QAEHXZ	; GensSystem::ReqExDBSetGensRanking
; Function compile flags: /Ogtp
;	COMDAT ?ReqExDBSetGensRanking@GensSystem@@QAEHXZ
_TEXT	SEGMENT
_pMsg$ = -4						; size = 4
?ReqExDBSetGensRanking@GensSystem@@QAEHXZ PROC		; GensSystem::ReqExDBSetGensRanking, COMDAT
; _this$ = ecx

; 1713 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1714 : 	GENS_RANKING pMsg;
; 1715 : 
; 1716 : 	PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  00004	6a 04		 push	 4
  00006	8d 45 fc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00009	68 f8 00 00 00	 push	 248			; 000000f8H
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1717 : 	pMsg.bRanking = 0x12;
; 1718 : 
; 1719 : 	return wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00014	0f b6 4d fd	 movzx	 ecx, BYTE PTR _pMsg$[ebp+1]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	51		 push	 ecx
  0001c	8d 55 fc	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0001f	52		 push	 edx
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00025	c6 45 ff 12	 mov	 BYTE PTR _pMsg$[ebp+3], 18 ; 00000012H
  00029	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1720 : };

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?ReqExDBSetGensRanking@GensSystem@@QAEHXZ ENDP		; GensSystem::ReqExDBSetGensRanking
_TEXT	ENDS
PUBLIC	??_C@_0BP@DMBIKMLF@?$FLGensSystem?$FN?5?$CFs?5file?5is?5loaded?$AA@ ; `string'
PUBLIC	__real@00000000
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0CG@JGJNDEEB@?$FLGensSystem?$FN?5Info?5file?5Load?5Fail@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	?LoadData@GensSystem@@QAEHPAD@Z			; GensSystem::LoadData
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	_fclose:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_fopen:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0BP@DMBIKMLF@?$FLGensSystem?$FN?5?$CFs?5file?5is?5loaded?$AA@
CONST	SEGMENT
??_C@_0BP@DMBIKMLF@?$FLGensSystem?$FN?5?$CFs?5file?5is?5loaded?$AA@ DB '['
	DB	'GensSystem] %s file is loaded', 00H		; `string'
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JGJNDEEB@?$FLGensSystem?$FN?5Info?5file?5Load?5Fail@
CONST	SEGMENT
??_C@_0CG@JGJNDEEB@?$FLGensSystem?$FN?5Info?5file?5Load?5Fail@ DB '[GensS'
	DB	'ystem] Info file Load Fail [%s]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadData@GensSystem@@QAEHPAD@Z
_TEXT	SEGMENT
_Type$ = -24						; size = 4
tv1344 = -20						; size = 4
tv1342 = -20						; size = 4
tv1326 = -20						; size = 4
tv1324 = -20						; size = 4
tv1318 = -20						; size = 4
tv1316 = -20						; size = 4
tv1370 = -16						; size = 4
tv1368 = -16						; size = 4
_MapCounter$ = -16					; size = 4
tv1396 = -12						; size = 4
tv1394 = -12						; size = 4
_ZoneCounter$ = -12					; size = 4
_RewardCounter$ = -8					; size = 4
tv1399 = -2						; size = 2
tv1373 = -2						; size = 2
tv1347 = -2						; size = 2
tv1329 = -2						; size = 2
tv1321 = -2						; size = 2
_lpszFileName$ = 8					; size = 4
?LoadData@GensSystem@@QAEHPAD@Z PROC			; GensSystem::LoadData, COMDAT
; _this$ = ecx

; 1724 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1725 : 	/*int iType = 0;
; 1726 : 	SMDToken Token = GetToken();
; 1727 : 	int i = 0;
; 1728 : 	unsigned long dwError = 0;
; 1729 : 	int iGensClass = 0;
; 1730 : 	int iRewardItemType = 0;
; 1731 : 	int iRewardItemCount = 0;
; 1732 : 	unsigned char btRankingKind = NULL;
; 1733 : 	int iRankingValue = 0;
; 1734 : 	int iRewardItemNumber = 0;*/
; 1735 : 	// ----
; 1736 : 	SMDFile = fopen(lpszFileName, "r");	//ok

  00008	8b 75 08	 mov	 esi, DWORD PTR _lpszFileName$[ebp]
  0000b	57		 push	 edi
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00011	56		 push	 esi
  00012	8b d9		 mov	 ebx, ecx
  00014	e8 00 00 00 00	 call	 _fopen

; 1737 : 	// ----
; 1738 : 	if( !SMDFile )

  00019	33 ff		 xor	 edi, edi
  0001b	83 c4 08	 add	 esp, 8
  0001e	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax
  00023	3b c7		 cmp	 eax, edi
  00025	75 19		 jne	 SHORT $LN26@LoadData

; 1739 : 	{
; 1740 : 		MsgBox("[GensSystem] Info file Load Fail [%s]", lpszFileName);

  00027	56		 push	 esi
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JGJNDEEB@?$FLGensSystem?$FN?5Info?5file?5Load?5Fail@
  0002d	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 1741 : 		return false;

  00037	33 c0		 xor	 eax, eax
  00039	5b		 pop	 ebx

; 1874 : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN26@LoadData:

; 1742 : 	}
; 1743 : 	// ----
; 1744 : 	int Token;
; 1745 : 	int Type;
; 1746 : 	int ZoneCounter		= 0;

  00040	89 7d f4	 mov	 DWORD PTR _ZoneCounter$[ebp], edi

; 1747 : 	int MapCounter		= 0;

  00043	89 7d f0	 mov	 DWORD PTR _MapCounter$[ebp], edi

; 1748 : 	int RewardCounter	= 0;

  00046	89 7d f8	 mov	 DWORD PTR _RewardCounter$[ebp], edi
  00049	8d 4b 0f	 lea	 ecx, DWORD PTR [ebx+15]
  0004c	ba 0b 00 00 00	 mov	 edx, 11			; 0000000bH
  00051	b0 ff		 mov	 al, 255			; 000000ffH
$LL25@LoadData:

; 1749 : 	// ----
; 1750 : 	for( int i = 0; i < MAX_BATTLE_ZONE; i++ )
; 1751 : 	{
; 1752 : 		this->BattleZoneList[i]	= -1;

  00053	88 41 f5	 mov	 BYTE PTR [ecx-11], al

; 1753 : 		this->BattleMapList[i]	= -1;

  00056	88 01		 mov	 BYTE PTR [ecx], al
  00058	41		 inc	 ecx
  00059	4a		 dec	 edx
  0005a	75 f7		 jne	 SHORT $LL25@LoadData

; 1754 : 	}
; 1755 : 	// ----
; 1756 : 	for( int i = 0; i < MAX_REWARD_TABLE+1; i++ )
; 1757 : 	{
; 1758 : 		this->RewardTableList[i].Rank		= -1;
; 1759 : 		this->RewardTableList[i].ItemID		= -1;

  0005c	83 c9 ff	 or	 ecx, -1
  0005f	88 43 1c	 mov	 BYTE PTR [ebx+28], al
  00062	89 4b 20	 mov	 DWORD PTR [ebx+32], ecx

; 1760 : 		this->RewardTableList[i].ItemIndex	= -1;

  00065	89 4b 24	 mov	 DWORD PTR [ebx+36], ecx

; 1761 : 		this->RewardTableList[i].ItemLevel	= -1;

  00068	88 43 28	 mov	 BYTE PTR [ebx+40], al

; 1762 : 		this->RewardTableList[i].ItemCount	= -1;

  0006b	88 43 29	 mov	 BYTE PTR [ebx+41], al
  0006e	88 43 2c	 mov	 BYTE PTR [ebx+44], al
  00071	89 4b 30	 mov	 DWORD PTR [ebx+48], ecx
  00074	89 4b 34	 mov	 DWORD PTR [ebx+52], ecx
  00077	88 43 38	 mov	 BYTE PTR [ebx+56], al
  0007a	88 43 39	 mov	 BYTE PTR [ebx+57], al
  0007d	88 43 3c	 mov	 BYTE PTR [ebx+60], al
  00080	89 4b 40	 mov	 DWORD PTR [ebx+64], ecx
  00083	89 4b 44	 mov	 DWORD PTR [ebx+68], ecx
  00086	88 43 48	 mov	 BYTE PTR [ebx+72], al
  00089	88 43 49	 mov	 BYTE PTR [ebx+73], al
  0008c	88 43 4c	 mov	 BYTE PTR [ebx+76], al
  0008f	89 4b 50	 mov	 DWORD PTR [ebx+80], ecx
  00092	89 4b 54	 mov	 DWORD PTR [ebx+84], ecx
  00095	88 43 58	 mov	 BYTE PTR [ebx+88], al
  00098	88 43 59	 mov	 BYTE PTR [ebx+89], al
  0009b	88 43 5c	 mov	 BYTE PTR [ebx+92], al
  0009e	89 4b 60	 mov	 DWORD PTR [ebx+96], ecx
  000a1	89 4b 64	 mov	 DWORD PTR [ebx+100], ecx
  000a4	88 43 68	 mov	 BYTE PTR [ebx+104], al
  000a7	88 43 69	 mov	 BYTE PTR [ebx+105], al
  000aa	88 43 6c	 mov	 BYTE PTR [ebx+108], al
  000ad	89 4b 70	 mov	 DWORD PTR [ebx+112], ecx
  000b0	89 4b 74	 mov	 DWORD PTR [ebx+116], ecx
  000b3	88 43 78	 mov	 BYTE PTR [ebx+120], al
  000b6	88 43 79	 mov	 BYTE PTR [ebx+121], al
  000b9	88 43 7c	 mov	 BYTE PTR [ebx+124], al
  000bc	89 8b 80 00 00
	00		 mov	 DWORD PTR [ebx+128], ecx
  000c2	89 8b 84 00 00
	00		 mov	 DWORD PTR [ebx+132], ecx
  000c8	88 83 88 00 00
	00		 mov	 BYTE PTR [ebx+136], al
  000ce	88 83 89 00 00
	00		 mov	 BYTE PTR [ebx+137], al
  000d4	88 83 8c 00 00
	00		 mov	 BYTE PTR [ebx+140], al
  000da	89 8b 90 00 00
	00		 mov	 DWORD PTR [ebx+144], ecx
  000e0	89 8b 94 00 00
	00		 mov	 DWORD PTR [ebx+148], ecx
  000e6	88 83 98 00 00
	00		 mov	 BYTE PTR [ebx+152], al
  000ec	88 83 99 00 00
	00		 mov	 BYTE PTR [ebx+153], al
  000f2	88 83 9c 00 00
	00		 mov	 BYTE PTR [ebx+156], al
  000f8	89 8b a0 00 00
	00		 mov	 DWORD PTR [ebx+160], ecx
  000fe	89 8b a4 00 00
	00		 mov	 DWORD PTR [ebx+164], ecx
  00104	88 83 a8 00 00
	00		 mov	 BYTE PTR [ebx+168], al
  0010a	88 83 a9 00 00
	00		 mov	 BYTE PTR [ebx+169], al

; 1763 : 	}
; 1764 : 	// ----
; 1765 : 	this->AllowPK = false;

  00110	88 93 b0 00 00
	00		 mov	 BYTE PTR [ebx+176], dl

; 1766 : 	// ----
; 1767 : 	while(true)
; 1768 : 	{
; 1769 : 		Token = GetToken();

  00116	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1770 : 		// ----
; 1771 : 		if( Token == END )

  0011b	83 f8 02	 cmp	 eax, 2
  0011e	0f 84 6f 03 00
	00		 je	 $LN49@LoadData
$LL19@LoadData:

; 1772 : 		{
; 1773 : 			break;
; 1774 : 		}
; 1775 : 		// ----
; 1776 : 		Type = TokenNumber;

  00124	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0012a	e8 00 00 00 00	 call	 __ftol2_sse
  0012f	8b f0		 mov	 esi, eax
  00131	89 75 e8	 mov	 DWORD PTR _Type$[ebp], esi
$LL16@LoadData:

; 1777 : 		// ----
; 1778 : 		while(true)
; 1779 : 		{
; 1780 : 			if( Type == 0 )

  00134	85 f6		 test	 esi, esi
  00136	0f 85 40 01 00
	00		 jne	 $LN14@LoadData

; 1781 : 			{
; 1782 : 				Token = GetToken();

  0013c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1783 : 				// ----
; 1784 : 				if( !strcmp("end", TokenString) )

  00141	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00146	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0014b	eb 03 8d 49 00	 npad	 5
$LL62@LoadData:
  00150	8a 10		 mov	 dl, BYTE PTR [eax]
  00152	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00154	75 1a		 jne	 SHORT $LN63@LoadData
  00156	84 d2		 test	 dl, dl
  00158	74 12		 je	 SHORT $LN64@LoadData
  0015a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0015d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00160	75 0e		 jne	 SHORT $LN63@LoadData
  00162	83 c0 02	 add	 eax, 2
  00165	83 c1 02	 add	 ecx, 2
  00168	84 d2		 test	 dl, dl
  0016a	75 e4		 jne	 SHORT $LL62@LoadData
$LN64@LoadData:
  0016c	33 c0		 xor	 eax, eax
  0016e	eb 05		 jmp	 SHORT $LN65@LoadData
$LN63@LoadData:
  00170	1b c0		 sbb	 eax, eax
  00172	83 d8 ff	 sbb	 eax, -1
$LN65@LoadData:
  00175	85 c0		 test	 eax, eax
  00177	0f 84 05 03 00
	00		 je	 $LN45@LoadData

; 1785 : 				{
; 1786 : 					break;
; 1787 : 				}
; 1788 : 				// ----
; 1789 : 				StartContribution	= (int)TokenNumber;

  0017d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00183	e8 00 00 00 00	 call	 __ftol2_sse
  00188	a3 00 00 00 00	 mov	 DWORD PTR ?StartContribution@@3HA, eax ; StartContribution

; 1790 : 				// ----
; 1791 : 				Token				= GetToken();

  0018d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1792 : 				RequiredLevel		= (int)TokenNumber;

  00192	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00198	e8 00 00 00 00	 call	 __ftol2_sse
  0019d	a3 00 00 00 00	 mov	 DWORD PTR ?RequiredLevel@@3HA, eax ; RequiredLevel

; 1793 : 				// ----
; 1794 : 				Token				= GetToken();

  001a2	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1795 : 				RequiredReset		= (int)TokenNumber;

  001a7	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001ad	e8 00 00 00 00	 call	 __ftol2_sse
  001b2	a3 00 00 00 00	 mov	 DWORD PTR ?RequiredReset@@3HA, eax ; RequiredReset

; 1796 : 				// ----
; 1797 : 				Token						= GetToken();

  001b7	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1798 : 				this->GuildCreateReqGens	= (bool)TokenNumber;

  001bc	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001c2	d9 ee		 fldz
  001c4	da e9		 fucompp
  001c6	df e0		 fnstsw	 ax
  001c8	f6 c4 44	 test	 ah, 68			; 00000044H
  001cb	7b 04		 jnp	 SHORT $LN29@LoadData
  001cd	b0 01		 mov	 al, 1
  001cf	eb 02		 jmp	 SHORT $LN30@LoadData
$LN29@LoadData:
  001d1	32 c0		 xor	 al, al
$LN30@LoadData:
  001d3	88 83 ac 00 00
	00		 mov	 BYTE PTR [ebx+172], al

; 1799 : 				// ----
; 1800 : 				Token						= GetToken();

  001d9	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1801 : 				this->CheckGuildEnter		= (bool)TokenNumber;

  001de	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001e4	d9 ee		 fldz
  001e6	da e9		 fucompp
  001e8	df e0		 fnstsw	 ax
  001ea	f6 c4 44	 test	 ah, 68			; 00000044H
  001ed	7b 04		 jnp	 SHORT $LN31@LoadData
  001ef	b0 01		 mov	 al, 1
  001f1	eb 02		 jmp	 SHORT $LN32@LoadData
$LN31@LoadData:
  001f3	32 c0		 xor	 al, al
$LN32@LoadData:
  001f5	88 83 ad 00 00
	00		 mov	 BYTE PTR [ebx+173], al

; 1802 : 				// ----
; 1803 : 				Token						= GetToken();

  001fb	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1804 : 				this->CheckPartyEnter		= (bool)TokenNumber;

  00200	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00206	d9 ee		 fldz
  00208	da e9		 fucompp
  0020a	df e0		 fnstsw	 ax
  0020c	f6 c4 44	 test	 ah, 68			; 00000044H
  0020f	7b 04		 jnp	 SHORT $LN33@LoadData
  00211	b0 01		 mov	 al, 1
  00213	eb 02		 jmp	 SHORT $LN34@LoadData
$LN33@LoadData:
  00215	32 c0		 xor	 al, al
$LN34@LoadData:
  00217	88 83 ae 00 00
	00		 mov	 BYTE PTR [ebx+174], al

; 1805 : 				// ----
; 1806 : 				Token						= GetToken();

  0021d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1807 : 				this->CheckAllianceEnter	= (bool)TokenNumber;

  00222	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00228	d9 ee		 fldz
  0022a	da e9		 fucompp
  0022c	df e0		 fnstsw	 ax
  0022e	f6 c4 44	 test	 ah, 68			; 00000044H
  00231	7b 04		 jnp	 SHORT $LN35@LoadData
  00233	b0 01		 mov	 al, 1
  00235	eb 02		 jmp	 SHORT $LN36@LoadData
$LN35@LoadData:
  00237	32 c0		 xor	 al, al
$LN36@LoadData:
  00239	88 83 af 00 00
	00		 mov	 BYTE PTR [ebx+175], al

; 1808 : 				// ----
; 1809 : 				Token						= GetToken();

  0023f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1810 : 				this->AllowPK				= (bool)TokenNumber;

  00244	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0024a	d9 ee		 fldz
  0024c	da e9		 fucompp
  0024e	df e0		 fnstsw	 ax
  00250	f6 c4 44	 test	 ah, 68			; 00000044H
  00253	7b 04		 jnp	 SHORT $LN37@LoadData
  00255	b0 01		 mov	 al, 1
  00257	eb 02		 jmp	 SHORT $LN38@LoadData
$LN37@LoadData:
  00259	32 c0		 xor	 al, al
$LN38@LoadData:
  0025b	88 83 b0 00 00
	00		 mov	 BYTE PTR [ebx+176], al

; 1811 : 				// ----
; 1812 : 				Token						= GetToken();

  00261	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1813 : 				this->ChatPrice				= (int)TokenNumber;

  00266	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0026c	e8 00 00 00 00	 call	 __ftol2_sse
  00271	89 83 b4 00 00
	00		 mov	 DWORD PTR [ebx+180], eax
  00277	e9 b8 fe ff ff	 jmp	 $LL16@LoadData
$LN14@LoadData:

; 1814 : 			}
; 1815 : 			else if( Type == 1 ) //-> Battle Zone List

  0027c	83 fe 01	 cmp	 esi, 1
  0027f	75 76		 jne	 SHORT $LN11@LoadData

; 1816 : 			{
; 1817 : 				Token		= GetToken();

  00281	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1818 : 				// ----
; 1819 : 				if( !strcmp("end", TokenString) || ZoneCounter > MAX_BATTLE_ZONE )

  00286	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  0028b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL66@LoadData:
  00290	8a 10		 mov	 dl, BYTE PTR [eax]
  00292	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00294	75 1a		 jne	 SHORT $LN67@LoadData
  00296	84 d2		 test	 dl, dl
  00298	74 12		 je	 SHORT $LN68@LoadData
  0029a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0029d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  002a0	75 0e		 jne	 SHORT $LN67@LoadData
  002a2	83 c0 02	 add	 eax, 2
  002a5	83 c1 02	 add	 ecx, 2
  002a8	84 d2		 test	 dl, dl
  002aa	75 e4		 jne	 SHORT $LL66@LoadData
$LN68@LoadData:
  002ac	33 c0		 xor	 eax, eax
  002ae	eb 05		 jmp	 SHORT $LN69@LoadData
$LN67@LoadData:
  002b0	1b c0		 sbb	 eax, eax
  002b2	83 d8 ff	 sbb	 eax, -1
$LN69@LoadData:
  002b5	85 c0		 test	 eax, eax
  002b7	0f 84 c5 01 00
	00		 je	 $LN45@LoadData
  002bd	8b 4d f4	 mov	 ecx, DWORD PTR _ZoneCounter$[ebp]
  002c0	83 f9 0b	 cmp	 ecx, 11			; 0000000bH
  002c3	0f 8f b9 01 00
	00		 jg	 $LN45@LoadData

; 1820 : 				{
; 1821 : 					break;
; 1822 : 				}
; 1823 : 				// ----
; 1824 : 				this->BattleZoneList[ZoneCounter] = TokenNumber;

  002c9	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002cf	d9 7d fe	 fnstcw	 WORD PTR tv1399[ebp]
  002d2	0f b7 45 fe	 movzx	 eax, WORD PTR tv1399[ebp]
  002d6	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  002db	89 45 f4	 mov	 DWORD PTR tv1396[ebp], eax

; 1825 : 				ZoneCounter++;

  002de	41		 inc	 ecx
  002df	d9 6d f4	 fldcw	 WORD PTR tv1396[ebp]
  002e2	db 5d f4	 fistp	 DWORD PTR tv1394[ebp]
  002e5	8a 45 f4	 mov	 al, BYTE PTR tv1394[ebp]
  002e8	88 44 19 03	 mov	 BYTE PTR [ecx+ebx+3], al
  002ec	89 4d f4	 mov	 DWORD PTR _ZoneCounter$[ebp], ecx
  002ef	d9 6d fe	 fldcw	 WORD PTR tv1399[ebp]
  002f2	e9 3d fe ff ff	 jmp	 $LL16@LoadData
$LN11@LoadData:

; 1826 : 			}
; 1827 : 			else if( Type == 2 ) //-> Battle Map List

  002f7	83 fe 02	 cmp	 esi, 2
  002fa	75 78		 jne	 SHORT $LN7@LoadData

; 1828 : 			{
; 1829 : 				Token		= GetToken();

  002fc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1830 : 				// ----
; 1831 : 				if( !strcmp("end", TokenString) || MapCounter > MAX_BATTLE_ZONE )

  00301	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00306	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0030b	eb 03 8d 49 00	 npad	 5
$LL70@LoadData:
  00310	8a 10		 mov	 dl, BYTE PTR [eax]
  00312	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00314	75 1a		 jne	 SHORT $LN71@LoadData
  00316	84 d2		 test	 dl, dl
  00318	74 12		 je	 SHORT $LN72@LoadData
  0031a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0031d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00320	75 0e		 jne	 SHORT $LN71@LoadData
  00322	83 c0 02	 add	 eax, 2
  00325	83 c1 02	 add	 ecx, 2
  00328	84 d2		 test	 dl, dl
  0032a	75 e4		 jne	 SHORT $LL70@LoadData
$LN72@LoadData:
  0032c	33 c0		 xor	 eax, eax
  0032e	eb 05		 jmp	 SHORT $LN73@LoadData
$LN71@LoadData:
  00330	1b c0		 sbb	 eax, eax
  00332	83 d8 ff	 sbb	 eax, -1
$LN73@LoadData:
  00335	85 c0		 test	 eax, eax
  00337	0f 84 45 01 00
	00		 je	 $LN45@LoadData
  0033d	83 ff 0b	 cmp	 edi, 11			; 0000000bH
  00340	0f 8f 3c 01 00
	00		 jg	 $LN45@LoadData

; 1832 : 				{
; 1833 : 					break;
; 1834 : 				}
; 1835 : 				// ----
; 1836 : 				this->BattleMapList[MapCounter] = TokenNumber;

  00346	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0034c	d9 7d fe	 fnstcw	 WORD PTR tv1373[ebp]
  0034f	0f b7 45 fe	 movzx	 eax, WORD PTR tv1373[ebp]
  00353	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00358	89 45 f0	 mov	 DWORD PTR tv1370[ebp], eax

; 1837 : 				MapCounter++;

  0035b	47		 inc	 edi
  0035c	d9 6d f0	 fldcw	 WORD PTR tv1370[ebp]
  0035f	db 5d f0	 fistp	 DWORD PTR tv1368[ebp]
  00362	8a 4d f0	 mov	 cl, BYTE PTR tv1368[ebp]
  00365	88 4c 3b 0e	 mov	 BYTE PTR [ebx+edi+14], cl
  00369	89 7d f0	 mov	 DWORD PTR _MapCounter$[ebp], edi
  0036c	d9 6d fe	 fldcw	 WORD PTR tv1373[ebp]
  0036f	e9 c0 fd ff ff	 jmp	 $LL16@LoadData
$LN7@LoadData:

; 1838 : 			}
; 1839 : 			else if( Type == 3 ) //-> Reward Table

  00374	83 fe 03	 cmp	 esi, 3
  00377	0f 85 b7 fd ff
	ff		 jne	 $LL16@LoadData

; 1840 : 			{
; 1841 : 				BYTE RankID	= -1;
; 1842 : 				Token		= GetToken();

  0037d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1843 : 				// ----
; 1844 : 				if( !strcmp("end", TokenString) || RewardCounter > MAX_REWARD_TABLE )

  00382	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00387	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0038c	8d 64 24 00	 npad	 4
$LL74@LoadData:
  00390	8a 10		 mov	 dl, BYTE PTR [eax]
  00392	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00394	75 1a		 jne	 SHORT $LN75@LoadData
  00396	84 d2		 test	 dl, dl
  00398	74 12		 je	 SHORT $LN76@LoadData
  0039a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0039d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  003a0	75 0e		 jne	 SHORT $LN75@LoadData
  003a2	83 c0 02	 add	 eax, 2
  003a5	83 c1 02	 add	 ecx, 2
  003a8	84 d2		 test	 dl, dl
  003aa	75 e4		 jne	 SHORT $LL74@LoadData
$LN76@LoadData:
  003ac	33 c0		 xor	 eax, eax
  003ae	eb 05		 jmp	 SHORT $LN77@LoadData
$LN75@LoadData:
  003b0	1b c0		 sbb	 eax, eax
  003b2	83 d8 ff	 sbb	 eax, -1
$LN77@LoadData:
  003b5	85 c0		 test	 eax, eax
  003b7	0f 84 c5 00 00
	00		 je	 $LN45@LoadData
  003bd	83 7d f8 08	 cmp	 DWORD PTR _RewardCounter$[ebp], 8
  003c1	0f 8f bb 00 00
	00		 jg	 $LN45@LoadData

; 1845 : 				{
; 1846 : 					break;
; 1847 : 				}
; 1848 : 				// ----
; 1849 : 				RankID	= TokenNumber;

  003c7	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  003cd	d9 7d fe	 fnstcw	 WORD PTR tv1347[ebp]
  003d0	0f b7 45 fe	 movzx	 eax, WORD PTR tv1347[ebp]
  003d4	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  003d9	89 45 ec	 mov	 DWORD PTR tv1344[ebp], eax
  003dc	d9 6d ec	 fldcw	 WORD PTR tv1344[ebp]
  003df	db 5d ec	 fistp	 DWORD PTR tv1342[ebp]
  003e2	8a 45 ec	 mov	 al, BYTE PTR tv1342[ebp]

; 1850 : 				this->RewardTableList[RankID].Rank		= RankID;

  003e5	0f b6 f8	 movzx	 edi, al
  003e8	8b d7		 mov	 edx, edi
  003ea	d9 6d fe	 fldcw	 WORD PTR tv1347[ebp]
  003ed	c1 e2 04	 shl	 edx, 4
  003f0	8d 34 1a	 lea	 esi, DWORD PTR [edx+ebx]
  003f3	88 46 1c	 mov	 BYTE PTR [esi+28], al

; 1851 : 				// ----
; 1852 : 				Token	= GetToken();

  003f6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1853 : 				this->RewardTableList[RankID].ItemID	= TokenNumber;

  003fb	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00401	e8 00 00 00 00	 call	 __ftol2_sse
  00406	83 c7 02	 add	 edi, 2
  00409	03 ff		 add	 edi, edi
  0040b	89 04 fb	 mov	 DWORD PTR [ebx+edi*8], eax

; 1854 : 				// ----
; 1855 : 				Token	= GetToken();

  0040e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1856 : 				this->RewardTableList[RankID].ItemIndex	= TokenNumber;

  00413	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00419	e8 00 00 00 00	 call	 __ftol2_sse
  0041e	89 46 24	 mov	 DWORD PTR [esi+36], eax

; 1857 : 				// ----
; 1858 : 				Token	= GetToken();

  00421	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1859 : 				this->RewardTableList[RankID].ItemLevel	= TokenNumber;

  00426	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0042c	d9 7d fe	 fnstcw	 WORD PTR tv1329[ebp]
  0042f	0f b7 45 fe	 movzx	 eax, WORD PTR tv1329[ebp]
  00433	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00438	89 45 ec	 mov	 DWORD PTR tv1326[ebp], eax
  0043b	d9 6d ec	 fldcw	 WORD PTR tv1326[ebp]
  0043e	db 5d ec	 fistp	 DWORD PTR tv1324[ebp]
  00441	0f b6 45 ec	 movzx	 eax, BYTE PTR tv1324[ebp]
  00445	88 46 28	 mov	 BYTE PTR [esi+40], al
  00448	d9 6d fe	 fldcw	 WORD PTR tv1329[ebp]

; 1860 : 				// ----
; 1861 : 				Token	= GetToken();

  0044b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1862 : 				this->RewardTableList[RankID].ItemCount	= TokenNumber;
; 1863 : 				// ----
; 1864 : 				RewardCounter++;
; 1865 : 			}
; 1866 : 		}

  00450	8b 7d f0	 mov	 edi, DWORD PTR _MapCounter$[ebp]
  00453	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00459	d9 7d fe	 fnstcw	 WORD PTR tv1321[ebp]
  0045c	0f b7 45 fe	 movzx	 eax, WORD PTR tv1321[ebp]
  00460	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00465	ff 45 f8	 inc	 DWORD PTR _RewardCounter$[ebp]
  00468	89 45 ec	 mov	 DWORD PTR tv1318[ebp], eax
  0046b	d9 6d ec	 fldcw	 WORD PTR tv1318[ebp]
  0046e	db 5d ec	 fistp	 DWORD PTR tv1316[ebp]
  00471	8a 4d ec	 mov	 cl, BYTE PTR tv1316[ebp]
  00474	88 4e 29	 mov	 BYTE PTR [esi+41], cl
  00477	8b 75 e8	 mov	 esi, DWORD PTR _Type$[ebp]
  0047a	d9 6d fe	 fldcw	 WORD PTR tv1321[ebp]
  0047d	e9 b2 fc ff ff	 jmp	 $LL16@LoadData
$LN45@LoadData:

; 1766 : 	// ----
; 1767 : 	while(true)
; 1768 : 	{
; 1769 : 		Token = GetToken();

  00482	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 1770 : 		// ----
; 1771 : 		if( Token == END )

  00487	83 f8 02	 cmp	 eax, 2
  0048a	0f 85 94 fc ff
	ff		 jne	 $LL19@LoadData
  00490	8b 75 08	 mov	 esi, DWORD PTR _lpszFileName$[ebp]
$LN49@LoadData:

; 1867 : 	}
; 1868 : 	// ----
; 1869 : 	fclose(SMDFile);

  00493	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  00499	52		 push	 edx
  0049a	e8 00 00 00 00	 call	 _fclose

; 1870 : 	// ----
; 1871 : 	LogAdd("[GensSystem] %s file is loaded", lpszFileName);

  0049f	56		 push	 esi
  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@DMBIKMLF@?$FLGensSystem?$FN?5?$CFs?5file?5is?5loaded?$AA@
  004a5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  004ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  004ae	5f		 pop	 edi
  004af	5e		 pop	 esi

; 1872 : 	// ----
; 1873 : 	return true;

  004b0	b8 01 00 00 00	 mov	 eax, 1
  004b5	5b		 pop	 ebx

; 1874 : }

  004b6	8b e5		 mov	 esp, ebp
  004b8	5d		 pop	 ebp
  004b9	c2 04 00	 ret	 4
?LoadData@GensSystem@@QAEHPAD@Z ENDP			; GensSystem::LoadData
_TEXT	ENDS
PUBLIC	?ReqGensRewardDay@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqGensRewardDay
; Function compile flags: /Ogtp
;	COMDAT ?ReqGensRewardDay@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 8
_lpObj$ = 8						; size = 4
?ReqGensRewardDay@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::ReqGensRewardDay, COMDAT
; _this$ = ecx

; 1878 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1879 : 	PMSG_REQ_GENS_REWARD_DAY pMsg;
; 1880 : 
; 1881 : 	PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  00006	6a 08		 push	 8
  00008	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0000b	68 f8 00 00 00	 push	 248			; 000000f8H
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 1882 : 	pMsg.bRewardDay = 19;
; 1883 : 	pMsg.bIndexH = SET_NUMBERH(lpObj->m_Index);

  00016	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00019	8b 10		 mov	 edx, DWORD PTR [eax]

; 1884 : 	pMsg.bIndexL = SET_NUMBERL(lpObj->m_Index);

  0001b	8a 00		 mov	 al, BYTE PTR [eax]
  0001d	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00022	66 89 4d fc	 mov	 WORD PTR _pMsg$[ebp+4], cx

; 1885 : 
; 1886 : 	return wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00026	0f b6 4d f9	 movzx	 ecx, BYTE PTR _pMsg$[ebp+1]
  0002a	c1 ea 08	 shr	 edx, 8
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	88 55 fe	 mov	 BYTE PTR _pMsg$[ebp+6], dl
  00033	51		 push	 ecx
  00034	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00037	52		 push	 edx
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0003d	88 45 ff	 mov	 BYTE PTR _pMsg$[ebp+7], al
  00040	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 1887 : };

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?ReqGensRewardDay@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::ReqGensRewardDay
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDRewardReq@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::GDRewardReq
; Function compile flags: /Ogtp
;	COMDAT ?GDRewardReq@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GDRewardReq@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; GensSystem::GDRewardReq, COMDAT
; _this$ = ecx

; 2043 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00014	57		 push	 edi

; 2044 : 	PMSG_GENS_REWARD_REQ pMsg;
; 2045 : 	PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x08, sizeof(pMsg));

  00015	6a 14		 push	 20			; 00000014H
  00017	6a 08		 push	 8
  00019	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0001c	68 f8 00 00 00	 push	 248			; 000000f8H
  00021	50		 push	 eax
  00022	8b f9		 mov	 edi, ecx
  00024	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 2046 : 	// ----
; 2047 : 	memcpy(pMsg.Name, lpObj->Name, 10);

  00029	8b 4e 77	 mov	 ecx, DWORD PTR [esi+119]
  0002c	8b 56 7b	 mov	 edx, DWORD PTR [esi+123]
  0002f	66 8b 46 7f	 mov	 ax, WORD PTR [esi+127]
  00033	89 4d ec	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 2048 : 	pMsg.aIndex = lpObj->m_Index;

  00036	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 2049 : 	// ----
; 2050 : 	if( !gObjIsConnected(lpObj) )

  00038	56		 push	 esi
  00039	89 55 f0	 mov	 DWORD PTR _pMsg$[ebp+8], edx
  0003c	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+12], ax
  00040	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+16], ecx
  00043	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00048	83 c4 14	 add	 esp, 20			; 00000014H
  0004b	85 c0		 test	 eax, eax
  0004d	74 47		 je	 SHORT $LN4@GDRewardRe

; 2051 : 	{
; 2052 : 		return;
; 2053 : 	}
; 2054 : 	// ----
; 2055 : 	if( !this->IsRegGensInfluence(lpObj) || lpObj->m_GensClass > 8 )

  0004f	56		 push	 esi
  00050	8b cf		 mov	 ecx, edi
  00052	e8 00 00 00 00	 call	 ?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsRegGensInfluence
  00057	84 c0		 test	 al, al
  00059	74 2e		 je	 SHORT $LN1@GDRewardRe
  0005b	83 be f4 22 00
	00 08		 cmp	 DWORD PTR [esi+8948], 8
  00062	7f 25		 jg	 SHORT $LN1@GDRewardRe

; 2058 : 		return;
; 2059 : 	}
; 2060 : 	// ----
; 2061 : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00064	0f b6 55 e9	 movzx	 edx, BYTE PTR _pMsg$[ebp+1]
  00068	52		 push	 edx
  00069	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0006c	50		 push	 eax
  0006d	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00072	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi

; 2062 : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
$LN1@GDRewardRe:

; 2056 : 	{
; 2057 : 		gGensSystem.SendGensReward(lpObj, 2);

  00089	6a 02		 push	 2
  0008b	56		 push	 esi
  0008c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00091	e8 00 00 00 00	 call	 ?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z ; GensSystem::SendGensReward
$LN4@GDRewardRe:

; 2062 : }

  00096	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00099	5f		 pop	 edi
  0009a	33 cd		 xor	 ecx, ebp
  0009c	5e		 pop	 esi
  0009d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?GDRewardReq@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; GensSystem::GDRewardReq
_TEXT	ENDS
PUBLIC	??_C@_0DP@BBOHDMFM@?$FLGensSystem?$FN?5?$FLReward?$FN?5?$FL?$CFs?$FN?5?$FL?$CFs?$FN?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGRewardAns@GensSystem@@QAEXPAUPMSG_GENS_REWARD_ANS@@@Z ; GensSystem::DGRewardAns
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0DP@BBOHDMFM@?$FLGensSystem?$FN?5?$FLReward?$FN?5?$FL?$CFs?$FN?5?$FL?$CFs?$FN?5@
CONST	SEGMENT
??_C@_0DP@BBOHDMFM@?$FLGensSystem?$FN?5?$FLReward?$FN?5?$FL?$CFs?$FN?5?$FL?$CFs?$FN?5@ DB '['
	DB	'GensSystem] [Reward] [%s] [%s] Class: %d, Count: %d, Item: %d'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGRewardAns@GensSystem@@QAEXPAUPMSG_GENS_REWARD_ANS@@@Z
_TEXT	SEGMENT
_i$211676 = -24						; size = 4
_pMsg$ = -20						; size = 15
__$ArrayPad$ = -4					; size = 4
_aRecv$ = 8						; size = 4
?DGRewardAns@GensSystem@@QAEXPAUPMSG_GENS_REWARD_ANS@@@Z PROC ; GensSystem::DGRewardAns, COMDAT
; _this$ = ecx

; 2065 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b 7d 08	 mov	 edi, DWORD PTR _aRecv$[ebp]

; 2066 : 	//0 - Complete
; 2067 : 	//1 - Gens ranking rewards are given out in the first week of each month
; 2068 : 	//2 - Not eligible to reward
; 2069 : 	//3	- Not have space
; 2070 : 	// ----
; 2071 : 	LPOBJ lpObj = &gObj[aRecv->aIndex];

  00016	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00019	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0001f	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00025	8b d9		 mov	 ebx, ecx

; 2072 : 	// ----
; 2073 : 	if( !gObjIsConnected(lpObj) )

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  0002d	83 c4 04	 add	 esp, 4
  00030	85 c0		 test	 eax, eax
  00032	0f 84 0e 01 00
	00		 je	 $LN7@DGRewardAn

; 2074 : 	{
; 2075 : 		return;
; 2076 : 	}
; 2077 : 	// ----
; 2078 : 	if( !aRecv->Result )

  00038	80 7f 04 00	 cmp	 BYTE PTR [edi+4], 0
  0003c	75 07		 jne	 SHORT $LN5@DGRewardAn

; 2079 : 	{
; 2080 : 		gGensSystem.SendGensReward(lpObj, 1);

  0003e	6a 01		 push	 1

; 2081 : 		return;

  00040	e9 f6 00 00 00	 jmp	 $LN12@DGRewardAn
$LN5@DGRewardAn:

; 2082 : 	}
; 2083 : 	// ----
; 2084 : 	if( !GensRewardInventoryCheck(lpObj, this->RewardTableList[lpObj->m_GensClass].ItemCount) )

  00045	8b 86 f4 22 00
	00		 mov	 eax, DWORD PTR [esi+8948]
  0004b	03 c0		 add	 eax, eax
  0004d	0f b6 4c c3 29	 movzx	 ecx, BYTE PTR [ebx+eax*8+41]
  00052	51		 push	 ecx
  00053	56		 push	 esi
  00054	8b cb		 mov	 ecx, ebx
  00056	e8 00 00 00 00	 call	 ?GensRewardInventoryCheck@GensSystem@@QAE_NPAUOBJECTSTRUCT@@H@Z ; GensSystem::GensRewardInventoryCheck
  0005b	84 c0		 test	 al, al
  0005d	75 07		 jne	 SHORT $LN4@DGRewardAn

; 2085 : 	{
; 2086 : 		gGensSystem.SendGensReward(lpObj, 3);

  0005f	6a 03		 push	 3

; 2087 : 		return;

  00061	e9 d5 00 00 00	 jmp	 $LN12@DGRewardAn
$LN4@DGRewardAn:

; 2088 : 	}
; 2089 : 	// ----
; 2090 : 	int RewardItem = ITEMGET(this->RewardTableList[lpObj->m_GensClass].ItemID, this->RewardTableList[lpObj->m_GensClass].ItemIndex);

  00066	8b 86 f4 22 00
	00		 mov	 eax, DWORD PTR [esi+8948]
  0006c	8d 50 02	 lea	 edx, DWORD PTR [eax+2]
  0006f	03 d2		 add	 edx, edx
  00071	8b 3c d3	 mov	 edi, DWORD PTR [ebx+edx*8]
  00074	03 c0		 add	 eax, eax
  00076	c1 e7 09	 shl	 edi, 9
  00079	03 7c c3 24	 add	 edi, DWORD PTR [ebx+eax*8+36]

; 2091 : 	// ----
; 2092 : 	for( int i = 0; i < this->RewardTableList[lpObj->m_GensClass].ItemCount; i++ )

  0007d	8b 86 f4 22 00
	00		 mov	 eax, DWORD PTR [esi+8948]
  00083	c1 e0 04	 shl	 eax, 4
  00086	03 c3		 add	 eax, ebx
  00088	80 78 29 00	 cmp	 BYTE PTR [eax+41], 0
  0008c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$211676[ebp], 0
  00093	76 43		 jbe	 SHORT $LN1@DGRewardAn
$LL11@DGRewardAn:

; 2093 : 	{
; 2094 : 		ItemSerialCreateSend(lpObj->m_Index, 235, 0, 0, RewardItem, this->RewardTableList[lpObj->m_GensClass].ItemLevel, 0, 0, 0, 0, 0, 0, 0);

  00095	0f b6 48 28	 movzx	 ecx, BYTE PTR [eax+40]
  00099	6a 00		 push	 0
  0009b	8b 16		 mov	 edx, DWORD PTR [esi]
  0009d	6a 00		 push	 0
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	6a 00		 push	 0
  000a7	6a 00		 push	 0
  000a9	51		 push	 ecx
  000aa	57		 push	 edi
  000ab	6a 00		 push	 0
  000ad	6a 00		 push	 0
  000af	68 eb 00 00 00	 push	 235			; 000000ebH
  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  000ba	8b 86 f4 22 00
	00		 mov	 eax, DWORD PTR [esi+8948]
  000c0	8b 4d e8	 mov	 ecx, DWORD PTR _i$211676[ebp]
  000c3	c1 e0 04	 shl	 eax, 4
  000c6	0f b6 54 18 29	 movzx	 edx, BYTE PTR [eax+ebx+41]
  000cb	03 c3		 add	 eax, ebx
  000cd	41		 inc	 ecx
  000ce	83 c4 34	 add	 esp, 52			; 00000034H
  000d1	89 4d e8	 mov	 DWORD PTR _i$211676[ebp], ecx
  000d4	3b ca		 cmp	 ecx, edx
  000d6	7c bd		 jl	 SHORT $LL11@DGRewardAn
$LN1@DGRewardAn:

; 2095 : 	}
; 2096 : 	// ----
; 2097 : 	LogAddTD("[GensSystem] [Reward] [%s] [%s] Class: %d, Count: %d, Item: %d",
; 2098 : 		lpObj->AccountID, lpObj->Name, lpObj->m_GensClass, this->RewardTableList[lpObj->m_GensClass].ItemCount, RewardItem);

  000d8	8b 86 f4 22 00
	00		 mov	 eax, DWORD PTR [esi+8948]
  000de	8b d0		 mov	 edx, eax
  000e0	03 d2		 add	 edx, edx
  000e2	0f b6 54 d3 29	 movzx	 edx, BYTE PTR [ebx+edx*8+41]
  000e7	57		 push	 edi
  000e8	52		 push	 edx
  000e9	50		 push	 eax
  000ea	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  000ed	51		 push	 ecx
  000ee	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  000f1	50		 push	 eax
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@BBOHDMFM@?$FLGensSystem?$FN?5?$FLReward?$FN?5?$FL?$CFs?$FN?5?$FL?$CFs?$FN?5@
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2099 : 	// ----
; 2100 : 	PMSG_GENS_REWARD_SET pMsg;
; 2101 : 	PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x09, sizeof(pMsg));

  000fd	6a 0f		 push	 15			; 0000000fH
  000ff	6a 09		 push	 9
  00101	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00104	68 f8 00 00 00	 push	 248			; 000000f8H
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 2102 : 	// ----
; 2103 : 	memcpy(pMsg.Name, lpObj->Name, 10);

  0010f	8b 56 77	 mov	 edx, DWORD PTR [esi+119]
  00112	89 55 f0	 mov	 DWORD PTR _pMsg$[ebp+4], edx
  00115	8b 46 7b	 mov	 eax, DWORD PTR [esi+123]

; 2104 : 	// ----
; 2105 : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00118	0f b6 55 ed	 movzx	 edx, BYTE PTR _pMsg$[ebp+1]
  0011c	83 c4 28	 add	 esp, 40			; 00000028H
  0011f	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+8], eax
  00122	66 8b 4e 7f	 mov	 cx, WORD PTR [esi+127]
  00126	52		 push	 edx
  00127	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0012a	66 89 4d f8	 mov	 WORD PTR _pMsg$[ebp+12], cx
  0012e	50		 push	 eax
  0012f	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00134	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 2106 : 	gGensSystem.SendGensReward(lpObj, 0);

  00139	6a 00		 push	 0
$LN12@DGRewardAn:
  0013b	56		 push	 esi
  0013c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00141	e8 00 00 00 00	 call	 ?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z ; GensSystem::SendGensReward
$LN7@DGRewardAn:

; 2107 : }

  00146	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00149	5f		 pop	 edi
  0014a	5e		 pop	 esi
  0014b	33 cd		 xor	 ecx, ebp
  0014d	5b		 pop	 ebx
  0014e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?DGRewardAns@GensSystem@@QAEXPAUPMSG_GENS_REWARD_ANS@@@Z ENDP ; GensSystem::DGRewardAns
_TEXT	ENDS
PUBLIC	?CGReqGensMemberInfo@@YAXPAUPMSG_REQ_GENS_INFO@@H@Z ; CGReqGensMemberInfo
; Function compile flags: /Ogtp
;	COMDAT ?CGReqGensMemberInfo@@YAXPAUPMSG_REQ_GENS_INFO@@H@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iIndex$ = 12						; size = 4
?CGReqGensMemberInfo@@YAXPAUPMSG_REQ_GENS_INFO@@H@Z PROC ; CGReqGensMemberInfo, COMDAT

; 2113 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2114 : 	if (!OBJMAX_RANGE(iIndex)) return;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	78 45		 js	 SHORT $LN1@CGReqGensM
  0000a	33 c9		 xor	 ecx, ecx
  0000c	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00011	0f 9e c1	 setle	 cl
  00014	85 c9		 test	 ecx, ecx
  00016	74 37		 je	 SHORT $LN1@CGReqGensM

; 2115 : 
; 2116 : 	LPOBJ lpObj = &gObj[iIndex];

  00018	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0001e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00024	56		 push	 esi
  00025	8b f0		 mov	 esi, eax

; 2117 : 
; 2118 : 	if (gObjIsConnected(lpObj))

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  0002d	83 c4 04	 add	 esp, 4
  00030	85 c0		 test	 eax, eax
  00032	74 1a		 je	 SHORT $LN8@CGReqGensM

; 2119 : 	{
; 2120 : 		if (gGensSystem.IsRegGensInfluence(lpObj))

  00034	56		 push	 esi
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0003a	e8 00 00 00 00	 call	 ?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsRegGensInfluence
  0003f	84 c0		 test	 al, al
  00041	74 0b		 je	 SHORT $LN8@CGReqGensM

; 2121 : 		{
; 2122 : 			gGensSystem.ReqExDBGensInfo(lpObj);

  00043	56		 push	 esi
  00044	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00049	e8 00 00 00 00	 call	 ?ReqExDBGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqExDBGensInfo
$LN8@CGReqGensM:
  0004e	5e		 pop	 esi
$LN1@CGReqGensM:

; 2123 : 		}
; 2124 : 	}
; 2125 : }

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?CGReqGensMemberInfo@@YAXPAUPMSG_REQ_GENS_INFO@@H@Z ENDP ; CGReqGensMemberInfo
_TEXT	ENDS
PUBLIC	?DGAnsAbusingInfo@@YAXPAUPMSG_ANS_ABUSING_INFO@@@Z ; DGAnsAbusingInfo
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsAbusingInfo@@YAXPAUPMSG_ANS_ABUSING_INFO@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?DGAnsAbusingInfo@@YAXPAUPMSG_ANS_ABUSING_INFO@@@Z PROC	; DGAnsAbusingInfo, COMDAT

; 2323 : 	//int iObjIndex = MAKE_NUMBERW(lpMsg->bIndexH, lpMsg->bIndexL);
; 2324 : 
; 2325 : 	//LPOBJ lpObj = &gObj[iObjIndex];
; 2326 : 
; 2327 : 	//if (gObjIsConnectedGP(iObjIndex))
; 2328 : 	//{
; 2329 : 	//	for (int i = 0; i < 10; ++i)
; 2330 : 	//	{
; 2331 : 	//		if (strlen(lpMsg->Name) > 0)
; 2332 : 	//		{
; 2333 : 	//			//lpObj->m_szTargetCharName[0] = 0;
; 2334 : 	//			//memcpy(lpObj->m_szCharName, &lpMsg->Name[0], 0x0A);
; 2335 : 	//			//lpObj->m_KillUserCnt = lpMsg->iKillUserCount;
; 2336 : 	//			//++lpObj->m_KillUserTotCnt;
; 2337 : 	//		}
; 2338 : 	//	}
; 2339 : 	//}
; 2340 : 	//else
; 2341 : 	//{
; 2342 : 	//	LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);
; 2343 : 	//}
; 2344 : }

  00000	c3		 ret	 0
?DGAnsAbusingInfo@@YAXPAUPMSG_ANS_ABUSING_INFO@@@Z ENDP	; DGAnsAbusingInfo
_TEXT	ENDS
PUBLIC	?DGAnsGensMemberCount@@YAXPAUPMSG_ANS_GENS_MEMBER_COUNT_EXDB@@@Z ; DGAnsGensMemberCount
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsGensMemberCount@@YAXPAUPMSG_ANS_GENS_MEMBER_COUNT_EXDB@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?DGAnsGensMemberCount@@YAXPAUPMSG_ANS_GENS_MEMBER_COUNT_EXDB@@@Z PROC ; DGAnsGensMemberCount, COMDAT

; 2386 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2387 : 	gGensSystem.SetGensMemberCount(1, lpMsg->iVanertMemberCount);

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	50		 push	 eax
  0000b	6a 01		 push	 1
  0000d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00012	e8 00 00 00 00	 call	 ?SetGensMemberCount@GensSystem@@QAEHHH@Z ; GensSystem::SetGensMemberCount

; 2388 : 	gGensSystem.SetGensMemberCount(2, lpMsg->iDuprianMemberCount);

  00017	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0001a	51		 push	 ecx
  0001b	6a 02		 push	 2
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00022	e8 00 00 00 00	 call	 ?SetGensMemberCount@GensSystem@@QAEHHH@Z ; GensSystem::SetGensMemberCount
  00027	5e		 pop	 esi

; 2389 : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?DGAnsGensMemberCount@@YAXPAUPMSG_ANS_GENS_MEMBER_COUNT_EXDB@@@Z ENDP ; DGAnsGensMemberCount
_TEXT	ENDS
PUBLIC	??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@ ; `string'
PUBLIC	?DGAnsGensRewardDayCheck@@YAXPAUPMSG_ANS_GENS_REWARD_DAY_CHECK_EXDB@@@Z ; DGAnsGensRewardDayCheck
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?gObjIsConnectedGP@@YAHH@Z:PROC			; gObjIsConnectedGP
;	COMDAT ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@ DB 'error-L2 :'
	DB	' Index %s %d', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGAnsGensRewardDayCheck@@YAXPAUPMSG_ANS_GENS_REWARD_DAY_CHECK_EXDB@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?DGAnsGensRewardDayCheck@@YAXPAUPMSG_ANS_GENS_REWARD_DAY_CHECK_EXDB@@@Z PROC ; DGAnsGensRewardDayCheck, COMDAT

; 2393 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 2394 : 	int iObjIndex = MAKE_NUMBERW(lpMsg->bIndexH, lpMsg->bIndexL);

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]
  00008	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  0000c	0f b6 4f 05	 movzx	 ecx, BYTE PTR [edi+5]
  00010	66 c1 e0 08	 shl	 ax, 8
  00014	0f b7 f0	 movzx	 esi, ax
  00017	0b f1		 or	 esi, ecx

; 2395 : 
; 2396 : 	LPOBJ lpObj = &gObj[iObjIndex];
; 2397 : 
; 2398 : 	if (gObjIsConnectedGP(iObjIndex))

  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0001f	83 c4 04	 add	 esp, 4
  00022	85 c0		 test	 eax, eax
  00024	74 25		 je	 SHORT $LN3@DGAnsGensR

; 2399 : 	{
; 2400 : 		if (lpMsg->iRewardDay)

  00026	83 7f 08 00	 cmp	 DWORD PTR [edi+8], 0
  0002a	74 37		 je	 SHORT $LN1@DGAnsGensR

; 2401 : 		{
; 2402 : 			GCServerMsgStringSend(lMsg.Get(3459), iObjIndex, 1);

  0002c	6a 01		 push	 1
  0002e	56		 push	 esi
  0002f	68 83 0d 00 00	 push	 3459			; 00000d83H
  00034	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00039	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 2403 : 		}
; 2404 : 	}
; 2405 : 	else
; 2406 : 	{
; 2407 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi

; 2408 : 	}
; 2409 : }

  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
$LN3@DGAnsGensR:

; 2403 : 		}
; 2404 : 	}
; 2405 : 	else
; 2406 : 	{
; 2407 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  0004b	68 67 09 00 00	 push	 2407			; 00000967H
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@DGAnsGensR:
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi

; 2408 : 	}
; 2409 : }

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?DGAnsGensRewardDayCheck@@YAXPAUPMSG_ANS_GENS_REWARD_DAY_CHECK_EXDB@@@Z ENDP ; DGAnsGensRewardDayCheck
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GGensSystem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGensSystem@@UAEPAXI@Z PROC				; GensSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GensSystem@@UAE@XZ	; GensSystem::~GensSystem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GGensSystem@@UAEPAXI@Z ENDP				; GensSystem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?IsInfluenceNPC@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsInfluenceNPC
; Function compile flags: /Ogtp
;	COMDAT ?IsInfluenceNPC@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?IsInfluenceNPC@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::IsInfluenceNPC, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 179  : 	//Fixed 13.10.2012, TargetNumber -> TargetShopNumber
; 180  : 	//TargetNumber		= +1108
; 181  : 	//TargetShopNumber	= +1110
; 182  : 	//a1 + 1110
; 183  : 	return (lpObj->TargetShopNumber == 543 && this->GetGensInfluence(lpObj) == VANERT_INFLUENCE 
; 184  : 		    || lpObj->TargetShopNumber == 544 && this->GetGensInfluence(lpObj) == DUPRIAN_INFLUENCE); 

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	b8 1f 02 00 00	 mov	 eax, 543		; 0000021fH
  0000c	57		 push	 edi
  0000d	8b f9		 mov	 edi, ecx
  0000f	66 39 86 5a 04
	00 00		 cmp	 WORD PTR [esi+1114], ax
  00016	75 0b		 jne	 SHORT $LN3@IsInfluenc
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  0001e	83 f8 01	 cmp	 eax, 1
  00021	74 1b		 je	 SHORT $LN5@IsInfluenc
$LN3@IsInfluenc:
  00023	b9 20 02 00 00	 mov	 ecx, 544		; 00000220H
  00028	66 39 8e 5a 04
	00 00		 cmp	 WORD PTR [esi+1114], cx
  0002f	75 18		 jne	 SHORT $LN4@IsInfluenc
  00031	56		 push	 esi
  00032	8b cf		 mov	 ecx, edi
  00034	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00039	83 f8 02	 cmp	 eax, 2
  0003c	75 0b		 jne	 SHORT $LN4@IsInfluenc
$LN5@IsInfluenc:
  0003e	5f		 pop	 edi
  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	5e		 pop	 esi

; 185  : }

  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
$LN4@IsInfluenc:
  00049	5f		 pop	 edi

; 179  : 	//Fixed 13.10.2012, TargetNumber -> TargetShopNumber
; 180  : 	//TargetNumber		= +1108
; 181  : 	//TargetShopNumber	= +1110
; 182  : 	//a1 + 1110
; 183  : 	return (lpObj->TargetShopNumber == 543 && this->GetGensInfluence(lpObj) == VANERT_INFLUENCE 
; 184  : 		    || lpObj->TargetShopNumber == 544 && this->GetGensInfluence(lpObj) == DUPRIAN_INFLUENCE); 

  0004a	33 c0		 xor	 eax, eax
  0004c	5e		 pop	 esi

; 185  : }

  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?IsInfluenceNPC@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::IsInfluenceNPC
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::SendGensInfo
; Function compile flags: /Ogtp
;	COMDAT ?SendGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211049 = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?SendGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC	; GensSystem::SendGensInfo, COMDAT
; _this$ = ecx

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 220  : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
  00019	85 c0		 test	 eax, eax
  0001b	0f 88 96 00 00
	00		 js	 $LN1@SendGensIn
  00021	33 c9		 xor	 ecx, ecx
  00023	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00028	0f 9e c1	 setle	 cl
  0002b	8b c1		 mov	 eax, ecx
  0002d	85 c0		 test	 eax, eax

; 221  : 	 return 0;

  0002f	0f 84 82 00 00
	00		 je	 $LN1@SendGensIn

; 222  : 
; 223  : 	if (gObjIsConnected(lpObj))

  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  0003b	83 c4 04	 add	 esp, 4
  0003e	85 c0		 test	 eax, eax
  00040	74 75		 je	 SHORT $LN1@SendGensIn

; 224  : 	{
; 225  : 		PMSG_SEND_GENS_INFO pMsg;
; 226  : 
; 227  : 		PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x7, sizeof(pMsg));

  00042	6a 18		 push	 24			; 00000018H
  00044	6a 07		 push	 7
  00046	8d 55 e4	 lea	 edx, DWORD PTR _pMsg$211049[ebp]
  00049	68 f8 00 00 00	 push	 248			; 000000f8H
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  00054	83 c4 10	 add	 esp, 16			; 00000010H

; 228  : 		
; 229  : 		pMsg.bInfluence				= this->GetGensInfluence(lpObj);

  00057	56		 push	 esi
  00058	8b cf		 mov	 ecx, edi
  0005a	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence

; 230  : 		pMsg.iGensRanking			= lpObj->m_GensRanking;
; 231  : 		pMsg.iGensClass				= lpObj->m_GensClass;

  0005f	8b 8e f4 22 00
	00		 mov	 ecx, DWORD PTR [esi+8948]

; 232  : 		pMsg.iContributePoint		= lpObj->m_ContributePoint;

  00065	8b 96 ec 22 00
	00		 mov	 edx, DWORD PTR [esi+8940]
  0006b	88 45 e8	 mov	 BYTE PTR _pMsg$211049[ebp+4], al
  0006e	8b 86 f0 22 00
	00		 mov	 eax, DWORD PTR [esi+8944]
  00074	89 4d f0	 mov	 DWORD PTR _pMsg$211049[ebp+12], ecx

; 233  : 		pMsg.iNextContributePoint	= this->GetNextContributePoint(lpObj);

  00077	56		 push	 esi
  00078	8b cf		 mov	 ecx, edi
  0007a	89 45 ec	 mov	 DWORD PTR _pMsg$211049[ebp+8], eax
  0007d	89 55 f4	 mov	 DWORD PTR _pMsg$211049[ebp+16], edx
  00080	e8 00 00 00 00	 call	 ?GetNextContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetNextContributePoint

; 234  : 
; 235  : 		if (DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size))

  00085	8b 16		 mov	 edx, DWORD PTR [esi]
  00087	89 45 f8	 mov	 DWORD PTR _pMsg$211049[ebp+20], eax
  0008a	0f b6 45 e5	 movzx	 eax, BYTE PTR _pMsg$211049[ebp+1]
  0008e	50		 push	 eax
  0008f	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$211049[ebp]
  00092	51		 push	 ecx
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009c	85 c0		 test	 eax, eax
  0009e	74 17		 je	 SHORT $LN1@SendGensIn

; 236  : 			return true;

  000a0	5f		 pop	 edi
  000a1	b8 01 00 00 00	 mov	 eax, 1
  000a6	5e		 pop	 esi

; 237  : 	}
; 238  : 	return false;
; 239  : }

  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 04 00	 ret	 4
$LN1@SendGensIn:
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	5f		 pop	 edi
  000bb	33 cd		 xor	 ecx, ebp
  000bd	33 c0		 xor	 eax, eax
  000bf	5e		 pop	 esi
  000c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 04 00	 ret	 4
?SendGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP	; GensSystem::SendGensInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GDReqSaveContributePoint
; Function compile flags: /Ogtp
;	COMDAT ?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211072 = -32					; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GDReqSaveContributePoint, COMDAT
; _this$ = ecx

; 278  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 279  : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
  00019	85 c0		 test	 eax, eax
  0001b	0f 88 9b 00 00
	00		 js	 $LN1@GDReqSaveC
  00021	33 c9		 xor	 ecx, ecx
  00023	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00028	0f 9e c1	 setle	 cl
  0002b	8b c1		 mov	 eax, ecx
  0002d	85 c0		 test	 eax, eax

; 280  : 		return false;

  0002f	0f 84 87 00 00
	00		 je	 $LN1@GDReqSaveC

; 281  : 
; 282  : 	//if (gObjIsConnected(lpObj))
; 283  : 	//{
; 284  : 		if (this->IsRegGensInfluence(lpObj))

  00035	56		 push	 esi
  00036	8b cf		 mov	 ecx, edi
  00038	e8 00 00 00 00	 call	 ?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsRegGensInfluence
  0003d	84 c0		 test	 al, al
  0003f	74 7b		 je	 SHORT $LN1@GDReqSaveC

; 285  : 		{
; 286  : 			PMSG_REQ_SAVE_CONTRIBUTE_POINT_EXDB pMsg;
; 287  : 			// ----
; 288  : 			//PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));
; 289  : 			//pMsg.subcode			= 0x07;
; 290  : 			PHeadSubSetB((LPBYTE)&pMsg, 0xF8, 0x7, sizeof(pMsg));

  00041	6a 1c		 push	 28			; 0000001cH
  00043	6a 07		 push	 7
  00045	8d 55 e0	 lea	 edx, DWORD PTR _pMsg$211072[ebp]
  00048	68 f8 00 00 00	 push	 248			; 000000f8H
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 291  : 			// ----
; 292  : 			memcpy(pMsg.Name, lpObj->Name, 0x0A);

  00053	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  00056	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  00059	66 8b 56 7f	 mov	 dx, WORD PTR [esi+127]
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
  00060	89 45 e8	 mov	 DWORD PTR _pMsg$211072[ebp+8], eax

; 293  : 			pMsg.Index				= lpObj->m_Index;

  00063	8b 06		 mov	 eax, DWORD PTR [esi]
  00065	89 4d ec	 mov	 DWORD PTR _pMsg$211072[ebp+12], ecx

; 294  : 			pMsg.Influence			= this->GetGensInfluence(lpObj);

  00068	56		 push	 esi
  00069	8b cf		 mov	 ecx, edi
  0006b	66 89 55 f0	 mov	 WORD PTR _pMsg$211072[ebp+16], dx
  0006f	89 45 e4	 mov	 DWORD PTR _pMsg$211072[ebp+4], eax
  00072	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence

; 295  : 			pMsg.iContributePoint	= this->GetContributePoint(lpObj);

  00077	56		 push	 esi
  00078	8b cf		 mov	 ecx, edi
  0007a	88 45 f2	 mov	 BYTE PTR _pMsg$211072[ebp+18], al
  0007d	e8 00 00 00 00	 call	 ?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetContributePoint

; 296  : 			pMsg.iGensClass			= this->GetGensClass(lpObj);

  00082	56		 push	 esi
  00083	89 45 f4	 mov	 DWORD PTR _pMsg$211072[ebp+20], eax
  00086	e8 00 00 00 00	 call	 ?GetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensClass

; 297  : 			// ----
; 298  : 			//if( wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size) )
; 299  : 			if( cDBSMng.Send((char*)&pMsg, pMsg.h.size) )

  0008b	0f b6 4d e1	 movzx	 ecx, BYTE PTR _pMsg$211072[ebp+1]
  0008f	51		 push	 ecx
  00090	8d 55 e0	 lea	 edx, DWORD PTR _pMsg$211072[ebp]
  00093	52		 push	 edx
  00094	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00099	89 45 f8	 mov	 DWORD PTR _pMsg$211072[ebp+24], eax
  0009c	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  000a1	85 c0		 test	 eax, eax
  000a3	74 17		 je	 SHORT $LN1@GDReqSaveC

; 300  : 			{
; 301  : 				return true;

  000a5	5f		 pop	 edi
  000a6	b8 01 00 00 00	 mov	 eax, 1
  000ab	5e		 pop	 esi

; 302  : 			}
; 303  : 		}
; 304  : 	//}
; 305  : 	return false;
; 306  : }

  000ac	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000af	33 cd		 xor	 ecx, ebp
  000b1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
$LN1@GDReqSaveC:
  000bc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bf	5f		 pop	 edi
  000c0	33 cd		 xor	 ecx, ebp
  000c2	33 c0		 xor	 eax, eax
  000c4	5e		 pop	 esi
  000c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 04 00	 ret	 4
?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GDReqSaveContributePoint
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DBSaveAbusingKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::DBSaveAbusingKillUserName
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	?criti@@3U_RTL_CRITICAL_SECTION@@A:BYTE		; criti
; Function compile flags: /Ogtp
;	COMDAT ?DBSaveAbusingKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$211083 = -172					; size = 168
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?DBSaveAbusingKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::DBSaveAbusingKillUserName, COMDAT
; _this$ = ecx

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 315  : 	if (!OBJMAX_RANGE(lpObj->m_Index))

  00017	8b 06		 mov	 eax, DWORD PTR [esi]
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	85 c0		 test	 eax, eax
  0001e	0f 88 c9 01 00
	00		 js	 $LN1@DBSaveAbus
  00024	33 c9		 xor	 ecx, ecx
  00026	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0002b	0f 9e c1	 setle	 cl
  0002e	8b c1		 mov	 eax, ecx
  00030	85 c0		 test	 eax, eax

; 316  : 		return false;

  00032	0f 84 b5 01 00
	00		 je	 $LN1@DBSaveAbus

; 317  : 
; 318  : 	if (gObjIsConnected(lpObj))

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  0003e	83 c4 04	 add	 esp, 4
  00041	85 c0		 test	 eax, eax
  00043	0f 84 a4 01 00
	00		 je	 $LN1@DBSaveAbus

; 319  : 	{
; 320  : 		if (this->IsRegGensInfluence(lpObj))

  00049	56		 push	 esi
  0004a	8b cf		 mov	 ecx, edi
  0004c	e8 00 00 00 00	 call	 ?IsRegGensInfluence@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsRegGensInfluence
  00051	84 c0		 test	 al, al
  00053	0f 84 94 01 00
	00		 je	 $LN1@DBSaveAbus

; 321  : 		{
; 322  : 			EnterCriticalSection(&criti);

  00059	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 323  : 
; 324  : 			PMSG_REQ_SAVE_ABUSING_KILLUSER_EXDB pMsg;
; 325  : 
; 326  : 			pMsg.bResult = 0;
; 327  : 
; 328  : 			for (int i = 0; i < 10; ++i)
; 329  : 			{
; 330  : 			 pMsg.KillName[i * 11] = 0;
; 331  : 
; 332  : 				pMsg.KillCount[i] = lpObj->m_KillUserCnt;
; 333  : 
; 334  : 				memcpy(&pMsg.KillName[i * 11], lpObj->Name, 0x0A); 

  00064	8b 56 77	 mov	 edx, DWORD PTR [esi+119]
  00067	0f b7 4e 7f	 movzx	 ecx, WORD PTR [esi+127]
  0006b	89 95 6f ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+27], edx
  00071	89 95 7a ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+38], edx
  00077	89 55 85	 mov	 DWORD PTR _pMsg$211083[ebp+49], edx
  0007a	0f b7 56 7f	 movzx	 edx, WORD PTR [esi+127]
  0007e	66 89 8d 77 ff
	ff ff		 mov	 WORD PTR _pMsg$211083[ebp+35], cx
  00085	0f b7 4e 7f	 movzx	 ecx, WORD PTR [esi+127]
  00089	66 89 55 8d	 mov	 WORD PTR _pMsg$211083[ebp+57], dx
  0008d	8b 56 7b	 mov	 edx, DWORD PTR [esi+123]
  00090	89 55 94	 mov	 DWORD PTR _pMsg$211083[ebp+64], edx
  00093	8b 56 77	 mov	 edx, DWORD PTR [esi+119]
  00096	66 89 4d 82	 mov	 WORD PTR _pMsg$211083[ebp+46], cx
  0009a	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  0009d	89 55 9b	 mov	 DWORD PTR _pMsg$211083[ebp+71], edx
  000a0	0f b7 56 7f	 movzx	 edx, WORD PTR [esi+127]
  000a4	89 4d 89	 mov	 DWORD PTR _pMsg$211083[ebp+53], ecx
  000a7	8b 4e 77	 mov	 ecx, DWORD PTR [esi+119]
  000aa	8b 46 7b	 mov	 eax, DWORD PTR [esi+123]
  000ad	89 4d 90	 mov	 DWORD PTR _pMsg$211083[ebp+60], ecx
  000b0	0f b7 4e 7f	 movzx	 ecx, WORD PTR [esi+127]
  000b4	66 89 55 a3	 mov	 WORD PTR _pMsg$211083[ebp+79], dx
  000b8	8b 56 7b	 mov	 edx, DWORD PTR [esi+123]
  000bb	89 55 aa	 mov	 DWORD PTR _pMsg$211083[ebp+86], edx
  000be	8b 56 77	 mov	 edx, DWORD PTR [esi+119]
  000c1	66 89 4d 98	 mov	 WORD PTR _pMsg$211083[ebp+68], cx
  000c5	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  000c8	89 55 b1	 mov	 DWORD PTR _pMsg$211083[ebp+93], edx
  000cb	0f b7 56 7f	 movzx	 edx, WORD PTR [esi+127]
  000cf	89 4d 9f	 mov	 DWORD PTR _pMsg$211083[ebp+75], ecx
  000d2	8b 4e 77	 mov	 ecx, DWORD PTR [esi+119]
  000d5	89 4d a6	 mov	 DWORD PTR _pMsg$211083[ebp+82], ecx
  000d8	0f b7 4e 7f	 movzx	 ecx, WORD PTR [esi+127]
  000dc	66 89 55 b9	 mov	 WORD PTR _pMsg$211083[ebp+101], dx
  000e0	8b 56 7b	 mov	 edx, DWORD PTR [esi+123]
  000e3	89 55 c0	 mov	 DWORD PTR _pMsg$211083[ebp+108], edx
  000e6	8b 56 77	 mov	 edx, DWORD PTR [esi+119]
  000e9	66 89 4d ae	 mov	 WORD PTR _pMsg$211083[ebp+90], cx
  000ed	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  000f0	89 55 c7	 mov	 DWORD PTR _pMsg$211083[ebp+115], edx
  000f3	0f b7 56 7f	 movzx	 edx, WORD PTR [esi+127]
  000f7	89 4d b5	 mov	 DWORD PTR _pMsg$211083[ebp+97], ecx
  000fa	8b 4e 77	 mov	 ecx, DWORD PTR [esi+119]
  000fd	89 4d bc	 mov	 DWORD PTR _pMsg$211083[ebp+104], ecx
  00100	0f b7 4e 7f	 movzx	 ecx, WORD PTR [esi+127]
  00104	66 89 55 cf	 mov	 WORD PTR _pMsg$211083[ebp+123], dx
  00108	0f b7 56 7f	 movzx	 edx, WORD PTR [esi+127]
  0010c	89 85 73 ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+31], eax
  00112	89 85 7e ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+42], eax
  00118	8b 86 e0 22 00
	00		 mov	 eax, DWORD PTR [esi+8928]
  0011e	89 45 dc	 mov	 DWORD PTR _pMsg$211083[ebp+136], eax
  00121	89 45 e0	 mov	 DWORD PTR _pMsg$211083[ebp+140], eax
  00124	89 45 e4	 mov	 DWORD PTR _pMsg$211083[ebp+144], eax
  00127	89 45 e8	 mov	 DWORD PTR _pMsg$211083[ebp+148], eax
  0012a	89 45 ec	 mov	 DWORD PTR _pMsg$211083[ebp+152], eax
  0012d	89 45 f0	 mov	 DWORD PTR _pMsg$211083[ebp+156], eax
  00130	66 89 4d c4	 mov	 WORD PTR _pMsg$211083[ebp+112], cx
  00134	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  00137	89 45 f4	 mov	 DWORD PTR _pMsg$211083[ebp+160], eax
  0013a	89 45 f8	 mov	 DWORD PTR _pMsg$211083[ebp+164], eax
  0013d	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  00140	66 89 55 da	 mov	 WORD PTR _pMsg$211083[ebp+134], dx

; 335  : 			}
; 336  : 
; 337  : 			memcpy(pMsg.AccountID, lpObj->AccountID, 0x0A);

  00144	0f b7 56 74	 movzx	 edx, WORD PTR [esi+116]
  00148	89 4d cb	 mov	 DWORD PTR _pMsg$211083[ebp+119], ecx
  0014b	89 45 d2	 mov	 DWORD PTR _pMsg$211083[ebp+126], eax
  0014e	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
  00151	89 4d d6	 mov	 DWORD PTR _pMsg$211083[ebp+130], ecx
  00154	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00157	66 89 95 5f ff
	ff ff		 mov	 WORD PTR _pMsg$211083[ebp+11], dx

; 338  : 			
; 339  : 			memcpy(pMsg.Name, lpObj->Name, 0x0A);

  0015e	0f b7 56 7f	 movzx	 edx, WORD PTR [esi+127]
  00162	89 85 57 ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+3], eax
  00168	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  0016b	89 8d 5b ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+7], ecx
  00171	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  00174	c6 85 64 ff ff
	ff 00		 mov	 BYTE PTR _pMsg$211083[ebp+16], 0
  0017b	89 85 65 ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+17], eax
  00181	89 8d 69 ff ff
	ff		 mov	 DWORD PTR _pMsg$211083[ebp+21], ecx
  00187	66 89 95 6d ff
	ff ff		 mov	 WORD PTR _pMsg$211083[ebp+25], dx

; 340  : 
; 341  : 			PHeadSetB((LPBYTE)&pMsg, 0xF8, sizeof(pMsg));

  0018e	68 a8 00 00 00	 push	 168			; 000000a8H
  00193	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _pMsg$211083[ebp]
  00199	68 f8 00 00 00	 push	 248			; 000000f8H
  0019e	50		 push	 eax
  0019f	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  001a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 342  : 
; 343  : 			pMsg.bResult = 8;
; 344  : 
; 345  : 			LeaveCriticalSection(&criti);

  001a7	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  001ac	c6 85 64 ff ff
	ff 08		 mov	 BYTE PTR _pMsg$211083[ebp+16], 8
  001b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 346  : 			
; 347  : 			if (wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size))

  001b9	0f b6 8d 55 ff
	ff ff		 movzx	 ecx, BYTE PTR _pMsg$211083[ebp+1]
  001c0	51		 push	 ecx
  001c1	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR _pMsg$211083[ebp]
  001c7	52		 push	 edx
  001c8	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  001cd	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  001d2	85 c0		 test	 eax, eax
  001d4	74 17		 je	 SHORT $LN1@DBSaveAbus

; 348  : 				return true;

  001d6	5f		 pop	 edi
  001d7	b8 01 00 00 00	 mov	 eax, 1
  001dc	5e		 pop	 esi

; 349  : 		}
; 350  : 	}
; 351  : 	return false;
; 352  : }

  001dd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e0	33 cd		 xor	 ecx, ebp
  001e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e7	8b e5		 mov	 esp, ebp
  001e9	5d		 pop	 ebp
  001ea	c2 04 00	 ret	 4
$LN1@DBSaveAbus:
  001ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f0	5f		 pop	 edi
  001f1	33 cd		 xor	 ecx, ebp
  001f3	33 c0		 xor	 eax, eax
  001f5	5e		 pop	 esi
  001f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c2 04 00	 ret	 4
?DBSaveAbusingKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::DBSaveAbusingKillUserName
_TEXT	ENDS
PUBLIC	?BattleZoneChatMsgSend@GensSystem@@QAEXPAUOBJECTSTRUCT@@PAEH@Z ; GensSystem::BattleZoneChatMsgSend
; Function compile flags: /Ogtp
;	COMDAT ?BattleZoneChatMsgSend@GensSystem@@QAEXPAUOBJECTSTRUCT@@PAEH@Z
_TEXT	SEGMENT
_iInfluence$211098 = 8					; size = 4
_obj$ = 8						; size = 4
_Msg$ = 12						; size = 4
_size$ = 16						; size = 4
?BattleZoneChatMsgSend@GensSystem@@QAEXPAUOBJECTSTRUCT@@PAEH@Z PROC ; GensSystem::BattleZoneChatMsgSend, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 361  : 	if( this->IsMapBattleZone(obj->MapNumber) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  00007	0f b6 86 49 01
	00 00		 movzx	 eax, BYTE PTR [esi+329]
  0000e	57		 push	 edi
  0000f	50		 push	 eax
  00010	8b f9		 mov	 edi, ecx
  00012	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  00017	85 c0		 test	 eax, eax
  00019	74 58		 je	 SHORT $LN3@BattleZone

; 362  : 	{
; 363  : 		int iInfluence = this->GetGensInfluence(obj);

  0001b	53		 push	 ebx
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00022	89 45 08	 mov	 DWORD PTR _iInfluence$211098[ebp], eax
  00025	81 c6 ae 08 00
	00		 add	 esi, 2222		; 000008aeH
  0002b	bb 4b 00 00 00	 mov	 ebx, 75			; 0000004bH
$LL5@BattleZone:

; 366  : 		{
; 367  : 			if( obj->VpPlayer2[n].type == OBJ_USER && obj->VpPlayer2[n].state == PLAYER_CONNECTED )

  00030	80 7e 02 01	 cmp	 BYTE PTR [esi+2], 1
  00034	75 36		 jne	 SHORT $LN4@BattleZone
  00036	80 7e fe 01	 cmp	 BYTE PTR [esi-2], 1
  0003a	75 30		 jne	 SHORT $LN4@BattleZone

; 368  : 			{
; 369  : 				if( this->GetGensInfluence(&gObj[obj->VpPlayer2[n].number]) == iInfluence )

  0003c	0f bf 0e	 movsx	 ecx, WORD PTR [esi]
  0003f	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00045	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004b	51		 push	 ecx
  0004c	8b cf		 mov	 ecx, edi
  0004e	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00053	3b 45 08	 cmp	 eax, DWORD PTR _iInfluence$211098[ebp]
  00056	75 14		 jne	 SHORT $LN4@BattleZone

; 370  : 				{
; 371  : 					DataSend(obj->VpPlayer2[n].number, Msg, size);

  00058	8b 55 10	 mov	 edx, DWORD PTR _size$[ebp]
  0005b	8b 45 0c	 mov	 eax, DWORD PTR _Msg$[ebp]
  0005e	0f bf 0e	 movsx	 ecx, WORD PTR [esi]
  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@BattleZone:

; 364  : 		// -----
; 365  : 		for( int n = 0; n < 75; n++ )

  0006c	83 c6 0c	 add	 esi, 12			; 0000000cH
  0006f	4b		 dec	 ebx
  00070	75 be		 jne	 SHORT $LL5@BattleZone
  00072	5b		 pop	 ebx
$LN3@BattleZone:
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi

; 372  : 				}
; 373  : 			}
; 374  : 		}
; 375  : 	}
; 376  : }

  00075	5d		 pop	 ebp
  00076	c2 0c 00	 ret	 12			; 0000000cH
?BattleZoneChatMsgSend@GensSystem@@QAEXPAUOBJECTSTRUCT@@PAEH@Z ENDP ; GensSystem::BattleZoneChatMsgSend
_TEXT	ENDS
PUBLIC	?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::GensViewportListProtocol
EXTRN	?PHeadSubSetW@@YAXPAEEEH@Z:PROC			; PHeadSubSetW
EXTRN	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjSearchActiveEffect
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; GensSystem::GensViewportListProtocol, COMDAT
; _this$ = ecx

; 422  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 423  : 	unsigned char btInfluence;
; 424  : 
; 425  : 	int iGensCount = 0;
; 426  : 	
; 427  : 	int iViewportSize = 0x06;
; 428  : 
; 429  : 	memset(&lpViewportAdd, 0, MAX_VIEWPORT_INFO);

  00005	68 fd 07 00 00	 push	 2045			; 000007fdH
  0000a	6a 00		 push	 0
  0000c	68 00 00 00 00	 push	 OFFSET ?lpViewportAdd@@3PAEA ; lpViewportAdd
  00011	8b f9		 mov	 edi, ecx
  00013	e8 00 00 00 00	 call	 _memset

; 430  : 
; 431  : 	if ( gObjSearchActiveEffect(lpObj, AT_INVISIBILITY) != 1 )

  00018	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	6a 12		 push	 18			; 00000012H
  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00023	83 c4 14	 add	 esp, 20			; 00000014H
  00026	3c 01		 cmp	 al, 1
  00028	0f 84 cf 00 00
	00		 je	 $LN6@GensViewpo

; 432  : 		//(lpObj->Authority & 32) != 32 || 
; 433  : 	{
; 434  : 		pGensMsg.btInfluence		= this->GetGensInfluence(lpObj);

  0002e	53		 push	 ebx
  0002f	56		 push	 esi
  00030	8b cf		 mov	 ecx, edi
  00032	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00037	a2 00 00 00 00	 mov	 BYTE PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A, al

; 435  : 		btInfluence					= pGensMsg.btInfluence;
; 436  : 		pGensMsg.NumberH			= HIBYTE(lpObj->m_Index);

  0003c	8a 46 01	 mov	 al, BYTE PTR [esi+1]
  0003f	a2 01 00 00 00	 mov	 BYTE PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A+1, al

; 437  : 		pGensMsg.NumberL			= LOBYTE(lpObj->m_Index);

  00044	8a 0e		 mov	 cl, BYTE PTR [esi]
  00046	88 0d 02 00 00
	00		 mov	 BYTE PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A+2, cl

; 438  : 		pGensMsg.iGensRanking		= lpObj->m_GensRanking;

  0004c	8b 96 f0 22 00
	00		 mov	 edx, DWORD PTR [esi+8944]

; 439  : 		pGensMsg.iGensClass			= this->GetGensClass(lpObj);

  00052	56		 push	 esi
  00053	8b cf		 mov	 ecx, edi
  00055	89 15 04 00 00
	00		 mov	 DWORD PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A+4, edx
  0005b	e8 00 00 00 00	 call	 ?GetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensClass
  00060	8b d8		 mov	 ebx, eax

; 440  : 		pGensMsg.iContributePoint	= this->GetContributePoint(lpObj);

  00062	56		 push	 esi
  00063	89 1d 08 00 00
	00		 mov	 DWORD PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A+8, ebx
  00069	e8 00 00 00 00	 call	 ?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetContributePoint

; 441  : 		// ----
; 442  : 		memcpy((BYTE*)lpViewportAdd + iViewportSize, &pGensMsg, 16);

  0006e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A

; 443  : 		// ----
; 444  : 		iViewportSize				+= 16; 
; 445  : 		++iGensCount;
; 446  : 		// ----
; 447  : 		PHeadSubSetW((LPBYTE)&pGensCount, 0xF8, 0x05, iViewportSize); 	

  00074	6a 16		 push	 22			; 00000016H
  00076	6a 05		 push	 5
  00078	68 f8 00 00 00	 push	 248			; 000000f8H
  0007d	68 00 00 00 00	 push	 OFFSET ?pGensCount@@3UPMSG_SEND_GENS_MEMBER_VIEWPORT@@A ; pGensCount
  00082	a3 0c 00 00 00	 mov	 DWORD PTR ?pGensMsg@@3UPMSG_GENS_MEMBER_VIEWPORT_INFO@@A+12, eax
  00087	89 0d 06 00 00
	00		 mov	 DWORD PTR ?lpViewportAdd@@3PAEA+6, ecx
  0008d	89 15 0a 00 00
	00		 mov	 DWORD PTR ?lpViewportAdd@@3PAEA+10, edx
  00093	89 1d 0e 00 00
	00		 mov	 DWORD PTR ?lpViewportAdd@@3PAEA+14, ebx
  00099	a3 12 00 00 00	 mov	 DWORD PTR ?lpViewportAdd@@3PAEA+18, eax
  0009e	e8 00 00 00 00	 call	 ?PHeadSubSetW@@YAXPAEEEH@Z ; PHeadSubSetW

; 448  : 		pGensCount.Count = iGensCount;
; 449  : 		memcpy((BYTE*)lpViewportAdd, &pGensCount, 6);

  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pGensCount@@3UPMSG_SEND_GENS_MEMBER_VIEWPORT@@A
  000a9	83 c4 10	 add	 esp, 16			; 00000010H
  000ac	c6 05 05 00 00
	00 01		 mov	 BYTE PTR ?pGensCount@@3UPMSG_SEND_GENS_MEMBER_VIEWPORT@@A+5, 1
  000b3	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ?pGensCount@@3UPMSG_SEND_GENS_MEMBER_VIEWPORT@@A+4
  000b9	89 15 00 00 00
	00		 mov	 DWORD PTR ?lpViewportAdd@@3PAEA, edx
  000bf	66 a3 04 00 00
	00		 mov	 WORD PTR ?lpViewportAdd@@3PAEA+4, ax
  000c5	81 c6 28 05 00
	00		 add	 esi, 1320		; 00000528H
  000cb	bf 4b 00 00 00	 mov	 edi, 75			; 0000004bH
  000d0	5b		 pop	 ebx
$LL8@GensViewpo:

; 452  : 		{
; 453  : 			if (lpObj->VpPlayer[n].type == OBJ_USER)

  000d1	80 7e 04 01	 cmp	 BYTE PTR [esi+4], 1
  000d5	75 20		 jne	 SHORT $LN7@GensViewpo

; 454  : 			{
; 455  : 				switch (lpObj->VpPlayer[n].state)

  000d7	8a 06		 mov	 al, BYTE PTR [esi]
  000d9	fe c8		 dec	 al
  000db	3c 02		 cmp	 al, 2
  000dd	77 18		 ja	 SHORT $LN7@GensViewpo

; 456  : 				{
; 457  : 				case 1:
; 458  : 				case 2:
; 459  : 				case 3:
; 460  : 					{
; 461  : 				 	int tObjNum = lpObj->VpPlayer[n].number;

  000df	0f bf 46 02	 movsx	 eax, WORD PTR [esi+2]

; 462  : 
; 463  : 					 if (tObjNum > 0)

  000e3	85 c0		 test	 eax, eax
  000e5	7e 10		 jle	 SHORT $LN7@GensViewpo

; 464  : 					 {
; 465  : 			  		DataSend(tObjNum, (LPBYTE)&lpViewportAdd, iViewportSize);

  000e7	6a 16		 push	 22			; 00000016H
  000e9	68 00 00 00 00	 push	 OFFSET ?lpViewportAdd@@3PAEA ; lpViewportAdd
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000f4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@GensViewpo:

; 450  : 
; 451  : 		for (int n = 0; n < MAX_VIEWPORT; ++n)

  000f7	83 c6 0c	 add	 esi, 12			; 0000000cH
  000fa	4f		 dec	 edi
  000fb	75 d4		 jne	 SHORT $LL8@GensViewpo
$LN6@GensViewpo:
  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi

; 466  : 				 	}				
; 467  : 					}
; 468  : 					break;
; 469  : 				}
; 470  : 			}
; 471  : 		}
; 472  : 	}
; 473  : }

  000ff	5d		 pop	 ebp
  00100	c2 04 00	 ret	 4
?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; GensSystem::GensViewportListProtocol
_TEXT	ENDS
PUBLIC	?IsPkEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@0@Z ; GensSystem::IsPkEnable
; Function compile flags: /Ogtp
;	COMDAT ?IsPkEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
?IsPkEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@0@Z PROC	; GensSystem::IsPkEnable, COMDAT
; _this$ = ecx

; 581  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 582  : 	if( this->IsMapBattleZone(lpObj->MapNumber) )

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00008	0f b6 87 49 01
	00 00		 movzx	 eax, BYTE PTR [edi+329]
  0000f	50		 push	 eax
  00010	8b f1		 mov	 esi, ecx
  00012	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  00017	85 c0		 test	 eax, eax

; 583  : 	{
; 584  : 		if( lpObj->Type != 1 || lpTargetObj->Type != 1 )

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	74 2a		 je	 SHORT $LN5@IsPkEnable
  00020	53		 push	 ebx
  00021	8b 5d 0c	 mov	 ebx, DWORD PTR _lpTargetObj$[ebp]
  00024	66 39 47 68	 cmp	 WORD PTR [edi+104], ax
  00028	75 06		 jne	 SHORT $LN2@IsPkEnable
  0002a	66 39 43 68	 cmp	 WORD PTR [ebx+104], ax

; 587  : 		}
; 588  : 		else
; 589  : 		{
; 590  : 			return true;

  0002e	74 19		 je	 SHORT $LN7@IsPkEnable
$LN2@IsPkEnable:

; 585  : 		{
; 586  : 			return this->GetGensInfluence(lpObj) != this->GetGensInfluence(lpTargetObj);

  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00036	53		 push	 ebx
  00037	8b ce		 mov	 ecx, esi
  00039	8b f8		 mov	 edi, eax
  0003b	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00040	33 c9		 xor	 ecx, ecx
  00042	3b f8		 cmp	 edi, eax
  00044	0f 95 c1	 setne	 cl
  00047	8b c1		 mov	 eax, ecx
$LN7@IsPkEnable:
  00049	5b		 pop	 ebx
$LN5@IsPkEnable:
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi

; 591  : 		}
; 592  : 	}
; 593  : 	return true;
; 594  : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?IsPkEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@0@Z ENDP	; GensSystem::IsPkEnable
_TEXT	ENDS
PUBLIC	?AddContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::AddContributePoint
; Function compile flags: /Ogtp
;	COMDAT ?AddContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iContributePoint$ = 12					; size = 4
?AddContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::AddContributePoint, COMDAT
; _this$ = ecx

; 724  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 725  : 	lpObj->m_ContributePoint += iContributePoint;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR _iContributePoint$[ebp]
  00009	01 90 ec 22 00
	00		 add	 DWORD PTR [eax+8940], edx

; 726  : 	return this->GDReqSaveContributePoint(lpObj);

  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GDReqSaveContributePoint

; 727  : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?AddContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::AddContributePoint
_TEXT	ENDS
PUBLIC	?SubContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SubContributePoint
; Function compile flags: /Ogtp
;	COMDAT ?SubContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iContributePoint$ = 12					; size = 4
?SubContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::SubContributePoint, COMDAT
; _this$ = ecx

; 735  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 736  : 	lpObj->m_ContributePoint -= iContributePoint;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR _iContributePoint$[ebp]
  00009	29 90 ec 22 00
	00		 sub	 DWORD PTR [eax+8940], edx

; 737  : 
; 738  : 	if (lpObj->m_ContributePoint < 0)

  0000f	79 0a		 jns	 SHORT $LN1@SubContrib

; 739  : 	{
; 740  : 		lpObj->m_ContributePoint = 0;

  00011	c7 80 ec 22 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+8940], 0
$LN1@SubContrib:

; 741  : 	}
; 742  : 
; 743  : 	return this->GDReqSaveContributePoint(lpObj);

  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GDReqSaveContributePoint

; 744  : }

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?SubContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::SubContributePoint
_TEXT	ENDS
PUBLIC	?AbusingPenalty@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::AbusingPenalty
; Function compile flags: /Ogtp
;	COMDAT ?AbusingPenalty@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iKillUserIndex$ = 12					; size = 4
?AbusingPenalty@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::AbusingPenalty, COMDAT
; _this$ = ecx

; 1086 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 1087 : 	int iKillUserCnt = lpObj->m_KillUserCnt;

  00005	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00008	8b 86 e0 22 00
	00		 mov	 eax, DWORD PTR [esi+8928]
  0000e	57		 push	 edi

; 1088 : 
; 1089 : 	int bDBSave = 0;

  0000f	33 ff		 xor	 edi, edi
  00011	8b d9		 mov	 ebx, ecx

; 1090 : 
; 1091 : 	if (lpObj->m_ContributePoint > 0)

  00013	39 be ec 22 00
	00		 cmp	 DWORD PTR [esi+8940], edi
  00019	7e 05		 jle	 SHORT $LN12@AbusingPen

; 1092 : 	{
; 1093 : 		bDBSave = 1;

  0001b	bf 01 00 00 00	 mov	 edi, 1
$LN12@AbusingPen:

; 1094 : 	}
; 1095 : 
; 1096 : 	if (iKillUserCnt >= 3)

  00020	83 f8 03	 cmp	 eax, 3
  00023	7c 22		 jl	 SHORT $LN1@AbusingPen

; 1097 : 	{
; 1098 : 		if (iKillUserCnt < 3 || iKillUserCnt > 5)

  00025	83 f8 05	 cmp	 eax, 5
  00028	7f 26		 jg	 SHORT $LN5@AbusingPen

; 1117 : 			}
; 1118 : 			return true;
; 1119 : 		}
; 1120 : 		else
; 1121 : 		{
; 1122 : 			GCServerMsgStringSend(lMsg.Get(3449), lpObj->m_Index, 1);

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	6a 01		 push	 1
  0002e	50		 push	 eax
  0002f	68 79 0d 00 00	 push	 3449			; 00000d79H
  00034	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00039	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@AbusingPen:

; 1123 : 			return false;
; 1124 : 		}
; 1125 : 	}
; 1126 : 	return false;

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	33 c0		 xor	 eax, eax
  0004b	5b		 pop	 ebx

; 1127 : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
$LN5@AbusingPen:

; 1099 : 		{
; 1100 : 			if (iKillUserCnt >= 6)

  00050	83 f8 06	 cmp	 eax, 6
  00053	7c 1d		 jl	 SHORT $LN4@AbusingPen

; 1101 : 			{
; 1102 : 				GCServerMsgStringSend(lMsg.Get(3450), lpObj->m_Index, 1);

  00055	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00057	6a 01		 push	 1
  00059	51		 push	 ecx
  0005a	68 7a 0d 00 00	 push	 3450			; 00000d7aH
  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00064	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@AbusingPen:

; 1103 : 			}
; 1104 : 
; 1105 : 			EnterCriticalSection((LPCRITICAL_SECTION)&criti);

  00072	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 1106 : 		
; 1107 : 			if (lpObj->m_KillUserCnt < 0)

  0007d	83 be e0 22 00
	00 00		 cmp	 DWORD PTR [esi+8928], 0
  00084	7d 0a		 jge	 SHORT $LN3@AbusingPen

; 1108 : 			{
; 1109 : 				lpObj->m_KillUserCnt = 0;

  00086	c7 86 e0 22 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+8928], 0
$LN3@AbusingPen:

; 1110 : 			}
; 1111 : 		
; 1112 : 			LeaveCriticalSection((LPCRITICAL_SECTION)&criti);

  00090	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 1113 : 
; 1114 : 			if (bDBSave)

  0009b	85 ff		 test	 edi, edi
  0009d	74 08		 je	 SHORT $LN2@AbusingPen

; 1115 : 			{
; 1116 : 				this->GDReqSaveContributePoint(lpObj);	return true;

  0009f	56		 push	 esi
  000a0	8b cb		 mov	 ecx, ebx
  000a2	e8 00 00 00 00	 call	 ?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GDReqSaveContributePoint
$LN2@AbusingPen:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	b8 01 00 00 00	 mov	 eax, 1
  000ae	5b		 pop	 ebx

; 1127 : }

  000af	5d		 pop	 ebp
  000b0	c2 08 00	 ret	 8
?AbusingPenalty@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::AbusingPenalty
_TEXT	ENDS
PUBLIC	?SendGensRewardItem@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SendGensRewardItem
; Function compile flags: /Ogtp
;	COMDAT ?SendGensRewardItem@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iGensClass$ = 12					; size = 4
?SendGensRewardItem@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; GensSystem::SendGensRewardItem, COMDAT
; _this$ = ecx

; 1612 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1613 : 	int iIndex = lpObj->m_Index;
; 1614 : 
; 1615 : 	int iItemCount = iGensClass - 1;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iGensClass$[ebp]
  00006	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00009	53		 push	 ebx
  0000a	8b 1a		 mov	 ebx, DWORD PTR [edx]
  0000c	48		 dec	 eax
  0000d	56		 push	 esi

; 1616 : 
; 1617 : 	if (iItemCount - 1 >= 0)

  0000e	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  00011	85 f6		 test	 esi, esi
  00013	78 6d		 js	 SHORT $LN7@SendGensRe@2

; 1618 : 	{
; 1619 : 		iItemCount = this->iIndex * iItemCount + 5;

  00015	8b b1 c8 00 00
	00		 mov	 esi, DWORD PTR [ecx+200]
  0001b	0f af f0	 imul	 esi, eax
  0001e	83 c6 05	 add	 esi, 5

; 1620 : 		
; 1621 : 		if (iItemCount > 0)

  00021	85 f6		 test	 esi, esi
  00023	7e 5d		 jle	 SHORT $LN7@SendGensRe@2

; 1622 : 		{
; 1623 : 			int iItemNumber = ((this->iIndex * iItemCount + 4) + (this->iIndex * iItemCount + 3)) << 9; 

  00025	57		 push	 edi
  00026	8b b9 c8 00 00
	00		 mov	 edi, DWORD PTR [ecx+200]
  0002c	0f af fe	 imul	 edi, esi

; 1624 : 		
; 1625 : 			if (this->GensRewardInventoryCheck(lpObj, iItemCount))

  0002f	56		 push	 esi
  00030	c1 e7 0a	 shl	 edi, 10			; 0000000aH
  00033	52		 push	 edx
  00034	81 c7 00 0e 00
	00		 add	 edi, 3584		; 00000e00H
  0003a	e8 00 00 00 00	 call	 ?GensRewardInventoryCheck@GensSystem@@QAE_NPAUOBJECTSTRUCT@@H@Z ; GensSystem::GensRewardInventoryCheck
  0003f	84 c0		 test	 al, al
  00041	74 36		 je	 SHORT $LN6@SendGensRe@2

; 1626 : 			{
; 1627 : 				for (int i = 0; i < iItemCount; ++i)

  00043	85 f6		 test	 esi, esi
  00045	7e 26		 jle	 SHORT $LN3@SendGensRe@2
$LL13@SendGensRe@2:

; 1628 : 				{
; 1629 : 					ItemSerialCreateSend(iIndex, 240, 0, 0, iItemNumber, 0, 0, 0, 0, 0, 0, 0, 0);

  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	6a 00		 push	 0
  0004d	6a 00		 push	 0
  0004f	6a 00		 push	 0
  00051	6a 00		 push	 0
  00053	6a 00		 push	 0
  00055	6a 00		 push	 0
  00057	57		 push	 edi
  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	68 f0 00 00 00	 push	 240			; 000000f0H
  00061	53		 push	 ebx
  00062	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  00067	83 c4 34	 add	 esp, 52			; 00000034H
  0006a	4e		 dec	 esi
  0006b	75 da		 jne	 SHORT $LL13@SendGensRe@2
$LN3@SendGensRe@2:
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi

; 1630 : 				}
; 1631 : 				return true;

  0006f	b8 01 00 00 00	 mov	 eax, 1
  00074	5b		 pop	 ebx

; 1641 : 		}
; 1642 : 	}
; 1643 : 	return false;
; 1644 : }

  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN6@SendGensRe@2:
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi

; 1632 : 			}
; 1633 : 			else
; 1634 : 			{
; 1635 : 				return false;

  0007b	33 c0		 xor	 eax, eax
  0007d	5b		 pop	 ebx

; 1641 : 		}
; 1642 : 	}
; 1643 : 	return false;
; 1644 : }

  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
$LN7@SendGensRe@2:
  00082	5e		 pop	 esi

; 1636 : 			}
; 1637 : 		}
; 1638 : 		else
; 1639 : 		{
; 1640 : 			return false;

  00083	33 c0		 xor	 eax, eax
  00085	5b		 pop	 ebx

; 1641 : 		}
; 1642 : 	}
; 1643 : 	return false;
; 1644 : }

  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
?SendGensRewardItem@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; GensSystem::SendGensRewardItem
_TEXT	ENDS
PUBLIC	?CGReqGensReward@@YAXPAUPMSG_GENS_REWARD_CODE@@H@Z ; CGReqGensReward
; Function compile flags: /Ogtp
;	COMDAT ?CGReqGensReward@@YAXPAUPMSG_GENS_REWARD_CODE@@H@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iIndex$ = 12						; size = 4
?CGReqGensReward@@YAXPAUPMSG_GENS_REWARD_CODE@@H@Z PROC	; CGReqGensReward, COMDAT

; 2028 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2029 : 	if (!OBJMAX_RANGE(iIndex))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	78 36		 js	 SHORT $LN1@CGReqGensR
  0000a	33 c9		 xor	 ecx, ecx
  0000c	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00011	0f 9e c1	 setle	 cl
  00014	85 c9		 test	 ecx, ecx
  00016	74 28		 je	 SHORT $LN1@CGReqGensR

; 2030 : 		return;
; 2031 : 
; 2032 : 	LPOBJ lpObj = &gObj[iIndex];

  00018	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0001e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00024	56		 push	 esi
  00025	8b f0		 mov	 esi, eax

; 2033 : 
; 2034 : 	if (gObjIsConnected(lpObj))

  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  0002d	83 c4 04	 add	 esp, 4
  00030	85 c0		 test	 eax, eax
  00032	74 0b		 je	 SHORT $LN7@CGReqGensR

; 2035 : 	{
; 2036 : 		//gGensSystem.ReqExDBGensRewardCheck(lpObj, lpMsg->bReward);
; 2037 : 		gGensSystem.GDRewardReq(lpObj);

  00034	56		 push	 esi
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0003a	e8 00 00 00 00	 call	 ?GDRewardReq@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::GDRewardReq
$LN7@CGReqGensR:
  0003f	5e		 pop	 esi
$LN1@CGReqGensR:

; 2038 : 	}
; 2039 : }

  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?CGReqGensReward@@YAXPAUPMSG_GENS_REWARD_CODE@@H@Z ENDP	; CGReqGensReward
_TEXT	ENDS
PUBLIC	?DGAnsGensInfo@@YAXPAUPMSG_ANS_GENS_INFO_EXDB@@@Z ; DGAnsGensInfo
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsGensInfo@@YAXPAUPMSG_ANS_GENS_INFO_EXDB@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?DGAnsGensInfo@@YAXPAUPMSG_ANS_GENS_INFO_EXDB@@@Z PROC	; DGAnsGensInfo, COMDAT

; 2137 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 2138 : 	int iObjIndex = MAKE_NUMBERW(lpMsg->wIndexH, lpMsg->wIndexL);

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]
  00008	0f b6 47 06	 movzx	 eax, BYTE PTR [edi+6]
  0000c	0f b6 4f 08	 movzx	 ecx, BYTE PTR [edi+8]
  00010	66 c1 e0 08	 shl	 ax, 8
  00014	0f b7 c0	 movzx	 eax, ax
  00017	0b c1		 or	 eax, ecx

; 2139 : 
; 2140 : 	LPOBJ lpObj = &gObj[iObjIndex];

  00019	8b f0		 mov	 esi, eax
  0001b	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00021	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 2141 : 
; 2142 : 	if (gObjIsConnectedGP(iObjIndex))

  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0002d	83 c4 04	 add	 esp, 4
  00030	85 c0		 test	 eax, eax
  00032	0f 84 ec 00 00
	00		 je	 $LN2@DGAnsGensI

; 2143 : 	{
; 2144 : 		if (!lpMsg->iGensClass)

  00038	83 7f 10 00	 cmp	 DWORD PTR [edi+16], 0
  0003c	75 1c		 jne	 SHORT $LN6@DGAnsGensI

; 2145 : 		{
; 2146 : 			gGensSystem.SetUserBattleZoneEnable(lpObj, BATTLE_ZONE_BLOCK);

  0003e	6a 00		 push	 0
  00040	56		 push	 esi
  00041	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00046	e8 00 00 00 00	 call	 ?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetUserBattleZoneEnable

; 2147 : 			//gGensSystem.SetGensInfluence(lpObj, NONE_INFLUENCE);
; 2148 : 			//-> Becoz it one more error in log only =/
; 2149 : 			gGensSystem.SetContributePoint(lpObj, 0);

  0004b	6a 00		 push	 0
  0004d	56		 push	 esi
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00053	e8 00 00 00 00	 call	 ?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetContributePoint

; 2150 : 		}
; 2151 : 		else

  00058	eb 6f		 jmp	 SHORT $LN5@DGAnsGensI
$LN6@DGAnsGensI:

; 2152 : 		{
; 2153 : 			if (lpMsg->bInfluence != LEAVED_INFLUENCE && lpMsg->bInfluence)

  0005a	8a 47 04	 mov	 al, BYTE PTR [edi+4]
  0005d	0f b6 d0	 movzx	 edx, al
  00060	83 fa ff	 cmp	 edx, -1
  00063	74 11		 je	 SHORT $LN4@DGAnsGensI
  00065	84 c0		 test	 al, al
  00067	74 0d		 je	 SHORT $LN4@DGAnsGensI

; 2154 : 			{
; 2155 : 				gGensSystem.SetUserBattleZoneEnable(lpObj, BATTLE_ZONE_UNBLOCK);

  00069	6a 01		 push	 1
  0006b	56		 push	 esi
  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00071	e8 00 00 00 00	 call	 ?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetUserBattleZoneEnable
$LN4@DGAnsGensI:

; 2156 : 			}
; 2157 : 
; 2158 : 			gGensSystem.SetGensInfluence(lpObj, lpMsg->bInfluence);

  00076	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  0007a	50		 push	 eax
  0007b	56		 push	 esi
  0007c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00081	e8 00 00 00 00	 call	 ?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensInfluence

; 2159 : 			gGensSystem.SetContributePoint(lpObj, lpMsg->iContributePoint);

  00086	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00089	51		 push	 ecx
  0008a	56		 push	 esi
  0008b	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00090	e8 00 00 00 00	 call	 ?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetContributePoint

; 2160 : 			gGensSystem.SetGensRanking(lpObj, lpMsg->iGensRanking);

  00095	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00098	52		 push	 edx
  00099	56		 push	 esi
  0009a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0009f	e8 00 00 00 00	 call	 ?SetGensRanking@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensRanking

; 2161 : 			gGensSystem.SetGensClass(lpObj, lpMsg->iGensClass);

  000a4	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  000a7	50		 push	 eax
  000a8	56		 push	 esi
  000a9	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000ae	e8 00 00 00 00	 call	 ?SetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensClass

; 2162 : 			gGensSystem.GensViewportListProtocol(lpObj);

  000b3	56		 push	 esi
  000b4	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000b9	e8 00 00 00 00	 call	 ?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::GensViewportListProtocol

; 2163 : 			gGensSystem.CalGensClass(lpObj);

  000be	56		 push	 esi
  000bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000c4	e8 00 00 00 00	 call	 ?CalGensClass@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::CalGensClass
$LN5@DGAnsGensI:

; 2164 : 		}
; 2165 : 
; 2166 : 		//LogAddTD("[GensSystem] Get DB GensInfo [%s][%s] GensName [%s]", lpObj->AccountID, lpObj->Name, gGensSystem.GetGensInfluenceName(lpObj));
; 2167 : 
; 2168 : 		gGensSystem.SendGensInfo(lpObj);

  000c9	56		 push	 esi
  000ca	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000cf	e8 00 00 00 00	 call	 ?SendGensInfo@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::SendGensInfo

; 2169 : 
; 2170 : 		if (gGensSystem.IsMapBattleZone(lpObj->MapNumber))

  000d4	0f b6 8e 49 01
	00 00		 movzx	 ecx, BYTE PTR [esi+329]
  000db	51		 push	 ecx
  000dc	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000e1	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  000e6	85 c0		 test	 eax, eax
  000e8	74 3a		 je	 SHORT $LN2@DGAnsGensI

; 2171 : 		{
; 2172 : 			if (!gGensSystem.IsUserBattleZoneEnable(lpObj))

  000ea	56		 push	 esi
  000eb	e8 00 00 00 00	 call	 ?IsUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::IsUserBattleZoneEnable
  000f0	85 c0		 test	 eax, eax
  000f2	75 30		 jne	 SHORT $LN2@DGAnsGensI

; 2173 : 			{
; 2174 : 			 gObjTeleport(lpObj->m_Index, 0, 140, 125);

  000f4	8b 16		 mov	 edx, DWORD PTR [esi]
  000f6	6a 7d		 push	 125			; 0000007dH
  000f8	68 8c 00 00 00	 push	 140			; 0000008cH
  000fd	50		 push	 eax
  000fe	52		 push	 edx
  000ff	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport

; 2175 : 			 GCServerMsgStringSend(lMsg.Get(3451), lpObj->m_Index, 1);

  00104	8b 06		 mov	 eax, DWORD PTR [esi]
  00106	83 c4 10	 add	 esp, 16			; 00000010H
  00109	6a 01		 push	 1
  0010b	50		 push	 eax
  0010c	68 7b 0d 00 00	 push	 3451			; 00000d7bH
  00111	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00116	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00121	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@DGAnsGensI:
  00124	5f		 pop	 edi
  00125	5e		 pop	 esi

; 2176 : 			}
; 2177 : 		}
; 2178 : 	}
; 2179 : 	else
; 2180 : 	{
; 2181 : 		//LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);
; 2182 : 	}
; 2183 : }

  00126	5d		 pop	 ebp
  00127	c3		 ret	 0
?DGAnsGensInfo@@YAXPAUPMSG_ANS_GENS_INFO_EXDB@@@Z ENDP	; DGAnsGensInfo
_TEXT	ENDS
PUBLIC	??_C@_0DP@CKCPKGKP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0EB@BOBHACGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0FG@BLNLLNJD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0FB@GPJMBNBA@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0DI@NMHNBHFP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0EF@NLAJMBCF@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0EB@ODPICHHE@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ ; `string'
PUBLIC	??_C@_0CP@NKBBANCP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@ ; `string'
PUBLIC	?DGAnsRegGensMember@@YAXPAUPMSG_ANS_REG_GENS_MEMBER_EXDB@@@Z ; DGAnsRegGensMember
EXTRN	?PHeadSubSetBE@@YAXPAEEEH@Z:PROC		; PHeadSubSetBE
;	COMDAT ??_C@_0DP@CKCPKGKP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0DP@CKCPKGKP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Union GuildMaster'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BOBHACGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0EB@BOBHACGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Already Partymemb'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@BLNLLNJD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0FG@BLNLLNJD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Not Register Guil'
	DB	'd Leader GuildName [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@GPJMBNBA@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0FB@GPJMBNBA@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Gens be Different'
	DB	' Guild Leader [%s]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@NMHNBHFP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0DI@NMHNBHFP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Below 50Lv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@NLAJMBCF@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0EF@NLAJMBCF@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Below Gens leavin'
	DB	'g Time', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@ODPICHHE@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
CONST	SEGMENT
??_C@_0EB@ODPICHHE@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@ DB '['
	DB	'GensSystem] [%s][%s] Gens Joining Failed to Gens be Same : [%'
	DB	's]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NKBBANCP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@
CONST	SEGMENT
??_C@_0CP@NKBBANCP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@ DB '['
	DB	'GensSystem] [%s][%s] Gens Request - Join [%s]', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGAnsRegGensMember@@YAXPAUPMSG_ANS_REG_GENS_MEMBER_EXDB@@@Z
_TEXT	SEGMENT
_pMsg$211716 = -8					; size = 6
_lpMsg$ = 8						; size = 4
?DGAnsRegGensMember@@YAXPAUPMSG_ANS_REG_GENS_MEMBER_EXDB@@@Z PROC ; DGAnsRegGensMember, COMDAT

; 2187 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	57		 push	 edi

; 2188 : 	int iObjIndex = MAKE_NUMBERW(lpMsg->bIndexH, lpMsg->bIndexL);
; 2189 : 
; 2190 : 	LPOBJ lpObj = &gObj[iObjIndex];

  00008	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]
  0000b	0f b6 47 06	 movzx	 eax, BYTE PTR [edi+6]
  0000f	0f b6 4f 07	 movzx	 ecx, BYTE PTR [edi+7]
  00013	66 c1 e0 08	 shl	 ax, 8
  00017	0f b7 f0	 movzx	 esi, ax
  0001a	0b f1		 or	 esi, ecx
  0001c	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00022	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 2191 : 
; 2192 : 	if (gObjIsConnectedGP(lpObj->m_Index))

  00028	8b 16		 mov	 edx, DWORD PTR [esi]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00030	83 c4 04	 add	 esp, 4
  00033	85 c0		 test	 eax, eax
  00035	0f 84 a7 01 00
	00		 je	 $LN14@DGAnsRegGe

; 2193 : 	{
; 2194 : 		PMSG_ANS_REG_GENS_MEBMER pMsg;
; 2195 : 
; 2196 : 		if (!lpMsg->bResult)

  0003b	80 7f 04 00	 cmp	 BYTE PTR [edi+4], 0
  0003f	75 4f		 jne	 SHORT $LN13@DGAnsRegGe

; 2197 : 		{
; 2198 : 			lpObj->m_GensClass = 14; //-> For fix error with Influence[0] becoz Class = NONE

  00041	c7 86 f4 22 00
	00 0e 00 00 00	 mov	 DWORD PTR [esi+8948], 14 ; 0000000eH

; 2199 : 			// ----
; 2200 : 			gGensSystem.SetGensInfluence(lpObj, lpMsg->bInfluence);

  0004b	0f b6 47 05	 movzx	 eax, BYTE PTR [edi+5]
  0004f	50		 push	 eax
  00050	56		 push	 esi
  00051	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00056	e8 00 00 00 00	 call	 ?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensInfluence

; 2201 : 			gGensSystem.SetUserBattleZoneEnable(lpObj, BATTLE_ZONE_UNBLOCK);

  0005b	6a 01		 push	 1
  0005d	56		 push	 esi
  0005e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00063	e8 00 00 00 00	 call	 ?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetUserBattleZoneEnable

; 2202 : 			gGensSystem.GensViewportListProtocol(lpObj);

  00068	56		 push	 esi
  00069	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0006e	e8 00 00 00 00	 call	 ?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::GensViewportListProtocol

; 2203 : 			gGensSystem.SetContributePoint(lpObj, StartContribution);

  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?StartContribution@@3HA ; StartContribution
  00079	51		 push	 ecx
  0007a	56		 push	 esi
  0007b	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00080	e8 00 00 00 00	 call	 ?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetContributePoint

; 2204 : 	 		gGensSystem.GDReqSaveContributePoint(lpObj);

  00085	56		 push	 esi
  00086	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0008b	e8 00 00 00 00	 call	 ?GDReqSaveContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GDReqSaveContributePoint
$LN13@DGAnsRegGe:

; 2205 : 		}
; 2206 : 
; 2207 : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xF8, 0x02, sizeof(pMsg));

  00090	6a 06		 push	 6
  00092	6a 02		 push	 2
  00094	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$211716[ebp]
  00097	68 f8 00 00 00	 push	 248			; 000000f8H
  0009c	52		 push	 edx
  0009d	e8 00 00 00 00	 call	 ?PHeadSubSetBE@@YAXPAEEEH@Z ; PHeadSubSetBE

; 2208 : 		pMsg.bResult	= lpMsg->bResult; 

  000a2	8a 47 04	 mov	 al, BYTE PTR [edi+4]

; 2209 : 		pMsg.iInfluence = lpMsg->bInfluence;
; 2210 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000a5	0f b6 55 f9	 movzx	 edx, BYTE PTR _pMsg$211716[ebp+1]
  000a9	8a 4f 05	 mov	 cl, BYTE PTR [edi+5]
  000ac	88 45 fc	 mov	 BYTE PTR _pMsg$211716[ebp+4], al
  000af	52		 push	 edx
  000b0	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$211716[ebp]
  000b3	88 4d fd	 mov	 BYTE PTR _pMsg$211716[ebp+5], cl
  000b6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b8	50		 push	 eax
  000b9	51		 push	 ecx
  000ba	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 2211 : 		
; 2212 : 		switch (lpMsg->bResult)

  000bf	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  000c3	83 c4 1c	 add	 esp, 28			; 0000001cH
  000c6	83 f8 07	 cmp	 eax, 7
  000c9	0f 87 2b 01 00
	00		 ja	 $LN1@DGAnsRegGe
  000cf	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN18@DGAnsRegGe[eax*4]
$LN10@DGAnsRegGe:

; 2213 : 		{
; 2214 : 		case 0:
; 2215 : 			LogAddTD("[GensSystem] [%s][%s] Gens Request - Join [%s]", lpObj->AccountID, lpObj->Name, gGensSystem.GetGensInfluenceName(lpObj));

  000d6	56		 push	 esi
  000d7	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000dc	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  000e1	50		 push	 eax
  000e2	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  000e5	52		 push	 edx
  000e6	83 c6 6c	 add	 esi, 108		; 0000006cH
  000e9	56		 push	 esi
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NKBBANCP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@
  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000f5	83 c4 10	 add	 esp, 16			; 00000010H
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
$LN9@DGAnsRegGe:

; 2216 : 	 	break;
; 2217 : 
; 2218 : 		case 1:
; 2219 : 			LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Gens be Same : [%s]", lpObj->AccountID, lpObj->Name, gGensSystem.GetGensInfluenceName(lpObj));

  000fe	56		 push	 esi
  000ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00104	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  00109	50		 push	 eax
  0010a	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  0010d	50		 push	 eax
  0010e	83 c6 6c	 add	 esi, 108		; 0000006cH
  00111	56		 push	 esi
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@ODPICHHE@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0011d	83 c4 10	 add	 esp, 16			; 00000010H
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c3		 ret	 0
$LN8@DGAnsRegGe:

; 2220 : 			break;
; 2221 : 
; 2222 : 	 case 2:
; 2223 : 			LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Below Gens leaving Time", lpObj->AccountID, lpObj->Name);

  00126	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  00129	51		 push	 ecx
  0012a	83 c6 6c	 add	 esi, 108		; 0000006cH
  0012d	56		 push	 esi
  0012e	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@NLAJMBCF@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@

; 2244 : 			break;
; 2245 : 
; 2246 : 		default:
; 2247 : 			return;
; 2248 : 		}
; 2249 : 	}
; 2250 : 	else
; 2251 : 	{
; 2252 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00133	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00139	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c3		 ret	 0
$LN7@DGAnsRegGe:

; 2224 : 			break;
; 2225 : 
; 2226 : 		case 3:
; 2227 : 		 LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Below 50Lv", lpObj->AccountID, lpObj->Name);

  00142	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  00145	52		 push	 edx
  00146	83 c6 6c	 add	 esi, 108		; 0000006cH
  00149	56		 push	 esi
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@NMHNBHFP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@

; 2244 : 			break;
; 2245 : 
; 2246 : 		default:
; 2247 : 			return;
; 2248 : 		}
; 2249 : 	}
; 2250 : 	else
; 2251 : 	{
; 2252 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00155	83 c4 0c	 add	 esp, 12			; 0000000cH
  00158	5f		 pop	 edi
  00159	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
$LN6@DGAnsRegGe:

; 2228 : 			break;
; 2229 : 
; 2230 : 		case 4:
; 2231 : 			LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Gens be Different Guild Leader [%s]", lpObj->AccountID, lpObj->Name, lpObj->lpGuild->Names);

  0015e	8b 86 38 04 00
	00		 mov	 eax, DWORD PTR [esi+1080]
  00164	83 c0 2f	 add	 eax, 47			; 0000002fH
  00167	50		 push	 eax
  00168	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  0016b	51		 push	 ecx
  0016c	83 c6 6c	 add	 esi, 108		; 0000006cH
  0016f	56		 push	 esi
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@GPJMBNBA@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0017b	83 c4 10	 add	 esp, 16			; 00000010H
  0017e	5f		 pop	 edi
  0017f	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  00180	8b e5		 mov	 esp, ebp
  00182	5d		 pop	 ebp
  00183	c3		 ret	 0
$LN5@DGAnsRegGe:

; 2232 : 			break;
; 2233 : 
; 2234 : 		case 5:
; 2235 : 			LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Not Register Guild Leader GuildName [%s]", lpObj->AccountID, lpObj->Name, lpObj->lpGuild->Name);      

  00184	8b 96 38 04 00
	00		 mov	 edx, DWORD PTR [esi+1080]
  0018a	83 c2 04	 add	 edx, 4
  0018d	52		 push	 edx
  0018e	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  00191	50		 push	 eax
  00192	83 c6 6c	 add	 esi, 108		; 0000006cH
  00195	56		 push	 esi
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@BLNLLNJD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001a1	83 c4 10	 add	 esp, 16			; 00000010H
  001a4	5f		 pop	 edi
  001a5	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c3		 ret	 0
$LN4@DGAnsRegGe:

; 2236 : 			break;
; 2237 : 
; 2238 : 		case 6:
; 2239 : 			LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Already Partymember", lpObj->AccountID, lpObj->Name);

  001aa	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  001ad	51		 push	 ecx
  001ae	83 c6 6c	 add	 esi, 108		; 0000006cH
  001b1	56		 push	 esi
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@BOBHACGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@

; 2244 : 			break;
; 2245 : 
; 2246 : 		default:
; 2247 : 			return;
; 2248 : 		}
; 2249 : 	}
; 2250 : 	else
; 2251 : 	{
; 2252 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  001b7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001bd	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c0	5f		 pop	 edi
  001c1	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  001c2	8b e5		 mov	 esp, ebp
  001c4	5d		 pop	 ebp
  001c5	c3		 ret	 0
$LN3@DGAnsRegGe:

; 2240 : 			break;
; 2241 : 
; 2242 : 		case 7:
; 2243 : 			LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Union GuildMaster", lpObj->AccountID, lpObj->Name);

  001c6	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  001c9	52		 push	 edx
  001ca	83 c6 6c	 add	 esi, 108		; 0000006cH
  001cd	56		 push	 esi
  001ce	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@CKCPKGKP@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Joini@

; 2244 : 			break;
; 2245 : 
; 2246 : 		default:
; 2247 : 			return;
; 2248 : 		}
; 2249 : 	}
; 2250 : 	else
; 2251 : 	{
; 2252 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  001d3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001d9	83 c4 0c	 add	 esp, 12			; 0000000cH
  001dc	5f		 pop	 edi
  001dd	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c3		 ret	 0
$LN14@DGAnsRegGe:

; 2244 : 			break;
; 2245 : 
; 2246 : 		default:
; 2247 : 			return;
; 2248 : 		}
; 2249 : 	}
; 2250 : 	else
; 2251 : 	{
; 2252 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  001e2	68 cc 08 00 00	 push	 2252			; 000008ccH
  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  001f1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001f7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@DGAnsRegGe:
  001fa	5f		 pop	 edi
  001fb	5e		 pop	 esi

; 2253 : 	}
; 2254 : }

  001fc	8b e5		 mov	 esp, ebp
  001fe	5d		 pop	 ebp
  001ff	c3		 ret	 0
$LN18@DGAnsRegGe:
  00200	00 00 00 00	 DD	 $LN10@DGAnsRegGe
  00204	00 00 00 00	 DD	 $LN9@DGAnsRegGe
  00208	00 00 00 00	 DD	 $LN8@DGAnsRegGe
  0020c	00 00 00 00	 DD	 $LN7@DGAnsRegGe
  00210	00 00 00 00	 DD	 $LN6@DGAnsRegGe
  00214	00 00 00 00	 DD	 $LN5@DGAnsRegGe
  00218	00 00 00 00	 DD	 $LN4@DGAnsRegGe
  0021c	00 00 00 00	 DD	 $LN3@DGAnsRegGe
?DGAnsRegGensMember@@YAXPAUPMSG_ANS_REG_GENS_MEMBER_EXDB@@@Z ENDP ; DGAnsRegGensMember
_TEXT	ENDS
PUBLIC	??_C@_0EG@IKFGJBNB@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@ ; `string'
PUBLIC	??_C@_0EH@LPDGGAOJ@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@ ; `string'
PUBLIC	??_C@_0DP@EHGBIDGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@ ; `string'
PUBLIC	??_C@_0DA@KCIOBPKH@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@ ; `string'
PUBLIC	?DGAnsSecedeGensMember@@YAXPAUPMSG_ANS_SECEDE_GENS_MEMBER_EXDB@@@Z ; DGAnsSecedeGensMember
;	COMDAT ??_C@_0EG@IKFGJBNB@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@
CONST	SEGMENT
??_C@_0EG@IKFGJBNB@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@ DB '['
	DB	'GensSystem] [%s][%s] Gens Leaving Failed to Not Influence NPC'
	DB	' : [%s]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@LPDGGAOJ@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@
CONST	SEGMENT
??_C@_0EH@LPDGGAOJ@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@ DB '['
	DB	'GensSystem] [%s][%s] Gens Leaving Failed to GuildMaster GensN'
	DB	'ame [%s]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@EHGBIDGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@
CONST	SEGMENT
??_C@_0DP@EHGBIDGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@ DB '['
	DB	'GensSystem] [%s][%s] Gens Leaving Failed to Not Register Gens'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KCIOBPKH@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@
CONST	SEGMENT
??_C@_0DA@KCIOBPKH@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@ DB '['
	DB	'GensSystem] [%s][%s] Gens Request - Leave [%s]', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGAnsSecedeGensMember@@YAXPAUPMSG_ANS_SECEDE_GENS_MEMBER_EXDB@@@Z
_TEXT	SEGMENT
_pMsg$211767 = -8					; size = 7
_lpMsg$ = 8						; size = 4
?DGAnsSecedeGensMember@@YAXPAUPMSG_ANS_SECEDE_GENS_MEMBER_EXDB@@@Z PROC ; DGAnsSecedeGensMember, COMDAT

; 2258 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	57		 push	 edi

; 2259 : 	int iObjIndex = MAKE_NUMBERW(lpMsg->bIndexH, lpMsg->bIndexL);
; 2260 : 
; 2261 : 	LPOBJ lpObj = &gObj[iObjIndex];

  00008	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]
  0000b	0f b6 47 05	 movzx	 eax, BYTE PTR [edi+5]
  0000f	0f b6 4f 06	 movzx	 ecx, BYTE PTR [edi+6]
  00013	66 c1 e0 08	 shl	 ax, 8
  00017	0f b7 f0	 movzx	 esi, ax
  0001a	0b f1		 or	 esi, ecx
  0001c	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00022	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 2262 : 	
; 2263 : 	if (gObjIsConnectedGP(lpObj->m_Index))

  00028	8b 16		 mov	 edx, DWORD PTR [esi]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00030	83 c4 04	 add	 esp, 4
  00033	85 c0		 test	 eax, eax
  00035	0f 84 3e 01 00
	00		 je	 $LN11@DGAnsSeced

; 2264 : 	{
; 2265 : 		switch (lpMsg->bResult)

  0003b	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  0003f	83 f8 03	 cmp	 eax, 3
  00042	77 77		 ja	 SHORT $LN4@DGAnsSeced
  00044	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@DGAnsSeced[eax*4]
$LN8@DGAnsSeced:

; 2266 : 		{
; 2267 : 		case 0:
; 2268 : 			LogAddTD("[GensSystem] [%s][%s] Gens Request - Leave [%s]", lpObj->AccountID, lpObj->Name, gGensSystem.GetGensInfluenceName(lpObj));

  0004b	56		 push	 esi
  0004c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00051	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  00056	50		 push	 eax
  00057	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  0005a	50		 push	 eax
  0005b	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  0005e	51		 push	 ecx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@KCIOBPKH@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Reque@

; 2269 : 			break;

  00064	eb 4c		 jmp	 SHORT $LN14@DGAnsSeced
$LN7@DGAnsSeced:

; 2270 : 
; 2271 : 		case 1:
; 2272 : 			LogAddTD("[GensSystem] [%s][%s] Gens Leaving Failed to Not Register Gens", lpObj->AccountID, lpObj->Name);

  00066	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  00069	52		 push	 edx
  0006a	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@EHGBIDGC@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2273 : 			break;

  0007c	eb 3d		 jmp	 SHORT $LN4@DGAnsSeced
$LN6@DGAnsSeced:

; 2274 : 
; 2275 : 		case 2:
; 2276 : 			LogAddTD("[GensSystem] [%s][%s] Gens Leaving Failed to GuildMaster GensName [%s]", lpObj->AccountID, lpObj->Name, gGensSystem.GetGensInfluenceName(lpObj));

  0007e	56		 push	 esi
  0007f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00084	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  00089	50		 push	 eax
  0008a	8d 4e 77	 lea	 ecx, DWORD PTR [esi+119]
  0008d	51		 push	 ecx
  0008e	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  00091	52		 push	 edx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@LPDGGAOJ@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@

; 2277 : 			break;

  00097	eb 19		 jmp	 SHORT $LN14@DGAnsSeced
$LN5@DGAnsSeced:

; 2278 : 
; 2279 : 		case 3:
; 2280 : 			LogAddTD("[GensSystem] [%s][%s] Gens Leaving Failed to Not Influence NPC : [%s]", lpObj->AccountID, lpObj->Name, gGensSystem.GetGensInfluenceName(lpObj));

  00099	56		 push	 esi
  0009a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0009f	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  000a4	50		 push	 eax
  000a5	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  000a8	50		 push	 eax
  000a9	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  000ac	51		 push	 ecx
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKFGJBNB@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Gens?5Leavi@
$LN14@DGAnsSeced:
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000b8	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@DGAnsSeced:

; 2281 : 			break;
; 2282 : 
; 2283 : 		default:
; 2284 : 			break;
; 2285 : 		}
; 2286 : 
; 2287 : 		if( gGensSystem.CheckGuildEnter && lpObj->GuildNumber > 0 )

  000bb	80 3d ad 00 00
	00 00		 cmp	 BYTE PTR ?gGensSystem@@3VGensSystem@@A+173, 0
  000c2	74 0d		 je	 SHORT $LN3@DGAnsSeced
  000c4	83 be 34 04 00
	00 00		 cmp	 DWORD PTR [esi+1076], 0
  000cb	7e 04		 jle	 SHORT $LN3@DGAnsSeced

; 2288 : 		{
; 2289 : 			lpMsg->bResult = 2;

  000cd	c6 47 04 02	 mov	 BYTE PTR [edi+4], 2
$LN3@DGAnsSeced:

; 2290 : 		}
; 2291 : 		// ----
; 2292 : 		if (!lpMsg->bResult)

  000d1	80 7f 04 00	 cmp	 BYTE PTR [edi+4], 0
  000d5	75 73		 jne	 SHORT $LN2@DGAnsSeced

; 2293 : 		{
; 2294 : 			gGensSystem.SetGensInfluence(lpObj, LEAVED_INFLUENCE);

  000d7	6a ff		 push	 -1
  000d9	56		 push	 esi
  000da	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000df	e8 00 00 00 00	 call	 ?SetGensInfluence@GensSystem@@QAEXPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensInfluence

; 2295 : 			gGensSystem.SetUserBattleZoneEnable(lpObj, BATTLE_ZONE_BLOCK);

  000e4	6a 00		 push	 0
  000e6	56		 push	 esi
  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000ec	e8 00 00 00 00	 call	 ?SetUserBattleZoneEnable@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetUserBattleZoneEnable

; 2296 : 			gGensSystem.SetContributePoint(lpObj, 0);

  000f1	6a 00		 push	 0
  000f3	56		 push	 esi
  000f4	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  000f9	e8 00 00 00 00	 call	 ?SetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetContributePoint

; 2297 : 
; 2298 : 			memset(lpObj->m_szCharName, 0, sizeof(lpObj->m_szCharName)); 	

  000fe	33 c0		 xor	 eax, eax
  00100	89 86 c8 22 00
	00		 mov	 DWORD PTR [esi+8904], eax
  00106	89 86 cc 22 00
	00		 mov	 DWORD PTR [esi+8908], eax
  0010c	66 89 86 d0 22
	00 00		 mov	 WORD PTR [esi+8912], ax
  00113	88 86 d2 22 00
	00		 mov	 BYTE PTR [esi+8914], al

; 2299 : 
; 2300 : 			lpObj->m_KillUserCnt = 0; 
; 2301 : 			lpObj->m_KillUserTotCnt = 0;	
; 2302 : 
; 2303 : 			gGensSystem.GensViewportListProtocol(lpObj);

  00119	56		 push	 esi
  0011a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0011f	89 86 e0 22 00
	00		 mov	 DWORD PTR [esi+8928], eax
  00125	89 86 e4 22 00
	00		 mov	 DWORD PTR [esi+8932], eax
  0012b	e8 00 00 00 00	 call	 ?GensViewportListProtocol@GensSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; GensSystem::GensViewportListProtocol

; 2304 : 			gGensSystem.SetGensClass(lpObj, 0);

  00130	6a 00		 push	 0
  00132	56		 push	 esi
  00133	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00138	e8 00 00 00 00	 call	 ?SetGensClass@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensClass

; 2305 : 			gGensSystem.SetGensRanking(lpObj, 0);

  0013d	6a 00		 push	 0
  0013f	56		 push	 esi
  00140	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00145	e8 00 00 00 00	 call	 ?SetGensRanking@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SetGensRanking
$LN2@DGAnsSeced:

; 2306 : 		}
; 2307 : 
; 2308 : 		PMSG_ANS_SECEDE_GENS_MEMBER_EXDB pMsg;
; 2309 : 
; 2310 : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xF8, 0x04, sizeof(pMsg)); 

  0014a	6a 07		 push	 7
  0014c	6a 04		 push	 4
  0014e	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$211767[ebp]
  00151	68 f8 00 00 00	 push	 248			; 000000f8H
  00156	52		 push	 edx
  00157	e8 00 00 00 00	 call	 ?PHeadSubSetBE@@YAXPAEEEH@Z ; PHeadSubSetBE

; 2311 : 		pMsg.bResult = lpMsg->bResult;		
; 2312 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, 0x05);

  0015c	8b 16		 mov	 edx, DWORD PTR [esi]
  0015e	8a 47 04	 mov	 al, BYTE PTR [edi+4]
  00161	6a 05		 push	 5
  00163	8d 4d f8	 lea	 ecx, DWORD PTR _pMsg$211767[ebp]
  00166	51		 push	 ecx
  00167	52		 push	 edx
  00168	88 45 fc	 mov	 BYTE PTR _pMsg$211767[ebp+4], al
  0016b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00170	83 c4 1c	 add	 esp, 28			; 0000001cH
  00173	5f		 pop	 edi
  00174	5e		 pop	 esi

; 2317 : 	}
; 2318 : }

  00175	8b e5		 mov	 esp, ebp
  00177	5d		 pop	 ebp
  00178	c3		 ret	 0
$LN11@DGAnsSeced:

; 2313 : 	}
; 2314 : 	else
; 2315 : 	{
; 2316 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  00179	68 0c 09 00 00	 push	 2316			; 0000090cH
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00191	5f		 pop	 edi
  00192	5e		 pop	 esi

; 2317 : 	}
; 2318 : }

  00193	8b e5		 mov	 esp, ebp
  00195	5d		 pop	 ebp
  00196	c3		 ret	 0
  00197	90		 npad	 1
$LN15@DGAnsSeced:
  00198	00 00 00 00	 DD	 $LN8@DGAnsSeced
  0019c	00 00 00 00	 DD	 $LN7@DGAnsSeced
  001a0	00 00 00 00	 DD	 $LN6@DGAnsSeced
  001a4	00 00 00 00	 DD	 $LN5@DGAnsSeced
?DGAnsSecedeGensMember@@YAXPAUPMSG_ANS_SECEDE_GENS_MEMBER_EXDB@@@Z ENDP ; DGAnsSecedeGensMember
_TEXT	ENDS
PUBLIC	??_C@_0DL@BKLCFGHO@?$FLGensSystem?$FN?5Send?5Gens?5Ranking?5R@ ; `string'
PUBLIC	?DGAnsGensReward@@YAXPAUPMSG_ANS_GENS_REWARD_EXDB@@@Z ; DGAnsGensReward
;	COMDAT ??_C@_0DL@BKLCFGHO@?$FLGensSystem?$FN?5Send?5Gens?5Ranking?5R@
CONST	SEGMENT
??_C@_0DL@BKLCFGHO@?$FLGensSystem?$FN?5Send?5Gens?5Ranking?5R@ DB '[GensS'
	DB	'ystem] Send Gens Ranking Reward [%s][%s] Result [%d]', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGAnsGensReward@@YAXPAUPMSG_ANS_GENS_REWARD_EXDB@@@Z
_TEXT	SEGMENT
_btResult$ = -4						; size = 1
_lpMsg$ = 8						; size = 4
?DGAnsGensReward@@YAXPAUPMSG_ANS_GENS_REWARD_EXDB@@@Z PROC ; DGAnsGensReward, COMDAT

; 2348 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 2349 : 	unsigned char btResult;
; 2350 : 
; 2351 : 	int iObjIndex = MAKE_NUMBERW(0, 0);
; 2352 : 
; 2353 : 	LPOBJ lpObj = &gObj[iObjIndex];

  00005	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 2354 : 
; 2355 : 	if (gObjIsConnectedGP(iObjIndex))

  0000b	6a 00		 push	 0
  0000d	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00012	83 c4 04	 add	 esp, 4
  00015	85 c0		 test	 eax, eax
  00017	74 62		 je	 SHORT $LN6@DGAnsGensR@2

; 2356 : 	{
; 2357 : 		if (lpMsg->bResult)

  00019	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0001c	53		 push	 ebx
  0001d	8a 58 04	 mov	 bl, BYTE PTR [eax+4]
  00020	84 db		 test	 bl, bl

; 2358 : 		{
; 2359 : 			btResult = lpMsg->bResult;
; 2360 : 		}
; 2361 : 		else

  00022	75 25		 jne	 SHORT $LN9@DGAnsGensR@2

; 2362 : 		{
; 2363 : 			if (gGensSystem.SendGensRewardItem(lpObj, lpMsg->iGensClass))

  00024	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00027	50		 push	 eax
  00028	56		 push	 esi
  00029	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0002e	e8 00 00 00 00	 call	 ?SendGensRewardItem@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SendGensRewardItem
  00033	85 c0		 test	 eax, eax
  00035	74 10		 je	 SHORT $LN3@DGAnsGensR@2

; 2364 : 			{
; 2365 : 				btResult = 0;
; 2366 : 				gGensSystem.ReqExDBGensRewardComplete(lpObj);

  00037	56		 push	 esi
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0003d	88 5d fc	 mov	 BYTE PTR _btResult$[ebp], bl
  00040	e8 00 00 00 00	 call	 ?ReqExDBGensRewardComplete@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqExDBGensRewardComplete

; 2367 : 			}
; 2368 : 			else

  00045	eb 05		 jmp	 SHORT $LN2@DGAnsGensR@2
$LN3@DGAnsGensR@2:

; 2369 : 			{
; 2370 : 				btResult = 3;

  00047	b3 03		 mov	 bl, 3
$LN9@DGAnsGensR@2:
  00049	88 5d fc	 mov	 BYTE PTR _btResult$[ebp], bl
$LN2@DGAnsGensR@2:

; 2371 : 			}
; 2372 : 		}
; 2373 : 
; 2374 : 		LogAddTD("[GensSystem] Send Gens Ranking Reward [%s][%s] Result [%d]", lpObj->AccountID, lpObj->Name, btResult);

  0004c	0f b6 cb	 movzx	 ecx, bl
  0004f	51		 push	 ecx
  00050	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  00053	52		 push	 edx
  00054	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  00057	50		 push	 eax
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@BKLCFGHO@?$FLGensSystem?$FN?5Send?5Gens?5Ranking?5R@
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2375 : 
; 2376 : 		gGensSystem.SendGensReward(lpObj, btResult);

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _btResult$[ebp]
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	51		 push	 ecx
  0006a	56		 push	 esi
  0006b	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00070	e8 00 00 00 00	 call	 ?SendGensReward@GensSystem@@QAEHPAUOBJECTSTRUCT@@E@Z ; GensSystem::SendGensReward
  00075	5b		 pop	 ebx
  00076	5e		 pop	 esi

; 2381 : 	}
; 2382 : }

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN6@DGAnsGensR@2:

; 2377 : 	}
; 2378 : 	else
; 2379 : 	{
; 2380 : 		LogAddTD("error-L2 : Index %s %d", __FILE__, __LINE__);

  0007b	68 4c 09 00 00	 push	 2380			; 0000094cH
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCDOHCGD@error?9L2?5?3?5Index?5?$CFs?5?$CFd?$AA@
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH
  00093	5e		 pop	 esi

; 2381 : 	}
; 2382 : }

  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
?DGAnsGensReward@@YAXPAUPMSG_ANS_GENS_REWARD_EXDB@@@Z ENDP ; DGAnsGensReward
_TEXT	ENDS
PUBLIC	?ChkKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z ; GensSystem::ChkKillUserName
; Function compile flags: /Ogtp
;	COMDAT ?ChkKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
tv133 = 8						; size = 4
_lpObj$ = 8						; size = 4
_szCharName$ = 12					; size = 4
?ChkKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z PROC ; GensSystem::ChkKillUserName, COMDAT
; _this$ = ecx

; 1051 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1052 : 	int i = 0;

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR _szCharName$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	33 f6		 xor	 esi, esi
  00011	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1062 : 		}
; 1063 : 
; 1064 : 		if (!strcmp(gObj[lpObj->m_Index].m_szCharName, szCharName))

  00020	8d 94 08 c8 22
	00 00		 lea	 edx, DWORD PTR [eax+ecx+8904]
  00027	89 55 08	 mov	 DWORD PTR tv133[ebp], edx
  0002a	8d 9b 00 00 00
	00		 npad	 6
$LL5@ChkKillUse:
  00030	8b 45 08	 mov	 eax, DWORD PTR tv133[ebp]
  00033	8b cb		 mov	 ecx, ebx
$LL13@ChkKillUse:
  00035	8a 10		 mov	 dl, BYTE PTR [eax]
  00037	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00039	75 1a		 jne	 SHORT $LN14@ChkKillUse
  0003b	84 d2		 test	 dl, dl
  0003d	74 12		 je	 SHORT $LN15@ChkKillUse
  0003f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00042	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00045	75 0e		 jne	 SHORT $LN14@ChkKillUse
  00047	83 c0 02	 add	 eax, 2
  0004a	83 c1 02	 add	 ecx, 2
  0004d	84 d2		 test	 dl, dl
  0004f	75 e4		 jne	 SHORT $LL13@ChkKillUse
$LN15@ChkKillUse:
  00051	33 c0		 xor	 eax, eax
  00053	eb 05		 jmp	 SHORT $LN16@ChkKillUse
$LN14@ChkKillUse:
  00055	1b c0		 sbb	 eax, eax
  00057	83 d8 ff	 sbb	 eax, -1
$LN16@ChkKillUse:
  0005a	85 c0		 test	 eax, eax
  0005c	74 31		 je	 SHORT $LN11@ChkKillUse

; 1065 : 	 	break;
; 1066 : 	
; 1067 : 		i++;

  0005e	46		 inc	 esi
  0005f	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00062	7c cc		 jl	 SHORT $LL5@ChkKillUse

; 1053 : 
; 1054 : 	while (true)
; 1055 : 	{
; 1056 : 		if (i >= 10)
; 1057 : 		{
; 1058 : 			EnterCriticalSection((LPCRITICAL_SECTION)&criti);

  00064	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 1059 : 			this->InsertKillUserName(lpObj, szCharName);

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	53		 push	 ebx
  00073	57		 push	 edi
  00074	e8 00 00 00 00	 call	 ?InsertKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z ; GensSystem::InsertKillUserName

; 1060 : 			LeaveCriticalSection((LPCRITICAL_SECTION)&criti);

  00079	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi

; 1061 : 			return 0;

  00086	33 c0		 xor	 eax, eax
  00088	5b		 pop	 ebx

; 1075 : 		return true;
; 1076 : 
; 1077 : 	return false;
; 1078 : }

  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 08 00	 ret	 8
$LN11@ChkKillUse:

; 1068 : 	}
; 1069 : 	
; 1070 : 	EnterCriticalSection((LPCRITICAL_SECTION)&criti);

  0008f	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 1071 : 	++lpObj->m_KillUserCnt;

  0009a	ff 87 e0 22 00
	00		 inc	 DWORD PTR [edi+8928]

; 1072 : 	LeaveCriticalSection((LPCRITICAL_SECTION)&criti);

  000a0	68 00 00 00 00	 push	 OFFSET ?criti@@3U_RTL_CRITICAL_SECTION@@A ; criti
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 1073 : 
; 1074 : 	if (this->AbusingPenalty(lpObj, i))

  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	56		 push	 esi
  000af	57		 push	 edi
  000b0	e8 00 00 00 00	 call	 ?AbusingPenalty@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::AbusingPenalty
  000b5	f7 d8		 neg	 eax
  000b7	5f		 pop	 edi
  000b8	1b c0		 sbb	 eax, eax
  000ba	5e		 pop	 esi
  000bb	f7 d8		 neg	 eax
  000bd	5b		 pop	 ebx

; 1075 : 		return true;
; 1076 : 
; 1077 : 	return false;
; 1078 : }

  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?ChkKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z ENDP ; GensSystem::ChkKillUserName
_TEXT	ENDS
PUBLIC	?CGReqRegGensMember@@YAXPAUPMSG_REQ_REG_GENS_MEMBER@@H@Z ; CGReqRegGensMember
; Function compile flags: /Ogtp
;	COMDAT ?CGReqRegGensMember@@YAXPAUPMSG_REQ_REG_GENS_MEMBER@@H@Z
_TEXT	SEGMENT
_pMsg$211614 = -8					; size = 8
_lpMsg$ = 8						; size = 4
_iIndex$ = 12						; size = 4
_bRet$ = 15						; size = 1
?CGReqRegGensMember@@YAXPAUPMSG_REQ_REG_GENS_MEMBER@@H@Z PROC ; CGReqRegGensMember, COMDAT

; 1899 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1900 : 	unsigned char bRet;
; 1901 : 
; 1902 : 	LPOBJ lpObj = &gObj[iIndex];

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	56		 push	 esi
  0000a	8b f0		 mov	 esi, eax
  0000c	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00012	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	57		 push	 edi

; 1903 : 
; 1904 : 	_GUILD_INFO_STRUCT *lpGuildInfo = gObj[iIndex].lpGuild;

  00019	8b be 38 04 00
	00		 mov	 edi, DWORD PTR [esi+1080]

; 1905 : 
; 1906 : 	if (!OBJMAX_RANGE(iIndex)) return;

  0001f	85 c0		 test	 eax, eax
  00021	0f 88 dc 00 00
	00		 js	 $LN1@CGReqRegGe
  00027	33 c9		 xor	 ecx, ecx
  00029	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0002e	0f 9e c1	 setle	 cl
  00031	85 c9		 test	 ecx, ecx
  00033	0f 84 ca 00 00
	00		 je	 $LN1@CGReqRegGe

; 1907 : 
; 1908 : 	if (gObjIsConnected(iIndex))

  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0003f	83 c4 04	 add	 esp, 4
  00042	85 c0		 test	 eax, eax
  00044	0f 84 b9 00 00
	00		 je	 $LN1@CGReqRegGe

; 1909 : 	{
; 1910 : 		PMSG_ANS_REG_GENS_MEMBER_EXDB pMsg;	
; 1911 : 
; 1912 : 		pMsg.bInfluence = lpMsg->bResult;

  0004a	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0004d	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  00050	53		 push	 ebx
  00051	88 4d fd	 mov	 BYTE PTR _pMsg$211614[ebp+5], cl

; 1913 : 
; 1914 : 		//[GensSystem] [%s][%s] Gens Request - Join [%s]
; 1915 : 		if (!gGensSystem.GetGensInfluence(lpObj))

  00054	56		 push	 esi
  00055	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0005a	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  0005f	85 c0		 test	 eax, eax
  00061	75 07		 jne	 SHORT $LN17@CGReqRegGe

; 1916 : 		{
; 1917 : 			pMsg.bResult = 0; bRet = 1;

  00063	88 45 fc	 mov	 BYTE PTR _pMsg$211614[ebp+4], al
  00066	b3 01		 mov	 bl, 1
  00068	eb 03		 jmp	 SHORT $LN10@CGReqRegGe
$LN17@CGReqRegGe:
  0006a	8a 5d 0f	 mov	 bl, BYTE PTR _bRet$[ebp]
$LN10@CGReqRegGe:

; 1918 : 			//LogAddTD("[GensSystem] [%s][%s] Gens Request - Join", lpObj->AccountID, lpObj->Name);
; 1919 : 		}
; 1920 : 		
; 1921 : 		//GensSystem] [%s][%s] Gens Joining Failed to Gens be Same : [%s]
; 1922 : 		if (gGensSystem.GetGensInfluence(lpObj) > 0)

  0006d	56		 push	 esi
  0006e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00073	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  00078	85 c0		 test	 eax, eax
  0007a	7e 06		 jle	 SHORT $LN9@CGReqRegGe

; 1923 : 		{
; 1924 : 			pMsg.bResult = 1; bRet = 0;

  0007c	c6 45 fc 01	 mov	 BYTE PTR _pMsg$211614[ebp+4], 1
  00080	32 db		 xor	 bl, bl
$LN9@CGReqRegGe:

; 1925 : 			//LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Gens be Same", lpObj->AccountID, lpObj->Name);
; 1926 : 		}
; 1927 : 		
; 1928 : 		//[GensSystem] [%s][%s] Gens Joining Failed to Below Gens leaving Time
; 1929 : 		//if (g_GensAbusingResetTime < 60)
; 1930 : 		//{
; 1931 : 		//	pMsg.bResult = 2; bRet = 1;
; 1932 : 		//}
; 1933 : 
; 1934 : 		//[GensSystem] [%s][%s] Gens Joining Failed to Below 50Lv
; 1935 : 		if (lpObj->Level < RequiredLevel )

  00082	0f bf 96 be 00
	00 00		 movsx	 edx, WORD PTR [esi+190]
  00089	b0 03		 mov	 al, 3
  0008b	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?RequiredLevel@@3HA ; RequiredLevel
  00091	7d 05		 jge	 SHORT $LN8@CGReqRegGe

; 1936 : 		{
; 1937 : 			pMsg.bResult = 3; bRet = 0;

  00093	88 45 fc	 mov	 BYTE PTR _pMsg$211614[ebp+4], al
  00096	32 db		 xor	 bl, bl
$LN8@CGReqRegGe:

; 1938 : 			//LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Below 50Lv", lpObj->AccountID, lpObj->Name);
; 1939 : 		}
; 1940 : 
; 1941 : 		if (lpObj->Reset < RequiredReset )

  00098	8b 8e 90 22 00
	00		 mov	 ecx, DWORD PTR [esi+8848]
  0009e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?RequiredReset@@3HA ; RequiredReset
  000a4	7d 05		 jge	 SHORT $LN7@CGReqRegGe

; 1942 : 		{
; 1943 : 			pMsg.bResult = 3; bRet = 0;

  000a6	88 45 fc	 mov	 BYTE PTR _pMsg$211614[ebp+4], al
  000a9	32 db		 xor	 bl, bl
$LN7@CGReqRegGe:

; 1944 : 			//LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Below 50Lv", lpObj->AccountID, lpObj->Name);
; 1945 : 		}
; 1946 : 		
; 1947 : 		//[GensSystem] [%s][%s] Gens Joining Failed to Gens be Different Guild Leader [%s]
; 1948 : 		if (lpObj->GuildStatus >= 0)

  000ab	8b 86 48 04 00
	00		 mov	 eax, DWORD PTR [esi+1096]
  000b1	85 c0		 test	 eax, eax
  000b3	78 06		 js	 SHORT $LN6@CGReqRegGe

; 1949 : 		{
; 1950 : 			pMsg.bResult = 4; bRet = 0;

  000b5	c6 45 fc 04	 mov	 BYTE PTR _pMsg$211614[ebp+4], 4
  000b9	32 db		 xor	 bl, bl
$LN6@CGReqRegGe:

; 1951 : 			//LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Gens be Different Guild Leader", lpObj->AccountID, lpObj->Name);
; 1952 : 		}
; 1953 : 		
; 1954 : 		//[GensSystem] [%s][%s] Gens Joining Failed to Not Register Guild Leader GuildName [%s]
; 1955 : 		if (lpObj->GuildStatus == GUILD_MASTER)

  000bb	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  000c0	75 06		 jne	 SHORT $LN5@CGReqRegGe

; 1956 : 		{
; 1957 : 			pMsg.bResult = 5; bRet = 0;

  000c2	c6 45 fc 05	 mov	 BYTE PTR _pMsg$211614[ebp+4], 5
  000c6	32 db		 xor	 bl, bl
$LN5@CGReqRegGe:

; 1958 : 			//LogAddTD("[GensSystem] [%s][%s] Gens Joining Failed to Gens be Different Guild Leader", lpObj->AccountID, lpObj->Name);
; 1959 : 		}
; 1960 : 		
; 1961 : 		//[GensSystem] [%s][%s] Gens Joining Failed to Already Partymember
; 1962 : 		if (lpObj->PartyNumber >= 0)

  000c8	83 be 2c 04 00
	00 00		 cmp	 DWORD PTR [esi+1068], 0
  000cf	7c 06		 jl	 SHORT $LN4@CGReqRegGe

; 1963 : 		{
; 1964 : 			pMsg.bResult = 6; bRet = 0; 

  000d1	c6 45 fc 06	 mov	 BYTE PTR _pMsg$211614[ebp+4], 6
  000d5	32 db		 xor	 bl, bl
$LN4@CGReqRegGe:

; 1965 : 		}
; 1966 : 		
; 1967 : 		//[GensSystem] [%s][%s] Gens Joining Failed to Union GuildMaster
; 1968 : 		if (lpGuildInfo != NULL && lpGuildInfo->iGuildUnion)

  000d7	85 ff		 test	 edi, edi
  000d9	74 2e		 je	 SHORT $LN3@CGReqRegGe
  000db	83 bf 1c 07 00
	00 00		 cmp	 DWORD PTR [edi+1820], 0
  000e2	74 25		 je	 SHORT $LN3@CGReqRegGe

; 1969 : 		{
; 1970 : 			pMsg.bResult = 7; bRet = 0;

  000e4	c6 45 fc 07	 mov	 BYTE PTR _pMsg$211614[ebp+4], 7
$LN2@CGReqRegGe:

; 1976 : 		}
; 1977 : 		else
; 1978 : 		{
; 1979 : 			pMsg.bIndexH = SET_NUMBERH(iIndex);

  000e8	8b 45 0c	 mov	 eax, DWORD PTR _iIndex$[ebp]
  000eb	8b c8		 mov	 ecx, eax

; 1980 : 			pMsg.bIndexL = SET_NUMBERL(iIndex);
; 1981 : 			DGAnsRegGensMember((PMSG_ANS_REG_GENS_MEMBER_EXDB*)&pMsg);

  000ed	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$211614[ebp]
  000f0	c1 e9 08	 shr	 ecx, 8
  000f3	52		 push	 edx
  000f4	88 4d fe	 mov	 BYTE PTR _pMsg$211614[ebp+6], cl
  000f7	88 45 ff	 mov	 BYTE PTR _pMsg$211614[ebp+7], al
  000fa	e8 00 00 00 00	 call	 ?DGAnsRegGensMember@@YAXPAUPMSG_ANS_REG_GENS_MEMBER_EXDB@@@Z ; DGAnsRegGensMember
  000ff	83 c4 04	 add	 esp, 4
  00102	5b		 pop	 ebx
$LN1@CGReqRegGe:
  00103	5f		 pop	 edi
  00104	5e		 pop	 esi

; 1982 : 		}
; 1983 : 	}
; 1984 : }

  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
$LN3@CGReqRegGe:

; 1971 : 		}
; 1972 : 		
; 1973 : 		if (bRet)

  00109	84 db		 test	 bl, bl
  0010b	74 db		 je	 SHORT $LN2@CGReqRegGe

; 1974 : 		{
; 1975 : 			gGensSystem.ReqRegGensMember(lpObj, lpMsg->bResult);

  0010d	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  00110	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00114	50		 push	 eax
  00115	56		 push	 esi
  00116	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0011b	e8 00 00 00 00	 call	 ?ReqRegGensMember@GensSystem@@QAEXPAUOBJECTSTRUCT@@E@Z ; GensSystem::ReqRegGensMember
  00120	5b		 pop	 ebx
  00121	5f		 pop	 edi
  00122	5e		 pop	 esi

; 1982 : 		}
; 1983 : 	}
; 1984 : }

  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
?CGReqRegGensMember@@YAXPAUPMSG_REQ_REG_GENS_MEMBER@@H@Z ENDP ; CGReqRegGensMember
_TEXT	ENDS
PUBLIC	?CGReqSecedeGensMember@@YAXPAUPMSG_REQ_SEGEDE_GENS_MEMBER@@H@Z ; CGReqSecedeGensMember
; Function compile flags: /Ogtp
;	COMDAT ?CGReqSecedeGensMember@@YAXPAUPMSG_REQ_SEGEDE_GENS_MEMBER@@H@Z
_TEXT	SEGMENT
_pMsg$211639 = -8					; size = 7
_lpMsg$ = 8						; size = 4
_iIndex$ = 12						; size = 4
_bRet$ = 15						; size = 1
?CGReqSecedeGensMember@@YAXPAUPMSG_REQ_SEGEDE_GENS_MEMBER@@H@Z PROC ; CGReqSecedeGensMember, COMDAT

; 1988 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 1989 : 	if (!OBJMAX_RANGE(iIndex))

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _iIndex$[ebp]
  0000a	85 db		 test	 ebx, ebx
  0000c	78 70		 js	 SHORT $LN1@CGReqSeced
  0000e	33 c0		 xor	 eax, eax
  00010	81 fb 97 3a 00
	00		 cmp	 ebx, 14999		; 00003a97H
  00016	0f 9e c0	 setle	 al
  00019	85 c0		 test	 eax, eax
  0001b	74 61		 je	 SHORT $LN1@CGReqSeced

; 1990 : 		return;
; 1991 : 
; 1992 : 	LPOBJ lpObj = &gObj[iIndex];

  0001d	56		 push	 esi
  0001e	8b f3		 mov	 esi, ebx
  00020	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00026	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1993 : 
; 1994 : 	unsigned char bRet = 1;
; 1995 : 
; 1996 : 	if (gObjIsConnected(iIndex))

  0002c	53		 push	 ebx
  0002d	c6 45 0f 01	 mov	 BYTE PTR _bRet$[ebp], 1
  00031	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00036	83 c4 04	 add	 esp, 4
  00039	85 c0		 test	 eax, eax
  0003b	74 40		 je	 SHORT $LN11@CGReqSeced

; 1997 : 	{
; 1998 : 		PMSG_ANS_SECEDE_GENS_MEMBER_EXDB pMsg;	
; 1999 : 
; 2000 : 		if( !gGensSystem.IsInfluenceNPC(lpObj) )

  0003d	56		 push	 esi
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00043	e8 00 00 00 00	 call	 ?IsInfluenceNPC@GensSystem@@QAE_NPAUOBJECTSTRUCT@@@Z ; GensSystem::IsInfluenceNPC
  00048	84 c0		 test	 al, al
  0004a	75 07		 jne	 SHORT $LN4@CGReqSeced

; 2001 : 		{
; 2002 : 			pMsg.bResult = 3; bRet = 0;

  0004c	c6 45 fc 03	 mov	 BYTE PTR _pMsg$211639[ebp+4], 3
  00050	88 45 0f	 mov	 BYTE PTR _bRet$[ebp], al
$LN4@CGReqSeced:

; 2003 : 		}
; 2004 : 		// ----
; 2005 : 		if(  !gGensSystem.GetGensInfluence(lpObj) )

  00053	56		 push	 esi
  00054	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00059	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence
  0005e	85 c0		 test	 eax, eax
  00060	75 21		 jne	 SHORT $LN3@CGReqSeced

; 2006 : 		{
; 2007 : 			pMsg.bResult = 1; bRet = 0;

  00062	c6 45 fc 01	 mov	 BYTE PTR _pMsg$211639[ebp+4], 1
$LN2@CGReqSeced:

; 2013 : 		}
; 2014 : 		else
; 2015 : 		{
; 2016 : 			pMsg.bIndexH = SET_NUMBERH(iIndex); 

  00066	8b c3		 mov	 eax, ebx

; 2017 : 			pMsg.bIndexL = SET_NUMBERL(iIndex);
; 2018 : 			DGAnsSecedeGensMember((PMSG_ANS_SECEDE_GENS_MEMBER_EXDB*)&pMsg);

  00068	8d 4d f8	 lea	 ecx, DWORD PTR _pMsg$211639[ebp]
  0006b	c1 e8 08	 shr	 eax, 8
  0006e	51		 push	 ecx
  0006f	88 45 fd	 mov	 BYTE PTR _pMsg$211639[ebp+5], al
  00072	88 5d fe	 mov	 BYTE PTR _pMsg$211639[ebp+6], bl
  00075	e8 00 00 00 00	 call	 ?DGAnsSecedeGensMember@@YAXPAUPMSG_ANS_SECEDE_GENS_MEMBER_EXDB@@@Z ; DGAnsSecedeGensMember
  0007a	83 c4 04	 add	 esp, 4
$LN11@CGReqSeced:
  0007d	5e		 pop	 esi
$LN1@CGReqSeced:
  0007e	5b		 pop	 ebx

; 2019 : 		}
; 2020 : 	}
; 2021 : }

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
$LN3@CGReqSeced:

; 2008 : 		}
; 2009 : 		// ----
; 2010 : 		if( bRet )

  00083	80 7d 0f 00	 cmp	 BYTE PTR _bRet$[ebp], 0
  00087	74 dd		 je	 SHORT $LN2@CGReqSeced

; 2011 : 		{
; 2012 : 			gGensSystem.ReqSecedeGensMember(lpObj);

  00089	56		 push	 esi
  0008a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  0008f	e8 00 00 00 00	 call	 ?ReqSecedeGensMember@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::ReqSecedeGensMember
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx

; 2019 : 		}
; 2020 : 	}
; 2021 : }

  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
?CGReqSecedeGensMember@@YAXPAUPMSG_REQ_SEGEDE_GENS_MEMBER@@H@Z ENDP ; CGReqSecedeGensMember
_TEXT	ENDS
PUBLIC	??_C@_0DC@DDPABKFB@?$FLGensSystem?$FN?5?9?5Error?5NONE_INFLUE@ ; `string'
PUBLIC	??_C@_0FP@LFMBBFAD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5BonusC@ ; `string'
PUBLIC	??_C@_0CI@PABJHDP@?$CFd?5bonus?5contribution?5point?$CIs?$CJ?5o@ ; `string'
PUBLIC	??_C@_0GH@GNCIJJHO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Sub?5Contri@ ; `string'
PUBLIC	??_C@_0CH@DIBMGBEO@?$CFd?5contribution?5point?$CIs?$CJ?5would?5b@ ; `string'
PUBLIC	??_C@_0GH@LKELBNEO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5Contri@ ; `string'
PUBLIC	??_C@_0CC@MOPLMGLO@?$CFd?5contribution?5point?$CIs?$CJ?5obtaine@ ; `string'
PUBLIC	??_C@_0BM@OLOFICNN@You?5have?5maximum?5gens?5class?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CalcContributePoint@GensSystem@@QAEXPAUOBJECTSTRUCT@@0@Z ; GensSystem::CalcContributePoint
EXTRN	_sprintf:PROC
;	COMDAT ??_C@_0DC@DDPABKFB@?$FLGensSystem?$FN?5?9?5Error?5NONE_INFLUE@
CONST	SEGMENT
??_C@_0DC@DDPABKFB@?$FLGensSystem?$FN?5?9?5Error?5NONE_INFLUE@ DB '[GensS'
	DB	'ystem] - Error NONE_INFLUENCE - %s Line: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@LFMBBFAD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5BonusC@
CONST	SEGMENT
??_C@_0FP@LFMBBFAD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5BonusC@ DB '['
	DB	'GensSystem] [%s][%s] Add BonusCP[%d] - Result : Lv [%d] GensN'
	DB	'ame [%s] / Lv [%d] GensName [%s]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PABJHDP@?$CFd?5bonus?5contribution?5point?$CIs?$CJ?5o@
CONST	SEGMENT
??_C@_0CI@PABJHDP@?$CFd?5bonus?5contribution?5point?$CIs?$CJ?5o@ DB '%d b'
	DB	'onus contribution point(s) obtained', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@GNCIJJHO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Sub?5Contri@
CONST	SEGMENT
??_C@_0GH@GNCIJJHO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Sub?5Contri@ DB '['
	DB	'GensSystem] [%s][%s] Sub ContributePoint[%d] - Result : Lv [%'
	DB	'd] GensName [%s] / Lv [%d] GensName [%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DIBMGBEO@?$CFd?5contribution?5point?$CIs?$CJ?5would?5b@
CONST	SEGMENT
??_C@_0CH@DIBMGBEO@?$CFd?5contribution?5point?$CIs?$CJ?5would?5b@ DB '%d '
	DB	'contribution point(s) would be lost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@LKELBNEO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5Contri@
CONST	SEGMENT
??_C@_0GH@LKELBNEO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5Contri@ DB '['
	DB	'GensSystem] [%s][%s] Add ContributePoint[%d] - Result : Lv [%'
	DB	'd] GensName [%s] / Lv [%d] GensName [%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MOPLMGLO@?$CFd?5contribution?5point?$CIs?$CJ?5obtaine@
CONST	SEGMENT
??_C@_0CC@MOPLMGLO@?$CFd?5contribution?5point?$CIs?$CJ?5obtaine@ DB '%d c'
	DB	'ontribution point(s) obtained', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OLOFICNN@You?5have?5maximum?5gens?5class?$AA@
CONST	SEGMENT
??_C@_0BM@OLOFICNN@You?5have?5maximum?5gens?5class?$AA@ DB 'You have maxi'
	DB	'mum gens class', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CalcContributePoint@GensSystem@@QAEXPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
tv414 = -136						; size = 4
tv415 = -132						; size = 4
_iInfluence$ = -132					; size = 4
_iAddBonusValue$ = -128					; size = 4
_iSubValue$ = -124					; size = 4
_iAddValue$ = -120					; size = 4
_Text$211305 = -116					; size = 100
_Text$211301 = -116					; size = 100
_Text$211297 = -116					; size = 100
_szName$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
?CalcContributePoint@GensSystem@@QAEXPAUOBJECTSTRUCT@@0@Z PROC ; GensSystem::CalcContributePoint, COMDAT
; _this$ = ecx

; 841  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 842  : 	int iInfluence;
; 843  : 	int iTarInfluence;
; 844  : 	int iContributePoint;
; 845  : 	int iKillerContributePoint;
; 846  : 	int iCalcLv;
; 847  : 	int iAddValue;
; 848  : 	int iSubValue;
; 849  : 	int iAddBonusValue;
; 850  : 	int iGensClassGap;
; 851  : 	
; 852  : 	char szName[0x0B];
; 853  : 
; 854  : 	if (lpObj->Type && lpTargetObj->Type && this->IsMapBattleZone(lpObj->MapNumber) && this->IsMapBattleZone(lpTargetObj->MapNumber))

  00018	66 83 7e 68 00	 cmp	 WORD PTR [esi+104], 0
  0001d	57		 push	 edi
  0001e	8b 7d 0c	 mov	 edi, DWORD PTR _lpTargetObj$[ebp]
  00021	8b d9		 mov	 ebx, ecx
  00023	0f 84 86 03 00
	00		 je	 $LN1@CalcContri
  00029	66 83 7f 68 00	 cmp	 WORD PTR [edi+104], 0
  0002e	0f 84 7b 03 00
	00		 je	 $LN1@CalcContri
  00034	0f b6 86 49 01
	00 00		 movzx	 eax, BYTE PTR [esi+329]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  00041	85 c0		 test	 eax, eax
  00043	0f 84 66 03 00
	00		 je	 $LN1@CalcContri
  00049	0f b6 8f 49 01
	00 00		 movzx	 ecx, BYTE PTR [edi+329]
  00050	51		 push	 ecx
  00051	8b cb		 mov	 ecx, ebx
  00053	e8 00 00 00 00	 call	 ?IsMapBattleZone@GensSystem@@QAEHH@Z ; GensSystem::IsMapBattleZone
  00058	85 c0		 test	 eax, eax
  0005a	0f 84 4f 03 00
	00		 je	 $LN1@CalcContri

; 855  : 	{
; 856  : 		iInfluence		= this->GetGensInfluence(lpObj);

  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence

; 857  : 		iTarInfluence	= this->GetGensInfluence(lpTargetObj);

  00066	57		 push	 edi
  00067	8b cb		 mov	 ecx, ebx
  00069	89 85 7c ff ff
	ff		 mov	 DWORD PTR _iInfluence$[ebp], eax
  0006f	e8 00 00 00 00	 call	 ?GetGensInfluence@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluence

; 858  : 
; 859  : 		if (iInfluence && iTarInfluence)

  00074	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _iInfluence$[ebp]
  0007a	85 c9		 test	 ecx, ecx
  0007c	0f 84 2d 03 00
	00		 je	 $LN1@CalcContri
  00082	85 c0		 test	 eax, eax
  00084	0f 84 25 03 00
	00		 je	 $LN1@CalcContri

; 860  : 		{
; 861  : 			if (iInfluence != iTarInfluence)

  0008a	3b c8		 cmp	 ecx, eax
  0008c	0f 84 05 03 00
	00		 je	 $LN43@CalcContri

; 862  : 			{
; 863  : 				memcpy(szName, lpTargetObj->Name, sizeof(lpTargetObj->Name));		

  00092	8b 47 7b	 mov	 eax, DWORD PTR [edi+123]
  00095	8b 57 77	 mov	 edx, DWORD PTR [edi+119]
  00098	66 8b 4f 7f	 mov	 cx, WORD PTR [edi+127]
  0009c	89 45 f4	 mov	 DWORD PTR _szName$[ebp+4], eax

; 864  : 				if (this->ChkKillUserName(lpObj, szName) == 0)

  0009f	8d 45 f0	 lea	 eax, DWORD PTR _szName$[ebp]
  000a2	89 55 f0	 mov	 DWORD PTR _szName$[ebp], edx
  000a5	8a 97 81 00 00
	00		 mov	 dl, BYTE PTR [edi+129]
  000ab	50		 push	 eax
  000ac	66 89 4d f8	 mov	 WORD PTR _szName$[ebp+8], cx
  000b0	56		 push	 esi
  000b1	8b cb		 mov	 ecx, ebx
  000b3	88 55 fa	 mov	 BYTE PTR _szName$[ebp+10], dl
  000b6	e8 00 00 00 00	 call	 ?ChkKillUserName@GensSystem@@QAEHPAUOBJECTSTRUCT@@PAD@Z ; GensSystem::ChkKillUserName
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 ec 02 00
	00		 jne	 $LN1@CalcContri

; 865  : 				{
; 866  : 					iKillerContributePoint = this->GetContributePoint(lpTargetObj); 

  000c3	57		 push	 edi
  000c4	8b cb		 mov	 ecx, ebx
  000c6	e8 00 00 00 00	 call	 ?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetContributePoint

; 869  : 
; 870  : 					if (iKillerContributePoint > 0 || iContributePoint <= 0)

  000cb	85 c0		 test	 eax, eax
  000cd	7f 0e		 jg	 SHORT $LN40@CalcContri

; 867  : 					
; 868  : 					iContributePoint = this->GetContributePoint(lpObj);

  000cf	56		 push	 esi
  000d0	e8 00 00 00 00	 call	 ?GetContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetContributePoint

; 869  : 
; 870  : 					if (iKillerContributePoint > 0 || iContributePoint <= 0)

  000d5	85 c0		 test	 eax, eax
  000d7	0f 8f d2 02 00
	00		 jg	 $LN1@CalcContri
$LN40@CalcContri:

; 871  : 					{
; 872  : 						iAddValue = 0; iAddBonusValue = 0;
; 873  : 
; 874  : 						if (lpObj->Level == lpTargetObj->Level)

  000dd	0f b7 86 be 00
	00 00		 movzx	 eax, WORD PTR [esi+190]
  000e4	0f b7 8f be 00
	00 00		 movzx	 ecx, WORD PTR [edi+190]
  000eb	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 0
  000f2	ba 03 00 00 00	 mov	 edx, 3
  000f7	66 3b c1	 cmp	 ax, cx
  000fa	75 0c		 jne	 SHORT $LN51@CalcContri

; 875  : 						{
; 876  : 							iAddValue = 5; iAddBonusValue = 3;

  000fc	c7 45 88 05 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 5

; 877  : 						}
; 878  : 						else

  00103	e9 9d 00 00 00	 jmp	 $LN48@CalcContri
$LN51@CalcContri:

; 879  : 						{							
; 880  : 							if (lpObj->Level >= lpTargetObj->Level)

  00108	7c 55		 jl	 SHORT $LN37@CalcContri

; 881  : 							{					
; 882  : 								if (lpObj->Level > lpTargetObj->Level)

  0010a	66 3b c1	 cmp	 ax, cx
  0010d	0f 8e 92 00 00
	00		 jle	 $LN48@CalcContri

; 883  : 								{
; 884  : 									iCalcLv = lpObj->Level - lpTargetObj->Level;

  00113	0f bf c9	 movsx	 ecx, cx
  00116	98		 cwde
  00117	2b c1		 sub	 eax, ecx

; 885  : 
; 886  : 								 if (iCalcLv < 51)

  00119	83 f8 33	 cmp	 eax, 51			; 00000033H
  0011c	7d 34		 jge	 SHORT $LN35@CalcContri

; 887  : 							 	{
; 888  : 									 if (iCalcLv < 31 || iCalcLv > 50)

  0011e	8d 48 e1	 lea	 ecx, DWORD PTR [eax-31]
  00121	83 f9 13	 cmp	 ecx, 19			; 00000013H
  00124	77 10		 ja	 SHORT $LN33@CalcContri

; 900  : 										 }
; 901  : 								 	}
; 902  : 								 	else 
; 903  : 								 	{
; 904  : 										 iAddValue = 2; iSubValue = 1;

  00126	c7 45 88 02 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 2
  0012d	c7 45 84 01 00
	00 00		 mov	 DWORD PTR _iSubValue$[ebp], 1
  00134	eb 6f		 jmp	 SHORT $LN48@CalcContri
$LN33@CalcContri:

; 889  : 								 	{
; 890  : 								 		if (iCalcLv < 11 || iCalcLv > 30)

  00136	8d 48 f5	 lea	 ecx, DWORD PTR [eax-11]
  00139	83 f9 13	 cmp	 ecx, 19			; 00000013H
  0013c	77 05		 ja	 SHORT $LN31@CalcContri

; 895  : 										 	}
; 896  : 									 	}
; 897  : 									 	else
; 898  : 										 {
; 899  : 										 	iAddValue = 3; iSubValue = 3;

  0013e	89 55 88	 mov	 DWORD PTR _iAddValue$[ebp], edx
  00141	eb 5f		 jmp	 SHORT $LN52@CalcContri
$LN31@CalcContri:

; 891  : 									 	{
; 892  : 									 		if (iCalcLv > 0 && iCalcLv <= 10)

  00143	48		 dec	 eax
  00144	83 f8 09	 cmp	 eax, 9
  00147	77 5c		 ja	 SHORT $LN48@CalcContri

; 893  : 											 {
; 894  : 										 		iAddValue = 5; iSubValue = 3;

  00149	c7 45 88 05 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 5

; 905  : 									 }
; 906  : 								 }
; 907  : 							 	else

  00150	eb 50		 jmp	 SHORT $LN52@CalcContri
$LN35@CalcContri:

; 908  : 							 	{
; 909  : 							 		iAddValue = 1; iSubValue = 1;

  00152	b8 01 00 00 00	 mov	 eax, 1
  00157	89 45 88	 mov	 DWORD PTR _iAddValue$[ebp], eax
  0015a	89 45 84	 mov	 DWORD PTR _iSubValue$[ebp], eax

; 910  : 							 	}
; 911  : 							 }
; 912  : 						 }
; 913  : 							else

  0015d	eb 46		 jmp	 SHORT $LN48@CalcContri
$LN37@CalcContri:

; 914  : 							{
; 915  : 								iCalcLv = lpTargetObj->Level - lpObj->Level;

  0015f	0f bf c9	 movsx	 ecx, cx
  00162	98		 cwde
  00163	2b c8		 sub	 ecx, eax

; 916  : 
; 917  : 								if (iCalcLv < 51)

  00165	83 f9 33	 cmp	 ecx, 51			; 00000033H
  00168	7d 31		 jge	 SHORT $LN25@CalcContri

; 918  : 								{
; 919  : 									if (iCalcLv < 31 || iCalcLv > 50)

  0016a	8d 41 e1	 lea	 eax, DWORD PTR [ecx-31]
  0016d	83 f8 13	 cmp	 eax, 19			; 00000013H
  00170	77 09		 ja	 SHORT $LN23@CalcContri

; 931  : 										}
; 932  : 									}
; 933  : 									else
; 934  : 									{
; 935  : 										iAddValue = 6; iSubValue = 3;

  00172	c7 45 88 06 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 6
  00179	eb 27		 jmp	 SHORT $LN52@CalcContri
$LN23@CalcContri:

; 920  : 									{
; 921  : 										if (iCalcLv < 11 || iCalcLv > 30)

  0017b	8d 41 f5	 lea	 eax, DWORD PTR [ecx-11]
  0017e	83 f8 13	 cmp	 eax, 19			; 00000013H
  00181	77 09		 ja	 SHORT $LN21@CalcContri

; 926  : 											}
; 927  : 										}
; 928  : 										else
; 929  : 										{
; 930  : 											iAddValue = 6; iSubValue = 3;

  00183	c7 45 88 06 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 6
  0018a	eb 16		 jmp	 SHORT $LN52@CalcContri
$LN21@CalcContri:

; 922  : 										{
; 923  : 											if (iCalcLv > 0 && iCalcLv <= 10)

  0018c	49		 dec	 ecx
  0018d	83 f9 09	 cmp	 ecx, 9
  00190	77 13		 ja	 SHORT $LN48@CalcContri

; 924  : 											{
; 925  : 												iAddValue = 5; iSubValue = 3;

  00192	c7 45 88 05 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 5

; 936  : 									}
; 937  : 								}
; 938  : 								else

  00199	eb 07		 jmp	 SHORT $LN52@CalcContri
$LN25@CalcContri:

; 939  : 								{
; 940  : 									iAddValue = 7; iSubValue = 3;

  0019b	c7 45 88 07 00
	00 00		 mov	 DWORD PTR _iAddValue$[ebp], 7
$LN52@CalcContri:
  001a2	89 55 84	 mov	 DWORD PTR _iSubValue$[ebp], edx
$LN48@CalcContri:

; 941  : 								}
; 942  : 							}
; 943  : 						}
; 944  : 
; 945  : 						iAddBonusValue = 0;
; 946  : 
; 947  : 						iGensClassGap = lpObj->m_GensClass - lpTargetObj->m_GensClass;

  001a5	8b 8e f4 22 00
	00		 mov	 ecx, DWORD PTR [esi+8948]
  001ab	8b c1		 mov	 eax, ecx
  001ad	2b 87 f4 22 00
	00		 sub	 eax, DWORD PTR [edi+8948]
  001b3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _iAddBonusValue$[ebp], 0

; 948  : 					
; 949  : 						if (iGensClassGap == 1)

  001ba	83 f8 01	 cmp	 eax, 1
  001bd	0f 84 ec 01 00
	00		 je	 $LN1@CalcContri

; 950  : 						{
; 951  : 							if (lpObj->m_GensClass >= 9)
; 952  : 							{
; 953  : 								iAddBonusValue = 1;
; 954  : 							}
; 955  : 							else
; 956  : 							{
; 957  : 								iAddBonusValue = 3;
; 958  : 							}
; 959  : 						}
; 960  : 						else
; 961  : 						{
; 962  : 							if (iGensClassGap == 2)

  001c3	83 f8 02	 cmp	 eax, 2
  001c6	75 11		 jne	 SHORT $LN12@CalcContri

; 963  : 							{
; 964  : 								if (lpObj->m_GensClass >= 9)

  001c8	33 d2		 xor	 edx, edx
  001ca	83 f9 09	 cmp	 ecx, 9
  001cd	0f 9c c2	 setl	 dl
  001d0	8d 54 12 02	 lea	 edx, DWORD PTR [edx+edx+2]
  001d4	89 55 80	 mov	 DWORD PTR _iAddBonusValue$[ebp], edx

; 965  : 								{
; 966  : 									iAddBonusValue = 2;
; 967  : 								}
; 968  : 								else
; 969  : 								{
; 970  : 									iAddBonusValue = 4;
; 971  : 								}
; 972  : 							}
; 973  : 							else

  001d7	eb 13		 jmp	 SHORT $LN50@CalcContri
$LN12@CalcContri:

; 974  : 							{
; 975  : 								if (iGensClassGap >= 3)

  001d9	3b c2		 cmp	 eax, edx
  001db	7c 0f		 jl	 SHORT $LN50@CalcContri

; 976  : 								{
; 977  : 									if (lpObj->m_GensClass >= 9)

  001dd	33 c0		 xor	 eax, eax
  001df	83 f9 09	 cmp	 ecx, 9
  001e2	0f 9c c0	 setl	 al
  001e5	8d 44 00 03	 lea	 eax, DWORD PTR [eax+eax+3]
  001e9	89 45 80	 mov	 DWORD PTR _iAddBonusValue$[ebp], eax
$LN50@CalcContri:

; 978  : 									{
; 979  : 										iAddBonusValue = 3;
; 980  : 									}
; 981  : 									else
; 982  : 									{
; 983  : 										iAddBonusValue = 5;
; 984  : 									}
; 985  : 								}
; 986  : 							}
; 987  : 					
; 988  : 							if( lpObj->m_GensClass > 9 && iAddBonusValue + iAddValue >= this->GetNextContributePoint(lpObj) )

  001ec	83 f9 09	 cmp	 ecx, 9
  001ef	7e 26		 jle	 SHORT $LN49@CalcContri
  001f1	56		 push	 esi
  001f2	8b cb		 mov	 ecx, ebx
  001f4	e8 00 00 00 00	 call	 ?GetNextContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; GensSystem::GetNextContributePoint
  001f9	8b 4d 80	 mov	 ecx, DWORD PTR _iAddBonusValue$[ebp]
  001fc	03 4d 88	 add	 ecx, DWORD PTR _iAddValue$[ebp]
  001ff	3b c8		 cmp	 ecx, eax
  00201	7c 14		 jl	 SHORT $LN49@CalcContri

; 989  : 							{
; 990  : 								//GCServerMsgStringSend(lMsg.Get(3470), lpObj->m_Index, 1);
; 991  : 								GCServerMsgStringSend("You have maximum gens class", lpObj->m_Index, 1); //-> Not original text

  00203	8b 06		 mov	 eax, DWORD PTR [esi]
  00205	6a 01		 push	 1
  00207	50		 push	 eax
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OLOFICNN@You?5have?5maximum?5gens?5class?$AA@
  0020d	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00212	83 c4 0c	 add	 esp, 12			; 0000000cH

; 992  : 							}
; 993  : 							else //-> Not original

  00215	eb 23		 jmp	 SHORT $LN4@CalcContri
$LN49@CalcContri:

; 994  : 							{
; 995  : 								char Text[100];
; 996  : 								sprintf(Text, "%d contribution point(s) obtained", iAddValue);

  00217	8b 4d 88	 mov	 ecx, DWORD PTR _iAddValue$[ebp]
  0021a	51		 push	 ecx
  0021b	8d 55 8c	 lea	 edx, DWORD PTR _Text$211297[ebp]
  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MOPLMGLO@?$CFd?5contribution?5point?$CIs?$CJ?5obtaine@
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 _sprintf

; 997  : 								// ----
; 998  : 								GCServerMsgStringSend(Text, lpObj->m_Index, 1);

  00229	8b 06		 mov	 eax, DWORD PTR [esi]
  0022b	6a 01		 push	 1
  0022d	50		 push	 eax
  0022e	8d 4d 8c	 lea	 ecx, DWORD PTR _Text$211297[ebp]
  00231	51		 push	 ecx
  00232	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00237	83 c4 18	 add	 esp, 24			; 00000018H
$LN4@CalcContri:

; 999  : 							}
; 1000 : 
; 1001 : 							this->AddContributePoint(lpObj, iAddValue);				

  0023a	8b 55 88	 mov	 edx, DWORD PTR _iAddValue$[ebp]
  0023d	52		 push	 edx
  0023e	56		 push	 esi
  0023f	8b cb		 mov	 ecx, ebx
  00241	e8 00 00 00 00	 call	 ?AddContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::AddContributePoint

; 1002 : 										
; 1003 : 							LogAddTD("[GensSystem] [%s][%s] Add ContributePoint[%d] - Result : Lv [%d] GensName [%s] / Lv [%d] GensName [%s]",
; 1004 : 								lpObj->AccountID, lpObj->Name, iAddValue, lpObj->Level, this->GetGensInfluenceName(lpObj), lpTargetObj->Level, this->GetGensInfluenceName(lpTargetObj));

  00246	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  00249	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  0024c	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv415[ebp], ecx
  00252	57		 push	 edi
  00253	8b cb		 mov	 ecx, ebx
  00255	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv414[ebp], eax
  0025b	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  00260	0f bf 97 be 00
	00 00		 movsx	 edx, WORD PTR [edi+190]
  00267	50		 push	 eax
  00268	52		 push	 edx
  00269	56		 push	 esi
  0026a	8b cb		 mov	 ecx, ebx
  0026c	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  00271	8b 4d 88	 mov	 ecx, DWORD PTR _iAddValue$[ebp]
  00274	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv414[ebp]
  0027a	50		 push	 eax
  0027b	0f bf 86 be 00
	00 00		 movsx	 eax, WORD PTR [esi+190]
  00282	50		 push	 eax
  00283	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv415[ebp]
  00289	51		 push	 ecx
  0028a	52		 push	 edx
  0028b	50		 push	 eax
  0028c	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@LKELBNEO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5Contri@
  00291	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1005 : 
; 1006 : 							this->SubContributePoint(lpTargetObj, iSubValue);

  00297	8b 4d 84	 mov	 ecx, DWORD PTR _iSubValue$[ebp]
  0029a	83 c4 20	 add	 esp, 32			; 00000020H
  0029d	51		 push	 ecx
  0029e	57		 push	 edi
  0029f	8b cb		 mov	 ecx, ebx
  002a1	e8 00 00 00 00	 call	 ?SubContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::SubContributePoint

; 1007 : 						
; 1008 : 							if( iSubValue > 0 )

  002a6	83 7d 84 00	 cmp	 DWORD PTR _iSubValue$[ebp], 0
  002aa	7e 23		 jle	 SHORT $LN3@CalcContri

; 1009 : 							{
; 1010 : 								char Text[100];
; 1011 : 								sprintf(Text, "%d contribution point(s) would be lost", iAddValue);

  002ac	8b 55 88	 mov	 edx, DWORD PTR _iAddValue$[ebp]
  002af	52		 push	 edx
  002b0	8d 45 8c	 lea	 eax, DWORD PTR _Text$211301[ebp]
  002b3	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@DIBMGBEO@?$CFd?5contribution?5point?$CIs?$CJ?5would?5b@
  002b8	50		 push	 eax
  002b9	e8 00 00 00 00	 call	 _sprintf

; 1012 : 								// ----
; 1013 : 								GCServerMsgStringSend(Text, lpObj->m_Index, 1);

  002be	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002c0	6a 01		 push	 1
  002c2	51		 push	 ecx
  002c3	8d 55 8c	 lea	 edx, DWORD PTR _Text$211301[ebp]
  002c6	52		 push	 edx
  002c7	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  002cc	83 c4 18	 add	 esp, 24			; 00000018H
$LN3@CalcContri:

; 1014 : 							}
; 1015 : 
; 1016 : 							LogAddTD("[GensSystem] [%s][%s] Sub ContributePoint[%d] - Result : Lv [%d] GensName [%s] / Lv [%d] GensName [%s]",
; 1017 : 								lpTargetObj->AccountID, lpTargetObj->Name, iSubValue, lpTargetObj->Level, this->GetGensInfluenceName(lpTargetObj), lpObj->Level, this->GetGensInfluenceName(lpObj));

  002cf	56		 push	 esi
  002d0	8b cb		 mov	 ecx, ebx
  002d2	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  002d7	50		 push	 eax
  002d8	0f bf 86 be 00
	00 00		 movsx	 eax, WORD PTR [esi+190]
  002df	50		 push	 eax
  002e0	57		 push	 edi
  002e1	8b cb		 mov	 ecx, ebx
  002e3	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  002e8	0f bf 8f be 00
	00 00		 movsx	 ecx, WORD PTR [edi+190]
  002ef	8b 55 84	 mov	 edx, DWORD PTR _iSubValue$[ebp]
  002f2	50		 push	 eax
  002f3	51		 push	 ecx
  002f4	52		 push	 edx
  002f5	8d 47 77	 lea	 eax, DWORD PTR [edi+119]
  002f8	50		 push	 eax
  002f9	8d 47 6c	 lea	 eax, DWORD PTR [edi+108]
  002fc	50		 push	 eax
  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@GNCIJJHO@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Sub?5Contri@
  00302	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1018 : 					
; 1019 : 							if (iAddBonusValue > 0)

  00308	8b 45 80	 mov	 eax, DWORD PTR _iAddBonusValue$[ebp]
  0030b	83 c4 20	 add	 esp, 32			; 00000020H
  0030e	85 c0		 test	 eax, eax
  00310	0f 8e 99 00 00
	00		 jle	 $LN1@CalcContri

; 1020 : 							{
; 1021 : 								this->AddContributePoint(lpObj, iAddBonusValue);

  00316	50		 push	 eax
  00317	56		 push	 esi
  00318	8b cb		 mov	 ecx, ebx
  0031a	e8 00 00 00 00	 call	 ?AddContributePoint@GensSystem@@QAEHPAUOBJECTSTRUCT@@H@Z ; GensSystem::AddContributePoint

; 1022 : 
; 1023 : 								//GCServerMsgStringSend(lMsg.Get(3472), lpObj->m_Index, 1);
; 1024 : 								// ----
; 1025 : 								char Text[100];
; 1026 : 								sprintf(Text, "%d bonus contribution point(s) obtained", iAddBonusValue);

  0031f	8b 4d 80	 mov	 ecx, DWORD PTR _iAddBonusValue$[ebp]
  00322	51		 push	 ecx
  00323	8d 55 8c	 lea	 edx, DWORD PTR _Text$211305[ebp]
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@PABJHDP@?$CFd?5bonus?5contribution?5point?$CIs?$CJ?5o@
  0032b	52		 push	 edx
  0032c	e8 00 00 00 00	 call	 _sprintf

; 1027 : 								// ----
; 1028 : 								GCServerMsgStringSend(Text, lpObj->m_Index, 1); //-> Not original text

  00331	8b 06		 mov	 eax, DWORD PTR [esi]
  00333	6a 01		 push	 1
  00335	50		 push	 eax
  00336	8d 4d 8c	 lea	 ecx, DWORD PTR _Text$211305[ebp]
  00339	51		 push	 ecx
  0033a	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0033f	83 c4 18	 add	 esp, 24			; 00000018H

; 1029 : 
; 1030 : 								LogAddTD("[GensSystem] [%s][%s] Add BonusCP[%d] - Result : Lv [%d] GensName [%s] / Lv [%d] GensName [%s]",
; 1031 : 									lpObj->AccountID, lpObj->Name, iAddBonusValue, lpObj->Level, this->GetGensInfluenceName(lpObj), lpTargetObj->Level, this->GetGensInfluenceName(lpTargetObj));

  00342	57		 push	 edi
  00343	8b cb		 mov	 ecx, ebx
  00345	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  0034a	0f bf 97 be 00
	00 00		 movsx	 edx, WORD PTR [edi+190]
  00351	50		 push	 eax
  00352	52		 push	 edx
  00353	56		 push	 esi
  00354	8b cb		 mov	 ecx, ebx
  00356	e8 00 00 00 00	 call	 ?GetGensInfluenceName@GensSystem@@QAEPADPAUOBJECTSTRUCT@@@Z ; GensSystem::GetGensInfluenceName
  0035b	8b 4d 80	 mov	 ecx, DWORD PTR _iAddBonusValue$[ebp]
  0035e	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv414[ebp]
  00364	50		 push	 eax
  00365	0f bf 86 be 00
	00 00		 movsx	 eax, WORD PTR [esi+190]
  0036c	50		 push	 eax
  0036d	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv415[ebp]
  00373	51		 push	 ecx
  00374	52		 push	 edx
  00375	50		 push	 eax
  00376	68 00 00 00 00	 push	 OFFSET ??_C@_0FP@LFMBBFAD@?$FLGensSystem?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Add?5BonusC@
  0037b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00381	83 c4 20	 add	 esp, 32			; 00000020H
  00384	5f		 pop	 edi
  00385	5e		 pop	 esi
  00386	5b		 pop	 ebx

; 1040 : 			}
; 1041 : 	 }
; 1042 : 	}
; 1043 : }

  00387	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0038a	33 cd		 xor	 ecx, ebp
  0038c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00391	8b e5		 mov	 esp, ebp
  00393	5d		 pop	 ebp
  00394	c2 08 00	 ret	 8
$LN43@CalcContri:

; 1032 : 							}
; 1033 : 						}
; 1034 : 				 }
; 1035 : 		 	}
; 1036 : 	 	}
; 1037 : 			else
; 1038 : 			{
; 1039 : 				LogAddTD("[GensSystem] - Error NONE_INFLUENCE - %s Line: %d", __FILE__, __LINE__);

  00397	68 0f 04 00 00	 push	 1039			; 0000040fH
  0039c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JNBFDODE@GensSystem?4cpp?$AA@
  003a1	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DDPABKFB@?$FLGensSystem?$FN?5?9?5Error?5NONE_INFLUE@
  003a6	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003ac	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@CalcContri:

; 1040 : 			}
; 1041 : 	 }
; 1042 : 	}
; 1043 : }

  003af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003b2	5f		 pop	 edi
  003b3	5e		 pop	 esi
  003b4	33 cd		 xor	 ecx, ebp
  003b6	5b		 pop	 ebx
  003b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003bc	8b e5		 mov	 esp, ebp
  003be	5d		 pop	 ebp
  003bf	c2 08 00	 ret	 8
?CalcContributePoint@GensSystem@@QAEXPAUOBJECTSTRUCT@@0@Z ENDP ; GensSystem::CalcContributePoint
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__EgGensSystem@@YAXXZ
text$yc	SEGMENT
??__EgGensSystem@@YAXXZ PROC				; `dynamic initializer for 'gGensSystem'', COMDAT

; 27   : GensSystem							gGensSystem;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00005	e8 00 00 00 00	 call	 ??0GensSystem@@QAE@XZ	; GensSystem::GensSystem
  0000a	68 00 00 00 00	 push	 OFFSET ??__FgGensSystem@@YAXXZ ; `dynamic atexit destructor for 'gGensSystem''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EgGensSystem@@YAXXZ ENDP				; `dynamic initializer for 'gGensSystem''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__FgGensSystem@@YAXXZ
text$yd	SEGMENT
??__FgGensSystem@@YAXXZ PROC				; `dynamic atexit destructor for 'gGensSystem'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VGensSystem@@A ; gGensSystem
  00005	e9 00 00 00 00	 jmp	 ??1GensSystem@@UAE@XZ	; GensSystem::~GensSystem
??__FgGensSystem@@YAXXZ ENDP				; `dynamic atexit destructor for 'gGensSystem''
text$yd	ENDS
PUBLIC	?gGensSystem@@3VGensSystem@@A			; gGensSystem
_BSS	SEGMENT
?gGensSystem@@3VGensSystem@@A DB 0ccH DUP (?)		; gGensSystem
_BSS	ENDS
CRT$XCU	SEGMENT
_gGensSystem$initializer$ DD FLAT:??__EgGensSystem@@YAXXZ
CRT$XCU	ENDS
END
