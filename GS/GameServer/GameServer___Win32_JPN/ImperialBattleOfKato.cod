; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\ImperialBattleOfKato.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_sttBLOODCASTLE_LEVEL DD 0fH
	DD	050H
	DD	0aH
	DD	03cH
	DD	051H
	DD	082H
	DD	03dH
	DD	06eH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	014bH
	DD	03e8H
	DD	0137H
	DD	03e8H
	DD	0fH
	DD	04afH
	DD	0aH
	DD	04afH
_DATA	ENDS
CONST	SEGMENT
_g_KatoGate DD	020dH
	DD	092H
	DD	0bfH
	DD	03H
	DD	020fH
	DD	077H
	DD	0c0H
	DD	03H
	DD	020dH
	DD	059H
	DD	0c3H
	DD	03H
	DD	0210H
	DD	0deH
	DD	086H
	DD	01H
	DD	020cH
	DD	0deH
	DD	0a0H
	DD	01H
	DD	020fH
	DD	0dfH
	DD	0c1H
	DD	01H
	DD	020dH
	DD	0a7H
	DD	0d9H
	DD	01H
	ORG $+32
_g_KatoMapAttr DD 08eH
	DD	0beH
	DD	093H
	DD	0c0H
	DD	073H
	DD	0bfH
	DD	078H
	DD	0c1H
	DD	055H
	DD	0c3H
	DD	05aH
	DD	0c5H
	DD	0deH
	DD	085H
	DD	0e0H
	DD	08aH
	DD	0deH
	DD	09fH
	DD	0e0H
	DD	0a4H
	DD	0deH
	DD	0c0H
	DD	0e0H
	DD	0c5H
	DD	0a6H
	DD	0d8H
	DD	0a8H
	DD	0ddH
	ORG $+32
_g_KatoTrap DD	071H
	DD	0c2H
	DD	070H
	DD	077H
	DD	06cH
	DD	0cbH
	DD	062H
	DD	0ccH
	DD	05dH
	DD	0cbH
	DD	05dH
	DD	0c6H
	DD	05eH
	DD	0c2H
	DD	05dH
	DD	0beH
	DD	061H
	DD	0bbH
	DD	06dH
	DD	057H
	DD	072H
	DD	059H
	DD	0dfH
	DD	0a5H
	DD	0deH
	DD	0a9H
	DD	0dfH
	DD	0aeH
	ORG $+8
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Reset@BATTLEOFKATO_DATA@@QAEXXZ		; BATTLEOFKATO_DATA::Reset
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleofkato.h
;	COMDAT ?Reset@BATTLEOFKATO_DATA@@QAEXXZ
_TEXT	SEGMENT
?Reset@BATTLEOFKATO_DATA@@QAEXXZ PROC			; BATTLEOFKATO_DATA::Reset, COMDAT
; _this$ = ecx

; 18   : 		for(int i=0;i<3;++i)
; 19   : 		{
; 20   : 			this->AIGroups[i] = -1;

  00000	83 c8 ff	 or	 eax, -1
  00003	89 01		 mov	 DWORD PTR [ecx], eax
  00005	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00008	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 21   : 		}
; 22   : 		for(int n=0;n<9;++n)
; 23   : 		{
; 24   : 			this->GateIndex[n] = -1;

  0000b	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000e	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00011	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00014	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00017	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  0001a	89 41 24	 mov	 DWORD PTR [ecx+36], eax
  0001d	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  00020	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  00023	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 25   : 		}
; 26   : 		this->CurrentLeaderIndex = -1;

  00026	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 27   : 		this->MonsterCount = 0;

  00029	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 28   : 		this->TrapIndex = -1;

  00030	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 29   : 		this->NotifyCount = -1;

  00033	c6 41 50 ff	 mov	 BYTE PTR [ecx+80], 255	; 000000ffH

; 30   : 	}

  00037	c3		 ret	 0
?Reset@BATTLEOFKATO_DATA@@QAEXXZ ENDP			; BATTLEOFKATO_DATA::Reset
_TEXT	ENDS
PUBLIC	?SetSuccessValue@CImperialBattleOfKato@@QAEX_N@Z ; CImperialBattleOfKato::SetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?SetSuccessValue@CImperialBattleOfKato@@QAEX_N@Z
_TEXT	SEGMENT
_SuccessValue$ = 8					; size = 1
?SetSuccessValue@CImperialBattleOfKato@@QAEX_N@Z PROC	; CImperialBattleOfKato::SetSuccessValue, COMDAT
; _this$ = ecx

; 80   : 	void SetSuccessValue(bool SuccessValue) { this->SuccessValue = SuccessValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8a 45 08	 mov	 al, BYTE PTR _SuccessValue$[ebp]
  00006	88 41 59	 mov	 BYTE PTR [ecx+89], al
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSuccessValue@CImperialBattleOfKato@@QAEX_N@Z ENDP	; CImperialBattleOfKato::SetSuccessValue
_TEXT	ENDS
PUBLIC	?GetIndex@CImperialBattleUser@@QAEHXZ		; CImperialBattleUser::GetIndex
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
;	COMDAT ?GetIndex@CImperialBattleUser@@QAEHXZ
_TEXT	SEGMENT
?GetIndex@CImperialBattleUser@@QAEHXZ PROC		; CImperialBattleUser::GetIndex, COMDAT
; _this$ = ecx

; 23   : 		return this->m_iIndex;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 24   : 	}

  00003	c3		 ret	 0
?GetIndex@CImperialBattleUser@@QAEHXZ ENDP		; CImperialBattleUser::GetIndex
_TEXT	ENDS
PUBLIC	??_7CImperialBattleOfKato@@6B@			; CImperialBattleOfKato::`vftable'
PUBLIC	??1CImperialBattleOfKato@@UAE@XZ		; CImperialBattleOfKato::~CImperialBattleOfKato
PUBLIC	??_R4CImperialBattleOfKato@@6B@			; CImperialBattleOfKato::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImperialBattleOfKato@@@8		; CImperialBattleOfKato `RTTI Type Descriptor'
PUBLIC	??_R3CImperialBattleOfKato@@8			; CImperialBattleOfKato::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImperialBattleOfKato@@8			; CImperialBattleOfKato::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImperialBattleOfKato@@8		; CImperialBattleOfKato::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECImperialBattleOfKato@@UAEPAXI@Z:PROC	; CImperialBattleOfKato::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CImperialBattleOfKato@@8
; File e:\work\tranet_version\gs\gameserver\imperialbattleofkato.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CImperialBattleOfKato@@8 DD FLAT:??_R0?AVCImperialBattleOfKato@@@8 ; CImperialBattleOfKato::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImperialBattleOfKato@@8
rdata$r	ENDS
;	COMDAT ??_R2CImperialBattleOfKato@@8
rdata$r	SEGMENT
??_R2CImperialBattleOfKato@@8 DD FLAT:??_R1A@?0A@EA@CImperialBattleOfKato@@8 ; CImperialBattleOfKato::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CImperialBattleOfKato@@8
rdata$r	SEGMENT
??_R3CImperialBattleOfKato@@8 DD 00H			; CImperialBattleOfKato::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CImperialBattleOfKato@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImperialBattleOfKato@@@8
_DATA	SEGMENT
??_R0?AVCImperialBattleOfKato@@@8 DD FLAT:??_7type_info@@6B@ ; CImperialBattleOfKato `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImperialBattleOfKato@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImperialBattleOfKato@@6B@
rdata$r	SEGMENT
??_R4CImperialBattleOfKato@@6B@ DD 00H			; CImperialBattleOfKato::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImperialBattleOfKato@@@8
	DD	FLAT:??_R3CImperialBattleOfKato@@8
rdata$r	ENDS
;	COMDAT ??_7CImperialBattleOfKato@@6B@
CONST	SEGMENT
??_7CImperialBattleOfKato@@6B@ DD FLAT:??_R4CImperialBattleOfKato@@6B@ ; CImperialBattleOfKato::`vftable'
	DD	FLAT:??_ECImperialBattleOfKato@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CImperialBattleOfKato@@UAE@XZ
_TEXT	SEGMENT
??1CImperialBattleOfKato@@UAE@XZ PROC			; CImperialBattleOfKato::~CImperialBattleOfKato, COMDAT
; _this$ = ecx

; 18   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CImperialBattleOfKato@@6B@

; 19   : }

  00006	c3		 ret	 0
??1CImperialBattleOfKato@@UAE@XZ ENDP			; CImperialBattleOfKato::~CImperialBattleOfKato
_TEXT	ENDS
PUBLIC	?ResetData@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::ResetData
; Function compile flags: /Ogtp
;	COMDAT ?ResetData@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?ResetData@CImperialBattleOfKato@@QAEXXZ PROC		; CImperialBattleOfKato::ResetData, COMDAT
; _this$ = ecx

; 23   : 	this->m_BattleData.Reset();

  00000	83 c8 ff	 or	 eax, -1
  00003	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00009	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0000c	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000f	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00012	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00015	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  00018	89 41 24	 mov	 DWORD PTR [ecx+36], eax
  0001b	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  0001e	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  00021	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  00024	89 41 34	 mov	 DWORD PTR [ecx+52], eax
  00027	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0002a	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0
  00031	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
  00034	c6 41 54 ff	 mov	 BYTE PTR [ecx+84], 255	; 000000ffH

; 24   : }

  00038	c3		 ret	 0
?ResetData@CImperialBattleOfKato@@QAEXXZ ENDP		; CImperialBattleOfKato::ResetData
_TEXT	ENDS
PUBLIC	??_C@_0DF@GJCPEIOL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	?SetState_NONE@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SetState_NONE
EXTRN	?DelGroupInstance@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::DelGroupInstance
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
;	COMDAT ??_C@_0DF@GJCPEIOL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DF@GJCPEIOL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> NONE', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_NONE@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?SetState_NONE@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_NONE, COMDAT
; _this$ = ecx

; 58   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 59   : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> NONE", this->m_BattleData.CurrentState);

  00003	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GJCPEIOL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0000c	6a 02		 push	 2
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 60   : 	this->ResetData();

  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ResetData

; 61   : 	TMonsterAIGroup::DelGroupInstance(30);

  0001e	6a 1e		 push	 30			; 0000001eH
  00020	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 62   : 	TMonsterAIGroup::DelGroupInstance(31);

  00025	6a 1f		 push	 31			; 0000001fH
  00027	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 63   : 	TMonsterAIGroup::DelGroupInstance(32);

  0002c	6a 20		 push	 32			; 00000020H
  0002e	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 64   : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_NONE;

  00036	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  0003d	5e		 pop	 esi

; 65   : }

  0003e	c3		 ret	 0
?SetState_NONE@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_NONE
_TEXT	ENDS
PUBLIC	??_C@_0DE@DBAKFDA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	?SetState_END@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SetState_END
;	COMDAT ??_C@_0DE@DBAKFDA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DE@DBAKFDA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ I'
	DB	'MPERIAL FORT ] [ BattleOfKato ] State(%d) -> END', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_END@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?SetState_END@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_END, COMDAT
; _this$ = ecx

; 184  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 185  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> END", this->m_BattleData.CurrentState);

  00003	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@DBAKFDA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0000c	6a 02		 push	 2
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 186  : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_END;

  00017	c7 46 40 07 00
	00 00		 mov	 DWORD PTR [esi+64], 7
  0001e	5e		 pop	 esi

; 187  : 	return;
; 188  : }

  0001f	c3		 ret	 0
?SetState_END@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_END
_TEXT	ENDS
PUBLIC	?ProcState_END@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::ProcState_END
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_END@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?ProcState_END@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_END, COMDAT
; _this$ = ecx

; 445  : 	return;
; 446  : }

  00000	c3		 ret	 0
?ProcState_END@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_END
_TEXT	ENDS
PUBLIC	?GetEventTime@CImperialBattleOfKato@@QAEHXZ	; CImperialBattleOfKato::GetEventTime
; Function compile flags: /Ogtp
;	COMDAT ?GetEventTime@CImperialBattleOfKato@@QAEHXZ
_TEXT	SEGMENT
?GetEventTime@CImperialBattleOfKato@@QAEHXZ PROC	; CImperialBattleOfKato::GetEventTime, COMDAT
; _this$ = ecx

; 450  : 	return this->m_BattleData.Time / 1000;

  00000	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  00003	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00008	f7 e9		 imul	 ecx
  0000a	c1 fa 06	 sar	 edx, 6
  0000d	8b c2		 mov	 eax, edx
  0000f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00012	03 c2		 add	 eax, edx

; 451  : }

  00014	c3		 ret	 0
?GetEventTime@CImperialBattleOfKato@@QAEHXZ ENDP	; CImperialBattleOfKato::GetEventTime
_TEXT	ENDS
PUBLIC	?GetEventState@CImperialBattleOfKato@@QAEHXZ	; CImperialBattleOfKato::GetEventState
; Function compile flags: /Ogtp
;	COMDAT ?GetEventState@CImperialBattleOfKato@@QAEHXZ
_TEXT	SEGMENT
?GetEventState@CImperialBattleOfKato@@QAEHXZ PROC	; CImperialBattleOfKato::GetEventState, COMDAT
; _this$ = ecx

; 455  : 	int CurrState = this->m_BattleData.CurrentState;

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]

; 456  : 	if(CurrState == 1 || CurrState == 3 || CurrState == 5)

  00003	83 f8 01	 cmp	 eax, 1
  00006	74 2a		 je	 SHORT $LN6@GetEventSt
  00008	83 f8 03	 cmp	 eax, 3
  0000b	74 25		 je	 SHORT $LN6@GetEventSt
  0000d	83 f8 05	 cmp	 eax, 5
  00010	74 20		 je	 SHORT $LN6@GetEventSt

; 459  : 	}
; 460  : 	else if(CurrState == 2 || CurrState == 4 || CurrState == 6)

  00012	83 f8 02	 cmp	 eax, 2
  00015	74 15		 je	 SHORT $LN3@GetEventSt
  00017	83 f8 04	 cmp	 eax, 4
  0001a	74 10		 je	 SHORT $LN3@GetEventSt
  0001c	83 f8 06	 cmp	 eax, 6
  0001f	74 0b		 je	 SHORT $LN3@GetEventSt

; 463  : 	}
; 464  : 	else if(CurrState == 7)

  00021	83 e8 07	 sub	 eax, 7
  00024	f7 d8		 neg	 eax
  00026	1b c0		 sbb	 eax, eax
  00028	83 e0 03	 and	 eax, 3

; 465  : 	{
; 466  : 		return 0;
; 467  : 	}
; 468  : 	return 3;
; 469  : }

  0002b	c3		 ret	 0
$LN3@GetEventSt:

; 461  : 	{
; 462  : 		return 2;

  0002c	b8 02 00 00 00	 mov	 eax, 2

; 465  : 	{
; 466  : 		return 0;
; 467  : 	}
; 468  : 	return 3;
; 469  : }

  00031	c3		 ret	 0
$LN6@GetEventSt:

; 457  : 	{
; 458  : 		return 1;

  00032	b8 01 00 00 00	 mov	 eax, 1

; 465  : 	{
; 466  : 		return 0;
; 467  : 	}
; 468  : 	return 3;
; 469  : }

  00037	c3		 ret	 0
?GetEventState@CImperialBattleOfKato@@QAEHXZ ENDP	; CImperialBattleOfKato::GetEventState
_TEXT	ENDS
PUBLIC	?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?GetUserCount@CImperialBattleUserMng@@QAEHXZ:PROC ; CImperialBattleUserMng::GetUserCount
EXTRN	?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A:BYTE ; g_ImperialBattleUserMng
; Function compile flags: /Ogtp
;	COMDAT ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z PROC ; CImperialBattleOfKato::SendImperialPlayers, COMDAT
; _this$ = ecx

; 472  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 473  : 	int index;
; 474  : 	for(int i=0; i < g_ImperialBattleUserMng.GetUserCount();++i)

  00004	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00009	33 ff		 xor	 edi, edi
  0000b	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00010	85 c0		 test	 eax, eax
  00012	7e 53		 jle	 SHORT $LN2@SendImperi
  00014	53		 push	 ebx
  00015	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  00018	56		 push	 esi
  00019	be 08 00 00 00	 mov	 esi, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+8
  0001e	8b ff		 npad	 2
$LL4@SendImperi:

; 475  : 	{
; 476  : 		index = g_ImperialBattleUserMng.m_BattleUser[i].GetIndex();

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 477  : 
; 478  : 		if(IMPERIAL_MAP_RANGE(gObj[index].MapNumber))

  00022	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00028	8b c1		 mov	 eax, ecx
  0002a	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00030	0f b6 84 10 49
	01 00 00	 movzx	 eax, BYTE PTR [eax+edx+329]
  00038	3c 45		 cmp	 al, 69			; 00000045H
  0003a	72 17		 jb	 SHORT $LN3@SendImperi
  0003c	b2 48		 mov	 dl, 72			; 00000048H
  0003e	3a d0		 cmp	 dl, al
  00040	1b c0		 sbb	 eax, eax
  00042	40		 inc	 eax
  00043	74 0e		 je	 SHORT $LN3@SendImperi

; 479  : 		{
; 480  : 			DataSend(index, lpMsg, iSize);

  00045	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00048	53		 push	 ebx
  00049	50		 push	 eax
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@SendImperi:

; 473  : 	int index;
; 474  : 	for(int i=0; i < g_ImperialBattleUserMng.GetUserCount();++i)

  00053	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00058	47		 inc	 edi
  00059	83 c6 0c	 add	 esi, 12			; 0000000cH
  0005c	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00061	3b f8		 cmp	 edi, eax
  00063	7c bb		 jl	 SHORT $LL4@SendImperi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
$LN2@SendImperi:
  00067	5f		 pop	 edi

; 481  : 		}	
; 482  : 	}
; 483  : }

  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ENDP ; CImperialBattleOfKato::SendImperialPlayers
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?SendEventInterface@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SendEventInterface, COMDAT
; _this$ = ecx

; 486  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 487  : 	PMSG_FORT_TIMER pMsg;
; 488  : 
; 489  : 	PHeadSubSetB((LPBYTE)&pMsg,0xF7,0x04,sizeof(pMsg));

  00011	6a 10		 push	 16			; 00000010H
  00013	6a 04		 push	 4
  00015	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00018	68 f7 00 00 00	 push	 247			; 000000f7H
  0001d	50		 push	 eax
  0001e	8b f1		 mov	 esi, ecx
  00020	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  00025	83 c4 10	 add	 esp, 16			; 00000010H

; 490  : 
; 491  : 	int Time = this->GetEventTime() * 4;

  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?GetEventTime@CImperialBattleOfKato@@QAEHXZ ; CImperialBattleOfKato::GetEventTime
  0002f	8b d0		 mov	 edx, eax
  00031	03 d2		 add	 edx, edx

; 492  : 
; 493  : 	pMsg.Status = this->GetEventState();

  00033	8b ce		 mov	 ecx, esi
  00035	03 d2		 add	 edx, edx
  00037	e8 00 00 00 00	 call	 ?GetEventState@CImperialBattleOfKato@@QAEHXZ ; CImperialBattleOfKato::GetEventState
  0003c	88 45 f0	 mov	 BYTE PTR _pMsg$[ebp+4], al

; 494  : 	pMsg.Unk1 = 1;

  0003f	b0 01		 mov	 al, 1

; 495  : 	pMsg.Unk2 = 1;
; 496  : 	pMsg.Unk3 = 0;

  00041	32 c0		 xor	 al, al

; 497  : 	pMsg.Unk5 = 0;
; 498  : 	pMsg.TimerH = HIBYTE(Time);

  00043	8b ca		 mov	 ecx, edx
  00045	c1 e9 08	 shr	 ecx, 8

; 499  : 	pMsg.TimerL = LOBYTE(Time);
; 500  : 	pMsg.Unk4 = 0;

  00048	88 45 f7	 mov	 BYTE PTR _pMsg$[ebp+11], al

; 501  : 	pMsg.Monster = this->m_BattleData.MonsterCount;
; 502  : 
; 503  : 	this->SendImperialPlayers((LPBYTE)&pMsg, pMsg.h.size);

  0004b	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0004f	88 4d f6	 mov	 BYTE PTR _pMsg$[ebp+10], cl
  00052	50		 push	 eax
  00053	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00056	88 55 f5	 mov	 BYTE PTR _pMsg$[ebp+9], dl
  00059	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  0005c	51		 push	 ecx
  0005d	8b ce		 mov	 ecx, esi
  0005f	c7 45 f1 01 01
	00 00		 mov	 DWORD PTR _pMsg$[ebp+5], 257 ; 00000101H
  00066	89 55 f8	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  00069	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers

; 504  : }

  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	5e		 pop	 esi
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SendEventInterface
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z	; CImperialBattleOfKato::SetMapAttr
; Function compile flags: /Ogtp
;	COMDAT ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z
_TEXT	SEGMENT
_Buff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_Gate$ = 8						; size = 4
?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z PROC		; CImperialBattleOfKato::SetMapAttr, COMDAT
; _this$ = ecx

; 507  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 508  : 	char Buff[256];
; 509  : 	short PacketSize = 0;
; 510  : 	PMSG_SETMAPATTR_COUNT * lpMsg = (PMSG_SETMAPATTR_COUNT *)(Buff);
; 511  : 	PMSG_SETMAPATTR * lpMsgBody = (PMSG_SETMAPATTR *)(Buff + sizeof(PMSG_SETMAPATTR_COUNT));
; 512  : 
; 513  : 	lpMsgBody[0].btX = g_KatoMapAttr[Gate].StartX;

  00013	8b 45 08	 mov	 eax, DWORD PTR _Gate$[ebp]
  00016	c1 e0 04	 shl	 eax, 4
  00019	0f b6 90 00 00
	00 00		 movzx	 edx, BYTE PTR _g_KatoMapAttr[eax]
  00020	88 95 03 ff ff
	ff		 mov	 BYTE PTR _Buff$[ebp+7], dl

; 514  : 	lpMsgBody[0].btY = g_KatoMapAttr[Gate].StartY;

  00026	0f b6 90 04 00
	00 00		 movzx	 edx, BYTE PTR _g_KatoMapAttr[eax+4]
  0002d	88 95 04 ff ff
	ff		 mov	 BYTE PTR _Buff$[ebp+8], dl

; 515  : 	lpMsgBody[1].btX = g_KatoMapAttr[Gate].EndX;

  00033	0f b6 90 08 00
	00 00		 movzx	 edx, BYTE PTR _g_KatoMapAttr[eax+8]

; 516  : 	lpMsgBody[1].btY = g_KatoMapAttr[Gate].EndY;

  0003a	8a 80 0c 00 00
	00		 mov	 al, BYTE PTR _g_KatoMapAttr[eax+12]
  00040	88 95 05 ff ff
	ff		 mov	 BYTE PTR _Buff$[ebp+9], dl
  00046	88 85 06 ff ff
	ff		 mov	 BYTE PTR _Buff$[ebp+10], al

; 517  : 
; 518  : 	PacketSize = (sizeof(PMSG_SETMAPATTR_COUNT)+6*sizeof(PMSG_SETMAPATTR));
; 519  : 
; 520  : 	lpMsg->btMapAttr = 16;
; 521  : 	lpMsg->btMapSetType = 1;
; 522  : 	lpMsg->btCount = 1;
; 523  : 	lpMsg->btType = 0;
; 524  : 
; 525  : 	lpMsg->h.c = 0xC1;
; 526  : 	lpMsg->h.headcode = 0x46;
; 527  : 	lpMsg->h.size = PacketSize;
; 528  : 
; 529  : 	this->SendImperialPlayers((LPBYTE)Buff, PacketSize);

  0004c	6a 13		 push	 19			; 00000013H
  0004e	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00054	b0 01		 mov	 al, 1
  00056	52		 push	 edx
  00057	88 85 02 ff ff
	ff		 mov	 BYTE PTR _Buff$[ebp+6], al
  0005d	c7 85 fe fe ff
	ff 46 00 10 01	 mov	 DWORD PTR _Buff$[ebp+2], 17825862 ; 01100046H
  00067	66 c7 85 fc fe
	ff ff c1 13	 mov	 WORD PTR _Buff$[ebp], 5057 ; 000013c1H
  00070	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers

; 530  : }

  00075	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00078	33 cd		 xor	 ecx, ebp
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ENDP		; CImperialBattleOfKato::SetMapAttr
_TEXT	ENDS
PUBLIC	?MonsterProc@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::MonsterProc
EXTRN	?FindGroupMemberObjectIndex@TMonsterAIGroup@@SAHHH@Z:PROC ; TMonsterAIGroup::FindGroupMemberObjectIndex
EXTRN	?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA:BYTE ; TMonsterAIGroup::s_iMonsterAIGroupMemberCount
; Function compile flags: /Ogtp
;	COMDAT ?MonsterProc@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?MonsterProc@CImperialBattleOfKato@@QAEXXZ PROC		; CImperialBattleOfKato::MonsterProc, COMDAT
; _this$ = ecx

; 533  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 534  : 	short alivecount = 0;
; 535  : 	for(int i=0;i<TMonsterAIGroup::s_iMonsterAIGroupMemberCount[this->m_BattleData.CurrentAIGroup];++i)

  00004	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00007	57		 push	 edi
  00008	33 db		 xor	 ebx, ebx
  0000a	33 ff		 xor	 edi, edi
  0000c	39 1c 85 00 00
	00 00		 cmp	 DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA[eax*4], ebx
  00013	7e 38		 jle	 SHORT $LN9@MonsterPro
$LL4@MonsterPro:

; 536  : 	{
; 537  : 		if(gObj[TMonsterAIGroup::FindGroupMemberObjectIndex(this->m_BattleData.CurrentAIGroup, i)].Live == true)

  00015	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?FindGroupMemberObjectIndex@TMonsterAIGroup@@SAHHH@Z ; TMonsterAIGroup::FindGroupMemberObjectIndex
  0001f	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002b	83 c4 08	 add	 esp, 8
  0002e	80 7c 10 6a 01	 cmp	 BYTE PTR [eax+edx+106], 1
  00033	75 01		 jne	 SHORT $LN3@MonsterPro

; 538  : 		{
; 539  : 			++alivecount;

  00035	43		 inc	 ebx
$LN3@MonsterPro:

; 534  : 	short alivecount = 0;
; 535  : 	for(int i=0;i<TMonsterAIGroup::s_iMonsterAIGroupMemberCount[this->m_BattleData.CurrentAIGroup];++i)

  00036	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00039	47		 inc	 edi
  0003a	3b 3c 85 00 00
	00 00		 cmp	 edi, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA[eax*4]
  00041	7c d2		 jl	 SHORT $LL4@MonsterPro

; 540  : 		}
; 541  : 	}
; 542  : 	this->m_BattleData.MonsterCount = alivecount;

  00043	0f bf cb	 movsx	 ecx, bx
  00046	5f		 pop	 edi
  00047	89 4e 44	 mov	 DWORD PTR [esi+68], ecx
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 543  : }

  0004c	c3		 ret	 0
$LN9@MonsterPro:

; 540  : 		}
; 541  : 	}
; 542  : 	this->m_BattleData.MonsterCount = alivecount;

  0004d	0f bf d3	 movsx	 edx, bx
  00050	5f		 pop	 edi
  00051	89 56 44	 mov	 DWORD PTR [esi+68], edx
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx

; 543  : }

  00056	c3		 ret	 0
?MonsterProc@CImperialBattleOfKato@@QAEXXZ ENDP		; CImperialBattleOfKato::MonsterProc
_TEXT	ENDS
PUBLIC	?OperatePortalGate@CImperialBattleOfKato@@QAEX_N0H@Z ; CImperialBattleOfKato::OperatePortalGate
; Function compile flags: /Ogtp
;	COMDAT ?OperatePortalGate@CImperialBattleOfKato@@QAEX_N0H@Z
_TEXT	SEGMENT
_Block$ = 8						; size = 1
_ForAll$ = 12						; size = 1
_aIndex$ = 16						; size = 4
?OperatePortalGate@CImperialBattleOfKato@@QAEX_N0H@Z PROC ; CImperialBattleOfKato::OperatePortalGate, COMDAT
; _this$ = ecx

; 547  : 	return;
; 548  : }

  00000	c2 0c 00	 ret	 12			; 0000000cH
?OperatePortalGate@CImperialBattleOfKato@@QAEX_N0H@Z ENDP ; CImperialBattleOfKato::OperatePortalGate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendEventState@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SendEventState
; Function compile flags: /Ogtp
;	COMDAT ?SendEventState@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_State$ = -20						; size = 4
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?SendEventState@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SendEventState, COMDAT
; _this$ = ecx

; 580  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 581  : 	PMSG_FORT_ENTER_RESULT pMsg;
; 582  : 
; 583  : 	PHeadSubSetB((LPBYTE)&pMsg, 0xF7, 0x02, sizeof(pMsg));

  00011	6a 0c		 push	 12			; 0000000cH
  00013	6a 02		 push	 2
  00015	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00018	68 f7 00 00 00	 push	 247			; 000000f7H
  0001d	50		 push	 eax
  0001e	8b f1		 mov	 esi, ecx
  00020	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 584  : 
; 585  : 	pMsg.EntryTime = 0;
; 586  : 	pMsg.Day = 3;
; 587  : 	pMsg.Result = 0;
; 588  : 	
; 589  : 	int State;
; 590  : 
; 591  : 	if(this->m_BattleData.CurrentState == 1 || this->m_BattleData.CurrentState == 2)

  00025	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00028	33 c9		 xor	 ecx, ecx
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	66 89 4d fa	 mov	 WORD PTR _pMsg$[ebp+10], cx
  00031	b9 03 00 00 00	 mov	 ecx, 3
  00036	66 c7 45 f4 00
	03		 mov	 WORD PTR _pMsg$[ebp+4], 768 ; 00000300H
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	74 23		 je	 SHORT $LN7@SendEventS
  00041	83 f8 02	 cmp	 eax, 2
  00044	74 1e		 je	 SHORT $LN7@SendEventS

; 594  : 	}
; 595  : 	else if(this->m_BattleData.CurrentState == 3 || this->m_BattleData.CurrentState == 4)

  00046	3b c1		 cmp	 eax, ecx
  00048	74 13		 je	 SHORT $LN4@SendEventS
  0004a	83 f8 04	 cmp	 eax, 4
  0004d	74 0e		 je	 SHORT $LN4@SendEventS

; 598  : 	}
; 599  : 	else if(this->m_BattleData.CurrentState == 5 || this->m_BattleData.CurrentState == 6)

  0004f	83 f8 05	 cmp	 eax, 5
  00052	74 05		 je	 SHORT $LN1@SendEventS
  00054	83 f8 06	 cmp	 eax, 6
  00057	75 12		 jne	 SHORT $LN11@SendEventS
$LN1@SendEventS:

; 600  : 	{
; 601  : 		State = 3;

  00059	8b c1		 mov	 eax, ecx
  0005b	eb 11		 jmp	 SHORT $LN2@SendEventS
$LN4@SendEventS:

; 596  : 	{
; 597  : 		State = 2;

  0005d	b8 02 00 00 00	 mov	 eax, 2
  00062	eb 0a		 jmp	 SHORT $LN2@SendEventS
$LN7@SendEventS:

; 592  : 	{
; 593  : 		State = 1;

  00064	b8 01 00 00 00	 mov	 eax, 1
  00069	eb 03		 jmp	 SHORT $LN2@SendEventS
$LN11@SendEventS:
  0006b	8a 45 ec	 mov	 al, BYTE PTR _State$[ebp]
$LN2@SendEventS:

; 602  : 	}
; 603  : 
; 604  : 	pMsg.State = State;
; 605  : 	pMsg.Unk = 3;
; 606  : 
; 607  : 	this->SendImperialPlayers((LPBYTE)&pMsg, pMsg.h.size);

  0006e	0f b6 55 f1	 movzx	 edx, BYTE PTR _pMsg$[ebp+1]
  00072	88 45 f6	 mov	 BYTE PTR _pMsg$[ebp+6], al
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00079	88 4d f7	 mov	 BYTE PTR _pMsg$[ebp+7], cl
  0007c	50		 push	 eax
  0007d	8b ce		 mov	 ecx, esi
  0007f	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers

; 608  : }

  00084	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00087	33 cd		 xor	 ecx, ebp
  00089	5e		 pop	 esi
  0008a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?SendEventState@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SendEventState
_TEXT	ENDS
PUBLIC	??0CImperialBattleOfKato@@QAE@XZ		; CImperialBattleOfKato::CImperialBattleOfKato
; Function compile flags: /Ogtp
;	COMDAT ??0CImperialBattleOfKato@@QAE@XZ
_TEXT	SEGMENT
??0CImperialBattleOfKato@@QAE@XZ PROC			; CImperialBattleOfKato::CImperialBattleOfKato, COMDAT
; _this$ = ecx

; 13   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CImperialBattleOfKato@@6B@

; 14   : 	this->ResetData();

  00006	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ResetData

; 15   : }

  0000b	8b c1		 mov	 eax, ecx
  0000d	c3		 ret	 0
??0CImperialBattleOfKato@@QAE@XZ ENDP			; CImperialBattleOfKato::CImperialBattleOfKato
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCImperialBattleOfKato@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImperialBattleOfKato@@UAEPAXI@Z PROC		; CImperialBattleOfKato::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CImperialBattleOfKato@@UAE@XZ ; CImperialBattleOfKato::~CImperialBattleOfKato
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCImperialBattleOfKato@@UAEPAXI@Z ENDP		; CImperialBattleOfKato::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0ED@BIMKKCBK@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	??_C@_0DJ@IAAKIPBD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	?SetState_STANDBY1@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_STANDBY1
EXTRN	?Init@TMonsterAIGroup@@SAXH@Z:PROC		; TMonsterAIGroup::Init
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
EXTRN	?gObjAddMonster@@YAFH@Z:PROC			; gObjAddMonster
;	COMDAT ??_C@_0ED@BIMKKCBK@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0ED@BIMKKCBK@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] Create Gate Index: %d Class:'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IAAKIPBD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DJ@IAAKIPBD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> STANDBY1', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_STANDBY1@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?SetState_STANDBY1@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_STANDBY1, COMDAT
; _this$ = ecx

; 69   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b d9		 mov	 ebx, ecx

; 70   : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> STANDBY1", this->m_BattleData.CurrentState);

  00004	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00007	57		 push	 edi
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@IAAKIPBD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0000e	6a 02		 push	 2
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	bf 04 00 00 00	 mov	 edi, OFFSET _g_KatoGate+4
  0001e	8d 73 14	 lea	 esi, DWORD PTR [ebx+20]
$LL4@SetState_S:

; 72   : 	{
; 73   : 		this->m_BattleData.GateIndex[i] = gObjAddMonster(71);

  00021	6a 47		 push	 71			; 00000047H
  00023	e8 00 00 00 00	 call	 ?gObjAddMonster@@YAFH@Z	; gObjAddMonster
  00028	98		 cwde
  00029	83 c4 04	 add	 esp, 4
  0002c	89 06		 mov	 DWORD PTR [esi], eax

; 74   : 		if(this->m_BattleData.GateIndex[i] >= 0)

  0002e	85 c0		 test	 eax, eax
  00030	0f 88 47 01 00
	00		 js	 $LN3@SetState_S

; 75   : 		{
; 76   : 			gObj[this->m_BattleData.GateIndex[i]].MapNumber = 71;

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003c	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00042	c6 84 08 49 01
	00 00 47	 mov	 BYTE PTR [eax+ecx+329], 71 ; 00000047H

; 77   : 			gObj[this->m_BattleData.GateIndex[i]].X = g_KatoGate[i].X;

  0004a	8b 16		 mov	 edx, DWORD PTR [esi]
  0004c	0f b7 07	 movzx	 eax, WORD PTR [edi]
  0004f	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005b	66 89 84 0a 44
	01 00 00	 mov	 WORD PTR [edx+ecx+324], ax

; 78   : 			gObj[this->m_BattleData.GateIndex[i]].Y = g_KatoGate[i].Y;

  00063	8b 16		 mov	 edx, DWORD PTR [esi]
  00065	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  00069	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0006f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00075	66 89 84 0a 46
	01 00 00	 mov	 WORD PTR [edx+ecx+326], ax

; 79   : 			gObj[this->m_BattleData.GateIndex[i]].Dir = g_KatoGate[i].Dir;

  0007d	8b 16		 mov	 edx, DWORD PTR [esi]
  0007f	0f b6 47 08	 movzx	 eax, BYTE PTR [edi+8]
  00083	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0008f	88 84 0a 48 01
	00 00		 mov	 BYTE PTR [edx+ecx+328], al

; 80   : 			gObj[this->m_BattleData.GateIndex[i]].TX = g_KatoGate[i].X;

  00096	8b 16		 mov	 edx, DWORD PTR [esi]
  00098	0f b7 07	 movzx	 eax, WORD PTR [edi]
  0009b	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a7	66 89 84 0a 7c
	01 00 00	 mov	 WORD PTR [edx+ecx+380], ax

; 81   : 			gObj[this->m_BattleData.GateIndex[i]].TY = g_KatoGate[i].Y;

  000af	8b 16		 mov	 edx, DWORD PTR [esi]
  000b1	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  000b5	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c1	66 89 84 0a 7e
	01 00 00	 mov	 WORD PTR [edx+ecx+382], ax

; 82   : 			gObj[this->m_BattleData.GateIndex[i]].StartX = g_KatoGate[i].X;

  000c9	8b 16		 mov	 edx, DWORD PTR [esi]
  000cb	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  000ce	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000da	88 84 0a 76 01
	00 00		 mov	 BYTE PTR [edx+ecx+374], al

; 83   : 			gObj[this->m_BattleData.GateIndex[i]].StartY = g_KatoGate[i].Y;

  000e1	8b 16		 mov	 edx, DWORD PTR [esi]
  000e3	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  000e7	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000f3	88 84 0a 77 01
	00 00		 mov	 BYTE PTR [edx+ecx+375], al

; 84   : 			gObj[this->m_BattleData.GateIndex[i]].m_OldX = g_KatoGate[i].X;

  000fa	8b 16		 mov	 edx, DWORD PTR [esi]
  000fc	0f b7 07	 movzx	 eax, WORD PTR [edi]
  000ff	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0010b	66 89 84 0a 78
	01 00 00	 mov	 WORD PTR [edx+ecx+376], ax

; 85   : 			gObj[this->m_BattleData.GateIndex[i]].m_OldY = g_KatoGate[i].Y;

  00113	8b 16		 mov	 edx, DWORD PTR [esi]
  00115	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  00119	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0011f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00125	66 89 84 0a 7a
	01 00 00	 mov	 WORD PTR [edx+ecx+378], ax

; 86   : 			gObjSetMonster(this->m_BattleData.GateIndex[i], g_KatoGate[i].Class);

  0012d	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00130	8b 06		 mov	 eax, DWORD PTR [esi]
  00132	52		 push	 edx
  00133	50		 push	 eax
  00134	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster

; 87   : 			gObj[this->m_BattleData.GateIndex[i]].m_ImmuneToHarmCount = 3600; // IMMUNITY FOR GATES

  00139	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00140	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00146	ba 10 0e 00 00	 mov	 edx, 3600		; 00000e10H
  0014b	66 89 94 01 84
	22 00 00	 mov	 WORD PTR [ecx+eax+8836], dx

; 88   : 			gObj[this->m_BattleData.GateIndex[i]].m_ImmuneToMagicCount = 3600; // IMMUNITY FOR GATES

  00153	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00155	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0015a	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00160	66 89 94 01 82
	22 00 00	 mov	 WORD PTR [ecx+eax+8834], dx

; 89   : 
; 90   : 			LogAddTD("[ IMPERIAL FORT ] [ BattleOfKato ] Create Gate Index: %d Class: %d",
; 91   : 				this->m_BattleData.GateIndex[i], g_KatoGate[i].Class);

  00168	8b 4f fc	 mov	 ecx, DWORD PTR [edi-4]
  0016b	8b 16		 mov	 edx, DWORD PTR [esi]
  0016d	51		 push	 ecx
  0016e	52		 push	 edx
  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@BIMKKCBK@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  00174	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0017a	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@SetState_S:

; 71   : 	for(int i=0;i<7;++i)

  0017d	83 c7 10	 add	 edi, 16			; 00000010H
  00180	83 c6 04	 add	 esi, 4
  00183	81 ff 74 00 00
	00		 cmp	 edi, OFFSET _g_KatoGate+116
  00189	0f 8c 92 fe ff
	ff		 jl	 $LL4@SetState_S

; 92   : 		}
; 93   : 	}
; 94   : 	this->m_BattleData.Time = 60000;

  0018f	c7 43 38 60 ea
	00 00		 mov	 DWORD PTR [ebx+56], 60000 ; 0000ea60H

; 95   : 	this->m_BattleData.TickCount = GetTickCount();

  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 96   : 	TMonsterAIGroup::Init(30);

  0019c	6a 1e		 push	 30			; 0000001eH
  0019e	89 43 3c	 mov	 DWORD PTR [ebx+60], eax
  001a1	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init
  001a6	83 c4 04	 add	 esp, 4
  001a9	5f		 pop	 edi
  001aa	5e		 pop	 esi

; 97   : 	this->m_BattleData.MonsterCount = 0;

  001ab	c7 43 44 00 00
	00 00		 mov	 DWORD PTR [ebx+68], 0

; 98   : 	this->m_BattleData.CurrentAIGroup = 30;

  001b2	c7 43 48 1e 00
	00 00		 mov	 DWORD PTR [ebx+72], 30	; 0000001eH

; 99   : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_STANDBY1;

  001b9	c7 43 40 01 00
	00 00		 mov	 DWORD PTR [ebx+64], 1

; 100  : 	this->SendEventState();

  001c0	8b cb		 mov	 ecx, ebx
  001c2	5b		 pop	 ebx
  001c3	e9 00 00 00 00	 jmp	 ?SendEventState@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventState
?SetState_STANDBY1@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_STANDBY1
_TEXT	ENDS
PUBLIC	??_C@_0DJ@KLCHNMNA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	?SetState_STANDBY2@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_STANDBY2
;	COMDAT ??_C@_0DJ@KLCHNMNA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DJ@KLCHNMNA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> STANDBY2', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_STANDBY2@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?SetState_STANDBY2@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_STANDBY2, COMDAT
; _this$ = ecx

; 104  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 105  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> STANDBY2", this->m_BattleData.CurrentState);

  00003	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@KLCHNMNA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0000c	6a 02		 push	 2
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	this->m_BattleData.Time = 60000;

  00017	c7 46 38 60 ea
	00 00		 mov	 DWORD PTR [esi+56], 60000 ; 0000ea60H

; 107  : 	this->m_BattleData.TickCount = GetTickCount();

  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 108  : 	TMonsterAIGroup::DelGroupInstance(30);

  00024	6a 1e		 push	 30			; 0000001eH
  00026	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00029	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 109  : 	TMonsterAIGroup::Init(31);

  0002e	6a 1f		 push	 31			; 0000001fH
  00030	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init
  00035	83 c4 08	 add	 esp, 8

; 110  : 	this->m_BattleData.MonsterCount = 0;

  00038	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0

; 111  : 	this->m_BattleData.CurrentAIGroup = 31;

  0003f	c7 46 48 1f 00
	00 00		 mov	 DWORD PTR [esi+72], 31	; 0000001fH

; 112  : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_STANDBY2;

  00046	c7 46 40 03 00
	00 00		 mov	 DWORD PTR [esi+64], 3

; 113  : 	this->SendEventState();

  0004d	8b ce		 mov	 ecx, esi
  0004f	5e		 pop	 esi
  00050	e9 00 00 00 00	 jmp	 ?SendEventState@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventState
?SetState_STANDBY2@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_STANDBY2
_TEXT	ENDS
PUBLIC	??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@ ; `string'
PUBLIC	??_C@_0DJ@LCDMONJB@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	?SetState_STANDBY3@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_STANDBY3
EXTRN	?FindGroupLeader@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::FindGroupLeader
;	COMDAT ??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@
CONST	SEGMENT
??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@ DB '['
	DB	' IMPERIAL FORT ] Create BOSS %s Index: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LCDMONJB@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DJ@LCDMONJB@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> STANDBY3', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_STANDBY3@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?SetState_STANDBY3@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_STANDBY3, COMDAT
; _this$ = ecx

; 117  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 118  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> STANDBY3", this->m_BattleData.CurrentState);

  00003	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@LCDMONJB@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0000c	6a 02		 push	 2
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 119  : 
; 120  : 	this->m_BattleData.Time = 60000;

  00017	c7 46 38 60 ea
	00 00		 mov	 DWORD PTR [esi+56], 60000 ; 0000ea60H

; 121  : 	this->m_BattleData.TickCount = GetTickCount();

  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 122  : 	TMonsterAIGroup::DelGroupInstance(31);

  00024	6a 1f		 push	 31			; 0000001fH
  00026	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00029	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 123  : 	TMonsterAIGroup::Init(32);

  0002e	6a 20		 push	 32			; 00000020H
  00030	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init

; 124  : 	this->m_BattleData.MonsterCount = 0;
; 125  : 	this->m_BattleData.CurrentLeaderIndex = TMonsterAIGroup::FindGroupLeader(32);

  00035	6a 20		 push	 32			; 00000020H
  00037	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  0003e	e8 00 00 00 00	 call	 ?FindGroupLeader@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::FindGroupLeader

; 126  : 	LogAddTD("[ IMPERIAL FORT ] Create BOSS %s Index: %d", gObj[this->m_BattleData.CurrentLeaderIndex].Name, this->m_BattleData.CurrentLeaderIndex);

  00043	50		 push	 eax
  00044	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00047	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00053	8d 54 08 77	 lea	 edx, DWORD PTR [eax+ecx+119]
  00057	52		 push	 edx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00063	83 c4 18	 add	 esp, 24			; 00000018H

; 127  : 	this->m_BattleData.CurrentAIGroup = 32;

  00066	c7 46 48 20 00
	00 00		 mov	 DWORD PTR [esi+72], 32	; 00000020H

; 128  : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_STANDBY3;

  0006d	c7 46 40 05 00
	00 00		 mov	 DWORD PTR [esi+64], 5

; 129  : 	this->SendEventState();

  00074	8b ce		 mov	 ecx, esi
  00076	5e		 pop	 esi
  00077	e9 00 00 00 00	 jmp	 ?SendEventState@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventState
?SetState_STANDBY3@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_STANDBY3
_TEXT	ENDS
PUBLIC	??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@	; `string'
PUBLIC	??_C@_0DH@NFEPMFAA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetState_PHAZE1@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SetState_PHAZE1
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
EXTRN	?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z:PROC	; TMonsterAIGroup::ChangeAIOrder
;	COMDAT ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
CONST	SEGMENT
??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@ DB 'Quest Started!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NFEPMFAA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DH@NFEPMFAA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> PHAZE1', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_PHAZE1@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
?SetState_PHAZE1@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_PHAZE1, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 134  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> PHAZE1", this->m_BattleData.CurrentState);

  00016	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@NFEPMFAA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0001f	6a 02		 push	 2
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 135  : 	gObj[this->m_BattleData.GateIndex[0]].m_ImmuneToHarmCount = 0;

  00027	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002f	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00035	33 d2		 xor	 edx, edx
  00037	66 89 94 01 84
	22 00 00	 mov	 WORD PTR [ecx+eax+8836], dx

; 136  : 	gObj[this->m_BattleData.GateIndex[0]].m_ImmuneToMagicCount = 0; // REMOVE IMMUNITY

  0003f	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00047	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0004d	66 89 94 01 82
	22 00 00	 mov	 WORD PTR [ecx+eax+8834], dx
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH

; 137  : 	this->m_BattleData.Time = 600000;

  00058	c7 46 38 c0 27
	09 00		 mov	 DWORD PTR [esi+56], 600000 ; 000927c0H

; 138  : 	this->m_BattleData.TickCount = GetTickCount();

  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 139  : 	TMonsterAIGroup::ChangeAIOrder(30, 1);

  00065	6a 01		 push	 1
  00067	6a 1e		 push	 30			; 0000001eH
  00069	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  0006c	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder

; 140  : 	this->m_BattleData.MonsterCount = TMonsterAIGroup::s_iMonsterAIGroupMemberCount[27];

  00071	8b 0d 6c 00 00
	00		 mov	 ecx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA+108

; 141  : 	this->m_BattleData.PhazeStep = 0;
; 142  : 	this->m_BattleData.NotifyCount = -1;
; 143  : 	PMSG_NOTICE pNotice;
; 144  : 	TNotice::MakeNoticeMsg(&pNotice, 0, "Quest Started!");

  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
  0007c	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00082	6a 00		 push	 0
  00084	52		 push	 edx
  00085	89 4e 44	 mov	 DWORD PTR [esi+68], ecx
  00088	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  0008f	c6 46 54 ff	 mov	 BYTE PTR [esi+84], 255	; 000000ffH
  00093	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 145  : 	this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00098	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0009f	83 c4 14	 add	 esp, 20			; 00000014H
  000a2	50		 push	 eax
  000a3	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  000a9	51		 push	 ecx
  000aa	8b ce		 mov	 ecx, esi
  000ac	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers

; 146  : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_PHAZE1;
; 147  : }

  000b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b4	c7 46 40 02 00
	00 00		 mov	 DWORD PTR [esi+64], 2
  000bb	33 cd		 xor	 ecx, ebp
  000bd	5e		 pop	 esi
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
?SetState_PHAZE1@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_PHAZE1
_TEXT	ENDS
PUBLIC	??_C@_0DH@POGCJGMD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetState_PHAZE2@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SetState_PHAZE2
;	COMDAT ??_C@_0DH@POGCJGMD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DH@POGCJGMD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> PHAZE2', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_PHAZE2@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
?SetState_PHAZE2@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_PHAZE2, COMDAT
; _this$ = ecx

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 151  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> PHAZE2", this->m_BattleData.CurrentState);

  00016	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@POGCJGMD@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0001f	6a 02		 push	 2
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 152  : 	gObj[this->m_BattleData.GateIndex[3]].m_ImmuneToHarmCount = 0;

  00027	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002f	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00035	33 d2		 xor	 edx, edx
  00037	66 89 94 01 84
	22 00 00	 mov	 WORD PTR [ecx+eax+8836], dx

; 153  : 	gObj[this->m_BattleData.GateIndex[3]].m_ImmuneToMagicCount = 0; // REMOVE IMMUNITY

  0003f	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00047	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0004d	66 89 94 01 82
	22 00 00	 mov	 WORD PTR [ecx+eax+8834], dx
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH

; 154  : 	this->m_BattleData.Time = 600000;

  00058	c7 46 38 c0 27
	09 00		 mov	 DWORD PTR [esi+56], 600000 ; 000927c0H

; 155  : 	this->m_BattleData.TickCount = GetTickCount();

  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 156  : 	TMonsterAIGroup::ChangeAIOrder(31, 1);

  00065	6a 01		 push	 1
  00067	6a 1f		 push	 31			; 0000001fH
  00069	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  0006c	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder

; 157  : 	this->m_BattleData.MonsterCount = TMonsterAIGroup::s_iMonsterAIGroupMemberCount[28];

  00071	8b 0d 70 00 00
	00		 mov	 ecx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA+112

; 158  : 	this->m_BattleData.PhazeStep = 0;
; 159  : 	this->m_BattleData.NotifyCount = -1;
; 160  : 	PMSG_NOTICE pNotice;
; 161  : 	TNotice::MakeNoticeMsg(&pNotice, 0, "Quest Started!");

  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
  0007c	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00082	6a 00		 push	 0
  00084	52		 push	 edx
  00085	89 4e 44	 mov	 DWORD PTR [esi+68], ecx
  00088	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  0008f	c6 46 54 ff	 mov	 BYTE PTR [esi+84], 255	; 000000ffH
  00093	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 162  : 	this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00098	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0009f	83 c4 14	 add	 esp, 20			; 00000014H
  000a2	50		 push	 eax
  000a3	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  000a9	51		 push	 ecx
  000aa	8b ce		 mov	 ecx, esi
  000ac	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers

; 163  : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_PHAZE2;
; 164  : }

  000b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b4	c7 46 40 04 00
	00 00		 mov	 DWORD PTR [esi+64], 4
  000bb	33 cd		 xor	 ecx, ebp
  000bd	5e		 pop	 esi
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
?SetState_PHAZE2@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_PHAZE2
_TEXT	ENDS
PUBLIC	??_C@_0DH@OHHJKHIC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetState_PHAZE3@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SetState_PHAZE3
;	COMDAT ??_C@_0DH@OHHJKHIC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
CONST	SEGMENT
??_C@_0DH@OHHJKHIC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> PHAZE3', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_PHAZE3@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
?SetState_PHAZE3@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetState_PHAZE3, COMDAT
; _this$ = ecx

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 168  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfKato ] State(%d) -> PHAZE3", this->m_BattleData.CurrentState);

  00016	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@OHHJKHIC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfKato@
  0001f	6a 02		 push	 2
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 169  : 	gObj[this->m_BattleData.GateIndex[6]].m_ImmuneToHarmCount = 0;

  00027	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002f	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00035	33 d2		 xor	 edx, edx
  00037	66 89 94 01 84
	22 00 00	 mov	 WORD PTR [ecx+eax+8836], dx

; 170  : 	gObj[this->m_BattleData.GateIndex[6]].m_ImmuneToMagicCount = 0; // REMOVE IMMUNITY

  0003f	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00047	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0004d	66 89 94 01 82
	22 00 00	 mov	 WORD PTR [ecx+eax+8834], dx
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 	this->m_BattleData.Time = 600000;

  00058	c7 46 38 c0 27
	09 00		 mov	 DWORD PTR [esi+56], 600000 ; 000927c0H

; 172  : 	this->m_BattleData.TickCount = GetTickCount();

  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 173  : 	TMonsterAIGroup::ChangeAIOrder(32, 1);

  00065	6a 01		 push	 1
  00067	6a 20		 push	 32			; 00000020H
  00069	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  0006c	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder

; 174  : 	this->m_BattleData.MonsterCount = TMonsterAIGroup::s_iMonsterAIGroupMemberCount[29];

  00071	8b 0d 74 00 00
	00		 mov	 ecx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA+116

; 175  : 	this->m_BattleData.PhazeStep = 0;
; 176  : 	this->m_BattleData.NotifyCount = -1;
; 177  : 	PMSG_NOTICE pNotice;
; 178  : 	TNotice::MakeNoticeMsg(&pNotice, 0, "Quest Started!");

  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
  0007c	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00082	6a 00		 push	 0
  00084	52		 push	 edx
  00085	89 4e 44	 mov	 DWORD PTR [esi+68], ecx
  00088	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  0008f	c6 46 54 ff	 mov	 BYTE PTR [esi+84], 255	; 000000ffH
  00093	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 179  : 	this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00098	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0009f	83 c4 14	 add	 esp, 20			; 00000014H
  000a2	50		 push	 eax
  000a3	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  000a9	51		 push	 ecx
  000aa	8b ce		 mov	 ecx, esi
  000ac	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers

; 180  : 	this->m_BattleData.CurrentState = BATTLEOFKATO_STATE_PHAZE3;
; 181  : }

  000b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b4	c7 46 40 06 00
	00 00		 mov	 DWORD PTR [esi+64], 6
  000bb	33 cd		 xor	 ecx, ebp
  000bd	5e		 pop	 esi
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
?SetState_PHAZE3@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetState_PHAZE3
_TEXT	ENDS
PUBLIC	?SetState@CImperialBattleOfKato@@QAEXH@Z	; CImperialBattleOfKato::SetState
; Function compile flags: /Ogtp
;	COMDAT ?SetState@CImperialBattleOfKato@@QAEXH@Z
_TEXT	SEGMENT
_iState$ = 8						; size = 4
?SetState@CImperialBattleOfKato@@QAEXH@Z PROC		; CImperialBattleOfKato::SetState, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 	switch ( iState )

  00003	8b 45 08	 mov	 eax, DWORD PTR _iState$[ebp]
  00006	83 f8 07	 cmp	 eax, 7
  00009	77 4b		 ja	 SHORT $LN9@SetState
  0000b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN13@SetState[eax*4]
$LN8@SetState:

; 29   : 	{
; 30   : 		case 0:
; 31   : 			this->SetState_NONE();

  00012	e8 00 00 00 00	 call	 ?SetState_NONE@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_NONE

; 53   : 			break;
; 54   : 	}
; 55   : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
$LN7@SetState:

; 32   : 			break;
; 33   : 		case 1:
; 34   : 			this->SetState_STANDBY1();

  0001b	e8 00 00 00 00	 call	 ?SetState_STANDBY1@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_STANDBY1

; 53   : 			break;
; 54   : 	}
; 55   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN6@SetState:

; 35   : 			break;
; 36   : 		case 2:
; 37   : 			this->SetState_PHAZE1();

  00024	e8 00 00 00 00	 call	 ?SetState_PHAZE1@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_PHAZE1

; 53   : 			break;
; 54   : 	}
; 55   : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
$LN5@SetState:

; 38   : 			break;
; 39   : 		case 3:
; 40   : 			this->SetState_STANDBY2();

  0002d	e8 00 00 00 00	 call	 ?SetState_STANDBY2@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_STANDBY2

; 53   : 			break;
; 54   : 	}
; 55   : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN4@SetState:

; 41   : 			break;
; 42   : 		case 4:
; 43   : 			this->SetState_PHAZE2();

  00036	e8 00 00 00 00	 call	 ?SetState_PHAZE2@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_PHAZE2

; 53   : 			break;
; 54   : 	}
; 55   : }

  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
$LN3@SetState:

; 44   : 			break;
; 45   : 		case 5: 
; 46   : 			this->SetState_STANDBY3();

  0003f	e8 00 00 00 00	 call	 ?SetState_STANDBY3@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_STANDBY3

; 53   : 			break;
; 54   : 	}
; 55   : }

  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
$LN2@SetState:

; 47   : 			break;
; 48   : 		case 6:
; 49   : 			this->SetState_PHAZE3();

  00048	e8 00 00 00 00	 call	 ?SetState_PHAZE3@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_PHAZE3

; 53   : 			break;
; 54   : 	}
; 55   : }

  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
$LN1@SetState:

; 50   : 			break;
; 51   : 		case 7:
; 52   : 			this->SetState_END();

  00051	e8 00 00 00 00	 call	 ?SetState_END@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetState_END
$LN9@SetState:

; 53   : 			break;
; 54   : 	}
; 55   : }

  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
  0005a	8b ff		 npad	 2
$LN13@SetState:
  0005c	00 00 00 00	 DD	 $LN8@SetState
  00060	00 00 00 00	 DD	 $LN7@SetState
  00064	00 00 00 00	 DD	 $LN6@SetState
  00068	00 00 00 00	 DD	 $LN5@SetState
  0006c	00 00 00 00	 DD	 $LN4@SetState
  00070	00 00 00 00	 DD	 $LN3@SetState
  00074	00 00 00 00	 DD	 $LN2@SetState
  00078	00 00 00 00	 DD	 $LN1@SetState
?SetState@CImperialBattleOfKato@@QAEXH@Z ENDP		; CImperialBattleOfKato::SetState
_TEXT	ENDS
PUBLIC	?ProcState_STANDBY1@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_STANDBY1
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_STANDBY1@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?ProcState_STANDBY1@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_STANDBY1, COMDAT
; _this$ = ecx

; 223  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 224  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  00008	8b f1		 mov	 esi, ecx
  0000a	ff d7		 call	 edi
  0000c	2b 46 3c	 sub	 eax, DWORD PTR [esi+60]

; 225  : 	if(Tick >= 1000)

  0000f	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00014	7c 1e		 jl	 SHORT $LN1@ProcState_

; 226  : 	{
; 227  : 		this->m_BattleData.Time -= Tick;

  00016	29 46 38	 sub	 DWORD PTR [esi+56], eax

; 228  : 		this->m_BattleData.TickCount = GetTickCount();

  00019	ff d7		 call	 edi

; 229  : 
; 230  : 		this->SendEventInterface();

  0001b	8b ce		 mov	 ecx, esi
  0001d	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00020	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface

; 231  : 
; 232  : 		if(this->m_BattleData.Time <= 0)

  00025	83 7e 38 00	 cmp	 DWORD PTR [esi+56], 0
  00029	7f 09		 jg	 SHORT $LN1@ProcState_

; 233  : 		{
; 234  : 			this->SetState(BATTLEOFKATO_STATE_PHAZE1);

  0002b	6a 02		 push	 2
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN1@ProcState_:

; 235  : 		}
; 236  : 	}
; 237  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	c3		 ret	 0
?ProcState_STANDBY1@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_STANDBY1
_TEXT	ENDS
PUBLIC	??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?ProcState_PHAZE1@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::ProcState_PHAZE1
EXTRN	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ:PROC	; TNotice::MakeNoticeMsgEx
EXTRN	?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z:PROC ; gObjAttack
;	COMDAT ??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@
; File e:\work\tranet_version\gs\gameserver\imperialbattleofkato.h
CONST	SEGMENT
??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@ DB 'Portal '
	DB	'will be closed after %d minutes', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleofkato.cpp
CONST	ENDS
;	COMDAT ?ProcState_PHAZE1@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_n$204261 = -284					; size = 4
tv567 = -280						; size = 4
_pNotice$204267 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
?ProcState_PHAZE1@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_PHAZE1, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 241  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  0001b	8b f1		 mov	 esi, ecx
  0001d	ff d7		 call	 edi
  0001f	2b 46 3c	 sub	 eax, DWORD PTR [esi+60]

; 242  : 	if(Tick >= 1000)

  00022	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00027	0f 8c 4d 02 00
	00		 jl	 $LN1@ProcState_@2

; 243  : 	{
; 244  : 		this->m_BattleData.Time -= Tick;

  0002d	29 46 38	 sub	 DWORD PTR [esi+56], eax

; 245  : 		this->m_BattleData.TickCount = GetTickCount();

  00030	ff d7		 call	 edi

; 246  : 
; 247  : 		this->SendEventInterface();

  00032	8b ce		 mov	 ecx, esi
  00034	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00037	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface

; 248  : 		this->MonsterProc();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?MonsterProc@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::MonsterProc
  00043	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv567[ebp], 0
  0004d	53		 push	 ebx
  0004e	8b ff		 npad	 2
$LL36@ProcState_@2:

; 251  : 		{
; 252  : 			for(int n=0;n<g_ImperialBattleUserMng.GetUserCount();++n)

  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00055	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _n$204261[ebp], 0
  0005f	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00064	85 c0		 test	 eax, eax
  00066	0f 8e 9e 00 00
	00		 jle	 $LN12@ProcState_@2
  0006c	bf 08 00 00 00	 mov	 edi, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+8
$LL33@ProcState_@2:

; 253  : 			{
; 254  : 
; 255  : 				if(gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X >= g_KatoTrap[i].X-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X <= g_KatoTrap[i].X+5
; 256  : 					&& gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y >= g_KatoTrap[i].Y-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y <= g_KatoTrap[i].Y+5)

  00071	8b 07		 mov	 eax, DWORD PTR [edi]
  00073	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  00079	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0007f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00085	8b 92 00 00 00
	00		 mov	 edx, DWORD PTR _g_KatoTrap[edx]
  0008b	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00092	8d 5a fb	 lea	 ebx, DWORD PTR [edx-5]
  00095	3b cb		 cmp	 ecx, ebx
  00097	7c 4f		 jl	 SHORT $LN9@ProcState_@2
  00099	83 c2 05	 add	 edx, 5
  0009c	3b ca		 cmp	 ecx, edx
  0009e	7f 48		 jg	 SHORT $LN9@ProcState_@2
  000a0	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  000a6	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  000ad	8b 92 04 00 00
	00		 mov	 edx, DWORD PTR _g_KatoTrap[edx+4]
  000b3	8d 5a fb	 lea	 ebx, DWORD PTR [edx-5]
  000b6	3b cb		 cmp	 ecx, ebx
  000b8	7c 2e		 jl	 SHORT $LN9@ProcState_@2
  000ba	83 c2 05	 add	 edx, 5
  000bd	3b ca		 cmp	 ecx, edx
  000bf	7f 27		 jg	 SHORT $LN9@ProcState_@2

; 257  : 				{
; 258  : 					gObjAttack(&gObj[this->m_BattleData.TrapIndex], &gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()], NULL, 0, 0, 0, 0,0,0);

  000c1	6a 00		 push	 0
  000c3	6a 00		 push	 0
  000c5	6a 00		 push	 0
  000c7	6a 00		 push	 0
  000c9	6a 00		 push	 0
  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	50		 push	 eax
  000d0	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d3	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000d9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  000e5	83 c4 24	 add	 esp, 36			; 00000024H
$LN9@ProcState_@2:

; 251  : 		{
; 252  : 			for(int n=0;n<g_ImperialBattleUserMng.GetUserCount();++n)

  000e8	8b 9d e4 fe ff
	ff		 mov	 ebx, DWORD PTR _n$204261[ebp]
  000ee	43		 inc	 ebx
  000ef	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  000f4	89 9d e4 fe ff
	ff		 mov	 DWORD PTR _n$204261[ebp], ebx
  000fa	83 c7 0c	 add	 edi, 12			; 0000000cH
  000fd	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00102	3b d8		 cmp	 ebx, eax
  00104	0f 8c 67 ff ff
	ff		 jl	 $LL33@ProcState_@2
$LN12@ProcState_@2:

; 249  : 
; 250  : 		for(int i=0;i<12;++i)

  0010a	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv567[ebp]
  00110	83 c0 08	 add	 eax, 8
  00113	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv567[ebp], eax
  00119	83 f8 60	 cmp	 eax, 96			; 00000060H
  0011c	0f 8c 2e ff ff
	ff		 jl	 $LL36@ProcState_@2

; 259  : 				}
; 260  : 			}
; 261  : 		}
; 262  : 
; 263  : 		if(this->m_BattleData.Time > 0 && (this->m_BattleData.Time/60000) !=this->m_BattleData.NotifyCount)

  00122	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00125	5b		 pop	 ebx
  00126	85 c9		 test	 ecx, ecx
  00128	7e 55		 jle	 SHORT $LN35@ProcState_@2
  0012a	b8 73 b2 e7 45	 mov	 eax, 1172812403		; 45e7b273H
  0012f	f7 e9		 imul	 ecx
  00131	0f b6 4e 54	 movzx	 ecx, BYTE PTR [esi+84]
  00135	c1 fa 0e	 sar	 edx, 14			; 0000000eH
  00138	8b c2		 mov	 eax, edx
  0013a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0013d	03 c2		 add	 eax, edx
  0013f	3b c1		 cmp	 eax, ecx
  00141	74 3c		 je	 SHORT $LN35@ProcState_@2

; 264  : 		{
; 265  : 			this->m_BattleData.NotifyCount = this->m_BattleData.Time / 60000;
; 266  : 			PMSG_NOTICE pNotice;
; 267  : 			TNotice::MakeNoticeMsgEx(&pNotice, 0, "Portal will be closed after %d minutes", this->m_BattleData.NotifyCount+1);

  00143	0f b6 d0	 movzx	 edx, al
  00146	bf 01 00 00 00	 mov	 edi, 1
  0014b	03 d7		 add	 edx, edi
  0014d	52		 push	 edx
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@
  00153	88 46 54	 mov	 BYTE PTR [esi+84], al
  00156	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$204267[ebp]
  0015c	6a 00		 push	 0
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx

; 268  : 			this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00164	0f b6 8d ed fe
	ff ff		 movzx	 ecx, BYTE PTR _pNotice$204267[ebp+1]
  0016b	83 c4 10	 add	 esp, 16			; 00000010H
  0016e	51		 push	 ecx
  0016f	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$204267[ebp]
  00175	52		 push	 edx
  00176	8b ce		 mov	 ecx, esi
  00178	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers
  0017d	eb 05		 jmp	 SHORT $LN6@ProcState_@2
$LN35@ProcState_@2:
  0017f	bf 01 00 00 00	 mov	 edi, 1
$LN6@ProcState_@2:

; 269  : 		}
; 270  : 
; 271  : 		if(gObj[this->m_BattleData.GateIndex[0]].Live == false && this->m_BattleData.PhazeStep == 0)

  00184	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0018c	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00192	80 7c 01 6a 00	 cmp	 BYTE PTR [ecx+eax+106], 0
  00197	75 17		 jne	 SHORT $LN5@ProcState_@2
  00199	83 7e 50 00	 cmp	 DWORD PTR [esi+80], 0
  0019d	75 11		 jne	 SHORT $LN5@ProcState_@2

; 272  : 		{
; 273  : 			this->SetMapAttr(0);

  0019f	6a 00		 push	 0
  001a1	8b ce		 mov	 ecx, esi
  001a3	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 274  : 			this->m_BattleData.PhazeStep++;

  001a8	01 7e 50	 add	 DWORD PTR [esi+80], edi
  001ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN5@ProcState_@2:

; 275  : 		}
; 276  : 
; 277  : 		if(this->m_BattleData.MonsterCount <= 0 && this->m_BattleData.PhazeStep == 1)

  001b0	83 7e 44 00	 cmp	 DWORD PTR [esi+68], 0
  001b4	7f 39		 jg	 SHORT $LN4@ProcState_@2
  001b6	39 7e 50	 cmp	 DWORD PTR [esi+80], edi
  001b9	75 34		 jne	 SHORT $LN4@ProcState_@2

; 278  : 		{
; 279  : 			gObj[this->m_BattleData.GateIndex[1]].m_ImmuneToHarmCount = 0;

  001bb	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  001be	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  001c4	33 c9		 xor	 ecx, ecx
  001c6	66 89 8c 02 84
	22 00 00	 mov	 WORD PTR [edx+eax+8836], cx

; 280  : 			gObj[this->m_BattleData.GateIndex[1]].m_ImmuneToMagicCount = 0;

  001ce	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  001d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d7	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  001dd	33 c0		 xor	 eax, eax
  001df	66 89 84 0a 82
	22 00 00	 mov	 WORD PTR [edx+ecx+8834], ax

; 281  : 			this->m_BattleData.PhazeStep++;

  001e7	01 7e 50	 add	 DWORD PTR [esi+80], edi
  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN4@ProcState_@2:

; 282  : 		}
; 283  : 		if(gObj[this->m_BattleData.GateIndex[1]].Live == false && this->m_BattleData.PhazeStep == 2)

  001ef	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  001f2	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  001f8	80 7c 02 6a 00	 cmp	 BYTE PTR [edx+eax+106], 0
  001fd	75 42		 jne	 SHORT $LN3@ProcState_@2
  001ff	83 7e 50 02	 cmp	 DWORD PTR [esi+80], 2
  00203	75 3c		 jne	 SHORT $LN3@ProcState_@2

; 284  : 		{
; 285  : 			gObj[this->m_BattleData.GateIndex[2]].m_ImmuneToHarmCount = 0;

  00205	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00208	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0020e	33 d2		 xor	 edx, edx
  00210	66 89 94 01 84
	22 00 00	 mov	 WORD PTR [ecx+eax+8836], dx

; 286  : 			gObj[this->m_BattleData.GateIndex[2]].m_ImmuneToMagicCount = 0;

  00218	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0021b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00221	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00227	33 c9		 xor	 ecx, ecx
  00229	66 89 8c 10 82
	22 00 00	 mov	 WORD PTR [eax+edx+8834], cx

; 287  : 			this->SetMapAttr(1);

  00231	57		 push	 edi
  00232	8b ce		 mov	 ecx, esi
  00234	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 288  : 			this->m_BattleData.PhazeStep++;

  00239	01 7e 50	 add	 DWORD PTR [esi+80], edi
  0023c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN3@ProcState_@2:

; 289  : 		}
; 290  : 		if(gObj[this->m_BattleData.GateIndex[2]].Live == false && this->m_BattleData.PhazeStep == 3)

  00241	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00244	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0024a	80 7c 01 6a 00	 cmp	 BYTE PTR [ecx+eax+106], 0
  0024f	75 16		 jne	 SHORT $LN2@ProcState_@2
  00251	83 7e 50 03	 cmp	 DWORD PTR [esi+80], 3
  00255	75 10		 jne	 SHORT $LN2@ProcState_@2

; 291  : 		{
; 292  : 			this->SetMapAttr(2);

  00257	6a 02		 push	 2
  00259	8b ce		 mov	 ecx, esi
  0025b	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 293  : 			this->PortalSetState = false;
; 294  : 			this->m_BattleData.PhazeStep++;

  00260	01 7e 50	 add	 DWORD PTR [esi+80], edi
  00263	c6 46 58 00	 mov	 BYTE PTR [esi+88], 0
$LN2@ProcState_@2:

; 295  : 		}
; 296  : 
; 297  : 		if(this->m_BattleData.Time <= 0)

  00267	83 7e 38 00	 cmp	 DWORD PTR [esi+56], 0
  0026b	7f 0d		 jg	 SHORT $LN1@ProcState_@2

; 298  : 		{
; 299  : 			this->SetSuccessValue(false);
; 300  : 			this->SetState(BATTLEOFKATO_STATE_END);

  0026d	6a 07		 push	 7
  0026f	8b ce		 mov	 ecx, esi
  00271	c6 46 59 00	 mov	 BYTE PTR [esi+89], 0
  00275	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN1@ProcState_@2:

; 301  : 		}
; 302  : 	}
; 303  : }

  0027a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0027d	5f		 pop	 edi
  0027e	33 cd		 xor	 ecx, ebp
  00280	5e		 pop	 esi
  00281	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c3		 ret	 0
?ProcState_PHAZE1@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_PHAZE1
_TEXT	ENDS
PUBLIC	?ProcState_STANDBY2@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_STANDBY2
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_STANDBY2@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?ProcState_STANDBY2@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_STANDBY2, COMDAT
; _this$ = ecx

; 306  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 307  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  00008	8b f1		 mov	 esi, ecx
  0000a	ff d7		 call	 edi
  0000c	2b 46 3c	 sub	 eax, DWORD PTR [esi+60]

; 308  : 	if(Tick >= 1000)

  0000f	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00014	7c 1e		 jl	 SHORT $LN1@ProcState_@3

; 309  : 	{
; 310  : 		this->m_BattleData.Time -= Tick;

  00016	29 46 38	 sub	 DWORD PTR [esi+56], eax

; 311  : 		this->m_BattleData.TickCount = GetTickCount();

  00019	ff d7		 call	 edi

; 312  : 
; 313  : 		this->SendEventInterface();

  0001b	8b ce		 mov	 ecx, esi
  0001d	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00020	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface

; 314  : 
; 315  : 		if(this->m_BattleData.Time <= 0)

  00025	83 7e 38 00	 cmp	 DWORD PTR [esi+56], 0
  00029	7f 09		 jg	 SHORT $LN1@ProcState_@3

; 316  : 		{
; 317  : 			this->SetState(BATTLEOFKATO_STATE_PHAZE2);

  0002b	6a 04		 push	 4
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN1@ProcState_@3:

; 318  : 		}
; 319  : 	}
; 320  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	c3		 ret	 0
?ProcState_STANDBY2@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_STANDBY2
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ProcState_PHAZE2@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::ProcState_PHAZE2
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_PHAZE2@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_n$204290 = -284					; size = 4
tv567 = -280						; size = 4
_pNotice$204296 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
?ProcState_PHAZE2@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_PHAZE2, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 324  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  0001b	8b f1		 mov	 esi, ecx
  0001d	ff d7		 call	 edi
  0001f	2b 46 3c	 sub	 eax, DWORD PTR [esi+60]

; 325  : 	if(Tick >= 1000)

  00022	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00027	0f 8c 4e 02 00
	00		 jl	 $LN1@ProcState_@4

; 326  : 	{
; 327  : 		this->m_BattleData.Time -= Tick;

  0002d	29 46 38	 sub	 DWORD PTR [esi+56], eax

; 328  : 		this->m_BattleData.TickCount = GetTickCount();

  00030	ff d7		 call	 edi

; 329  : 
; 330  : 		this->SendEventInterface();

  00032	8b ce		 mov	 ecx, esi
  00034	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00037	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface

; 331  : 		this->MonsterProc();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?MonsterProc@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::MonsterProc
  00043	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv567[ebp], 0
  0004d	53		 push	 ebx
  0004e	8b ff		 npad	 2
$LL36@ProcState_@4:

; 334  : 		{
; 335  : 			for(int n=0;n<g_ImperialBattleUserMng.GetUserCount();++n)

  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00055	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _n$204290[ebp], 0
  0005f	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00064	85 c0		 test	 eax, eax
  00066	0f 8e 9e 00 00
	00		 jle	 $LN12@ProcState_@4
  0006c	bf 08 00 00 00	 mov	 edi, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+8
$LL33@ProcState_@4:

; 336  : 			{
; 337  : 
; 338  : 				if(gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X >= g_KatoTrap[i].X-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X <= g_KatoTrap[i].X+5
; 339  : 					&& gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y >= g_KatoTrap[i].Y-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y <= g_KatoTrap[i].Y+5)

  00071	8b 07		 mov	 eax, DWORD PTR [edi]
  00073	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  00079	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0007f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00085	8b 92 00 00 00
	00		 mov	 edx, DWORD PTR _g_KatoTrap[edx]
  0008b	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00092	8d 5a fb	 lea	 ebx, DWORD PTR [edx-5]
  00095	3b cb		 cmp	 ecx, ebx
  00097	7c 4f		 jl	 SHORT $LN9@ProcState_@4
  00099	83 c2 05	 add	 edx, 5
  0009c	3b ca		 cmp	 ecx, edx
  0009e	7f 48		 jg	 SHORT $LN9@ProcState_@4
  000a0	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  000a6	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  000ad	8b 92 04 00 00
	00		 mov	 edx, DWORD PTR _g_KatoTrap[edx+4]
  000b3	8d 5a fb	 lea	 ebx, DWORD PTR [edx-5]
  000b6	3b cb		 cmp	 ecx, ebx
  000b8	7c 2e		 jl	 SHORT $LN9@ProcState_@4
  000ba	83 c2 05	 add	 edx, 5
  000bd	3b ca		 cmp	 ecx, edx
  000bf	7f 27		 jg	 SHORT $LN9@ProcState_@4

; 340  : 				{
; 341  : 					gObjAttack(&gObj[this->m_BattleData.TrapIndex], &gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()], NULL, 0, 0, 0, 0,0,0);

  000c1	6a 00		 push	 0
  000c3	6a 00		 push	 0
  000c5	6a 00		 push	 0
  000c7	6a 00		 push	 0
  000c9	6a 00		 push	 0
  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	50		 push	 eax
  000d0	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d3	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000d9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  000e5	83 c4 24	 add	 esp, 36			; 00000024H
$LN9@ProcState_@4:

; 334  : 		{
; 335  : 			for(int n=0;n<g_ImperialBattleUserMng.GetUserCount();++n)

  000e8	8b 9d e4 fe ff
	ff		 mov	 ebx, DWORD PTR _n$204290[ebp]
  000ee	43		 inc	 ebx
  000ef	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  000f4	89 9d e4 fe ff
	ff		 mov	 DWORD PTR _n$204290[ebp], ebx
  000fa	83 c7 0c	 add	 edi, 12			; 0000000cH
  000fd	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00102	3b d8		 cmp	 ebx, eax
  00104	0f 8c 67 ff ff
	ff		 jl	 $LL33@ProcState_@4
$LN12@ProcState_@4:

; 332  : 
; 333  : 		for(int i=0;i<12;++i)

  0010a	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv567[ebp]
  00110	83 c0 08	 add	 eax, 8
  00113	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv567[ebp], eax
  00119	83 f8 60	 cmp	 eax, 96			; 00000060H
  0011c	0f 8c 2e ff ff
	ff		 jl	 $LL36@ProcState_@4

; 342  : 				}
; 343  : 			}
; 344  : 		}
; 345  : 
; 346  : 		if(this->m_BattleData.Time > 0 && (this->m_BattleData.Time/60000) !=this->m_BattleData.NotifyCount)

  00122	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00125	5b		 pop	 ebx
  00126	85 c9		 test	 ecx, ecx
  00128	7e 55		 jle	 SHORT $LN35@ProcState_@4
  0012a	b8 73 b2 e7 45	 mov	 eax, 1172812403		; 45e7b273H
  0012f	f7 e9		 imul	 ecx
  00131	0f b6 4e 54	 movzx	 ecx, BYTE PTR [esi+84]
  00135	c1 fa 0e	 sar	 edx, 14			; 0000000eH
  00138	8b c2		 mov	 eax, edx
  0013a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0013d	03 c2		 add	 eax, edx
  0013f	3b c1		 cmp	 eax, ecx
  00141	74 3c		 je	 SHORT $LN35@ProcState_@4

; 347  : 		{
; 348  : 			this->m_BattleData.NotifyCount = this->m_BattleData.Time / 60000;
; 349  : 			PMSG_NOTICE pNotice;
; 350  : 			TNotice::MakeNoticeMsgEx(&pNotice, 0, "Portal will be closed after %d minutes", this->m_BattleData.NotifyCount+1);

  00143	0f b6 d0	 movzx	 edx, al
  00146	bf 01 00 00 00	 mov	 edi, 1
  0014b	03 d7		 add	 edx, edi
  0014d	52		 push	 edx
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@
  00153	88 46 54	 mov	 BYTE PTR [esi+84], al
  00156	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$204296[ebp]
  0015c	6a 00		 push	 0
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx

; 351  : 			this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00164	0f b6 8d ed fe
	ff ff		 movzx	 ecx, BYTE PTR _pNotice$204296[ebp+1]
  0016b	83 c4 10	 add	 esp, 16			; 00000010H
  0016e	51		 push	 ecx
  0016f	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$204296[ebp]
  00175	52		 push	 edx
  00176	8b ce		 mov	 ecx, esi
  00178	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers
  0017d	eb 05		 jmp	 SHORT $LN6@ProcState_@4
$LN35@ProcState_@4:
  0017f	bf 01 00 00 00	 mov	 edi, 1
$LN6@ProcState_@4:

; 352  : 		}
; 353  : 
; 354  : 		if(gObj[this->m_BattleData.GateIndex[3]].Live == false && this->m_BattleData.PhazeStep == 0)

  00184	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0018c	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00192	80 7c 01 6a 00	 cmp	 BYTE PTR [ecx+eax+106], 0
  00197	75 17		 jne	 SHORT $LN5@ProcState_@4
  00199	83 7e 50 00	 cmp	 DWORD PTR [esi+80], 0
  0019d	75 11		 jne	 SHORT $LN5@ProcState_@4

; 355  : 		{
; 356  : 			this->SetMapAttr(3);

  0019f	6a 03		 push	 3
  001a1	8b ce		 mov	 ecx, esi
  001a3	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 357  : 			this->m_BattleData.PhazeStep++;

  001a8	01 7e 50	 add	 DWORD PTR [esi+80], edi
  001ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN5@ProcState_@4:

; 358  : 		}
; 359  : 
; 360  : 		if(this->m_BattleData.MonsterCount <= 0 && this->m_BattleData.PhazeStep == 1)

  001b0	83 7e 44 00	 cmp	 DWORD PTR [esi+68], 0
  001b4	7f 39		 jg	 SHORT $LN4@ProcState_@4
  001b6	39 7e 50	 cmp	 DWORD PTR [esi+80], edi
  001b9	75 34		 jne	 SHORT $LN4@ProcState_@4

; 361  : 		{
; 362  : 			gObj[this->m_BattleData.GateIndex[4]].m_ImmuneToHarmCount = 0;

  001bb	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  001be	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  001c4	33 c9		 xor	 ecx, ecx
  001c6	66 89 8c 02 84
	22 00 00	 mov	 WORD PTR [edx+eax+8836], cx

; 363  : 			gObj[this->m_BattleData.GateIndex[4]].m_ImmuneToMagicCount = 0;

  001ce	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  001d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d7	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  001dd	33 c0		 xor	 eax, eax
  001df	66 89 84 0a 82
	22 00 00	 mov	 WORD PTR [edx+ecx+8834], ax

; 364  : 			this->m_BattleData.PhazeStep++;

  001e7	01 7e 50	 add	 DWORD PTR [esi+80], edi
  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN4@ProcState_@4:

; 365  : 		}
; 366  : 		if(gObj[this->m_BattleData.GateIndex[4]].Live == false && this->m_BattleData.PhazeStep == 2)

  001ef	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  001f2	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  001f8	80 7c 02 6a 00	 cmp	 BYTE PTR [edx+eax+106], 0
  001fd	75 43		 jne	 SHORT $LN3@ProcState_@4
  001ff	83 7e 50 02	 cmp	 DWORD PTR [esi+80], 2
  00203	75 3d		 jne	 SHORT $LN3@ProcState_@4

; 367  : 		{
; 368  : 			gObj[this->m_BattleData.GateIndex[5]].m_ImmuneToHarmCount = 0;

  00205	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00208	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0020e	33 d2		 xor	 edx, edx
  00210	66 89 94 01 84
	22 00 00	 mov	 WORD PTR [ecx+eax+8836], dx

; 369  : 			gObj[this->m_BattleData.GateIndex[5]].m_ImmuneToMagicCount = 0;

  00218	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0021b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00221	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00227	33 c9		 xor	 ecx, ecx
  00229	66 89 8c 10 82
	22 00 00	 mov	 WORD PTR [eax+edx+8834], cx

; 370  : 			this->SetMapAttr(4);

  00231	6a 04		 push	 4
  00233	8b ce		 mov	 ecx, esi
  00235	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 371  : 			this->m_BattleData.PhazeStep++;

  0023a	01 7e 50	 add	 DWORD PTR [esi+80], edi
  0023d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN3@ProcState_@4:

; 372  : 		}
; 373  : 		if(gObj[this->m_BattleData.GateIndex[5]].Live == false && this->m_BattleData.PhazeStep == 3)

  00242	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00245	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0024b	80 7c 01 6a 00	 cmp	 BYTE PTR [ecx+eax+106], 0
  00250	75 16		 jne	 SHORT $LN2@ProcState_@4
  00252	83 7e 50 03	 cmp	 DWORD PTR [esi+80], 3
  00256	75 10		 jne	 SHORT $LN2@ProcState_@4

; 374  : 		{
; 375  : 			this->SetMapAttr(5);

  00258	6a 05		 push	 5
  0025a	8b ce		 mov	 ecx, esi
  0025c	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 376  : 			this->PortalSetState = false;
; 377  : 			this->m_BattleData.PhazeStep++;

  00261	01 7e 50	 add	 DWORD PTR [esi+80], edi
  00264	c6 46 58 00	 mov	 BYTE PTR [esi+88], 0
$LN2@ProcState_@4:

; 378  : 		}
; 379  : 
; 380  : 		if(this->m_BattleData.Time <= 0)

  00268	83 7e 38 00	 cmp	 DWORD PTR [esi+56], 0
  0026c	7f 0d		 jg	 SHORT $LN1@ProcState_@4

; 381  : 		{
; 382  : 			this->SetSuccessValue(false);
; 383  : 			this->SetState(BATTLEOFKATO_STATE_END);

  0026e	6a 07		 push	 7
  00270	8b ce		 mov	 ecx, esi
  00272	c6 46 59 00	 mov	 BYTE PTR [esi+89], 0
  00276	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN1@ProcState_@4:

; 384  : 		}
; 385  : 	}
; 386  : }

  0027b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0027e	5f		 pop	 edi
  0027f	33 cd		 xor	 ecx, ebp
  00281	5e		 pop	 esi
  00282	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00287	8b e5		 mov	 esp, ebp
  00289	5d		 pop	 ebp
  0028a	c3		 ret	 0
?ProcState_PHAZE2@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_PHAZE2
_TEXT	ENDS
PUBLIC	?ProcState_STANDBY3@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_STANDBY3
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_STANDBY3@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?ProcState_STANDBY3@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_STANDBY3, COMDAT
; _this$ = ecx

; 389  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 390  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  00008	8b f1		 mov	 esi, ecx
  0000a	ff d7		 call	 edi
  0000c	2b 46 3c	 sub	 eax, DWORD PTR [esi+60]

; 391  : 	if(Tick >= 1000)

  0000f	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00014	7c 1e		 jl	 SHORT $LN1@ProcState_@5

; 392  : 	{
; 393  : 		this->m_BattleData.Time -= Tick;

  00016	29 46 38	 sub	 DWORD PTR [esi+56], eax

; 394  : 		this->m_BattleData.TickCount = GetTickCount();

  00019	ff d7		 call	 edi

; 395  : 
; 396  : 		this->SendEventInterface();

  0001b	8b ce		 mov	 ecx, esi
  0001d	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00020	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface

; 397  : 
; 398  : 		if(this->m_BattleData.Time <= 0)

  00025	83 7e 38 00	 cmp	 DWORD PTR [esi+56], 0
  00029	7f 09		 jg	 SHORT $LN1@ProcState_@5

; 399  : 		{
; 400  : 			this->SetState(BATTLEOFKATO_STATE_PHAZE3);

  0002b	6a 06		 push	 6
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN1@ProcState_@5:

; 401  : 		}
; 402  : 	}
; 403  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	c3		 ret	 0
?ProcState_STANDBY3@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_STANDBY3
_TEXT	ENDS
PUBLIC	??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?ProcState_PHAZE3@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::ProcState_PHAZE3
;	COMDAT ??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@
; File e:\work\tranet_version\gs\gameserver\imperialbattleofkato.h
CONST	SEGMENT
??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@ DB '%d minu'
	DB	'tes to escape %s!', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleofkato.cpp
CONST	ENDS
;	COMDAT ?ProcState_PHAZE3@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
_pNotice$204315 = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
?ProcState_PHAZE3@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::ProcState_PHAZE3, COMDAT
; _this$ = ecx

; 406  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 407  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  0001b	8b f1		 mov	 esi, ecx
  0001d	ff d7		 call	 edi
  0001f	2b 46 3c	 sub	 eax, DWORD PTR [esi+60]

; 408  : 	if(Tick >= 1000)

  00022	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00027	0f 8c f1 00 00
	00		 jl	 $LN1@ProcState_@6

; 409  : 	{
; 410  : 		this->m_BattleData.Time -= Tick;

  0002d	29 46 38	 sub	 DWORD PTR [esi+56], eax

; 411  : 		this->m_BattleData.TickCount = GetTickCount();

  00030	ff d7		 call	 edi

; 412  : 
; 413  : 		this->SendEventInterface();

  00032	8b ce		 mov	 ecx, esi
  00034	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00037	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SendEventInterface

; 414  : 		this->MonsterProc();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?MonsterProc@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::MonsterProc

; 415  : 
; 416  : 		if(this->m_BattleData.Time > 0 && (this->m_BattleData.Time/60000) !=this->m_BattleData.NotifyCount)

  00043	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00046	85 c9		 test	 ecx, ecx
  00048	7e 61		 jle	 SHORT $LN4@ProcState_@6
  0004a	b8 73 b2 e7 45	 mov	 eax, 1172812403		; 45e7b273H
  0004f	f7 e9		 imul	 ecx
  00051	0f b6 4e 54	 movzx	 ecx, BYTE PTR [esi+84]
  00055	c1 fa 0e	 sar	 edx, 14			; 0000000eH
  00058	8b c2		 mov	 eax, edx
  0005a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005d	03 c2		 add	 eax, edx
  0005f	3b c1		 cmp	 eax, ecx
  00061	74 48		 je	 SHORT $LN4@ProcState_@6

; 417  : 		{
; 418  : 			this->m_BattleData.NotifyCount = this->m_BattleData.Time / 60000;
; 419  : 			PMSG_NOTICE pNotice;
; 420  : 			TNotice::MakeNoticeMsgEx(&pNotice, 0, "%d minutes to escape %s!", this->m_BattleData.NotifyCount+1, gObj[this->m_BattleData.CurrentLeaderIndex].Name);

  00063	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00066	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0006c	88 46 54	 mov	 BYTE PTR [esi+84], al
  0006f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00075	0f b6 c0	 movzx	 eax, al
  00078	8d 54 0a 77	 lea	 edx, DWORD PTR [edx+ecx+119]
  0007c	52		 push	 edx
  0007d	40		 inc	 eax
  0007e	50		 push	 eax
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@
  00084	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$204315[ebp]
  0008a	6a 00		 push	 0
  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx

; 421  : 			this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00092	0f b6 95 ed fe
	ff ff		 movzx	 edx, BYTE PTR _pNotice$204315[ebp+1]
  00099	83 c4 14	 add	 esp, 20			; 00000014H
  0009c	52		 push	 edx
  0009d	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$204315[ebp]
  000a3	50		 push	 eax
  000a4	8b ce		 mov	 ecx, esi
  000a6	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfKato@@QAEXPAEH@Z ; CImperialBattleOfKato::SendImperialPlayers
$LN4@ProcState_@6:

; 422  : 		}
; 423  : 
; 424  : 		if(gObj[this->m_BattleData.GateIndex[6]].Live == false && this->m_BattleData.PhazeStep == 0)

  000ab	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  000ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000b4	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  000ba	80 7c 11 6a 00	 cmp	 BYTE PTR [ecx+edx+106], 0
  000bf	75 12		 jne	 SHORT $LN3@ProcState_@6
  000c1	83 7e 50 00	 cmp	 DWORD PTR [esi+80], 0
  000c5	75 0c		 jne	 SHORT $LN3@ProcState_@6

; 425  : 		{
; 426  : 			this->SetMapAttr(6);

  000c7	6a 06		 push	 6
  000c9	8b ce		 mov	 ecx, esi
  000cb	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetMapAttr

; 427  : 			this->m_BattleData.PhazeStep++;

  000d0	ff 46 50	 inc	 DWORD PTR [esi+80]
$LN3@ProcState_@6:

; 428  : 		}
; 429  : 
; 430  : 		if(gObj[this->m_BattleData.CurrentLeaderIndex].Live == false)

  000d3	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000dc	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000e2	80 7c 08 6a 00	 cmp	 BYTE PTR [eax+ecx+106], 0
  000e7	75 0d		 jne	 SHORT $LN2@ProcState_@6

; 431  : 		{
; 432  : 			this->SetSuccessValue(true);
; 433  : 			this->SetState(BATTLEOFKATO_STATE_END);

  000e9	6a 07		 push	 7
  000eb	8b ce		 mov	 ecx, esi
  000ed	c6 46 59 01	 mov	 BYTE PTR [esi+89], 1
  000f1	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN2@ProcState_@6:

; 434  : 		}
; 435  : 		if(this->m_BattleData.Time <= 0 && gObj[this->m_BattleData.CurrentLeaderIndex].Live == true)

  000f6	83 7e 38 00	 cmp	 DWORD PTR [esi+56], 0
  000fa	7f 22		 jg	 SHORT $LN1@ProcState_@6
  000fc	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00104	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0010a	80 7c 02 6a 01	 cmp	 BYTE PTR [edx+eax+106], 1
  0010f	75 0d		 jne	 SHORT $LN1@ProcState_@6

; 436  : 		{
; 437  : 			this->SetSuccessValue(false);
; 438  : 			this->SetState(BATTLEOFKATO_STATE_END);

  00111	6a 07		 push	 7
  00113	8b ce		 mov	 ecx, esi
  00115	c6 46 59 00	 mov	 BYTE PTR [esi+89], 0
  00119	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState
$LN1@ProcState_@6:

; 439  : 		}
; 440  : 	}
; 441  : }

  0011e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00121	5f		 pop	 edi
  00122	33 cd		 xor	 ecx, ebp
  00124	5e		 pop	 esi
  00125	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c3		 ret	 0
?ProcState_PHAZE3@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::ProcState_PHAZE3
_TEXT	ENDS
PUBLIC	?SetNextState@CImperialBattleOfKato@@QAEXXZ	; CImperialBattleOfKato::SetNextState
; Function compile flags: /Ogtp
;	COMDAT ?SetNextState@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?SetNextState@CImperialBattleOfKato@@QAEXXZ PROC	; CImperialBattleOfKato::SetNextState, COMDAT
; _this$ = ecx

; 552  : 	int iNextState = this->m_BattleData.CurrentState + 1;

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  00003	40		 inc	 eax

; 553  : 
; 554  : 	if ( iNextState >= BATTLEOFKATO_STATE_END )

  00004	83 f8 07	 cmp	 eax, 7
  00007	7c 02		 jl	 SHORT $LN1@SetNextSta

; 555  : 	{
; 556  : 		iNextState = BATTLEOFKATO_STATE_NONE;

  00009	33 c0		 xor	 eax, eax
$LN1@SetNextSta:

; 557  : 	}
; 558  : 
; 559  : 	this->SetState(iNextState);

  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfKato@@QAEXH@Z ; CImperialBattleOfKato::SetState

; 560  : }

  00011	c3		 ret	 0
?SetNextState@CImperialBattleOfKato@@QAEXXZ ENDP	; CImperialBattleOfKato::SetNextState
_TEXT	ENDS
PUBLIC	?EnterPortal@CImperialBattleOfKato@@QAE_NPAUOBJECTSTRUCT@@@Z ; CImperialBattleOfKato::EnterPortal
; Function compile flags: /Ogtp
;	COMDAT ?EnterPortal@CImperialBattleOfKato@@QAE_NPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?EnterPortal@CImperialBattleOfKato@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CImperialBattleOfKato::EnterPortal, COMDAT
; _this$ = ecx

; 563  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 564  : 	if(this->m_BattleData.MonsterCount > 0)

  00003	83 7e 44 00	 cmp	 DWORD PTR [esi+68], 0
  00007	7e 06		 jle	 SHORT $LN2@EnterPorta

; 565  : 		return false;

  00009	32 c0		 xor	 al, al
  0000b	5e		 pop	 esi

; 577  : }

  0000c	c2 04 00	 ret	 4
$LN2@EnterPorta:

; 566  : 	
; 567  : 	//if(this->m_BattleData.PhazeStep != 4)	//DeBug
; 568  : 	//	return false;
; 569  : 
; 570  : 	if(!this->PortalSetState)

  0000f	80 7e 58 00	 cmp	 BYTE PTR [esi+88], 0
  00013	75 09		 jne	 SHORT $LN1@EnterPorta

; 571  : 	{
; 572  : 		this->SetNextState();

  00015	e8 00 00 00 00	 call	 ?SetNextState@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::SetNextState

; 573  : 		this->PortalSetState = true;

  0001a	c6 46 58 01	 mov	 BYTE PTR [esi+88], 1
$LN1@EnterPorta:

; 574  : 	}
; 575  : 
; 576  : 	return true;

  0001e	b0 01		 mov	 al, 1
  00020	5e		 pop	 esi

; 577  : }

  00021	c2 04 00	 ret	 4
?EnterPortal@CImperialBattleOfKato@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CImperialBattleOfKato::EnterPortal
_TEXT	ENDS
PUBLIC	?Run@CImperialBattleOfKato@@QAEXXZ		; CImperialBattleOfKato::Run
; Function compile flags: /Ogtp
;	COMDAT ?Run@CImperialBattleOfKato@@QAEXXZ
_TEXT	SEGMENT
?Run@CImperialBattleOfKato@@QAEXXZ PROC			; CImperialBattleOfKato::Run, COMDAT
; _this$ = ecx

; 194  : 	switch ( this->m_BattleData.CurrentState )

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  00003	83 f8 07	 cmp	 eax, 7
  00006	77 25		 ja	 SHORT $LN1@Run
  00008	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@Run[eax*4]
$LN7@Run:

; 195  : 	{
; 196  : 		case 0:
; 197  : 			return;
; 198  : 		case 1:
; 199  : 			this->ProcState_STANDBY1();

  0000f	e9 00 00 00 00	 jmp	 ?ProcState_STANDBY1@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_STANDBY1
$LN6@Run:

; 200  : 			break;
; 201  : 		case 2:
; 202  : 			this->ProcState_PHAZE1();

  00014	e9 00 00 00 00	 jmp	 ?ProcState_PHAZE1@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_PHAZE1
$LN5@Run:

; 203  : 			break;
; 204  : 		case 3:
; 205  : 			this->ProcState_STANDBY2();

  00019	e9 00 00 00 00	 jmp	 ?ProcState_STANDBY2@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_STANDBY2
$LN4@Run:

; 206  : 			break;
; 207  : 		case 4:
; 208  : 			this->ProcState_PHAZE2();

  0001e	e9 00 00 00 00	 jmp	 ?ProcState_PHAZE2@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_PHAZE2
$LN3@Run:

; 209  : 			break;
; 210  : 		case 5:
; 211  : 			this->ProcState_STANDBY3();

  00023	e9 00 00 00 00	 jmp	 ?ProcState_STANDBY3@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_STANDBY3
$LN2@Run:

; 212  : 			break;
; 213  : 		case 6:
; 214  : 			this->ProcState_PHAZE3();

  00028	e9 00 00 00 00	 jmp	 ?ProcState_PHAZE3@CImperialBattleOfKato@@QAEXXZ ; CImperialBattleOfKato::ProcState_PHAZE3
$LN1@Run:

; 215  : 			break;
; 216  : 		case 7:
; 217  : 			this->ProcState_END();
; 218  : 			break;
; 219  : 	}
; 220  : }

  0002d	c3		 ret	 0
  0002e	8b ff		 npad	 2
$LN14@Run:
  00030	00 00 00 00	 DD	 $LN1@Run
  00034	00 00 00 00	 DD	 $LN7@Run
  00038	00 00 00 00	 DD	 $LN6@Run
  0003c	00 00 00 00	 DD	 $LN5@Run
  00040	00 00 00 00	 DD	 $LN4@Run
  00044	00 00 00 00	 DD	 $LN3@Run
  00048	00 00 00 00	 DD	 $LN2@Run
  0004c	00 00 00 00	 DD	 $LN1@Run
?Run@CImperialBattleOfKato@@QAEXXZ ENDP			; CImperialBattleOfKato::Run
_TEXT	ENDS
END
