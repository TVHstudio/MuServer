; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\ImperialBattleUserMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CImperialBattleUser@@6B@			; CImperialBattleUser::`vftable'
PUBLIC	??1CImperialBattleUser@@UAE@XZ			; CImperialBattleUser::~CImperialBattleUser
PUBLIC	??_R4CImperialBattleUser@@6B@			; CImperialBattleUser::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImperialBattleUser@@@8			; CImperialBattleUser `RTTI Type Descriptor'
PUBLIC	??_R3CImperialBattleUser@@8			; CImperialBattleUser::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImperialBattleUser@@8			; CImperialBattleUser::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImperialBattleUser@@8		; CImperialBattleUser::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECImperialBattleUser@@UAEPAXI@Z:PROC		; CImperialBattleUser::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CImperialBattleUser@@8
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
rdata$r	SEGMENT
??_R1A@?0A@EA@CImperialBattleUser@@8 DD FLAT:??_R0?AVCImperialBattleUser@@@8 ; CImperialBattleUser::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImperialBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_R2CImperialBattleUser@@8
rdata$r	SEGMENT
??_R2CImperialBattleUser@@8 DD FLAT:??_R1A@?0A@EA@CImperialBattleUser@@8 ; CImperialBattleUser::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CImperialBattleUser@@8
rdata$r	SEGMENT
??_R3CImperialBattleUser@@8 DD 00H			; CImperialBattleUser::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CImperialBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImperialBattleUser@@@8
_DATA	SEGMENT
??_R0?AVCImperialBattleUser@@@8 DD FLAT:??_7type_info@@6B@ ; CImperialBattleUser `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImperialBattleUser@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImperialBattleUser@@6B@
rdata$r	SEGMENT
??_R4CImperialBattleUser@@6B@ DD 00H			; CImperialBattleUser::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImperialBattleUser@@@8
	DD	FLAT:??_R3CImperialBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_7CImperialBattleUser@@6B@
CONST	SEGMENT
??_7CImperialBattleUser@@6B@ DD FLAT:??_R4CImperialBattleUser@@6B@ ; CImperialBattleUser::`vftable'
	DD	FLAT:??_ECImperialBattleUser@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CImperialBattleUser@@UAE@XZ
_TEXT	SEGMENT
??1CImperialBattleUser@@UAE@XZ PROC			; CImperialBattleUser::~CImperialBattleUser, COMDAT
; _this$ = ecx

; 13   : 	virtual ~CImperialBattleUser(){return;}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CImperialBattleUser@@6B@
  00006	c3		 ret	 0
??1CImperialBattleUser@@UAE@XZ ENDP			; CImperialBattleUser::~CImperialBattleUser
_TEXT	ENDS
PUBLIC	?ResetData@CImperialBattleUser@@QAEXXZ		; CImperialBattleUser::ResetData
; Function compile flags: /Ogtp
;	COMDAT ?ResetData@CImperialBattleUser@@QAEXXZ
_TEXT	SEGMENT
?ResetData@CImperialBattleUser@@QAEXXZ PROC		; CImperialBattleUser::ResetData, COMDAT
; _this$ = ecx

; 17   : 		this->m_iIndex = -1;

  00000	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 18   : 		this->m_bIsUse = FALSE;

  00007	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 19   : 	}

  0000e	c3		 ret	 0
?ResetData@CImperialBattleUser@@QAEXXZ ENDP		; CImperialBattleUser::ResetData
_TEXT	ENDS
PUBLIC	?GetIndex@CImperialBattleUser@@QAEHXZ		; CImperialBattleUser::GetIndex
; Function compile flags: /Ogtp
;	COMDAT ?GetIndex@CImperialBattleUser@@QAEHXZ
_TEXT	SEGMENT
?GetIndex@CImperialBattleUser@@QAEHXZ PROC		; CImperialBattleUser::GetIndex, COMDAT
; _this$ = ecx

; 23   : 		return this->m_iIndex;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 24   : 	}

  00003	c3		 ret	 0
?GetIndex@CImperialBattleUser@@QAEHXZ ENDP		; CImperialBattleUser::GetIndex
_TEXT	ENDS
PUBLIC	?SetIndex@CImperialBattleUser@@QAEXH@Z		; CImperialBattleUser::SetIndex
; Function compile flags: /Ogtp
;	COMDAT ?SetIndex@CImperialBattleUser@@QAEXH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?SetIndex@CImperialBattleUser@@QAEXH@Z PROC		; CImperialBattleUser::SetIndex, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		this->m_iIndex = iIndex;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 29   : 		this->m_bIsUse = TRUE;

  00009	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1

; 30   : 	}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetIndex@CImperialBattleUser@@QAEXH@Z ENDP		; CImperialBattleUser::SetIndex
_TEXT	ENDS
PUBLIC	?IsUseData@CImperialBattleUser@@QAEHXZ		; CImperialBattleUser::IsUseData
; Function compile flags: /Ogtp
;	COMDAT ?IsUseData@CImperialBattleUser@@QAEHXZ
_TEXT	SEGMENT
?IsUseData@CImperialBattleUser@@QAEHXZ PROC		; CImperialBattleUser::IsUseData, COMDAT
; _this$ = ecx

; 34   : 		return this->m_bIsUse;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 35   : 	}

  00003	c3		 ret	 0
?IsUseData@CImperialBattleUser@@QAEHXZ ENDP		; CImperialBattleUser::IsUseData
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCImperialBattleUser@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImperialBattleUser@@UAEPAXI@Z PROC			; CImperialBattleUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImperialBattleUser@@6B@
  00010	74 09		 je	 SHORT $LN6@scalar
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$LN6@scalar:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_GCImperialBattleUser@@UAEPAXI@Z ENDP			; CImperialBattleUser::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CImperialBattleUserMng@@6B@			; CImperialBattleUserMng::`vftable'
PUBLIC	??1CImperialBattleUserMng@@UAE@XZ		; CImperialBattleUserMng::~CImperialBattleUserMng
PUBLIC	??_R4CImperialBattleUserMng@@6B@		; CImperialBattleUserMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImperialBattleUserMng@@@8		; CImperialBattleUserMng `RTTI Type Descriptor'
PUBLIC	??_R3CImperialBattleUserMng@@8			; CImperialBattleUserMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImperialBattleUserMng@@8			; CImperialBattleUserMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImperialBattleUserMng@@8		; CImperialBattleUserMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_ECImperialBattleUserMng@@UAEPAXI@Z:PROC	; CImperialBattleUserMng::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CImperialBattleUserMng@@8
; File e:\work\tranet_version\gs\gameserver\imperialbattleusermng.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CImperialBattleUserMng@@8 DD FLAT:??_R0?AVCImperialBattleUserMng@@@8 ; CImperialBattleUserMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImperialBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_R2CImperialBattleUserMng@@8
rdata$r	SEGMENT
??_R2CImperialBattleUserMng@@8 DD FLAT:??_R1A@?0A@EA@CImperialBattleUserMng@@8 ; CImperialBattleUserMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CImperialBattleUserMng@@8
rdata$r	SEGMENT
??_R3CImperialBattleUserMng@@8 DD 00H			; CImperialBattleUserMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CImperialBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImperialBattleUserMng@@@8
_DATA	SEGMENT
??_R0?AVCImperialBattleUserMng@@@8 DD FLAT:??_7type_info@@6B@ ; CImperialBattleUserMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImperialBattleUserMng@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImperialBattleUserMng@@6B@
rdata$r	SEGMENT
??_R4CImperialBattleUserMng@@6B@ DD 00H			; CImperialBattleUserMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImperialBattleUserMng@@@8
	DD	FLAT:??_R3CImperialBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_7CImperialBattleUserMng@@6B@
CONST	SEGMENT
??_7CImperialBattleUserMng@@6B@ DD FLAT:??_R4CImperialBattleUserMng@@6B@ ; CImperialBattleUserMng::`vftable'
	DD	FLAT:??_ECImperialBattleUserMng@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CImperialBattleUserMng@@UAE@XZ
_TEXT	SEGMENT
??1CImperialBattleUserMng@@UAE@XZ PROC			; CImperialBattleUserMng::~CImperialBattleUserMng, COMDAT
; _this$ = ecx

; 23   : 	return;
; 24   : }

  00000	68 00 00 00 00	 push	 OFFSET ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  00005	6a 05		 push	 5
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CImperialBattleUserMng@@6B@
  0000d	6a 0c		 push	 12			; 0000000cH
  0000f	83 c1 04	 add	 ecx, 4
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00018	c3		 ret	 0
??1CImperialBattleUserMng@@UAE@XZ ENDP			; CImperialBattleUserMng::~CImperialBattleUserMng
_TEXT	ENDS
PUBLIC	??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@ ; `string'
PUBLIC	?AddUserData@CImperialBattleUserMng@@QAEHH@Z	; CImperialBattleUserMng::AddUserData
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
CONST	SEGMENT
??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@ DB '['
	DB	'Imperial][User Mng] Add User Fail - Disconnect User [%s][%s]', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleusermng.cpp
CONST	ENDS
;	COMDAT ?AddUserData@CImperialBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?AddUserData@CImperialBattleUserMng@@QAEHH@Z PROC	; CImperialBattleUserMng::AddUserData, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 43   : 	if ( !gObjIsConnected(iIndex))

  00005	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 2b		 jne	 SHORT $LN5@AddUserDat

; 44   : 	{
; 45   : 		LogAddTD("[Imperial][User Mng] Add User Fail - Disconnect User [%s][%s]",
; 46   : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001c	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00022	03 c7		 add	 eax, edi
  00024	8d 48 77	 lea	 ecx, DWORD PTR [eax+119]
  00027	51		 push	 ecx
  00028	83 c0 6c	 add	 eax, 108		; 0000006cH
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	5f		 pop	 edi

; 57   : 			
; 58   : 			return TRUE;
; 59   : 		}
; 60   : 	}
; 61   : 
; 62   : 	return FALSE;

  0003b	33 c0		 xor	 eax, eax
  0003d	5e		 pop	 esi

; 63   : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
$LN5@AddUserDat:

; 47   : 
; 48   : 		return FALSE;
; 49   : 	}
; 50   : 
; 51   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  00042	33 c9		 xor	 ecx, ecx
  00044	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00047	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0004a	8d 9b 00 00 00
	00		 npad	 6
$LL4@AddUserDat:

; 52   : 	{
; 53   : 		if ( this->m_BattleUser[iCount].IsUseData() == FALSE )

  00050	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00053	74 12		 je	 SHORT $LN13@AddUserDat

; 47   : 
; 48   : 		return FALSE;
; 49   : 	}
; 50   : 
; 51   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  00055	03 c8		 add	 ecx, eax
  00057	83 c2 0c	 add	 edx, 12			; 0000000cH
  0005a	83 f9 05	 cmp	 ecx, 5
  0005d	7c f1		 jl	 SHORT $LL4@AddUserDat

; 57   : 			
; 58   : 			return TRUE;
; 59   : 		}
; 60   : 	}
; 61   : 
; 62   : 	return FALSE;

  0005f	5f		 pop	 edi
  00060	33 c0		 xor	 eax, eax
  00062	5e		 pop	 esi

; 63   : }

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
$LN13@AddUserDat:

; 54   : 		{
; 55   : 			this->m_BattleUser[iCount].SetIndex(iIndex);

  00067	8d 14 49	 lea	 edx, DWORD PTR [ecx+ecx*2]
  0006a	8d 4c 96 04	 lea	 ecx, DWORD PTR [esi+edx*4+4]
  0006e	89 79 04	 mov	 DWORD PTR [ecx+4], edi
  00071	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 56   : 			this->m_iBattleUserCount++;

  00074	01 46 40	 add	 DWORD PTR [esi+64], eax
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi

; 63   : }

  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?AddUserData@CImperialBattleUserMng@@QAEHH@Z ENDP	; CImperialBattleUserMng::AddUserData
_TEXT	ENDS
PUBLIC	??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z	; CImperialBattleUserMng::DeleteUserData
;	COMDAT ??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
CONST	SEGMENT
??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User Fail - Unvalid Index:%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
CONST	SEGMENT
??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User - [%s][%s] Current Battle Use'
	DB	'r:%d', 00H					; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleusermng.cpp
CONST	ENDS
;	COMDAT ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z PROC	; CImperialBattleUserMng::DeleteUserData, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	if ( iIndex < 0 || iIndex > OBJMAX-1)

  00003	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00006	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  0000c	77 66		 ja	 SHORT $LN6@DeleteUser

; 74   : 	}
; 75   : 
; 76   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  0000e	56		 push	 esi
  0000f	33 c0		 xor	 eax, eax
  00011	8d 71 08	 lea	 esi, DWORD PTR [ecx+8]
$LL5@DeleteUser:

; 77   : 	{
; 78   : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00014	83 7e 04 01	 cmp	 DWORD PTR [esi+4], 1
  00018	75 04		 jne	 SHORT $LN4@DeleteUser

; 79   : 		{
; 80   : 			if ( this->m_BattleUser[iCount].GetIndex() == iIndex )

  0001a	39 16		 cmp	 DWORD PTR [esi], edx
  0001c	74 10		 je	 SHORT $LN17@DeleteUser
$LN4@DeleteUser:

; 74   : 	}
; 75   : 
; 76   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  0001e	40		 inc	 eax
  0001f	83 c6 0c	 add	 esi, 12			; 0000000cH
  00022	83 f8 05	 cmp	 eax, 5
  00025	7c ed		 jl	 SHORT $LL5@DeleteUser

; 88   : 			}
; 89   : 		}
; 90   : 	}
; 91   : 
; 92   : 	return FALSE;

  00027	33 c0		 xor	 eax, eax
  00029	5e		 pop	 esi

; 93   : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN17@DeleteUser:

; 81   : 			{
; 82   : 				this->m_BattleUser[iCount].ResetData();

  0002e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]

; 83   : 				this->m_iBattleUserCount--;
; 84   : 				LogAddTD("[Imperial][User Mng] Delete User - [%s][%s] Current Battle User:%d",
; 85   : 					gObj[iIndex].AccountID, gObj[iIndex].Name, this->m_iBattleUserCount);

  00031	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00037	8d 44 81 04	 lea	 eax, DWORD PTR [ecx+eax*4+4]
  0003b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00042	83 ce ff	 or	 esi, -1
  00045	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00048	01 71 40	 add	 DWORD PTR [ecx+64], esi
  0004b	8b 49 40	 mov	 ecx, DWORD PTR [ecx+64]
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00053	51		 push	 ecx
  00054	03 c2		 add	 eax, edx
  00056	8d 48 77	 lea	 ecx, DWORD PTR [eax+119]
  00059	51		 push	 ecx
  0005a	83 c0 6c	 add	 eax, 108		; 0000006cH
  0005d	50		 push	 eax
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00069	83 c4 10	 add	 esp, 16			; 00000010H

; 86   : 
; 87   : 				return TRUE;

  0006c	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  0006f	5e		 pop	 esi

; 93   : }

  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
$LN6@DeleteUser:

; 69   : 	{
; 70   : 		LogAddTD("[Imperial][User Mng] Delete User Fail - Unvalid Index:%d",
; 71   : 			iIndex);

  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00080	83 c4 08	 add	 esp, 8

; 72   : 
; 73   : 		return FALSE;

  00083	33 c0		 xor	 eax, eax

; 93   : }

  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ENDP	; CImperialBattleUserMng::DeleteUserData
_TEXT	ENDS
PUBLIC	??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	?CheckUserState@CImperialBattleUserMng@@QAEXXZ	; CImperialBattleUserMng::CheckUserState
;	COMDAT ??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
CONST	SEGMENT
??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User - Map Move [%s][%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
CONST	SEGMENT
??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User - Disconnect [%s][%s]', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleusermng.cpp
CONST	ENDS
;	COMDAT ?CheckUserState@CImperialBattleUserMng@@QAEXXZ
_TEXT	SEGMENT
tv83 = -8						; size = 4
tv268 = -4						; size = 4
?CheckUserState@CImperialBattleUserMng@@QAEXXZ PROC	; CImperialBattleUserMng::CheckUserState, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi

; 99   : 	int iIndex;
; 100  : 
; 101  : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  0000a	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  0000d	57		 push	 edi
  0000e	89 45 fc	 mov	 DWORD PTR tv268[ebp], eax
  00011	c7 45 f8 05 00
	00 00		 mov	 DWORD PTR tv83[ebp], 5
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL6@CheckUserS:

; 102  : 	{
; 103  : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00020	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  00024	0f 85 94 00 00
	00		 jne	 $LN5@CheckUserS

; 104  : 		{
; 105  : 			iIndex = this->m_BattleUser[iCount].GetIndex();

  0002a	8b 38		 mov	 edi, DWORD PTR [eax]

; 106  : 
; 107  : 			if ( !gObjIsConnected(iIndex))

  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00032	83 c4 04	 add	 esp, 4
  00035	85 c0		 test	 eax, eax
  00037	75 2c		 jne	 SHORT $LN2@CheckUserS

; 108  : 			{
; 109  : 				this->DeleteUserData(iIndex);

  00039	57		 push	 edi
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::DeleteUserData

; 110  : 
; 111  : 				LogAddTD("[Imperial][User Mng] Delete User - Disconnect [%s][%s]",
; 112  : 					gObj[iIndex].AccountID, gObj[iIndex].Name);

  00041	8b c7		 mov	 eax, edi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004f	8d 50 77	 lea	 edx, DWORD PTR [eax+119]
  00052	52		 push	 edx
  00053	83 c0 6c	 add	 eax, 108		; 0000006cH
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@CheckUserS:

; 113  : 			}
; 114  : 
; 115  : 			if ( !IMPERIAL_MAP_RANGE(gObj[iIndex].MapNumber) &&
; 116  : 				 gObj[iIndex].m_State == 2 &&
; 117  : 				 gObj[iIndex].Live == 1 )

  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006b	8b f7		 mov	 esi, edi
  0006d	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00073	0f b6 84 0e 49
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+329]
  0007b	3c 45		 cmp	 al, 69			; 00000045H
  0007d	72 09		 jb	 SHORT $LN17@CheckUserS
  0007f	b2 48		 mov	 dl, 72			; 00000048H
  00081	3a d0		 cmp	 dl, al
  00083	1b c0		 sbb	 eax, eax
  00085	40		 inc	 eax
  00086	75 36		 jne	 SHORT $LN5@CheckUserS
$LN17@CheckUserS:
  00088	83 bc 0e 20 02
	00 00 02	 cmp	 DWORD PTR [esi+ecx+544], 2
  00090	75 2c		 jne	 SHORT $LN5@CheckUserS
  00092	80 7c 0e 6a 01	 cmp	 BYTE PTR [esi+ecx+106], 1
  00097	75 25		 jne	 SHORT $LN5@CheckUserS

; 118  : 			{
; 119  : 				this->DeleteUserData(iIndex);

  00099	57		 push	 edi
  0009a	8b cb		 mov	 ecx, ebx
  0009c	e8 00 00 00 00	 call	 ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::DeleteUserData

; 120  : 
; 121  : 				LogAddTD("[Imperial][User Mng] Delete User - Map Move [%s][%s]",
; 122  : 					gObj[iIndex].AccountID, gObj[iIndex].Name);

  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a6	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000aa	51		 push	 ecx
  000ab	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@CheckUserS:

; 99   : 	int iIndex;
; 100  : 
; 101  : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  000be	8b 45 fc	 mov	 eax, DWORD PTR tv268[ebp]
  000c1	83 c0 0c	 add	 eax, 12			; 0000000cH
  000c4	ff 4d f8	 dec	 DWORD PTR tv83[ebp]
  000c7	89 45 fc	 mov	 DWORD PTR tv268[ebp], eax
  000ca	0f 85 50 ff ff
	ff		 jne	 $LL6@CheckUserS
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx

; 123  : 			}
; 124  : 		}
; 125  : 	}
; 126  : }

  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
?CheckUserState@CImperialBattleUserMng@@QAEXXZ ENDP	; CImperialBattleUserMng::CheckUserState
_TEXT	ENDS
PUBLIC	?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::CheckUserIsInEvent
; Function compile flags: /Ogtp
;	COMDAT ?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z PROC ; CImperialBattleUserMng::CheckUserIsInEvent, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 130  : 	for ( int i = 0; i < MAX_IMPERIAL_BATTLE_USER ; ++i )

  00003	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	83 c1 08	 add	 ecx, 8
  0000b	eb 03 8d 49 00	 npad	 5
$LL4@CheckUserI:

; 131  : 	{
; 132  : 		if ( iIndex == this->m_BattleUser[i].GetIndex() )

  00010	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00012	74 0f		 je	 SHORT $LN10@CheckUserI

; 130  : 	for ( int i = 0; i < MAX_IMPERIAL_BATTLE_USER ; ++i )

  00014	40		 inc	 eax
  00015	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00018	83 f8 05	 cmp	 eax, 5
  0001b	7c f3		 jl	 SHORT $LL4@CheckUserI

; 135  : 		}
; 136  : 	}
; 137  : 	return FALSE;

  0001d	33 c0		 xor	 eax, eax

; 138  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN10@CheckUserI:

; 133  : 		{
; 134  : 			return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1

; 138  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z ENDP ; CImperialBattleUserMng::CheckUserIsInEvent
_TEXT	ENDS
PUBLIC	??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ ; `string'
PUBLIC	??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ ; `string'
PUBLIC	?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z	; CImperialBattleUserMng::MoveAllUser
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
;	COMDAT ??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
CONST	SEGMENT
??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ DB '['
	DB	'Imperial][User Mng] [%s][%s] MoveGate Fail (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
CONST	SEGMENT
??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ DB '['
	DB	'Imperial][User Mng] [%s][%s] MoveGate(%d)', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleusermng.cpp
CONST	ENDS
;	COMDAT ?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv155 = -4						; size = 4
_iGateNumber$ = 8					; size = 4
?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z PROC	; CImperialBattleUserMng::MoveAllUser, COMDAT
; _this$ = ecx

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 142  : 	int iIndex;
; 143  : 	BOOL bMoveGateSuccess = FALSE;
; 144  : 
; 145  : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  00009	8b 7d 08	 mov	 edi, DWORD PTR _iGateNumber$[ebp]
  0000c	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8d 59 0c	 lea	 ebx, DWORD PTR [ecx+12]
  00012	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR tv155[ebp], 5
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL6@MoveAllUse:

; 146  : 	{
; 147  : 		iIndex = this->m_BattleUser[iCount].GetIndex();
; 148  : 
; 149  : 		if ( this->m_BattleUser[iCount].IsUseData()  )

  00020	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  00023	8b 73 fc	 mov	 esi, DWORD PTR [ebx-4]
  00026	74 6f		 je	 SHORT $LN5@MoveAllUse

; 150  : 		{
; 151  : 			bMoveGateSuccess = gObjMoveGate(iIndex, iGateNumber);

  00028	57		 push	 edi
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  0002f	83 c4 08	 add	 esp, 8

; 152  : 
; 153  : 			if ( bMoveGateSuccess == TRUE )

  00032	83 f8 01	 cmp	 eax, 1
  00035	75 26		 jne	 SHORT $LN2@MoveAllUse

; 154  : 			{
; 155  : 				LogAddTD("[Imperial][User Mng] [%s][%s] MoveGate(%d)",
; 156  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iGateNumber);

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003c	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00042	03 c6		 add	 eax, esi
  00044	57		 push	 edi
  00045	8d 48 77	 lea	 ecx, DWORD PTR [eax+119]
  00048	51		 push	 ecx
  00049	83 c0 6c	 add	 eax, 108		; 0000006cH
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00058	83 c4 10	 add	 esp, 16			; 00000010H

; 157  : 			}
; 158  : 			else

  0005b	eb 3a		 jmp	 SHORT $LN5@MoveAllUse
$LN2@MoveAllUse:

; 159  : 			{
; 160  : 				this->DeleteUserData(iIndex);

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::DeleteUserData

; 161  : 
; 162  : 				LogAddTD( "[Imperial][User Mng] [%s][%s] MoveGate Fail (%d)",
; 163  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iGateNumber);

  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006b	8b d6		 mov	 edx, esi
  0006d	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00073	03 c2		 add	 eax, edx
  00075	57		 push	 edi
  00076	8d 48 77	 lea	 ecx, DWORD PTR [eax+119]
  00079	51		 push	 ecx
  0007a	83 c0 6c	 add	 eax, 108		; 0000006cH
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 164  : 
; 165  : 				gObjMoveGate(iIndex, 137);

  00089	68 89 00 00 00	 push	 137			; 00000089H
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  00094	83 c4 18	 add	 esp, 24			; 00000018H
$LN5@MoveAllUse:

; 142  : 	int iIndex;
; 143  : 	BOOL bMoveGateSuccess = FALSE;
; 144  : 
; 145  : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  00097	83 c3 0c	 add	 ebx, 12			; 0000000cH
  0009a	ff 4d fc	 dec	 DWORD PTR tv155[ebp]
  0009d	75 81		 jne	 SHORT $LL6@MoveAllUse

; 166  : 			}
; 167  : 		}
; 168  : 	}
; 169  : 
; 170  : 	return TRUE;

  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	b8 01 00 00 00	 mov	 eax, 1
  000a6	5b		 pop	 ebx

; 171  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z ENDP	; CImperialBattleUserMng::MoveAllUser
_TEXT	ENDS
PUBLIC	??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@ ; `string'
PUBLIC	?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z	; CImperialBattleUserMng::SetMaxUser
;	COMDAT ??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@
CONST	SEGMENT
??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@ DB '['
	DB	'Imperial][User Mng] Set Max User:%d', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z
_TEXT	SEGMENT
_iMaxUser$ = 8						; size = 4
?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z PROC	; CImperialBattleUserMng::SetMaxUser, COMDAT
; _this$ = ecx

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 177  : 	this->m_iBattleMaxUser = iMaxUser;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMaxUser$[ebp]
  00006	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 178  : 
; 179  : 	if ( iMaxUser > MAX_IMPERIAL_BATTLE_USER )

  00009	83 f8 05	 cmp	 eax, 5
  0000c	7e 16		 jle	 SHORT $LN1@SetMaxUser

; 180  : 	{
; 181  : 		this->m_iBattleMaxUser = MAX_IMPERIAL_BATTLE_USER;
; 182  : 
; 183  : 		LogAddTD("[Imperial][User Mng] Set Max User:%d",
; 184  : 			iMaxUser);

  0000e	50		 push	 eax
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@
  00014	c7 41 44 05 00
	00 00		 mov	 DWORD PTR [ecx+68], 5
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00021	83 c4 08	 add	 esp, 8
$LN1@SetMaxUser:

; 185  : 	}
; 186  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z ENDP	; CImperialBattleUserMng::SetMaxUser
_TEXT	ENDS
PUBLIC	?GetMaxUser@CImperialBattleUserMng@@QAEHXZ	; CImperialBattleUserMng::GetMaxUser
; Function compile flags: /Ogtp
;	COMDAT ?GetMaxUser@CImperialBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?GetMaxUser@CImperialBattleUserMng@@QAEHXZ PROC		; CImperialBattleUserMng::GetMaxUser, COMDAT
; _this$ = ecx

; 192  : 	return this->m_iBattleMaxUser;

  00000	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]

; 193  : }

  00003	c3		 ret	 0
?GetMaxUser@CImperialBattleUserMng@@QAEHXZ ENDP		; CImperialBattleUserMng::GetMaxUser
_TEXT	ENDS
PUBLIC	?GetUserCount@CImperialBattleUserMng@@QAEHXZ	; CImperialBattleUserMng::GetUserCount
; Function compile flags: /Ogtp
;	COMDAT ?GetUserCount@CImperialBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?GetUserCount@CImperialBattleUserMng@@QAEHXZ PROC	; CImperialBattleUserMng::GetUserCount, COMDAT
; _this$ = ecx

; 198  : 	return this->m_iBattleUserCount;

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]

; 199  : }

  00003	c3		 ret	 0
?GetUserCount@CImperialBattleUserMng@@QAEHXZ ENDP	; CImperialBattleUserMng::GetUserCount
_TEXT	ENDS
PUBLIC	?IsEmpty@CImperialBattleUserMng@@QAEHXZ		; CImperialBattleUserMng::IsEmpty
; Function compile flags: /Ogtp
;	COMDAT ?IsEmpty@CImperialBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?IsEmpty@CImperialBattleUserMng@@QAEHXZ PROC		; CImperialBattleUserMng::IsEmpty, COMDAT
; _this$ = ecx

; 204  : 	if ( this->m_iBattleUserCount <= 0 )

  00000	33 c0		 xor	 eax, eax
  00002	39 41 40	 cmp	 DWORD PTR [ecx+64], eax
  00005	0f 9e c0	 setle	 al

; 205  : 	{
; 206  : 		return TRUE;
; 207  : 	}
; 208  : 
; 209  : 	return FALSE;
; 210  : }

  00008	c3		 ret	 0
?IsEmpty@CImperialBattleUserMng@@QAEHXZ ENDP		; CImperialBattleUserMng::IsEmpty
_TEXT	ENDS
PUBLIC	?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ	; CImperialBattleUserMng::IsOverMaxUser
; Function compile flags: /Ogtp
;	COMDAT ?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ PROC	; CImperialBattleUserMng::IsOverMaxUser, COMDAT
; _this$ = ecx

; 215  : 	if ( this->m_iBattleUserCount >=  MAX_IMPERIAL_BATTLE_USER )

  00000	33 c0		 xor	 eax, eax
  00002	83 79 40 05	 cmp	 DWORD PTR [ecx+64], 5
  00006	0f 9d c0	 setge	 al

; 216  : 	{
; 217  : 		return TRUE;
; 218  : 	}
; 219  : 
; 220  : 	return FALSE;
; 221  : }

  00009	c3		 ret	 0
?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ ENDP	; CImperialBattleUserMng::IsOverMaxUser
_TEXT	ENDS
PUBLIC	??0CImperialBattleUser@@QAE@XZ			; CImperialBattleUser::CImperialBattleUser
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleuser.h
;	COMDAT ??0CImperialBattleUser@@QAE@XZ
_TEXT	SEGMENT
??0CImperialBattleUser@@QAE@XZ PROC			; CImperialBattleUser::CImperialBattleUser, COMDAT
; _this$ = ecx

; 8    : 	CImperialBattleUser()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleUser@@6B@

; 9    : 	{
; 10   : 		this->ResetData();

  00008	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1
  0000f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 11   : 	}

  00016	c3		 ret	 0
??0CImperialBattleUser@@QAE@XZ ENDP			; CImperialBattleUser::CImperialBattleUser
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCImperialBattleUserMng@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImperialBattleUserMng@@UAEPAXI@Z PROC		; CImperialBattleUserMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CImperialBattleUserMng@@UAE@XZ ; CImperialBattleUserMng::~CImperialBattleUserMng
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar@2:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCImperialBattleUserMng@@UAEPAXI@Z ENDP		; CImperialBattleUserMng::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ResetAllData@CImperialBattleUserMng@@QAEXXZ	; CImperialBattleUserMng::ResetAllData
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\imperialbattleusermng.cpp
;	COMDAT ?ResetAllData@CImperialBattleUserMng@@QAEXXZ
_TEXT	SEGMENT
?ResetAllData@CImperialBattleUserMng@@QAEXXZ PROC	; CImperialBattleUserMng::ResetAllData, COMDAT
; _this$ = ecx

; 29   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 30   : 	this->m_iBattleUserCount = 0;

  00004	33 ff		 xor	 edi, edi

; 31   : 	this->SetMaxUser(MAX_IMPERIAL_BATTLE_USER);

  00006	6a 05		 push	 5
  00008	89 7e 40	 mov	 DWORD PTR [esi+64], edi
  0000b	e8 00 00 00 00	 call	 ?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z ; CImperialBattleUserMng::SetMaxUser

; 32   : 
; 33   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)
; 34   : 	{
; 35   : 		this->m_BattleUser[iCount].ResetData();

  00010	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00013	83 c8 ff	 or	 eax, -1
  00016	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00019	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0001c	89 7e 18	 mov	 DWORD PTR [esi+24], edi
  0001f	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00022	89 7e 24	 mov	 DWORD PTR [esi+36], edi
  00025	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  00028	89 7e 30	 mov	 DWORD PTR [esi+48], edi
  0002b	89 46 38	 mov	 DWORD PTR [esi+56], eax
  0002e	89 7e 3c	 mov	 DWORD PTR [esi+60], edi
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi

; 36   : 	}
; 37   : }

  00033	c3		 ret	 0
?ResetAllData@CImperialBattleUserMng@@QAEXXZ ENDP	; CImperialBattleUserMng::ResetAllData
_TEXT	ENDS
PUBLIC	??0CImperialBattleUserMng@@QAE@XZ		; CImperialBattleUserMng::CImperialBattleUserMng
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CImperialBattleUserMng@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CImperialBattleUserMng@@QAE@XZ$0
__ehfuncinfo$??0CImperialBattleUserMng@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CImperialBattleUserMng@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0CImperialBattleUserMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CImperialBattleUserMng@@QAE@XZ PROC			; CImperialBattleUserMng::CImperialBattleUserMng, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CImperialBattleUserMng@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	68 00 00 00 00	 push	 OFFSET ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  0002e	68 00 00 00 00	 push	 OFFSET ??0CImperialBattleUser@@QAE@XZ ; CImperialBattleUser::CImperialBattleUser
  00033	6a 05		 push	 5
  00035	6a 0c		 push	 12			; 0000000cH
  00037	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0003a	50		 push	 eax
  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImperialBattleUserMng@@6B@
  00041	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z

; 18   : 	this->ResetAllData();

  00046	8b ce		 mov	 ecx, esi
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	e8 00 00 00 00	 call	 ?ResetAllData@CImperialBattleUserMng@@QAEXXZ ; CImperialBattleUserMng::ResetAllData

; 19   : }

  00054	8b c6		 mov	 eax, esi
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CImperialBattleUserMng@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  00005	6a 05		 push	 5
  00007	6a 0c		 push	 12			; 0000000cH
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__ehhandler$??0CImperialBattleUserMng@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CImperialBattleUserMng@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CImperialBattleUserMng@@QAE@XZ ENDP			; CImperialBattleUserMng::CImperialBattleUserMng
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_ImperialBattleUserMng@@YAXXZ
text$yc	SEGMENT
??__Eg_ImperialBattleUserMng@@YAXXZ PROC		; `dynamic initializer for 'g_ImperialBattleUserMng'', COMDAT

; 11   : CImperialBattleUserMng g_ImperialBattleUserMng;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00005	e8 00 00 00 00	 call	 ??0CImperialBattleUserMng@@QAE@XZ ; CImperialBattleUserMng::CImperialBattleUserMng
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_ImperialBattleUserMng@@YAXXZ ; `dynamic atexit destructor for 'g_ImperialBattleUserMng''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_ImperialBattleUserMng@@YAXXZ ENDP		; `dynamic initializer for 'g_ImperialBattleUserMng''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_ImperialBattleUserMng@@YAXXZ
text$yd	SEGMENT
??__Fg_ImperialBattleUserMng@@YAXXZ PROC		; `dynamic atexit destructor for 'g_ImperialBattleUserMng'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00005	e9 00 00 00 00	 jmp	 ??1CImperialBattleUserMng@@UAE@XZ ; CImperialBattleUserMng::~CImperialBattleUserMng
??__Fg_ImperialBattleUserMng@@YAXXZ ENDP		; `dynamic atexit destructor for 'g_ImperialBattleUserMng''
text$yd	ENDS
PUBLIC	?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
_BSS	SEGMENT
?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A DB 048H DUP (?) ; g_ImperialBattleUserMng
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ImperialBattleUserMng$initializer$ DD FLAT:??__Eg_ImperialBattleUserMng@@YAXXZ
CRT$XCU	ENDS
END
