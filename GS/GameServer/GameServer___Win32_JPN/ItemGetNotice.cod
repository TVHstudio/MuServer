; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\ItemGetNotice.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Color@@3PAHA					; Color
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
?Color@@3PAHA DD 07H					; Color
	DD	01H
	DD	06H
	DD	09H
_DATA	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 64		 je	 SHORT $LN39@GetToken

; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 31		 jne	 SHORT $LN30@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 1b		 jne	 SHORT $LN30@GetToken
$LL24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	80 fb ff	 cmp	 bl, -1
  00053	74 44		 je	 SHORT $LN39@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _fgetc
  00061	8a d8		 mov	 bl, al
  00063	83 c4 04	 add	 esp, 4
  00066	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00069	75 e5		 jne	 SHORT $LL24@GetToken
$LN30@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE
; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006b	0f be c3	 movsx	 eax, bl
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _isspace
  00074	83 c4 04	 add	 esp, 4
  00077	85 c0		 test	 eax, eax
  00079	75 a5		 jne	 SHORT $LL31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  0007b	0f be c3	 movsx	 eax, bl
  0007e	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  00081	56		 push	 esi
  00082	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00085	0f 87 2b 01 00
	00		 ja	 $LN6@GetToken
  0008b	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN46@GetToken[ecx]
  00092	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN50@GetToken[ecx*4]
$LN39@GetToken:

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00099	b8 02 00 00 00	 mov	 eax, 2
  0009e	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a2	33 cd		 xor	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000ad	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b2	e9 99 01 00 00	 jmp	 $LN48@GetToken
$LN18@GetToken:

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000b7	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000bc	e9 8f 01 00 00	 jmp	 $LN48@GetToken
$LN17@GetToken:

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000c1	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000c6	e9 85 01 00 00	 jmp	 $LN48@GetToken
$LN16@GetToken:

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  000cb	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  000d0	e9 7b 01 00 00	 jmp	 $LN48@GetToken
$LN15@GetToken:

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  000d5	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  000da	e9 71 01 00 00	 jmp	 $LN48@GetToken
$LN14@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000f1	50		 push	 eax
  000f2	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  000f5	e8 00 00 00 00	 call	 _getc
  000fa	8a d8		 mov	 bl, al
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	80 fb ff	 cmp	 bl, -1
  00102	74 33		 je	 SHORT $LN12@GetToken
$LL13@GetToken:
  00104	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00107	74 15		 je	 SHORT $LN11@GetToken
  00109	0f be cb	 movsx	 ecx, bl
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _isdigit
  00112	83 c4 04	 add	 esp, 4
  00115	85 c0		 test	 eax, eax
  00117	75 05		 jne	 SHORT $LN11@GetToken
  00119	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  0011c	75 19		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00124	88 1e		 mov	 BYTE PTR [esi], bl
  00126	52		 push	 edx

; 102  : 			p++;

  00127	46		 inc	 esi
  00128	e8 00 00 00 00	 call	 _getc
  0012d	8a d8		 mov	 bl, al
  0012f	83 c4 04	 add	 esp, 4
  00132	80 fb ff	 cmp	 bl, -1
  00135	75 cd		 jne	 SHORT $LL13@GetToken
$LN12@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00137	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  0013a	50		 push	 eax
  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	e8 00 00 00 00	 call	 _atof
  00143	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  00149	83 c4 04	 add	 esp, 4
  0014c	5e		 pop	 esi

; 106  : 		return CurrentToken  = NUMBER ;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00157	b8 01 00 00 00	 mov	 eax, 1
  0015c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0015d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00171	51		 push	 ecx
  00172	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  00177	e8 00 00 00 00	 call	 _getc
  0017c	83 c4 04	 add	 esp, 4
  0017f	3c ff		 cmp	 al, -1
  00181	74 1e		 je	 SHORT $LN8@GetToken
$LL9@GetToken:
  00183	3c 22		 cmp	 al, 34			; 00000022H
  00185	0f 84 a1 00 00
	00		 je	 $LN7@GetToken
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 113  : 		{
; 114  : 			*p = ch;

  00191	88 06		 mov	 BYTE PTR [esi], al
  00193	52		 push	 edx

; 115  : 			p++;

  00194	46		 inc	 esi
  00195	e8 00 00 00 00	 call	 _getc
  0019a	83 c4 04	 add	 esp, 4
  0019d	3c ff		 cmp	 al, -1
  0019f	75 e2		 jne	 SHORT $LL9@GetToken
$LN8@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001a1	3c 22		 cmp	 al, 34			; 00000022H
  001a3	0f 84 83 00 00
	00		 je	 $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  001af	0f be d0	 movsx	 edx, al
  001b2	51		 push	 ecx
  001b3	52		 push	 edx

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  001b4	eb 6e		 jmp	 SHORT $LN49@GetToken
$LN6@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _isalpha
  001bc	83 c4 04	 add	 esp, 4
  001bf	85 c0		 test	 eax, eax
  001c1	0f 84 84 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  001d3	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  001d8	e8 00 00 00 00	 call	 _getc
  001dd	8a d8		 mov	 bl, al
  001df	83 c4 04	 add	 esp, 4
  001e2	80 fb ff	 cmp	 bl, -1
  001e5	74 33		 je	 SHORT $LN3@GetToken
$LL4@GetToken:
  001e7	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  001ea	74 15		 je	 SHORT $LN2@GetToken
  001ec	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  001ef	74 10		 je	 SHORT $LN2@GetToken
  001f1	0f be cb	 movsx	 ecx, bl
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 _isalnum
  001fa	83 c4 04	 add	 esp, 4
  001fd	85 c0		 test	 eax, eax
  001ff	74 19		 je	 SHORT $LN3@GetToken
$LN2@GetToken:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 133  : 			{
; 134  : 				*p=ch;

  00207	88 1e		 mov	 BYTE PTR [esi], bl
  00209	52		 push	 edx

; 135  : 				p++;

  0020a	46		 inc	 esi
  0020b	e8 00 00 00 00	 call	 _getc
  00210	8a d8		 mov	 bl, al
  00212	83 c4 04	 add	 esp, 4
  00215	80 fb ff	 cmp	 bl, -1
  00218	75 cd		 jne	 SHORT $LL4@GetToken
$LN3@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0021f	0f be cb	 movsx	 ecx, bl
  00222	50		 push	 eax
  00223	51		 push	 ecx
$LN49@GetToken:
  00224	e8 00 00 00 00	 call	 _ungetc
  00229	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 140  : 			*p=0;

  0022c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0022f	5e		 pop	 esi

; 141  : 			CurrentToken=NAME;

  00230	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0023a	33 c0		 xor	 eax, eax
  0023c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0023d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00240	33 cd		 xor	 ecx, ebp
  00242	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN5@GetToken:

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  0024b	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN48@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00250	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  0025b	5b		 pop	 ebx
  0025c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
  00265	8d 49 00	 npad	 3
$LN50@GetToken:
  00268	00 00 00 00	 DD	 $LN10@GetToken
  0026c	00 00 00 00	 DD	 $LN19@GetToken
  00270	00 00 00 00	 DD	 $LN17@GetToken
  00274	00 00 00 00	 DD	 $LN14@GetToken
  00278	00 00 00 00	 DD	 $LN18@GetToken
  0027c	00 00 00 00	 DD	 $LN16@GetToken
  00280	00 00 00 00	 DD	 $LN15@GetToken
  00284	00 00 00 00	 DD	 $LN6@GetToken
$LN46@GetToken:
  00288	00		 DB	 0
  00289	01		 DB	 1
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	02		 DB	 2
  00293	03		 DB	 3
  00294	03		 DB	 3
  00295	07		 DB	 7
  00296	03		 DB	 3
  00297	03		 DB	 3
  00298	03		 DB	 3
  00299	03		 DB	 3
  0029a	03		 DB	 3
  0029b	03		 DB	 3
  0029c	03		 DB	 3
  0029d	03		 DB	 3
  0029e	03		 DB	 3
  0029f	03		 DB	 3
  002a0	07		 DB	 7
  002a1	04		 DB	 4
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	07		 DB	 7
  002ad	07		 DB	 7
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	07		 DB	 7
  002b1	07		 DB	 7
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	07		 DB	 7
  002b9	07		 DB	 7
  002ba	07		 DB	 7
  002bb	07		 DB	 7
  002bc	07		 DB	 7
  002bd	07		 DB	 7
  002be	07		 DB	 7
  002bf	07		 DB	 7
  002c0	07		 DB	 7
  002c1	07		 DB	 7
  002c2	07		 DB	 7
  002c3	07		 DB	 7
  002c4	07		 DB	 7
  002c5	07		 DB	 7
  002c6	07		 DB	 7
  002c7	07		 DB	 7
  002c8	07		 DB	 7
  002c9	07		 DB	 7
  002ca	07		 DB	 7
  002cb	07		 DB	 7
  002cc	07		 DB	 7
  002cd	07		 DB	 7
  002ce	07		 DB	 7
  002cf	07		 DB	 7
  002d0	07		 DB	 7
  002d1	07		 DB	 7
  002d2	07		 DB	 7
  002d3	07		 DB	 7
  002d4	07		 DB	 7
  002d5	07		 DB	 7
  002d6	07		 DB	 7
  002d7	07		 DB	 7
  002d8	07		 DB	 7
  002d9	07		 DB	 7
  002da	07		 DB	 7
  002db	07		 DB	 7
  002dc	07		 DB	 7
  002dd	07		 DB	 7
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	05		 DB	 5
  002e2	07		 DB	 7
  002e3	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 81   :         {return (_Where); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 83   :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator==
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 94 c0	 sete	 al

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000b	33 c0		 xor	 eax, eax
  0000d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000f	0f 9c c0	 setl	 al

; 126  : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBE_NPBUDATA_ITEMGET@@@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Inside
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBE_NPBUDATA_ITEMGET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBE_NPBUDATA_ITEMGET@@@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 0d		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 09		 ja	 SHORT $LN3@Inside
  0000f	b8 01 00 00 00	 mov	 eax, 1

; 1287 : 		}

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
$LN3@Inside:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00018	33 c0		 xor	 eax, eax

; 1287 : 		}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?_Inside@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBE_NPBUDATA_ITEMGET@@@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXPAUDATA_ITEMGET@@0@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXPAUDATA_ITEMGET@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXPAUDATA_ITEMGET@@0@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXPAUDATA_ITEMGET@@0@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ; std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UDATA_ITEMGET@@@std@@QAE@XZ	; std::allocator<DATA_ITEMGET>::allocator<DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UDATA_ITEMGET@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UDATA_ITEMGET@@@std@@QAE@XZ PROC		; std::allocator<DATA_ITEMGET>::allocator<DATA_ITEMGET>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UDATA_ITEMGET@@@std@@QAE@XZ ENDP		; std::allocator<DATA_ITEMGET>::allocator<DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,DATA_TEXT> >::allocator<std::pair<int const ,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,DATA_TEXT> >::allocator<std::pair<int const ,DATA_TEXT> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,DATA_TEXT> >::allocator<std::pair<int const ,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEABUDATA_ITEMGET@@XZ ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator*
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEABUDATA_ITEMGET@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEABUDATA_ITEMGET@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEABUDATA_ITEMGET@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator*
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::capacity
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 05	 sar	 eax, 5

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 05	 sar	 eax, 5

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::size
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXXZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Xlen
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXXZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN4@Xlen:
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEXXZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UDATA_ITEMGET@@@std@@QAE@ABV01@@Z ; std::allocator<DATA_ITEMGET>::allocator<DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UDATA_ITEMGET@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UDATA_ITEMGET@@@std@@QAE@ABV01@@Z PROC	; std::allocator<DATA_ITEMGET>::allocator<DATA_ITEMGET>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UDATA_ITEMGET@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<DATA_ITEMGET>::allocator<DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@I@Z ; std::allocator<DATA_ITEMGET>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@I@Z PROC ; std::allocator<DATA_ITEMGET>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@I@Z ENDP ; std::allocator<DATA_ITEMGET>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Isnil
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	05 15 01 00 00	 add	 eax, 277		; 00000115H

; 613  : 		}

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Left
; Function compile flags: /Ogtp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Parent
; Function compile flags: /Ogtp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Right
; Function compile flags: /Ogtp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHUDATA_TEXT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Myval
; Function compile flags: /Ogtp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHUDATA_TEXT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHUDATA_TEXT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHUDATA_TEXT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,DATA_TEXT> >::allocator<std::pair<int const ,DATA_TEXT> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,DATA_TEXT> >::allocator<std::pair<int const ,DATA_TEXT> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,DATA_TEXT> >::allocator<std::pair<int const ,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUDATA_TEXT@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator*
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUDATA_TEXT@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUDATA_TEXT@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUDATA_TEXT@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 20	 add	 DWORD PTR [eax], 32	; 00000020H

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Compat
; Function compile flags: /Ogtp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Compat
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UDATA_ITEMGET@@@std@@QBEIXZ ; std::allocator<DATA_ITEMGET>::max_size
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UDATA_ITEMGET@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UDATA_ITEMGET@@@std@@QBEIXZ PROC	; std::allocator<DATA_ITEMGET>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UDATA_ITEMGET@@@std@@QBEIXZ ENDP	; std::allocator<DATA_ITEMGET>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Color
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	05 14 01 00 00	 add	 eax, 276		; 00000114H

; 608  : 		}

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Color
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Max
; Function compile flags: /Ogtp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00009	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  00010	75 0e		 jne	 SHORT $LN1@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00012	8b c1		 mov	 eax, ecx
  00014	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00017	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0001e	74 f2		 je	 SHORT $LL2@Max
$LN1@Max:

; 644  : 		return (_Pnode);
; 645  : 		}

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Min
; Function compile flags: /Ogtp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0000f	75 0d		 jne	 SHORT $LN1@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00011	8b c1		 mov	 eax, ecx
  00013	8b 08		 mov	 ecx, DWORD PTR [eax]
  00015	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0001c	74 f3		 je	 SHORT $LL2@Min
$LN1@Min:

; 651  : 		return (_Pnode);
; 652  : 		}

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 10		 mov	 edx, DWORD PTR [eax]
  00004	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  0000b	75 4a		 jne	 SHORT $LN3@operator

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000d	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00010	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  00017	75 1b		 jne	 SHORT $LN34@operator

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  00022	75 0d		 jne	 SHORT $LN17@operator
$LL18@operator:
  00024	8b ca		 mov	 ecx, edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  0002f	74 f3		 je	 SHORT $LL18@operator
$LN17@operator:
  00031	89 08		 mov	 DWORD PTR [eax], ecx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00033	c3		 ret	 0
$LN34@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00034	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00037	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  0003e	75 15		 jne	 SHORT $LN1@operator
$LL2@operator:
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  00045	75 0e		 jne	 SHORT $LN1@operator

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 10		 mov	 DWORD PTR [eax], edx
  00049	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0004c	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  00053	74 eb		 je	 SHORT $LL2@operator
$LN1@operator:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00055	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator:

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00057	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??$strncpy_s@$0BAA@@@YAHAAY0BAA@DPBDI@Z		; strncpy_s<256>
EXTRN	_strncpy_s:PROC
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
;	COMDAT ??$strncpy_s@$0BAA@@@YAHAAY0BAA@DPBDI@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
__Count$ = 16						; size = 4
??$strncpy_s@$0BAA@@@YAHAAY0BAA@DPBDI@Z PROC		; strncpy_s<256>, COMDAT

; 187  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(errno_t, strncpy_s, char, _Dest, _In_z_ const char *, _Source, _In_ size_t, _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Source$[ebp]
  00009	8b 55 08	 mov	 edx, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	68 00 01 00 00	 push	 256			; 00000100H
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 _strncpy_s
  00019	83 c4 10	 add	 esp, 16			; 00000010H
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??$strncpy_s@$0BAA@@@YAHAAY0BAA@DPBDI@Z ENDP		; strncpy_s<256>
_TEXT	ENDS
PUBLIC	??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z	; vsprintf_s<256>
EXTRN	_vsprintf_s:PROC
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
;	COMDAT ??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
__Args$ = 16						; size = 4
??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z PROC		; vsprintf_s<256>, COMDAT

; 367  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(int, vsprintf_s, _Deref_post_z_ char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format, va_list, _Args)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 10	 mov	 eax, DWORD PTR __Args$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00009	8b 55 08	 mov	 edx, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	68 00 01 00 00	 push	 256			; 00000100H
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 _vsprintf_s
  00019	83 c4 10	 add	 esp, 16			; 00000010H
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z ENDP		; vsprintf_s<256>
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUDATA_ITEMGET@@@std@@YAPBUDATA_ITEMGET@@ABU1@@Z ; std::addressof<DATA_ITEMGET const >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBUDATA_ITEMGET@@@std@@YAPBUDATA_ITEMGET@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUDATA_ITEMGET@@@std@@YAPBUDATA_ITEMGET@@ABU1@@Z PROC ; std::addressof<DATA_ITEMGET const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUDATA_ITEMGET@@@std@@YAPBUDATA_ITEMGET@@ABU1@@Z ENDP ; std::addressof<DATA_ITEMGET const >
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAPAU?$pair@$$CBHUDATA_TEXT@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAPAU?$pair@$$CBHUDATA_TEXT@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAPAU?$pair@$$CBHUDATA_TEXT@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,DATA_TEXT> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAPAU?$pair@$$CBHUDATA_TEXT@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHUDATA_TEXT@@@?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHUDATA_TEXT@@@1@@Z ; std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>::_Kfn<int const ,DATA_TEXT>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBHUDATA_TEXT@@@?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHUDATA_TEXT@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHUDATA_TEXT@@@?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHUDATA_TEXT@@@1@@Z PROC ; std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>::_Kfn<int const ,DATA_TEXT>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBHUDATA_TEXT@@@?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHUDATA_TEXT@@@1@@Z ENDP ; std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0>::_Kfn<int const ,DATA_TEXT>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHUDATA_TEXT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node><std::pair<int const ,DATA_TEXT> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBHUDATA_TEXT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHUDATA_TEXT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node><std::pair<int const ,DATA_TEXT> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHUDATA_TEXT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node><std::pair<int const ,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,DATA_TEXT> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,DATA_TEXT> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 0f 3e f8 00	 mov	 eax, 16268815		; 00f83e0fH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,DATA_TEXT> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0000b	74 06		 je	 SHORT $LN8@operator@2

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000d	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00010	89 08		 mov	 DWORD PTR [eax], ecx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator@2:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  0001c	75 23		 jne	 SHORT $LN40@operator@2

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  0001e	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00021	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  00028	75 45		 jne	 SHORT $LN21@operator@2
  0002a	8d 9b 00 00 00
	00		 npad	 6
$LL22@operator@2:
  00030	8b d1		 mov	 edx, ecx
  00032	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00035	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0003c	74 f2		 je	 SHORT $LL22@operator@2

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  0003e	89 10		 mov	 DWORD PTR [eax], edx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00040	c3		 ret	 0
$LN40@operator@2:

; 89   : 		else
; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00041	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00044	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  0004b	75 17		 jne	 SHORT $LN3@operator@2
  0004d	8d 49 00	 npad	 3
$LL4@operator@2:
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  00054	75 0e		 jne	 SHORT $LN3@operator@2

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00056	89 10		 mov	 DWORD PTR [eax], edx
  00058	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0005b	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  00062	74 ec		 je	 SHORT $LL4@operator@2
$LN3@operator@2:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0006d	75 02		 jne	 SHORT $LN1@operator@2

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LN21@operator@2:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  0006f	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator@2:

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00071	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??$forward@AAUDATA_TEXT@@@std@@YAAAUDATA_TEXT@@AAU1@@Z ; std::forward<DATA_TEXT &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAUDATA_TEXT@@@std@@YAAAUDATA_TEXT@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUDATA_TEXT@@@std@@YAAAUDATA_TEXT@@AAU1@@Z PROC ; std::forward<DATA_TEXT &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUDATA_TEXT@@@std@@YAAAUDATA_TEXT@@AAU1@@Z ENDP ; std::forward<DATA_TEXT &>
_TEXT	ENDS
PUBLIC	??$?0AAHAAUDATA_TEXT@@@?$_Pair_base@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z ; std::_Pair_base<int,DATA_TEXT>::_Pair_base<int,DATA_TEXT><int &,DATA_TEXT &>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAHAAUDATA_TEXT@@@?$_Pair_base@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAUDATA_TEXT@@@?$_Pair_base@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z PROC ; std::_Pair_base<int,DATA_TEXT>::_Pair_base<int,DATA_TEXT><int &,DATA_TEXT &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  0000e	57		 push	 edi
  0000f	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	89 10		 mov	 DWORD PTR [eax], edx
  00019	f3 a5		 rep movsd
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 164  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??$?0AAHAAUDATA_TEXT@@@?$_Pair_base@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z ENDP ; std::_Pair_base<int,DATA_TEXT>::_Pair_base<int,DATA_TEXT><int &,DATA_TEXT &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@HUDATA_TEXT@@@std@@@std@@YA$$QAU?$pair@HUDATA_TEXT@@@0@AAU10@@Z ; std::forward<std::pair<int,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@U?$pair@HUDATA_TEXT@@@std@@@std@@YA$$QAU?$pair@HUDATA_TEXT@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@HUDATA_TEXT@@@std@@@std@@YA$$QAU?$pair@HUDATA_TEXT@@@0@AAU10@@Z PROC ; std::forward<std::pair<int,DATA_TEXT> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@HUDATA_TEXT@@@std@@@std@@YA$$QAU?$pair@HUDATA_TEXT@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$forward@AAUDATA_ITEMGET@@@std@@YAAAUDATA_ITEMGET@@AAU1@@Z ; std::forward<DATA_ITEMGET &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAUDATA_ITEMGET@@@std@@YAAAUDATA_ITEMGET@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUDATA_ITEMGET@@@std@@YAAAUDATA_ITEMGET@@AAU1@@Z PROC ; std::forward<DATA_ITEMGET &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUDATA_ITEMGET@@@std@@YAAAUDATA_ITEMGET@@AAU1@@Z ENDP ; std::forward<DATA_ITEMGET &>
_TEXT	ENDS
PUBLIC	??$construct@AAUDATA_ITEMGET@@@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@AAU2@@Z ; std::allocator<DATA_ITEMGET>::construct<DATA_ITEMGET &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAUDATA_ITEMGET@@@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@AAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUDATA_ITEMGET@@@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@AAU2@@Z PROC ; std::allocator<DATA_ITEMGET>::construct<DATA_ITEMGET &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN3@construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN3@construct:
  00017	5f		 pop	 edi

; 209  : 		}

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
??$construct@AAUDATA_ITEMGET@@@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@AAU2@@Z ENDP ; std::allocator<DATA_ITEMGET>::construct<DATA_ITEMGET &>
_TEXT	ENDS
PUBLIC	??$forward@ABUDATA_ITEMGET@@@std@@YAABUDATA_ITEMGET@@ABU1@@Z ; std::forward<DATA_ITEMGET const &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUDATA_ITEMGET@@@std@@YAABUDATA_ITEMGET@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUDATA_ITEMGET@@@std@@YAABUDATA_ITEMGET@@ABU1@@Z PROC ; std::forward<DATA_ITEMGET const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUDATA_ITEMGET@@@std@@YAABUDATA_ITEMGET@@ABU1@@Z ENDP ; std::forward<DATA_ITEMGET const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UDATA_ITEMGET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDATA_ITEMGET@@0@Z ; std::_Ptr_cat<DATA_ITEMGET,DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UDATA_ITEMGET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDATA_ITEMGET@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UDATA_ITEMGET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDATA_ITEMGET@@0@Z PROC ; std::_Ptr_cat<DATA_ITEMGET,DATA_ITEMGET>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??$_Ptr_cat@UDATA_ITEMGET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDATA_ITEMGET@@0@Z ENDP ; std::_Ptr_cat<DATA_ITEMGET,DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$_Construct@UDATA_ITEMGET@@ABU1@@std@@YAXPAUDATA_ITEMGET@@ABU1@@Z ; std::_Construct<DATA_ITEMGET,DATA_ITEMGET const &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@UDATA_ITEMGET@@ABU1@@std@@YAXPAUDATA_ITEMGET@@ABU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UDATA_ITEMGET@@ABU1@@std@@YAXPAUDATA_ITEMGET@@ABU1@@Z PROC ; std::_Construct<DATA_ITEMGET,DATA_ITEMGET const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN3@Construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN3@Construct:
  00017	5f		 pop	 edi

; 49   : 	}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??$_Construct@UDATA_ITEMGET@@ABU1@@std@@YAXPAUDATA_ITEMGET@@ABU1@@Z ENDP ; std::_Construct<DATA_ITEMGET,DATA_ITEMGET const &>
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAXPAU?$pair@$$CBHUDATA_TEXT@@@0@@Z ; std::_Destroy<std::pair<int const ,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAXPAU?$pair@$$CBHUDATA_TEXT@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAXPAU?$pair@$$CBHUDATA_TEXT@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,DATA_TEXT> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@YAXPAU?$pair@$$CBHUDATA_TEXT@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$move@AAUDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z ; std::move<DATA_ITEMGET &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAUDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z PROC ; std::move<DATA_ITEMGET &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z ENDP ; std::move<DATA_ITEMGET &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@PAU1@@Z ; std::_Val_type<DATA_ITEMGET *>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@PAU1@@Z PROC ; std::_Val_type<DATA_ITEMGET *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@PAU1@@Z ENDP ; std::_Val_type<DATA_ITEMGET *>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$_Destroy@UDATA_ITEMGET@@@std@@YAXPAUDATA_ITEMGET@@@Z ; std::_Destroy<DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@UDATA_ITEMGET@@@std@@YAXPAUDATA_ITEMGET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UDATA_ITEMGET@@@std@@YAXPAUDATA_ITEMGET@@@Z PROC ; std::_Destroy<DATA_ITEMGET>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UDATA_ITEMGET@@@std@@YAXPAUDATA_ITEMGET@@@Z ENDP ; std::_Destroy<DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	??$forward@UDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z ; std::forward<DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z PROC ; std::forward<DATA_ITEMGET>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UDATA_ITEMGET@@@std@@YA$$QAUDATA_ITEMGET@@AAU1@@Z ENDP ; std::forward<DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
PUBLIC	??$forward@UDATA_TEXT@@@std@@YA$$QAUDATA_TEXT@@AAU1@@Z ; std::forward<DATA_TEXT>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@UDATA_TEXT@@@std@@YA$$QAUDATA_TEXT@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDATA_TEXT@@@std@@YA$$QAUDATA_TEXT@@AAU1@@Z PROC ; std::forward<DATA_TEXT>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UDATA_TEXT@@@std@@YA$$QAUDATA_TEXT@@AAU1@@Z ENDP ; std::forward<DATA_TEXT>
_TEXT	ENDS
PUBLIC	??$?0HUDATA_TEXT@@@?$_Pair_base@$$CBHUDATA_TEXT@@@std@@QAE@$$QAH$$QAUDATA_TEXT@@@Z ; std::_Pair_base<int const ,DATA_TEXT>::_Pair_base<int const ,DATA_TEXT><int,DATA_TEXT>
; Function compile flags: /Ogtp
;	COMDAT ??$?0HUDATA_TEXT@@@?$_Pair_base@$$CBHUDATA_TEXT@@@std@@QAE@$$QAH$$QAUDATA_TEXT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0HUDATA_TEXT@@@?$_Pair_base@$$CBHUDATA_TEXT@@@std@@QAE@$$QAH$$QAUDATA_TEXT@@@Z PROC ; std::_Pair_base<int const ,DATA_TEXT>::_Pair_base<int const ,DATA_TEXT><int,DATA_TEXT>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  0000e	57		 push	 edi
  0000f	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	89 10		 mov	 DWORD PTR [eax], edx
  00019	f3 a5		 rep movsd
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 164  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??$?0HUDATA_TEXT@@@?$_Pair_base@$$CBHUDATA_TEXT@@@std@@QAE@$$QAH$$QAUDATA_TEXT@@@Z ENDP ; std::_Pair_base<int const ,DATA_TEXT>::_Pair_base<int const ,DATA_TEXT><int,DATA_TEXT>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 09		 je	 SHORT $LN6@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	83 c4 04	 add	 esp, 4
$LN6@scalar:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 38   : 		}

  00000	c3		 ret	 0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetNoticeGobal@@YAXPADZZ			; SetNoticeGobal
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\itemgetnotice.cpp
;	COMDAT ?SetNoticeGobal@@YAXPADZZ
_TEXT	SEGMENT
_buff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_message$ = 8						; size = 4
?SetNoticeGobal@@YAXPADZZ PROC				; SetNoticeGobal, COMDAT

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 168  : 	char buff[256] = { 0 };

  00013	68 ff 00 00 00	 push	 255			; 000000ffH
  00018	8d 85 fd fe ff
	ff		 lea	 eax, DWORD PTR _buff$[ebp+1]
  0001e	6a 00		 push	 0
  00020	50		 push	 eax
  00021	c6 85 fc fe ff
	ff 00		 mov	 BYTE PTR _buff$[ebp], 0
  00028	e8 00 00 00 00	 call	 _memset

; 169  : 
; 170  : 	va_list arg;
; 171  : 	va_start(arg, message);
; 172  : 	vsprintf_s(buff, message, arg);

  0002d	8b 55 08	 mov	 edx, DWORD PTR _message$[ebp]
  00030	8d 4d 0c	 lea	 ecx, DWORD PTR _message$[ebp+4]
  00033	51		 push	 ecx
  00034	52		 push	 edx
  00035	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buff$[ebp]
  0003b	68 00 01 00 00	 push	 256			; 00000100H
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _vsprintf_s

; 173  : 	va_end(arg);
; 174  : 
; 175  : 	int size = strlen(buff);

  00046	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buff$[ebp]
  0004c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL7@SetNoticeG:
  00052	8a 08		 mov	 cl, BYTE PTR [eax]
  00054	40		 inc	 eax
  00055	84 c9		 test	 cl, cl
  00057	75 f9		 jne	 SHORT $LL7@SetNoticeG
  00059	2b c2		 sub	 eax, edx

; 176  : 
; 177  : 	size = ((size > MAX_MESSAGE_SIZE) ? MAX_MESSAGE_SIZE : size);

  0005b	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  00060	7e 05		 jle	 SHORT $LN3@SetNoticeG
  00062	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
$LN3@SetNoticeG:

; 178  : 	buff[size] = 0;
; 179  : 
; 180  : 	AllSendServerMsg(buff);

  00067	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buff$[ebp]
  0006d	51		 push	 ecx
  0006e	c6 84 05 fc fe
	ff ff 00	 mov	 BYTE PTR _buff$[ebp+eax], 0
  00076	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg

; 181  : }

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007e	33 cd		 xor	 ecx, ebp
  00080	83 c4 04	 add	 esp, 4
  00083	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
?SetNoticeGobal@@YAXPADZZ ENDP				; SetNoticeGobal
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEAAUDATA_ITEMGET@@XZ ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator*
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEAAUDATA_ITEMGET@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEAAUDATA_ITEMGET@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEAAUDATA_ITEMGET@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator*
_TEXT	ENDS
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEPAUDATA_ITEMGET@@XZ ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator->
; Function compile flags: /Ogtp
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEPAUDATA_ITEMGET@@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEPAUDATA_ITEMGET@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator->, COMDAT
; _this$ = ecx

; 327  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  : 		}

  00002	c3		 ret	 0
??C?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBEPAUDATA_ITEMGET@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator->
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@V?$allocator@UDATA_ITEMGET@@@1@@Z ; std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@V?$allocator@UDATA_ITEMGET@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@V?$allocator@UDATA_ITEMGET@@@1@@Z PROC ; std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@V?$allocator@UDATA_ITEMGET@@@1@@Z ENDP ; std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lmost
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rmost
; Function compile flags: /Ogtp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Root
; Function compile flags: /Ogtp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx

; 556  : 		}

  0000a	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Key
; Function compile flags: /Ogtp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUDATA_TEXT@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUDATA_TEXT@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUDATA_TEXT@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUDATA_TEXT@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 20	 add	 DWORD PTR [eax], 32	; 00000020H

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 94 c0	 sete	 al

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEII@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEII@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 07	 mov	 edx, 134217727		; 07ffffffH
  0000d	c1 f8 05	 sar	 eax, 5
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	73 02		 jae	 SHORT $LN1@Grow_to

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

  00027	8b c1		 mov	 eax, ecx
$LN1@Grow_to:

; 1282 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?_Grow_to@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IBEII@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Grow_to
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lbound
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  00010	75 1c		 jne	 SHORT $LN3@Lbound
  00012	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00015	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00017	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  0001a	7d 05		 jge	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  0001c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001f	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  00021	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00023	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00025	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0002c	74 e9		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 be 15 01 00
	00 00		 cmp	 BYTE PTR [esi+277], 0
  00018	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  0001a	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001d	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00020	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00023	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00026	5e		 pop	 esi
  00027	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0002a	75 0c		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  0002c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0002f	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  00031	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  00038	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0003b	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003d	75 0b		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003f	89 01		 mov	 DWORD PTR [ecx], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  00041	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  00043	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
$LN2@Lrotate:

; 1775 : 		else
; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  0004a	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0004d	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0004f	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 be 15 01 00
	00 00		 cmp	 BYTE PTR [esi+277], 0
  00018	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  0001a	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001d	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00020	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00023	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00026	5e		 pop	 esi
  00027	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0002a	75 0d		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  0002c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0002f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00032	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  00039	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0003c	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003f	75 0d		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00041	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00044	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00047	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
$LN2@Rrotate:

; 1805 : 		else
; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0004e	89 01		 mov	 DWORD PTR [ecx], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00050	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00053	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$?0AAHAAUDATA_TEXT@@@?$pair@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z ; std::pair<int,DATA_TEXT>::pair<int,DATA_TEXT><int &,DATA_TEXT &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAUDATA_TEXT@@@?$pair@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAUDATA_TEXT@@@?$pair@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z PROC ; std::pair<int,DATA_TEXT>::pair<int,DATA_TEXT><int &,DATA_TEXT &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  0000e	57		 push	 edi
  0000f	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	89 10		 mov	 DWORD PTR [eax], edx
  00019	f3 a5		 rep movsd
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 248  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??$?0AAHAAUDATA_TEXT@@@?$pair@HUDATA_TEXT@@@std@@QAE@AAHAAUDATA_TEXT@@@Z ENDP ; std::pair<int,DATA_TEXT>::pair<int,DATA_TEXT><int &,DATA_TEXT &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@AAU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@AAU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@AAU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@AAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@AAU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@AAU2@@Z PROC ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN7@Cons_val
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN7@Cons_val:
  00017	5f		 pop	 edi

; 281  : 	}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@AAU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@AAU2@@Z ENDP ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET &>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@IPAU1@@Z ; std::_Allocate<DATA_ITEMGET>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@IPAU1@@Z
_TEXT	SEGMENT
$T213520 = -12						; size = 12
$T213525 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@IPAU1@@Z PROC ; std::_Allocate<DATA_ITEMGET>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 40		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	07		 cmp	 ecx, 134217727		; 07ffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate
  00017	c1 e1 05	 shl	 ecx, 5
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	83 c4 04	 add	 esp, 4
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 28		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	8d 45 08	 lea	 eax, DWORD PTR $T213525[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d f4	 lea	 ecx, DWORD PTR $T213520[ebp]
  0002e	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T213525[ebp], 0
  00035	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003f	8d 4d f4	 lea	 ecx, DWORD PTR $T213520[ebp]
  00042	51		 push	 ecx
  00043	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T213520[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@UDATA_ITEMGET@@@std@@YAPAUDATA_ITEMGET@@IPAU1@@Z ENDP ; std::_Allocate<DATA_ITEMGET>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	56		 push	 esi
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T213544 = -12						; size = 12
$T213548 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 43		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 a0 0e ea
	00		 cmp	 ecx, 15339168		; 00ea0ea0H
  00015	77 13		 ja	 SHORT $LN1@Allocate@2
  00017	69 c9 18 01 00
	00		 imul	 ecx, 280		; 00000118H
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00028	75 28		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  0002a	8d 45 08	 lea	 eax, DWORD PTR $T213548[ebp]
  0002d	50		 push	 eax
  0002e	8d 4d f4	 lea	 ecx, DWORD PTR $T213544[ebp]
  00031	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T213548[ebp], 0
  00038	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003d	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00042	8d 4d f4	 lea	 ecx, DWORD PTR $T213544[ebp]
  00045	51		 push	 ecx
  00046	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T213544[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@ABU3@@Z ; std::allocator<DATA_ITEMGET>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@ABU3@@Z PROC ; std::allocator<DATA_ITEMGET>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 197  : 		_Construct(_Ptr, _Val);

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN5@construct@2
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN5@construct@2:
  00017	5f		 pop	 edi

; 198  : 		}

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@ABU3@@Z ENDP ; std::allocator<DATA_ITEMGET>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@2@@Z ; std::allocator<std::pair<int const ,DATA_TEXT> >::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@2@@Z PROC ; std::allocator<std::pair<int const ,DATA_TEXT> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@2@@Z ENDP ; std::allocator<std::pair<int const ,DATA_TEXT> >::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::max_size
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 0f 3e f8 00	 mov	 eax, 16268815		; 00f83e0fH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator--
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<DATA_ITEMGET *,DATA_ITEMGET *>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<DATA_ITEMGET *,DATA_ITEMGET *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 19		 je	 SHORT $LN1@Move
  00011	56		 push	 esi
  00012	57		 push	 edi
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

  00013	8b f2		 mov	 esi, edx
  00015	8b f8		 mov	 edi, eax
  00017	83 c2 20	 add	 edx, 32			; 00000020H
  0001a	b9 08 00 00 00	 mov	 ecx, 8
  0001f	83 c0 20	 add	 eax, 32			; 00000020H
  00022	f3 a5		 rep movsd
  00024	3b d3		 cmp	 edx, ebx
  00026	75 eb		 jne	 SHORT $LL3@Move
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
$LN1@Move:
  0002a	5b		 pop	 ebx

; 2515 : 	return (_Dest);
; 2516 : 	}

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<DATA_ITEMGET *,DATA_ITEMGET *>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &,bool>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@@Z ; std::allocator<DATA_ITEMGET>::destroy
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@@Z PROC ; std::allocator<DATA_ITEMGET>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@@Z ENDP ; std::allocator<DATA_ITEMGET>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@$$QAU3@@Z ; std::allocator<DATA_ITEMGET>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@$$QAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@$$QAU3@@Z PROC ; std::allocator<DATA_ITEMGET>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN3@construct@3
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN3@construct@3:
  00017	5f		 pop	 edi

; 203  : 		}

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?construct@?$allocator@UDATA_ITEMGET@@@std@@QAEXPAUDATA_ITEMGET@@$$QAU3@@Z ENDP ; std::allocator<DATA_ITEMGET>::construct
_TEXT	ENDS
PUBLIC	??$?0HUDATA_TEXT@@@?$pair@$$CBHUDATA_TEXT@@@std@@QAE@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ; std::pair<int const ,DATA_TEXT>::pair<int const ,DATA_TEXT><int,DATA_TEXT>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0HUDATA_TEXT@@@?$pair@$$CBHUDATA_TEXT@@@std@@QAE@$$QAU?$pair@HUDATA_TEXT@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0HUDATA_TEXT@@@?$pair@$$CBHUDATA_TEXT@@@std@@QAE@$$QAU?$pair@HUDATA_TEXT@@@1@@Z PROC ; std::pair<int const ,DATA_TEXT>::pair<int const ,DATA_TEXT><int,DATA_TEXT>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  0000f	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	89 10		 mov	 DWORD PTR [eax], edx
  00019	f3 a5		 rep movsd
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 256  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??$?0HUDATA_TEXT@@@?$pair@$$CBHUDATA_TEXT@@@std@@QAE@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ENDP ; std::pair<int const ,DATA_TEXT>::pair<int const ,DATA_TEXT><int,DATA_TEXT>
_TEXT	ENDS
PUBLIC	??0?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUDATA_TEXT@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator->
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUDATA_TEXT@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUDATA_TEXT@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUDATA_TEXT@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++, COMDAT
; _this$ = ecx

; 337  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 338  : 		_Myiter _Tmp = *this;

  00003	8b 11		 mov	 edx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 10		 mov	 DWORD PTR [eax], edx

; 339  : 		++*this;

  0000a	83 c2 20	 add	 edx, 32			; 00000020H
  0000d	89 11		 mov	 DWORD PTR [ecx], edx

; 340  : 		return (_Tmp);
; 341  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
??E?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@std@@QAE@PAUDATA_ITEMGET@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >::_Vector_iterator<std::_Vector_val<DATA_ITEMGET,std::allocator<DATA_ITEMGET> > >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Make_iter
; Function compile flags: /Ogtp
;	COMDAT ?_Make_iter@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Make_iter
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UDATA_ITEMGET@@@std@@QAEPAUDATA_ITEMGET@@I@Z ; std::allocator<DATA_ITEMGET>::allocate
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UDATA_ITEMGET@@@std@@QAEPAUDATA_ITEMGET@@I@Z
_TEXT	SEGMENT
$T213779 = -12						; size = 12
$T213771 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UDATA_ITEMGET@@@std@@QAEPAUDATA_ITEMGET@@I@Z PROC ; std::allocator<DATA_ITEMGET>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 40		 je	 SHORT $LN1@allocate
  0000f	81 f9 ff ff ff
	07		 cmp	 ecx, 134217727		; 07ffffffH
  00015	77 10		 ja	 SHORT $LN3@allocate
  00017	c1 e1 05	 shl	 ecx, 5
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	83 c4 04	 add	 esp, 4
  00023	85 c0		 test	 eax, eax
  00025	75 28		 jne	 SHORT $LN1@allocate
$LN3@allocate:
  00027	8d 45 08	 lea	 eax, DWORD PTR $T213771[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d f4	 lea	 ecx, DWORD PTR $T213779[ebp]
  0002e	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T213771[ebp], 0
  00035	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003f	8d 4d f4	 lea	 ecx, DWORD PTR $T213779[ebp]
  00042	51		 push	 ecx
  00043	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T213779[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate:
$LN1@allocate:

; 188  : 		}

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN12@allocate:
?allocate@?$allocator@UDATA_ITEMGET@@@std@@QAEPAUDATA_ITEMGET@@I@Z ENDP ; std::allocator<DATA_ITEMGET>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
$T213802 = -12						; size = 12
$T213794 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 43		 je	 SHORT $LN1@allocate@2
  0000f	81 f9 a0 0e ea
	00		 cmp	 ecx, 15339168		; 00ea0ea0H
  00015	77 13		 ja	 SHORT $LN3@allocate@2
  00017	69 c9 18 01 00
	00		 imul	 ecx, 280		; 00000118H
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	85 c0		 test	 eax, eax
  00028	75 28		 jne	 SHORT $LN1@allocate@2
$LN3@allocate@2:
  0002a	8d 45 08	 lea	 eax, DWORD PTR $T213794[ebp]
  0002d	50		 push	 eax
  0002e	8d 4d f4	 lea	 ecx, DWORD PTR $T213802[ebp]
  00031	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T213794[ebp], 0
  00038	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003d	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00042	8d 4d f4	 lea	 ecx, DWORD PTR $T213802[ebp]
  00045	51		 push	 ecx
  00046	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T213802[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:

; 188  : 		}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
$LN12@allocate@2:
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator++
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@ABU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@ABU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET const &>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@ABU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@ABU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@ABU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@ABU2@@Z PROC ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN9@Cons_val@2
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN9@Cons_val@2:
  00017	5f		 pop	 edi

; 281  : 	}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@ABU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@ABU2@@Z ENDP ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00@Z ; std::_Move<DATA_ITEMGET *,DATA_ITEMGET *>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00@Z PROC ; std::_Move<DATA_ITEMGET *,DATA_ITEMGET *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 19		 je	 SHORT $LN5@Move@2
  00011	56		 push	 esi
  00012	57		 push	 edi
$LL7@Move@2:
  00013	8b f2		 mov	 esi, edx
  00015	8b f8		 mov	 edi, eax
  00017	83 c2 20	 add	 edx, 32			; 00000020H
  0001a	b9 08 00 00 00	 mov	 ecx, 8
  0001f	83 c0 20	 add	 eax, 32			; 00000020H
  00022	f3 a5		 rep movsd
  00024	3b d3		 cmp	 edx, ebx
  00026	75 eb		 jne	 SHORT $LL7@Move@2
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
$LN5@Move@2:
  0002a	5b		 pop	 ebx

; 2536 : 	}

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Move@PAUDATA_ITEMGET@@PAU1@@std@@YAPAUDATA_ITEMGET@@PAU1@00@Z ENDP ; std::_Move<DATA_ITEMGET *,DATA_ITEMGET *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator--
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode
; Function compile flags: /Ogtp
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T213940 = -16						; size = 12
$T213917 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	68 18 01 00 00	 push	 280			; 00000118H
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00013	33 c9		 xor	 ecx, ecx
  00015	83 c4 04	 add	 esp, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	74 1d		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  00021	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00024	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00027	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  0002d	66 89 88 14 01
	00 00		 mov	 WORD PTR [eax+276], cx
  00034	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  00039	8d 45 fc	 lea	 eax, DWORD PTR $T213917[ebp]
  0003c	89 4d fc	 mov	 DWORD PTR $T213917[ebp], ecx
  0003f	50		 push	 eax
  00040	8d 4d f0	 lea	 ecx, DWORD PTR $T213940[ebp]
  00043	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00048	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0004d	8d 4d f0	 lea	 ecx, DWORD PTR $T213940[ebp]
  00050	51		 push	 ecx
  00051	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T213940[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00058	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  0005d	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@@Z ; std::_Dest_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@@Z PROC ; std::_Dest_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@@Z ENDP ; std::_Dest_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	??$construct@U?$pair@HUDATA_TEXT@@@std@@@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ; std::allocator<std::pair<int const ,DATA_TEXT> >::construct<std::pair<int,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??$construct@U?$pair@HUDATA_TEXT@@@std@@@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@U?$pair@HUDATA_TEXT@@@std@@@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z PROC ; std::allocator<std::pair<int const ,DATA_TEXT> >::construct<std::pair<int,DATA_TEXT> >, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 18		 je	 SHORT $LN3@construct@4
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00014	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00017	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  0001c	89 10		 mov	 DWORD PTR [eax], edx
  0001e	f3 a5		 rep movsd
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
$LN3@construct@4:

; 209  : 		}

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??$construct@U?$pair@HUDATA_TEXT@@@std@@@?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@QAEXPAU?$pair@$$CBHUDATA_TEXT@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ENDP ; std::allocator<std::pair<int const ,DATA_TEXT> >::construct<std::pair<int,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@U3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@$$QAU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@U3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@$$QAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@U3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@$$QAU2@@Z PROC ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0c		 je	 SHORT $LN7@Cons_val@3
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	b9 08 00 00 00	 mov	 ecx, 8
  00014	f3 a5		 rep movsd
  00016	5e		 pop	 esi
$LN7@Cons_val@3:
  00017	5f		 pop	 edi

; 281  : 	}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@U3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@$$QAU2@@Z ENDP ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	?begin@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::begin
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@XZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::end
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Erase
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 bf 15 01 00
	00 00		 cmp	 BYTE PTR [edi+277], 0
  00010	8b d9		 mov	 ebx, ecx
  00012	8b f7		 mov	 esi, edi
  00014	75 21		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00016	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00019	50		 push	 eax
  0001a	8b cb		 mov	 ecx, ebx
  0001c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  00023	57		 push	 edi
  00024	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00029	83 c4 04	 add	 esp, 4
  0002c	80 be 15 01 00
	00 00		 cmp	 BYTE PTR [esi+277], 0
  00033	8b fe		 mov	 edi, esi
  00035	74 df		 je	 SHORT $LL3@Erase
$LN1@Erase:
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> > >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::begin
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z
_TEXT	SEGMENT
$T214201 = -16						; size = 12
$T214179 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  00009	68 18 01 00 00	 push	 280			; 00000118H
  0000e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	74 2e		 je	 SHORT $LN15@Tree_val
  00021	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00024	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00026	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00029	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  0002c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002f	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  00032	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00035	b0 01		 mov	 al, 1
  00037	88 81 14 01 00
	00		 mov	 BYTE PTR [ecx+276], al

; 550  : 		this->_Isnil(this->_Myhead) = true;

  0003d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00040	88 82 15 01 00
	00		 mov	 BYTE PTR [edx+277], al

; 551  : 		}

  00046	8b c6		 mov	 eax, esi
  00048	5e		 pop	 esi
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0004f	8d 45 fc	 lea	 eax, DWORD PTR $T214179[ebp]
  00052	50		 push	 eax
  00053	8d 4d f0	 lea	 ecx, DWORD PTR $T214201[ebp]
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T214179[ebp], 0
  0005d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00062	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00067	8d 4d f0	 lea	 ecx, DWORD PTR $T214201[ebp]
  0006a	51		 push	 ecx
  0006b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T214201[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00072	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00077	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv795 = -12						; size = 4
__Erasednode$ = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  0000a	80 bb 15 01 00
	00 00		 cmp	 BYTE PTR [ebx+277], 0
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00016	74 0a		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  0001d	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN295@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  00022	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00025	89 5d f8	 mov	 DWORD PTR __Erasednode$[ebp], ebx
  00028	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  0002d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0002f	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  00036	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00038	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  0003b	eb 1a		 jmp	 SHORT $LN291@erase
$LN39@erase:
  0003d	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00040	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00047	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00049	8b f9		 mov	 edi, ecx

; 1218 : 		else

  0004b	eb 0a		 jmp	 SHORT $LN291@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  0004d	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00050	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00053	3b c3		 cmp	 eax, ebx
  00055	75 7f		 jne	 SHORT $LN35@erase
$LN291@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  00057	80 bf 15 01 00
	00 00		 cmp	 BYTE PTR [edi+277], 0
  0005e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00061	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00063	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0006c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0006f	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00071	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00074	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  00076	39 1e		 cmp	 DWORD PTR [esi], ebx
  00078	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0007a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0007c	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0007e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00081	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00084	39 18		 cmp	 DWORD PTR [eax], ebx
  00086	75 1e		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00088	80 bf 15 01 00
	00 00		 cmp	 BYTE PTR [edi+277], 0
  0008f	74 04		 je	 SHORT $LN43@erase
  00091	8b c6		 mov	 eax, esi
  00093	eb 0c		 jmp	 SHORT $LN44@erase
$LN43@erase:
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Min
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	83 c4 04	 add	 esp, 4
$LN44@erase:
  000a1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a4	89 02		 mov	 DWORD PTR [edx], eax
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  000a6	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000a9	89 4d f4	 mov	 DWORD PTR tv795[ebp], ecx
  000ac	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  000af	0f 85 8a 00 00
	00		 jne	 $LN165@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000b5	80 bf 15 01 00
	00 00		 cmp	 BYTE PTR [edi+277], 0
  000bc	74 07		 je	 SHORT $LN45@erase
  000be	8b c6		 mov	 eax, esi
  000c0	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000c3	eb 7a		 jmp	 SHORT $LN165@erase
$LN45@erase:

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000c5	57		 push	 edi
  000c6	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Max
  000cb	8b 4d f4	 mov	 ecx, DWORD PTR tv795[ebp]
  000ce	83 c4 04	 add	 esp, 4
  000d1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000d4	eb 69		 jmp	 SHORT $LN165@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000d6	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000d9	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000db	89 08		 mov	 DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000dd	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000e0	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000e2	8b f0		 mov	 esi, eax

; 1257 : 			else

  000e4	eb 1d		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000e6	80 bf 15 01 00
	00 00		 cmp	 BYTE PTR [edi+277], 0
  000ed	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000f0	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000f2	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000f5	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000f7	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000fa	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000fd	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00100	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00109	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  0010c	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  0010e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  00111	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  00113	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00116	39 19		 cmp	 DWORD PTR [ecx], ebx
  00118	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  0011a	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  0011c	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  0011e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00121	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00124	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  00127	8a 93 14 01 00
	00		 mov	 dl, BYTE PTR [ebx+276]
  0012d	8a 88 14 01 00
	00		 mov	 cl, BYTE PTR [eax+276]
  00133	88 90 14 01 00
	00		 mov	 BYTE PTR [eax+276], dl
  00139	88 8b 14 01 00
	00		 mov	 BYTE PTR [ebx+276], cl
$LN165@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0013f	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00142	b3 01		 mov	 bl, 1
  00144	38 98 14 01 00
	00		 cmp	 BYTE PTR [eax+276], bl
  0014a	0f 85 61 01 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00150	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00156	3b 7a 04	 cmp	 edi, DWORD PTR [edx+4]
  00159	0f 84 4c 01 00
	00		 je	 $LN16@erase
  0015f	90		 npad	 1
$LL18@erase:
  00160	38 9f 14 01 00
	00		 cmp	 BYTE PTR [edi+276], bl
  00166	0f 85 3f 01 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  0016c	8b 06		 mov	 eax, DWORD PTR [esi]
  0016e	3b f8		 cmp	 edi, eax
  00170	0f 85 97 00 00
	00		 jne	 $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00176	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  00179	80 b8 14 01 00
	00 00		 cmp	 BYTE PTR [eax+276], 0
  00180	75 19		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00182	88 98 14 01 00
	00		 mov	 BYTE PTR [eax+276], bl

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00188	56		 push	 esi
  00189	c6 86 14 01 00
	00 00		 mov	 BYTE PTR [esi+276], 0
  00190	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00195	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00198	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  0019b	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  001a2	0f 85 ab 00 00
	00		 jne	 $LN293@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  001a8	8b 10		 mov	 edx, DWORD PTR [eax]
  001aa	38 9a 14 01 00
	00		 cmp	 BYTE PTR [edx+276], bl
  001b0	75 0f		 jne	 SHORT $LN11@erase
  001b2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001b5	38 9a 14 01 00
	00		 cmp	 BYTE PTR [edx+276], bl
  001bb	0f 84 8b 00 00
	00		 je	 $LN294@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  001c1	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001c4	38 9a 14 01 00
	00		 cmp	 BYTE PTR [edx+276], bl
  001ca	75 1b		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  001cc	8b 10		 mov	 edx, DWORD PTR [eax]
  001ce	88 9a 14 01 00
	00		 mov	 BYTE PTR [edx+276], bl

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  001d4	50		 push	 eax
  001d5	c6 80 14 01 00
	00 00		 mov	 BYTE PTR [eax+276], 0
  001dc	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  001e1	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  001e7	8a 96 14 01 00
	00		 mov	 dl, BYTE PTR [esi+276]
  001ed	88 90 14 01 00
	00		 mov	 BYTE PTR [eax+276], dl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

  001f3	88 9e 14 01 00
	00		 mov	 BYTE PTR [esi+276], bl

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f9	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1323 : 						_Lrotate(_Fixnodeparent);

  001fc	56		 push	 esi
  001fd	88 98 14 01 00
	00		 mov	 BYTE PTR [eax+276], bl
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  00208	e9 9e 00 00 00	 jmp	 $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  0020d	80 b8 14 01 00
	00 00		 cmp	 BYTE PTR [eax+276], 0
  00214	75 18		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  00216	88 98 14 01 00
	00		 mov	 BYTE PTR [eax+276], bl

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  0021c	56		 push	 esi
  0021d	c6 86 14 01 00
	00 00		 mov	 BYTE PTR [esi+276], 0
  00224	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  00229	8b 06		 mov	 eax, DWORD PTR [esi]
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  0022e	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  00235	75 1c		 jne	 SHORT $LN293@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  00237	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0023a	38 9a 14 01 00
	00		 cmp	 BYTE PTR [edx+276], bl
  00240	75 24		 jne	 SHORT $LN4@erase
  00242	8b 10		 mov	 edx, DWORD PTR [eax]
  00244	38 9a 14 01 00
	00		 cmp	 BYTE PTR [edx+276], bl
  0024a	75 1a		 jne	 SHORT $LN4@erase
$LN294@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  0024c	c6 80 14 01 00
	00 00		 mov	 BYTE PTR [eax+276], 0
$LN293@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00253	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1344 : 						_Fixnode = _Fixnodeparent;

  00256	8b fe		 mov	 edi, esi
  00258	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  0025b	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  0025e	0f 85 fc fe ff
	ff		 jne	 $LL18@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00264	eb 45		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  00266	8b 10		 mov	 edx, DWORD PTR [eax]
  00268	38 9a 14 01 00
	00		 cmp	 BYTE PTR [edx+276], bl
  0026e	75 1b		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  00270	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00273	88 9a 14 01 00
	00		 mov	 BYTE PTR [edx+276], bl

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  00279	50		 push	 eax
  0027a	c6 80 14 01 00
	00 00		 mov	 BYTE PTR [eax+276], 0
  00281	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00286	8b 06		 mov	 eax, DWORD PTR [esi]
  00288	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0028b	8a 96 14 01 00
	00		 mov	 dl, BYTE PTR [esi+276]
  00291	88 90 14 01 00
	00		 mov	 BYTE PTR [eax+276], dl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

  00297	88 9e 14 01 00
	00		 mov	 BYTE PTR [esi+276], bl

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  0029d	8b 00		 mov	 eax, DWORD PTR [eax]

; 1359 : 						_Rrotate(_Fixnodeparent);

  0029f	56		 push	 esi
  002a0	88 98 14 01 00
	00		 mov	 BYTE PTR [eax+276], bl
  002a6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  002ab	88 9f 14 01 00
	00		 mov	 BYTE PTR [edi+276], bl
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  002b1	8b 4d f8	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  002b4	51		 push	 ecx
  002b5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  002ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002bd	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  002c0	83 c4 04	 add	 esp, 4
  002c3	5f		 pop	 edi
  002c4	5e		 pop	 esi
  002c5	5b		 pop	 ebx
  002c6	85 c0		 test	 eax, eax
  002c8	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  002ca	48		 dec	 eax
  002cb	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  002ce	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  002d1	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  002d4	89 10		 mov	 DWORD PTR [eax], edx

; 1376 : 		}

  002d6	8b e5		 mov	 esp, ebp
  002d8	5d		 pop	 ebp
  002d9	c2 08 00	 ret	 8
$LN292@erase:
?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d 0e 3e f8 00	 cmp	 eax, 16268814		; 00f83e0eH
  00010	72 16		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00012	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	83 c4 04	 add	 esp, 4

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  00023	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN329@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00028	8b 55 14	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0002b	40		 inc	 eax
  0002c	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002f	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00032	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	3b c1		 cmp	 eax, ecx
  0003a	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003c	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 1647 : 			_Lmost() = _Newnode;

  0003f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00042	89 11		 mov	 DWORD PTR [ecx], edx

; 1648 : 			_Rmost() = _Newnode;

  00044	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00047	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0004a	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004c	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00050	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00052	89 10		 mov	 DWORD PTR [eax], edx

; 1653 : 			if (_Wherenode == _Lmost())

  00054	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00057	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00059	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  0005b	89 11		 mov	 DWORD PTR [ecx], edx

; 1655 : 			}
; 1656 : 		else

  0005d	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1659 : 			if (_Wherenode == _Rmost())

  00062	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00065	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00068	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  0006a	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00070	80 b9 14 01 00
	00 00		 cmp	 BYTE PTR [ecx+276], 0
  00077	8b f2		 mov	 esi, edx
  00079	b3 01		 mov	 bl, 1
  0007b	0f 85 6e 01 00
	00		 jne	 $LN9@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00081	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00084	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00087	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00089	0f 85 bb 00 00
	00		 jne	 $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  0008f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00092	80 b9 14 01 00
	00 00		 cmp	 BYTE PTR [ecx+276], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00099	0f 84 b6 00 00
	00		 je	 $LN328@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  0009f	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000a2	75 3e		 jne	 SHORT $LN111@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  000a4	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  000a6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a9	8b 10		 mov	 edx, DWORD PTR [eax]
  000ab	89 56 08	 mov	 DWORD PTR [esi+8], edx
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  000b7	75 03		 jne	 SHORT $LN110@Insert
  000b9	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN110@Insert:
  000bc	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000bf	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000c2	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000c5	3b 71 04	 cmp	 esi, DWORD PTR [ecx+4]
  000c8	75 05		 jne	 SHORT $LN109@Insert
  000ca	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000cd	eb 0e		 jmp	 SHORT $LN106@Insert
$LN109@Insert:
  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d2	3b 31		 cmp	 esi, DWORD PTR [ecx]
  000d4	75 04		 jne	 SHORT $LN107@Insert
  000d6	89 01		 mov	 DWORD PTR [ecx], eax
  000d8	eb 03		 jmp	 SHORT $LN106@Insert
$LN107@Insert:
  000da	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN106@Insert:
  000dd	89 30		 mov	 DWORD PTR [eax], esi
  000df	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN111@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000e2	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000e5	88 9a 14 01 00
	00		 mov	 BYTE PTR [edx+276], bl

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000eb	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	c6 81 14 01 00
	00 00		 mov	 BYTE PTR [ecx+276], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000f8	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000fb	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00100	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00103	89 10		 mov	 DWORD PTR [eax], edx
  00105	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00108	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  0010f	75 03		 jne	 SHORT $LN173@Insert
  00111	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN173@Insert:
  00114	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00117	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0011a	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0011d	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00120	75 0b		 jne	 SHORT $LN172@Insert
  00122	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00125	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00128	e9 ac 00 00 00	 jmp	 $LN327@Insert

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN172@Insert:
  0012d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00130	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00133	75 0b		 jne	 SHORT $LN170@Insert
  00135	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  0013b	e9 99 00 00 00	 jmp	 $LN327@Insert

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN170@Insert:
  00140	89 0a		 mov	 DWORD PTR [edx], ecx
  00142	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00145	e9 8f 00 00 00	 jmp	 $LN327@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  0014a	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  0014c	80 b9 14 01 00
	00 00		 cmp	 BYTE PTR [ecx+276], 0
  00153	75 21		 jne	 SHORT $LN3@Insert
$LN328@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  00155	88 98 14 01 00
	00		 mov	 BYTE PTR [eax+276], bl

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  0015b	88 99 14 01 00
	00		 mov	 BYTE PTR [ecx+276], bl

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  00161	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00164	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00167	c6 80 14 01 00
	00 00		 mov	 BYTE PTR [eax+276], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  0016e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00171	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]

; 1703 : 					}
; 1704 : 				else

  00174	eb 69		 jmp	 SHORT $LN267@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  00176	3b 30		 cmp	 esi, DWORD PTR [eax]
  00178	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  0017a	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  0017c	56		 push	 esi
  0017d	8b cf		 mov	 ecx, edi
  0017f	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  00184	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00187	88 9a 14 01 00
	00		 mov	 BYTE PTR [edx+276], bl

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  0018d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00190	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00193	c6 81 14 01 00
	00 00		 mov	 BYTE PTR [ecx+276], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  0019a	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0019d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001a0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a5	89 50 08	 mov	 DWORD PTR [eax+8], edx
  001a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001aa	80 ba 15 01 00
	00 00		 cmp	 BYTE PTR [edx+277], 0
  001b1	75 03		 jne	 SHORT $LN266@Insert
  001b3	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN266@Insert:
  001b6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001b9	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  001bc	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  001bf	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  001c2	75 05		 jne	 SHORT $LN265@Insert
  001c4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  001c7	eb 0e		 jmp	 SHORT $LN262@Insert
$LN265@Insert:
  001c9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001cc	3b 02		 cmp	 eax, DWORD PTR [edx]
  001ce	75 04		 jne	 SHORT $LN263@Insert
  001d0	89 0a		 mov	 DWORD PTR [edx], ecx
  001d2	eb 03		 jmp	 SHORT $LN262@Insert
$LN263@Insert:
  001d4	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN262@Insert:
  001d7	89 01		 mov	 DWORD PTR [ecx], eax
$LN327@Insert:
  001d9	8b 55 14	 mov	 edx, DWORD PTR __Newnode$[ebp]
  001dc	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN267@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  001df	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001e2	80 b8 14 01 00
	00 00		 cmp	 BYTE PTR [eax+276], 0
  001e9	0f 84 92 fe ff
	ff		 je	 $LL10@Insert
$LN9@Insert:

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  001ef	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  001f2	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f5	5f		 pop	 edi
  001f6	88 98 14 01 00
	00		 mov	 BYTE PTR [eax+276], bl

; 1720 : 		return (iterator(_Newnode, this));

  001fc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001ff	5e		 pop	 esi
  00200	89 10		 mov	 DWORD PTR [eax], edx
  00202	5b		 pop	 ebx

; 1721 : 		}

  00203	5d		 pop	 ebp
  00204	c2 10 00	 ret	 16			; 00000010H
$LN326@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<DATA_ITEMGET> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@U?$pair@HUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@$$QAU?$pair@HUDATA_TEXT@@@0@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT>,std::pair<int,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@U?$pair@HUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@$$QAU?$pair@HUDATA_TEXT@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@U?$pair@HUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@$$QAU?$pair@HUDATA_TEXT@@@0@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT>,std::pair<int,DATA_TEXT> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 18		 je	 SHORT $LN7@Cons_val@4
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00014	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00017	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  0001c	89 10		 mov	 DWORD PTR [eax], edx
  0001e	f3 a5		 rep movsd
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
$LN7@Cons_val@4:

; 281  : 	}

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@U?$pair@HUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@$$QAU?$pair@HUDATA_TEXT@@@0@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT>,std::pair<int,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET>,DATA_ITEMGET>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET>,DATA_ITEMGET>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000b	3b f3		 cmp	 esi, ebx
  0000d	74 23		 je	 SHORT $LN17@Uninit_mov
  0000f	57		 push	 edi
  00010	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
$LL6@Uninit_mov:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00013	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@U3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@$$QAU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET>
  0001e	83 c6 20	 add	 esi, 32			; 00000020H
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	83 c7 20	 add	 edi, 32			; 00000020H
  00027	3b f3		 cmp	 esi, ebx
  00029	75 e8		 jne	 SHORT $LL6@Uninit_mov

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  0002b	8b c7		 mov	 eax, edi
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx

; 438  : 	}

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN17@Uninit_mov:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00032	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx

; 438  : 	}

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET>,DATA_ITEMGET>
_TEXT	ENDS
PUBLIC	?CheckItemGetNotice@CItemGetNotice@@QAEPAUDATA_ITEMGET@@PAVCMapItem@@@Z ; CItemGetNotice::CheckItemGetNotice
EXTRN	?IsSetItem@CItem@@QAEHXZ:PROC			; CItem::IsSetItem
EXTRN	?IsExtItem@CItem@@QAEHXZ:PROC			; CItem::IsExtItem
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\itemgetnotice.cpp
;	COMDAT ?CheckItemGetNotice@CItemGetNotice@@QAEPAUDATA_ITEMGET@@PAVCMapItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpMapItem$ = 8						; size = 4
?CheckItemGetNotice@CItemGetNotice@@QAEPAUDATA_ITEMGET@@PAVCMapItem@@@Z PROC ; CItemGetNotice::CheckItemGetNotice, COMDAT
; _this$ = ecx

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 135  : 	for (std::vector<DATA_ITEMGET>::iterator it = this->m_ItemGetNotice.begin(); it != this->m_ItemGetNotice.end(); it++)

  00006	8b 31		 mov	 esi, DWORD PTR [ecx]
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	3b 71 04	 cmp	 esi, DWORD PTR [ecx+4]
  0000f	74 6e		 je	 SHORT $LN7@CheckItemG
  00011	8b 7d 08	 mov	 edi, DWORD PTR _lpMapItem$[ebp]
  00014	bb 01 00 00 00	 mov	 ebx, 1
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL24@CheckItemG:

; 136  : 	{
; 137  : 		if (it->IDItem != lpMapItem->m_Type)

  00020	0f bf 47 0a	 movsx	 eax, WORD PTR [edi+10]
  00024	39 06		 cmp	 DWORD PTR [esi], eax
  00026	75 4f		 jne	 SHORT $LN8@CheckItemG

; 138  : 		{
; 139  : 			continue;
; 140  : 		}
; 141  : 		if (it->SkillCheck == 1 && lpMapItem->m_Option1 == 0 ) 

  00028	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  0002b	75 09		 jne	 SHORT $LN64@CheckItemG
  0002d	80 bf 98 00 00
	00 00		 cmp	 BYTE PTR [edi+152], 0
  00034	74 41		 je	 SHORT $LN8@CheckItemG

; 142  : 		{
; 143  : 			continue;
; 144  : 		}
; 145  : 		if (it->LuckCheck == 1 && lpMapItem->m_Option2 == 0)

$LN64@CheckItemG:
  00036	39 5e 08	 cmp	 DWORD PTR [esi+8], ebx
  00039	75 09		 jne	 SHORT $LN73@CheckItemG
  0003b	80 bf 99 00 00
	00 00		 cmp	 BYTE PTR [edi+153], 0
  00042	74 33		 je	 SHORT $LN8@CheckItemG

; 146  : 		{
; 147  : 			continue;
; 148  : 		}
; 149  : 		if (it->OptionCheck == 1 && lpMapItem->m_Option3 == 0)

$LN73@CheckItemG:
  00044	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  00047	75 09		 jne	 SHORT $LN82@CheckItemG
  00049	80 bf 9a 00 00
	00 00		 cmp	 BYTE PTR [edi+154], 0
  00050	74 25		 je	 SHORT $LN8@CheckItemG

; 150  : 		{
; 151  : 			continue;
; 152  : 		}
; 153  : 		if (it->ExcCheck == 1 && !lpMapItem->IsExtItem())

$LN82@CheckItemG:
  00052	39 5e 10	 cmp	 DWORD PTR [esi+16], ebx
  00055	75 0c		 jne	 SHORT $LN91@CheckItemG
  00057	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0005a	e8 00 00 00 00	 call	 ?IsExtItem@CItem@@QAEHXZ ; CItem::IsExtItem
  0005f	85 c0		 test	 eax, eax
  00061	74 11		 je	 SHORT $LN103@CheckItemG

; 154  : 		{
; 155  : 			continue;
; 156  : 		}
; 157  : 		if (it->AncCheck == 1 && !lpMapItem->IsSetItem())

$LN91@CheckItemG:
  00063	39 5e 14	 cmp	 DWORD PTR [esi+20], ebx
  00066	75 22		 jne	 SHORT $LN98@CheckItemG
  00068	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0006b	e8 00 00 00 00	 call	 ?IsSetItem@CItem@@QAEHXZ ; CItem::IsSetItem
  00070	85 c0		 test	 eax, eax
  00072	75 16		 jne	 SHORT $LN98@CheckItemG
$LN103@CheckItemG:
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN8@CheckItemG:

; 135  : 	for (std::vector<DATA_ITEMGET>::iterator it = this->m_ItemGetNotice.begin(); it != this->m_ItemGetNotice.end(); it++)

  00077	83 c6 20	 add	 esi, 32			; 00000020H
  0007a	3b 71 04	 cmp	 esi, DWORD PTR [ecx+4]
  0007d	75 a1		 jne	 SHORT $LL24@CheckItemG
$LN7@CheckItemG:
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi

; 162  : 	}
; 163  : 
; 164  : 	return 0;

  00081	33 c0		 xor	 eax, eax
  00083	5b		 pop	 ebx

; 165  : }

  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4

; 158  : 		{
; 159  : 			continue;
; 160  : 		}
; 161  : 		return &(*it);

$LN98@CheckItemG:
  0008a	5f		 pop	 edi
  0008b	8b c6		 mov	 eax, esi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx

; 165  : }

  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?CheckItemGetNotice@CItemGetNotice@@QAEPAUDATA_ITEMGET@@PAVCMapItem@@@Z ENDP ; CItemGetNotice::CheckItemGetNotice
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::end
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::end
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00005	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00008	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  0000b	80 bb 15 01 00
	00 00		 cmp	 BYTE PTR [ebx+277], 0
  00012	8b f3		 mov	 esi, ebx
  00014	75 21		 jne	 SHORT $LN7@clear
$LL9@clear:
  00016	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00019	51		 push	 ecx
  0001a	8b cf		 mov	 ecx, edi
  0001c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Erase
  00021	8b 36		 mov	 esi, DWORD PTR [esi]
  00023	53		 push	 ebx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00029	83 c4 04	 add	 esp, 4
  0002c	80 be 15 01 00
	00 00		 cmp	 BYTE PTR [esi+277], 0
  00033	8b de		 mov	 ebx, esi
  00035	74 df		 je	 SHORT $LL9@clear
$LN7@clear:

; 1416 : 		_Root() = this->_Myhead;

  00037	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003a	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  0003d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00040	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  00042	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00045	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1419 : 		this->_Mysize = 0;

  00048	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx

; 1420 : 		}

  00052	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::clear
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z
_TEXT	SEGMENT
$T215835 = -16						; size = 12
$T215769 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	68 18 01 00 00	 push	 280			; 00000118H
  0000e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	74 2e		 je	 SHORT $LN20@Tree
  00021	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00024	89 00		 mov	 DWORD PTR [eax], eax
  00026	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00029	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0002c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002f	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00032	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00035	b0 01		 mov	 al, 1
  00037	88 81 14 01 00
	00		 mov	 BYTE PTR [ecx+276], al
  0003d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00040	88 82 15 01 00
	00		 mov	 BYTE PTR [edx+277], al

; 699  : 		}

  00046	8b c6		 mov	 eax, esi
  00048	5e		 pop	 esi
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8

; 698  : 		{	// construct empty tree

$LN20@Tree:
  0004f	8d 45 fc	 lea	 eax, DWORD PTR $T215769[ebp]
  00052	50		 push	 eax
  00053	8d 4d f0	 lea	 ecx, DWORD PTR $T215835[ebp]
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T215769[ebp], 0
  0005d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00062	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00067	8d 4d f0	 lea	 ecx, DWORD PTR $T215835[ebp]
  0006a	51		 push	 ecx
  0006b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T215835[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00072	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@Tree:
$LN42@Tree:
  00077	cc		 int	 3
??0?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::lower_bound
; Function compile flags: /Ogtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00010	75 1c		 jne	 SHORT $LN36@lower_boun
  00012	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00015	8b 12		 mov	 edx, DWORD PTR [edx]
$LL6@lower_boun:
  00017	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  0001a	7d 05		 jge	 SHORT $LN4@lower_boun
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $LN3@lower_boun
$LN4@lower_boun:
  00021	8b c8		 mov	 ecx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$LN3@lower_boun:
  00025	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  0002c	74 e9		 je	 SHORT $LL6@lower_boun
$LN36@lower_boun:
  0002e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00031	89 08		 mov	 DWORD PTR [eax], ecx

; 1451 : 		}

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T215946 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00004	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00012	75 1c		 jne	 SHORT $LN97@erase@2
  00014	3b d0		 cmp	 edx, eax
  00016	75 18		 jne	 SHORT $LN97@erase@2

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::clear

; 1383 : 			return (begin());

  0001f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]

; 1389 : 			return (iterator(_First._Ptr, this));

  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00027	89 08		 mov	 DWORD PTR [eax], ecx
  00029	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
$LN97@erase@2:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00030	3b ca		 cmp	 ecx, edx
  00032	74 79		 je	 SHORT $LN1@erase@2
$LL2@erase@2:

; 1388 : 				erase(_First++);

  00034	80 b9 15 01 00
	00 00		 cmp	 BYTE PTR [ecx+277], 0
  0003b	8b d1		 mov	 edx, ecx
  0003d	75 5a		 jne	 SHORT $LN59@erase@2
  0003f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00042	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00049	75 27		 jne	 SHORT $LN99@erase@2
  0004b	8b c8		 mov	 ecx, eax
  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00056	75 15		 jne	 SHORT $LN73@erase@2
  00058	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL74@erase@2:
  00060	8b c8		 mov	 ecx, eax
  00062	8b 01		 mov	 eax, DWORD PTR [ecx]
  00064	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  0006b	74 f3		 je	 SHORT $LL74@erase@2
$LN73@erase@2:
  0006d	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  00070	eb 27		 jmp	 SHORT $LN59@erase@2
$LN99@erase@2:
  00072	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00075	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  0007c	75 18		 jne	 SHORT $LN57@erase@2
  0007e	8b ff		 npad	 2
$LL58@erase@2:
  00080	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00083	75 11		 jne	 SHORT $LN57@erase@2
  00085	8b c8		 mov	 ecx, eax
  00087	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  0008a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0008d	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00094	74 ea		 je	 SHORT $LL58@erase@2
$LN57@erase@2:
  00096	89 45 0c	 mov	 DWORD PTR __First$[ebp], eax
$LN59@erase@2:
  00099	52		 push	 edx
  0009a	8d 55 fc	 lea	 edx, DWORD PTR $T215946[ebp]
  0009d	52		 push	 edx
  0009e	8b ce		 mov	 ecx, esi
  000a0	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
  000a5	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  000a8	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  000ab	75 87		 jne	 SHORT $LL2@erase@2
$LN1@erase@2:

; 1389 : 			return (iterator(_First._Ptr, this));

  000ad	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000b0	89 08		 mov	 DWORD PTR [eax], ecx
  000b2	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@@Z ; std::_Destroy_range<std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@@Z PROC ; std::_Destroy_range<std::allocator<DATA_ITEMGET> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAXPAUDATA_ITEMGET@@0AAV?$allocator@UDATA_ITEMGET@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Linsert
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T216295 = 16						; size = 4
$T216293 = 16						; size = 4
__Where$212074 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00004	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00007	53		 push	 ebx
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0000d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00010	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	b1 01		 mov	 cl, 1
  0001c	57		 push	 edi
  0001d	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  00020	75 30		 jne	 SHORT $LN11@Linsert
  00022	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00025	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00029	8b f0		 mov	 esi, eax
  0002b	74 08		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002d	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  00030	0f 9d c1	 setge	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00033	eb 06		 jmp	 SHORT $LN146@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00035	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00038	0f 9c c1	 setl	 cl
$LN146@Linsert:
  0003b	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003e	84 c9		 test	 cl, cl
  00040	74 04		 je	 SHORT $LN15@Linsert
  00042	8b 00		 mov	 eax, DWORD PTR [eax]
  00044	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00049	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00050	74 d3		 je	 SHORT $LL12@Linsert
$LN11@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  00052	8b fe		 mov	 edi, esi
  00054	89 7d 10	 mov	 DWORD PTR __Where$212074[ebp], edi

; 970  : 			if (!_Addleft)

  00057	84 c9		 test	 cl, cl
  00059	74 35		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  0005b	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005e	8d 4d 10	 lea	 ecx, DWORD PTR $T216293[ebp]
  00061	3b 30		 cmp	 esi, DWORD PTR [eax]
  00063	75 20		 jne	 SHORT $LN4@Linsert
  00065	52		 push	 edx
  00066	56		 push	 esi
  00067	6a 01		 push	 1
  00069	51		 push	 ecx
  0006a	8b cb		 mov	 ecx, ebx
  0006c	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Insert
  00071	8b 10		 mov	 edx, DWORD PTR [eax]
  00073	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	89 10		 mov	 DWORD PTR [eax], edx
  0007a	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  0007e	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 0c 00	 ret	 12			; 0000000cH
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  00085	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >,std::_Iterator_base0>::operator--
  0008a	8b 7d 10	 mov	 edi, DWORD PTR __Where$212074[ebp]
  0008d	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00090	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  00093	52		 push	 edx
  00094	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00097	7d 24		 jge	 SHORT $LN2@Linsert
  00099	8b 4d fc	 mov	 ecx, DWORD PTR __Addleft$[ebp]
  0009c	56		 push	 esi
  0009d	51		 push	 ecx
  0009e	8d 55 10	 lea	 edx, DWORD PTR $T216295[ebp]
  000a1	52		 push	 edx
  000a2	8b cb		 mov	 ecx, ebx
  000a4	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Insert
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	89 08		 mov	 DWORD PTR [eax], ecx
  000b2	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000b6	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  000bd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000c2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c5	83 c4 04	 add	 esp, 4
  000c8	89 38		 mov	 DWORD PTR [eax], edi
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000d0	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode<std::pair<int,DATA_TEXT> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Buynode@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z
_TEXT	SEGMENT
$T216671 = -12						; size = 12
$T216618 = 8						; size = 4
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode<std::pair<int,DATA_TEXT> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	57		 push	 edi

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00008	68 18 01 00 00	 push	 280			; 00000118H
  0000d	8b f9		 mov	 edi, ecx
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	8b f0		 mov	 esi, eax
  00016	33 c0		 xor	 eax, eax
  00018	83 c4 04	 add	 esp, 4
  0001b	3b f0		 cmp	 esi, eax
  0001d	74 36		 je	 SHORT $LN12@Buynode@2
  0001f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00022	89 0e		 mov	 DWORD PTR [esi], ecx
  00024	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00027	89 56 04	 mov	 DWORD PTR [esi+4], edx
  0002a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0002d	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00030	66 89 86 14 01
	00 00		 mov	 WORD PTR [esi+276], ax
  00037	52		 push	 edx
  00038	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0003b	50		 push	 eax
  0003c	83 c7 0d	 add	 edi, 13			; 0000000dH
  0003f	57		 push	 edi
  00040	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00043	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@std@@U?$pair@$$CBHUDATA_TEXT@@@2@U?$pair@HUDATA_TEXT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@0@PAU?$pair@$$CBHUDATA_TEXT@@@0@$$QAU?$pair@HUDATA_TEXT@@@0@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,DATA_TEXT> >,std::pair<int const ,DATA_TEXT>,std::pair<int,DATA_TEXT> >
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5f		 pop	 edi

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0004c	8b c6		 mov	 eax, esi
  0004e	5e		 pop	 esi

; 599  : 		}

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

$LN12@Buynode@2:
  00055	8d 4d 08	 lea	 ecx, DWORD PTR $T216618[ebp]
  00058	51		 push	 ecx
  00059	8d 4d f4	 lea	 ecx, DWORD PTR $T216671[ebp]
  0005c	89 45 08	 mov	 DWORD PTR $T216618[ebp], eax
  0005f	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00064	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00069	8d 55 f4	 lea	 edx, DWORD PTR $T216671[ebp]
  0006c	52		 push	 edx
  0006d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T216671[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00074	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN44@Buynode@2:
$LN43@Buynode@2:
  00079	cc		 int	 3
??$_Buynode@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode<std::pair<int,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@@Z ; std::_Uninitialized_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@@Z
_TEXT	SEGMENT
__Cat$216709 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@@Z PROC ; std::_Uninitialized_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 45 fc	 mov	 eax, DWORD PTR __Cat$216709[ebp]
  00007	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0000d	50		 push	 eax
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00011	6a 00		 push	 0
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00017	52		 push	 edx
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET>,DATA_ITEMGET>
  0001f	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??$_Uninitialized_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@@Z ENDP ; std::_Uninitialized_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::find
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
$T216719 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000a	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00011	57		 push	 edi
  00012	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00015	75 21		 jne	 SHORT $LN9@find
  00017	56		 push	 esi
  00018	8b 37		 mov	 esi, DWORD PTR [edi]
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL10@find:
  00020	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00023	7d 05		 jge	 SHORT $LN8@find
  00025	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00028	eb 04		 jmp	 SHORT $LN7@find
$LN8@find:
  0002a	8b d0		 mov	 edx, eax
  0002c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@find:
  0002e	80 b8 15 01 00
	00 00		 cmp	 BYTE PTR [eax+277], 0
  00035	74 e9		 je	 SHORT $LL10@find
  00037	5e		 pop	 esi
$LN9@find:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00038	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0003b	89 55 0c	 mov	 DWORD PTR __Where$[ebp], edx
  0003e	3b d0		 cmp	 edx, eax
  00040	74 18		 je	 SHORT $LN3@find
  00042	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00044	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  00047	7c 11		 jl	 SHORT $LN3@find
  00049	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00051	89 10		 mov	 DWORD PTR [eax], edx
  00053	5f		 pop	 edi

; 1429 : 		}

  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
$LN3@find:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0005a	89 45 fc	 mov	 DWORD PTR $T216719[ebp], eax
  0005d	8d 45 fc	 lea	 eax, DWORD PTR $T216719[ebp]
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00065	89 10		 mov	 DWORD PTR [eax], edx
  00067	5f		 pop	 edi

; 1429 : 		}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::find
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T216943 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T216943[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase

; 1867 : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXPAUDATA_ITEMGET@@0@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Destroy
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXPAUDATA_ITEMGET@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXPAUDATA_ITEMGET@@0@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXPAUDATA_ITEMGET@@0@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Destroy
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::insert<std::pair<int,DATA_TEXT> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$insert@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::insert<std::pair<int,DATA_TEXT> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode<std::pair<int,DATA_TEXT> >
  00012	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00015	50		 push	 eax
  00016	57		 push	 edi
  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Linsert
  0001e	8b c7		 mov	 eax, edi
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 757  : 		}

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??$insert@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::insert<std::pair<int,DATA_TEXT> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAUDATA_ITEMGET@@@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEPAUDATA_ITEMGET@@PAU2@00@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Umove<DATA_ITEMGET *>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAUDATA_ITEMGET@@@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEPAUDATA_ITEMGET@@PAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$217052 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUDATA_ITEMGET@@@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEPAUDATA_ITEMGET@@PAU2@00@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Umove<DATA_ITEMGET *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Cat$217052[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00009	50		 push	 eax
  0000a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000d	6a 00		 push	 0
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	51		 push	 ecx
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET>,DATA_ITEMGET>
  0001e	83 c4 18	 add	 esp, 24			; 00000018H

; 1326 : 		}

  00021	5d		 pop	 ebp
  00022	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUDATA_ITEMGET@@@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEPAUDATA_ITEMGET@@PAU2@00@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Umove<DATA_ITEMGET *>
_TEXT	ENDS
PUBLIC	??_C@_0BL@JJIHFLBC@Could?5not?5find?5message?5?$CFd?$CB?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GetMessageA@CItemGetNotice@@QAEPADH@Z		; CItemGetNotice::GetMessageA
EXTRN	__imp__wsprintfA:PROC
;	COMDAT ??_C@_0BL@JJIHFLBC@Could?5not?5find?5message?5?$CFd?$CB?$AA@
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BL@JJIHFLBC@Could?5not?5find?5message?5?$CFd?$CB?$AA@ DB 'Could no'
	DB	't find message %d!', 00H			; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\itemgetnotice.cpp
CONST	ENDS
;	COMDAT ?GetMessageA@CItemGetNotice@@QAEPADH@Z
_TEXT	SEGMENT
_it$ = -264						; size = 4
_Error$210921 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_index$ = 8						; size = 4
?GetMessageA@CItemGetNotice@@QAEPADH@Z PROC		; CItemGetNotice::GetMessageA, COMDAT
; _this$ = ecx

; 118  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 119  : 	std::map<int, DATA_TEXT>::iterator it = this->m_TextData.find(index);

  00016	8d 45 08	 lea	 eax, DWORD PTR _index$[ebp]
  00019	50		 push	 eax
  0001a	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _it$[ebp]
  00020	51		 push	 ecx
  00021	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00024	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::find

; 120  : 
; 121  : 	if (it == this->m_TextData.end())

  00029	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _it$[ebp]
  0002f	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  00032	5e		 pop	 esi
  00033	75 2f		 jne	 SHORT $LN2@GetMessage

; 122  : 	{
; 123  : 		char Error[256];
; 124  : 		wsprintf(Error, "Could not find message %d!", index);

  00035	8b 55 08	 mov	 edx, DWORD PTR _index$[ebp]
  00038	52		 push	 edx
  00039	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _Error$210921[ebp]
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JJIHFLBC@Could?5not?5find?5message?5?$CFd?$CB?$AA@
  00044	50		 push	 eax
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 125  : 		return Error;

  0004e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _Error$210921[ebp]

; 126  : 	}
; 127  : 	else
; 128  : 	{
; 129  : 		return it->second.Message;
; 130  : 	}
; 131  : 
; 132  : }

  00054	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00057	33 cd		 xor	 ecx, ebp
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$LN2@GetMessage:
  00064	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00067	33 cd		 xor	 ecx, ebp
  00069	83 c0 14	 add	 eax, 20			; 00000014H
  0006c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?GetMessageA@CItemGetNotice@@QAEPADH@Z ENDP		; CItemGetNotice::GetMessageA
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?ItemGetNotice@CItemGetNotice@@QAEXPAVCMapItem@@H@Z ; CItemGetNotice::ItemGetNotice
EXTRN	?MessageSendAllEx@@YAXHPAD0ZZ:PROC		; MessageSendAllEx
EXTRN	?GetName@CItem@@QAEPADXZ:PROC			; CItem::GetName
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?ItemGetNotice@CItemGetNotice@@QAEXPAVCMapItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpMapItem$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?ItemGetNotice@CItemGetNotice@@QAEXPAVCMapItem@@H@Z PROC ; CItemGetNotice::ItemGetNotice, COMDAT
; _this$ = ecx

; 184  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 185  : 	DATA_ITEMGET* GetInfoNoticeItem = this->CheckItemGetNotice(lpMapItem);

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _lpMapItem$[ebp]
  00008	56		 push	 esi
  00009	53		 push	 ebx
  0000a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	e8 00 00 00 00	 call	 ?CheckItemGetNotice@CItemGetNotice@@QAEPAUDATA_ITEMGET@@PAVCMapItem@@@Z ; CItemGetNotice::CheckItemGetNotice
  00012	8b f0		 mov	 esi, eax

; 186  : 	if (!GetInfoNoticeItem) return;

  00014	85 f6		 test	 esi, esi
  00016	0f 84 e7 00 00
	00		 je	 $LN1@ItemGetNot

; 187  : 	LPOBJ lpUser = &gObj[aIndex];

  0001c	57		 push	 edi
  0001d	8b 7d 0c	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00020	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00026	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 188  : 	//char MessText[256] = { 0 };
; 189  : 	//wsprintf(MessText, "+%d", it->Level);
; 190  : 
; 191  : 	if (GetInfoNoticeItem->ColorMess < 4)

  0002c	83 7e 18 04	 cmp	 DWORD PTR [esi+24], 4

; 194  : 		{
; 195  : 			MessageSendAllEx(Color[GetInfoNoticeItem->ColorMess], "", this->GetMessage(GetInfoNoticeItem->TextID), lpUser->Name, lpMapItem->m_Level, lpMapItem->GetName());

  00030	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00033	7d 7b		 jge	 SHORT $LN6@ItemGetNot

; 192  : 	{
; 193  : 		if (GetInfoNoticeItem->TextID > 3)

  00035	83 7e 1c 03	 cmp	 DWORD PTR [esi+28], 3
  00039	7e 3d		 jle	 SHORT $LN5@ItemGetNot

; 194  : 		{
; 195  : 			MessageSendAllEx(Color[GetInfoNoticeItem->ColorMess], "", this->GetMessage(GetInfoNoticeItem->TextID), lpUser->Name, lpMapItem->m_Level, lpMapItem->GetName());

  0003b	e8 00 00 00 00	 call	 ?GetName@CItem@@QAEPADXZ ; CItem::GetName
  00040	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00043	50		 push	 eax
  00044	0f bf 43 0c	 movsx	 eax, WORD PTR [ebx+12]
  00048	50		 push	 eax
  00049	83 c7 77	 add	 edi, 119		; 00000077H
  0004c	57		 push	 edi
  0004d	51		 push	 ecx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?GetMessageA@CItemGetNotice@@QAEPADH@Z ; CItemGetNotice::GetMessageA
  00056	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00059	50		 push	 eax
  0005a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?Color@@3PAHA[edx*4]
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?MessageSendAllEx@@YAXHPAD0ZZ ; MessageSendAllEx
  0006c	83 c4 18	 add	 esp, 24			; 00000018H
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx

; 212  : 		}
; 213  : 	}
; 214  : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
$LN5@ItemGetNot:

; 196  : 		}
; 197  : 		else
; 198  : 		{
; 199  : 			MessageSendAllEx(Color[GetInfoNoticeItem->ColorMess], "", this->GetMessage(GetInfoNoticeItem->TextID), lpUser->Name, lpMapItem->GetName());

  00078	e8 00 00 00 00	 call	 ?GetName@CItem@@QAEPADXZ ; CItem::GetName
  0007d	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00080	50		 push	 eax
  00081	83 c7 77	 add	 edi, 119		; 00000077H
  00084	57		 push	 edi
  00085	51		 push	 ecx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?GetMessageA@CItemGetNotice@@QAEPADH@Z ; CItemGetNotice::GetMessageA
  0008e	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00091	50		 push	 eax
  00092	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?Color@@3PAHA[edx*4]
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?MessageSendAllEx@@YAXHPAD0ZZ ; MessageSendAllEx
  000a4	83 c4 14	 add	 esp, 20			; 00000014H
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx

; 212  : 		}
; 213  : 	}
; 214  : }

  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN6@ItemGetNot:

; 200  : 		}
; 201  : 	}
; 202  : 	else
; 203  : 	{
; 204  : 
; 205  : 		if (GetInfoNoticeItem->TextID > 3)

  000b0	83 7e 1c 03	 cmp	 DWORD PTR [esi+28], 3
  000b4	7e 2d		 jle	 SHORT $LN2@ItemGetNot

; 206  : 		{
; 207  : 			SetNoticeGobal(this->GetMessage(GetInfoNoticeItem->TextID), lpUser->Name, lpMapItem->m_Level, lpMapItem->GetName());

  000b6	e8 00 00 00 00	 call	 ?GetName@CItem@@QAEPADXZ ; CItem::GetName
  000bb	0f bf 4b 0c	 movsx	 ecx, WORD PTR [ebx+12]
  000bf	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  000c2	50		 push	 eax
  000c3	51		 push	 ecx
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	83 c7 77	 add	 edi, 119		; 00000077H
  000ca	57		 push	 edi
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ?GetMessageA@CItemGetNotice@@QAEPADH@Z ; CItemGetNotice::GetMessageA
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?SetNoticeGobal@@YAXPADZZ ; SetNoticeGobal
  000d7	83 c4 10	 add	 esp, 16			; 00000010H
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx

; 212  : 		}
; 213  : 	}
; 214  : }

  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c2 08 00	 ret	 8
$LN2@ItemGetNot:

; 208  : 		}
; 209  : 		else
; 210  : 		{
; 211  : 			SetNoticeGobal(this->GetMessage(GetInfoNoticeItem->TextID), lpUser->Name, lpMapItem->GetName());

  000e3	e8 00 00 00 00	 call	 ?GetName@CItem@@QAEPADXZ ; CItem::GetName
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	50		 push	 eax
  000ec	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000ef	83 c7 77	 add	 edi, 119		; 00000077H
  000f2	57		 push	 edi
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ?GetMessageA@CItemGetNotice@@QAEPADH@Z ; CItemGetNotice::GetMessageA
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?SetNoticeGobal@@YAXPADZZ ; SetNoticeGobal
  000ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  00102	5f		 pop	 edi
$LN1@ItemGetNot:
  00103	5e		 pop	 esi
  00104	5b		 pop	 ebx

; 212  : 		}
; 213  : 	}
; 214  : }

  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
?ItemGetNotice@CItemGetNotice@@QAEXPAVCMapItem@@H@Z ENDP ; CItemGetNotice::ItemGetNotice
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T217226 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T217226[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase

; 792  : 		}

  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
PUBLIC	?erase@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@0@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::erase
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@0@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);
; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  00004	8b 55 10	 mov	 edx, DWORD PTR __Last_arg$[ebp]
  00007	53		 push	 ebx
  00008	8b 5d 0c	 mov	 ebx, DWORD PTR __First_arg$[ebp]
  0000b	56		 push	 esi
  0000c	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00012	89 1e		 mov	 DWORD PTR [esi], ebx
  00014	3b da		 cmp	 ebx, edx
  00016	74 27		 je	 SHORT $LN39@erase@3

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00018	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0001b	3b d0		 cmp	 edx, eax
  0001d	74 1d		 je	 SHORT $LN30@erase@3
  0001f	57		 push	 edi
$LL32@erase@3:
  00020	8b f2		 mov	 esi, edx
  00022	8b fb		 mov	 edi, ebx
  00024	83 c2 20	 add	 edx, 32			; 00000020H
  00027	b9 08 00 00 00	 mov	 ecx, 8
  0002c	83 c3 20	 add	 ebx, 32			; 00000020H
  0002f	f3 a5		 rep movsd
  00031	3b d0		 cmp	 edx, eax
  00033	75 eb		 jne	 SHORT $LL32@erase@3
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	5f		 pop	 edi
$LN30@erase@3:

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  0003c	89 59 04	 mov	 DWORD PTR [ecx+4], ebx
$LN39@erase@3:

; 1212 : 			}
; 1213 : 		return (_First);

  0003f	8b c6		 mov	 eax, esi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx

; 1214 : 		}

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@@2@0@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXXZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXXZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN6@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN6@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00026	5e		 pop	 esi

; 1312 : 		}

  00027	c3		 ret	 0
?_Tidy@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXXZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::reserve
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$211342 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$217435 = 8					; size = 1
__Count$ = 8						; size = 4
?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0002d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00030	3d ff ff ff 07	 cmp	 eax, 134217727		; 07ffffffH
  00035	76 0a		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0003c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN42@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00041	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00044	2b 0e		 sub	 ecx, DWORD PTR [esi]
  00046	c1 f9 05	 sar	 ecx, 5
  00049	3b c8		 cmp	 ecx, eax
  0004b	73 57		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  0004d	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  00050	50		 push	 eax
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ?allocate@?$allocator@UDATA_ITEMGET@@@std@@QAEPAUDATA_ITEMGET@@I@Z ; std::allocator<DATA_ITEMGET>::allocate

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00058	8b 55 08	 mov	 edx, DWORD PTR __Cat$217435[ebp]
  0005b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005d	52		 push	 edx
  0005e	6a 00		 push	 0
  00060	8b d8		 mov	 ebx, eax
  00062	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00065	57		 push	 edi
  00066	53		 push	 ebx
  00067	50		 push	 eax
  00068	51		 push	 ecx
  00069	89 5d ec	 mov	 DWORD PTR __Ptr$211342[ebp], ebx
  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00073	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDATA_ITEMGET@@PAU1@V?$allocator@UDATA_ITEMGET@@@std@@U1@@std@@YAPAUDATA_ITEMGET@@PAU1@00AAV?$allocator@UDATA_ITEMGET@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DATA_ITEMGET *,DATA_ITEMGET *,std::allocator<DATA_ITEMGET>,DATA_ITEMGET>

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0007d	83 c4 18	 add	 esp, 24			; 00000018H
  00080	2b f8		 sub	 edi, eax

; 761  : 			if (this->_Myfirst != 0)

  00082	85 c0		 test	 eax, eax
  00084	74 09		 je	 SHORT $LN35@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008c	83 c4 04	 add	 esp, 4
$LN35@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

  0008f	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00092	c1 e0 05	 shl	 eax, 5
  00095	03 c3		 add	 eax, ebx

; 770  : 			this->_Mylast = _Ptr + _Size;

  00097	83 e7 e0	 and	 edi, -32		; ffffffe0H
  0009a	03 fb		 add	 edi, ebx
  0009c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0009f	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000a2	89 1e		 mov	 DWORD PTR [esi], ebx
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000b8	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$211342[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c1	83 c4 04	 add	 esp, 4

; 757  : 			_RERAISE;

  000c4	6a 00		 push	 0
  000c6	6a 00		 push	 0
  000c8	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@reserve:
$LN41@reserve:
  000cd	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::reserve
PUBLIC	??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ ; std::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >::~map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T217611 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >::~map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T217611[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
__ehhandler$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >::~map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >
PUBLIC	??1?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >, COMDAT
; _this$ = ecx

; 704  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 705  : 		_Tidy();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN8@vector@2
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN8@vector@2:
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00026	5e		 pop	 esi

; 706  : 		}

  00027	c3		 ret	 0
??1?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXXZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXXZ PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	53		 push	 ebx
  00008	8b 19		 mov	 ebx, DWORD PTR [ecx]
  0000a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	3b da		 cmp	 ebx, edx
  0000f	74 2c		 je	 SHORT $LN19@clear@2
  00011	8b c2		 mov	 eax, edx
  00013	3b d2		 cmp	 edx, edx
  00015	74 23		 je	 SHORT $LN48@clear@2
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL50@clear@2:
  00020	8b f0		 mov	 esi, eax
  00022	8b fb		 mov	 edi, ebx
  00024	83 c0 20	 add	 eax, 32			; 00000020H
  00027	b9 08 00 00 00	 mov	 ecx, 8
  0002c	83 c3 20	 add	 ebx, 32			; 00000020H
  0002f	f3 a5		 rep movsd
  00031	3b c2		 cmp	 eax, edx
  00033	75 eb		 jne	 SHORT $LL50@clear@2
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
$LN48@clear@2:
  0003a	89 59 04	 mov	 DWORD PTR [ecx+4], ebx
$LN19@clear@2:
  0003d	5b		 pop	 ebx

; 1219 : 		}

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?clear@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXXZ ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::clear
_TEXT	ENDS
PUBLIC	??0?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ ; std::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T218021 = -16						; size = 12
$T217913 = -4						; size = 4
??0?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	68 18 01 00 00	 push	 280			; 00000118H
  0000e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	74 2c		 je	 SHORT $LN25@map
  00021	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00024	89 00		 mov	 DWORD PTR [eax], eax
  00026	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00029	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0002c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002f	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00032	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00035	b0 01		 mov	 al, 1
  00037	88 81 14 01 00
	00		 mov	 BYTE PTR [ecx+276], al
  0003d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00040	88 82 15 01 00
	00		 mov	 BYTE PTR [edx+277], al

; 107  : 		}

  00046	8b c6		 mov	 eax, esi
  00048	5e		 pop	 esi
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0

; 106  : 		{	// construct empty map from defaults

$LN25@map:
  0004d	8d 45 fc	 lea	 eax, DWORD PTR $T217913[ebp]
  00050	50		 push	 eax
  00051	8d 4d f0	 lea	 ecx, DWORD PTR $T218021[ebp]
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T217913[ebp], 0
  0005b	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00060	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00065	8d 4d f0	 lea	 ecx, DWORD PTR $T218021[ebp]
  00068	51		 push	 ecx
  00069	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T218021[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00070	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN49@map:
$LN48@map:
  00075	cc		 int	 3
??0?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >::map<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> > >
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Reserve
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXI@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1291 : 		size_type _Size = size();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1292 : 		if (max_size() - _Count < _Size)

  00006	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8b 31		 mov	 esi, DWORD PTR [ecx]
  0000c	57		 push	 edi
  0000d	2b c6		 sub	 eax, esi
  0000f	bf ff ff ff 07	 mov	 edi, 134217727		; 07ffffffH
  00014	c1 f8 05	 sar	 eax, 5
  00017	2b fa		 sub	 edi, edx
  00019	3b f8		 cmp	 edi, eax
  0001b	73 0a		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00022	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN34@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	03 c2		 add	 eax, edx
  00029	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002c	2b d6		 sub	 edx, esi
  0002e	c1 fa 05	 sar	 edx, 5
  00031	3b c2		 cmp	 eax, edx
  00033	76 21		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00035	8b f2		 mov	 esi, edx
  00037	d1 ee		 shr	 esi, 1
  00039	bf ff ff ff 07	 mov	 edi, 134217727		; 07ffffffH
  0003e	2b fe		 sub	 edi, esi
  00040	3b fa		 cmp	 edi, edx
  00042	73 04		 jae	 SHORT $LN23@Reserve
  00044	33 d2		 xor	 edx, edx
  00046	eb 02		 jmp	 SHORT $LN24@Reserve
$LN23@Reserve:
  00048	03 d6		 add	 edx, esi
$LN24@Reserve:
  0004a	3b d0		 cmp	 edx, eax
  0004c	73 02		 jae	 SHORT $LN20@Reserve
  0004e	8b d0		 mov	 edx, eax
$LN20@Reserve:
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::reserve
$LN1@Reserve:
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi

; 1298 : 		}

  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN33@Reserve:
?_Reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Reserve
_TEXT	ENDS
PUBLIC	??1CItemGetNotice@@QAE@XZ			; CItemGetNotice::~CItemGetNotice
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CItemGetNotice@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CItemGetNotice@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CItemGetNotice@@QAE@XZ$3
__ehfuncinfo$??1CItemGetNotice@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CItemGetNotice@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\itemgetnotice.cpp
xdata$x	ENDS
;	COMDAT ??1CItemGetNotice@@QAE@XZ
_TEXT	SEGMENT
$T218286 = -24						; size = 4
$T218320 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CItemGetNotice@@QAE@XZ PROC				; CItemGetNotice::~CItemGetNotice, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CItemGetNotice@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 19   : }

  0002c	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00036	89 75 ec	 mov	 DWORD PTR $T218320[ebp], esi
  00039	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	8d 45 e8	 lea	 eax, DWORD PTR $T218286[ebp]
  00043	50		 push	 eax
  00044	8b ce		 mov	 ecx, esi
  00046	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004a	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::erase
  0004f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00058	8b 07		 mov	 eax, DWORD PTR [edi]
  0005a	83 c4 04	 add	 esp, 4
  0005d	85 c0		 test	 eax, eax
  0005f	74 09		 je	 SHORT $LN48@CItemGetNo
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00067	83 c4 04	 add	 esp, 4
$LN48@CItemGetNo:
  0006a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00070	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00077	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CItemGetNotice@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
__unwindfunclet$??1CItemGetNotice@@QAE@XZ$3:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR $T218320[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::~_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >
__ehhandler$??1CItemGetNotice@@QAE@XZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CItemGetNotice@@QAE@XZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CItemGetNotice@@QAE@XZ ENDP				; CItemGetNotice::~CItemGetNotice
PUBLIC	?Init@CItemGetNotice@@QAEXXZ			; CItemGetNotice::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CItemGetNotice@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CItemGetNotice@@QAEXXZ PROC			; CItemGetNotice::Init, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 23   : 	this->m_TextData.clear();

  00008	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0000b	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000e	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::clear

; 24   : 	this->m_ItemGetNotice.clear();

  00013	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00015	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00018	3b da		 cmp	 ebx, edx
  0001a	74 23		 je	 SHORT $LN21@Init
  0001c	8b c2		 mov	 eax, edx
  0001e	3b d2		 cmp	 edx, edx
  00020	74 1a		 je	 SHORT $LN50@Init
  00022	57		 push	 edi
$LL52@Init:
  00023	8b f0		 mov	 esi, eax
  00025	8b fb		 mov	 edi, ebx
  00027	83 c0 20	 add	 eax, 32			; 00000020H
  0002a	b9 08 00 00 00	 mov	 ecx, 8
  0002f	83 c3 20	 add	 ebx, 32			; 00000020H
  00032	f3 a5		 rep movsd
  00034	3b c2		 cmp	 eax, edx
  00036	75 eb		 jne	 SHORT $LL52@Init
  00038	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
$LN50@Init:
  0003c	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
$LN21@Init:
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx

; 25   : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?Init@CItemGetNotice@@QAEXXZ ENDP			; CItemGetNotice::Init
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXABUDATA_ITEMGET@@@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::push_back
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXABUDATA_ITEMGET@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXABUDATA_ITEMGET@@@Z PROC ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 36		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 30		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx

; 980  : 			if (this->_Mylast == this->_Myend)

  00019	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001c	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  0001e	6a 01		 push	 1
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	83 e7 e0	 and	 edi, -32		; ffffffe0H
  0002d	03 3e		 add	 edi, DWORD PTR [esi]
  0002f	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00032	57		 push	 edi
  00033	50		 push	 eax
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@AAU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@AAU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET &>

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  0003d	83 46 04 20	 add	 DWORD PTR [esi+4], 32	; 00000020H
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN4@push_back:

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else
; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00047	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0004a	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0004c	6a 01		 push	 1
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@IAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00055	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00058	57		 push	 edi
  00059	52		 push	 edx
  0005a	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@ABU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@ABU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET const &>
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00066	83 46 04 20	 add	 DWORD PTR [esi+4], 32	; 00000020H
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
?push_back@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXABUDATA_ITEMGET@@@Z ENDP ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::push_back
_TEXT	ENDS
PUBLIC	??0CItemGetNotice@@QAE@XZ			; CItemGetNotice::CItemGetNotice
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0CItemGetNotice@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CItemGetNotice@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CItemGetNotice@@QAE@XZ$1
__ehfuncinfo$??0CItemGetNotice@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CItemGetNotice@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\itemgetnotice.cpp
xdata$x	ENDS
;	COMDAT ??0CItemGetNotice@@QAE@XZ
_TEXT	SEGMENT
$T218873 = -32						; size = 12
_this$ = -20						; size = 4
$T218718 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CItemGetNotice@@QAE@XZ PROC				; CItemGetNotice::CItemGetNotice, COMDAT
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CItemGetNotice@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
  00029	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  0002c	33 ff		 xor	 edi, edi
  0002e	89 3e		 mov	 DWORD PTR [esi], edi
  00030	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00033	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00036	68 18 01 00 00	 push	 280			; 00000118H
  0003b	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0003e	89 7e 18	 mov	 DWORD PTR [esi+24], edi
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	83 c4 04	 add	 esp, 4
  00049	3b c7		 cmp	 eax, edi
  0004b	74 42		 je	 SHORT $LN37@CItemGetNo@2
  0004d	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00050	89 00		 mov	 DWORD PTR [eax], eax
  00052	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00055	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00058	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0005b	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0005e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00061	b0 01		 mov	 al, 1
  00063	88 81 14 01 00
	00		 mov	 BYTE PTR [ecx+276], al
  00069	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0006c	88 82 15 01 00
	00		 mov	 BYTE PTR [edx+277], al

; 14   : 	this->Init();

  00072	8b ce		 mov	 ecx, esi
  00074	88 45 fc	 mov	 BYTE PTR __$EHRec$[ebp+8], al
  00077	e8 00 00 00 00	 call	 ?Init@CItemGetNotice@@QAEXXZ ; CItemGetNotice::Init

; 15   : }

  0007c	8b c6		 mov	 eax, esi
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0

; 13   : {

$LN37@CItemGetNo@2:
  0008f	8d 45 f0	 lea	 eax, DWORD PTR $T218718[ebp]
  00092	50		 push	 eax
  00093	8d 4d e0	 lea	 ecx, DWORD PTR $T218873[ebp]
  00096	89 7d f0	 mov	 DWORD PTR $T218718[ebp], edi
  00099	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0009e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  000a3	8d 4d e0	 lea	 ecx, DWORD PTR $T218873[ebp]
  000a6	51		 push	 ecx
  000a7	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T218873[ebp], OFFSET ??_7bad_alloc@std@@6B@
  000ae	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN63@CItemGetNo@2:
$LN62@CItemGetNo@2:
  000b3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CItemGetNotice@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAE@XZ ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::~vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >
__unwindfunclet$??0CItemGetNotice@@QAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$map@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0CItemGetNotice@@QAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CItemGetNotice@@QAE@XZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CItemGetNotice@@QAE@XZ ENDP				; CItemGetNotice::CItemGetNotice
PUBLIC	??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@	; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0BP@OFJHFCAD@Error?5ZtData?2ItemGetNotice?4txt?$AA@ ; `string'
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0BJ@OAGMFGH@ZtData?2ItemGetNotice?4txt?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Read@CItemGetNotice@@QAEXXZ			; CItemGetNotice::Read
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	_fclose:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
CONST	SEGMENT
??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@ DB '%s file load!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OFJHFCAD@Error?5ZtData?2ItemGetNotice?4txt?$AA@
CONST	SEGMENT
??_C@_0BP@OFJHFCAD@Error?5ZtData?2ItemGetNotice?4txt?$AA@ DB 'Error ZtDat'
	DB	'a\ItemGetNotice.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OAGMFGH@ZtData?2ItemGetNotice?4txt?$AA@
CONST	SEGMENT
??_C@_0BJ@OAGMFGH@ZtData?2ItemGetNotice?4txt?$AA@ DB 'ZtData\ItemGetNotic'
	DB	'e.txt', 00H					; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\itemgetnotice.cpp
CONST	ENDS
;	COMDAT ?Read@CItemGetNotice@@QAEXXZ
_TEXT	SEGMENT
$T210436 = -576						; size = 264
$T218900 = -312						; size = 8
_filename$ = -304					; size = 4
_iType$ = -300						; size = 4
_infoText$210270 = -296					; size = 260
_infoItemGet$210264 = -36				; size = 32
__$ArrayPad$ = -4					; size = 4
?Read@CItemGetNotice@@QAEXXZ PROC			; CItemGetNotice::Read, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 02 00
	00		 sub	 esp, 576		; 00000240H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 29   : 	this->Init();

  00016	e8 00 00 00 00	 call	 ?Init@CItemGetNotice@@QAEXXZ ; CItemGetNotice::Init

; 30   : 	char* filename = gDirPath.GetNewPath("ZtData\\ItemGetNotice.txt");

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@OAGMFGH@ZtData?2ItemGetNotice?4txt?$AA@
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00025	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath

; 31   : 
; 32   : 	SMDFile = fopen(filename, "r");

  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0002f	50		 push	 eax
  00030	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _filename$[ebp], eax
  00036	e8 00 00 00 00	 call	 _fopen
  0003b	83 c4 08	 add	 esp, 8
  0003e	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 33   : 
; 34   : 	if (SMDFile == NULL)

  00043	85 c0		 test	 eax, eax
  00045	75 1a		 jne	 SHORT $LN13@Read

; 35   : 	{
; 36   : 		MessageBox(NULL, "Error ZtData\\ItemGetNotice.txt", "Error", MB_OK);

  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OFJHFCAD@Error?5ZtData?2ItemGetNotice?4txt?$AA@
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 37   : 		ExitProcess(1);

  00059	6a 01		 push	 1
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4
$LN142@Read:
$LN13@Read:

; 38   : 	}
; 39   : 
; 40   : 	SMDToken Token;
; 41   : 
; 42   : 	int iType = -1;
; 43   : 	int iMaxType = 1;
; 44   : 	while (true)
; 45   : 	{
; 46   : 		Token = GetToken();

  00061	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 47   : 
; 48   : 		if (Token == END)

  00066	83 f8 02	 cmp	 eax, 2
  00069	0f 84 cd 02 00
	00		 je	 $LN8@Read
  0006f	56		 push	 esi
  00070	57		 push	 edi
$LL12@Read:

; 49   : 		{
; 50   : 			break;
; 51   : 		}
; 52   : 
; 53   : 		iType = (int)TokenNumber;

  00071	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00077	e8 00 00 00 00	 call	 __ftol2_sse
  0007c	8b f8		 mov	 edi, eax
  0007e	89 bd d4 fe ff
	ff		 mov	 DWORD PTR _iType$[ebp], edi

; 54   : 
; 55   : 		if (iType < 0 || iType > iMaxType)

  00084	85 ff		 test	 edi, edi
  00086	0f 88 ae 02 00
	00		 js	 $LN139@Read
  0008c	83 ff 01	 cmp	 edi, 1
  0008f	0f 8f a5 02 00
	00		 jg	 $LN139@Read
$LL7@Read:

; 56   : 		{
; 57   : 			break;
; 58   : 		}
; 59   : 
; 60   : 		while (true)
; 61   : 		{
; 62   : 			if (iType == 0) //Data item Get

  00095	85 ff		 test	 edi, edi
  00097	0f 85 ca 01 00
	00		 jne	 $LN5@Read

; 63   : 			{
; 64   : 				Token = GetToken();

  0009d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 65   : 
; 66   : 				if (!strcmp("end", TokenString))

  000a2	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  000a7	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  000ac	8d 64 24 00	 npad	 4
$LL128@Read:
  000b0	8a 10		 mov	 dl, BYTE PTR [eax]
  000b2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000b4	75 1a		 jne	 SHORT $LN129@Read
  000b6	84 d2		 test	 dl, dl
  000b8	74 12		 je	 SHORT $LN137@Read
  000ba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000bd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000c0	75 0e		 jne	 SHORT $LN129@Read
  000c2	83 c0 02	 add	 eax, 2
  000c5	83 c1 02	 add	 ecx, 2
  000c8	84 d2		 test	 dl, dl
  000ca	75 e4		 jne	 SHORT $LL128@Read
$LN137@Read:
  000cc	33 c0		 xor	 eax, eax
  000ce	eb 05		 jmp	 SHORT $LN131@Read
$LN129@Read:
  000d0	1b c0		 sbb	 eax, eax
  000d2	83 d8 ff	 sbb	 eax, -1
$LN131@Read:
  000d5	85 c0		 test	 eax, eax
  000d7	0f 84 4f 02 00
	00		 je	 $LN121@Read

; 67   : 				{
; 68   : 					break;
; 69   : 				}
; 70   : 
; 71   : 				DATA_ITEMGET infoItemGet;
; 72   : 
; 73   : 
; 74   : 				int Group = TokenNumber;

  000dd	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000e3	e8 00 00 00 00	 call	 __ftol2_sse
  000e8	8b f0		 mov	 esi, eax

; 75   : 				Token = GetToken();

  000ea	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 76   : 				int Type = TokenNumber;
; 77   : 
; 78   : 				infoItemGet.IDItem = ITEMGET(Group, Type);

  000ef	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000f5	c1 e6 09	 shl	 esi, 9
  000f8	e8 00 00 00 00	 call	 __ftol2_sse
  000fd	03 f0		 add	 esi, eax
  000ff	89 75 dc	 mov	 DWORD PTR _infoItemGet$210264[ebp], esi

; 79   : 				Token = GetToken();

  00102	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 80   : 				infoItemGet.SkillCheck = TokenNumber;

  00107	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0010d	e8 00 00 00 00	 call	 __ftol2_sse
  00112	89 45 e0	 mov	 DWORD PTR _infoItemGet$210264[ebp+4], eax

; 81   : 				Token = GetToken();

  00115	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 82   : 				infoItemGet.LuckCheck = TokenNumber;

  0011a	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00120	e8 00 00 00 00	 call	 __ftol2_sse
  00125	89 45 e4	 mov	 DWORD PTR _infoItemGet$210264[ebp+8], eax

; 83   : 				Token = GetToken();

  00128	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 84   : 				infoItemGet.OptionCheck = TokenNumber;

  0012d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00133	e8 00 00 00 00	 call	 __ftol2_sse
  00138	89 45 e8	 mov	 DWORD PTR _infoItemGet$210264[ebp+12], eax

; 85   : 				Token = GetToken();

  0013b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 86   : 				infoItemGet.ExcCheck = TokenNumber;

  00140	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00146	e8 00 00 00 00	 call	 __ftol2_sse
  0014b	89 45 ec	 mov	 DWORD PTR _infoItemGet$210264[ebp+16], eax

; 87   : 				Token = GetToken();

  0014e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 88   : 				infoItemGet.AncCheck = TokenNumber;

  00153	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00159	e8 00 00 00 00	 call	 __ftol2_sse
  0015e	89 45 f0	 mov	 DWORD PTR _infoItemGet$210264[ebp+20], eax

; 89   : 				Token = GetToken();

  00161	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 90   : 				infoItemGet.ColorMess = TokenNumber;

  00166	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0016c	e8 00 00 00 00	 call	 __ftol2_sse
  00171	89 45 f4	 mov	 DWORD PTR _infoItemGet$210264[ebp+24], eax

; 91   : 				Token = GetToken();

  00174	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 92   : 				infoItemGet.TextID = TokenNumber;

  00179	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0017f	e8 00 00 00 00	 call	 __ftol2_sse
  00184	89 45 f8	 mov	 DWORD PTR _infoItemGet$210264[ebp+28], eax

; 93   : 				this->m_ItemGetNotice.push_back(infoItemGet);

  00187	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0018a	8d 4d dc	 lea	 ecx, DWORD PTR _infoItemGet$210264[ebp]
  0018d	3b c8		 cmp	 ecx, eax
  0018f	73 73		 jae	 SHORT $LN19@Read
  00191	8b 13		 mov	 edx, DWORD PTR [ebx]
  00193	3b d1		 cmp	 edx, ecx
  00195	77 6d		 ja	 SHORT $LN19@Read
  00197	8b f1		 mov	 esi, ecx
  00199	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0019c	2b f2		 sub	 esi, edx
  0019e	3b c1		 cmp	 eax, ecx
  001a0	75 43		 jne	 SHORT $LN30@Read
  001a2	2b c2		 sub	 eax, edx
  001a4	c1 f8 05	 sar	 eax, 5
  001a7	3d fe ff ff 07	 cmp	 eax, 134217726		; 07fffffeH
  001ac	0f 87 ba 01 00
	00		 ja	 $LN122@Read
  001b2	2b ca		 sub	 ecx, edx
  001b4	40		 inc	 eax
  001b5	c1 f9 05	 sar	 ecx, 5
  001b8	3b c1		 cmp	 eax, ecx
  001ba	76 29		 jbe	 SHORT $LN30@Read
  001bc	8b d1		 mov	 edx, ecx
  001be	d1 ea		 shr	 edx, 1
  001c0	bf ff ff ff 07	 mov	 edi, 134217727		; 07ffffffH
  001c5	2b fa		 sub	 edi, edx
  001c7	3b f9		 cmp	 edi, ecx
  001c9	73 04		 jae	 SHORT $LN52@Read
  001cb	33 c9		 xor	 ecx, ecx
  001cd	eb 02		 jmp	 SHORT $LN53@Read
$LN52@Read:
  001cf	03 ca		 add	 ecx, edx
$LN53@Read:
  001d1	3b c8		 cmp	 ecx, eax
  001d3	73 02		 jae	 SHORT $LN49@Read
  001d5	8b c8		 mov	 ecx, eax
$LN49@Read:
  001d7	51		 push	 ecx
  001d8	8b cb		 mov	 ecx, ebx
  001da	e8 00 00 00 00	 call	 ?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::reserve
  001df	8b bd d4 fe ff
	ff		 mov	 edi, DWORD PTR _iType$[ebp]
$LN30@Read:
  001e5	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  001e8	83 e6 e0	 and	 esi, -32		; ffffffe0H
  001eb	03 33		 add	 esi, DWORD PTR [ebx]
  001ed	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  001f0	56		 push	 esi
  001f1	52		 push	 edx
  001f2	50		 push	 eax
  001f3	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@AAU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@AAU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET &>
  001f8	83 c4 0c	 add	 esp, 12			; 0000000cH
  001fb	83 43 04 20	 add	 DWORD PTR [ebx+4], 32	; 00000020H
  001ff	e9 91 fe ff ff	 jmp	 $LL7@Read
$LN19@Read:
  00204	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00207	3b c1		 cmp	 eax, ecx
  00209	75 3f		 jne	 SHORT $LN65@Read
  0020b	8b 13		 mov	 edx, DWORD PTR [ebx]
  0020d	2b c2		 sub	 eax, edx
  0020f	c1 f8 05	 sar	 eax, 5
  00212	3d fe ff ff 07	 cmp	 eax, 134217726		; 07fffffeH
  00217	0f 87 4f 01 00
	00		 ja	 $LN122@Read
  0021d	2b ca		 sub	 ecx, edx
  0021f	40		 inc	 eax
  00220	c1 f9 05	 sar	 ecx, 5
  00223	3b c1		 cmp	 eax, ecx
  00225	76 23		 jbe	 SHORT $LN65@Read
  00227	8b d1		 mov	 edx, ecx
  00229	d1 ea		 shr	 edx, 1
  0022b	be ff ff ff 07	 mov	 esi, 134217727		; 07ffffffH
  00230	2b f2		 sub	 esi, edx
  00232	3b f1		 cmp	 esi, ecx
  00234	73 04		 jae	 SHORT $LN87@Read
  00236	33 c9		 xor	 ecx, ecx
  00238	eb 02		 jmp	 SHORT $LN88@Read
$LN87@Read:
  0023a	03 ca		 add	 ecx, edx
$LN88@Read:
  0023c	3b c8		 cmp	 ecx, eax
  0023e	73 02		 jae	 SHORT $LN84@Read
  00240	8b c8		 mov	 ecx, eax
$LN84@Read:
  00242	51		 push	 ecx
  00243	8b cb		 mov	 ecx, ebx
  00245	e8 00 00 00 00	 call	 ?reserve@?$vector@UDATA_ITEMGET@@V?$allocator@UDATA_ITEMGET@@@std@@@std@@QAEXI@Z ; std::vector<DATA_ITEMGET,std::allocator<DATA_ITEMGET> >::reserve
$LN65@Read:
  0024a	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0024d	8d 4d dc	 lea	 ecx, DWORD PTR _infoItemGet$210264[ebp]
  00250	51		 push	 ecx
  00251	52		 push	 edx
  00252	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UDATA_ITEMGET@@@std@@UDATA_ITEMGET@@ABU3@@std@@YAXAAV?$allocator@UDATA_ITEMGET@@@0@PAUDATA_ITEMGET@@ABU2@@Z ; std::_Cons_val<std::allocator<DATA_ITEMGET>,DATA_ITEMGET,DATA_ITEMGET const &>
  0025b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0025e	83 43 04 20	 add	 DWORD PTR [ebx+4], 32	; 00000020H
  00262	e9 2e fe ff ff	 jmp	 $LL7@Read
$LN5@Read:

; 94   : 				//this->m_ItemGetNotice.insert(std::pair<int, DATA_ITEMGET>(infoItemGet.IDItem, infoItemGet));
; 95   : 			}
; 96   : 			else if (iType == 1) // DB Text

  00267	83 ff 01	 cmp	 edi, 1
  0026a	0f 85 25 fe ff
	ff		 jne	 $LL7@Read

; 97   : 			{
; 98   : 				Token = GetToken();

  00270	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 99   : 
; 100  : 				if (!strcmp("end", TokenString))

  00275	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  0027a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0027f	90		 npad	 1
$LL132@Read:
  00280	8a 10		 mov	 dl, BYTE PTR [eax]
  00282	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00284	75 1a		 jne	 SHORT $LN133@Read
  00286	84 d2		 test	 dl, dl
  00288	74 12		 je	 SHORT $LN138@Read
  0028a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0028d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00290	75 0e		 jne	 SHORT $LN133@Read
  00292	83 c0 02	 add	 eax, 2
  00295	83 c1 02	 add	 ecx, 2
  00298	84 d2		 test	 dl, dl
  0029a	75 e4		 jne	 SHORT $LL132@Read
$LN138@Read:
  0029c	33 c0		 xor	 eax, eax
  0029e	eb 05		 jmp	 SHORT $LN135@Read
$LN133@Read:
  002a0	1b c0		 sbb	 eax, eax
  002a2	83 d8 ff	 sbb	 eax, -1
$LN135@Read:
  002a5	85 c0		 test	 eax, eax
  002a7	0f 84 7f 00 00
	00		 je	 $LN121@Read

; 101  : 				{
; 102  : 					break;
; 103  : 				}
; 104  : 				DATA_TEXT infoText;
; 105  : 				infoText.Index = TokenNumber;

  002ad	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002b3	e8 00 00 00 00	 call	 __ftol2_sse
  002b8	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _infoText$210270[ebp], eax

; 106  : 				Token = GetToken();

  002be	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 107  : 				strncpy_s(infoText.Message, TokenString, sizeof(infoText.Message));

  002c3	68 00 01 00 00	 push	 256			; 00000100H
  002c8	68 00 00 00 00	 push	 OFFSET _TokenString
  002cd	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _infoText$210270[ebp+4]
  002d3	68 00 01 00 00	 push	 256			; 00000100H
  002d8	51		 push	 ecx
  002d9	e8 00 00 00 00	 call	 _strncpy_s

; 108  : 				this->m_TextData.insert(std::pair<int, DATA_TEXT>(infoText.Index, infoText));

  002de	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR _infoText$210270[ebp]
  002e4	83 c4 10	 add	 esp, 16			; 00000010H
  002e7	89 95 c0 fd ff
	ff		 mov	 DWORD PTR $T210436[ebp], edx
  002ed	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  002f2	8d b5 d8 fe ff
	ff		 lea	 esi, DWORD PTR _infoText$210270[ebp]
  002f8	8d bd c4 fd ff
	ff		 lea	 edi, DWORD PTR $T210436[ebp+4]
  002fe	6a 00		 push	 0
  00300	8d 85 c0 fd ff
	ff		 lea	 eax, DWORD PTR $T210436[ebp]
  00306	f3 a5		 rep movsd
  00308	50		 push	 eax
  00309	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0030c	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@HUDATA_TEXT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HUDATA_TEXT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Buynode<std::pair<int,DATA_TEXT> >
  00311	50		 push	 eax
  00312	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T218900[ebp]
  00318	51		 push	 ecx
  00319	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0031c	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUDATA_TEXT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUDATA_TEXT@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,DATA_TEXT,std::less<int>,std::allocator<std::pair<int const ,DATA_TEXT> >,0> >::_Linsert

; 109  : 			}
; 110  : 		}

  00321	8b bd d4 fe ff
	ff		 mov	 edi, DWORD PTR _iType$[ebp]
  00327	e9 69 fd ff ff	 jmp	 $LL7@Read
$LN121@Read:

; 38   : 	}
; 39   : 
; 40   : 	SMDToken Token;
; 41   : 
; 42   : 	int iType = -1;
; 43   : 	int iMaxType = 1;
; 44   : 	while (true)
; 45   : 	{
; 46   : 		Token = GetToken();

  0032c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 47   : 
; 48   : 		if (Token == END)

  00331	83 f8 02	 cmp	 eax, 2
  00334	0f 85 37 fd ff
	ff		 jne	 $LL12@Read
$LN139@Read:
  0033a	5f		 pop	 edi
  0033b	5e		 pop	 esi
$LN8@Read:

; 111  : 	}
; 112  : 	fclose(SMDFile);

  0033c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  00342	52		 push	 edx
  00343	e8 00 00 00 00	 call	 _fclose

; 113  : 
; 114  : 	LogAdd("%s file load!", filename);

  00348	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _filename$[ebp]
  0034e	50		 push	 eax
  0034f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@
  00354	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 115  : }

  0035a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0035d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00360	33 cd		 xor	 ecx, ebp
  00362	5b		 pop	 ebx
  00363	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00368	8b e5		 mov	 esp, ebp
  0036a	5d		 pop	 ebp
  0036b	c3		 ret	 0
$LN122@Read:

; 93   : 				this->m_ItemGetNotice.push_back(infoItemGet);

  0036c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00371	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN143@Read:
$LN141@Read:
  00376	cc		 int	 3
?Read@CItemGetNotice@@QAEXXZ ENDP			; CItemGetNotice::Read
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_ItemGetNotice@@YAXXZ
text$yc	SEGMENT
??__Eg_ItemGetNotice@@YAXXZ PROC			; `dynamic initializer for 'g_ItemGetNotice'', COMDAT

; 10   : CItemGetNotice g_ItemGetNotice;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemGetNotice@@3VCItemGetNotice@@A ; g_ItemGetNotice
  00005	e8 00 00 00 00	 call	 ??0CItemGetNotice@@QAE@XZ ; CItemGetNotice::CItemGetNotice
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_ItemGetNotice@@YAXXZ ; `dynamic atexit destructor for 'g_ItemGetNotice''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_ItemGetNotice@@YAXXZ ENDP			; `dynamic initializer for 'g_ItemGetNotice''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_ItemGetNotice@@YAXXZ
text$yd	SEGMENT
??__Fg_ItemGetNotice@@YAXXZ PROC			; `dynamic atexit destructor for 'g_ItemGetNotice'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemGetNotice@@3VCItemGetNotice@@A ; g_ItemGetNotice
  00005	e9 00 00 00 00	 jmp	 ??1CItemGetNotice@@QAE@XZ ; CItemGetNotice::~CItemGetNotice
??__Fg_ItemGetNotice@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_ItemGetNotice''
text$yd	ENDS
PUBLIC	?g_ItemGetNotice@@3VCItemGetNotice@@A		; g_ItemGetNotice
_BSS	SEGMENT
?g_ItemGetNotice@@3VCItemGetNotice@@A DB 020H DUP (?)	; g_ItemGetNotice
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ItemGetNotice$initializer$ DD FLAT:??__Eg_ItemGetNotice@@YAXXZ
CRT$XCU	ENDS
END
