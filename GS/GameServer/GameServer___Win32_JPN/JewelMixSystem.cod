; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\JewelMixSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_g_JewelMixInfo DD 0aH
	DD	07a120H
	DD	01c0dH
	DD	0181eH
	DD	014H
	DD	0f4240H
	DD	01c0dH
	DD	0181eH
	DD	01eH
	DD	016e360H
	DD	01c0dH
	DD	0181eH
	DD	0aH
	DD	07a120H
	DD	01c0eH
	DD	0181fH
	DD	014H
	DD	0f4240H
	DD	01c0eH
	DD	0181fH
	DD	01eH
	DD	016e360H
	DD	01c0eH
	DD	0181fH
	DD	0aH
	DD	07a120H
	DD	01c10H
	DD	01888H
	DD	014H
	DD	0f4240H
	DD	01c10H
	DD	01888H
	DD	01eH
	DD	016e360H
	DD	01c10H
	DD	01888H
	DD	0aH
	DD	07a120H
	DD	01c16H
	DD	01889H
	DD	014H
	DD	0f4240H
	DD	01c16H
	DD	01889H
	DD	01eH
	DD	016e360H
	DD	01c16H
	DD	01889H
	DD	0aH
	DD	07a120H
	DD	01c1fH
	DD	0188aH
	DD	014H
	DD	0f4240H
	DD	01c1fH
	DD	0188aH
	DD	01eH
	DD	016e360H
	DD	01c1fH
	DD	0188aH
	DD	0aH
	DD	07a120H
	DD	01c29H
	DD	0188bH
	DD	014H
	DD	0f4240H
	DD	01c29H
	DD	0188bH
	DD	01eH
	DD	016e360H
	DD	01c29H
	DD	0188bH
	DD	0aH
	DD	07a120H
	DD	01c2aH
	DD	0188cH
	DD	014H
	DD	0f4240H
	DD	01c2aH
	DD	0188cH
	DD	01eH
	DD	016e360H
	DD	01c2aH
	DD	0188cH
	DD	0aH
	DD	07a120H
	DD	0180fH
	DD	0188dH
	DD	014H
	DD	0f4240H
	DD	0180fH
	DD	0188dH
	DD	01eH
	DD	016e360H
	DD	0180fH
	DD	0188dH
	DD	0aH
	DD	07a120H
	DD	01c2bH
	DD	0188eH
	DD	014H
	DD	0f4240H
	DD	01c2bH
	DD	0188eH
	DD	01eH
	DD	016e360H
	DD	01c2bH
	DD	0188eH
	DD	0aH
	DD	07a120H
	DD	01c2cH
	DD	0188fH
	DD	014H
	DD	0f4240H
	DD	01c2cH
	DD	0188fH
	DD	01eH
	DD	016e360H
	DD	01c2cH
	DD	0188fH
CONST	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CJewelMixSystem@@6B@			; CJewelMixSystem::`vftable'
PUBLIC	??0CJewelMixSystem@@QAE@XZ			; CJewelMixSystem::CJewelMixSystem
PUBLIC	??_R4CJewelMixSystem@@6B@			; CJewelMixSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCJewelMixSystem@@@8			; CJewelMixSystem `RTTI Type Descriptor'
PUBLIC	??_R3CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CJewelMixSystem@@8		; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECJewelMixSystem@@UAEPAXI@Z:PROC		; CJewelMixSystem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CJewelMixSystem@@8
; File e:\work\tranet_version\gs\gameserver\jewelmixsystem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CJewelMixSystem@@8 DD FLAT:??_R0?AVCJewelMixSystem@@@8 ; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2CJewelMixSystem@@8
rdata$r	SEGMENT
??_R2CJewelMixSystem@@8 DD FLAT:??_R1A@?0A@EA@CJewelMixSystem@@8 ; CJewelMixSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CJewelMixSystem@@8
rdata$r	SEGMENT
??_R3CJewelMixSystem@@8 DD 00H				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCJewelMixSystem@@@8
_DATA	SEGMENT
??_R0?AVCJewelMixSystem@@@8 DD FLAT:??_7type_info@@6B@	; CJewelMixSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCJewelMixSystem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CJewelMixSystem@@6B@
rdata$r	SEGMENT
??_R4CJewelMixSystem@@6B@ DD 00H			; CJewelMixSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCJewelMixSystem@@@8
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_7CJewelMixSystem@@6B@
CONST	SEGMENT
??_7CJewelMixSystem@@6B@ DD FLAT:??_R4CJewelMixSystem@@6B@ ; CJewelMixSystem::`vftable'
	DD	FLAT:??_ECJewelMixSystem@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CJewelMixSystem@@QAE@XZ
_TEXT	SEGMENT
??0CJewelMixSystem@@QAE@XZ PROC				; CJewelMixSystem::CJewelMixSystem, COMDAT
; _this$ = ecx

; 13   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CJewelMixSystem@@6B@

; 14   : 	return;
; 15   : }

  00008	c3		 ret	 0
??0CJewelMixSystem@@QAE@XZ ENDP				; CJewelMixSystem::CJewelMixSystem
_TEXT	ENDS
PUBLIC	??1CJewelMixSystem@@UAE@XZ			; CJewelMixSystem::~CJewelMixSystem
; Function compile flags: /Ogtp
;	COMDAT ??1CJewelMixSystem@@UAE@XZ
_TEXT	SEGMENT
??1CJewelMixSystem@@UAE@XZ PROC				; CJewelMixSystem::~CJewelMixSystem, COMDAT
; _this$ = ecx

; 18   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CJewelMixSystem@@6B@

; 19   : 	return;
; 20   : }

  00006	c3		 ret	 0
??1CJewelMixSystem@@UAE@XZ ENDP				; CJewelMixSystem::~CJewelMixSystem
_TEXT	ENDS
PUBLIC	?GetJewelCount@CJewelMixSystem@@SAHHH@Z		; CJewelMixSystem::GetJewelCount
EXTRN	?gObjGetItemCountInIventory@@YAHHH@Z:PROC	; gObjGetItemCountInIventory
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
; Function compile flags: /Ogtp
;	COMDAT ?GetJewelCount@CJewelMixSystem@@SAHHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
?GetJewelCount@CJewelMixSystem@@SAHHH@Z PROC		; CJewelMixSystem::GetJewelCount, COMDAT

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 24   : 	if ( !gObjIsConnected(iIndex) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	85 c0		 test	 eax, eax
  00012	75 06		 jne	 SHORT $LN6@GetJewelCo
$LN9@GetJewelCo:

; 25   : 	{
; 26   : 		return -1;

  00014	83 c8 ff	 or	 eax, -1
  00017	5e		 pop	 esi

; 44   : 
; 45   : 	return iItemCount;
; 46   : }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
$LN6@GetJewelCo:

; 27   : 	}
; 28   : 
; 29   : 	int iItemType;
; 30   : 
; 31   : 	switch( iJewelType )

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  0001d	83 e8 00	 sub	 eax, 0
  00020	74 15		 je	 SHORT $LN3@GetJewelCo
  00022	48		 dec	 eax

; 35   : 			break;
; 36   : 		case 1:
; 37   : 			iItemType = ITEMGET(14,14);
; 38   : 			break;
; 39   : 		default:
; 40   : 			return -1;

  00023	75 ef		 jne	 SHORT $LN9@GetJewelCo

; 41   : 	}	
; 42   : 	
; 43   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00025	b8 0e 1c 00 00	 mov	 eax, 7182		; 00001c0eH
  0002a	50		 push	 eax
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  00031	83 c4 08	 add	 esp, 8
  00034	5e		 pop	 esi

; 44   : 
; 45   : 	return iItemCount;
; 46   : }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN3@GetJewelCo:

; 32   : 	{
; 33   : 		case 0:
; 34   : 			iItemType = ITEMGET(14,13);

  00037	b8 0d 1c 00 00	 mov	 eax, 7181		; 00001c0dH

; 41   : 	}	
; 42   : 	
; 43   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0003c	50		 push	 eax
  0003d	56		 push	 esi
  0003e	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  00043	83 c4 08	 add	 esp, 8
  00046	5e		 pop	 esi

; 44   : 
; 45   : 	return iItemCount;
; 46   : }

  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?GetJewelCount@CJewelMixSystem@@SAHHH@Z ENDP		; CJewelMixSystem::GetJewelCount
_TEXT	ENDS
PUBLIC	?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z	; CJewelMixSystem::GetJewelCountPerLevel
; Function compile flags: /Ogtp
;	COMDAT ?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z
_TEXT	SEGMENT
_iJewelType$ = 8					; size = 4
_iJewelLevel$ = 12					; size = 4
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z PROC	; CJewelMixSystem::GetJewelCountPerLevel, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 109  : 	if ( !CHECK_LIMIT(iJewelLevel, 3) )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	78 0c		 js	 SHORT $LN11@GetJewelCo@2
  0000a	33 c9		 xor	 ecx, ecx
  0000c	83 f8 02	 cmp	 eax, 2
  0000f	0f 9e c1	 setle	 cl
  00012	85 c9		 test	 ecx, ecx
  00014	75 05		 jne	 SHORT $LN6@GetJewelCo@2
$LN11@GetJewelCo@2:

; 110  : 	{
; 111  : 		return -1;

  00016	83 c8 ff	 or	 eax, -1

; 126  : 	}
; 127  : 
; 128  : 	return iJewelCount;
; 129  : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN6@GetJewelCo@2:

; 112  : 	}
; 113  : 
; 114  : 	int iJewelCount = 0;
; 115  : 
; 116  : 	switch ( iJewelType )

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _iJewelType$[ebp]
  0001e	83 e9 00	 sub	 ecx, 0
  00021	74 0e		 je	 SHORT $LN3@GetJewelCo@2
  00023	49		 dec	 ecx

; 123  : 			break;
; 124  : 		default:
; 125  : 			return -1;

  00024	75 f0		 jne	 SHORT $LN11@GetJewelCo@2

; 120  : 			break;
; 121  : 		case 1:
; 122  : 			iJewelCount = g_JewelMixInfo[1][iJewelLevel].m_iJewelCount;

  00026	c1 e0 04	 shl	 eax, 4
  00029	8b 80 30 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax+48]

; 126  : 	}
; 127  : 
; 128  : 	return iJewelCount;
; 129  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN3@GetJewelCo@2:

; 117  : 	{
; 118  : 		case 0:
; 119  : 			iJewelCount = g_JewelMixInfo[0][iJewelLevel].m_iJewelCount;

  00031	c1 e0 04	 shl	 eax, 4
  00034	8b 80 00 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax]

; 126  : 	}
; 127  : 
; 128  : 	return iJewelCount;
; 129  : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z ENDP	; CJewelMixSystem::GetJewelCountPerLevel
_TEXT	ENDS
PUBLIC	??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@ ; `string'
PUBLIC	??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ ; `string'
PUBLIC	??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ ; `string'
PUBLIC	??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ ; `string'
PUBLIC	??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ ; `string'
PUBLIC	??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ ; `string'
PUBLIC	??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ ; `string'
PUBLIC	?MixJewel@CJewelMixSystem@@SAHHHH@Z		; CJewelMixSystem::MixJewel
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?OnRequestPeriodItemList@CPeriodItemZt@@QAEXPAUOBJECTSTRUCT@@@Z:PROC ; CPeriodItemZt::OnRequestPeriodItemList
EXTRN	?g_PeriodItemZt@@3VCPeriodItemZt@@A:BYTE	; g_PeriodItemZt
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
EXTRN	?gObjInventoryItemSet@@YAXHHE@Z:PROC		; gObjInventoryItemSet
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?GCAnsJewelMix@@YAXHH@Z:PROC			; GCAnsJewelMix
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjCheckInventorySerial0Item
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@
CONST	SEGMENT
??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@ DB '['
	DB	'ANTI-HACK][protocol] [Mix Jewel] (%s)(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
CONST	SEGMENT
??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ DB '['
	DB	'JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCoun'
	DB	't:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
CONST	SEGMENT
??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ DB '['
	DB	'JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Ser'
	DB	'ial:%u', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
CONST	SEGMENT
??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ DB '['
	DB	'JewelMix] [%s][%s] iMixType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
CONST	SEGMENT
??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ DB '['
	DB	'JewelMix] [%s][%s] Mix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
CONST	SEGMENT
??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ DB '['
	DB	'JewelMix] [%s][%s] Chaos Mix is already working', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
CONST	SEGMENT
??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?MixJewel@CJewelMixSystem@@SAHHHH@Z
_TEXT	SEGMENT
_iChangeType$ = -28					; size = 4
_bItemDelOK$ = -24					; size = 4
_iItemType$ = -20					; size = 4
_iMixMoney$ = -16					; size = 4
_iJewelCount$ = -12					; size = 4
_iDelJewelCount$ = -8					; size = 4
_x$210138 = -4						; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iMixType$ = 16						; size = 4
?MixJewel@CJewelMixSystem@@SAHHHH@Z PROC		; CJewelMixSystem::MixJewel, COMDAT

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	57		 push	 edi

; 134  : 	if( !gObjIsConnected(iIndex) )

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN17@MixJewel
  00017	5f		 pop	 edi

; 269  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN17@MixJewel:

; 135  : 	{
; 136  : 		return false;
; 137  : 	}
; 138  : 	// ----
; 139  : 	LPINTERFACE_STATE lpIfState = &gObj[iIndex].m_IfState;

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	56		 push	 esi
  00022	8b f7		 mov	 esi, edi
  00024	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0002a	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]

; 140  : 	// ----
; 141  : 	if( lpIfState->use != 1 || lpIfState->type != 20 )

  0002d	8b 81 1c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3612]
  00033	8b d0		 mov	 edx, eax
  00035	80 e2 03	 and	 dl, 3
  00038	80 fa 01	 cmp	 dl, 1
  0003b	0f 85 f9 03 00
	00		 jne	 $LN15@MixJewel
  00041	25 c0 ff 00 00	 and	 eax, 65472		; 0000ffc0H
  00046	3d 00 05 00 00	 cmp	 eax, 1280		; 00000500H
  0004b	0f 85 e9 03 00
	00		 jne	 $LN15@MixJewel

; 147  : 	}
; 148  : 	// ----
; 149  : 	if( gObjCheckInventorySerial0Item(&gObj[iIndex]) )

  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00057	83 c4 04	 add	 esp, 4
  0005a	85 c0		 test	 eax, eax
  0005c	74 43		 je	 SHORT $LN14@MixJewel

; 150  : 	{
; 151  : 		MsgOutput(iIndex, lMsg.Get(3354));

  0005e	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00068	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

; 152  : 		GCAnsJewelMix(iIndex, 4);	//-> 4: Serial

  00074	6a 04		 push	 4
  00076	57		 push	 edi
  00077	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 153  : 		LogAddTD("[ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00081	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  00085	51		 push	 ecx
  00086	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00096	83 c4 1c	 add	 esp, 28			; 0000001cH
  00099	5e		 pop	 esi

; 154  : 		// ----
; 155  : 		return false;

  0009a	33 c0		 xor	 eax, eax
  0009c	5f		 pop	 edi

; 269  : }

  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
$LN14@MixJewel:

; 156  : 	}
; 157  : 	// ----
; 158  : 	if( gObj[iIndex].ChaosLock )

  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a6	53		 push	 ebx
  000a7	8d 8c 06 88 0e
	00 00		 lea	 ecx, DWORD PTR [esi+eax+3720]
  000ae	33 db		 xor	 ebx, ebx
  000b0	39 19		 cmp	 DWORD PTR [ecx], ebx
  000b2	74 28		 je	 SHORT $LN13@MixJewel

; 159  : 	{
; 160  : 		LogAddTD("[JewelMix] [%s][%s] Chaos Mix is already working", gObj[iIndex].AccountID, gObj[iIndex].Name);

  000b4	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000b8	51		 push	 ecx
  000b9	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  000bd	52		 push	 edx
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 161  : 		GCAnsJewelMix(iIndex, 0);	//-> 0: ChaosState

  000c9	53		 push	 ebx
  000ca	57		 push	 edi
  000cb	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  000d0	83 c4 14	 add	 esp, 20			; 00000014H
  000d3	5b		 pop	 ebx
  000d4	5e		 pop	 esi

; 215  : 		// ----
; 216  : 		return false;

  000d5	33 c0		 xor	 eax, eax
  000d7	5f		 pop	 edi

; 269  : }

  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
$LN13@MixJewel:

; 162  : 		// ----
; 163  : 		return false;
; 164  : 	}
; 165  : 	// ----
; 166  : 	gObj[iIndex].ChaosLock = true;

  000dc	c7 01 01 00 00
	00		 mov	 DWORD PTR [ecx], 1

; 167  : 	// ----
; 168  : 	if( !CHECK_LIMIT(iJewelType, 10) )

  000e2	8b 4d 0c	 mov	 ecx, DWORD PTR _iJewelType$[ebp]
  000e5	3b cb		 cmp	 ecx, ebx
  000e7	7c 0c		 jl	 SHORT $LN27@MixJewel
  000e9	33 c0		 xor	 eax, eax
  000eb	83 f9 09	 cmp	 ecx, 9
  000ee	0f 9e c0	 setle	 al
  000f1	3b c3		 cmp	 eax, ebx
  000f3	75 3b		 jne	 SHORT $LN12@MixJewel
$LN27@MixJewel:

; 169  : 	{
; 170  : 		LogAddTD("[JewelMix] [%s][%s] Mix iJewelType is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);

  000f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000fa	51		 push	 ecx
  000fb	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000ff	51		 push	 ecx
  00100	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  00104	52		 push	 edx
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 171  : 		gObj[iIndex].ChaosLock = false;

  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 172  : 		GCAnsJewelMix(iIndex, 2);	//-> 2: JewelType

  00115	6a 02		 push	 2
  00117	57		 push	 edi
  00118	89 9c 06 88 0e
	00 00		 mov	 DWORD PTR [esi+eax+3720], ebx
  0011f	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00124	83 c4 18	 add	 esp, 24			; 00000018H
  00127	5b		 pop	 ebx
  00128	5e		 pop	 esi

; 215  : 		// ----
; 216  : 		return false;

  00129	33 c0		 xor	 eax, eax
  0012b	5f		 pop	 edi

; 269  : }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c3		 ret	 0
$LN12@MixJewel:

; 173  : 		// ----
; 174  : 		return false;
; 175  : 	}
; 176  : 	// ----
; 177  : 	if( !CHECK_LIMIT(iMixType, 3) )

  00130	8b 45 10	 mov	 eax, DWORD PTR _iMixType$[ebp]
  00133	3b c3		 cmp	 eax, ebx
  00135	7c 0c		 jl	 SHORT $LN28@MixJewel
  00137	33 d2		 xor	 edx, edx
  00139	83 f8 02	 cmp	 eax, 2
  0013c	0f 9e c2	 setle	 dl
  0013f	3b d3		 cmp	 edx, ebx
  00141	75 3d		 jne	 SHORT $LN11@MixJewel
$LN28@MixJewel:

; 178  : 	{
; 179  : 		LogAddTD("[JewelMix] [%s][%s] iMixType is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iMixType);

  00143	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00149	50		 push	 eax
  0014a	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  0014e	52		 push	 edx
  0014f	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  00153	50		 push	 eax
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 180  : 		gObj[iIndex].ChaosLock = false;

  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 181  : 		GCAnsJewelMix(iIndex, 3);	//-> 3: MixType

  00165	6a 03		 push	 3
  00167	57		 push	 edi
  00168	89 9c 0e 88 0e
	00 00		 mov	 DWORD PTR [esi+ecx+3720], ebx
  0016f	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00174	83 c4 18	 add	 esp, 24			; 00000018H
  00177	5b		 pop	 ebx
  00178	5e		 pop	 esi

; 215  : 		// ----
; 216  : 		return false;

  00179	33 c0		 xor	 eax, eax
  0017b	5f		 pop	 edi

; 269  : }

  0017c	8b e5		 mov	 esp, ebp
  0017e	5d		 pop	 ebp
  0017f	c3		 ret	 0
$LN11@MixJewel:

; 182  : 		// ----
; 183  : 		return false;
; 184  : 	}
; 185  : 	// ----
; 186  : 	int iItemType		= g_JewelMixInfo[iJewelType][iMixType].m_iSourceType;

  00180	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00183	03 c1		 add	 eax, ecx
  00185	c1 e0 04	 shl	 eax, 4

; 187  : 	int iJewelCount		= g_JewelMixInfo[iJewelType][iMixType].m_iJewelCount;

  00188	8b 98 00 00 00
	00		 mov	 ebx, DWORD PTR _g_JewelMixInfo[eax]
  0018e	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR _g_JewelMixInfo[eax+8]

; 188  : 	int iMixMoney		= g_JewelMixInfo[iJewelType][iMixType].m_iMixMoney;

  00194	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+4]

; 189  : 	int iChangeType		= g_JewelMixInfo[iJewelType][iMixType].m_iChangeType;

  0019a	8b 80 0c 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax+12]
  001a0	89 4d ec	 mov	 DWORD PTR _iItemType$[ebp], ecx
  001a3	89 5d f4	 mov	 DWORD PTR _iJewelCount$[ebp], ebx
  001a6	89 55 f0	 mov	 DWORD PTR _iMixMoney$[ebp], edx
  001a9	89 45 e4	 mov	 DWORD PTR _iChangeType$[ebp], eax

; 190  : 	// ----
; 191  : 	if( iJewelCount < 1 )

  001ac	83 fb 01	 cmp	 ebx, 1
  001af	7d 25		 jge	 SHORT $LN10@MixJewel

; 192  : 	{
; 193  : 		gObj[iIndex].ChaosLock = false;

  001b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 194  : 		GCAnsJewelMix(iIndex, 0);	//-> 0: ChaosState

  001b7	6a 00		 push	 0
  001b9	57		 push	 edi
  001ba	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  001c5	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  001ca	83 c4 08	 add	 esp, 8
  001cd	5b		 pop	 ebx
  001ce	5e		 pop	 esi

; 215  : 		// ----
; 216  : 		return false;

  001cf	33 c0		 xor	 eax, eax
  001d1	5f		 pop	 edi

; 269  : }

  001d2	8b e5		 mov	 esp, ebp
  001d4	5d		 pop	 ebp
  001d5	c3		 ret	 0
$LN10@MixJewel:

; 195  : 		// ----
; 196  : 		return false;
; 197  : 	}
; 198  : 	// ----
; 199  : 	int iUserJewelCount = gObjGetItemCountInIventory(iIndex, iItemType);

  001d6	51		 push	 ecx
  001d7	57		 push	 edi
  001d8	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory

; 200  : 	// ----
; 201  : 	if( iJewelCount > iUserJewelCount )
; 202  : 	{
; 203  : 		LogAddTD("[JewelMix] [%s][%s] lack of jewel to mix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iUserJewelCount, iJewelCount);

  001dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001e3	83 c4 08	 add	 esp, 8
  001e6	3b d8		 cmp	 ebx, eax
  001e8	7e 3c		 jle	 SHORT $LN9@MixJewel
  001ea	53		 push	 ebx
  001eb	50		 push	 eax
  001ec	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  001f0	52		 push	 edx
  001f1	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  001f5	50		 push	 eax
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  001fb	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 204  : 		gObj[iIndex].ChaosLock = false;

  00201	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 205  : 		GCAnsJewelMix(iIndex, 4);	//-> 4: Serial

  00207	6a 04		 push	 4

; 214  : 		GCAnsJewelMix(iIndex, 5);	//-> 5: Money

  00209	57		 push	 edi
  0020a	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  00215	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0021a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0021d	5b		 pop	 ebx
  0021e	5e		 pop	 esi

; 215  : 		// ----
; 216  : 		return false;

  0021f	33 c0		 xor	 eax, eax
  00221	5f		 pop	 edi

; 269  : }

  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c3		 ret	 0
$LN9@MixJewel:

; 206  : 		// ----
; 207  : 		return false;
; 208  : 	}
; 209  : 	// ----
; 210  : 	if( iMixMoney > gObj[iIndex].Money )

  00226	8b 84 0e f0 00
	00 00		 mov	 eax, DWORD PTR [esi+ecx+240]
  0022d	8b 55 f0	 mov	 edx, DWORD PTR _iMixMoney$[ebp]
  00230	3b d0		 cmp	 edx, eax
  00232	7e 3c		 jle	 SHORT $LN8@MixJewel

; 211  : 	{
; 212  : 		LogAddTD("[JewelMix] [%s][%s] lack of money to mix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].Money, iMixMoney);

  00234	52		 push	 edx
  00235	50		 push	 eax
  00236	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  0023a	52		 push	 edx
  0023b	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  0023f	50		 push	 eax
  00240	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  00245	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 213  : 		gObj[iIndex].ChaosLock = false;

  0024b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 214  : 		GCAnsJewelMix(iIndex, 5);	//-> 5: Money

  00251	6a 05		 push	 5
  00253	57		 push	 edi
  00254	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  0025f	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00264	83 c4 1c	 add	 esp, 28			; 0000001cH
  00267	5b		 pop	 ebx
  00268	5e		 pop	 esi

; 215  : 		// ----
; 216  : 		return false;

  00269	33 c0		 xor	 eax, eax
  0026b	5f		 pop	 edi

; 269  : }

  0026c	8b e5		 mov	 esp, ebp
  0026e	5d		 pop	 ebp
  0026f	c3		 ret	 0
$LN8@MixJewel:

; 217  : 	}
; 218  : 	// ----
; 219  : 	int iDelJewelCount	= 0;

  00270	33 c0		 xor	 eax, eax
  00272	89 45 f8	 mov	 DWORD PTR _iDelJewelCount$[ebp], eax

; 220  : 	int bItemDelOK		= false;	//-> Fucking BOOL, need use bool for BYTE returns ><

  00275	89 45 e8	 mov	 DWORD PTR _bItemDelOK$[ebp], eax

; 221  : 	// ----
; 222  : 	for( int x = INVETORY_WEAR_SIZE; x < MAIN_INVENTORY_SIZE; x++ ) //-> Changed 76 to 204 from 6.2

  00278	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _x$210138[ebp], 12 ; 0000000cH
  0027f	bb f0 09 00 00	 mov	 ebx, 2544		; 000009f0H
  00284	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL7@MixJewel:

; 223  : 	{
; 224  : 		if( gObj[iIndex].pInventory[x].IsItem() )

  00290	8b 8c 0e 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+ecx+3620]
  00297	03 cb		 add	 ecx, ebx
  00299	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0029e	85 c0		 test	 eax, eax
  002a0	74 70		 je	 SHORT $LN30@MixJewel

; 225  : 		{
; 226  : 			if ( gObj[iIndex].pInventory[x].m_Type == iItemType )	//-> Fix, my fucking error)

  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002a8	8b 94 0e 24 0e
	00 00		 mov	 edx, DWORD PTR [esi+ecx+3620]
  002af	0f bf 44 1a 06	 movsx	 eax, WORD PTR [edx+ebx+6]
  002b4	3b 45 ec	 cmp	 eax, DWORD PTR _iItemType$[ebp]
  002b7	75 5f		 jne	 SHORT $LN6@MixJewel

; 227  : 			{
; 228  : 				LogAddTD("[JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Serial:%u", 
; 229  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].pInventory[x].m_Type, 
; 230  : 					gObj[iIndex].pInventory[x].m_Level, gObj[iIndex].pInventory[x].m_Number);

  002b9	8b c2		 mov	 eax, edx
  002bb	8b 14 18	 mov	 edx, DWORD PTR [eax+ebx]
  002be	52		 push	 edx
  002bf	0f bf 54 18 08	 movsx	 edx, WORD PTR [eax+ebx+8]
  002c4	0f bf 44 18 06	 movsx	 eax, WORD PTR [eax+ebx+6]
  002c9	52		 push	 edx
  002ca	50		 push	 eax
  002cb	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  002cf	52		 push	 edx
  002d0	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  002d4	50		 push	 eax
  002d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
  002da	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 231  : 				// ----
; 232  : 				gObjInventoryItemSet(iIndex, x, -1);

  002e0	8b 4d fc	 mov	 ecx, DWORD PTR _x$210138[ebp]
  002e3	68 ff 00 00 00	 push	 255			; 000000ffH
  002e8	51		 push	 ecx
  002e9	57		 push	 edi
  002ea	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 233  : 				gObj[iIndex].pInventory[x].Clear();

  002ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002f5	8b 8c 16 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+edx+3620]
  002fc	83 c4 24	 add	 esp, 36			; 00000024H
  002ff	03 cb		 add	 ecx, ebx
  00301	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear

; 234  : 				// ----
; 235  : 				iDelJewelCount++;

  00306	8b 45 f8	 mov	 eax, DWORD PTR _iDelJewelCount$[ebp]
  00309	40		 inc	 eax
  0030a	89 45 f8	 mov	 DWORD PTR _iDelJewelCount$[ebp], eax

; 236  : 				// ----
; 237  : 				if( iJewelCount <= iDelJewelCount )

  0030d	39 45 f4	 cmp	 DWORD PTR _iJewelCount$[ebp], eax
  00310	7e 20		 jle	 SHORT $LN25@MixJewel
$LN30@MixJewel:
  00312	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN6@MixJewel:

; 221  : 	// ----
; 222  : 	for( int x = INVETORY_WEAR_SIZE; x < MAIN_INVENTORY_SIZE; x++ ) //-> Changed 76 to 204 from 6.2

  00318	ff 45 fc	 inc	 DWORD PTR _x$210138[ebp]
  0031b	81 c3 d4 00 00
	00		 add	 ebx, 212		; 000000d4H
  00321	81 fb f0 a8 00
	00		 cmp	 ebx, 43248		; 0000a8f0H
  00327	0f 8c 63 ff ff
	ff		 jl	 $LL7@MixJewel

; 236  : 				// ----
; 237  : 				if( iJewelCount <= iDelJewelCount )

  0032d	8b 5d e8	 mov	 ebx, DWORD PTR _bItemDelOK$[ebp]
  00330	eb 05		 jmp	 SHORT $LN5@MixJewel
$LN25@MixJewel:

; 238  : 				{
; 239  : 					bItemDelOK = true;

  00332	bb 01 00 00 00	 mov	 ebx, 1
$LN5@MixJewel:

; 240  : 					break;
; 241  : 				}
; 242  : 			}
; 243  : 		}
; 244  : 	}
; 245  : 	// ----
; 246  : 	GCItemListSend(iIndex);

  00337	57		 push	 edi
  00338	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend

; 247  : 	// ----
; 248  : #ifdef PERIOD
; 249  : 	g_PeriodItemZt.OnRequestPeriodItemList(&gObj[iIndex]); //-> New

  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00342	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00345	83 c4 04	 add	 esp, 4
  00348	51		 push	 ecx
  00349	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PeriodItemZt@@3VCPeriodItemZt@@A ; g_PeriodItemZt
  0034e	e8 00 00 00 00	 call	 ?OnRequestPeriodItemList@CPeriodItemZt@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemZt::OnRequestPeriodItemList

; 250  : #endif
; 251  : 	// ----
; 252  : 	if( !bItemDelOK )
; 253  : 	{
; 254  : 		LogAddTD("[JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iDelJewelCount, iJewelCount);

  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00358	85 db		 test	 ebx, ebx
  0035a	75 3d		 jne	 SHORT $LN1@MixJewel
  0035c	8b 55 f4	 mov	 edx, DWORD PTR _iJewelCount$[ebp]
  0035f	8b 4d f8	 mov	 ecx, DWORD PTR _iDelJewelCount$[ebp]
  00362	52		 push	 edx
  00363	51		 push	 ecx
  00364	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  00368	52		 push	 edx
  00369	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  0036d	50		 push	 eax
  0036e	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  00373	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 255  : 		gObj[iIndex].ChaosLock = false;

  00379	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 256  : 		GCAnsJewelMix(iIndex, 0);	//-> 0: ChaosState

  0037f	53		 push	 ebx
  00380	57		 push	 edi
  00381	89 9c 0e 88 0e
	00 00		 mov	 DWORD PTR [esi+ecx+3720], ebx
  00388	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0038d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00390	5b		 pop	 ebx
  00391	5e		 pop	 esi
  00392	33 c0		 xor	 eax, eax
  00394	5f		 pop	 edi

; 269  : }

  00395	8b e5		 mov	 esp, ebp
  00397	5d		 pop	 ebp
  00398	c3		 ret	 0
$LN1@MixJewel:

; 257  : 		// ----
; 258  : 		return false;
; 259  : 	}
; 260  : 	// ----
; 261  : 	ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X, gObj[iIndex].Y, iChangeType, iMixType, 0, 0, 0, 0, iIndex, 0, 0);

  00399	8b 55 10	 mov	 edx, DWORD PTR _iMixType$[ebp]
  0039c	8b 4d e4	 mov	 ecx, DWORD PTR _iChangeType$[ebp]
  0039f	6a 00		 push	 0
  003a1	6a 00		 push	 0
  003a3	57		 push	 edi
  003a4	6a 00		 push	 0
  003a6	6a 00		 push	 0
  003a8	6a 00		 push	 0
  003aa	6a 00		 push	 0
  003ac	52		 push	 edx
  003ad	0f b6 94 06 46
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+326]
  003b5	0f b6 84 06 44
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+324]
  003bd	51		 push	 ecx
  003be	52		 push	 edx
  003bf	50		 push	 eax
  003c0	68 eb 00 00 00	 push	 235			; 000000ebH
  003c5	57		 push	 edi
  003c6	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

; 262  : 	gObj[iIndex].ChaosLock	= false;

  003cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 263  : 	gObj[iIndex].Money		-= iMixMoney;

  003d1	8b 55 f0	 mov	 edx, DWORD PTR _iMixMoney$[ebp]
  003d4	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  003df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003e4	29 94 06 f0 00
	00 00		 sub	 DWORD PTR [esi+eax+240], edx

; 264  : 	GCMoneySend(iIndex, gObj[iIndex].Money);

  003eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003f0	8b 8c 06 f0 00
	00 00		 mov	 ecx, DWORD PTR [esi+eax+240]
  003f7	51		 push	 ecx
  003f8	57		 push	 edi
  003f9	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 265  : 	GCAnsJewelMix(iIndex, 1);

  003fe	6a 01		 push	 1
  00400	57		 push	 edi
  00401	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 266  : 	LogAddTD("[JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCount:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, iItemType, iJewelCount);

  00406	8b 55 f4	 mov	 edx, DWORD PTR _iJewelCount$[ebp]
  00409	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0040e	8b 4d ec	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  00411	83 c4 44	 add	 esp, 68			; 00000044H
  00414	52		 push	 edx
  00415	51		 push	 ecx
  00416	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  0041a	52		 push	 edx
  0041b	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  0041f	50		 push	 eax
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
  00425	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0042b	83 c4 14	 add	 esp, 20			; 00000014H
  0042e	5b		 pop	 ebx
  0042f	5e		 pop	 esi

; 267  : 	// ----
; 268  : 	return true;

  00430	b8 01 00 00 00	 mov	 eax, 1
  00435	5f		 pop	 edi

; 269  : }

  00436	8b e5		 mov	 esp, ebp
  00438	5d		 pop	 ebp
  00439	c3		 ret	 0
$LN15@MixJewel:

; 142  : 	{
; 143  : 		GCAnsJewelMix(iIndex, 6);	//-> 6: Protect

  0043a	6a 06		 push	 6
  0043c	57		 push	 edi
  0043d	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 144  : 		LogAddTD("[ANTI-HACK][protocol] [Mix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00442	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00447	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  0044b	51		 push	 ecx
  0044c	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  00450	52		 push	 edx
  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@
  00456	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0045c	83 c4 14	 add	 esp, 20			; 00000014H
  0045f	5e		 pop	 esi

; 145  : 		// ----
; 146  : 		return false;

  00460	33 c0		 xor	 eax, eax
  00462	5f		 pop	 edi

; 269  : }

  00463	8b e5		 mov	 esp, ebp
  00465	5d		 pop	 ebp
  00466	c3		 ret	 0
?MixJewel@CJewelMixSystem@@SAHHHH@Z ENDP		; CJewelMixSystem::MixJewel
_TEXT	ENDS
PUBLIC	??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@ ; `string'
PUBLIC	??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ ; `string'
PUBLIC	??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ ; `string'
PUBLIC	??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ ; `string'
PUBLIC	??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ ; `string'
PUBLIC	??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ ; `string'
PUBLIC	??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ ; `string'
PUBLIC	??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ ; `string'
PUBLIC	??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ ; `string'
PUBLIC	??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ ; `string'
PUBLIC	?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z		; CJewelMixSystem::UnMixJewel
EXTRN	?GCInventoryItemDeleteSend@@YAXHEE@Z:PROC	; GCInventoryItemDeleteSend
EXTRN	?gObjInventoryDeleteItem@@YAEHH@Z:PROC		; gObjInventoryDeleteItem
EXTRN	?GCAnsJewelUnMix@@YAXHH@Z:PROC			; GCAnsJewelUnMix
;	COMDAT ??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@
CONST	SEGMENT
??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@ DB '['
	DB	'ANTI-HACK][protocol] [UnMix Jewel] (%s)(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCo'
	DB	'unt:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCou'
	DB	'nt:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
CONST	SEGMENT
??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ DB '['
	DB	'JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, S'
	DB	'erial:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
CONST	SEGMENT
??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ DB '['
	DB	'JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
CONST	SEGMENT
??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ DB '['
	DB	'JewelMix] [%s][%s] iItemType is different from request : %d /'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
CONST	SEGMENT
??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
CONST	SEGMENT
??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ DB '['
	DB	'JewelMix] [%s][%s] iJewelLevel is different from request : %d'
	DB	' / %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
CONST	SEGMENT
??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ DB '['
	DB	'JewelMix] [%s][%s] Item to unmix is not exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
CONST	SEGMENT
??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryPos is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
CONST	SEGMENT
??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ DB '['
	DB	'JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
CONST	SEGMENT
??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z
_TEXT	SEGMENT
_iChangeType$ = -20					; size = 4
_iItemType$ = -16					; size = 4
tv667 = -12						; size = 4
_x$210194 = -12						; size = 4
_iJewelCount$ = -8					; size = 4
_bItemCrtOK$ = -4					; size = 4
_iEmptyCount$ = -4					; size = 4
_iInventoryItemType$ = -4				; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iJewelLevel$ = 16					; size = 4
_iInventoryPos$ = 20					; size = 4
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z PROC		; CJewelMixSystem::UnMixJewel, COMDAT

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi

; 274  : 	if( !gObjIsConnected(iIndex) )

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN24@UnMixJewel
  00017	5f		 pop	 edi

; 438  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN24@UnMixJewel:

; 275  : 	{
; 276  : 		return false;
; 277  : 	}
; 278  : 	// ----
; 279  : 	LPINTERFACE_STATE lpIfState = &gObj[iIndex].m_IfState;

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	56		 push	 esi
  00022	8b f7		 mov	 esi, edi
  00024	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0002a	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]

; 280  : 	// ----
; 281  : 	if( lpIfState->use != 1 || lpIfState->type != 20 )

  0002d	8b 81 1c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3612]
  00033	8b d0		 mov	 edx, eax
  00035	80 e2 03	 and	 dl, 3
  00038	80 fa 01	 cmp	 dl, 1
  0003b	0f 85 fb 04 00
	00		 jne	 $LN22@UnMixJewel
  00041	25 c0 ff 00 00	 and	 eax, 65472		; 0000ffc0H
  00046	3d 00 05 00 00	 cmp	 eax, 1280		; 00000500H
  0004b	0f 85 eb 04 00
	00		 jne	 $LN22@UnMixJewel

; 287  : 	}
; 288  : 	// ----
; 289  : 	if( gObjCheckInventorySerial0Item(&gObj[iIndex]) )

  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00057	83 c4 04	 add	 esp, 4
  0005a	85 c0		 test	 eax, eax
  0005c	74 43		 je	 SHORT $LN21@UnMixJewel

; 290  : 	{
; 291  : 		MsgOutput(iIndex, lMsg.Get(3354));

  0005e	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00068	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

; 292  : 		GCAnsJewelUnMix(iIndex, 0);

  00074	6a 00		 push	 0
  00076	57		 push	 edi
  00077	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix

; 293  : 		LogAddTD("[ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00081	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  00085	51		 push	 ecx
  00086	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00096	83 c4 1c	 add	 esp, 28			; 0000001cH
  00099	5e		 pop	 esi

; 294  : 		// ----
; 295  : 		return false;

  0009a	33 c0		 xor	 eax, eax
  0009c	5f		 pop	 edi

; 438  : }

  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
$LN21@UnMixJewel:

; 296  : 	}
; 297  : 	// ----
; 298  : 	if( gObj[iIndex].ChaosLock )

  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a6	83 bc 06 88 0e
	00 00 00	 cmp	 DWORD PTR [esi+eax+3720], 0
  000ae	8d 8c 06 88 0e
	00 00		 lea	 ecx, DWORD PTR [esi+eax+3720]
  000b5	74 28		 je	 SHORT $LN20@UnMixJewel

; 299  : 	{
; 300  : 		LogAddTD("[JewelMix] [%s][%s] Chaos Mix is already working", gObj[iIndex].AccountID, gObj[iIndex].Name);

  000b7	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000bb	51		 push	 ecx
  000bc	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 301  : 		GCAnsJewelUnMix(iIndex, 0);

  000cc	6a 00		 push	 0
  000ce	57		 push	 edi
  000cf	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  000d4	83 c4 14	 add	 esp, 20			; 00000014H
  000d7	5e		 pop	 esi

; 302  : 		// ----
; 303  : 		return false;

  000d8	33 c0		 xor	 eax, eax
  000da	5f		 pop	 edi

; 438  : }

  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
$LN20@UnMixJewel:

; 304  : 	}
; 305  : 	// ----
; 306  : 	gObj[iIndex].ChaosLock = true;
; 307  : 	// ----
; 308  : 	if( !CHECK_LIMIT(iJewelType, 10) )

  000df	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  000e2	c7 01 01 00 00
	00		 mov	 DWORD PTR [ecx], 1
  000e8	85 c0		 test	 eax, eax
  000ea	78 0c		 js	 SHORT $LN38@UnMixJewel
  000ec	33 c9		 xor	 ecx, ecx
  000ee	83 f8 09	 cmp	 eax, 9
  000f1	0f 9e c1	 setle	 cl
  000f4	85 c9		 test	 ecx, ecx
  000f6	75 40		 jne	 SHORT $LN19@UnMixJewel
$LN38@UnMixJewel:

; 309  : 	{
; 310  : 		LogAddTD("[JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);

  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000fe	50		 push	 eax
  000ff	8d 44 0e 77	 lea	 eax, DWORD PTR [esi+ecx+119]
  00103	50		 push	 eax
  00104	8d 4c 0e 6c	 lea	 ecx, DWORD PTR [esi+ecx+108]
  00108	51		 push	 ecx
  00109	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
  0010e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 311  : 		gObj[iIndex].ChaosLock = false;

  00114	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 312  : 		GCAnsJewelUnMix(iIndex, 2);

  0011a	6a 02		 push	 2
  0011c	57		 push	 edi
  0011d	c7 84 16 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx+3720], 0
  00128	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0012d	83 c4 18	 add	 esp, 24			; 00000018H
  00130	5e		 pop	 esi

; 313  : 		// ----
; 314  : 		return false;

  00131	33 c0		 xor	 eax, eax
  00133	5f		 pop	 edi

; 438  : }

  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
$LN19@UnMixJewel:
  00138	53		 push	 ebx

; 315  : 	}
; 316  : 	// ----
; 317  : 	if( !CHECK_LIMIT(iInventoryPos, MAIN_INVENTORY_SIZE+1) )

  00139	8b 5d 14	 mov	 ebx, DWORD PTR _iInventoryPos$[ebp]
  0013c	85 db		 test	 ebx, ebx
  0013e	78 0f		 js	 SHORT $LN39@UnMixJewel
  00140	33 c0		 xor	 eax, eax
  00142	81 fb cc 00 00
	00		 cmp	 ebx, 204		; 000000ccH
  00148	0f 9e c0	 setle	 al
  0014b	85 c0		 test	 eax, eax
  0014d	75 3f		 jne	 SHORT $LN18@UnMixJewel
$LN39@UnMixJewel:

; 318  : 	{
; 319  : 		LogAddTD("[JewelMix] [%s][%s] iInventoryPos is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryPos);

  0014f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00154	53		 push	 ebx
  00155	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  00159	51		 push	 ecx
  0015a	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  0015e	52		 push	 edx
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
  00164	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 320  : 		gObj[iIndex].ChaosLock = false;

  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 321  : 		GCAnsJewelUnMix(iIndex, 5);

  0016f	6a 05		 push	 5
  00171	57		 push	 edi
  00172	c7 84 06 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+3720], 0
  0017d	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00182	83 c4 18	 add	 esp, 24			; 00000018H
  00185	5b		 pop	 ebx
  00186	5e		 pop	 esi

; 375  : 		// ----
; 376  : 		return false;

  00187	33 c0		 xor	 eax, eax
  00189	5f		 pop	 edi

; 438  : }

  0018a	8b e5		 mov	 esp, ebp
  0018c	5d		 pop	 ebp
  0018d	c3		 ret	 0
$LN18@UnMixJewel:

; 322  : 		// ----
; 323  : 		return false;
; 324  : 	}
; 325  : 	// ----
; 326  : 	if( !gObj[iIndex].pInventory[iInventoryPos].IsItem() )

  0018e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00194	8b 8c 0e 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+ecx+3620]
  0019b	8b c3		 mov	 eax, ebx
  0019d	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  001a3	03 c8		 add	 ecx, eax
  001a5	89 45 f4	 mov	 DWORD PTR tv667[ebp], eax
  001a8	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  001ad	85 c0		 test	 eax, eax

; 327  : 	{
; 328  : 		LogAddTD("[JewelMix] [%s][%s] Item to unmix is not exist", gObj[iIndex].AccountID, gObj[iIndex].Name);

  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001b4	75 3a		 jne	 SHORT $LN17@UnMixJewel
  001b6	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  001ba	52		 push	 edx
  001bb	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  001bf	50		 push	 eax
  001c0	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
  001c5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 329  : 		gObj[iIndex].ChaosLock = false;

  001cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 330  : 		GCAnsJewelUnMix(iIndex, 4);

  001d1	6a 04		 push	 4
  001d3	57		 push	 edi
  001d4	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  001df	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  001e4	83 c4 14	 add	 esp, 20			; 00000014H
  001e7	5b		 pop	 ebx
  001e8	5e		 pop	 esi

; 375  : 		// ----
; 376  : 		return false;

  001e9	33 c0		 xor	 eax, eax
  001eb	5f		 pop	 edi

; 438  : }

  001ec	8b e5		 mov	 esp, ebp
  001ee	5d		 pop	 ebp
  001ef	c3		 ret	 0
$LN17@UnMixJewel:

; 331  : 		// ----
; 332  : 		return false;
; 333  : 	}
; 334  : 	if( gObj[iIndex].pInventory[iInventoryPos].m_Level != iJewelLevel )

  001f0	8b 94 06 24 0e
	00 00		 mov	 edx, DWORD PTR [esi+eax+3620]
  001f7	8b 4d f4	 mov	 ecx, DWORD PTR tv667[ebp]
  001fa	0f bf 4c 11 08	 movsx	 ecx, WORD PTR [ecx+edx+8]
  001ff	8b 55 10	 mov	 edx, DWORD PTR _iJewelLevel$[ebp]
  00202	3b ca		 cmp	 ecx, edx
  00204	74 3c		 je	 SHORT $LN16@UnMixJewel

; 335  : 	{
; 336  : 		LogAddTD("[JewelMix] [%s][%s] iJewelLevel is different from request : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, 
; 337  : 			gObj[iIndex].pInventory[iInventoryPos].m_Level, iJewelLevel);

  00206	52		 push	 edx
  00207	51		 push	 ecx
  00208	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  0020c	52		 push	 edx
  0020d	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  00211	50		 push	 eax
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
  00217	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 338  : 		gObj[iIndex].ChaosLock = false;

  0021d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 339  : 		GCAnsJewelUnMix(iIndex, 3);

  00223	6a 03		 push	 3

; 374  : 		GCAnsJewelUnMix(iIndex, 8);

  00225	57		 push	 edi
  00226	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  00231	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00236	83 c4 1c	 add	 esp, 28			; 0000001cH
  00239	5b		 pop	 ebx
  0023a	5e		 pop	 esi

; 375  : 		// ----
; 376  : 		return false;

  0023b	33 c0		 xor	 eax, eax
  0023d	5f		 pop	 edi

; 438  : }

  0023e	8b e5		 mov	 esp, ebp
  00240	5d		 pop	 ebp
  00241	c3		 ret	 0
$LN16@UnMixJewel:

; 340  : 		// ----
; 341  : 		return false;
; 342  : 	}
; 343  : 	// ----
; 344  : 	int iInventoryItemType	= gObj[iIndex].pInventory[iInventoryPos].m_Type;

  00242	8b 4d f4	 mov	 ecx, DWORD PTR tv667[ebp]
  00245	03 8c 06 24 0e
	00 00		 add	 ecx, DWORD PTR [esi+eax+3620]
  0024c	0f bf 51 06	 movsx	 edx, WORD PTR [ecx+6]

; 345  : 	int iInventoryItemLevel	= gObj[iIndex].pInventory[iInventoryPos].m_Level;

  00250	0f bf 49 08	 movsx	 ecx, WORD PTR [ecx+8]
  00254	89 55 fc	 mov	 DWORD PTR _iInventoryItemType$[ebp], edx

; 346  : 	// ----
; 347  : 	if( !CHECK_LIMIT(iInventoryItemLevel, 4) )

  00257	85 c9		 test	 ecx, ecx
  00259	78 0c		 js	 SHORT $LN40@UnMixJewel
  0025b	33 d2		 xor	 edx, edx
  0025d	83 f9 03	 cmp	 ecx, 3
  00260	0f 9e c2	 setle	 dl
  00263	85 d2		 test	 edx, edx
  00265	75 3a		 jne	 SHORT $LN15@UnMixJewel
$LN40@UnMixJewel:

; 348  : 	{
; 349  : 		LogAddTD("[JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryItemLevel);

  00267	51		 push	 ecx
  00268	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  0026c	51		 push	 ecx
  0026d	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  00271	52		 push	 edx
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
  00277	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 350  : 		gObj[iIndex].ChaosLock = false;

  0027d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 351  : 		GCAnsJewelUnMix(iIndex, 3);

  00282	6a 03		 push	 3
  00284	57		 push	 edi
  00285	c7 84 06 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+3720], 0
  00290	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00295	83 c4 18	 add	 esp, 24			; 00000018H
  00298	5b		 pop	 ebx
  00299	5e		 pop	 esi

; 375  : 		// ----
; 376  : 		return false;

  0029a	33 c0		 xor	 eax, eax
  0029c	5f		 pop	 edi

; 438  : }

  0029d	8b e5		 mov	 esp, ebp
  0029f	5d		 pop	 ebp
  002a0	c3		 ret	 0
$LN15@UnMixJewel:

; 352  : 		// ----
; 353  : 		return false;
; 354  : 	}
; 355  : 	// ----
; 356  : 	int iItemType	= g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iChangeType;

  002a1	8b 55 0c	 mov	 edx, DWORD PTR _iJewelType$[ebp]
  002a4	8d 0c 51	 lea	 ecx, DWORD PTR [ecx+edx*2]
  002a7	03 ca		 add	 ecx, edx
  002a9	c1 e1 04	 shl	 ecx, 4
  002ac	8b 91 0c 00 00
	00		 mov	 edx, DWORD PTR _g_JewelMixInfo[ecx+12]
  002b2	89 55 f0	 mov	 DWORD PTR _iItemType$[ebp], edx

; 357  : 	int iJewelCount = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iJewelCount;

  002b5	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _g_JewelMixInfo[ecx]

; 358  : 	int iChangeType = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iSourceType;

  002bb	8b 89 08 00 00
	00		 mov	 ecx, DWORD PTR _g_JewelMixInfo[ecx+8]
  002c1	89 55 f8	 mov	 DWORD PTR _iJewelCount$[ebp], edx

; 359  : 	int iMixMoney	= 1000000;
; 360  : 	// ----
; 361  : 	if ( iInventoryItemType != iItemType )

  002c4	8b 55 fc	 mov	 edx, DWORD PTR _iInventoryItemType$[ebp]
  002c7	89 4d ec	 mov	 DWORD PTR _iChangeType$[ebp], ecx
  002ca	8b 4d f0	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  002cd	3b d1		 cmp	 edx, ecx
  002cf	74 3c		 je	 SHORT $LN14@UnMixJewel

; 362  : 	{
; 363  : 		LogAddTD("[JewelMix] [%s][%s] iItemType is different from request : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryItemType, iItemType);

  002d1	51		 push	 ecx
  002d2	52		 push	 edx
  002d3	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  002d7	52		 push	 edx
  002d8	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  002dc	50		 push	 eax
  002dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
  002e2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 364  : 		gObj[iIndex].ChaosLock = false;

  002e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 365  : 		GCAnsJewelUnMix(iIndex, 6);

  002ee	6a 06		 push	 6

; 374  : 		GCAnsJewelUnMix(iIndex, 8);

  002f0	57		 push	 edi
  002f1	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  002fc	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00301	83 c4 1c	 add	 esp, 28			; 0000001cH
  00304	5b		 pop	 ebx
  00305	5e		 pop	 esi

; 375  : 		// ----
; 376  : 		return false;

  00306	33 c0		 xor	 eax, eax
  00308	5f		 pop	 edi

; 438  : }

  00309	8b e5		 mov	 esp, ebp
  0030b	5d		 pop	 ebp
  0030c	c3		 ret	 0
$LN14@UnMixJewel:

; 366  : 		// -----
; 367  : 		return false;
; 368  : 	}
; 369  : 	// ----
; 370  : 	if( gObj[iIndex].Money < iMixMoney )

  0030d	8b 8c 06 f0 00
	00 00		 mov	 ecx, DWORD PTR [esi+eax+240]
  00314	81 f9 40 42 0f
	00		 cmp	 ecx, 1000000		; 000f4240H
  0031a	7d 40		 jge	 SHORT $LN13@UnMixJewel

; 371  : 	{
; 372  : 		LogAddTD("[JewelMix] [%s][%s] lack of money to unmix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].Money, iMixMoney);

  0031c	68 40 42 0f 00	 push	 1000000			; 000f4240H
  00321	51		 push	 ecx
  00322	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  00326	52		 push	 edx
  00327	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  0032b	50		 push	 eax
  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  00331	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 373  : 		gObj[iIndex].ChaosLock = false;

  00337	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 374  : 		GCAnsJewelUnMix(iIndex, 8);

  0033d	6a 08		 push	 8
  0033f	57		 push	 edi
  00340	c7 84 0e 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+3720], 0
  0034b	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00350	83 c4 1c	 add	 esp, 28			; 0000001cH
  00353	5b		 pop	 ebx
  00354	5e		 pop	 esi

; 375  : 		// ----
; 376  : 		return false;

  00355	33 c0		 xor	 eax, eax
  00357	5f		 pop	 edi

; 438  : }

  00358	8b e5		 mov	 esp, ebp
  0035a	5d		 pop	 ebp
  0035b	c3		 ret	 0
$LN13@UnMixJewel:

; 377  : 	}
; 378  : 	// ----
; 379  : 	int iEmptyCount = 0;
; 380  : 	// ----
; 381  : 	for( int x = 0; x < 8 * (4 * gObj[iIndex].ExpandedInventory + 8); x++ )	//fixed

  0035c	0f b6 8c 06 24
	26 00 00	 movzx	 ecx, BYTE PTR [esi+eax+9764]
  00364	83 c1 02	 add	 ecx, 2
  00367	33 d2		 xor	 edx, edx
  00369	c1 e1 05	 shl	 ecx, 5
  0036c	89 55 fc	 mov	 DWORD PTR _iEmptyCount$[ebp], edx
  0036f	85 c9		 test	 ecx, ecx
  00371	7e 18		 jle	 SHORT $LN44@UnMixJewel
$LL12@UnMixJewel:

; 382  : 	{
; 383  : 		if( gObj[iIndex].pInventoryMap[x] == 255 )

  00373	8b 9c 06 28 0e
	00 00		 mov	 ebx, DWORD PTR [esi+eax+3624]
  0037a	80 3c 13 ff	 cmp	 BYTE PTR [ebx+edx], 255	; 000000ffH
  0037e	75 03		 jne	 SHORT $LN11@UnMixJewel

; 384  : 		{
; 385  : 			iEmptyCount++;

  00380	ff 45 fc	 inc	 DWORD PTR _iEmptyCount$[ebp]
$LN11@UnMixJewel:

; 377  : 	}
; 378  : 	// ----
; 379  : 	int iEmptyCount = 0;
; 380  : 	// ----
; 381  : 	for( int x = 0; x < 8 * (4 * gObj[iIndex].ExpandedInventory + 8); x++ )	//fixed

  00383	42		 inc	 edx
  00384	3b d1		 cmp	 edx, ecx
  00386	7c eb		 jl	 SHORT $LL12@UnMixJewel
  00388	8b 5d 14	 mov	 ebx, DWORD PTR _iInventoryPos$[ebp]
$LN44@UnMixJewel:

; 386  : 		}
; 387  : 	}
; 388  : 	// ----
; 389  : 	if( iEmptyCount < iJewelCount )

  0038b	8b 4d f8	 mov	 ecx, DWORD PTR _iJewelCount$[ebp]
  0038e	39 4d fc	 cmp	 DWORD PTR _iEmptyCount$[ebp], ecx
  00391	7d 3e		 jge	 SHORT $LN8@UnMixJewel

; 390  : 	{
; 391  : 		LogAddTD("[JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iEmptyCount, iJewelCount);

  00393	8b 55 fc	 mov	 edx, DWORD PTR _iEmptyCount$[ebp]
  00396	51		 push	 ecx
  00397	52		 push	 edx
  00398	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  0039c	51		 push	 ecx
  0039d	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  003a1	52		 push	 edx
  003a2	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
  003a7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 392  : 		gObj[iIndex].ChaosLock = false;

  003ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 393  : 		GCAnsJewelUnMix(iIndex, 7);

  003b2	6a 07		 push	 7
  003b4	57		 push	 edi
  003b5	c7 84 06 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+3720], 0
  003c0	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  003c5	83 c4 1c	 add	 esp, 28			; 0000001cH
  003c8	5b		 pop	 ebx
  003c9	5e		 pop	 esi
  003ca	33 c0		 xor	 eax, eax
  003cc	5f		 pop	 edi

; 438  : }

  003cd	8b e5		 mov	 esp, ebp
  003cf	5d		 pop	 ebp
  003d0	c3		 ret	 0
$LN8@UnMixJewel:

; 394  : 		// ----
; 395  : 		return false;
; 396  : 	}
; 397  : 	// ----
; 398  : 	LogAddTD("[JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, Serial:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].pInventory[iInventoryPos].m_Type,
; 399  : 		gObj[iIndex].pInventory[iInventoryPos].m_Level, gObj[iIndex].pInventory[iInventoryPos].m_Number);

  003d1	8b 8c 06 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+eax+3620]
  003d8	03 4d f4	 add	 ecx, DWORD PTR tv667[ebp]
  003db	8b 11		 mov	 edx, DWORD PTR [ecx]
  003dd	52		 push	 edx
  003de	0f bf 51 08	 movsx	 edx, WORD PTR [ecx+8]
  003e2	0f bf 49 06	 movsx	 ecx, WORD PTR [ecx+6]
  003e6	52		 push	 edx
  003e7	51		 push	 ecx
  003e8	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  003ec	52		 push	 edx
  003ed	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  003f1	50		 push	 eax
  003f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
  003f7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 400  : 	gObjInventoryItemSet(iIndex, iInventoryPos, -1);

  003fd	68 ff 00 00 00	 push	 255			; 000000ffH
  00402	53		 push	 ebx
  00403	57		 push	 edi
  00404	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 401  : 	gObjInventoryDeleteItem(iIndex, iInventoryPos);

  00409	53		 push	 ebx
  0040a	57		 push	 edi
  0040b	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem

; 402  : 	GCInventoryItemDeleteSend(iIndex, iInventoryPos, 1);

  00410	6a 01		 push	 1
  00412	53		 push	 ebx
  00413	57		 push	 edi
  00414	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend

; 403  : 	// ----
; 404  : 	int	iCrtJewelCount	= 0;
; 405  : 	int	bItemCrtOK		= false; //-> BBB (Big Bad Bool) :D
; 406  : 	// ----
; 407  : 	for( int x = 0; x < 8 * (4 * gObj[iIndex].ExpandedInventory + 8); x++ ) //-> From 64 to 192, 6.2

  00419	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0041e	0f b6 94 06 24
	26 00 00	 movzx	 edx, BYTE PTR [esi+eax+9764]
  00426	83 c2 02	 add	 edx, 2
  00429	33 c9		 xor	 ecx, ecx
  0042b	c1 e2 05	 shl	 edx, 5
  0042e	83 c4 38	 add	 esp, 56			; 00000038H
  00431	33 db		 xor	 ebx, ebx
  00433	89 4d fc	 mov	 DWORD PTR _bItemCrtOK$[ebp], ecx
  00436	89 4d f4	 mov	 DWORD PTR _x$210194[ebp], ecx
  00439	85 d2		 test	 edx, edx
  0043b	7e 70		 jle	 SHORT $LN42@UnMixJewel
  0043d	8d 49 00	 npad	 3
$LL7@UnMixJewel:

; 408  : 	{
; 409  : 		if( gObj[iIndex].pInventoryMap[x] == 255 )

  00440	8b 94 06 28 0e
	00 00		 mov	 edx, DWORD PTR [esi+eax+3624]
  00447	80 3c 11 ff	 cmp	 BYTE PTR [ecx+edx], 255	; 000000ffH
  0044b	75 41		 jne	 SHORT $LN6@UnMixJewel

; 410  : 		{
; 411  : 			ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X, gObj[iIndex].Y, iChangeType, 0, 0, 0, 0, 0, iIndex, 0, 0);

  0044d	0f b6 94 06 46
	01 00 00	 movzx	 edx, BYTE PTR [esi+eax+326]
  00455	8b 4d ec	 mov	 ecx, DWORD PTR _iChangeType$[ebp]
  00458	0f b6 84 06 44
	01 00 00	 movzx	 eax, BYTE PTR [esi+eax+324]
  00460	6a 00		 push	 0
  00462	6a 00		 push	 0
  00464	57		 push	 edi
  00465	6a 00		 push	 0
  00467	6a 00		 push	 0
  00469	6a 00		 push	 0
  0046b	6a 00		 push	 0
  0046d	6a 00		 push	 0
  0046f	51		 push	 ecx
  00470	52		 push	 edx
  00471	50		 push	 eax
  00472	68 eb 00 00 00	 push	 235			; 000000ebH
  00477	57		 push	 edi
  00478	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

; 412  : 			iCrtJewelCount++;
; 413  : 			// ----
; 414  : 			if( iJewelCount <= iCrtJewelCount )

  0047d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00482	43		 inc	 ebx
  00483	83 c4 34	 add	 esp, 52			; 00000034H
  00486	39 5d f8	 cmp	 DWORD PTR _iJewelCount$[ebp], ebx
  00489	7e 1b		 jle	 SHORT $LN35@UnMixJewel
  0048b	8b 4d f4	 mov	 ecx, DWORD PTR _x$210194[ebp]
$LN6@UnMixJewel:

; 403  : 	// ----
; 404  : 	int	iCrtJewelCount	= 0;
; 405  : 	int	bItemCrtOK		= false; //-> BBB (Big Bad Bool) :D
; 406  : 	// ----
; 407  : 	for( int x = 0; x < 8 * (4 * gObj[iIndex].ExpandedInventory + 8); x++ ) //-> From 64 to 192, 6.2

  0048e	0f b6 94 06 24
	26 00 00	 movzx	 edx, BYTE PTR [esi+eax+9764]
  00496	83 c2 02	 add	 edx, 2
  00499	41		 inc	 ecx
  0049a	c1 e2 05	 shl	 edx, 5
  0049d	89 4d f4	 mov	 DWORD PTR _x$210194[ebp], ecx
  004a0	3b ca		 cmp	 ecx, edx
  004a2	7c 9c		 jl	 SHORT $LL7@UnMixJewel

; 412  : 			iCrtJewelCount++;
; 413  : 			// ----
; 414  : 			if( iJewelCount <= iCrtJewelCount )

  004a4	eb 07		 jmp	 SHORT $LN42@UnMixJewel
$LN35@UnMixJewel:

; 415  : 			{
; 416  : 				bItemCrtOK = true;

  004a6	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _bItemCrtOK$[ebp], 1
$LN42@UnMixJewel:

; 417  : 				break;
; 418  : 			}
; 419  : 		}
; 420  : 	}
; 421  : 	// ----
; 422  : 	gObj[iIndex].ChaosLock = false;
; 423  : 	// ----
; 424  : 	if( !bItemCrtOK )

  004ad	83 7d fc 00	 cmp	 DWORD PTR _bItemCrtOK$[ebp], 0

; 425  : 	{
; 426  : 		LogAddTD("[JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCount:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, iItemType, iJewelCount);

  004b1	8b 4d f8	 mov	 ecx, DWORD PTR _iJewelCount$[ebp]
  004b4	8b 55 f0	 mov	 edx, DWORD PTR _iItemType$[ebp]
  004b7	51		 push	 ecx
  004b8	c7 84 06 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+3720], 0
  004c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004c8	52		 push	 edx
  004c9	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  004cd	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  004d1	51		 push	 ecx
  004d2	52		 push	 edx
  004d3	75 22		 jne	 SHORT $LN2@UnMixJewel
  004d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  004da	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 427  : 		GCAnsJewelUnMix(iIndex, 0);		

  004e0	6a 00		 push	 0
  004e2	57		 push	 edi
  004e3	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  004e8	83 c4 1c	 add	 esp, 28			; 0000001cH
  004eb	5b		 pop	 ebx
  004ec	5e		 pop	 esi

; 435  : 	}
; 436  : 	// -----
; 437  : 	return true;

  004ed	b8 01 00 00 00	 mov	 eax, 1
  004f2	5f		 pop	 edi

; 438  : }

  004f3	8b e5		 mov	 esp, ebp
  004f5	5d		 pop	 ebp
  004f6	c3		 ret	 0
$LN2@UnMixJewel:

; 428  : 	}
; 429  : 	else
; 430  : 	{
; 431  : 		LogAddTD("[JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCount:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, iItemType, iJewelCount);

  004f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  004fc	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 432  : 		gObj[iIndex].Money -= iMixMoney;

  00502	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00507	81 84 06 f0 00
	00 00 c0 bd f0
	ff		 add	 DWORD PTR [esi+eax+240], -1000000 ; fff0bdc0H

; 433  : 		GCMoneySend(iIndex, gObj[iIndex].Money);

  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00517	8b 8c 06 f0 00
	00 00		 mov	 ecx, DWORD PTR [esi+eax+240]
  0051e	51		 push	 ecx
  0051f	57		 push	 edi
  00520	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 434  : 		GCAnsJewelUnMix(iIndex, 1);

  00525	6a 01		 push	 1
  00527	57		 push	 edi
  00528	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0052d	83 c4 24	 add	 esp, 36			; 00000024H
  00530	5b		 pop	 ebx
  00531	5e		 pop	 esi

; 435  : 	}
; 436  : 	// -----
; 437  : 	return true;

  00532	b8 01 00 00 00	 mov	 eax, 1
  00537	5f		 pop	 edi

; 438  : }

  00538	8b e5		 mov	 esp, ebp
  0053a	5d		 pop	 ebp
  0053b	c3		 ret	 0
$LN22@UnMixJewel:

; 282  : 	{
; 283  : 		GCAnsJewelUnMix(iIndex, 9);

  0053c	6a 09		 push	 9
  0053e	57		 push	 edi
  0053f	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix

; 284  : 		LogAddTD("[ANTI-HACK][protocol] [UnMix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00549	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  0054d	52		 push	 edx
  0054e	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  00552	50		 push	 eax
  00553	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@
  00558	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0055e	83 c4 14	 add	 esp, 20			; 00000014H
  00561	5e		 pop	 esi

; 285  : 		// ----
; 286  : 		return false;

  00562	33 c0		 xor	 eax, eax
  00564	5f		 pop	 edi

; 438  : }

  00565	8b e5		 mov	 esp, ebp
  00567	5d		 pop	 ebp
  00568	c3		 ret	 0
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z ENDP		; CJewelMixSystem::UnMixJewel
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCJewelMixSystem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCJewelMixSystem@@UAEPAXI@Z PROC			; CJewelMixSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CJewelMixSystem@@UAE@XZ ; CJewelMixSystem::~CJewelMixSystem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCJewelMixSystem@@UAEPAXI@Z ENDP			; CJewelMixSystem::`scalar deleting destructor'
_TEXT	ENDS
END
