; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\JewelsBank.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gJewelsBank@@3VJewelsBank@@A			; gJewelsBank
_BSS	SEGMENT
?gJewelsBank@@3VJewelsBank@@A DB 010cH DUP (?)		; gJewelsBank
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_0BC@INMPBPIC@ZtGemStoneHundred?$AA@	; `string'
PUBLIC	??_C@_0BA@FNHLHHGP@ZtGemStoneFifty?$AA@		; `string'
PUBLIC	??_C@_0BA@NEAECAH@ZtGemStoneForty?$AA@		; `string'
PUBLIC	??_C@_0BB@LHFDMABN@ZtGemStoneThirty?$AA@	; `string'
PUBLIC	??_C@_0BB@JKOMHFHF@ZtGemStoneTwenty?$AA@	; `string'
PUBLIC	??_C@_0P@NICIJLLK@ZtGemStoneTeen?$AA@		; `string'
PUBLIC	??_C@_0BD@OAJKOOLD@ZtHighStoneHundred?$AA@	; `string'
PUBLIC	??_C@_0BB@EAPLIELH@ZtHighStoneFifty?$AA@	; `string'
PUBLIC	??_C@_0BB@BAMALBNP@ZtHighStoneForty?$AA@	; `string'
PUBLIC	??_C@_0BC@DPEGBKAI@ZtHighStoneThirty?$AA@	; `string'
PUBLIC	??_C@_0BC@BCPJKPGA@ZtHighStoneTwenty?$AA@	; `string'
PUBLIC	??_C@_0BA@OPMLCHKK@ZtHighStoneTeen?$AA@		; `string'
PUBLIC	??_C@_0BC@EJOKPNO@ZtLowStoneHundred?$AA@	; `string'
PUBLIC	??_C@_0BA@MODDCPDJ@ZtLowStoneFifty?$AA@		; `string'
PUBLIC	??_C@_0BA@JOAIBKFB@ZtLowStoneForty?$AA@		; `string'
PUBLIC	??_C@_0BB@DFMIHMIE@ZtLowStoneThirty?$AA@	; `string'
PUBLIC	??_C@_0BB@BIHHMJOM@ZtLowStoneTwenty?$AA@	; `string'
PUBLIC	??_C@_0P@JJIPFADH@ZtLowStoneTeen?$AA@		; `string'
PUBLIC	??_C@_0BB@PJFENKDP@ZtHarmonyHundred?$AA@	; `string'
PUBLIC	??_C@_0P@CFHHGAJE@ZtHarmonyFifty?$AA@		; `string'
PUBLIC	??_C@_0P@HFEMFFPM@ZtHarmonyForty?$AA@		; `string'
PUBLIC	??_C@_0BA@JNEEOHJO@ZtHarmonyThirty?$AA@		; `string'
PUBLIC	??_C@_0BA@LAPLFCPG@ZtHarmonyTwenty?$AA@		; `string'
PUBLIC	??_C@_0O@NDPGMCPC@ZtHarmonyTeen?$AA@		; `string'
PUBLIC	??_C@_0BC@BKEDGBHP@ZtGuardianHundred?$AA@	; `string'
PUBLIC	??_C@_0BA@CEPHHCBH@ZtGuardianFifty?$AA@		; `string'
PUBLIC	??_C@_0BA@HEMMEHHP@ZtGuardianForty?$AA@		; `string'
PUBLIC	??_C@_0BB@OJPELFBG@ZtGuardianThirty?$AA@	; `string'
PUBLIC	??_C@_0BB@MEELAAHO@ZtGuardianTwenty?$AA@	; `string'
PUBLIC	??_C@_0P@IIJFEHLD@ZtGuardianTeen?$AA@		; `string'
PUBLIC	??_C@_0BC@FNNJCIGF@ZtCreateonHundred?$AA@	; `string'
PUBLIC	??_C@_0BA@KACKACCP@ZtCreateonFifty?$AA@		; `string'
PUBLIC	??_C@_0BA@PABBDHEH@ZtCreateonForty?$AA@		; `string'
PUBLIC	??_C@_0BB@MBHCNAPI@ZtCreateonThirty?$AA@	; `string'
PUBLIC	??_C@_0BB@OMMNGFJA@ZtCreateonTwenty?$AA@	; `string'
PUBLIC	??_C@_0P@OLKEKBKA@ZtCreateonTeen?$AA@		; `string'
PUBLIC	??_C@_0O@OBBHDFDA@ZtLifeHundred?$AA@		; `string'
PUBLIC	??_C@_0M@FJLKOGIC@ZtLifeFifty?$AA@		; `string'
PUBLIC	??_C@_0M@JIBNDOK@ZtLifeForty?$AA@		; `string'
PUBLIC	??_C@_0N@GJOMJPEJ@ZtLifeThirty?$AA@		; `string'
PUBLIC	??_C@_0N@EEFDCKCB@ZtLifeTwenty?$AA@		; `string'
PUBLIC	??_C@_0L@MCJPGDDM@ZtLifeTeen?$AA@		; `string'
PUBLIC	??_C@_0O@BHBEABEO@ZtSoulHundred?$AA@		; `string'
PUBLIC	??_C@_0M@JLKJDGHG@ZtSoulFifty?$AA@		; `string'
PUBLIC	??_C@_0M@MLJCADBO@ZtSoulForty?$AA@		; `string'
PUBLIC	??_C@_0N@NDPOLKJM@ZtSoulThirty?$AA@		; `string'
PUBLIC	??_C@_0N@POEBAPPE@ZtSoulTwenty?$AA@		; `string'
PUBLIC	??_C@_0L@GLADAIA@ZtSoulTeen?$AA@		; `string'
PUBLIC	??_C@_0P@KDPMPBPG@ZtBlessHundred?$AA@		; `string'
PUBLIC	??_C@_0N@LGCNNIPO@ZtBlessFifty?$AA@		; `string'
PUBLIC	??_C@_0N@OGBGONJG@ZtBlessForty?$AA@		; `string'
PUBLIC	??_C@_0O@DALADFGA@ZtBlessThirty?$AA@		; `string'
PUBLIC	??_C@_0O@BNAPIAAI@ZtBlessTwenty?$AA@		; `string'
PUBLIC	??_C@_0M@IALBDFHP@ZtBlessTeen?$AA@		; `string'
PUBLIC	??_C@_0P@PACHABOI@ZtChaosHundred?$AA@		; `string'
PUBLIC	??_C@_0N@ILANCCM@ZtChaosFifty?$AA@		; `string'
PUBLIC	??_C@_0N@FIILOHEE@ZtChaosForty?$AA@		; `string'
PUBLIC	??_C@_0O@FINDBLJC@ZtChaosThirty?$AA@		; `string'
PUBLIC	??_C@_0O@HFGMKOPK@ZtChaosTwenty?$AA@		; `string'
PUBLIC	??_C@_0M@BGKLPHAN@ZtChaosTeen?$AA@		; `string'
PUBLIC	??_C@_06CNKIADGI@ZtTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@ ; `string'
PUBLIC	?Load@JewelsBank@@QAEXXZ			; JewelsBank::Load
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0BC@INMPBPIC@ZtGemStoneHundred?$AA@
; File e:\work\tranet_version\gs\gameserver\jewelsbank.cpp
CONST	SEGMENT
??_C@_0BC@INMPBPIC@ZtGemStoneHundred?$AA@ DB 'ZtGemStoneHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNHLHHGP@ZtGemStoneFifty?$AA@
CONST	SEGMENT
??_C@_0BA@FNHLHHGP@ZtGemStoneFifty?$AA@ DB 'ZtGemStoneFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NEAECAH@ZtGemStoneForty?$AA@
CONST	SEGMENT
??_C@_0BA@NEAECAH@ZtGemStoneForty?$AA@ DB 'ZtGemStoneForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LHFDMABN@ZtGemStoneThirty?$AA@
CONST	SEGMENT
??_C@_0BB@LHFDMABN@ZtGemStoneThirty?$AA@ DB 'ZtGemStoneThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JKOMHFHF@ZtGemStoneTwenty?$AA@
CONST	SEGMENT
??_C@_0BB@JKOMHFHF@ZtGemStoneTwenty?$AA@ DB 'ZtGemStoneTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NICIJLLK@ZtGemStoneTeen?$AA@
CONST	SEGMENT
??_C@_0P@NICIJLLK@ZtGemStoneTeen?$AA@ DB 'ZtGemStoneTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OAJKOOLD@ZtHighStoneHundred?$AA@
CONST	SEGMENT
??_C@_0BD@OAJKOOLD@ZtHighStoneHundred?$AA@ DB 'ZtHighStoneHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EAPLIELH@ZtHighStoneFifty?$AA@
CONST	SEGMENT
??_C@_0BB@EAPLIELH@ZtHighStoneFifty?$AA@ DB 'ZtHighStoneFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BAMALBNP@ZtHighStoneForty?$AA@
CONST	SEGMENT
??_C@_0BB@BAMALBNP@ZtHighStoneForty?$AA@ DB 'ZtHighStoneForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DPEGBKAI@ZtHighStoneThirty?$AA@
CONST	SEGMENT
??_C@_0BC@DPEGBKAI@ZtHighStoneThirty?$AA@ DB 'ZtHighStoneThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCPJKPGA@ZtHighStoneTwenty?$AA@
CONST	SEGMENT
??_C@_0BC@BCPJKPGA@ZtHighStoneTwenty?$AA@ DB 'ZtHighStoneTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OPMLCHKK@ZtHighStoneTeen?$AA@
CONST	SEGMENT
??_C@_0BA@OPMLCHKK@ZtHighStoneTeen?$AA@ DB 'ZtHighStoneTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJOKPNO@ZtLowStoneHundred?$AA@
CONST	SEGMENT
??_C@_0BC@EJOKPNO@ZtLowStoneHundred?$AA@ DB 'ZtLowStoneHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MODDCPDJ@ZtLowStoneFifty?$AA@
CONST	SEGMENT
??_C@_0BA@MODDCPDJ@ZtLowStoneFifty?$AA@ DB 'ZtLowStoneFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JOAIBKFB@ZtLowStoneForty?$AA@
CONST	SEGMENT
??_C@_0BA@JOAIBKFB@ZtLowStoneForty?$AA@ DB 'ZtLowStoneForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DFMIHMIE@ZtLowStoneThirty?$AA@
CONST	SEGMENT
??_C@_0BB@DFMIHMIE@ZtLowStoneThirty?$AA@ DB 'ZtLowStoneThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BIHHMJOM@ZtLowStoneTwenty?$AA@
CONST	SEGMENT
??_C@_0BB@BIHHMJOM@ZtLowStoneTwenty?$AA@ DB 'ZtLowStoneTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JJIPFADH@ZtLowStoneTeen?$AA@
CONST	SEGMENT
??_C@_0P@JJIPFADH@ZtLowStoneTeen?$AA@ DB 'ZtLowStoneTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PJFENKDP@ZtHarmonyHundred?$AA@
CONST	SEGMENT
??_C@_0BB@PJFENKDP@ZtHarmonyHundred?$AA@ DB 'ZtHarmonyHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CFHHGAJE@ZtHarmonyFifty?$AA@
CONST	SEGMENT
??_C@_0P@CFHHGAJE@ZtHarmonyFifty?$AA@ DB 'ZtHarmonyFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HFEMFFPM@ZtHarmonyForty?$AA@
CONST	SEGMENT
??_C@_0P@HFEMFFPM@ZtHarmonyForty?$AA@ DB 'ZtHarmonyForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JNEEOHJO@ZtHarmonyThirty?$AA@
CONST	SEGMENT
??_C@_0BA@JNEEOHJO@ZtHarmonyThirty?$AA@ DB 'ZtHarmonyThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAPLFCPG@ZtHarmonyTwenty?$AA@
CONST	SEGMENT
??_C@_0BA@LAPLFCPG@ZtHarmonyTwenty?$AA@ DB 'ZtHarmonyTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDPGMCPC@ZtHarmonyTeen?$AA@
CONST	SEGMENT
??_C@_0O@NDPGMCPC@ZtHarmonyTeen?$AA@ DB 'ZtHarmonyTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BKEDGBHP@ZtGuardianHundred?$AA@
CONST	SEGMENT
??_C@_0BC@BKEDGBHP@ZtGuardianHundred?$AA@ DB 'ZtGuardianHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CEPHHCBH@ZtGuardianFifty?$AA@
CONST	SEGMENT
??_C@_0BA@CEPHHCBH@ZtGuardianFifty?$AA@ DB 'ZtGuardianFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HEMMEHHP@ZtGuardianForty?$AA@
CONST	SEGMENT
??_C@_0BA@HEMMEHHP@ZtGuardianForty?$AA@ DB 'ZtGuardianForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OJPELFBG@ZtGuardianThirty?$AA@
CONST	SEGMENT
??_C@_0BB@OJPELFBG@ZtGuardianThirty?$AA@ DB 'ZtGuardianThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MEELAAHO@ZtGuardianTwenty?$AA@
CONST	SEGMENT
??_C@_0BB@MEELAAHO@ZtGuardianTwenty?$AA@ DB 'ZtGuardianTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IIJFEHLD@ZtGuardianTeen?$AA@
CONST	SEGMENT
??_C@_0P@IIJFEHLD@ZtGuardianTeen?$AA@ DB 'ZtGuardianTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FNNJCIGF@ZtCreateonHundred?$AA@
CONST	SEGMENT
??_C@_0BC@FNNJCIGF@ZtCreateonHundred?$AA@ DB 'ZtCreateonHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KACKACCP@ZtCreateonFifty?$AA@
CONST	SEGMENT
??_C@_0BA@KACKACCP@ZtCreateonFifty?$AA@ DB 'ZtCreateonFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PABBDHEH@ZtCreateonForty?$AA@
CONST	SEGMENT
??_C@_0BA@PABBDHEH@ZtCreateonForty?$AA@ DB 'ZtCreateonForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MBHCNAPI@ZtCreateonThirty?$AA@
CONST	SEGMENT
??_C@_0BB@MBHCNAPI@ZtCreateonThirty?$AA@ DB 'ZtCreateonThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMMNGFJA@ZtCreateonTwenty?$AA@
CONST	SEGMENT
??_C@_0BB@OMMNGFJA@ZtCreateonTwenty?$AA@ DB 'ZtCreateonTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OLKEKBKA@ZtCreateonTeen?$AA@
CONST	SEGMENT
??_C@_0P@OLKEKBKA@ZtCreateonTeen?$AA@ DB 'ZtCreateonTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OBBHDFDA@ZtLifeHundred?$AA@
CONST	SEGMENT
??_C@_0O@OBBHDFDA@ZtLifeHundred?$AA@ DB 'ZtLifeHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJLKOGIC@ZtLifeFifty?$AA@
CONST	SEGMENT
??_C@_0M@FJLKOGIC@ZtLifeFifty?$AA@ DB 'ZtLifeFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIBNDOK@ZtLifeForty?$AA@
CONST	SEGMENT
??_C@_0M@JIBNDOK@ZtLifeForty?$AA@ DB 'ZtLifeForty', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GJOMJPEJ@ZtLifeThirty?$AA@
CONST	SEGMENT
??_C@_0N@GJOMJPEJ@ZtLifeThirty?$AA@ DB 'ZtLifeThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EEFDCKCB@ZtLifeTwenty?$AA@
CONST	SEGMENT
??_C@_0N@EEFDCKCB@ZtLifeTwenty?$AA@ DB 'ZtLifeTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MCJPGDDM@ZtLifeTeen?$AA@
CONST	SEGMENT
??_C@_0L@MCJPGDDM@ZtLifeTeen?$AA@ DB 'ZtLifeTeen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHBEABEO@ZtSoulHundred?$AA@
CONST	SEGMENT
??_C@_0O@BHBEABEO@ZtSoulHundred?$AA@ DB 'ZtSoulHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLKJDGHG@ZtSoulFifty?$AA@
CONST	SEGMENT
??_C@_0M@JLKJDGHG@ZtSoulFifty?$AA@ DB 'ZtSoulFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLJCADBO@ZtSoulForty?$AA@
CONST	SEGMENT
??_C@_0M@MLJCADBO@ZtSoulForty?$AA@ DB 'ZtSoulForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NDPOLKJM@ZtSoulThirty?$AA@
CONST	SEGMENT
??_C@_0N@NDPOLKJM@ZtSoulThirty?$AA@ DB 'ZtSoulThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@POEBAPPE@ZtSoulTwenty?$AA@
CONST	SEGMENT
??_C@_0N@POEBAPPE@ZtSoulTwenty?$AA@ DB 'ZtSoulTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLADAIA@ZtSoulTeen?$AA@
CONST	SEGMENT
??_C@_0L@GLADAIA@ZtSoulTeen?$AA@ DB 'ZtSoulTeen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KDPMPBPG@ZtBlessHundred?$AA@
CONST	SEGMENT
??_C@_0P@KDPMPBPG@ZtBlessHundred?$AA@ DB 'ZtBlessHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGCNNIPO@ZtBlessFifty?$AA@
CONST	SEGMENT
??_C@_0N@LGCNNIPO@ZtBlessFifty?$AA@ DB 'ZtBlessFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGBGONJG@ZtBlessForty?$AA@
CONST	SEGMENT
??_C@_0N@OGBGONJG@ZtBlessForty?$AA@ DB 'ZtBlessForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DALADFGA@ZtBlessThirty?$AA@
CONST	SEGMENT
??_C@_0O@DALADFGA@ZtBlessThirty?$AA@ DB 'ZtBlessThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNAPIAAI@ZtBlessTwenty?$AA@
CONST	SEGMENT
??_C@_0O@BNAPIAAI@ZtBlessTwenty?$AA@ DB 'ZtBlessTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IALBDFHP@ZtBlessTeen?$AA@
CONST	SEGMENT
??_C@_0M@IALBDFHP@ZtBlessTeen?$AA@ DB 'ZtBlessTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PACHABOI@ZtChaosHundred?$AA@
CONST	SEGMENT
??_C@_0P@PACHABOI@ZtChaosHundred?$AA@ DB 'ZtChaosHundred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ILANCCM@ZtChaosFifty?$AA@
CONST	SEGMENT
??_C@_0N@ILANCCM@ZtChaosFifty?$AA@ DB 'ZtChaosFifty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FIILOHEE@ZtChaosForty?$AA@
CONST	SEGMENT
??_C@_0N@FIILOHEE@ZtChaosForty?$AA@ DB 'ZtChaosForty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FINDBLJC@ZtChaosThirty?$AA@
CONST	SEGMENT
??_C@_0O@FINDBLJC@ZtChaosThirty?$AA@ DB 'ZtChaosThirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HFGMKOPK@ZtChaosTwenty?$AA@
CONST	SEGMENT
??_C@_0O@HFGMKOPK@ZtChaosTwenty?$AA@ DB 'ZtChaosTwenty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BGKLPHAN@ZtChaosTeen?$AA@
CONST	SEGMENT
??_C@_0M@BGKLPHAN@ZtChaosTeen?$AA@ DB 'ZtChaosTeen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CNKIADGI@ZtTeam?$AA@
CONST	SEGMENT
??_C@_06CNKIADGI@ZtTeam?$AA@ DB 'ZtTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
CONST	SEGMENT
??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@ DB '..\Data\Z'
	DB	'tData\JewelsBank.ini', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@JewelsBank@@QAEXXZ
_TEXT	SEGMENT
?Load@JewelsBank@@QAEXXZ PROC				; JewelsBank::Load, COMDAT
; _this$ = ecx

; 15   : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 16   : 	this->Enable = GetPrivateProfileInt("ZtTeam","Enable",0,JEWELSBANK_DIR); 

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0000d	6a 00		 push	 0
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00019	8b f1		 mov	 esi, ecx
  0001b	ff d7		 call	 edi
  0001d	85 c0		 test	 eax, eax
  0001f	0f 95 c0	 setne	 al

; 17   : #ifdef PRIVATE_MODULE
; 18   : #if _CONFLICT_
; 19   : 	if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00022	6a 1c		 push	 28			; 0000001cH
  00024	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00029	88 06		 mov	 BYTE PTR [esi], al
  0002b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00030	84 c0		 test	 al, al
  00032	75 34		 jne	 SHORT $LN1@Load
  00034	6a 07		 push	 7
  00036	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00040	84 c0		 test	 al, al
  00042	75 24		 jne	 SHORT $LN1@Load
  00044	6a 08		 push	 8
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0004b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00050	84 c0		 test	 al, al
  00052	75 14		 jne	 SHORT $LN1@Load
  00054	6a 01		 push	 1
  00056	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0005b	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00060	84 c0		 test	 al, al
  00062	0f 84 7f 05 00
	00		 je	 $LN2@Load
$LN1@Load:

; 20   : 	{
; 21   : 		this->ZtChaosTeen = GetPrivateProfileInt("ZtTeam","ZtChaosTeen",0,JEWELSBANK_DIR);

  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BGKLPHAN@ZtChaosTeen?$AA@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00079	ff d7		 call	 edi

; 22   : 		this->ZtChaosTwenty = GetPrivateProfileInt("ZtTeam","ZtChaosTwenty",0,JEWELSBANK_DIR);

  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00080	6a 00		 push	 0
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HFGMKOPK@ZtChaosTwenty?$AA@
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0008c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0008f	ff d7		 call	 edi

; 23   : 		this->ZtChaosThirty = GetPrivateProfileInt("ZtTeam","ZtChaosThirty",0,JEWELSBANK_DIR);

  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00096	6a 00		 push	 0
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FINDBLJC@ZtChaosThirty?$AA@
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000a2	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a5	ff d7		 call	 edi

; 24   : 		this->ZtChaosForty = GetPrivateProfileInt("ZtTeam","ZtChaosForty",0,JEWELSBANK_DIR);

  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  000ac	6a 00		 push	 0
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FIILOHEE@ZtChaosForty?$AA@
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000b8	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  000bb	ff d7		 call	 edi

; 25   : 		this->ZtChaosFifty = GetPrivateProfileInt("ZtTeam","ZtChaosFifty",0,JEWELSBANK_DIR);

  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  000c2	6a 00		 push	 0
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ILANCCM@ZtChaosFifty?$AA@
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000ce	89 46 10	 mov	 DWORD PTR [esi+16], eax
  000d1	ff d7		 call	 edi

; 26   : 		this->ZtChaosHundred = GetPrivateProfileInt("ZtTeam","ZtChaosHundred",0,JEWELSBANK_DIR);

  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  000d8	6a 00		 push	 0
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PACHABOI@ZtChaosHundred?$AA@
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000e4	89 46 14	 mov	 DWORD PTR [esi+20], eax
  000e7	ff d7		 call	 edi

; 27   : 
; 28   : 		this->ZtBlessTeen = GetPrivateProfileInt("ZtTeam","ZtBlessTeen",0,JEWELSBANK_DIR);

  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  000ee	6a 00		 push	 0
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IALBDFHP@ZtBlessTeen?$AA@
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000fa	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000fd	ff d7		 call	 edi

; 29   : 		this->ZtBlessTwenty = GetPrivateProfileInt("ZtTeam","ZtBlessTwenty",0,JEWELSBANK_DIR);

  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00104	6a 00		 push	 0
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BNAPIAAI@ZtBlessTwenty?$AA@
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00110	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00113	ff d7		 call	 edi

; 30   : 		this->ZtBlessThirty = GetPrivateProfileInt("ZtTeam","ZtBlessThirty",0,JEWELSBANK_DIR);

  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0011a	6a 00		 push	 0
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DALADFGA@ZtBlessThirty?$AA@
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00126	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00129	ff d7		 call	 edi

; 31   : 		this->ZtBlessForty = GetPrivateProfileInt("ZtTeam","ZtBlessForty",0,JEWELSBANK_DIR);

  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00130	6a 00		 push	 0
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OGBGONJG@ZtBlessForty?$AA@
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0013c	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0013f	ff d7		 call	 edi

; 32   : 		this->ZtBlessFifty = GetPrivateProfileInt("ZtTeam","ZtBlessFifty",0,JEWELSBANK_DIR);

  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00146	6a 00		 push	 0
  00148	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LGCNNIPO@ZtBlessFifty?$AA@
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00152	89 46 28	 mov	 DWORD PTR [esi+40], eax
  00155	ff d7		 call	 edi

; 33   : 		this->ZtBlessHundred = GetPrivateProfileInt("ZtTeam","ZtBlessHundred",0,JEWELSBANK_DIR);

  00157	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0015c	6a 00		 push	 0
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KDPMPBPG@ZtBlessHundred?$AA@
  00163	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00168	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  0016b	ff d7		 call	 edi

; 34   : 
; 35   : 		this->ZtSoulTeen = GetPrivateProfileInt("ZtTeam","ZtSoulTeen",0,JEWELSBANK_DIR);

  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00172	6a 00		 push	 0
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GLADAIA@ZtSoulTeen?$AA@
  00179	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0017e	89 46 30	 mov	 DWORD PTR [esi+48], eax
  00181	ff d7		 call	 edi

; 36   : 		this->ZtSoulTwenty = GetPrivateProfileInt("ZtTeam","ZtSoulTwenty",0,JEWELSBANK_DIR);

  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00188	6a 00		 push	 0
  0018a	89 46 34	 mov	 DWORD PTR [esi+52], eax
  0018d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@POEBAPPE@ZtSoulTwenty?$AA@
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00197	ff d7		 call	 edi

; 37   : 		this->ZtSoulThirty = GetPrivateProfileInt("ZtTeam","ZtSoulThirty",0,JEWELSBANK_DIR);

  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0019e	6a 00		 push	 0
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NDPOLKJM@ZtSoulThirty?$AA@
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001aa	89 46 38	 mov	 DWORD PTR [esi+56], eax
  001ad	ff d7		 call	 edi

; 38   : 		this->ZtSoulForty = GetPrivateProfileInt("ZtTeam","ZtSoulForty",0,JEWELSBANK_DIR);

  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  001b4	6a 00		 push	 0
  001b6	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MLJCADBO@ZtSoulForty?$AA@
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001c0	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  001c3	ff d7		 call	 edi

; 39   : 		this->ZtSoulFifty = GetPrivateProfileInt("ZtTeam","ZtSoulFifty",0,JEWELSBANK_DIR);

  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  001ca	6a 00		 push	 0
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JLKJDGHG@ZtSoulFifty?$AA@
  001d1	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001d6	89 46 40	 mov	 DWORD PTR [esi+64], eax
  001d9	ff d7		 call	 edi

; 40   : 		this->ZtSoulHundred = GetPrivateProfileInt("ZtTeam","ZtSoulHundred",0,JEWELSBANK_DIR);

  001db	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  001e0	6a 00		 push	 0
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BHBEABEO@ZtSoulHundred?$AA@
  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001ec	89 46 44	 mov	 DWORD PTR [esi+68], eax
  001ef	ff d7		 call	 edi

; 41   : 
; 42   : 		this->ZtLifeTeen = GetPrivateProfileInt("ZtTeam","ZtLifeTeen",0,JEWELSBANK_DIR);

  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  001f6	6a 00		 push	 0
  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MCJPGDDM@ZtLifeTeen?$AA@
  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00202	89 46 48	 mov	 DWORD PTR [esi+72], eax
  00205	ff d7		 call	 edi

; 43   : 		this->ZtLifeTwenty = GetPrivateProfileInt("ZtTeam","ZtLifeTwenty",0,JEWELSBANK_DIR);

  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0020c	6a 00		 push	 0
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EEFDCKCB@ZtLifeTwenty?$AA@
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00218	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  0021b	ff d7		 call	 edi

; 44   : 		this->ZtLifeThirty = GetPrivateProfileInt("ZtTeam","ZtLifeThirty",0,JEWELSBANK_DIR);

  0021d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00222	6a 00		 push	 0
  00224	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GJOMJPEJ@ZtLifeThirty?$AA@
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0022e	89 46 50	 mov	 DWORD PTR [esi+80], eax
  00231	ff d7		 call	 edi

; 45   : 		this->ZtLifeForty = GetPrivateProfileInt("ZtTeam","ZtLifeForty",0,JEWELSBANK_DIR);

  00233	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00238	6a 00		 push	 0
  0023a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JIBNDOK@ZtLifeForty?$AA@
  0023f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00244	89 46 54	 mov	 DWORD PTR [esi+84], eax
  00247	ff d7		 call	 edi

; 46   : 		this->ZtLifeFifty = GetPrivateProfileInt("ZtTeam","ZtLifeFifty",0,JEWELSBANK_DIR);

  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0024e	6a 00		 push	 0
  00250	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FJLKOGIC@ZtLifeFifty?$AA@
  00255	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0025a	89 46 58	 mov	 DWORD PTR [esi+88], eax
  0025d	ff d7		 call	 edi

; 47   : 		this->ZtLifeHundred = GetPrivateProfileInt("ZtTeam","ZtLifeHundred",0,JEWELSBANK_DIR);

  0025f	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00264	6a 00		 push	 0
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OBBHDFDA@ZtLifeHundred?$AA@
  0026b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00270	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  00273	ff d7		 call	 edi

; 48   : 
; 49   : 		this->ZtCreateonTeen = GetPrivateProfileInt("ZtTeam","ZtCreateonTeen",0,JEWELSBANK_DIR);

  00275	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0027a	6a 00		 push	 0
  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OLKEKBKA@ZtCreateonTeen?$AA@
  00281	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00286	89 46 60	 mov	 DWORD PTR [esi+96], eax
  00289	ff d7		 call	 edi

; 50   : 		this->ZtCreateonTwenty = GetPrivateProfileInt("ZtTeam","ZtCreateonTwenty",0,JEWELSBANK_DIR);

  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00290	6a 00		 push	 0
  00292	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OMMNGFJA@ZtCreateonTwenty?$AA@
  00297	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0029c	89 46 64	 mov	 DWORD PTR [esi+100], eax
  0029f	ff d7		 call	 edi

; 51   : 		this->ZtCreateonThirty = GetPrivateProfileInt("ZtTeam","ZtCreateonThirty",0,JEWELSBANK_DIR);

  002a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  002a6	6a 00		 push	 0
  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MBHCNAPI@ZtCreateonThirty?$AA@
  002ad	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002b2	89 46 68	 mov	 DWORD PTR [esi+104], eax
  002b5	ff d7		 call	 edi
  002b7	89 46 6c	 mov	 DWORD PTR [esi+108], eax

; 52   : 		this->ZtCreateonForty = GetPrivateProfileInt("ZtTeam","ZtCreateonForty",0,JEWELSBANK_DIR);

  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  002bf	6a 00		 push	 0
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PABBDHEH@ZtCreateonForty?$AA@
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002cb	ff d7		 call	 edi

; 53   : 		this->ZtCreateonFifty = GetPrivateProfileInt("ZtTeam","ZtCreateonFifty",0,JEWELSBANK_DIR);

  002cd	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  002d2	6a 00		 push	 0
  002d4	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KACKACCP@ZtCreateonFifty?$AA@
  002d9	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002de	89 46 70	 mov	 DWORD PTR [esi+112], eax
  002e1	ff d7		 call	 edi

; 54   : 		this->ZtCreateonHundred = GetPrivateProfileInt("ZtTeam","ZtCreateonHundred",0,JEWELSBANK_DIR);

  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  002e8	6a 00		 push	 0
  002ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FNNJCIGF@ZtCreateonHundred?$AA@
  002ef	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002f4	89 46 74	 mov	 DWORD PTR [esi+116], eax
  002f7	ff d7		 call	 edi

; 55   : 
; 56   : 	/**/
; 57   : 		this->ZtGuardianTeen = GetPrivateProfileInt("ZtTeam","ZtGuardianTeen",0,JEWELSBANK_DIR);

  002f9	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  002fe	6a 00		 push	 0
  00300	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IIJFEHLD@ZtGuardianTeen?$AA@
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0030a	89 46 78	 mov	 DWORD PTR [esi+120], eax
  0030d	ff d7		 call	 edi

; 58   : 		this->ZtGuardianTwenty = GetPrivateProfileInt("ZtTeam","ZtGuardianTwenty",0,JEWELSBANK_DIR);

  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00314	6a 00		 push	 0
  00316	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MEELAAHO@ZtGuardianTwenty?$AA@
  0031b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00320	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00323	ff d7		 call	 edi

; 59   : 		this->ZtGuardianThirty = GetPrivateProfileInt("ZtTeam","ZtGuardianThirty",0,JEWELSBANK_DIR);

  00325	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0032a	6a 00		 push	 0
  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OJPELFBG@ZtGuardianThirty?$AA@
  00331	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00336	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  0033c	ff d7		 call	 edi

; 60   : 		this->ZtGuardianForty = GetPrivateProfileInt("ZtTeam","ZtGuardianForty",0,JEWELSBANK_DIR);

  0033e	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00343	6a 00		 push	 0
  00345	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HEMMEHHP@ZtGuardianForty?$AA@
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0034f	89 86 84 00 00
	00		 mov	 DWORD PTR [esi+132], eax
  00355	ff d7		 call	 edi

; 61   : 		this->ZtGuardianFifty = GetPrivateProfileInt("ZtTeam","ZtGuardianFifty",0,JEWELSBANK_DIR);

  00357	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0035c	6a 00		 push	 0
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CEPHHCBH@ZtGuardianFifty?$AA@
  00363	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00368	89 86 88 00 00
	00		 mov	 DWORD PTR [esi+136], eax
  0036e	ff d7		 call	 edi

; 62   : 		this->ZtGuardianHundred = GetPrivateProfileInt("ZtTeam","ZtGuardianHundred",0,JEWELSBANK_DIR);

  00370	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00375	6a 00		 push	 0
  00377	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BKEDGBHP@ZtGuardianHundred?$AA@
  0037c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00381	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
  00387	ff d7		 call	 edi

; 63   : 
; 64   : 		this->ZtHarmonyTeen = GetPrivateProfileInt("ZtTeam","ZtHarmonyTeen",0,JEWELSBANK_DIR);

  00389	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0038e	6a 00		 push	 0
  00390	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NDPGMCPC@ZtHarmonyTeen?$AA@
  00395	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0039a	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
  003a0	ff d7		 call	 edi

; 65   : 		this->ZtHarmonyTwenty = GetPrivateProfileInt("ZtTeam","ZtHarmonyTwenty",0,JEWELSBANK_DIR);

  003a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  003a7	6a 00		 push	 0
  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LAPLFCPG@ZtHarmonyTwenty?$AA@
  003ae	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003b3	89 86 94 00 00
	00		 mov	 DWORD PTR [esi+148], eax
  003b9	ff d7		 call	 edi

; 66   : 		this->ZtHarmonyThirty = GetPrivateProfileInt("ZtTeam","ZtHarmonyThirty",0,JEWELSBANK_DIR);

  003bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  003c0	6a 00		 push	 0
  003c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JNEEOHJO@ZtHarmonyThirty?$AA@
  003c7	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003cc	89 86 98 00 00
	00		 mov	 DWORD PTR [esi+152], eax
  003d2	ff d7		 call	 edi

; 67   : 		this->ZtHarmonyForty = GetPrivateProfileInt("ZtTeam","ZtHarmonyForty",0,JEWELSBANK_DIR);

  003d4	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  003d9	6a 00		 push	 0
  003db	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HFEMFFPM@ZtHarmonyForty?$AA@
  003e0	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003e5	89 86 9c 00 00
	00		 mov	 DWORD PTR [esi+156], eax
  003eb	ff d7		 call	 edi

; 68   : 		this->ZtHarmonyFifty = GetPrivateProfileInt("ZtTeam","ZtHarmonyFifty",0,JEWELSBANK_DIR);

  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  003f2	6a 00		 push	 0
  003f4	89 86 a0 00 00
	00		 mov	 DWORD PTR [esi+160], eax
  003fa	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CFHHGAJE@ZtHarmonyFifty?$AA@
  003ff	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00404	ff d7		 call	 edi

; 69   : 		this->ZtHarmonyHundred = GetPrivateProfileInt("ZtTeam","ZtHarmonyHundred",0,JEWELSBANK_DIR);

  00406	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0040b	6a 00		 push	 0
  0040d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PJFENKDP@ZtHarmonyHundred?$AA@
  00412	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00417	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
  0041d	ff d7		 call	 edi

; 70   : 
; 71   : 		this->ZtLowStoneTeen = GetPrivateProfileInt("ZtTeam","ZtLowStoneTeen",0,JEWELSBANK_DIR);

  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00424	6a 00		 push	 0
  00426	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JJIPFADH@ZtLowStoneTeen?$AA@
  0042b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00430	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  00436	ff d7		 call	 edi

; 72   : 		this->ZtLowStoneTwenty = GetPrivateProfileInt("ZtTeam","ZtLowStoneTwenty",0,JEWELSBANK_DIR);

  00438	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0043d	6a 00		 push	 0
  0043f	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BIHHMJOM@ZtLowStoneTwenty?$AA@
  00444	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00449	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  0044f	ff d7		 call	 edi

; 73   : 		this->ZtLowStoneThirty = GetPrivateProfileInt("ZtTeam","ZtLowStoneThirty",0,JEWELSBANK_DIR);

  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00456	6a 00		 push	 0
  00458	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DFMIHMIE@ZtLowStoneThirty?$AA@
  0045d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00462	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  00468	ff d7		 call	 edi

; 74   : 		this->ZtLowStoneForty = GetPrivateProfileInt("ZtTeam","ZtLowStoneForty",0,JEWELSBANK_DIR);

  0046a	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0046f	6a 00		 push	 0
  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JOAIBKFB@ZtLowStoneForty?$AA@
  00476	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0047b	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00481	ff d7		 call	 edi

; 75   : 		this->ZtLowStoneFifty = GetPrivateProfileInt("ZtTeam","ZtLowStoneFifty",0,JEWELSBANK_DIR);

  00483	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00488	6a 00		 push	 0
  0048a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MODDCPDJ@ZtLowStoneFifty?$AA@
  0048f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00494	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
  0049a	ff d7		 call	 edi

; 76   : 		this->ZtLowStoneHundred = GetPrivateProfileInt("ZtTeam","ZtLowStoneHundred",0,JEWELSBANK_DIR);

  0049c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  004a1	6a 00		 push	 0
  004a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EJOKPNO@ZtLowStoneHundred?$AA@
  004a8	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004ad	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax
  004b3	ff d7		 call	 edi

; 77   : 
; 78   : 		this->ZtHighStoneTeen = GetPrivateProfileInt("ZtTeam","ZtHighStoneTeen",0,JEWELSBANK_DIR);

  004b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  004ba	6a 00		 push	 0
  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OPMLCHKK@ZtHighStoneTeen?$AA@
  004c1	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004c6	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax
  004cc	ff d7		 call	 edi

; 79   : 		this->ZtHighStoneTwenty = GetPrivateProfileInt("ZtTeam","ZtHighStoneTwenty",0,JEWELSBANK_DIR);

  004ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  004d3	6a 00		 push	 0
  004d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BCPJKPGA@ZtHighStoneTwenty?$AA@
  004da	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004df	89 86 c4 00 00
	00		 mov	 DWORD PTR [esi+196], eax
  004e5	ff d7		 call	 edi

; 80   : 		this->ZtHighStoneThirty = GetPrivateProfileInt("ZtTeam","ZtHighStoneThirty",0,JEWELSBANK_DIR);

  004e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  004ec	6a 00		 push	 0
  004ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DPEGBKAI@ZtHighStoneThirty?$AA@
  004f3	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004f8	89 86 c8 00 00
	00		 mov	 DWORD PTR [esi+200], eax
  004fe	ff d7		 call	 edi

; 81   : 		this->ZtHighStoneForty = GetPrivateProfileInt("ZtTeam","ZtHighStoneForty",0,JEWELSBANK_DIR);

  00500	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00505	6a 00		 push	 0
  00507	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BAMALBNP@ZtHighStoneForty?$AA@
  0050c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00511	89 86 cc 00 00
	00		 mov	 DWORD PTR [esi+204], eax
  00517	ff d7		 call	 edi

; 82   : 		this->ZtHighStoneFifty = GetPrivateProfileInt("ZtTeam","ZtHighStoneFifty",0,JEWELSBANK_DIR);

  00519	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0051e	6a 00		 push	 0
  00520	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EAPLIELH@ZtHighStoneFifty?$AA@
  00525	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0052a	89 86 d0 00 00
	00		 mov	 DWORD PTR [esi+208], eax
  00530	ff d7		 call	 edi

; 83   : 		this->ZtHighStoneHundred = GetPrivateProfileInt("ZtTeam","ZtHighStoneHundred",0,JEWELSBANK_DIR);

  00532	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00537	6a 00		 push	 0
  00539	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OAJKOOLD@ZtHighStoneHundred?$AA@
  0053e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00543	89 86 d4 00 00
	00		 mov	 DWORD PTR [esi+212], eax
  00549	ff d7		 call	 edi
  0054b	89 86 d8 00 00
	00		 mov	 DWORD PTR [esi+216], eax

; 84   : 
; 85   : 		this->ZtGemStoneTeen = GetPrivateProfileInt("ZtTeam","ZtGemStoneTeen",0,JEWELSBANK_DIR);

  00551	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00556	6a 00		 push	 0
  00558	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NICIJLLK@ZtGemStoneTeen?$AA@
  0055d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00562	ff d7		 call	 edi

; 86   : 		this->ZtGemStoneTwenty = GetPrivateProfileInt("ZtTeam","ZtGemStoneTwenty",0,JEWELSBANK_DIR);

  00564	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00569	6a 00		 push	 0
  0056b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JKOMHFHF@ZtGemStoneTwenty?$AA@
  00570	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00575	89 86 dc 00 00
	00		 mov	 DWORD PTR [esi+220], eax
  0057b	ff d7		 call	 edi

; 87   : 		this->ZtGemStoneThirty = GetPrivateProfileInt("ZtTeam","ZtGemStoneThirty",0,JEWELSBANK_DIR);

  0057d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  00582	6a 00		 push	 0
  00584	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LHFDMABN@ZtGemStoneThirty?$AA@
  00589	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0058e	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax
  00594	ff d7		 call	 edi

; 88   : 		this->ZtGemStoneForty = GetPrivateProfileInt("ZtTeam","ZtGemStoneForty",0,JEWELSBANK_DIR);

  00596	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  0059b	6a 00		 push	 0
  0059d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NEAECAH@ZtGemStoneForty?$AA@
  005a2	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005a7	89 86 e4 00 00
	00		 mov	 DWORD PTR [esi+228], eax
  005ad	ff d7		 call	 edi

; 89   : 		this->ZtGemStoneFifty = GetPrivateProfileInt("ZtTeam","ZtGemStoneFifty",0,JEWELSBANK_DIR);

  005af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  005b4	6a 00		 push	 0
  005b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FNHLHHGP@ZtGemStoneFifty?$AA@
  005bb	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005c0	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  005c6	ff d7		 call	 edi

; 90   : 		this->ZtGemStoneHundred = GetPrivateProfileInt("ZtTeam","ZtGemStoneHundred",0,JEWELSBANK_DIR);

  005c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PPFOPGBJ@?4?4?2Data?2ZtData?2JewelsBank?4ini?$AA@
  005cd	6a 00		 push	 0
  005cf	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@INMPBPIC@ZtGemStoneHundred?$AA@
  005d4	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005d9	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  005df	ff d7		 call	 edi
  005e1	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
$LN2@Load:

; 91   : 	/**/
; 92   : 	}
; 93   : #endif
; 94   : #endif
; 95   : }

  005e7	5f		 pop	 edi
  005e8	5e		 pop	 esi
  005e9	c3		 ret	 0
?Load@JewelsBank@@QAEXXZ ENDP				; JewelsBank::Load
_TEXT	ENDS
PUBLIC	?sendchaosbank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendchaosbank
EXTRN	?MsgNormal@@YAXHPADZZ:PROC			; MsgNormal
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjDeleteItemsCount@@YAHHFFH@Z:PROC		; gObjDeleteItemsCount
EXTRN	?gObjGetItemCountInInventory@@YAHHHH@Z:PROC	; gObjGetItemCountInInventory
; Function compile flags: /Ogtp
;	COMDAT ?sendchaosbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendchaosbank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendchaosbank, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 99   : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 6a		 je	 SHORT $LN3@sendchaosb

; 100  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(12,15),0) < Count)

  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0000c	57		 push	 edi
  0000d	6a 00		 push	 0
  0000f	68 0f 18 00 00	 push	 6159			; 0000180fH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 101  : 	{
; 102  : 		MsgNormal(aIndex,g_ZtText.GetText(147),Count);

  00020	57		 push	 edi
  00021	3b c7		 cmp	 eax, edi
  00023	7d 07		 jge	 SHORT $LN1@sendchaosb
  00025	68 93 00 00 00	 push	 147			; 00000093H

; 103  : 		return;

  0002a	eb 30		 jmp	 SHORT $LN7@sendchaosb
$LN1@sendchaosb:

; 104  : 	}
; 105  : 	gObjDeleteItemsCount(aIndex,ITEMGET(12,15),0,Count);

  0002c	6a 00		 push	 0
  0002e	68 0f 18 00 00	 push	 6159			; 0000180fH
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 106  : 	LPOBJ lpObj = &gObj[aIndex];

  00039	8b c6		 mov	 eax, esi
  0003b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00041	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 107  : 	lpObj->ChaosBank += Count;
; 108  : 	ZtUserDataSend(aIndex);

  00047	56		 push	 esi
  00048	01 b8 e4 27 00
	00		 add	 DWORD PTR [eax+10212], edi
  0004e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00053	83 c4 14	 add	 esp, 20			; 00000014H

; 109  : 	MsgNormal(aIndex,g_ZtText.GetText(148),Count);

  00056	57		 push	 edi
  00057	68 94 00 00 00	 push	 148			; 00000094H
$LN7@sendchaosb:
  0005c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00061	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
$LN3@sendchaosb:

; 110  : }

  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?sendchaosbank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendchaosbank
_TEXT	ENDS
PUBLIC	?sendblessbank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendblessbank
; Function compile flags: /Ogtp
;	COMDAT ?sendblessbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendblessbank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendblessbank, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 6a		 je	 SHORT $LN3@sendblessb

; 115  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,13),0) < Count)

  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0000c	57		 push	 edi
  0000d	6a 00		 push	 0
  0000f	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 116  : 	{
; 117  : 		MsgNormal(aIndex,g_ZtText.GetText(149),Count);

  00020	57		 push	 edi
  00021	3b c7		 cmp	 eax, edi
  00023	7d 07		 jge	 SHORT $LN1@sendblessb
  00025	68 95 00 00 00	 push	 149			; 00000095H

; 118  : 		return;

  0002a	eb 30		 jmp	 SHORT $LN7@sendblessb
$LN1@sendblessb:

; 119  : 	}
; 120  : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,13),0,Count);

  0002c	6a 00		 push	 0
  0002e	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 121  : 	LPOBJ lpObj = &gObj[aIndex];

  00039	8b c6		 mov	 eax, esi
  0003b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00041	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 122  : 	lpObj->BlessBank += Count;
; 123  : 	ZtUserDataSend(aIndex);

  00047	56		 push	 esi
  00048	01 b8 e8 27 00
	00		 add	 DWORD PTR [eax+10216], edi
  0004e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00053	83 c4 14	 add	 esp, 20			; 00000014H

; 124  : 	MsgNormal(aIndex,g_ZtText.GetText(150),Count);

  00056	57		 push	 edi
  00057	68 96 00 00 00	 push	 150			; 00000096H
$LN7@sendblessb:
  0005c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00061	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
$LN3@sendblessb:

; 125  : }

  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?sendblessbank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendblessbank
_TEXT	ENDS
PUBLIC	?sendsoulbank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendsoulbank
; Function compile flags: /Ogtp
;	COMDAT ?sendsoulbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendsoulbank@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::sendsoulbank, COMDAT
; _this$ = ecx

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 129  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 6a		 je	 SHORT $LN3@sendsoulba

; 130  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,14),0) < Count)

  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0000c	57		 push	 edi
  0000d	6a 00		 push	 0
  0000f	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 131  : 	{
; 132  : 		MsgNormal(aIndex,g_ZtText.GetText(151),Count);

  00020	57		 push	 edi
  00021	3b c7		 cmp	 eax, edi
  00023	7d 07		 jge	 SHORT $LN1@sendsoulba
  00025	68 97 00 00 00	 push	 151			; 00000097H

; 133  : 		return;

  0002a	eb 30		 jmp	 SHORT $LN7@sendsoulba
$LN1@sendsoulba:

; 134  : 	}
; 135  : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,14),0,Count);

  0002c	6a 00		 push	 0
  0002e	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 136  : 	LPOBJ lpObj = &gObj[aIndex];

  00039	8b c6		 mov	 eax, esi
  0003b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00041	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 137  : 	lpObj->SoulBank += Count;
; 138  : 	ZtUserDataSend(aIndex);

  00047	56		 push	 esi
  00048	01 b8 ec 27 00
	00		 add	 DWORD PTR [eax+10220], edi
  0004e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00053	83 c4 14	 add	 esp, 20			; 00000014H

; 139  : 	MsgNormal(aIndex,g_ZtText.GetText(152),Count);

  00056	57		 push	 edi
  00057	68 98 00 00 00	 push	 152			; 00000098H
$LN7@sendsoulba:
  0005c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00061	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
$LN3@sendsoulba:

; 140  : }

  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?sendsoulbank@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::sendsoulbank
_TEXT	ENDS
PUBLIC	??_C@_0BJ@FKPKFIHO@?$FLJewelsBank?$FN?5Send?5?$CFd?5JoR?$AA@ ; `string'
PUBLIC	??_C@_0BJ@DAKNEPJL@?$FLJewelsBank?$FN?5Need?5?$CFd?5JoR?$AA@ ; `string'
PUBLIC	?sendlifebank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendlifebank
;	COMDAT ??_C@_0BJ@FKPKFIHO@?$FLJewelsBank?$FN?5Send?5?$CFd?5JoR?$AA@
CONST	SEGMENT
??_C@_0BJ@FKPKFIHO@?$FLJewelsBank?$FN?5Send?5?$CFd?5JoR?$AA@ DB '[JewelsB'
	DB	'ank] Send %d JoR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DAKNEPJL@?$FLJewelsBank?$FN?5Need?5?$CFd?5JoR?$AA@
CONST	SEGMENT
??_C@_0BJ@DAKNEPJL@?$FLJewelsBank?$FN?5Need?5?$CFd?5JoR?$AA@ DB '[JewelsB'
	DB	'ank] Need %d JoR', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendlifebank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendlifebank@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::sendlifebank, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 144  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 e0 00 00
	00		 je	 $LN2@sendlifeba

; 145  : #ifdef PRIVATE_MODULE
; 146  : 	if(g_ZtLicense.CheckUser(eZtUB::Vadim))

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	6a 09		 push	 9
  00010	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00015	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser

; 147  : 	{
; 148  : 		if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,187),0) < Count)

  0001a	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0001d	6a 00		 push	 0
  0001f	84 c0		 test	 al, al
  00021	74 66		 je	 SHORT $LN4@sendlifeba
  00023	68 bb 1c 00 00	 push	 7355			; 00001cbbH
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  0002e	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 149  : 		{
; 150  : 			MsgNormal(aIndex,"[JewelsBank] Need %d JoR",Count);

  00034	57		 push	 edi
  00035	3b c7		 cmp	 eax, edi
  00037	7d 14		 jge	 SHORT $LN3@sendlifeba
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DAKNEPJL@?$FLJewelsBank?$FN?5Need?5?$CFd?5JoR?$AA@

; 171  : 
; 172  : 		MsgNormal(aIndex,g_ZtText.GetText(154),Count);

  0003e	56		 push	 esi
  0003f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi

; 173  : 	}
; 174  : #else
; 175  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,16),0) < Count)
; 176  : 	{
; 177  : 		MsgNormal(aIndex,"[JewelsBank] Need %d Life",Count);
; 178  : 		return;
; 179  : 	}
; 180  : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,16),0,Count);
; 181  : 	LPOBJ lpObj = &gObj[aIndex];
; 182  : 	lpObj->LifeBank += Count;
; 183  : 	ZtUserDataSend(aIndex);
; 184  : 
; 185  : 	MsgNormal(aIndex,"[JewelsBank] Send %d Life",Count);
; 186  : #endif
; 187  : }

  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
$LN3@sendlifeba:

; 151  : 			return;
; 152  : 		}
; 153  : 		gObjDeleteItemsCount(aIndex,ITEMGET(14,187),0,Count);

  0004d	6a 00		 push	 0
  0004f	68 bb 1c 00 00	 push	 7355			; 00001cbbH
  00054	56		 push	 esi
  00055	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 154  : 		LPOBJ lpObj = &gObj[aIndex];

  0005a	8b c6		 mov	 eax, esi
  0005c	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00062	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 155  : 		lpObj->LifeBank += Count;
; 156  : 		ZtUserDataSend(aIndex);

  00068	56		 push	 esi
  00069	01 b8 f0 27 00
	00		 add	 DWORD PTR [eax+10224], edi
  0006f	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 157  : 
; 158  : 		MsgNormal(aIndex,"[JewelsBank] Send %d JoR",Count);

  00074	57		 push	 edi
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FKPKFIHO@?$FLJewelsBank?$FN?5Send?5?$CFd?5JoR?$AA@
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00080	83 c4 20	 add	 esp, 32			; 00000020H
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi

; 173  : 	}
; 174  : #else
; 175  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,16),0) < Count)
; 176  : 	{
; 177  : 		MsgNormal(aIndex,"[JewelsBank] Need %d Life",Count);
; 178  : 		return;
; 179  : 	}
; 180  : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,16),0,Count);
; 181  : 	LPOBJ lpObj = &gObj[aIndex];
; 182  : 	lpObj->LifeBank += Count;
; 183  : 	ZtUserDataSend(aIndex);
; 184  : 
; 185  : 	MsgNormal(aIndex,"[JewelsBank] Send %d Life",Count);
; 186  : #endif
; 187  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN4@sendlifeba:

; 159  : 	}
; 160  : 	else
; 161  : 	{
; 162  : 		if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,16),0) < Count)

  00089	68 10 1c 00 00	 push	 7184			; 00001c10H
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00094	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH

; 163  : 		{
; 164  : 			MsgNormal(aIndex,g_ZtText.GetText(153),Count);

  0009a	57		 push	 edi
  0009b	3b c7		 cmp	 eax, edi
  0009d	7d 07		 jge	 SHORT $LN1@sendlifeba
  0009f	68 99 00 00 00	 push	 153			; 00000099H

; 165  : 			return;

  000a4	eb 30		 jmp	 SHORT $LN11@sendlifeba
$LN1@sendlifeba:

; 166  : 		}
; 167  : 		gObjDeleteItemsCount(aIndex,ITEMGET(14,16),0,Count);

  000a6	6a 00		 push	 0
  000a8	68 10 1c 00 00	 push	 7184			; 00001c10H
  000ad	56		 push	 esi
  000ae	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 168  : 		LPOBJ lpObj = &gObj[aIndex];

  000b3	8b c6		 mov	 eax, esi
  000b5	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  000bb	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 169  : 		lpObj->LifeBank += Count;
; 170  : 		ZtUserDataSend(aIndex);

  000c1	56		 push	 esi
  000c2	01 b8 f0 27 00
	00		 add	 DWORD PTR [eax+10224], edi
  000c8	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  000cd	83 c4 14	 add	 esp, 20			; 00000014H

; 171  : 
; 172  : 		MsgNormal(aIndex,g_ZtText.GetText(154),Count);

  000d0	57		 push	 edi
  000d1	68 9a 00 00 00	 push	 154			; 0000009aH
$LN11@sendlifeba:
  000d6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000db	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000e0	50		 push	 eax
  000e1	56		 push	 esi
  000e2	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000e7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
$LN2@sendlifeba:

; 173  : 	}
; 174  : #else
; 175  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,16),0) < Count)
; 176  : 	{
; 177  : 		MsgNormal(aIndex,"[JewelsBank] Need %d Life",Count);
; 178  : 		return;
; 179  : 	}
; 180  : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,16),0,Count);
; 181  : 	LPOBJ lpObj = &gObj[aIndex];
; 182  : 	lpObj->LifeBank += Count;
; 183  : 	ZtUserDataSend(aIndex);
; 184  : 
; 185  : 	MsgNormal(aIndex,"[JewelsBank] Send %d Life",Count);
; 186  : #endif
; 187  : }

  000ec	5d		 pop	 ebp
  000ed	c2 08 00	 ret	 8
?sendlifebank@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::sendlifebank
_TEXT	ENDS
PUBLIC	??_C@_0BO@ONHCGELD@?$FLJewelsBank?$FN?5Send?5?$CFd?5Createon?$AA@ ; `string'
PUBLIC	??_C@_0BO@DGGJPICC@?$FLJewelsBank?$FN?5Need?5?$CFd?5Createon?$AA@ ; `string'
PUBLIC	?sendcreateonbank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendcreateonbank
;	COMDAT ??_C@_0BO@ONHCGELD@?$FLJewelsBank?$FN?5Send?5?$CFd?5Createon?$AA@
CONST	SEGMENT
??_C@_0BO@ONHCGELD@?$FLJewelsBank?$FN?5Send?5?$CFd?5Createon?$AA@ DB '[Je'
	DB	'welsBank] Send %d Createon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DGGJPICC@?$FLJewelsBank?$FN?5Need?5?$CFd?5Createon?$AA@
CONST	SEGMENT
??_C@_0BO@DGGJPICC@?$FLJewelsBank?$FN?5Need?5?$CFd?5Createon?$AA@ DB '[Je'
	DB	'welsBank] Need %d Createon', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendcreateonbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendcreateonbank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendcreateonbank, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 191  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 69		 je	 SHORT $LN3@sendcreate

; 192  : 
; 193  : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,22),0) < Count)

  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0000c	57		 push	 edi
  0000d	6a 00		 push	 0
  0000f	68 16 1c 00 00	 push	 7190			; 00001c16H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 194  : 	{
; 195  : 		MsgNormal(aIndex,"[JewelsBank] Need %d Createon",Count);

  00020	57		 push	 edi
  00021	3b c7		 cmp	 eax, edi
  00023	7d 14		 jge	 SHORT $LN1@sendcreate
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DGGJPICC@?$FLJewelsBank?$FN?5Need?5?$CFd?5Createon?$AA@
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi

; 204  : }

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
$LN1@sendcreate:

; 196  : 		return;
; 197  : 	}
; 198  : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,22),0,Count);

  00039	6a 00		 push	 0
  0003b	68 16 1c 00 00	 push	 7190			; 00001c16H
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 199  : 	LPOBJ lpObj = &gObj[aIndex];

  00046	8b c6		 mov	 eax, esi
  00048	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0004e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 200  : 	lpObj->CreateonBank += Count;
; 201  : 	ZtUserDataSend(aIndex);

  00054	56		 push	 esi
  00055	01 b8 f4 27 00
	00		 add	 DWORD PTR [eax+10228], edi
  0005b	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 202  : 
; 203  : 	MsgNormal(aIndex,"[JewelsBank] Send %d Createon",Count);

  00060	57		 push	 edi
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@ONHCGELD@?$FLJewelsBank?$FN?5Send?5?$CFd?5Createon?$AA@
  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0006c	83 c4 20	 add	 esp, 32			; 00000020H
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
$LN3@sendcreate:

; 204  : }

  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
?sendcreateonbank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendcreateonbank
_TEXT	ENDS
PUBLIC	?recvchaosbank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvchaosbank
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?ExCheckInventoryEmptySpace@@YAHH@Z:PROC	; ExCheckInventoryEmptySpace
; Function compile flags: /Ogtp
;	COMDAT ?recvchaosbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvchaosbank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvchaosbank, COMDAT
; _this$ = ecx

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 210  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 b2 00 00
	00		 je	 $LN7@recvchaosb

; 211  : 	LPOBJ lpObj = &gObj[aIndex];
; 212  : 	if(lpObj->ChaosBank < Count)

  0000c	53		 push	 ebx
  0000d	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00015	8b f7		 mov	 esi, edi
  00017	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0001d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00023	39 9e e4 27 00
	00		 cmp	 DWORD PTR [esi+10212], ebx
  00029	7d 08		 jge	 SHORT $LN5@recvchaosb

; 213  : 	{
; 214  : 		MsgNormal(aIndex,g_ZtText.GetText(155),Count);

  0002b	53		 push	 ebx
  0002c	68 9b 00 00 00	 push	 155			; 0000009bH

; 215  : 		return;

  00031	eb 74		 jmp	 SHORT $LN15@recvchaosb
$LN5@recvchaosb:

; 216  : 	}
; 217  : 
; 218  : 	//if(CheckInventoryEmptySpace(lpObj,4,2) == false )
; 219  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00033	57		 push	 edi
  00034	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  00039	83 c4 04	 add	 esp, 4
  0003c	3b c3		 cmp	 eax, ebx
  0003e	7d 08		 jge	 SHORT $LN4@recvchaosb

; 220  : 	{
; 221  : 		MsgNormal(aIndex,g_ZtText.GetText(156),Count);

  00040	53		 push	 ebx
  00041	68 9c 00 00 00	 push	 156			; 0000009cH

; 222  : 		return;

  00046	eb 5f		 jmp	 SHORT $LN15@recvchaosb
$LN4@recvchaosb:

; 223  : 	}
; 224  : 	lpObj->ChaosBank -= Count;

  00048	29 9e e4 27 00
	00		 sub	 DWORD PTR [esi+10212], ebx

; 225  : 	for(int i=0;i<Count;i++)

  0004e	85 db		 test	 ebx, ebx
  00050	7e 46		 jle	 SHORT $LN1@recvchaosb
  00052	eb 0c 8d a4 24
	00 00 00 00 eb
	03 8d 49 00	 npad	 14
$LL11@recvchaosb:

; 226  : 	{
; 227  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(12,15),0,0,0,0,0,aIndex,0,0);

  00060	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00067	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	57		 push	 edi
  00073	6a 00		 push	 0
  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	68 0f 18 00 00	 push	 6159			; 0000180fH
  00082	50		 push	 eax
  00083	51		 push	 ecx
  00084	68 eb 00 00 00	 push	 235			; 000000ebH
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0008f	83 c4 34	 add	 esp, 52			; 00000034H
  00092	4b		 dec	 ebx
  00093	75 cb		 jne	 SHORT $LL11@recvchaosb

; 225  : 	for(int i=0;i<Count;i++)

  00095	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvchaosb:

; 228  : 	}
; 229  : 	ZtUserDataSend(aIndex);

  00098	57		 push	 edi
  00099	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0009e	83 c4 04	 add	 esp, 4

; 230  : 	MsgNormal(aIndex,g_ZtText.GetText(157),Count);

  000a1	53		 push	 ebx
  000a2	68 9d 00 00 00	 push	 157			; 0000009dH
$LN15@recvchaosb:
  000a7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000ac	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000b1	50		 push	 eax
  000b2	57		 push	 edi
  000b3	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
$LN7@recvchaosb:

; 231  : }

  000be	5d		 pop	 ebp
  000bf	c2 08 00	 ret	 8
?recvchaosbank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvchaosbank
_TEXT	ENDS
PUBLIC	?recvblessbank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvblessbank
; Function compile flags: /Ogtp
;	COMDAT ?recvblessbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvblessbank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvblessbank, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 235  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 b2 00 00
	00		 je	 $LN7@recvblessb

; 236  : 	LPOBJ lpObj = &gObj[aIndex];
; 237  : 	if(lpObj->BlessBank < Count)

  0000c	53		 push	 ebx
  0000d	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00015	8b f7		 mov	 esi, edi
  00017	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0001d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00023	39 9e e8 27 00
	00		 cmp	 DWORD PTR [esi+10216], ebx
  00029	7d 08		 jge	 SHORT $LN5@recvblessb

; 238  : 	{
; 239  : 		MsgNormal(aIndex,g_ZtText.GetText(158),Count);

  0002b	53		 push	 ebx
  0002c	68 9e 00 00 00	 push	 158			; 0000009eH

; 240  : 		return;

  00031	eb 74		 jmp	 SHORT $LN15@recvblessb
$LN5@recvblessb:

; 241  : 	}
; 242  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00033	57		 push	 edi
  00034	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  00039	83 c4 04	 add	 esp, 4
  0003c	3b c3		 cmp	 eax, ebx
  0003e	7d 08		 jge	 SHORT $LN4@recvblessb

; 243  : 	{
; 244  : 		MsgNormal(aIndex,g_ZtText.GetText(156),Count);

  00040	53		 push	 ebx
  00041	68 9c 00 00 00	 push	 156			; 0000009cH

; 245  : 		return;

  00046	eb 5f		 jmp	 SHORT $LN15@recvblessb
$LN4@recvblessb:

; 246  : 	}
; 247  : 	lpObj->BlessBank -= Count;

  00048	29 9e e8 27 00
	00		 sub	 DWORD PTR [esi+10216], ebx

; 248  : 	for(int i=0;i<Count;i++)

  0004e	85 db		 test	 ebx, ebx
  00050	7e 46		 jle	 SHORT $LN1@recvblessb
  00052	eb 0c 8d a4 24
	00 00 00 00 eb
	03 8d 49 00	 npad	 14
$LL11@recvblessb:

; 249  : 	{
; 250  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,13),0,0,0,0,0,aIndex,0,0);

  00060	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00067	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	57		 push	 edi
  00073	6a 00		 push	 0
  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  00082	50		 push	 eax
  00083	51		 push	 ecx
  00084	68 eb 00 00 00	 push	 235			; 000000ebH
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0008f	83 c4 34	 add	 esp, 52			; 00000034H
  00092	4b		 dec	 ebx
  00093	75 cb		 jne	 SHORT $LL11@recvblessb

; 248  : 	for(int i=0;i<Count;i++)

  00095	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvblessb:

; 251  : 	}
; 252  : 	ZtUserDataSend(aIndex);

  00098	57		 push	 edi
  00099	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0009e	83 c4 04	 add	 esp, 4

; 253  : 	MsgNormal(aIndex,g_ZtText.GetText(159),Count);

  000a1	53		 push	 ebx
  000a2	68 9f 00 00 00	 push	 159			; 0000009fH
$LN15@recvblessb:
  000a7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000ac	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000b1	50		 push	 eax
  000b2	57		 push	 edi
  000b3	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
$LN7@recvblessb:

; 254  : }

  000be	5d		 pop	 ebp
  000bf	c2 08 00	 ret	 8
?recvblessbank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvblessbank
_TEXT	ENDS
PUBLIC	?recvsoulbank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvsoulbank
; Function compile flags: /Ogtp
;	COMDAT ?recvsoulbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvsoulbank@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::recvsoulbank, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 258  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 b2 00 00
	00		 je	 $LN7@recvsoulba

; 259  : 	LPOBJ lpObj = &gObj[aIndex];
; 260  : 	if(lpObj->SoulBank < Count)

  0000c	53		 push	 ebx
  0000d	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00015	8b f7		 mov	 esi, edi
  00017	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0001d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00023	39 9e ec 27 00
	00		 cmp	 DWORD PTR [esi+10220], ebx
  00029	7d 08		 jge	 SHORT $LN5@recvsoulba

; 261  : 	{
; 262  : 		MsgNormal(aIndex,g_ZtText.GetText(160),Count);

  0002b	53		 push	 ebx
  0002c	68 a0 00 00 00	 push	 160			; 000000a0H

; 263  : 		return;

  00031	eb 74		 jmp	 SHORT $LN15@recvsoulba
$LN5@recvsoulba:

; 264  : 	}
; 265  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00033	57		 push	 edi
  00034	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  00039	83 c4 04	 add	 esp, 4
  0003c	3b c3		 cmp	 eax, ebx
  0003e	7d 08		 jge	 SHORT $LN4@recvsoulba

; 266  : 	{
; 267  : 		MsgNormal(aIndex,g_ZtText.GetText(156),Count);

  00040	53		 push	 ebx
  00041	68 9c 00 00 00	 push	 156			; 0000009cH

; 268  : 		return;

  00046	eb 5f		 jmp	 SHORT $LN15@recvsoulba
$LN4@recvsoulba:

; 269  : 	}
; 270  : 	lpObj->SoulBank -= Count;

  00048	29 9e ec 27 00
	00		 sub	 DWORD PTR [esi+10220], ebx

; 271  : 	for(int i=0;i<Count;i++)

  0004e	85 db		 test	 ebx, ebx
  00050	7e 46		 jle	 SHORT $LN1@recvsoulba
  00052	eb 0c 8d a4 24
	00 00 00 00 eb
	03 8d 49 00	 npad	 14
$LL11@recvsoulba:

; 272  : 	{
; 273  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,14),0,0,0,0,0,aIndex,0,0);

  00060	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00067	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	57		 push	 edi
  00073	6a 00		 push	 0
  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  00082	50		 push	 eax
  00083	51		 push	 ecx
  00084	68 eb 00 00 00	 push	 235			; 000000ebH
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0008f	83 c4 34	 add	 esp, 52			; 00000034H
  00092	4b		 dec	 ebx
  00093	75 cb		 jne	 SHORT $LL11@recvsoulba

; 271  : 	for(int i=0;i<Count;i++)

  00095	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvsoulba:

; 274  : 	}
; 275  : 	ZtUserDataSend(aIndex);

  00098	57		 push	 edi
  00099	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0009e	83 c4 04	 add	 esp, 4

; 276  : 	MsgNormal(aIndex,g_ZtText.GetText(161),Count);

  000a1	53		 push	 ebx
  000a2	68 a1 00 00 00	 push	 161			; 000000a1H
$LN15@recvsoulba:
  000a7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000ac	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000b1	50		 push	 eax
  000b2	57		 push	 edi
  000b3	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
$LN7@recvsoulba:

; 277  : }

  000be	5d		 pop	 ebp
  000bf	c2 08 00	 ret	 8
?recvsoulbank@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::recvsoulbank
_TEXT	ENDS
PUBLIC	??_C@_0BJ@LGJHPFFG@?$FLJewelsBank?$FN?5Recv?5?$CFd?5JoR?$AA@ ; `string'
PUBLIC	??_C@_0BH@CJAOJBDF@?$FLJewelsBank?$FN?5No?5?$CFd?5JoR?$AA@ ; `string'
PUBLIC	?recvlifebank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvlifebank
;	COMDAT ??_C@_0BJ@LGJHPFFG@?$FLJewelsBank?$FN?5Recv?5?$CFd?5JoR?$AA@
CONST	SEGMENT
??_C@_0BJ@LGJHPFFG@?$FLJewelsBank?$FN?5Recv?5?$CFd?5JoR?$AA@ DB '[JewelsB'
	DB	'ank] Recv %d JoR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CJAOJBDF@?$FLJewelsBank?$FN?5No?5?$CFd?5JoR?$AA@
CONST	SEGMENT
??_C@_0BH@CJAOJBDF@?$FLJewelsBank?$FN?5No?5?$CFd?5JoR?$AA@ DB '[JewelsBan'
	DB	'k] No %d JoR', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvlifebank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvlifebank@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::recvlifebank, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 281  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 52 01 00
	00		 je	 $LN6@recvlifeba

; 282  : 
; 283  : #ifdef PRIVATE_MODULE
; 284  : 	if(g_ZtLicense.CheckUser(eZtUB::Vadim))

  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	6a 09		 push	 9
  00011	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00016	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser

; 285  : 	{
; 286  : 		LPOBJ lpObj = &gObj[aIndex];

  0001b	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 287  : 		if(lpObj->LifeBank < Count)

  0001e	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00021	8b f7		 mov	 esi, edi
  00023	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00029	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002f	84 c0		 test	 al, al
  00031	0f 84 9d 00 00
	00		 je	 $LN12@recvlifeba
  00037	39 9e f0 27 00
	00		 cmp	 DWORD PTR [esi+10224], ebx
  0003d	7d 16		 jge	 SHORT $LN11@recvlifeba

; 288  : 		{
; 289  : 			MsgNormal(aIndex,"[JewelsBank] No %d JoR",Count);

  0003f	53		 push	 ebx
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@CJAOJBDF@?$FLJewelsBank?$FN?5No?5?$CFd?5JoR?$AA@

; 325  : 
; 326  : 		MsgNormal(aIndex,g_ZtText.GetText(163),Count);

  00045	57		 push	 edi
  00046	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx

; 327  : 	}
; 328  : #else
; 329  : 	LPOBJ lpObj = &gObj[aIndex];
; 330  : 	if(lpObj->LifeBank < Count)
; 331  : 	{
; 332  : 		MsgNormal(aIndex,"[JewelsBank] No %d Life",Count);
; 333  : 		return;
; 334  : 	}
; 335  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)
; 336  : 	{
; 337  : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);
; 338  : 		return;
; 339  : 	}
; 340  : 	lpObj->LifeBank -= Count;
; 341  : 	for(int i=0;i<Count;i++)
; 342  : 	{
; 343  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,16),0,0,0,0,0,aIndex,0,0);
; 344  : 	}
; 345  : 	ZtUserDataSend(aIndex);
; 346  : 
; 347  : 	MsgNormal(aIndex,"[JewelsBank] Recv %d Life",Count);
; 348  : #endif
; 349  : }

  00051	5d		 pop	 ebp
  00052	c2 08 00	 ret	 8
$LN11@recvlifeba:

; 290  : 			return;
; 291  : 		}
; 292  : 		if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00055	57		 push	 edi
  00056	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b c3		 cmp	 eax, ebx
  00060	7d 0b		 jge	 SHORT $LN10@recvlifeba
$LN27@recvlifeba:

; 293  : 		{
; 294  : 			MsgNormal(aIndex,g_ZtText.GetText(156),Count);

  00062	53		 push	 ebx
  00063	68 9c 00 00 00	 push	 156			; 0000009cH

; 295  : 			return;

  00068	e9 da 00 00 00	 jmp	 $LN26@recvlifeba
$LN10@recvlifeba:

; 296  : 		}
; 297  : 		lpObj->LifeBank -= Count;

  0006d	29 9e f0 27 00
	00		 sub	 DWORD PTR [esi+10224], ebx

; 298  : 		for(int i=0;i<Count;i++)

  00073	85 db		 test	 ebx, ebx
  00075	7e 41		 jle	 SHORT $LN7@recvlifeba
  00077	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL21@recvlifeba:

; 299  : 		{
; 300  : 			ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,187),0,0,0,0,0,aIndex,0,0);

  00080	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00087	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0008e	6a 00		 push	 0
  00090	6a 00		 push	 0
  00092	57		 push	 edi
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 00		 push	 0
  00099	6a 00		 push	 0
  0009b	6a 00		 push	 0
  0009d	68 bb 1c 00 00	 push	 7355			; 00001cbbH
  000a2	50		 push	 eax
  000a3	51		 push	 ecx
  000a4	68 eb 00 00 00	 push	 235			; 000000ebH
  000a9	57		 push	 edi
  000aa	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  000af	83 c4 34	 add	 esp, 52			; 00000034H
  000b2	4b		 dec	 ebx
  000b3	75 cb		 jne	 SHORT $LL21@recvlifeba

; 298  : 		for(int i=0;i<Count;i++)

  000b5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN7@recvlifeba:

; 301  : 		}
; 302  : 		ZtUserDataSend(aIndex);

  000b8	57		 push	 edi
  000b9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 303  : 
; 304  : 		MsgNormal(aIndex,"[JewelsBank] Recv %d JoR",Count);

  000be	53		 push	 ebx
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LGJHPFFG@?$FLJewelsBank?$FN?5Recv?5?$CFd?5JoR?$AA@
  000c4	57		 push	 edi
  000c5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ca	83 c4 10	 add	 esp, 16			; 00000010H
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 327  : 	}
; 328  : #else
; 329  : 	LPOBJ lpObj = &gObj[aIndex];
; 330  : 	if(lpObj->LifeBank < Count)
; 331  : 	{
; 332  : 		MsgNormal(aIndex,"[JewelsBank] No %d Life",Count);
; 333  : 		return;
; 334  : 	}
; 335  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)
; 336  : 	{
; 337  : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);
; 338  : 		return;
; 339  : 	}
; 340  : 	lpObj->LifeBank -= Count;
; 341  : 	for(int i=0;i<Count;i++)
; 342  : 	{
; 343  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,16),0,0,0,0,0,aIndex,0,0);
; 344  : 	}
; 345  : 	ZtUserDataSend(aIndex);
; 346  : 
; 347  : 	MsgNormal(aIndex,"[JewelsBank] Recv %d Life",Count);
; 348  : #endif
; 349  : }

  000d0	5d		 pop	 ebp
  000d1	c2 08 00	 ret	 8
$LN12@recvlifeba:

; 305  : 	}
; 306  : 	else
; 307  : 	{
; 308  : 		LPOBJ lpObj = &gObj[aIndex];
; 309  : 		if(lpObj->LifeBank < Count)

  000d4	39 9e f0 27 00
	00		 cmp	 DWORD PTR [esi+10224], ebx
  000da	7d 08		 jge	 SHORT $LN5@recvlifeba

; 310  : 		{
; 311  : 			MsgNormal(aIndex,g_ZtText.GetText(162),Count);

  000dc	53		 push	 ebx
  000dd	68 a2 00 00 00	 push	 162			; 000000a2H

; 312  : 			return;

  000e2	eb 63		 jmp	 SHORT $LN26@recvlifeba
$LN5@recvlifeba:

; 313  : 		}
; 314  : 		if(ExCheckInventoryEmptySpace(aIndex) < Count)

  000e4	57		 push	 edi
  000e5	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  000ea	83 c4 04	 add	 esp, 4
  000ed	3b c3		 cmp	 eax, ebx

; 315  : 		{
; 316  : 			MsgNormal(aIndex,g_ZtText.GetText(156),Count);
; 317  : 			return;

  000ef	0f 8c 6d ff ff
	ff		 jl	 $LN27@recvlifeba

; 318  : 		}
; 319  : 		lpObj->LifeBank -= Count;

  000f5	29 9e f0 27 00
	00		 sub	 DWORD PTR [esi+10224], ebx

; 320  : 		for(int i=0;i<Count;i++)

  000fb	85 db		 test	 ebx, ebx
  000fd	7e 39		 jle	 SHORT $LN1@recvlifeba
  000ff	90		 npad	 1
$LL20@recvlifeba:

; 321  : 		{
; 322  : 			ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,16),0,0,0,0,0,aIndex,0,0);

  00100	0f b6 96 46 01
	00 00		 movzx	 edx, BYTE PTR [esi+326]
  00107	0f b6 86 44 01
	00 00		 movzx	 eax, BYTE PTR [esi+324]
  0010e	6a 00		 push	 0
  00110	6a 00		 push	 0
  00112	57		 push	 edi
  00113	6a 00		 push	 0
  00115	6a 00		 push	 0
  00117	6a 00		 push	 0
  00119	6a 00		 push	 0
  0011b	6a 00		 push	 0
  0011d	68 10 1c 00 00	 push	 7184			; 00001c10H
  00122	52		 push	 edx
  00123	50		 push	 eax
  00124	68 eb 00 00 00	 push	 235			; 000000ebH
  00129	57		 push	 edi
  0012a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0012f	83 c4 34	 add	 esp, 52			; 00000034H
  00132	4b		 dec	 ebx
  00133	75 cb		 jne	 SHORT $LL20@recvlifeba

; 320  : 		for(int i=0;i<Count;i++)

  00135	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvlifeba:

; 323  : 		}
; 324  : 		ZtUserDataSend(aIndex);

  00138	57		 push	 edi
  00139	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0013e	83 c4 04	 add	 esp, 4

; 325  : 
; 326  : 		MsgNormal(aIndex,g_ZtText.GetText(163),Count);

  00141	53		 push	 ebx
  00142	68 a3 00 00 00	 push	 163			; 000000a3H
$LN26@recvlifeba:
  00147	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0014c	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00151	50		 push	 eax
  00152	57		 push	 edi
  00153	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00158	83 c4 0c	 add	 esp, 12			; 0000000cH
  0015b	5f		 pop	 edi
  0015c	5e		 pop	 esi
  0015d	5b		 pop	 ebx
$LN6@recvlifeba:

; 327  : 	}
; 328  : #else
; 329  : 	LPOBJ lpObj = &gObj[aIndex];
; 330  : 	if(lpObj->LifeBank < Count)
; 331  : 	{
; 332  : 		MsgNormal(aIndex,"[JewelsBank] No %d Life",Count);
; 333  : 		return;
; 334  : 	}
; 335  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)
; 336  : 	{
; 337  : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);
; 338  : 		return;
; 339  : 	}
; 340  : 	lpObj->LifeBank -= Count;
; 341  : 	for(int i=0;i<Count;i++)
; 342  : 	{
; 343  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,16),0,0,0,0,0,aIndex,0,0);
; 344  : 	}
; 345  : 	ZtUserDataSend(aIndex);
; 346  : 
; 347  : 	MsgNormal(aIndex,"[JewelsBank] Recv %d Life",Count);
; 348  : #endif
; 349  : }

  0015e	5d		 pop	 ebp
  0015f	c2 08 00	 ret	 8
?recvlifebank@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::recvlifebank
_TEXT	ENDS
PUBLIC	??_C@_0BO@BBAGCFDN@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Createon?$AA@ ; `string'
PUBLIC	??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BM@HPMLFNFO@?$FLJewelsBank?$FN?5No?5?$CFd?5Createon?$AA@ ; `string'
PUBLIC	?recvcreateonbank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvcreateonbank
;	COMDAT ??_C@_0BO@BBAGCFDN@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Createon?$AA@
CONST	SEGMENT
??_C@_0BO@BBAGCFDN@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Createon?$AA@ DB '[Je'
	DB	'welsBank] Recv %d Createon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@ DB '[JewelsBa'
	DB	'nk] Inventory %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HPMLFNFO@?$FLJewelsBank?$FN?5No?5?$CFd?5Createon?$AA@
CONST	SEGMENT
??_C@_0BM@HPMLFNFO@?$FLJewelsBank?$FN?5No?5?$CFd?5Createon?$AA@ DB '[Jewe'
	DB	'lsBank] No %d Createon', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvcreateonbank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvcreateonbank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvcreateonbank, COMDAT
; _this$ = ecx

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 353  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 b4 00 00
	00		 je	 $LN7@recvcreate

; 354  : 
; 355  : 	LPOBJ lpObj = &gObj[aIndex];
; 356  : 	if(lpObj->CreateonBank < Count)

  0000c	53		 push	 ebx
  0000d	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00015	8b f7		 mov	 esi, edi
  00017	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0001d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00023	39 9e f4 27 00
	00		 cmp	 DWORD PTR [esi+10228], ebx
  00029	7d 16		 jge	 SHORT $LN5@recvcreate

; 357  : 	{
; 358  : 		MsgNormal(aIndex,"[JewelsBank] No %d Createon",Count);

  0002b	53		 push	 ebx
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HPMLFNFO@?$FLJewelsBank?$FN?5No?5?$CFd?5Createon?$AA@
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx

; 374  : 
; 375  : }

  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
$LN5@recvcreate:

; 359  : 		return;
; 360  : 	}
; 361  : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00041	57		 push	 edi
  00042	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  00047	83 c4 04	 add	 esp, 4
  0004a	3b c3		 cmp	 eax, ebx
  0004c	7d 16		 jge	 SHORT $LN4@recvcreate

; 362  : 	{
; 363  : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);

  0004e	53		 push	 ebx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx

; 374  : 
; 375  : }

  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN4@recvcreate:

; 364  : 		return;
; 365  : 	}
; 366  : 	lpObj->CreateonBank -= Count;

  00064	29 9e f4 27 00
	00		 sub	 DWORD PTR [esi+10228], ebx

; 367  : 	for(int i=0;i<Count;i++)

  0006a	85 db		 test	 ebx, ebx
  0006c	7e 3a		 jle	 SHORT $LN1@recvcreate
  0006e	8b ff		 npad	 2
$LL11@recvcreate:

; 368  : 	{
; 369  : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,22),0,0,0,0,0,aIndex,0,0);

  00070	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00077	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	57		 push	 edi
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 16 1c 00 00	 push	 7190			; 00001c16H
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 eb 00 00 00	 push	 235			; 000000ebH
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0009f	83 c4 34	 add	 esp, 52			; 00000034H
  000a2	4b		 dec	 ebx
  000a3	75 cb		 jne	 SHORT $LL11@recvcreate

; 367  : 	for(int i=0;i<Count;i++)

  000a5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvcreate:

; 370  : 	}
; 371  : 	ZtUserDataSend(aIndex);

  000a8	57		 push	 edi
  000a9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 372  : 
; 373  : 	MsgNormal(aIndex,"[JewelsBank] Recv %d Createon",Count);

  000ae	53		 push	 ebx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BBAGCFDN@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Createon?$AA@
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
$LN7@recvcreate:

; 374  : 
; 375  : }

  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?recvcreateonbank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvcreateonbank
_TEXT	ENDS
PUBLIC	??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@ ; `string'
PUBLIC	??_C@_0DJ@EBIONFKC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BJ@BFBBDENF@?$FLJewelsBank?$FN?5No?5?$CFd?5Chaos?$AA@ ; `string'
PUBLIC	?exchaos@JewelsBank@@QAEXHH@Z			; JewelsBank::exchaos
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
CONST	SEGMENT
??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@ DB '[Jewel'
	DB	'sBank] Exchange Only 10 20 30 40 50 100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@EBIONFKC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DJ@EBIONFKC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of Chaos Added %d Credits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BFBBDENF@?$FLJewelsBank?$FN?5No?5?$CFd?5Chaos?$AA@
CONST	SEGMENT
??_C@_0BJ@BFBBDENF@?$FLJewelsBank?$FN?5No?5?$CFd?5Chaos?$AA@ DB '[JewelsB'
	DB	'ank] No %d Chaos', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exchaos@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exchaos@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exchaos, COMDAT
; _this$ = ecx

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 381  : 	if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exchaos
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exchaos
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exchaos
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exchaos
$LN15@exchaos:

; 382  : 	{
; 383  : 		if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exchaos

; 384  : 		LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 385  : 		if(lpObj->ChaosBank < Count)

  00066	8b 88 e4 27 00
	00		 mov	 ecx, DWORD PTR [eax+10212]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exchaos

; 386  : 		{
; 387  : 			MsgNormal(aIndex,"[JewelsBank] No %d Chaos",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BFBBDENF@?$FLJewelsBank?$FN?5No?5?$CFd?5Chaos?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 439  : 	}
; 440  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exchaos:

; 388  : 			return;
; 389  : 		}
; 390  : 
; 391  : 		if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exchaos

; 392  : 		{
; 393  : 			lpObj->ChaosBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 e4 27 00
	00		 mov	 DWORD PTR [eax+10212], ecx

; 394  : 			lpObj->ZtCred += ZtChaosTeen;

  00097	db 46 04	 fild	 DWORD PTR [esi+4]
  0009a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a0	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 395  : 			CountExChaos = ZtChaosTeen;

  000a6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a9	89 86 f8 00 00
	00		 mov	 DWORD PTR [esi+248], eax
  000af	e9 c3 00 00 00	 jmp	 $LN1@exchaos
$LN12@exchaos:

; 396  : 		}
; 397  : 		else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exchaos

; 398  : 		{
; 399  : 			lpObj->ChaosBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 e4 27 00
	00		 mov	 DWORD PTR [eax+10212], ecx

; 400  : 			lpObj->ZtCred += ZtChaosTwenty;

  000c2	db 46 08	 fild	 DWORD PTR [esi+8]
  000c5	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000cb	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 401  : 			CountExChaos = ZtChaosTwenty;

  000d1	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000d4	89 8e f8 00 00
	00		 mov	 DWORD PTR [esi+248], ecx
  000da	e9 98 00 00 00	 jmp	 $LN1@exchaos
$LN10@exchaos:

; 402  : 		}
; 403  : 		else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 1d		 jne	 SHORT $LN8@exchaos

; 404  : 		{
; 405  : 			lpObj->ChaosBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 e4 27 00
	00		 mov	 DWORD PTR [eax+10212], ecx

; 406  : 			lpObj->ZtCred += ZtChaosThirty;

  000ed	db 46 0c	 fild	 DWORD PTR [esi+12]
  000f0	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f6	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 407  : 			CountExChaos = ZtChaosThirty;

  000fc	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  000ff	eb 70		 jmp	 SHORT $LN21@exchaos
$LN8@exchaos:

; 408  : 		}
; 409  : 		else if (Count == 40)

  00101	83 ff 28	 cmp	 edi, 40			; 00000028H
  00104	75 23		 jne	 SHORT $LN6@exchaos

; 410  : 		{
; 411  : 			lpObj->ChaosBank -= Count;

  00106	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  00109	89 88 e4 27 00
	00		 mov	 DWORD PTR [eax+10212], ecx

; 412  : 			lpObj->ZtCred += ZtChaosForty;

  0010f	db 46 10	 fild	 DWORD PTR [esi+16]
  00112	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00118	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 413  : 			CountExChaos = ZtChaosForty;

  0011e	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00121	89 86 f8 00 00
	00		 mov	 DWORD PTR [esi+248], eax
  00127	eb 4e		 jmp	 SHORT $LN1@exchaos
$LN6@exchaos:

; 414  : 		}
; 415  : 		else if (Count == 50)

  00129	83 ff 32	 cmp	 edi, 50			; 00000032H
  0012c	75 23		 jne	 SHORT $LN4@exchaos

; 416  : 		{
; 417  : 			lpObj->ChaosBank -= Count;

  0012e	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00131	89 88 e4 27 00
	00		 mov	 DWORD PTR [eax+10212], ecx

; 418  : 			lpObj->ZtCred += ZtChaosFifty;

  00137	db 46 14	 fild	 DWORD PTR [esi+20]
  0013a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00140	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 419  : 			CountExChaos = ZtChaosFifty;

  00146	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00149	89 8e f8 00 00
	00		 mov	 DWORD PTR [esi+248], ecx
  0014f	eb 26		 jmp	 SHORT $LN1@exchaos
$LN4@exchaos:

; 420  : 		}
; 421  : 		else if (Count == 100)

  00151	83 ff 64	 cmp	 edi, 100		; 00000064H
  00154	75 44		 jne	 SHORT $LN2@exchaos

; 422  : 		{
; 423  : 			lpObj->ChaosBank -= Count;

  00156	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  00159	89 88 e4 27 00
	00		 mov	 DWORD PTR [eax+10212], ecx

; 424  : 			lpObj->ZtCred += ZtChaosHundred;

  0015f	db 46 18	 fild	 DWORD PTR [esi+24]
  00162	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00168	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 425  : 			CountExChaos = ZtChaosHundred;

  0016e	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
$LN21@exchaos:
  00171	89 96 f8 00 00
	00		 mov	 DWORD PTR [esi+248], edx
$LN1@exchaos:

; 430  : 			return;
; 431  : 		}
; 432  : 		
; 433  : 		/*int ZtChaosForty;
; 434  : 	int ZtChaosFifty;
; 435  : 	int ZtChaosHundred;*/
; 436  : 
; 437  : 		ZtUserDataSend(aIndex);

  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 438  : 		MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Chaos Added %d Credits" ,Count, CountExChaos);

  0017d	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  00183	50		 push	 eax
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@EBIONFKC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 439  : 	}
; 440  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exchaos:

; 426  : 		}
; 427  : 		else
; 428  : 		{
; 429  : 			MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exchaos:
  001aa	5e		 pop	 esi

; 439  : 	}
; 440  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exchaos@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exchaos
_TEXT	ENDS
PUBLIC	??_C@_0DJ@KHFFDOAD@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BJ@LBJDIMPD@?$FLJewelsBank?$FN?5No?5?$CFd?5Bless?$AA@ ; `string'
PUBLIC	?exbless@JewelsBank@@QAEXHH@Z			; JewelsBank::exbless
;	COMDAT ??_C@_0DJ@KHFFDOAD@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DJ@KHFFDOAD@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of Bless Added %d Credits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LBJDIMPD@?$FLJewelsBank?$FN?5No?5?$CFd?5Bless?$AA@
CONST	SEGMENT
??_C@_0BJ@LBJDIMPD@?$FLJewelsBank?$FN?5No?5?$CFd?5Bless?$AA@ DB '[JewelsB'
	DB	'ank] No %d Bless', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exbless@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exbless@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exbless, COMDAT
; _this$ = ecx

; 443  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 444  : 	if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exbless
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exbless
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exbless
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exbless
$LN15@exbless:

; 445  : 	{
; 446  : 		if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exbless

; 447  : 		LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 448  : 		if(lpObj->BlessBank < Count)

  00066	8b 88 e8 27 00
	00		 mov	 ecx, DWORD PTR [eax+10216]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exbless

; 449  : 		{
; 450  : 			MsgNormal(aIndex,"[JewelsBank] No %d Bless",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LBJDIMPD@?$FLJewelsBank?$FN?5No?5?$CFd?5Bless?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 496  : 	}
; 497  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exbless:

; 451  : 			return;
; 452  : 		}
; 453  : 		if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exbless

; 454  : 		{
; 455  : 			lpObj->BlessBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 e8 27 00
	00		 mov	 DWORD PTR [eax+10216], ecx

; 456  : 			lpObj->ZtCred += ZtBlessTeen;

  00097	db 46 1c	 fild	 DWORD PTR [esi+28]
  0009a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a0	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 457  : 			CountExBless = ZtBlessTeen;

  000a6	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000a9	89 86 fc 00 00
	00		 mov	 DWORD PTR [esi+252], eax
  000af	e9 c3 00 00 00	 jmp	 $LN1@exbless
$LN12@exbless:

; 458  : 		}
; 459  : 		else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exbless

; 460  : 		{
; 461  : 			lpObj->BlessBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 e8 27 00
	00		 mov	 DWORD PTR [eax+10216], ecx

; 462  : 			lpObj->ZtCred += ZtBlessTwenty;

  000c2	db 46 20	 fild	 DWORD PTR [esi+32]
  000c5	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000cb	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 463  : 			CountExBless = ZtBlessTwenty;

  000d1	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000d4	89 8e fc 00 00
	00		 mov	 DWORD PTR [esi+252], ecx
  000da	e9 98 00 00 00	 jmp	 $LN1@exbless
$LN10@exbless:

; 464  : 		}
; 465  : 		else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 1d		 jne	 SHORT $LN8@exbless

; 466  : 		{
; 467  : 			lpObj->BlessBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 e8 27 00
	00		 mov	 DWORD PTR [eax+10216], ecx

; 468  : 			lpObj->ZtCred += ZtBlessThirty;

  000ed	db 46 24	 fild	 DWORD PTR [esi+36]
  000f0	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f6	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 469  : 			CountExBless = ZtBlessThirty;

  000fc	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  000ff	eb 70		 jmp	 SHORT $LN21@exbless
$LN8@exbless:

; 470  : 		}		
; 471  : 		else if (Count == 40)

  00101	83 ff 28	 cmp	 edi, 40			; 00000028H
  00104	75 23		 jne	 SHORT $LN6@exbless

; 472  : 		{
; 473  : 			lpObj->BlessBank -= Count;

  00106	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  00109	89 88 e8 27 00
	00		 mov	 DWORD PTR [eax+10216], ecx

; 474  : 			lpObj->ZtCred += ZtBlessForty;

  0010f	db 46 28	 fild	 DWORD PTR [esi+40]
  00112	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00118	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 475  : 			CountExBless = ZtBlessForty;

  0011e	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00121	89 86 fc 00 00
	00		 mov	 DWORD PTR [esi+252], eax
  00127	eb 4e		 jmp	 SHORT $LN1@exbless
$LN6@exbless:

; 476  : 		}
; 477  : 		else if (Count == 50)

  00129	83 ff 32	 cmp	 edi, 50			; 00000032H
  0012c	75 23		 jne	 SHORT $LN4@exbless

; 478  : 		{
; 479  : 			lpObj->BlessBank -= Count;

  0012e	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00131	89 88 e8 27 00
	00		 mov	 DWORD PTR [eax+10216], ecx

; 480  : 			lpObj->ZtCred += ZtBlessFifty;

  00137	db 46 2c	 fild	 DWORD PTR [esi+44]
  0013a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00140	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 481  : 			CountExBless = ZtBlessFifty;

  00146	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00149	89 8e fc 00 00
	00		 mov	 DWORD PTR [esi+252], ecx
  0014f	eb 26		 jmp	 SHORT $LN1@exbless
$LN4@exbless:

; 482  : 		}
; 483  : 		else if (Count == 100)

  00151	83 ff 64	 cmp	 edi, 100		; 00000064H
  00154	75 44		 jne	 SHORT $LN2@exbless

; 484  : 		{
; 485  : 			lpObj->BlessBank -= Count;

  00156	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  00159	89 88 e8 27 00
	00		 mov	 DWORD PTR [eax+10216], ecx

; 486  : 			lpObj->ZtCred += ZtBlessHundred;

  0015f	db 46 30	 fild	 DWORD PTR [esi+48]
  00162	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00168	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 487  : 			CountExBless = ZtBlessHundred;

  0016e	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
$LN21@exbless:
  00171	89 96 fc 00 00
	00		 mov	 DWORD PTR [esi+252], edx
$LN1@exbless:

; 491  : 			return;
; 492  : 		}
; 493  : 
; 494  : 		ZtUserDataSend(aIndex);

  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 495  : 		MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Bless Added %d Credits" ,Count, CountExBless);

  0017d	8b 86 fc 00 00
	00		 mov	 eax, DWORD PTR [esi+252]
  00183	50		 push	 eax
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@KHFFDOAD@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 496  : 	}
; 497  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exbless:

; 488  : 		}
; 489  : 		else{
; 490  : 			MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exbless:
  001aa	5e		 pop	 esi

; 496  : 	}
; 497  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exbless@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exbless
_TEXT	ENDS
PUBLIC	??_C@_0DI@EDPIGJGC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BI@MPCAELIP@?$FLJewelsBank?$FN?5No?5?$CFd?5Soul?$AA@ ; `string'
PUBLIC	?exsoul@JewelsBank@@QAEXHH@Z			; JewelsBank::exsoul
;	COMDAT ??_C@_0DI@EDPIGJGC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DI@EDPIGJGC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of Soul Added %d Credits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MPCAELIP@?$FLJewelsBank?$FN?5No?5?$CFd?5Soul?$AA@
CONST	SEGMENT
??_C@_0BI@MPCAELIP@?$FLJewelsBank?$FN?5No?5?$CFd?5Soul?$AA@ DB '[JewelsBa'
	DB	'nk] No %d Soul', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exsoul@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exsoul@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exsoul, COMDAT
; _this$ = ecx

; 500  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 501  : 	if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exsoul
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exsoul
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exsoul
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exsoul
$LN15@exsoul:

; 502  : 	{
; 503  : 	if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exsoul

; 504  : 		LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 505  : 		if(lpObj->SoulBank < Count)

  00066	8b 88 ec 27 00
	00		 mov	 ecx, DWORD PTR [eax+10220]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exsoul

; 506  : 		{
; 507  : 			MsgNormal(aIndex,"[JewelsBank] No %d Soul",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MPCAELIP@?$FLJewelsBank?$FN?5No?5?$CFd?5Soul?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 555  : 	}
; 556  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exsoul:

; 508  : 			return;
; 509  : 		}
; 510  : 		
; 511  : 		if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exsoul

; 512  : 		{
; 513  : 			lpObj->SoulBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 ec 27 00
	00		 mov	 DWORD PTR [eax+10220], ecx

; 514  : 			lpObj->ZtCred += ZtSoulTeen;

  00097	db 46 34	 fild	 DWORD PTR [esi+52]
  0009a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a0	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 515  : 			CountExSoul = ZtSoulTeen;

  000a6	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000a9	89 86 00 01 00
	00		 mov	 DWORD PTR [esi+256], eax
  000af	e9 c3 00 00 00	 jmp	 $LN1@exsoul
$LN12@exsoul:

; 516  : 		}
; 517  : 		else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exsoul

; 518  : 		{
; 519  : 			lpObj->SoulBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 ec 27 00
	00		 mov	 DWORD PTR [eax+10220], ecx

; 520  : 			lpObj->ZtCred += ZtSoulTwenty;

  000c2	db 46 38	 fild	 DWORD PTR [esi+56]
  000c5	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000cb	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 521  : 			CountExSoul = ZtSoulTwenty;

  000d1	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  000d4	89 8e 00 01 00
	00		 mov	 DWORD PTR [esi+256], ecx
  000da	e9 98 00 00 00	 jmp	 $LN1@exsoul
$LN10@exsoul:

; 522  : 		}
; 523  : 		else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 1d		 jne	 SHORT $LN8@exsoul

; 524  : 		{
; 525  : 			lpObj->SoulBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 ec 27 00
	00		 mov	 DWORD PTR [eax+10220], ecx

; 526  : 			lpObj->ZtCred += ZtSoulThirty;

  000ed	db 46 3c	 fild	 DWORD PTR [esi+60]
  000f0	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f6	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 527  : 			CountExSoul = ZtSoulThirty;

  000fc	8b 56 3c	 mov	 edx, DWORD PTR [esi+60]
  000ff	eb 70		 jmp	 SHORT $LN21@exsoul
$LN8@exsoul:

; 528  : 		}
; 529  : 		else if (Count == 40)

  00101	83 ff 28	 cmp	 edi, 40			; 00000028H
  00104	75 23		 jne	 SHORT $LN6@exsoul

; 530  : 		{
; 531  : 			lpObj->SoulBank -= Count;

  00106	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  00109	89 88 ec 27 00
	00		 mov	 DWORD PTR [eax+10220], ecx

; 532  : 			lpObj->ZtCred += ZtSoulForty;

  0010f	db 46 40	 fild	 DWORD PTR [esi+64]
  00112	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00118	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 533  : 			CountExSoul = ZtSoulForty;

  0011e	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00121	89 86 00 01 00
	00		 mov	 DWORD PTR [esi+256], eax
  00127	eb 4e		 jmp	 SHORT $LN1@exsoul
$LN6@exsoul:

; 534  : 		}
; 535  : 		else if (Count == 50)

  00129	83 ff 32	 cmp	 edi, 50			; 00000032H
  0012c	75 23		 jne	 SHORT $LN4@exsoul

; 536  : 		{
; 537  : 			lpObj->SoulBank -= Count;

  0012e	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00131	89 88 ec 27 00
	00		 mov	 DWORD PTR [eax+10220], ecx

; 538  : 			lpObj->ZtCred += ZtSoulFifty;

  00137	db 46 44	 fild	 DWORD PTR [esi+68]
  0013a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00140	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 539  : 			CountExSoul = ZtSoulFifty;

  00146	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00149	89 8e 00 01 00
	00		 mov	 DWORD PTR [esi+256], ecx
  0014f	eb 26		 jmp	 SHORT $LN1@exsoul
$LN4@exsoul:

; 540  : 		}
; 541  : 		else if (Count == 100)

  00151	83 ff 64	 cmp	 edi, 100		; 00000064H
  00154	75 44		 jne	 SHORT $LN2@exsoul

; 542  : 		{
; 543  : 			lpObj->SoulBank -= Count;

  00156	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  00159	89 88 ec 27 00
	00		 mov	 DWORD PTR [eax+10220], ecx

; 544  : 			lpObj->ZtCred += ZtSoulHundred;

  0015f	db 46 48	 fild	 DWORD PTR [esi+72]
  00162	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00168	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 545  : 			CountExSoul = ZtSoulHundred;

  0016e	8b 56 48	 mov	 edx, DWORD PTR [esi+72]
$LN21@exsoul:
  00171	89 96 00 01 00
	00		 mov	 DWORD PTR [esi+256], edx
$LN1@exsoul:

; 549  : 			return;
; 550  : 		}
; 551  : 		
; 552  : 		
; 553  : 		ZtUserDataSend(aIndex);

  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 554  : 		MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Soul Added %d Credits" ,Count, CountExSoul);

  0017d	8b 86 00 01 00
	00		 mov	 eax, DWORD PTR [esi+256]
  00183	50		 push	 eax
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@EDPIGJGC@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 555  : 	}
; 556  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exsoul:

; 546  : 		}
; 547  : 		else{
; 548  : 			MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exsoul:
  001aa	5e		 pop	 esi

; 555  : 	}
; 556  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exsoul@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exsoul
_TEXT	ENDS
PUBLIC	??_C@_0DJ@PLLOKGAA@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BI@MHFJLCGA@?$FLJewelsBank?$FN?5No?5?$CFd?5Life?$AA@ ; `string'
PUBLIC	?exlife@JewelsBank@@QAEXHH@Z			; JewelsBank::exlife
;	COMDAT ??_C@_0DJ@PLLOKGAA@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DJ@PLLOKGAA@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of Life Added %d Credits ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MHFJLCGA@?$FLJewelsBank?$FN?5No?5?$CFd?5Life?$AA@
CONST	SEGMENT
??_C@_0BI@MHFJLCGA@?$FLJewelsBank?$FN?5No?5?$CFd?5Life?$AA@ DB '[JewelsBa'
	DB	'nk] No %d Life', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exlife@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exlife@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exlife, COMDAT
; _this$ = ecx

; 559  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 560  : 	if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exlife
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exlife
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exlife
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exlife
$LN15@exlife:

; 561  : 	{
; 562  : 		if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exlife

; 563  : 		LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 564  : 		if(lpObj->LifeBank < Count)

  00066	8b 88 f0 27 00
	00		 mov	 ecx, DWORD PTR [eax+10224]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exlife

; 565  : 		{
; 566  : 			MsgNormal(aIndex,"[JewelsBank] No %d Life",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MHFJLCGA@?$FLJewelsBank?$FN?5No?5?$CFd?5Life?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 613  : 	}
; 614  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exlife:

; 567  : 			return;
; 568  : 		}
; 569  : 		if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exlife

; 570  : 			{
; 571  : 				lpObj->LifeBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 f0 27 00
	00		 mov	 DWORD PTR [eax+10224], ecx

; 572  : 				lpObj->ZtCred += ZtLifeTeen;

  00097	db 46 4c	 fild	 DWORD PTR [esi+76]
  0009a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a0	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 573  : 				CountExLife = ZtLifeTeen;

  000a6	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000a9	89 86 04 01 00
	00		 mov	 DWORD PTR [esi+260], eax
  000af	e9 c3 00 00 00	 jmp	 $LN1@exlife
$LN12@exlife:

; 574  : 			}
; 575  : 			else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exlife

; 576  : 			{
; 577  : 				lpObj->LifeBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 f0 27 00
	00		 mov	 DWORD PTR [eax+10224], ecx

; 578  : 				lpObj->ZtCred += ZtLifeTwenty;

  000c2	db 46 50	 fild	 DWORD PTR [esi+80]
  000c5	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000cb	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 579  : 				CountExLife = ZtLifeTwenty;

  000d1	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  000d4	89 8e 04 01 00
	00		 mov	 DWORD PTR [esi+260], ecx
  000da	e9 98 00 00 00	 jmp	 $LN1@exlife
$LN10@exlife:

; 580  : 			}
; 581  : 			else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 1d		 jne	 SHORT $LN8@exlife

; 582  : 			{
; 583  : 				lpObj->LifeBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 f0 27 00
	00		 mov	 DWORD PTR [eax+10224], ecx

; 584  : 				lpObj->ZtCred += ZtLifeThirty;

  000ed	db 46 54	 fild	 DWORD PTR [esi+84]
  000f0	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f6	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 585  : 				CountExLife = ZtLifeThirty;

  000fc	8b 56 54	 mov	 edx, DWORD PTR [esi+84]
  000ff	eb 70		 jmp	 SHORT $LN21@exlife
$LN8@exlife:

; 586  : 			}
; 587  : 		else if (Count == 40)

  00101	83 ff 28	 cmp	 edi, 40			; 00000028H
  00104	75 23		 jne	 SHORT $LN6@exlife

; 588  : 		{
; 589  : 			lpObj->LifeBank -= Count;

  00106	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  00109	89 88 f0 27 00
	00		 mov	 DWORD PTR [eax+10224], ecx

; 590  : 			lpObj->ZtCred += ZtLifeForty;

  0010f	db 46 58	 fild	 DWORD PTR [esi+88]
  00112	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00118	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 591  : 			CountExLife = ZtLifeForty;

  0011e	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00121	89 86 04 01 00
	00		 mov	 DWORD PTR [esi+260], eax
  00127	eb 4e		 jmp	 SHORT $LN1@exlife
$LN6@exlife:

; 592  : 		}
; 593  : 		else if (Count == 50)

  00129	83 ff 32	 cmp	 edi, 50			; 00000032H
  0012c	75 23		 jne	 SHORT $LN4@exlife

; 594  : 		{
; 595  : 			lpObj->LifeBank -= Count;

  0012e	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00131	89 88 f0 27 00
	00		 mov	 DWORD PTR [eax+10224], ecx

; 596  : 			lpObj->ZtCred += ZtLifeFifty;

  00137	db 46 5c	 fild	 DWORD PTR [esi+92]
  0013a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00140	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 597  : 			CountExLife = ZtLifeFifty;

  00146	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  00149	89 8e 04 01 00
	00		 mov	 DWORD PTR [esi+260], ecx
  0014f	eb 26		 jmp	 SHORT $LN1@exlife
$LN4@exlife:

; 598  : 		}
; 599  : 		else if (Count == 100)

  00151	83 ff 64	 cmp	 edi, 100		; 00000064H
  00154	75 44		 jne	 SHORT $LN2@exlife

; 600  : 		{
; 601  : 			lpObj->LifeBank -= Count;

  00156	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  00159	89 88 f0 27 00
	00		 mov	 DWORD PTR [eax+10224], ecx

; 602  : 			lpObj->ZtCred += ZtLifeHundred;

  0015f	db 46 60	 fild	 DWORD PTR [esi+96]
  00162	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00168	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 603  : 			CountExLife = ZtLifeHundred;

  0016e	8b 56 60	 mov	 edx, DWORD PTR [esi+96]
$LN21@exlife:
  00171	89 96 04 01 00
	00		 mov	 DWORD PTR [esi+260], edx
$LN1@exlife:

; 607  : 				return;
; 608  : 			}
; 609  : 
; 610  : 		ZtUserDataSend(aIndex);

  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 611  : 
; 612  : 		MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Life Added %d Credits " ,Count, CountExLife);

  0017d	8b 86 04 01 00
	00		 mov	 eax, DWORD PTR [esi+260]
  00183	50		 push	 eax
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PLLOKGAA@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 613  : 	}
; 614  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exlife:

; 604  : 		}
; 605  : 		else{
; 606  : 				MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exlife:
  001aa	5e		 pop	 esi

; 613  : 	}
; 614  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exlife@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exlife
_TEXT	ENDS
PUBLIC	??_C@_0DN@MPNJMNLN@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	?excreateon@JewelsBank@@QAEXHH@Z		; JewelsBank::excreateon
;	COMDAT ??_C@_0DN@MPNJMNLN@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DN@MPNJMNLN@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of Createon Added %d Credits ', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?excreateon@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?excreateon@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::excreateon, COMDAT
; _this$ = ecx

; 617  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 618  : 	if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(SILVER1) || g_ZtLicense.CheckUser(SILVER2) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@excreateon
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@excreateon
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@excreateon
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@excreateon
$LN15@excreateon:

; 619  : 	{
; 620  : 		if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@excreateon

; 621  : 		LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 622  : 		if(lpObj->CreateonBank < Count)

  00066	8b 88 f4 27 00
	00		 mov	 ecx, DWORD PTR [eax+10228]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@excreateon

; 623  : 		{
; 624  : 			MsgNormal(aIndex,"[JewelsBank] No %d Createon",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HPMLFNFO@?$FLJewelsBank?$FN?5No?5?$CFd?5Createon?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 671  : 	}
; 672  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@excreateon:

; 625  : 			return;
; 626  : 		}
; 627  : 		if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@excreateon

; 628  : 			{
; 629  : 				lpObj->CreateonBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 f4 27 00
	00		 mov	 DWORD PTR [eax+10228], ecx

; 630  : 				lpObj->ZtCred += ZtCreateonTeen;

  00097	db 46 64	 fild	 DWORD PTR [esi+100]
  0009a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a0	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 631  : 				CountExCreateon = ZtCreateonTeen;

  000a6	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  000a9	89 86 08 01 00
	00		 mov	 DWORD PTR [esi+264], eax
  000af	e9 c3 00 00 00	 jmp	 $LN1@excreateon
$LN12@excreateon:

; 632  : 			}
; 633  : 			else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@excreateon

; 634  : 			{
; 635  : 				lpObj->CreateonBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 f4 27 00
	00		 mov	 DWORD PTR [eax+10228], ecx

; 636  : 				lpObj->ZtCred += ZtCreateonTwenty;

  000c2	db 46 68	 fild	 DWORD PTR [esi+104]
  000c5	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000cb	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 637  : 				CountExCreateon = ZtCreateonTwenty;

  000d1	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  000d4	89 8e 08 01 00
	00		 mov	 DWORD PTR [esi+264], ecx
  000da	e9 98 00 00 00	 jmp	 $LN1@excreateon
$LN10@excreateon:

; 638  : 			}
; 639  : 			else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 1d		 jne	 SHORT $LN8@excreateon

; 640  : 			{
; 641  : 				lpObj->CreateonBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 f4 27 00
	00		 mov	 DWORD PTR [eax+10228], ecx

; 642  : 				lpObj->ZtCred += ZtCreateonThirty;

  000ed	db 46 6c	 fild	 DWORD PTR [esi+108]
  000f0	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f6	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 643  : 				CountExCreateon = ZtCreateonThirty;

  000fc	8b 56 6c	 mov	 edx, DWORD PTR [esi+108]
  000ff	eb 70		 jmp	 SHORT $LN21@excreateon
$LN8@excreateon:

; 644  : 			}
; 645  : 		else if (Count == 40)

  00101	83 ff 28	 cmp	 edi, 40			; 00000028H
  00104	75 23		 jne	 SHORT $LN6@excreateon

; 646  : 		{
; 647  : 			lpObj->CreateonBank -= Count;

  00106	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  00109	89 88 f4 27 00
	00		 mov	 DWORD PTR [eax+10228], ecx

; 648  : 			lpObj->ZtCred += ZtCreateonForty;

  0010f	db 46 70	 fild	 DWORD PTR [esi+112]
  00112	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00118	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 649  : 			CountExCreateon = ZtCreateonForty;

  0011e	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  00121	89 86 08 01 00
	00		 mov	 DWORD PTR [esi+264], eax
  00127	eb 4e		 jmp	 SHORT $LN1@excreateon
$LN6@excreateon:

; 650  : 		}
; 651  : 		else if (Count == 50)

  00129	83 ff 32	 cmp	 edi, 50			; 00000032H
  0012c	75 23		 jne	 SHORT $LN4@excreateon

; 652  : 		{
; 653  : 			lpObj->CreateonBank -= Count;

  0012e	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00131	89 88 f4 27 00
	00		 mov	 DWORD PTR [eax+10228], ecx

; 654  : 			lpObj->ZtCred += ZtCreateonFifty;

  00137	db 46 74	 fild	 DWORD PTR [esi+116]
  0013a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00140	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 655  : 			CountExCreateon = ZtCreateonFifty;

  00146	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00149	89 8e 08 01 00
	00		 mov	 DWORD PTR [esi+264], ecx
  0014f	eb 26		 jmp	 SHORT $LN1@excreateon
$LN4@excreateon:

; 656  : 		}
; 657  : 		else if (Count == 100)

  00151	83 ff 64	 cmp	 edi, 100		; 00000064H
  00154	75 44		 jne	 SHORT $LN2@excreateon

; 658  : 		{
; 659  : 			lpObj->CreateonBank -= Count;

  00156	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  00159	89 88 f4 27 00
	00		 mov	 DWORD PTR [eax+10228], ecx

; 660  : 			lpObj->ZtCred += ZtCreateonHundred;

  0015f	db 46 78	 fild	 DWORD PTR [esi+120]
  00162	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00168	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 661  : 			CountExCreateon = ZtCreateonHundred;

  0016e	8b 56 78	 mov	 edx, DWORD PTR [esi+120]
$LN21@excreateon:
  00171	89 96 08 01 00
	00		 mov	 DWORD PTR [esi+264], edx
$LN1@excreateon:

; 665  : 				return;
; 666  : 			}
; 667  : 
; 668  : 		ZtUserDataSend(aIndex);

  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 669  : 
; 670  : 		MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Createon Added %d Credits " ,Count, CountExCreateon);

  0017d	8b 86 08 01 00
	00		 mov	 eax, DWORD PTR [esi+264]
  00183	50		 push	 eax
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@MPNJMNLN@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 671  : 	}
; 672  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@excreateon:

; 662  : 		}
; 663  : 		else{
; 664  : 				MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@excreateon:
  001aa	5e		 pop	 esi

; 671  : 	}
; 672  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?excreateon@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::excreateon
_TEXT	ENDS
PUBLIC	??_C@_0DN@JNMMHOMM@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BM@HJEHFEFN@?$FLJewelsBank?$FN?5No?5?$CFd?5Guardian?$AA@ ; `string'
PUBLIC	?exGuardian@JewelsBank@@QAEXHH@Z		; JewelsBank::exGuardian
;	COMDAT ??_C@_0DN@JNMMHOMM@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DN@JNMMHOMM@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of Guardian Added %d Credits ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HJEHFEFN@?$FLJewelsBank?$FN?5No?5?$CFd?5Guardian?$AA@
CONST	SEGMENT
??_C@_0BM@HJEHFEFN@?$FLJewelsBank?$FN?5No?5?$CFd?5Guardian?$AA@ DB '[Jewe'
	DB	'lsBank] No %d Guardian', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exGuardian@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exGuardian@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exGuardian, COMDAT
; _this$ = ecx

; 675  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 676  : 	if( !g_ZtLicense.CheckUser(eZtUB::Local3)  && 
; 677  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER1) &&
; 678  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER2) && 
; 679  : 		!g_ZtLicense.CheckUser(eZtUB::drynea) )

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exGuardian
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exGuardian
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exGuardian
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 5a 01 00
	00		 je	 $LN16@exGuardian
$LN15@exGuardian:

; 680  : 	{
; 681  : 		return;
; 682  : 	}
; 683  : 
; 684  : 	if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 51 01 00
	00		 je	 $LN16@exGuardian

; 685  : 
; 686  : 	LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 687  : 
; 688  : 	if(lpObj->GuardianBank < Count)

  00066	8b 88 f8 27 00
	00		 mov	 ecx, DWORD PTR [eax+10232]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exGuardian

; 689  : 	{
; 690  : 		MsgNormal(aIndex,"[JewelsBank] No %d Guardian",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HJEHFEFN@?$FLJewelsBank?$FN?5No?5?$CFd?5Guardian?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 741  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exGuardian:

; 691  : 		return;
; 692  : 	}
; 693  : 
; 694  : 	int CountJewels = 0;
; 695  : 
; 696  : 	if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 20		 jne	 SHORT $LN12@exGuardian

; 697  : 	{
; 698  : 		lpObj->GuardianBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 f8 27 00
	00		 mov	 DWORD PTR [eax+10232], ecx

; 699  : 		lpObj->ZtCred += this->ZtGuardianTeen;

  00097	db 46 7c	 fild	 DWORD PTR [esi+124]
  0009a	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a0	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 700  : 		CountJewels = this->ZtGuardianTeen;

  000a6	8b 76 7c	 mov	 esi, DWORD PTR [esi+124]
  000a9	e9 c9 00 00 00	 jmp	 $LN1@exGuardian
$LN12@exGuardian:

; 701  : 	}
; 702  : 	else if (Count == 20)

  000ae	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b1	75 26		 jne	 SHORT $LN10@exGuardian

; 703  : 	{
; 704  : 		lpObj->GuardianBank -= Count;

  000b3	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000b6	89 88 f8 27 00
	00		 mov	 DWORD PTR [eax+10232], ecx

; 705  : 		lpObj->ZtCred += this->ZtGuardianTwenty;

  000bc	db 86 80 00 00
	00		 fild	 DWORD PTR [esi+128]
  000c2	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000c8	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 706  : 		CountJewels = this->ZtGuardianTwenty;

  000ce	8b b6 80 00 00
	00		 mov	 esi, DWORD PTR [esi+128]
  000d4	e9 9e 00 00 00	 jmp	 $LN1@exGuardian
$LN10@exGuardian:

; 707  : 	}
; 708  : 	else if (Count == 30)

  000d9	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000dc	75 23		 jne	 SHORT $LN8@exGuardian

; 709  : 	{
; 710  : 		lpObj->GuardianBank -= Count;

  000de	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e1	89 88 f8 27 00
	00		 mov	 DWORD PTR [eax+10232], ecx

; 711  : 		lpObj->ZtCred += this->ZtGuardianThirty;

  000e7	db 86 84 00 00
	00		 fild	 DWORD PTR [esi+132]
  000ed	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f3	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 712  : 		CountJewels = this->ZtGuardianThirty;

  000f9	8b b6 84 00 00
	00		 mov	 esi, DWORD PTR [esi+132]
  000ff	eb 76		 jmp	 SHORT $LN1@exGuardian
$LN8@exGuardian:

; 713  : 	}
; 714  : 	else if (Count == 40)

  00101	83 ff 28	 cmp	 edi, 40			; 00000028H
  00104	75 23		 jne	 SHORT $LN6@exGuardian

; 715  : 	{
; 716  : 		lpObj->GuardianBank -= Count;

  00106	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  00109	89 88 f8 27 00
	00		 mov	 DWORD PTR [eax+10232], ecx

; 717  : 		lpObj->ZtCred += this->ZtGuardianForty;

  0010f	db 86 88 00 00
	00		 fild	 DWORD PTR [esi+136]
  00115	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  0011b	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 718  : 		CountJewels = this->ZtGuardianForty;

  00121	8b b6 88 00 00
	00		 mov	 esi, DWORD PTR [esi+136]
  00127	eb 4e		 jmp	 SHORT $LN1@exGuardian
$LN6@exGuardian:

; 719  : 	}
; 720  : 	else if (Count == 50)

  00129	83 ff 32	 cmp	 edi, 50			; 00000032H
  0012c	75 23		 jne	 SHORT $LN4@exGuardian

; 721  : 	{
; 722  : 		lpObj->GuardianBank -= Count;

  0012e	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00131	89 88 f8 27 00
	00		 mov	 DWORD PTR [eax+10232], ecx

; 723  : 		lpObj->ZtCred += this->ZtGuardianFifty;

  00137	db 86 8c 00 00
	00		 fild	 DWORD PTR [esi+140]
  0013d	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00143	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 724  : 		CountJewels = this->ZtGuardianFifty;

  00149	8b b6 8c 00 00
	00		 mov	 esi, DWORD PTR [esi+140]
  0014f	eb 26		 jmp	 SHORT $LN1@exGuardian
$LN4@exGuardian:

; 725  : 	}
; 726  : 	else if (Count == 100)

  00151	83 ff 64	 cmp	 edi, 100		; 00000064H
  00154	75 3e		 jne	 SHORT $LN2@exGuardian

; 727  : 	{
; 728  : 		lpObj->GuardianBank -= Count;

  00156	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  00159	89 88 f8 27 00
	00		 mov	 DWORD PTR [eax+10232], ecx

; 729  : 		lpObj->ZtCred += this->ZtGuardianHundred;

  0015f	db 86 90 00 00
	00		 fild	 DWORD PTR [esi+144]
  00165	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  0016b	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 730  : 		CountJewels = this->ZtGuardianHundred;

  00171	8b b6 90 00 00
	00		 mov	 esi, DWORD PTR [esi+144]
$LN1@exGuardian:

; 735  : 		return;
; 736  : 	}
; 737  : 
; 738  : 	ZtUserDataSend(aIndex);

  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 739  : 
; 740  : 	MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Guardian Added %d Credits " ,Count, CountJewels);

  0017d	56		 push	 esi
  0017e	57		 push	 edi
  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JNMMHOMM@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  00184	53		 push	 ebx
  00185	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0018a	83 c4 14	 add	 esp, 20			; 00000014H
  0018d	5f		 pop	 edi
  0018e	5b		 pop	 ebx
  0018f	5e		 pop	 esi

; 741  : }

  00190	5d		 pop	 ebp
  00191	c2 08 00	 ret	 8
$LN2@exGuardian:

; 731  : 	}
; 732  : 	else
; 733  : 	{
; 734  : 		MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  00199	53		 push	 ebx
  0019a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0019f	83 c4 08	 add	 esp, 8
  001a2	5f		 pop	 edi
  001a3	5b		 pop	 ebx
$LN16@exGuardian:
  001a4	5e		 pop	 esi

; 741  : }

  001a5	5d		 pop	 ebp
  001a6	c2 08 00	 ret	 8
?exGuardian@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exGuardian
_TEXT	ENDS
PUBLIC	??_C@_0DM@OGCMCKF@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BL@EMPAGGJM@?$FLJewelsBank?$FN?5No?5?$CFd?5Harmony?$AA@ ; `string'
PUBLIC	?exHarmony@JewelsBank@@QAEXHH@Z			; JewelsBank::exHarmony
;	COMDAT ??_C@_0DM@OGCMCKF@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DM@OGCMCKF@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Jew'
	DB	'elsBank] Exchange %d Jewel of Harmony Added %d Credits ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EMPAGGJM@?$FLJewelsBank?$FN?5No?5?$CFd?5Harmony?$AA@
CONST	SEGMENT
??_C@_0BL@EMPAGGJM@?$FLJewelsBank?$FN?5No?5?$CFd?5Harmony?$AA@ DB '[Jewel'
	DB	'sBank] No %d Harmony', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exHarmony@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exHarmony@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exHarmony, COMDAT
; _this$ = ecx

; 744  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 745  : 	if( !g_ZtLicense.CheckUser(eZtUB::Local3)  && 
; 746  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER1) &&
; 747  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER2) && 
; 748  : 		!g_ZtLicense.CheckUser(eZtUB::drynea) )

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exHarmony
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exHarmony
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exHarmony
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exHarmony
$LN15@exHarmony:

; 749  : 	{
; 750  : 		return;
; 751  : 	}
; 752  : 
; 753  : 	if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exHarmony

; 754  : 
; 755  : 	LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 756  : 
; 757  : 	if(lpObj->HarmonyBank < Count)

  00066	8b 88 fc 27 00
	00		 mov	 ecx, DWORD PTR [eax+10236]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exHarmony

; 758  : 	{
; 759  : 		MsgNormal(aIndex,"[JewelsBank] No %d Harmony",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EMPAGGJM@?$FLJewelsBank?$FN?5No?5?$CFd?5Harmony?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 810  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exHarmony:

; 760  : 		return;
; 761  : 	}
; 762  : 
; 763  : 	int CountJewels = 0;
; 764  : 
; 765  : 	if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exHarmony

; 766  : 	{
; 767  : 		lpObj->HarmonyBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 fc 27 00
	00		 mov	 DWORD PTR [eax+10236], ecx

; 768  : 		lpObj->ZtCred += this->ZtHarmonyTeen;

  00097	db 86 94 00 00
	00		 fild	 DWORD PTR [esi+148]
  0009d	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a3	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 769  : 		CountJewels = this->ZtHarmonyTeen;

  000a9	8b b6 94 00 00
	00		 mov	 esi, DWORD PTR [esi+148]
  000af	e9 c9 00 00 00	 jmp	 $LN1@exHarmony
$LN12@exHarmony:

; 770  : 	}
; 771  : 	else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exHarmony

; 772  : 	{
; 773  : 		lpObj->HarmonyBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 fc 27 00
	00		 mov	 DWORD PTR [eax+10236], ecx

; 774  : 		lpObj->ZtCred += this->ZtHarmonyTwenty;

  000c2	db 86 98 00 00
	00		 fild	 DWORD PTR [esi+152]
  000c8	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000ce	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 775  : 		CountJewels = this->ZtHarmonyTwenty;

  000d4	8b b6 98 00 00
	00		 mov	 esi, DWORD PTR [esi+152]
  000da	e9 9e 00 00 00	 jmp	 $LN1@exHarmony
$LN10@exHarmony:

; 776  : 	}
; 777  : 	else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 23		 jne	 SHORT $LN8@exHarmony

; 778  : 	{
; 779  : 		lpObj->HarmonyBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 fc 27 00
	00		 mov	 DWORD PTR [eax+10236], ecx

; 780  : 		lpObj->ZtCred += this->ZtHarmonyThirty;

  000ed	db 86 9c 00 00
	00		 fild	 DWORD PTR [esi+156]
  000f3	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f9	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 781  : 		CountJewels = this->ZtHarmonyThirty;

  000ff	8b b6 9c 00 00
	00		 mov	 esi, DWORD PTR [esi+156]
  00105	eb 76		 jmp	 SHORT $LN1@exHarmony
$LN8@exHarmony:

; 782  : 	}
; 783  : 	else if (Count == 40)

  00107	83 ff 28	 cmp	 edi, 40			; 00000028H
  0010a	75 23		 jne	 SHORT $LN6@exHarmony

; 784  : 	{
; 785  : 		lpObj->HarmonyBank -= Count;

  0010c	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  0010f	89 88 fc 27 00
	00		 mov	 DWORD PTR [eax+10236], ecx

; 786  : 		lpObj->ZtCred += this->ZtHarmonyForty;

  00115	db 86 a0 00 00
	00		 fild	 DWORD PTR [esi+160]
  0011b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00121	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 787  : 		CountJewels = this->ZtHarmonyForty;

  00127	8b b6 a0 00 00
	00		 mov	 esi, DWORD PTR [esi+160]
  0012d	eb 4e		 jmp	 SHORT $LN1@exHarmony
$LN6@exHarmony:

; 788  : 	}
; 789  : 	else if (Count == 50)

  0012f	83 ff 32	 cmp	 edi, 50			; 00000032H
  00132	75 23		 jne	 SHORT $LN4@exHarmony

; 790  : 	{
; 791  : 		lpObj->HarmonyBank -= Count;

  00134	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00137	89 88 fc 27 00
	00		 mov	 DWORD PTR [eax+10236], ecx

; 792  : 		lpObj->ZtCred += this->ZtHarmonyFifty;

  0013d	db 86 a4 00 00
	00		 fild	 DWORD PTR [esi+164]
  00143	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00149	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 793  : 		CountJewels = this->ZtHarmonyFifty;

  0014f	8b b6 a4 00 00
	00		 mov	 esi, DWORD PTR [esi+164]
  00155	eb 26		 jmp	 SHORT $LN1@exHarmony
$LN4@exHarmony:

; 794  : 	}
; 795  : 	else if (Count == 100)

  00157	83 ff 64	 cmp	 edi, 100		; 00000064H
  0015a	75 3e		 jne	 SHORT $LN2@exHarmony

; 796  : 	{
; 797  : 		lpObj->HarmonyBank -= Count;

  0015c	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  0015f	89 88 fc 27 00
	00		 mov	 DWORD PTR [eax+10236], ecx

; 798  : 		lpObj->ZtCred += this->ZtHarmonyHundred;

  00165	db 86 a8 00 00
	00		 fild	 DWORD PTR [esi+168]
  0016b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00171	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 799  : 		CountJewels = this->ZtHarmonyHundred;

  00177	8b b6 a8 00 00
	00		 mov	 esi, DWORD PTR [esi+168]
$LN1@exHarmony:

; 804  : 		return;
; 805  : 	}
; 806  : 
; 807  : 	ZtUserDataSend(aIndex);

  0017d	53		 push	 ebx
  0017e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 808  : 
; 809  : 	MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of Harmony Added %d Credits " ,Count, CountJewels);

  00183	56		 push	 esi
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@OGCMCKF@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 810  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exHarmony:

; 800  : 	}
; 801  : 	else
; 802  : 	{
; 803  : 		MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exHarmony:
  001aa	5e		 pop	 esi

; 810  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exHarmony@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exHarmony
_TEXT	ENDS
PUBLIC	??_C@_0DN@EHDAKACB@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BM@HDLEMOKM@?$FLJewelsBank?$FN?5No?5?$CFd?5LowStone?$AA@ ; `string'
PUBLIC	?exLowStone@JewelsBank@@QAEXHH@Z		; JewelsBank::exLowStone
;	COMDAT ??_C@_0DN@EHDAKACB@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DN@EHDAKACB@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of LowStone Added %d Credits ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HDLEMOKM@?$FLJewelsBank?$FN?5No?5?$CFd?5LowStone?$AA@
CONST	SEGMENT
??_C@_0BM@HDLEMOKM@?$FLJewelsBank?$FN?5No?5?$CFd?5LowStone?$AA@ DB '[Jewe'
	DB	'lsBank] No %d LowStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exLowStone@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exLowStone@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exLowStone, COMDAT
; _this$ = ecx

; 813  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 814  : 	if( !g_ZtLicense.CheckUser(eZtUB::Local3)  && 
; 815  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER1) &&
; 816  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER2) && 
; 817  : 		!g_ZtLicense.CheckUser(eZtUB::drynea) )

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exLowStone
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exLowStone
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exLowStone
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exLowStone
$LN15@exLowStone:

; 818  : 	{
; 819  : 		return;
; 820  : 	}
; 821  : 
; 822  : 	if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exLowStone

; 823  : 
; 824  : 	LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 825  : 
; 826  : 	if(lpObj->LowStoneBank < Count)

  00066	8b 88 00 28 00
	00		 mov	 ecx, DWORD PTR [eax+10240]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exLowStone

; 827  : 	{
; 828  : 		MsgNormal(aIndex,"[JewelsBank] No %d LowStone",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HDLEMOKM@?$FLJewelsBank?$FN?5No?5?$CFd?5LowStone?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 879  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exLowStone:

; 829  : 		return;
; 830  : 	}
; 831  : 
; 832  : 	int CountJewels = 0;
; 833  : 
; 834  : 	if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exLowStone

; 835  : 	{
; 836  : 		lpObj->LowStoneBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 00 28 00
	00		 mov	 DWORD PTR [eax+10240], ecx

; 837  : 		lpObj->ZtCred += this->ZtLowStoneTeen;

  00097	db 86 ac 00 00
	00		 fild	 DWORD PTR [esi+172]
  0009d	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a3	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 838  : 		CountJewels = this->ZtLowStoneTeen;

  000a9	8b b6 ac 00 00
	00		 mov	 esi, DWORD PTR [esi+172]
  000af	e9 c9 00 00 00	 jmp	 $LN1@exLowStone
$LN12@exLowStone:

; 839  : 	}
; 840  : 	else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exLowStone

; 841  : 	{
; 842  : 		lpObj->LowStoneBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 00 28 00
	00		 mov	 DWORD PTR [eax+10240], ecx

; 843  : 		lpObj->ZtCred += this->ZtLowStoneTwenty;

  000c2	db 86 b0 00 00
	00		 fild	 DWORD PTR [esi+176]
  000c8	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000ce	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 844  : 		CountJewels = this->ZtLowStoneTwenty;

  000d4	8b b6 b0 00 00
	00		 mov	 esi, DWORD PTR [esi+176]
  000da	e9 9e 00 00 00	 jmp	 $LN1@exLowStone
$LN10@exLowStone:

; 845  : 	}
; 846  : 	else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 23		 jne	 SHORT $LN8@exLowStone

; 847  : 	{
; 848  : 		lpObj->LowStoneBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 00 28 00
	00		 mov	 DWORD PTR [eax+10240], ecx

; 849  : 		lpObj->ZtCred += this->ZtLowStoneThirty;

  000ed	db 86 b4 00 00
	00		 fild	 DWORD PTR [esi+180]
  000f3	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f9	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 850  : 		CountJewels = this->ZtLowStoneThirty;

  000ff	8b b6 b4 00 00
	00		 mov	 esi, DWORD PTR [esi+180]
  00105	eb 76		 jmp	 SHORT $LN1@exLowStone
$LN8@exLowStone:

; 851  : 	}
; 852  : 	else if (Count == 40)

  00107	83 ff 28	 cmp	 edi, 40			; 00000028H
  0010a	75 23		 jne	 SHORT $LN6@exLowStone

; 853  : 	{
; 854  : 		lpObj->LowStoneBank -= Count;

  0010c	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  0010f	89 88 00 28 00
	00		 mov	 DWORD PTR [eax+10240], ecx

; 855  : 		lpObj->ZtCred += this->ZtLowStoneForty;

  00115	db 86 b8 00 00
	00		 fild	 DWORD PTR [esi+184]
  0011b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00121	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 856  : 		CountJewels = this->ZtLowStoneForty;

  00127	8b b6 b8 00 00
	00		 mov	 esi, DWORD PTR [esi+184]
  0012d	eb 4e		 jmp	 SHORT $LN1@exLowStone
$LN6@exLowStone:

; 857  : 	}
; 858  : 	else if (Count == 50)

  0012f	83 ff 32	 cmp	 edi, 50			; 00000032H
  00132	75 23		 jne	 SHORT $LN4@exLowStone

; 859  : 	{
; 860  : 		lpObj->LowStoneBank -= Count;

  00134	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00137	89 88 00 28 00
	00		 mov	 DWORD PTR [eax+10240], ecx

; 861  : 		lpObj->ZtCred += this->ZtLowStoneFifty;

  0013d	db 86 bc 00 00
	00		 fild	 DWORD PTR [esi+188]
  00143	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00149	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 862  : 		CountJewels = this->ZtLowStoneFifty;

  0014f	8b b6 bc 00 00
	00		 mov	 esi, DWORD PTR [esi+188]
  00155	eb 26		 jmp	 SHORT $LN1@exLowStone
$LN4@exLowStone:

; 863  : 	}
; 864  : 	else if (Count == 100)

  00157	83 ff 64	 cmp	 edi, 100		; 00000064H
  0015a	75 3e		 jne	 SHORT $LN2@exLowStone

; 865  : 	{
; 866  : 		lpObj->LowStoneBank -= Count;

  0015c	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  0015f	89 88 00 28 00
	00		 mov	 DWORD PTR [eax+10240], ecx

; 867  : 		lpObj->ZtCred += this->ZtLowStoneHundred;

  00165	db 86 c0 00 00
	00		 fild	 DWORD PTR [esi+192]
  0016b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00171	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 868  : 		CountJewels = this->ZtLowStoneHundred;

  00177	8b b6 c0 00 00
	00		 mov	 esi, DWORD PTR [esi+192]
$LN1@exLowStone:

; 873  : 		return;
; 874  : 	}
; 875  : 
; 876  : 	ZtUserDataSend(aIndex);

  0017d	53		 push	 ebx
  0017e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 877  : 
; 878  : 	MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of LowStone Added %d Credits " ,Count, CountJewels);

  00183	56		 push	 esi
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@EHDAKACB@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 879  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exLowStone:

; 869  : 	}
; 870  : 	else
; 871  : 	{
; 872  : 		MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exLowStone:
  001aa	5e		 pop	 esi

; 879  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exLowStone@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exLowStone
_TEXT	ENDS
PUBLIC	??_C@_0DO@EJIDHDNP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BN@NCMHMGAF@?$FLJewelsBank?$FN?5No?5?$CFd?5HighStone?$AA@ ; `string'
PUBLIC	?exHighStone@JewelsBank@@QAEXHH@Z		; JewelsBank::exHighStone
;	COMDAT ??_C@_0DO@EJIDHDNP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DO@EJIDHDNP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of HighStone Added %d Credits ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NCMHMGAF@?$FLJewelsBank?$FN?5No?5?$CFd?5HighStone?$AA@
CONST	SEGMENT
??_C@_0BN@NCMHMGAF@?$FLJewelsBank?$FN?5No?5?$CFd?5HighStone?$AA@ DB '[Jew'
	DB	'elsBank] No %d HighStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exHighStone@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exHighStone@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exHighStone, COMDAT
; _this$ = ecx

; 882  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 883  : 	if( !g_ZtLicense.CheckUser(eZtUB::Local3)  && 
; 884  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER1) &&
; 885  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER2) && 
; 886  : 		!g_ZtLicense.CheckUser(eZtUB::drynea) )

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exHighSton
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exHighSton
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exHighSton
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exHighSton
$LN15@exHighSton:

; 887  : 	{
; 888  : 		return;
; 889  : 	}
; 890  : 
; 891  : 	if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exHighSton

; 892  : 
; 893  : 	LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 894  : 
; 895  : 	if(lpObj->HighStoneBank < Count)

  00066	8b 88 04 28 00
	00		 mov	 ecx, DWORD PTR [eax+10244]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exHighSton

; 896  : 	{
; 897  : 		MsgNormal(aIndex,"[JewelsBank] No %d HighStone",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@NCMHMGAF@?$FLJewelsBank?$FN?5No?5?$CFd?5HighStone?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 948  : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exHighSton:

; 898  : 		return;
; 899  : 	}
; 900  : 
; 901  : 	int CountJewels = 0;
; 902  : 
; 903  : 	if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exHighSton

; 904  : 	{
; 905  : 		lpObj->HighStoneBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 04 28 00
	00		 mov	 DWORD PTR [eax+10244], ecx

; 906  : 		lpObj->ZtCred += this->ZtHighStoneTeen;

  00097	db 86 c4 00 00
	00		 fild	 DWORD PTR [esi+196]
  0009d	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a3	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 907  : 		CountJewels = this->ZtHighStoneTeen;

  000a9	8b b6 c4 00 00
	00		 mov	 esi, DWORD PTR [esi+196]
  000af	e9 c9 00 00 00	 jmp	 $LN1@exHighSton
$LN12@exHighSton:

; 908  : 	}
; 909  : 	else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exHighSton

; 910  : 	{
; 911  : 		lpObj->HighStoneBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 04 28 00
	00		 mov	 DWORD PTR [eax+10244], ecx

; 912  : 		lpObj->ZtCred += this->ZtHighStoneTwenty;

  000c2	db 86 c8 00 00
	00		 fild	 DWORD PTR [esi+200]
  000c8	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000ce	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 913  : 		CountJewels = this->ZtHighStoneTwenty;

  000d4	8b b6 c8 00 00
	00		 mov	 esi, DWORD PTR [esi+200]
  000da	e9 9e 00 00 00	 jmp	 $LN1@exHighSton
$LN10@exHighSton:

; 914  : 	}
; 915  : 	else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 23		 jne	 SHORT $LN8@exHighSton

; 916  : 	{
; 917  : 		lpObj->HighStoneBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 04 28 00
	00		 mov	 DWORD PTR [eax+10244], ecx

; 918  : 		lpObj->ZtCred += this->ZtHighStoneThirty;

  000ed	db 86 cc 00 00
	00		 fild	 DWORD PTR [esi+204]
  000f3	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f9	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 919  : 		CountJewels = this->ZtHighStoneThirty;

  000ff	8b b6 cc 00 00
	00		 mov	 esi, DWORD PTR [esi+204]
  00105	eb 76		 jmp	 SHORT $LN1@exHighSton
$LN8@exHighSton:

; 920  : 	}
; 921  : 	else if (Count == 40)

  00107	83 ff 28	 cmp	 edi, 40			; 00000028H
  0010a	75 23		 jne	 SHORT $LN6@exHighSton

; 922  : 	{
; 923  : 		lpObj->HighStoneBank -= Count;

  0010c	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  0010f	89 88 04 28 00
	00		 mov	 DWORD PTR [eax+10244], ecx

; 924  : 		lpObj->ZtCred += this->ZtHighStoneForty;

  00115	db 86 d0 00 00
	00		 fild	 DWORD PTR [esi+208]
  0011b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00121	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 925  : 		CountJewels = this->ZtHighStoneForty;

  00127	8b b6 d0 00 00
	00		 mov	 esi, DWORD PTR [esi+208]
  0012d	eb 4e		 jmp	 SHORT $LN1@exHighSton
$LN6@exHighSton:

; 926  : 	}
; 927  : 	else if (Count == 50)

  0012f	83 ff 32	 cmp	 edi, 50			; 00000032H
  00132	75 23		 jne	 SHORT $LN4@exHighSton

; 928  : 	{
; 929  : 		lpObj->HighStoneBank -= Count;

  00134	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00137	89 88 04 28 00
	00		 mov	 DWORD PTR [eax+10244], ecx

; 930  : 		lpObj->ZtCred += this->ZtHighStoneFifty;

  0013d	db 86 d4 00 00
	00		 fild	 DWORD PTR [esi+212]
  00143	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00149	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 931  : 		CountJewels = this->ZtHighStoneFifty;

  0014f	8b b6 d4 00 00
	00		 mov	 esi, DWORD PTR [esi+212]
  00155	eb 26		 jmp	 SHORT $LN1@exHighSton
$LN4@exHighSton:

; 932  : 	}
; 933  : 	else if (Count == 100)

  00157	83 ff 64	 cmp	 edi, 100		; 00000064H
  0015a	75 3e		 jne	 SHORT $LN2@exHighSton

; 934  : 	{
; 935  : 		lpObj->HighStoneBank -= Count;

  0015c	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  0015f	89 88 04 28 00
	00		 mov	 DWORD PTR [eax+10244], ecx

; 936  : 		lpObj->ZtCred += this->ZtHighStoneHundred;

  00165	db 86 d8 00 00
	00		 fild	 DWORD PTR [esi+216]
  0016b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00171	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 937  : 		CountJewels = this->ZtHighStoneHundred;

  00177	8b b6 d8 00 00
	00		 mov	 esi, DWORD PTR [esi+216]
$LN1@exHighSton:

; 942  : 		return;
; 943  : 	}
; 944  : 
; 945  : 	ZtUserDataSend(aIndex);

  0017d	53		 push	 ebx
  0017e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 946  : 
; 947  : 	MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of HighStone Added %d Credits " ,Count, CountJewels);

  00183	56		 push	 esi
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@EJIDHDNP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 948  : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exHighSton:

; 938  : 	}
; 939  : 	else
; 940  : 	{
; 941  : 		MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exHighSton:
  001aa	5e		 pop	 esi

; 948  : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exHighStone@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exHighStone
_TEXT	ENDS
PUBLIC	??_C@_0DN@JCDPKPDP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ ; `string'
PUBLIC	??_C@_0BM@KDIPIPDJ@?$FLJewelsBank?$FN?5No?5?$CFd?5GemStone?$AA@ ; `string'
PUBLIC	?exGemStone@JewelsBank@@QAEXHH@Z		; JewelsBank::exGemStone
;	COMDAT ??_C@_0DN@JCDPKPDP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
CONST	SEGMENT
??_C@_0DN@JCDPKPDP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@ DB '[Je'
	DB	'welsBank] Exchange %d Jewel of GemStone Added %d Credits ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KDIPIPDJ@?$FLJewelsBank?$FN?5No?5?$CFd?5GemStone?$AA@
CONST	SEGMENT
??_C@_0BM@KDIPIPDJ@?$FLJewelsBank?$FN?5No?5?$CFd?5GemStone?$AA@ DB '[Jewe'
	DB	'lsBank] No %d GemStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?exGemStone@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?exGemStone@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::exGemStone, COMDAT
; _this$ = ecx

; 951  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 952  : 	if( !g_ZtLicense.CheckUser(eZtUB::Local3)  && 
; 953  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER1) &&
; 954  : 		!g_ZtLicense.CheckUser(eZtUB::SILVER2) && 
; 955  : 		!g_ZtLicense.CheckUser(eZtUB::drynea) )

  00006	6a 1c		 push	 28			; 0000001cH
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0000d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00012	84 c0		 test	 al, al
  00014	75 34		 jne	 SHORT $LN15@exGemStone
  00016	6a 07		 push	 7
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0001d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00022	84 c0		 test	 al, al
  00024	75 24		 jne	 SHORT $LN15@exGemStone
  00026	6a 08		 push	 8
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0002d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00032	84 c0		 test	 al, al
  00034	75 14		 jne	 SHORT $LN15@exGemStone
  00036	6a 01		 push	 1
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00042	84 c0		 test	 al, al
  00044	0f 84 60 01 00
	00		 je	 $LN16@exGemStone
$LN15@exGemStone:

; 956  : 	{
; 957  : 		return;
; 958  : 	}
; 959  : 
; 960  : 	if(!this->Enable) return;

  0004a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0004d	0f 84 57 01 00
	00		 je	 $LN16@exGemStone

; 961  : 
; 962  : 	LPOBJ lpObj = &gObj[aIndex];

  00053	53		 push	 ebx
  00054	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00057	8b c3		 mov	 eax, ebx
  00059	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	57		 push	 edi

; 963  : 
; 964  : 	if(lpObj->GemStoneBank < Count)

  00066	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  0006c	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  0006f	3b cf		 cmp	 ecx, edi
  00071	7d 16		 jge	 SHORT $LN13@exGemStone

; 965  : 	{
; 966  : 		MsgNormal(aIndex,"[JewelsBank] No %d GemStone",Count);

  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KDIPIPDJ@?$FLJewelsBank?$FN?5No?5?$CFd?5GemStone?$AA@
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00082	5f		 pop	 edi
  00083	5b		 pop	 ebx
  00084	5e		 pop	 esi

; 1017 : }

  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN13@exGemStone:

; 967  : 		return;
; 968  : 	}
; 969  : 
; 970  : 	int CountJewels = 0;
; 971  : 
; 972  : 	if (Count == 10)

  00089	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0008c	75 26		 jne	 SHORT $LN12@exGemStone

; 973  : 	{
; 974  : 		lpObj->GemStoneBank -= Count;

  0008e	83 c1 f6	 add	 ecx, -10		; fffffff6H
  00091	89 88 08 28 00
	00		 mov	 DWORD PTR [eax+10248], ecx

; 975  : 		lpObj->ZtCred += this->ZtGemStoneTeen;

  00097	db 86 dc 00 00
	00		 fild	 DWORD PTR [esi+220]
  0009d	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000a3	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 976  : 		CountJewels = this->ZtGemStoneTeen;

  000a9	8b b6 dc 00 00
	00		 mov	 esi, DWORD PTR [esi+220]
  000af	e9 c9 00 00 00	 jmp	 $LN1@exGemStone
$LN12@exGemStone:

; 977  : 	}
; 978  : 	else if (Count == 20)

  000b4	83 ff 14	 cmp	 edi, 20			; 00000014H
  000b7	75 26		 jne	 SHORT $LN10@exGemStone

; 979  : 	{
; 980  : 		lpObj->GemStoneBank -= Count;

  000b9	83 c1 ec	 add	 ecx, -20		; ffffffecH
  000bc	89 88 08 28 00
	00		 mov	 DWORD PTR [eax+10248], ecx

; 981  : 		lpObj->ZtCred += this->ZtGemStoneTwenty;

  000c2	db 86 e0 00 00
	00		 fild	 DWORD PTR [esi+224]
  000c8	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000ce	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 982  : 		CountJewels = this->ZtGemStoneTwenty;

  000d4	8b b6 e0 00 00
	00		 mov	 esi, DWORD PTR [esi+224]
  000da	e9 9e 00 00 00	 jmp	 $LN1@exGemStone
$LN10@exGemStone:

; 983  : 	}
; 984  : 	else if (Count == 30)

  000df	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  000e2	75 23		 jne	 SHORT $LN8@exGemStone

; 985  : 	{
; 986  : 		lpObj->GemStoneBank -= Count;

  000e4	83 c1 e2	 add	 ecx, -30		; ffffffe2H
  000e7	89 88 08 28 00
	00		 mov	 DWORD PTR [eax+10248], ecx

; 987  : 		lpObj->ZtCred += this->ZtGemStoneThirty;

  000ed	db 86 e4 00 00
	00		 fild	 DWORD PTR [esi+228]
  000f3	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  000f9	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 988  : 		CountJewels = this->ZtGemStoneThirty;

  000ff	8b b6 e4 00 00
	00		 mov	 esi, DWORD PTR [esi+228]
  00105	eb 76		 jmp	 SHORT $LN1@exGemStone
$LN8@exGemStone:

; 989  : 	}
; 990  : 	else if (Count == 40)

  00107	83 ff 28	 cmp	 edi, 40			; 00000028H
  0010a	75 23		 jne	 SHORT $LN6@exGemStone

; 991  : 	{
; 992  : 		lpObj->GemStoneBank -= Count;

  0010c	83 c1 d8	 add	 ecx, -40		; ffffffd8H
  0010f	89 88 08 28 00
	00		 mov	 DWORD PTR [eax+10248], ecx

; 993  : 		lpObj->ZtCred += this->ZtGemStoneForty;

  00115	db 86 e8 00 00
	00		 fild	 DWORD PTR [esi+232]
  0011b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00121	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 994  : 		CountJewels = this->ZtGemStoneForty;

  00127	8b b6 e8 00 00
	00		 mov	 esi, DWORD PTR [esi+232]
  0012d	eb 4e		 jmp	 SHORT $LN1@exGemStone
$LN6@exGemStone:

; 995  : 	}
; 996  : 	else if (Count == 50)

  0012f	83 ff 32	 cmp	 edi, 50			; 00000032H
  00132	75 23		 jne	 SHORT $LN4@exGemStone

; 997  : 	{
; 998  : 		lpObj->GemStoneBank -= Count;

  00134	83 c1 ce	 add	 ecx, -50		; ffffffceH
  00137	89 88 08 28 00
	00		 mov	 DWORD PTR [eax+10248], ecx

; 999  : 		lpObj->ZtCred += this->ZtGemStoneFifty;

  0013d	db 86 ec 00 00
	00		 fild	 DWORD PTR [esi+236]
  00143	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00149	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 1000 : 		CountJewels = this->ZtGemStoneFifty;

  0014f	8b b6 ec 00 00
	00		 mov	 esi, DWORD PTR [esi+236]
  00155	eb 26		 jmp	 SHORT $LN1@exGemStone
$LN4@exGemStone:

; 1001 : 	}
; 1002 : 	else if (Count == 100)

  00157	83 ff 64	 cmp	 edi, 100		; 00000064H
  0015a	75 3e		 jne	 SHORT $LN2@exGemStone

; 1003 : 	{
; 1004 : 		lpObj->GemStoneBank -= Count;

  0015c	83 c1 9c	 add	 ecx, -100		; ffffff9cH
  0015f	89 88 08 28 00
	00		 mov	 DWORD PTR [eax+10248], ecx

; 1005 : 		lpObj->ZtCred += this->ZtGemStoneHundred;

  00165	db 86 f0 00 00
	00		 fild	 DWORD PTR [esi+240]
  0016b	d8 80 a8 22 00
	00		 fadd	 DWORD PTR [eax+8872]
  00171	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 1006 : 		CountJewels = this->ZtGemStoneHundred;

  00177	8b b6 f0 00 00
	00		 mov	 esi, DWORD PTR [esi+240]
$LN1@exGemStone:

; 1011 : 		return;
; 1012 : 	}
; 1013 : 
; 1014 : 	ZtUserDataSend(aIndex);

  0017d	53		 push	 ebx
  0017e	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1015 : 
; 1016 : 	MsgNormal(aIndex,"[JewelsBank] Exchange %d Jewel of GemStone Added %d Credits " ,Count, CountJewels);

  00183	56		 push	 esi
  00184	57		 push	 edi
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JCDPKPDP@?$FLJewelsBank?$FN?5Exchange?5?$CFd?5Jewel?5o@
  0018a	53		 push	 ebx
  0018b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00190	83 c4 14	 add	 esp, 20			; 00000014H
  00193	5f		 pop	 edi
  00194	5b		 pop	 ebx
  00195	5e		 pop	 esi

; 1017 : }

  00196	5d		 pop	 ebp
  00197	c2 08 00	 ret	 8
$LN2@exGemStone:

; 1007 : 	}
; 1008 : 	else
; 1009 : 	{
; 1010 : 		MsgNormal(aIndex,"[JewelsBank] Exchange Only 10 20 30 40 50 100");

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ECEIAILJ@?$FLJewelsBank?$FN?5Exchange?5Only?510?520@
  0019f	53		 push	 ebx
  001a0	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001a5	83 c4 08	 add	 esp, 8
  001a8	5f		 pop	 edi
  001a9	5b		 pop	 ebx
$LN16@exGemStone:
  001aa	5e		 pop	 esi

; 1017 : }

  001ab	5d		 pop	 ebp
  001ac	c2 08 00	 ret	 8
?exGemStone@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::exGemStone
_TEXT	ENDS
PUBLIC	?sendzen@JewelsBank@@QAEXHH@Z			; JewelsBank::sendzen
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
; Function compile flags: /Ogtp
;	COMDAT ?sendzen@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendzen@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::sendzen, COMDAT
; _this$ = ecx

; 1024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1025 : 	LPOBJ lpUser = &gObj[aIndex];

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	8b c6		 mov	 eax, esi
  00009	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0000f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	57		 push	 edi

; 1026 : 	unsigned int M = 1000000 * Count;

  00016	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]

; 1027 : 	if(M > lpUser->Money) return;

  00019	8b 90 f0 00 00
	00		 mov	 edx, DWORD PTR [eax+240]
  0001f	8b cf		 mov	 ecx, edi
  00021	69 c9 40 42 0f
	00		 imul	 ecx, 1000000		; 000f4240H
  00027	3b ca		 cmp	 ecx, edx
  00029	77 1e		 ja	 SHORT $LN2@sendzen

; 1028 : 	lpUser->Money -= M;
; 1029 : 	lpUser->Zen += Count;

  0002b	01 b8 14 28 00
	00		 add	 DWORD PTR [eax+10260], edi
  00031	2b d1		 sub	 edx, ecx

; 1030 : 	GCMoneySend(aIndex,lpUser->Money);

  00033	52		 push	 edx
  00034	56		 push	 esi
  00035	89 90 f0 00 00
	00		 mov	 DWORD PTR [eax+240], edx
  0003b	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 1031 : 	ZtUserDataSend(aIndex);

  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@sendzen:
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi

; 1032 : }

  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?sendzen@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::sendzen
_TEXT	ENDS
PUBLIC	?recvzen@JewelsBank@@QAEXHH@Z			; JewelsBank::recvzen
; Function compile flags: /Ogtp
;	COMDAT ?recvzen@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvzen@JewelsBank@@QAEXHH@Z PROC			; JewelsBank::recvzen, COMDAT
; _this$ = ecx

; 1035 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1036 : 	LPOBJ lpUser = &gObj[aIndex];

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	8b c6		 mov	 eax, esi
  00009	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0000f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1037 : 	int M = 1000000;
; 1038 : 	unsigned long long totalzen = M + lpUser->Money;

  00015	8b 90 f0 00 00
	00		 mov	 edx, DWORD PTR [eax+240]
  0001b	81 c2 40 42 0f
	00		 add	 edx, 1000000		; 000f4240H

; 1039 : 	if(totalzen > MAX_ZEN) return;

  00021	81 fa 00 94 35
	77		 cmp	 edx, 2000000000		; 77359400H
  00027	77 2d		 ja	 SHORT $LN3@recvzen

; 1040 : 	if(Count > lpUser->Zen) return;

  00029	8b 88 14 28 00
	00		 mov	 ecx, DWORD PTR [eax+10260]
  0002f	57		 push	 edi
  00030	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00033	3b f9		 cmp	 edi, ecx
  00035	7f 1e		 jg	 SHORT $LN5@recvzen

; 1041 : 	lpUser->Money += M;
; 1042 : 	lpUser->Zen -= Count;
; 1043 : 	GCMoneySend(aIndex,lpUser->Money);

  00037	52		 push	 edx
  00038	2b cf		 sub	 ecx, edi
  0003a	56		 push	 esi
  0003b	89 90 f0 00 00
	00		 mov	 DWORD PTR [eax+240], edx
  00041	89 88 14 28 00
	00		 mov	 DWORD PTR [eax+10260], ecx
  00047	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 1044 : 	ZtUserDataSend(aIndex);

  0004c	56		 push	 esi
  0004d	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@recvzen:
  00055	5f		 pop	 edi
$LN3@recvzen:
  00056	5e		 pop	 esi

; 1045 : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
?recvzen@JewelsBank@@QAEXHH@Z ENDP			; JewelsBank::recvzen
_TEXT	ENDS
PUBLIC	??_C@_0BO@OLPOGNLA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Guardian?$AA@ ; `string'
PUBLIC	??_C@_0BO@DAOFPBCB@?$FLJewelsBank?$FN?5Need?5?$CFd?5Guardian?$AA@ ; `string'
PUBLIC	?sendGuardianBank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendGuardianBank
;	COMDAT ??_C@_0BO@OLPOGNLA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Guardian?$AA@
CONST	SEGMENT
??_C@_0BO@OLPOGNLA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Guardian?$AA@ DB '[Je'
	DB	'welsBank] Send %d Guardian', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DAOFPBCB@?$FLJewelsBank?$FN?5Need?5?$CFd?5Guardian?$AA@
CONST	SEGMENT
??_C@_0BO@DAOFPBCB@?$FLJewelsBank?$FN?5Need?5?$CFd?5Guardian?$AA@ DB '[Je'
	DB	'welsBank] Need %d Guardian', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendGuardianBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendGuardianBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendGuardianBank, COMDAT
; _this$ = ecx

; 1048 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1049 : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,31),0) < Count)

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	68 1f 1c 00 00	 push	 7199			; 00001c1fH
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1050 : 	{
; 1051 : 		MsgNormal(aIndex,"[JewelsBank] Need %d Guardian",Count);

  0001b	57		 push	 edi
  0001c	3b c7		 cmp	 eax, edi
  0001e	7d 14		 jge	 SHORT $LN1@sendGuardi
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DAOFPBCB@?$FLJewelsBank?$FN?5Need?5?$CFd?5Guardian?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 1060 : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN1@sendGuardi:

; 1052 : 		return;
; 1053 : 	}
; 1054 : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,31),0,Count);

  00034	6a 00		 push	 0
  00036	68 1f 1c 00 00	 push	 7199			; 00001c1fH
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 1055 : 	LPOBJ lpObj = &gObj[aIndex];

  00041	8b c6		 mov	 eax, esi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1056 : 	lpObj->GuardianBank += Count;
; 1057 : 	ZtUserDataSend(aIndex);

  0004f	56		 push	 esi
  00050	01 b8 f8 27 00
	00		 add	 DWORD PTR [eax+10232], edi
  00056	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1058 : 
; 1059 : 	MsgNormal(aIndex,"[JewelsBank] Send %d Guardian",Count);

  0005b	57		 push	 edi
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@OLPOGNLA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Guardian?$AA@
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00067	83 c4 20	 add	 esp, 32			; 00000020H
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi

; 1060 : }

  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?sendGuardianBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendGuardianBank
_TEXT	ENDS
PUBLIC	??_C@_0BN@CHEHBAFA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Harmony?$AA@ ; `string'
PUBLIC	??_C@_0BN@IHBCFHHK@?$FLJewelsBank?$FN?5Need?5?$CFd?5Harmony?$AA@ ; `string'
PUBLIC	?sendHarmonyBank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendHarmonyBank
;	COMDAT ??_C@_0BN@CHEHBAFA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Harmony?$AA@
CONST	SEGMENT
??_C@_0BN@CHEHBAFA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Harmony?$AA@ DB '[Jew'
	DB	'elsBank] Send %d Harmony', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IHBCFHHK@?$FLJewelsBank?$FN?5Need?5?$CFd?5Harmony?$AA@
CONST	SEGMENT
??_C@_0BN@IHBCFHHK@?$FLJewelsBank?$FN?5Need?5?$CFd?5Harmony?$AA@ DB '[Jew'
	DB	'elsBank] Need %d Harmony', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendHarmonyBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendHarmonyBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendHarmonyBank, COMDAT
; _this$ = ecx

; 1063 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1064 : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,42),0) < Count)

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	68 2a 1c 00 00	 push	 7210			; 00001c2aH
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1065 : 	{
; 1066 : 		MsgNormal(aIndex,"[JewelsBank] Need %d Harmony",Count);

  0001b	57		 push	 edi
  0001c	3b c7		 cmp	 eax, edi
  0001e	7d 14		 jge	 SHORT $LN1@sendHarmon
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IHBCFHHK@?$FLJewelsBank?$FN?5Need?5?$CFd?5Harmony?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 1075 : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN1@sendHarmon:

; 1067 : 		return;
; 1068 : 	}
; 1069 : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,42),0,Count);

  00034	6a 00		 push	 0
  00036	68 2a 1c 00 00	 push	 7210			; 00001c2aH
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 1070 : 	LPOBJ lpObj = &gObj[aIndex];

  00041	8b c6		 mov	 eax, esi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1071 : 	lpObj->HarmonyBank += Count;
; 1072 : 	ZtUserDataSend(aIndex);

  0004f	56		 push	 esi
  00050	01 b8 fc 27 00
	00		 add	 DWORD PTR [eax+10236], edi
  00056	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1073 : 
; 1074 : 	MsgNormal(aIndex,"[JewelsBank] Send %d Harmony",Count);

  0005b	57		 push	 edi
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@CHEHBAFA@?$FLJewelsBank?$FN?5Send?5?$CFd?5Harmony?$AA@
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00067	83 c4 20	 add	 esp, 32			; 00000020H
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi

; 1075 : }

  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?sendHarmonyBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendHarmonyBank
_TEXT	ENDS
PUBLIC	??_C@_0BO@OBANPHEB@?$FLJewelsBank?$FN?5Send?5?$CFd?5LowStone?$AA@ ; `string'
PUBLIC	??_C@_0BO@DKBGGLNA@?$FLJewelsBank?$FN?5Need?5?$CFd?5LowStone?$AA@ ; `string'
PUBLIC	?sendLowStoneBank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendLowStoneBank
;	COMDAT ??_C@_0BO@OBANPHEB@?$FLJewelsBank?$FN?5Send?5?$CFd?5LowStone?$AA@
CONST	SEGMENT
??_C@_0BO@OBANPHEB@?$FLJewelsBank?$FN?5Send?5?$CFd?5LowStone?$AA@ DB '[Je'
	DB	'welsBank] Send %d LowStone', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DKBGGLNA@?$FLJewelsBank?$FN?5Need?5?$CFd?5LowStone?$AA@
CONST	SEGMENT
??_C@_0BO@DKBGGLNA@?$FLJewelsBank?$FN?5Need?5?$CFd?5LowStone?$AA@ DB '[Je'
	DB	'welsBank] Need %d LowStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendLowStoneBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendLowStoneBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendLowStoneBank, COMDAT
; _this$ = ecx

; 1078 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1079 : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,43),0) < Count)

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	68 2b 1c 00 00	 push	 7211			; 00001c2bH
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1080 : 	{
; 1081 : 		MsgNormal(aIndex,"[JewelsBank] Need %d LowStone",Count);

  0001b	57		 push	 edi
  0001c	3b c7		 cmp	 eax, edi
  0001e	7d 14		 jge	 SHORT $LN1@sendLowSto
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DKBGGLNA@?$FLJewelsBank?$FN?5Need?5?$CFd?5LowStone?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 1090 : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN1@sendLowSto:

; 1082 : 		return;
; 1083 : 	}
; 1084 : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,43),0,Count);

  00034	6a 00		 push	 0
  00036	68 2b 1c 00 00	 push	 7211			; 00001c2bH
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 1085 : 	LPOBJ lpObj = &gObj[aIndex];

  00041	8b c6		 mov	 eax, esi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1086 : 	lpObj->LowStoneBank += Count;
; 1087 : 	ZtUserDataSend(aIndex);

  0004f	56		 push	 esi
  00050	01 b8 00 28 00
	00		 add	 DWORD PTR [eax+10240], edi
  00056	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1088 : 
; 1089 : 	MsgNormal(aIndex,"[JewelsBank] Send %d LowStone",Count);

  0005b	57		 push	 edi
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@OBANPHEB@?$FLJewelsBank?$FN?5Send?5?$CFd?5LowStone?$AA@
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00067	83 c4 20	 add	 esp, 32			; 00000020H
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi

; 1090 : }

  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?sendLowStoneBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendLowStoneBank
_TEXT	ENDS
PUBLIC	??_C@_0BP@MOOOBPJ@?$FLJewelsBank?$FN?5Send?5?$CFd?5HighStone?$AA@ ; `string'
PUBLIC	??_C@_0BP@ILDNFJLH@?$FLJewelsBank?$FN?5Need?5?$CFd?5HighStone?$AA@ ; `string'
PUBLIC	?sendHighStoneBank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendHighStoneBank
;	COMDAT ??_C@_0BP@MOOOBPJ@?$FLJewelsBank?$FN?5Send?5?$CFd?5HighStone?$AA@
CONST	SEGMENT
??_C@_0BP@MOOOBPJ@?$FLJewelsBank?$FN?5Send?5?$CFd?5HighStone?$AA@ DB '[Je'
	DB	'welsBank] Send %d HighStone', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@ILDNFJLH@?$FLJewelsBank?$FN?5Need?5?$CFd?5HighStone?$AA@
CONST	SEGMENT
??_C@_0BP@ILDNFJLH@?$FLJewelsBank?$FN?5Need?5?$CFd?5HighStone?$AA@ DB '[J'
	DB	'ewelsBank] Need %d HighStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendHighStoneBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendHighStoneBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendHighStoneBank, COMDAT
; _this$ = ecx

; 1093 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1094 : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,44),0) < Count)

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	68 2c 1c 00 00	 push	 7212			; 00001c2cH
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1095 : 	{
; 1096 : 		MsgNormal(aIndex,"[JewelsBank] Need %d HighStone",Count);

  0001b	57		 push	 edi
  0001c	3b c7		 cmp	 eax, edi
  0001e	7d 14		 jge	 SHORT $LN1@sendHighSt
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@ILDNFJLH@?$FLJewelsBank?$FN?5Need?5?$CFd?5HighStone?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 1105 : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN1@sendHighSt:

; 1097 : 		return;
; 1098 : 	}
; 1099 : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,44),0,Count);

  00034	6a 00		 push	 0
  00036	68 2c 1c 00 00	 push	 7212			; 00001c2cH
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 1100 : 	LPOBJ lpObj = &gObj[aIndex];

  00041	8b c6		 mov	 eax, esi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1101 : 	lpObj->HighStoneBank += Count;
; 1102 : 	ZtUserDataSend(aIndex);

  0004f	56		 push	 esi
  00050	01 b8 04 28 00
	00		 add	 DWORD PTR [eax+10244], edi
  00056	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1103 : 
; 1104 : 	MsgNormal(aIndex,"[JewelsBank] Send %d HighStone",Count);

  0005b	57		 push	 edi
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MOOOBPJ@?$FLJewelsBank?$FN?5Send?5?$CFd?5HighStone?$AA@
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00067	83 c4 20	 add	 esp, 32			; 00000020H
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi

; 1105 : }

  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?sendHighStoneBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendHighStoneBank
_TEXT	ENDS
PUBLIC	??_C@_0CC@NFMOPCCK@?$FLJewelsBank?$FN?5Send?5?$CFd?5GemStoneBan@ ; `string'
PUBLIC	??_C@_0CC@JMAMPFLJ@?$FLJewelsBank?$FN?5Need?5?$CFd?5GemStoneBan@ ; `string'
PUBLIC	?sendGemStoneBank@JewelsBank@@QAEXHH@Z		; JewelsBank::sendGemStoneBank
;	COMDAT ??_C@_0CC@NFMOPCCK@?$FLJewelsBank?$FN?5Send?5?$CFd?5GemStoneBan@
CONST	SEGMENT
??_C@_0CC@NFMOPCCK@?$FLJewelsBank?$FN?5Send?5?$CFd?5GemStoneBan@ DB '[Jew'
	DB	'elsBank] Send %d GemStoneBank', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JMAMPFLJ@?$FLJewelsBank?$FN?5Need?5?$CFd?5GemStoneBan@
CONST	SEGMENT
??_C@_0CC@JMAMPFLJ@?$FLJewelsBank?$FN?5Need?5?$CFd?5GemStoneBan@ DB '[Jew'
	DB	'elsBank] Need %d GemStoneBank', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?sendGemStoneBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?sendGemStoneBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::sendGemStoneBank, COMDAT
; _this$ = ecx

; 1108 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1109 : 	if(gObjGetItemCountInInventory(aIndex,ITEMGET(14,41),0) < Count)

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	68 29 1c 00 00	 push	 7209			; 00001c29H
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _Count$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1110 : 	{
; 1111 : 		MsgNormal(aIndex,"[JewelsBank] Need %d GemStoneBank",Count);

  0001b	57		 push	 edi
  0001c	3b c7		 cmp	 eax, edi
  0001e	7d 14		 jge	 SHORT $LN1@sendGemSto
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JMAMPFLJ@?$FLJewelsBank?$FN?5Need?5?$CFd?5GemStoneBan@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 1120 : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN1@sendGemSto:

; 1112 : 		return;
; 1113 : 	}
; 1114 : 	gObjDeleteItemsCount(aIndex,ITEMGET(14,41),0,Count);

  00034	6a 00		 push	 0
  00036	68 29 1c 00 00	 push	 7209			; 00001c29H
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 1115 : 	LPOBJ lpObj = &gObj[aIndex];

  00041	8b c6		 mov	 eax, esi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1116 : 	lpObj->GemStoneBank += Count;
; 1117 : 	ZtUserDataSend(aIndex);

  0004f	56		 push	 esi
  00050	01 b8 08 28 00
	00		 add	 DWORD PTR [eax+10248], edi
  00056	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1118 : 
; 1119 : 	MsgNormal(aIndex,"[JewelsBank] Send %d GemStoneBank",Count);

  0005b	57		 push	 edi
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@NFMOPCCK@?$FLJewelsBank?$FN?5Send?5?$CFd?5GemStoneBan@
  00061	56		 push	 esi
  00062	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00067	83 c4 20	 add	 esp, 32			; 00000020H
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi

; 1120 : }

  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?sendGemStoneBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::sendGemStoneBank
_TEXT	ENDS
PUBLIC	??_C@_0BO@BHIKCMDO@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Guardian?$AA@ ; `string'
PUBLIC	?recvGuardianBank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvGuardianBank
;	COMDAT ??_C@_0BO@BHIKCMDO@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Guardian?$AA@
CONST	SEGMENT
??_C@_0BO@BHIKCMDO@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Guardian?$AA@ DB '[Je'
	DB	'welsBank] Recv %d Guardian', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvGuardianBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvGuardianBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvGuardianBank, COMDAT
; _this$ = ecx

; 1125 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1126 : 	LPOBJ lpObj = &gObj[aIndex];
; 1127 : 	if(lpObj->GuardianBank < Count)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0000c	8b f7		 mov	 esi, edi
  0000e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00014	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	39 9e f8 27 00
	00		 cmp	 DWORD PTR [esi+10232], ebx
  00020	7d 16		 jge	 SHORT $LN5@recvGuardi

; 1128 : 	{
; 1129 : 		MsgNormal(aIndex,"[JewelsBank] No %d Guardian",Count);

  00022	53		 push	 ebx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HJEHFEFN@?$FLJewelsBank?$FN?5No?5?$CFd?5Guardian?$AA@
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1145 : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN5@recvGuardi:

; 1130 : 		return;
; 1131 : 	}
; 1132 : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  0003e	83 c4 04	 add	 esp, 4
  00041	3b c3		 cmp	 eax, ebx
  00043	7d 16		 jge	 SHORT $LN4@recvGuardi

; 1133 : 	{
; 1134 : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);

  00045	53		 push	 ebx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx

; 1145 : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
$LN4@recvGuardi:

; 1135 : 		return;
; 1136 : 	}
; 1137 : 	lpObj->GuardianBank -= Count;

  0005b	29 9e f8 27 00
	00		 sub	 DWORD PTR [esi+10232], ebx

; 1138 : 	for(int i=0;i<Count;i++)

  00061	85 db		 test	 ebx, ebx
  00063	7e 43		 jle	 SHORT $LN1@recvGuardi
  00065	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL10@recvGuardi:

; 1139 : 	{
; 1140 : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,31),0,0,0,0,0,aIndex,0,0);

  00070	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00077	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	57		 push	 edi
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 1f 1c 00 00	 push	 7199			; 00001c1fH
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 eb 00 00 00	 push	 235			; 000000ebH
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0009f	83 c4 34	 add	 esp, 52			; 00000034H
  000a2	4b		 dec	 ebx
  000a3	75 cb		 jne	 SHORT $LL10@recvGuardi

; 1138 : 	for(int i=0;i<Count;i++)

  000a5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvGuardi:

; 1141 : 	}
; 1142 : 	ZtUserDataSend(aIndex);

  000a8	57		 push	 edi
  000a9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1143 : 
; 1144 : 	MsgNormal(aIndex,"[JewelsBank] Recv %d Guardian",Count);

  000ae	53		 push	 ebx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BHIKCMDO@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Guardian?$AA@
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 1145 : }

  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?recvGuardianBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvGuardianBank
_TEXT	ENDS
PUBLIC	??_C@_0BN@OKIOOCAL@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Harmony?$AA@ ; `string'
PUBLIC	?recvHarmonyBank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvHarmonyBank
;	COMDAT ??_C@_0BN@OKIOOCAL@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Harmony?$AA@
CONST	SEGMENT
??_C@_0BN@OKIOOCAL@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Harmony?$AA@ DB '[Jew'
	DB	'elsBank] Recv %d Harmony', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvHarmonyBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvHarmonyBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvHarmonyBank, COMDAT
; _this$ = ecx

; 1148 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1149 : 	LPOBJ lpObj = &gObj[aIndex];
; 1150 : 	if(lpObj->HarmonyBank < Count)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0000c	8b f7		 mov	 esi, edi
  0000e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00014	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	39 9e fc 27 00
	00		 cmp	 DWORD PTR [esi+10236], ebx
  00020	7d 16		 jge	 SHORT $LN5@recvHarmon

; 1151 : 	{
; 1152 : 		MsgNormal(aIndex,"[JewelsBank] No %d Harmony",Count);

  00022	53		 push	 ebx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EMPAGGJM@?$FLJewelsBank?$FN?5No?5?$CFd?5Harmony?$AA@
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1168 : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN5@recvHarmon:

; 1153 : 		return;
; 1154 : 	}
; 1155 : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  0003e	83 c4 04	 add	 esp, 4
  00041	3b c3		 cmp	 eax, ebx
  00043	7d 16		 jge	 SHORT $LN4@recvHarmon

; 1156 : 	{
; 1157 : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);

  00045	53		 push	 ebx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx

; 1168 : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
$LN4@recvHarmon:

; 1158 : 		return;
; 1159 : 	}
; 1160 : 	lpObj->HarmonyBank -= Count;

  0005b	29 9e fc 27 00
	00		 sub	 DWORD PTR [esi+10236], ebx

; 1161 : 	for(int i=0;i<Count;i++)

  00061	85 db		 test	 ebx, ebx
  00063	7e 43		 jle	 SHORT $LN1@recvHarmon
  00065	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL10@recvHarmon:

; 1162 : 	{
; 1163 : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,42),0,0,0,0,0,aIndex,0,0);

  00070	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00077	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	57		 push	 edi
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 2a 1c 00 00	 push	 7210			; 00001c2aH
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 eb 00 00 00	 push	 235			; 000000ebH
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0009f	83 c4 34	 add	 esp, 52			; 00000034H
  000a2	4b		 dec	 ebx
  000a3	75 cb		 jne	 SHORT $LL10@recvHarmon

; 1161 : 	for(int i=0;i<Count;i++)

  000a5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvHarmon:

; 1164 : 	}
; 1165 : 	ZtUserDataSend(aIndex);

  000a8	57		 push	 edi
  000a9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1166 : 
; 1167 : 	MsgNormal(aIndex,"[JewelsBank] Recv %d Harmony",Count);

  000ae	53		 push	 ebx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OKIOOCAL@?$FLJewelsBank?$FN?5Recv?5?$CFd?5Harmony?$AA@
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 1168 : }

  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?recvHarmonyBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvHarmonyBank
_TEXT	ENDS
PUBLIC	??_C@_0BO@BNHJLGMP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5LowStone?$AA@ ; `string'
PUBLIC	?recvLowStoneBank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvLowStoneBank
;	COMDAT ??_C@_0BO@BNHJLGMP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5LowStone?$AA@
CONST	SEGMENT
??_C@_0BO@BNHJLGMP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5LowStone?$AA@ DB '[Je'
	DB	'welsBank] Recv %d LowStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvLowStoneBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvLowStoneBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvLowStoneBank, COMDAT
; _this$ = ecx

; 1171 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1172 : 	LPOBJ lpObj = &gObj[aIndex];
; 1173 : 	if(lpObj->LowStoneBank < Count)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0000c	8b f7		 mov	 esi, edi
  0000e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00014	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	39 9e 00 28 00
	00		 cmp	 DWORD PTR [esi+10240], ebx
  00020	7d 16		 jge	 SHORT $LN5@recvLowSto

; 1174 : 	{
; 1175 : 		MsgNormal(aIndex,"[JewelsBank] No %d LowStone",Count);

  00022	53		 push	 ebx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HDLEMOKM@?$FLJewelsBank?$FN?5No?5?$CFd?5LowStone?$AA@
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1191 : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN5@recvLowSto:

; 1176 : 		return;
; 1177 : 	}
; 1178 : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  0003e	83 c4 04	 add	 esp, 4
  00041	3b c3		 cmp	 eax, ebx
  00043	7d 16		 jge	 SHORT $LN4@recvLowSto

; 1179 : 	{
; 1180 : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);

  00045	53		 push	 ebx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx

; 1191 : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
$LN4@recvLowSto:

; 1181 : 		return;
; 1182 : 	}
; 1183 : 	lpObj->LowStoneBank -= Count;

  0005b	29 9e 00 28 00
	00		 sub	 DWORD PTR [esi+10240], ebx

; 1184 : 	for(int i=0;i<Count;i++)

  00061	85 db		 test	 ebx, ebx
  00063	7e 43		 jle	 SHORT $LN1@recvLowSto
  00065	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL10@recvLowSto:

; 1185 : 	{
; 1186 : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,43),0,0,0,0,0,aIndex,0,0);

  00070	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00077	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	57		 push	 edi
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 2b 1c 00 00	 push	 7211			; 00001c2bH
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 eb 00 00 00	 push	 235			; 000000ebH
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0009f	83 c4 34	 add	 esp, 52			; 00000034H
  000a2	4b		 dec	 ebx
  000a3	75 cb		 jne	 SHORT $LL10@recvLowSto

; 1184 : 	for(int i=0;i<Count;i++)

  000a5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvLowSto:

; 1187 : 	}
; 1188 : 	ZtUserDataSend(aIndex);

  000a8	57		 push	 edi
  000a9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1189 : 
; 1190 : 	MsgNormal(aIndex,"[JewelsBank] Recv %d LowStone",Count);

  000ae	53		 push	 ebx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BNHJLGMP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5LowStone?$AA@
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 1191 : }

  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?recvLowStoneBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvLowStoneBank
_TEXT	ENDS
PUBLIC	??_C@_0BP@GBCDLJP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5HighStone?$AA@ ; `string'
PUBLIC	?recvHighStoneBank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvHighStoneBank
;	COMDAT ??_C@_0BP@GBCDLJP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5HighStone?$AA@
CONST	SEGMENT
??_C@_0BP@GBCDLJP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5HighStone?$AA@ DB '[Je'
	DB	'welsBank] Recv %d HighStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvHighStoneBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvHighStoneBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvHighStoneBank, COMDAT
; _this$ = ecx

; 1194 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1195 : 	LPOBJ lpObj = &gObj[aIndex];
; 1196 : 	if(lpObj->HighStoneBank < Count)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0000c	8b f7		 mov	 esi, edi
  0000e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00014	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	39 9e 04 28 00
	00		 cmp	 DWORD PTR [esi+10244], ebx
  00020	7d 16		 jge	 SHORT $LN5@recvHighSt

; 1197 : 	{
; 1198 : 		MsgNormal(aIndex,"[JewelsBank] No %d HighStone",Count);

  00022	53		 push	 ebx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@NCMHMGAF@?$FLJewelsBank?$FN?5No?5?$CFd?5HighStone?$AA@
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1214 : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN5@recvHighSt:

; 1199 : 		return;
; 1200 : 	}
; 1201 : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  0003e	83 c4 04	 add	 esp, 4
  00041	3b c3		 cmp	 eax, ebx
  00043	7d 16		 jge	 SHORT $LN4@recvHighSt

; 1202 : 	{
; 1203 : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);

  00045	53		 push	 ebx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx

; 1214 : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
$LN4@recvHighSt:

; 1204 : 		return;
; 1205 : 	}
; 1206 : 	lpObj->HighStoneBank -= Count;

  0005b	29 9e 04 28 00
	00		 sub	 DWORD PTR [esi+10244], ebx

; 1207 : 	for(int i=0;i<Count;i++)

  00061	85 db		 test	 ebx, ebx
  00063	7e 43		 jle	 SHORT $LN1@recvHighSt
  00065	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL10@recvHighSt:

; 1208 : 	{
; 1209 : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,44),0,0,0,0,0,aIndex,0,0);

  00070	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00077	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	57		 push	 edi
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 2c 1c 00 00	 push	 7212			; 00001c2cH
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 eb 00 00 00	 push	 235			; 000000ebH
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0009f	83 c4 34	 add	 esp, 52			; 00000034H
  000a2	4b		 dec	 ebx
  000a3	75 cb		 jne	 SHORT $LL10@recvHighSt

; 1207 : 	for(int i=0;i<Count;i++)

  000a5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvHighSt:

; 1210 : 	}
; 1211 : 	ZtUserDataSend(aIndex);

  000a8	57		 push	 edi
  000a9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1212 : 
; 1213 : 	MsgNormal(aIndex,"[JewelsBank] Recv %d HighStone",Count);

  000ae	53		 push	 ebx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GBCDLJP@?$FLJewelsBank?$FN?5Recv?5?$CFd?5HighStone?$AA@
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 1214 : }

  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?recvHighStoneBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvHighStoneBank
_TEXT	ENDS
PUBLIC	??_C@_0BO@MNECPHFK@?$FLJewelsBank?$FN?5Recv?5?$CFd?5GemStone?$AA@ ; `string'
PUBLIC	?recvGemStoneBank@JewelsBank@@QAEXHH@Z		; JewelsBank::recvGemStoneBank
;	COMDAT ??_C@_0BO@MNECPHFK@?$FLJewelsBank?$FN?5Recv?5?$CFd?5GemStone?$AA@
CONST	SEGMENT
??_C@_0BO@MNECPHFK@?$FLJewelsBank?$FN?5Recv?5?$CFd?5GemStone?$AA@ DB '[Je'
	DB	'welsBank] Recv %d GemStone', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?recvGemStoneBank@JewelsBank@@QAEXHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Count$ = 12						; size = 4
?recvGemStoneBank@JewelsBank@@QAEXHH@Z PROC		; JewelsBank::recvGemStoneBank, COMDAT
; _this$ = ecx

; 1217 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1218 : 	LPOBJ lpObj = &gObj[aIndex];
; 1219 : 	if(lpObj->GemStoneBank < Count)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0000c	8b f7		 mov	 esi, edi
  0000e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00014	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	39 9e 08 28 00
	00		 cmp	 DWORD PTR [esi+10248], ebx
  00020	7d 16		 jge	 SHORT $LN5@recvGemSto

; 1220 : 	{
; 1221 : 		MsgNormal(aIndex,"[JewelsBank] No %d GemStone",Count);

  00022	53		 push	 ebx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KDIPIPDJ@?$FLJewelsBank?$FN?5No?5?$CFd?5GemStone?$AA@
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1237 : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN5@recvGemSto:

; 1222 : 		return;
; 1223 : 	}
; 1224 : 	if(ExCheckInventoryEmptySpace(aIndex) < Count)

  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 ?ExCheckInventoryEmptySpace@@YAHH@Z ; ExCheckInventoryEmptySpace
  0003e	83 c4 04	 add	 esp, 4
  00041	3b c3		 cmp	 eax, ebx
  00043	7d 16		 jge	 SHORT $LN4@recvGemSto

; 1225 : 	{
; 1226 : 		MsgNormal(aIndex,"[JewelsBank] Inventory %d",Count);

  00045	53		 push	 ebx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KJOAAKB@?$FLJewelsBank?$FN?5Inventory?5?$CFd?$AA@
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx

; 1237 : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
$LN4@recvGemSto:

; 1227 : 		return;
; 1228 : 	}
; 1229 : 	lpObj->GemStoneBank -= Count;

  0005b	29 9e 08 28 00
	00		 sub	 DWORD PTR [esi+10248], ebx

; 1230 : 	for(int i=0;i<Count;i++)

  00061	85 db		 test	 ebx, ebx
  00063	7e 43		 jle	 SHORT $LN1@recvGemSto
  00065	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL10@recvGemSto:

; 1231 : 	{
; 1232 : 		ItemSerialCreateSend(aIndex,235,lpObj->X,lpObj->Y,ITEMGET(14,41),0,0,0,0,0,aIndex,0,0);

  00070	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  00077	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	57		 push	 edi
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 29 1c 00 00	 push	 7209			; 00001c29H
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 eb 00 00 00	 push	 235			; 000000ebH
  00099	57		 push	 edi
  0009a	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0009f	83 c4 34	 add	 esp, 52			; 00000034H
  000a2	4b		 dec	 ebx
  000a3	75 cb		 jne	 SHORT $LL10@recvGemSto

; 1230 : 	for(int i=0;i<Count;i++)

  000a5	8b 5d 0c	 mov	 ebx, DWORD PTR _Count$[ebp]
$LN1@recvGemSto:

; 1233 : 	}
; 1234 : 	ZtUserDataSend(aIndex);

  000a8	57		 push	 edi
  000a9	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1235 : 
; 1236 : 	MsgNormal(aIndex,"[JewelsBank] Recv %d GemStone",Count);

  000ae	53		 push	 ebx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@MNECPHFK@?$FLJewelsBank?$FN?5Recv?5?$CFd?5GemStone?$AA@
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 1237 : }

  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?recvGemStoneBank@JewelsBank@@QAEXHH@Z ENDP		; JewelsBank::recvGemStoneBank
_TEXT	ENDS
PUBLIC	?Packet@JewelsBank@@QAEXHPAUPMSG_JEWELBANK@@@Z	; JewelsBank::Packet
; Function compile flags: /Ogtp
;	COMDAT ?Packet@JewelsBank@@QAEXHPAUPMSG_JEWELBANK@@@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_lpMsg$ = 12						; size = 4
?Packet@JewelsBank@@QAEXHPAUPMSG_JEWELBANK@@@Z PROC	; JewelsBank::Packet, COMDAT
; _this$ = ecx

; 1240 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1241 : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 37 01 00
	00		 je	 $LN23@Packet

; 1242 : 	{
; 1243 : 		return;
; 1244 : 	}
; 1245 : 
; 1246 : 	if(!OBJMAX_RANGE(aIndex))

  0000c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000f	85 c0		 test	 eax, eax
  00011	0f 88 2c 01 00
	00		 js	 $LN23@Packet
  00017	33 d2		 xor	 edx, edx
  00019	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001e	0f 9e c2	 setle	 dl
  00021	85 d2		 test	 edx, edx
  00023	0f 84 1a 01 00
	00		 je	 $LN23@Packet

; 1247 : 	{
; 1248 : 		return;
; 1249 : 	}
; 1250 : 
; 1251 : 	LPOBJ lpUser = &gObj[aIndex];
; 1252 : 
; 1253 : 	switch(lpMsg->Result)

  00029	8b 55 0c	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0002c	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0002f	83 fa 15	 cmp	 edx, 21			; 00000015H
  00032	0f 87 0b 01 00
	00		 ja	 $LN23@Packet
  00038	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN31@Packet[edx*4]
$LN22@Packet:

; 1254 : 	{
; 1255 : 		case 0:		this->sendzen(aIndex, 1);				break;

  0003f	6a 01		 push	 1
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?sendzen@JewelsBank@@QAEXHH@Z ; JewelsBank::sendzen

; 1278 : 	}
; 1279 : }

  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
$LN21@Packet:

; 1256 : 		case 1:		this->sendchaosbank(aIndex, 1);			break;

  0004b	6a 01		 push	 1
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?sendchaosbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendchaosbank

; 1278 : 	}
; 1279 : }

  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
$LN20@Packet:

; 1257 : 		case 2:		this->sendblessbank(aIndex, 1);			break;

  00057	6a 01		 push	 1
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?sendblessbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendblessbank

; 1278 : 	}
; 1279 : }

  0005f	5d		 pop	 ebp
  00060	c2 08 00	 ret	 8
$LN19@Packet:

; 1258 : 		case 3:		this->sendsoulbank(aIndex, 1);			break;

  00063	6a 01		 push	 1
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?sendsoulbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendsoulbank

; 1278 : 	}
; 1279 : }

  0006b	5d		 pop	 ebp
  0006c	c2 08 00	 ret	 8
$LN18@Packet:

; 1259 : 		case 4:		this->sendlifebank(aIndex, 1);			break;

  0006f	6a 01		 push	 1
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?sendlifebank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendlifebank

; 1278 : 	}
; 1279 : }

  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
$LN17@Packet:

; 1260 : 		case 5:		this->sendcreateonbank(aIndex, 1);		break;

  0007b	6a 01		 push	 1
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?sendcreateonbank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendcreateonbank

; 1278 : 	}
; 1279 : }

  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
$LN16@Packet:

; 1261 : 		case 6:		this->sendGuardianBank(aIndex, 1);		break;

  00087	6a 01		 push	 1
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?sendGuardianBank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendGuardianBank

; 1278 : 	}
; 1279 : }

  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
$LN15@Packet:

; 1262 : 		case 7:		this->sendHarmonyBank(aIndex, 1);		break;

  00093	6a 01		 push	 1
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?sendHarmonyBank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendHarmonyBank

; 1278 : 	}
; 1279 : }

  0009b	5d		 pop	 ebp
  0009c	c2 08 00	 ret	 8
$LN14@Packet:

; 1263 : 		case 8:		this->sendLowStoneBank(aIndex, 1);		break;

  0009f	6a 01		 push	 1
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?sendLowStoneBank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendLowStoneBank

; 1278 : 	}
; 1279 : }

  000a7	5d		 pop	 ebp
  000a8	c2 08 00	 ret	 8
$LN13@Packet:

; 1264 : 		case 9:		this->sendHighStoneBank(aIndex, 1);		break;

  000ab	6a 01		 push	 1
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?sendHighStoneBank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendHighStoneBank

; 1278 : 	}
; 1279 : }

  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
$LN12@Packet:

; 1265 : 		case 10:	this->sendGemStoneBank(aIndex, 1);		break;

  000b7	6a 01		 push	 1
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?sendGemStoneBank@JewelsBank@@QAEXHH@Z ; JewelsBank::sendGemStoneBank

; 1278 : 	}
; 1279 : }

  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN11@Packet:

; 1266 : 
; 1267 : 		case 11:	this->recvzen(aIndex, 1);				break;

  000c3	6a 01		 push	 1
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?recvzen@JewelsBank@@QAEXHH@Z ; JewelsBank::recvzen

; 1278 : 	}
; 1279 : }

  000cb	5d		 pop	 ebp
  000cc	c2 08 00	 ret	 8
$LN10@Packet:

; 1268 : 		case 12:	this->recvchaosbank(aIndex, 1);			break;

  000cf	6a 01		 push	 1
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?recvchaosbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvchaosbank

; 1278 : 	}
; 1279 : }

  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN9@Packet:

; 1269 : 		case 13:	this->recvblessbank(aIndex, 1);			break;

  000db	6a 01		 push	 1
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?recvblessbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvblessbank

; 1278 : 	}
; 1279 : }

  000e3	5d		 pop	 ebp
  000e4	c2 08 00	 ret	 8
$LN8@Packet:

; 1270 : 		case 14:	this->recvsoulbank(aIndex, 1);			break;

  000e7	6a 01		 push	 1
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?recvsoulbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvsoulbank

; 1278 : 	}
; 1279 : }

  000ef	5d		 pop	 ebp
  000f0	c2 08 00	 ret	 8
$LN7@Packet:

; 1271 : 		case 15:	this->recvlifebank(aIndex, 1);			break;

  000f3	6a 01		 push	 1
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?recvlifebank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvlifebank

; 1278 : 	}
; 1279 : }

  000fb	5d		 pop	 ebp
  000fc	c2 08 00	 ret	 8
$LN6@Packet:

; 1272 : 		case 16:	this->recvcreateonbank(aIndex, 1);		break;

  000ff	6a 01		 push	 1
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?recvcreateonbank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvcreateonbank

; 1278 : 	}
; 1279 : }

  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$LN5@Packet:

; 1273 : 		case 17:	this->recvGuardianBank(aIndex, 1);		break;

  0010b	6a 01		 push	 1
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?recvGuardianBank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvGuardianBank

; 1278 : 	}
; 1279 : }

  00113	5d		 pop	 ebp
  00114	c2 08 00	 ret	 8
$LN4@Packet:

; 1274 : 		case 18:	this->recvHarmonyBank(aIndex, 1);		break;

  00117	6a 01		 push	 1
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?recvHarmonyBank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvHarmonyBank

; 1278 : 	}
; 1279 : }

  0011f	5d		 pop	 ebp
  00120	c2 08 00	 ret	 8
$LN3@Packet:

; 1275 : 		case 19:	this->recvLowStoneBank(aIndex, 1);		break;

  00123	6a 01		 push	 1
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?recvLowStoneBank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvLowStoneBank

; 1278 : 	}
; 1279 : }

  0012b	5d		 pop	 ebp
  0012c	c2 08 00	 ret	 8
$LN2@Packet:

; 1276 : 		case 20:	this->recvHighStoneBank(aIndex, 1);		break;

  0012f	6a 01		 push	 1
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?recvHighStoneBank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvHighStoneBank

; 1278 : 	}
; 1279 : }

  00137	5d		 pop	 ebp
  00138	c2 08 00	 ret	 8
$LN1@Packet:

; 1277 : 		case 21:	this->recvGemStoneBank(aIndex, 1);		break;

  0013b	6a 01		 push	 1
  0013d	50		 push	 eax
  0013e	e8 00 00 00 00	 call	 ?recvGemStoneBank@JewelsBank@@QAEXHH@Z ; JewelsBank::recvGemStoneBank
$LN23@Packet:

; 1278 : 	}
; 1279 : }

  00143	5d		 pop	 ebp
  00144	c2 08 00	 ret	 8
  00147	90		 npad	 1
$LN31@Packet:
  00148	00 00 00 00	 DD	 $LN22@Packet
  0014c	00 00 00 00	 DD	 $LN21@Packet
  00150	00 00 00 00	 DD	 $LN20@Packet
  00154	00 00 00 00	 DD	 $LN19@Packet
  00158	00 00 00 00	 DD	 $LN18@Packet
  0015c	00 00 00 00	 DD	 $LN17@Packet
  00160	00 00 00 00	 DD	 $LN16@Packet
  00164	00 00 00 00	 DD	 $LN15@Packet
  00168	00 00 00 00	 DD	 $LN14@Packet
  0016c	00 00 00 00	 DD	 $LN13@Packet
  00170	00 00 00 00	 DD	 $LN12@Packet
  00174	00 00 00 00	 DD	 $LN11@Packet
  00178	00 00 00 00	 DD	 $LN10@Packet
  0017c	00 00 00 00	 DD	 $LN9@Packet
  00180	00 00 00 00	 DD	 $LN8@Packet
  00184	00 00 00 00	 DD	 $LN7@Packet
  00188	00 00 00 00	 DD	 $LN6@Packet
  0018c	00 00 00 00	 DD	 $LN5@Packet
  00190	00 00 00 00	 DD	 $LN4@Packet
  00194	00 00 00 00	 DD	 $LN3@Packet
  00198	00 00 00 00	 DD	 $LN2@Packet
  0019c	00 00 00 00	 DD	 $LN1@Packet
?Packet@JewelsBank@@QAEXHPAUPMSG_JEWELBANK@@@Z ENDP	; JewelsBank::Packet
_TEXT	ENDS
END
