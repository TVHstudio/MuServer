; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\Kanturu.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?SetStateInfo@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
;	COMDAT ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iStateTimeInfo$ = 8					; size = 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetStateInfo, COMDAT
; _this$ = ecx

; 29   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 30   : 		this->m_iState = iStateTimeInfo;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iStateTimeInfo$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 31   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetStateInfo
_TEXT	ENDS
PUBLIC	?SetCondition@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetCondition
; Function compile flags: /Ogtp
;	COMDAT ?SetCondition@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iCondition$ = 8					; size = 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetCondition, COMDAT
; _this$ = ecx

; 34   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 35   : 		this->m_iCondition = iCondition;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCondition$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 36   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetCondition
_TEXT	ENDS
PUBLIC	?GetCondition@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetCondition
; Function compile flags: /Ogtp
;	COMDAT ?GetCondition@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetCondition@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetCondition, COMDAT
; _this$ = ecx

; 41   : 		return this->m_iCondition;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 42   : 	}

  00003	c3		 ret	 0
?GetCondition@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetCondition
_TEXT	ENDS
PUBLIC	?SetValue@CKanturuStateInfo@@QAEXH@Z		; CKanturuStateInfo::SetValue
; Function compile flags: /Ogtp
;	COMDAT ?SetValue@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetValue@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetValue, COMDAT
; _this$ = ecx

; 45   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 46   : 		this->m_iValue = iValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 47   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetValue@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetValue
_TEXT	ENDS
PUBLIC	?SetAppliedTime@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::SetAppliedTime
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Ogtp
;	COMDAT ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::SetAppliedTime, COMDAT
; _this$ = ecx

; 54   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 55   : 		this->m_dwAppliedTickCount = GetTickCount();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0000c	5e		 pop	 esi

; 56   : 	}

  0000d	c3		 ret	 0
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::SetAppliedTime
_TEXT	ENDS
PUBLIC	?GetAppliedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Ogtp
;	COMDAT ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetAppliedTime, COMDAT
; _this$ = ecx

; 60   : 		return this->m_dwAppliedTickCount;

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 61   : 	}

  00003	c3		 ret	 0
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetAppliedTime
_TEXT	ENDS
PUBLIC	?GetElapsedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Ogtp
;	COMDAT ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetElapsedTime, COMDAT
; _this$ = ecx

; 64   : 	{

  00000	56		 push	 esi

; 65   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00001	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0000a	2b c6		 sub	 eax, esi
  0000c	5e		 pop	 esi

; 66   : 		return iElapsedTime;
; 67   : 	}

  0000d	c3		 ret	 0
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetElapsedTime
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetRemainTime
; Function compile flags: /Ogtp
;	COMDAT ?GetRemainTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetRemainTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetRemainTime, COMDAT
; _this$ = ecx

; 70   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 71   : 		int iRemainTime = 0;

  00003	33 c0		 xor	 eax, eax

; 72   : 
; 73   : 		if ( this->GetCondition() == 1 )

  00005	83 7e 08 01	 cmp	 DWORD PTR [esi+8], 1
  00009	75 2b		 jne	 SHORT $LN3@GetRemainT

; 74   : 		{
; 75   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  0000b	57		 push	 edi
  0000c	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00015	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00018	2b c7		 sub	 eax, edi
  0001a	2b c8		 sub	 ecx, eax
  0001c	5f		 pop	 edi

; 76   : 
; 77   : 			if ( iRemainTime <= 0 )

  0001d	85 c9		 test	 ecx, ecx
  0001f	7f 04		 jg	 SHORT $LN1@GetRemainT

; 78   : 			{
; 79   : 				return 0;

  00021	33 c0		 xor	 eax, eax
  00023	5e		 pop	 esi

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;
; 86   : 	}

  00024	c3		 ret	 0
$LN1@GetRemainT:

; 80   : 			}
; 81   : 
; 82   : 			iRemainTime /= 1000;

  00025	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0002a	f7 e9		 imul	 ecx
  0002c	c1 fa 06	 sar	 edx, 6
  0002f	8b c2		 mov	 eax, edx
  00031	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00034	03 c2		 add	 eax, edx
$LN3@GetRemainT:
  00036	5e		 pop	 esi

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;
; 86   : 	}

  00037	c3		 ret	 0
?GetRemainTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetRemainTime
_TEXT	ENDS
PUBLIC	?IsTimeOut@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::IsTimeOut
; Function compile flags: /Ogtp
;	COMDAT ?IsTimeOut@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?IsTimeOut@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::IsTimeOut, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 90   : 		if ( this->GetRemainTime() <= 0 )

  00003	83 7e 08 01	 cmp	 DWORD PTR [esi+8], 1
  00007	75 2b		 jne	 SHORT $LN14@IsTimeOut
  00009	57		 push	 edi
  0000a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00013	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00016	2b c7		 sub	 eax, edi
  00018	2b c8		 sub	 ecx, eax
  0001a	5f		 pop	 edi
  0001b	85 c9		 test	 ecx, ecx
  0001d	7e 15		 jle	 SHORT $LN14@IsTimeOut
  0001f	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00024	f7 e9		 imul	 ecx
  00026	c1 fa 06	 sar	 edx, 6
  00029	8b c2		 mov	 eax, edx
  0002b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002e	03 c2		 add	 eax, edx
  00030	85 c0		 test	 eax, eax
  00032	7f 07		 jg	 SHORT $LN1@IsTimeOut
$LN14@IsTimeOut:

; 91   : 		{
; 92   : 			return TRUE;

  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	5e		 pop	 esi

; 96   : 	}

  0003a	c3		 ret	 0
$LN1@IsTimeOut:

; 93   : 		}
; 94   : 
; 95   : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax
  0003d	5e		 pop	 esi

; 96   : 	}

  0003e	c3		 ret	 0
?IsTimeOut@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::IsTimeOut
_TEXT	ENDS
PUBLIC	?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ; CKanturuBattleStanby::GetBattleStanbyState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattlestanby.h
;	COMDAT ?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ
_TEXT	SEGMENT
?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ PROC	; CKanturuBattleStanby::GetBattleStanbyState, COMDAT
; _this$ = ecx

; 47   : 	int GetBattleStanbyState(){return this->m_iBattleStanbyState;}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ENDP	; CKanturuBattleStanby::GetBattleStanbyState
_TEXT	ENDS
PUBLIC	?GetBattleOfMayaState@CKanturuBattleOfMaya@@QAEHXZ ; CKanturuBattleOfMaya::GetBattleOfMayaState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofmaya.h
;	COMDAT ?GetBattleOfMayaState@CKanturuBattleOfMaya@@QAEHXZ
_TEXT	SEGMENT
?GetBattleOfMayaState@CKanturuBattleOfMaya@@QAEHXZ PROC	; CKanturuBattleOfMaya::GetBattleOfMayaState, COMDAT
; _this$ = ecx

; 94   : 	int GetBattleOfMayaState(){return this->m_iBattleOfMayaState;}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetBattleOfMayaState@CKanturuBattleOfMaya@@QAEHXZ ENDP	; CKanturuBattleOfMaya::GetBattleOfMayaState
_TEXT	ENDS
PUBLIC	?GetSuccessValue@CKanturuBattleOfMaya@@QAEHXZ	; CKanturuBattleOfMaya::GetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?GetSuccessValue@CKanturuBattleOfMaya@@QAEHXZ
_TEXT	SEGMENT
?GetSuccessValue@CKanturuBattleOfMaya@@QAEHXZ PROC	; CKanturuBattleOfMaya::GetSuccessValue, COMDAT
; _this$ = ecx

; 103  : 	BOOL GetSuccessValue(){return this->m_bIsSucccess;}

  00000	8b 81 d4 01 00
	00		 mov	 eax, DWORD PTR [ecx+468]
  00006	c3		 ret	 0
?GetSuccessValue@CKanturuBattleOfMaya@@QAEHXZ ENDP	; CKanturuBattleOfMaya::GetSuccessValue
_TEXT	ENDS
PUBLIC	?GetEntrancePermit@CKanturuBattleOfMaya@@QAEHXZ	; CKanturuBattleOfMaya::GetEntrancePermit
; Function compile flags: /Ogtp
;	COMDAT ?GetEntrancePermit@CKanturuBattleOfMaya@@QAEHXZ
_TEXT	SEGMENT
?GetEntrancePermit@CKanturuBattleOfMaya@@QAEHXZ PROC	; CKanturuBattleOfMaya::GetEntrancePermit, COMDAT
; _this$ = ecx

; 107  : 	BOOL GetEntrancePermit(){return this->m_bEntrancePermit;}

  00000	8b 81 d0 01 00
	00		 mov	 eax, DWORD PTR [ecx+464]
  00006	c3		 ret	 0
?GetEntrancePermit@CKanturuBattleOfMaya@@QAEHXZ ENDP	; CKanturuBattleOfMaya::GetEntrancePermit
_TEXT	ENDS
PUBLIC	?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
;	COMDAT ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ PROC ; CKanturuBattleOfNightmare::GetBattleOfNightmareState, COMDAT
; _this$ = ecx

; 50   : 	int GetBattleOfNightmareState(){return this->m_iBattleOfNightmareState;}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ENDP ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
_TEXT	ENDS
PUBLIC	?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ PROC	; CKanturuBattleOfNightmare::GetSuccessValue, COMDAT
; _this$ = ecx

; 52   : 	BOOL GetSuccessValue(){return this->m_bIsSucccess;}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ENDP	; CKanturuBattleOfNightmare::GetSuccessValue
_TEXT	ENDS
PUBLIC	?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetTowerOfRefinementState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturutowerofrefinement.h
;	COMDAT ?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ
_TEXT	SEGMENT
?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ PROC ; CKanturuTowerOfRefinement::GetTowerOfRefinementState, COMDAT
; _this$ = ecx

; 52   : 	int GetTowerOfRefinementState(){return this->m_iTowerOfRefinementState;}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ ENDP ; CKanturuTowerOfRefinement::GetTowerOfRefinementState
_TEXT	ENDS
PUBLIC	?GetEntrancePermit@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetEntrancePermit
; Function compile flags: /Ogtp
;	COMDAT ?GetEntrancePermit@CKanturuTowerOfRefinement@@QAEHXZ
_TEXT	SEGMENT
?GetEntrancePermit@CKanturuTowerOfRefinement@@QAEHXZ PROC ; CKanturuTowerOfRefinement::GetEntrancePermit, COMDAT
; _this$ = ecx

; 54   : 	BOOL GetEntrancePermit(){return this->m_bEntrancePermit;}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetEntrancePermit@CKanturuTowerOfRefinement@@QAEHXZ ENDP ; CKanturuTowerOfRefinement::GetEntrancePermit
_TEXT	ENDS
PUBLIC	?IsUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::IsUseTowerOfRefinement
; Function compile flags: /Ogtp
;	COMDAT ?IsUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEHXZ
_TEXT	SEGMENT
?IsUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEHXZ PROC ; CKanturuTowerOfRefinement::IsUseTowerOfRefinement, COMDAT
; _this$ = ecx

; 56   : 	BOOL IsUseTowerOfRefinement(){return this->m_bIsUseTowerOfRefinement;}

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?IsUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEHXZ ENDP ; CKanturuTowerOfRefinement::IsUseTowerOfRefinement
_TEXT	ENDS
PUBLIC	?IsKanturuEnable@CKanturu@@QAEHXZ		; CKanturu::IsKanturuEnable
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.h
;	COMDAT ?IsKanturuEnable@CKanturu@@QAEHXZ
_TEXT	SEGMENT
?IsKanturuEnable@CKanturu@@QAEHXZ PROC			; CKanturu::IsKanturuEnable, COMDAT
; _this$ = ecx

; 69   : 	BOOL IsKanturuEnable(){return this->m_bKanturuEnable;}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?IsKanturuEnable@CKanturu@@QAEHXZ ENDP			; CKanturu::IsKanturuEnable
_TEXT	ENDS
PUBLIC	?SetKanturuState@CKanturu@@QAEXH@Z		; CKanturu::SetKanturuState
; Function compile flags: /Ogtp
;	COMDAT ?SetKanturuState@CKanturu@@QAEXH@Z
_TEXT	SEGMENT
_iKanturuState$ = 8					; size = 4
?SetKanturuState@CKanturu@@QAEXH@Z PROC			; CKanturu::SetKanturuState, COMDAT
; _this$ = ecx

; 70   : 	void SetKanturuState(int iKanturuState){this->m_iKanturuState = iKanturuState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iKanturuState$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetKanturuState@CKanturu@@QAEXH@Z ENDP			; CKanturu::SetKanturuState
_TEXT	ENDS
PUBLIC	?GetKanturuState@CKanturu@@QAEHXZ		; CKanturu::GetKanturuState
; Function compile flags: /Ogtp
;	COMDAT ?GetKanturuState@CKanturu@@QAEHXZ
_TEXT	SEGMENT
?GetKanturuState@CKanturu@@QAEHXZ PROC			; CKanturu::GetKanturuState, COMDAT
; _this$ = ecx

; 71   : 	int GetKanturuState(){return this->m_iKanturuState;}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetKanturuState@CKanturu@@QAEHXZ ENDP			; CKanturu::GetKanturuState
_TEXT	ENDS
PUBLIC	?SetEnableCheckMoonStone@CKanturu@@QAEXH@Z	; CKanturu::SetEnableCheckMoonStone
; Function compile flags: /Ogtp
;	COMDAT ?SetEnableCheckMoonStone@CKanturu@@QAEXH@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 4
?SetEnableCheckMoonStone@CKanturu@@QAEXH@Z PROC		; CKanturu::SetEnableCheckMoonStone, COMDAT
; _this$ = ecx

; 80   : 	void SetEnableCheckMoonStone(BOOL bEnable){this->m_bEnableCheckMoonStone = bEnable;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _bEnable$[ebp]
  00006	89 81 d4 7e 0a
	00		 mov	 DWORD PTR [ecx+687828], eax
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetEnableCheckMoonStone@CKanturu@@QAEXH@Z ENDP		; CKanturu::SetEnableCheckMoonStone
_TEXT	ENDS
PUBLIC	?GetEnableCheckMoonStone@CKanturu@@QAEHXZ	; CKanturu::GetEnableCheckMoonStone
; Function compile flags: /Ogtp
;	COMDAT ?GetEnableCheckMoonStone@CKanturu@@QAEHXZ
_TEXT	SEGMENT
?GetEnableCheckMoonStone@CKanturu@@QAEHXZ PROC		; CKanturu::GetEnableCheckMoonStone, COMDAT
; _this$ = ecx

; 81   : 	int GetEnableCheckMoonStone(){return this->m_bEnableCheckMoonStone;}

  00000	8b 81 d4 7e 0a
	00		 mov	 eax, DWORD PTR [ecx+687828]
  00006	c3		 ret	 0
?GetEnableCheckMoonStone@CKanturu@@QAEHXZ ENDP		; CKanturu::GetEnableCheckMoonStone
_TEXT	ENDS
PUBLIC	?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ; CKanturuMonsterMng::GetAliveMonsterCount
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturumonstermng.h
;	COMDAT ?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ
_TEXT	SEGMENT
?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ PROC	; CKanturuMonsterMng::GetAliveMonsterCount, COMDAT
; _this$ = ecx

; 48   : 	int GetAliveMonsterCount(){return this->m_iAliveMonsterCount;}

  00000	8b 81 6c 14 00
	00		 mov	 eax, DWORD PTR [ecx+5228]
  00006	c3		 ret	 0
?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ENDP	; CKanturuMonsterMng::GetAliveMonsterCount
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 64		 je	 SHORT $LN39@GetToken

; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 31		 jne	 SHORT $LN30@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 1b		 jne	 SHORT $LN30@GetToken
$LL24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	80 fb ff	 cmp	 bl, -1
  00053	74 44		 je	 SHORT $LN39@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _fgetc
  00061	8a d8		 mov	 bl, al
  00063	83 c4 04	 add	 esp, 4
  00066	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00069	75 e5		 jne	 SHORT $LL24@GetToken
$LN30@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE
; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006b	0f be c3	 movsx	 eax, bl
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _isspace
  00074	83 c4 04	 add	 esp, 4
  00077	85 c0		 test	 eax, eax
  00079	75 a5		 jne	 SHORT $LL31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  0007b	0f be c3	 movsx	 eax, bl
  0007e	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  00081	56		 push	 esi
  00082	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00085	0f 87 2b 01 00
	00		 ja	 $LN6@GetToken
  0008b	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN46@GetToken[ecx]
  00092	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN50@GetToken[ecx*4]
$LN39@GetToken:

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00099	b8 02 00 00 00	 mov	 eax, 2
  0009e	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a2	33 cd		 xor	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000ad	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b2	e9 99 01 00 00	 jmp	 $LN48@GetToken
$LN18@GetToken:

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000b7	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000bc	e9 8f 01 00 00	 jmp	 $LN48@GetToken
$LN17@GetToken:

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000c1	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000c6	e9 85 01 00 00	 jmp	 $LN48@GetToken
$LN16@GetToken:

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  000cb	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  000d0	e9 7b 01 00 00	 jmp	 $LN48@GetToken
$LN15@GetToken:

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  000d5	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  000da	e9 71 01 00 00	 jmp	 $LN48@GetToken
$LN14@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000f1	50		 push	 eax
  000f2	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  000f5	e8 00 00 00 00	 call	 _getc
  000fa	8a d8		 mov	 bl, al
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	80 fb ff	 cmp	 bl, -1
  00102	74 33		 je	 SHORT $LN12@GetToken
$LL13@GetToken:
  00104	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00107	74 15		 je	 SHORT $LN11@GetToken
  00109	0f be cb	 movsx	 ecx, bl
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _isdigit
  00112	83 c4 04	 add	 esp, 4
  00115	85 c0		 test	 eax, eax
  00117	75 05		 jne	 SHORT $LN11@GetToken
  00119	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  0011c	75 19		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00124	88 1e		 mov	 BYTE PTR [esi], bl
  00126	52		 push	 edx

; 102  : 			p++;

  00127	46		 inc	 esi
  00128	e8 00 00 00 00	 call	 _getc
  0012d	8a d8		 mov	 bl, al
  0012f	83 c4 04	 add	 esp, 4
  00132	80 fb ff	 cmp	 bl, -1
  00135	75 cd		 jne	 SHORT $LL13@GetToken
$LN12@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00137	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  0013a	50		 push	 eax
  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	e8 00 00 00 00	 call	 _atof
  00143	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  00149	83 c4 04	 add	 esp, 4
  0014c	5e		 pop	 esi

; 106  : 		return CurrentToken  = NUMBER ;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00157	b8 01 00 00 00	 mov	 eax, 1
  0015c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0015d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00171	51		 push	 ecx
  00172	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  00177	e8 00 00 00 00	 call	 _getc
  0017c	83 c4 04	 add	 esp, 4
  0017f	3c ff		 cmp	 al, -1
  00181	74 1e		 je	 SHORT $LN8@GetToken
$LL9@GetToken:
  00183	3c 22		 cmp	 al, 34			; 00000022H
  00185	0f 84 a1 00 00
	00		 je	 $LN7@GetToken
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 113  : 		{
; 114  : 			*p = ch;

  00191	88 06		 mov	 BYTE PTR [esi], al
  00193	52		 push	 edx

; 115  : 			p++;

  00194	46		 inc	 esi
  00195	e8 00 00 00 00	 call	 _getc
  0019a	83 c4 04	 add	 esp, 4
  0019d	3c ff		 cmp	 al, -1
  0019f	75 e2		 jne	 SHORT $LL9@GetToken
$LN8@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001a1	3c 22		 cmp	 al, 34			; 00000022H
  001a3	0f 84 83 00 00
	00		 je	 $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  001af	0f be d0	 movsx	 edx, al
  001b2	51		 push	 ecx
  001b3	52		 push	 edx

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  001b4	eb 6e		 jmp	 SHORT $LN49@GetToken
$LN6@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _isalpha
  001bc	83 c4 04	 add	 esp, 4
  001bf	85 c0		 test	 eax, eax
  001c1	0f 84 84 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  001d3	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  001d8	e8 00 00 00 00	 call	 _getc
  001dd	8a d8		 mov	 bl, al
  001df	83 c4 04	 add	 esp, 4
  001e2	80 fb ff	 cmp	 bl, -1
  001e5	74 33		 je	 SHORT $LN3@GetToken
$LL4@GetToken:
  001e7	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  001ea	74 15		 je	 SHORT $LN2@GetToken
  001ec	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  001ef	74 10		 je	 SHORT $LN2@GetToken
  001f1	0f be cb	 movsx	 ecx, bl
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 _isalnum
  001fa	83 c4 04	 add	 esp, 4
  001fd	85 c0		 test	 eax, eax
  001ff	74 19		 je	 SHORT $LN3@GetToken
$LN2@GetToken:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 133  : 			{
; 134  : 				*p=ch;

  00207	88 1e		 mov	 BYTE PTR [esi], bl
  00209	52		 push	 edx

; 135  : 				p++;

  0020a	46		 inc	 esi
  0020b	e8 00 00 00 00	 call	 _getc
  00210	8a d8		 mov	 bl, al
  00212	83 c4 04	 add	 esp, 4
  00215	80 fb ff	 cmp	 bl, -1
  00218	75 cd		 jne	 SHORT $LL4@GetToken
$LN3@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0021f	0f be cb	 movsx	 ecx, bl
  00222	50		 push	 eax
  00223	51		 push	 ecx
$LN49@GetToken:
  00224	e8 00 00 00 00	 call	 _ungetc
  00229	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 140  : 			*p=0;

  0022c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0022f	5e		 pop	 esi

; 141  : 			CurrentToken=NAME;

  00230	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0023a	33 c0		 xor	 eax, eax
  0023c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0023d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00240	33 cd		 xor	 ecx, ebp
  00242	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN5@GetToken:

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  0024b	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN48@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00250	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  0025b	5b		 pop	 ebx
  0025c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
  00265	8d 49 00	 npad	 3
$LN50@GetToken:
  00268	00 00 00 00	 DD	 $LN10@GetToken
  0026c	00 00 00 00	 DD	 $LN19@GetToken
  00270	00 00 00 00	 DD	 $LN17@GetToken
  00274	00 00 00 00	 DD	 $LN14@GetToken
  00278	00 00 00 00	 DD	 $LN18@GetToken
  0027c	00 00 00 00	 DD	 $LN16@GetToken
  00280	00 00 00 00	 DD	 $LN15@GetToken
  00284	00 00 00 00	 DD	 $LN6@GetToken
$LN46@GetToken:
  00288	00		 DB	 0
  00289	01		 DB	 1
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	02		 DB	 2
  00293	03		 DB	 3
  00294	03		 DB	 3
  00295	07		 DB	 7
  00296	03		 DB	 3
  00297	03		 DB	 3
  00298	03		 DB	 3
  00299	03		 DB	 3
  0029a	03		 DB	 3
  0029b	03		 DB	 3
  0029c	03		 DB	 3
  0029d	03		 DB	 3
  0029e	03		 DB	 3
  0029f	03		 DB	 3
  002a0	07		 DB	 7
  002a1	04		 DB	 4
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	07		 DB	 7
  002ad	07		 DB	 7
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	07		 DB	 7
  002b1	07		 DB	 7
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	07		 DB	 7
  002b9	07		 DB	 7
  002ba	07		 DB	 7
  002bb	07		 DB	 7
  002bc	07		 DB	 7
  002bd	07		 DB	 7
  002be	07		 DB	 7
  002bf	07		 DB	 7
  002c0	07		 DB	 7
  002c1	07		 DB	 7
  002c2	07		 DB	 7
  002c3	07		 DB	 7
  002c4	07		 DB	 7
  002c5	07		 DB	 7
  002c6	07		 DB	 7
  002c7	07		 DB	 7
  002c8	07		 DB	 7
  002c9	07		 DB	 7
  002ca	07		 DB	 7
  002cb	07		 DB	 7
  002cc	07		 DB	 7
  002cd	07		 DB	 7
  002ce	07		 DB	 7
  002cf	07		 DB	 7
  002d0	07		 DB	 7
  002d1	07		 DB	 7
  002d2	07		 DB	 7
  002d3	07		 DB	 7
  002d4	07		 DB	 7
  002d5	07		 DB	 7
  002d6	07		 DB	 7
  002d7	07		 DB	 7
  002d8	07		 DB	 7
  002d9	07		 DB	 7
  002da	07		 DB	 7
  002db	07		 DB	 7
  002dc	07		 DB	 7
  002dd	07		 DB	 7
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	05		 DB	 5
  002e2	07		 DB	 7
  002e3	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??_7CKanturu@@6B@				; CKanturu::`vftable'
PUBLIC	??0CKanturu@@QAE@XZ				; CKanturu::CKanturu
PUBLIC	??_R4CKanturu@@6B@				; CKanturu::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturu@@@8				; CKanturu `RTTI Type Descriptor'
PUBLIC	??_R3CKanturu@@8				; CKanturu::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturu@@8				; CKanturu::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturu@@8			; CKanturu::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1CKanturuTowerOfRefinement@@UAE@XZ:PROC	; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
EXTRN	??1CKanturuBattleOfNightmare@@UAE@XZ:PROC	; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
EXTRN	??1CKanturuBattleOfMaya@@UAE@XZ:PROC		; CKanturuBattleOfMaya::~CKanturuBattleOfMaya
EXTRN	??1CKanturuBattleStanby@@UAE@XZ:PROC		; CKanturuBattleStanby::~CKanturuBattleStanby
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??0MapClass@@QAE@XZ:PROC			; MapClass::MapClass
EXTRN	??1MapClass@@UAE@XZ:PROC			; MapClass::~MapClass
EXTRN	??0CKanturuTowerOfRefinement@@QAE@XZ:PROC	; CKanturuTowerOfRefinement::CKanturuTowerOfRefinement
EXTRN	??0CKanturuBattleOfNightmare@@QAE@XZ:PROC	; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
EXTRN	??0CKanturuBattleOfMaya@@QAE@XZ:PROC		; CKanturuBattleOfMaya::CKanturuBattleOfMaya
EXTRN	??0CKanturuBattleStanby@@QAE@XZ:PROC		; CKanturuBattleStanby::CKanturuBattleStanby
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0CKanturuStateInfo@@QAE@XZ:PROC		; CKanturuStateInfo::CKanturuStateInfo
EXTRN	??1CKanturuStateInfo@@UAE@XZ:PROC		; CKanturuStateInfo::~CKanturuStateInfo
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECKanturu@@UAEPAXI@Z:PROC			; CKanturu::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturu@@8
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturu@@8 DD FLAT:??_R0?AVCKanturu@@@8	; CKanturu::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturu@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturu@@8
rdata$r	SEGMENT
??_R2CKanturu@@8 DD FLAT:??_R1A@?0A@EA@CKanturu@@8	; CKanturu::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturu@@8
rdata$r	SEGMENT
??_R3CKanturu@@8 DD 00H					; CKanturu::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturu@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturu@@@8
_DATA	SEGMENT
??_R0?AVCKanturu@@@8 DD FLAT:??_7type_info@@6B@		; CKanturu `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturu@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturu@@6B@
rdata$r	SEGMENT
??_R4CKanturu@@6B@ DD 00H				; CKanturu::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturu@@@8
	DD	FLAT:??_R3CKanturu@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturu@@6B@
CONST	SEGMENT
??_7CKanturu@@6B@ DD FLAT:??_R4CKanturu@@6B@		; CKanturu::`vftable'
	DD	FLAT:??_ECKanturu@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CKanturu@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CKanturu@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CKanturu@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CKanturu@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CKanturu@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CKanturu@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CKanturu@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CKanturu@@QAE@XZ$4
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0CKanturu@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CKanturu@@QAE@XZ PROC				; CKanturu::CKanturu, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CKanturu@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002a	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  0002f	68 00 00 00 00	 push	 OFFSET ??0CKanturuStateInfo@@QAE@XZ ; CKanturuStateInfo::CKanturuStateInfo
  00034	6a 06		 push	 6
  00036	6a 14		 push	 20			; 00000014H
  00038	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0003b	50		 push	 eax
  0003c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CKanturu@@6B@
  00042	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  00047	33 ff		 xor	 edi, edi
  00049	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  0004f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00052	e8 00 00 00 00	 call	 ??0CKanturuBattleStanby@@QAE@XZ ; CKanturuBattleStanby::CKanturuBattleStanby
  00057	8d 8e f4 00 00
	00		 lea	 ecx, DWORD PTR [esi+244]
  0005d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00061	e8 00 00 00 00	 call	 ??0CKanturuBattleOfMaya@@QAE@XZ ; CKanturuBattleOfMaya::CKanturuBattleOfMaya
  00066	8d 8e 20 03 00
	00		 lea	 ecx, DWORD PTR [esi+800]
  0006c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00070	e8 00 00 00 00	 call	 ??0CKanturuBattleOfNightmare@@QAE@XZ ; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
  00075	8d 8e b4 03 00
	00		 lea	 ecx, DWORD PTR [esi+948]
  0007b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0007f	e8 00 00 00 00	 call	 ??0CKanturuTowerOfRefinement@@QAE@XZ ; CKanturuTowerOfRefinement::CKanturuTowerOfRefinement
  00084	68 00 00 00 00	 push	 OFFSET ??1MapClass@@UAE@XZ ; MapClass::~MapClass
  00089	68 00 00 00 00	 push	 OFFSET ??0MapClass@@QAE@XZ ; MapClass::MapClass
  0008e	6a 02		 push	 2
  00090	68 48 3d 05 00	 push	 343368			; 00053d48H
  00095	8d 8e 44 04 00
	00		 lea	 ecx, DWORD PTR [esi+1092]
  0009b	51		 push	 ecx
  0009c	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000a0	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z

; 22   : 	this->m_bKanturuEnable = FALSE;

  000a5	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 23   : 	this->m_iKanturuState = 0;

  000a8	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 24   : 	this->m_StateInfoCount = 0;

  000ab	89 be 8c 00 00
	00		 mov	 DWORD PTR [esi+140], edi

; 25   : 	this->m_bFileDataLoad = FALSE;

  000b1	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 26   : 	this->m_bEnableCheckMoonStone = FALSE;

  000b4	89 be d4 7e 0a
	00		 mov	 DWORD PTR [esi+687828], edi

; 27   : 	//this->m_iKanturuBattleCounter = 0;
; 28   : 	//this->m_iKanturuBattleDate = 0;
; 29   : }

  000ba	8b c6		 mov	 eax, esi
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CKanturu@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00005	6a 06		 push	 6
  00007	6a 14		 push	 20			; 00000014H
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 14	 add	 eax, 20			; 00000014H
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__unwindfunclet$??0CKanturu@@QAE@XZ$1:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0001f	e9 00 00 00 00	 jmp	 ??1CKanturuBattleStanby@@UAE@XZ ; CKanturuBattleStanby::~CKanturuBattleStanby
__unwindfunclet$??0CKanturu@@QAE@XZ$2:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  0002d	e9 00 00 00 00	 jmp	 ??1CKanturuBattleOfMaya@@UAE@XZ ; CKanturuBattleOfMaya::~CKanturuBattleOfMaya
__unwindfunclet$??0CKanturu@@QAE@XZ$3:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 20 03 00
	00		 add	 ecx, 800		; 00000320H
  0003b	e9 00 00 00 00	 jmp	 ??1CKanturuBattleOfNightmare@@UAE@XZ ; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
__unwindfunclet$??0CKanturu@@QAE@XZ$4:
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 b4 03 00
	00		 add	 ecx, 948		; 000003b4H
  00049	e9 00 00 00 00	 jmp	 ??1CKanturuTowerOfRefinement@@UAE@XZ ; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
__ehhandler$??0CKanturu@@QAE@XZ:
  0004e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00052	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00055	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CKanturu@@QAE@XZ
  00064	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CKanturu@@QAE@XZ ENDP				; CKanturu::CKanturu
PUBLIC	??1CKanturu@@UAE@XZ				; CKanturu::~CKanturu
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CKanturu@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1CKanturu@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CKanturu@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CKanturu@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CKanturu@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CKanturu@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CKanturu@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CKanturu@@UAE@XZ$4
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1CKanturu@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CKanturu@@UAE@XZ PROC				; CKanturu::~CKanturu, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CKanturu@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CKanturu@@6B@

; 33   : 	return;
; 34   : }

  0002f	68 00 00 00 00	 push	 OFFSET ??1MapClass@@UAE@XZ ; MapClass::~MapClass
  00034	6a 02		 push	 2
  00036	68 48 3d 05 00	 push	 343368			; 00053d48H
  0003b	8d 86 44 04 00
	00		 lea	 eax, DWORD PTR [esi+1092]
  00041	50		 push	 eax
  00042	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00049	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0004e	8d 8e b4 03 00
	00		 lea	 ecx, DWORD PTR [esi+948]
  00054	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00058	e8 00 00 00 00	 call	 ??1CKanturuTowerOfRefinement@@UAE@XZ ; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
  0005d	8d 8e 20 03 00
	00		 lea	 ecx, DWORD PTR [esi+800]
  00063	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00067	e8 00 00 00 00	 call	 ??1CKanturuBattleOfNightmare@@UAE@XZ ; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
  0006c	8d 8e f4 00 00
	00		 lea	 ecx, DWORD PTR [esi+244]
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	e8 00 00 00 00	 call	 ??1CKanturuBattleOfMaya@@UAE@XZ ; CKanturuBattleOfMaya::~CKanturuBattleOfMaya
  0007b	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  00081	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00085	e8 00 00 00 00	 call	 ??1CKanturuBattleStanby@@UAE@XZ ; CKanturuBattleStanby::~CKanturuBattleStanby
  0008a	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  0008f	6a 06		 push	 6
  00091	6a 14		 push	 20			; 00000014H
  00093	83 c6 14	 add	 esi, 20			; 00000014H
  00096	56		 push	 esi
  00097	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009e	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  000a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ad	59		 pop	 ecx
  000ae	5e		 pop	 esi
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CKanturu@@UAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00005	6a 06		 push	 6
  00007	6a 14		 push	 20			; 00000014H
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 14	 add	 eax, 20			; 00000014H
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__unwindfunclet$??1CKanturu@@UAE@XZ$1:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0001f	e9 00 00 00 00	 jmp	 ??1CKanturuBattleStanby@@UAE@XZ ; CKanturuBattleStanby::~CKanturuBattleStanby
__unwindfunclet$??1CKanturu@@UAE@XZ$2:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  0002d	e9 00 00 00 00	 jmp	 ??1CKanturuBattleOfMaya@@UAE@XZ ; CKanturuBattleOfMaya::~CKanturuBattleOfMaya
__unwindfunclet$??1CKanturu@@UAE@XZ$3:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 20 03 00
	00		 add	 ecx, 800		; 00000320H
  0003b	e9 00 00 00 00	 jmp	 ??1CKanturuBattleOfNightmare@@UAE@XZ ; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
__unwindfunclet$??1CKanturu@@UAE@XZ$4:
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 b4 03 00
	00		 add	 ecx, 948		; 000003b4H
  00049	e9 00 00 00 00	 jmp	 ??1CKanturuTowerOfRefinement@@UAE@XZ ; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
__ehhandler$??1CKanturu@@UAE@XZ:
  0004e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00052	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00055	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CKanturu@@UAE@XZ
  00064	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CKanturu@@UAE@XZ ENDP				; CKanturu::~CKanturu
PUBLIC	?LoadKanturuMapAttr@CKanturu@@QAEXPADE@Z	; CKanturu::LoadKanturuMapAttr
EXTRN	?LoadMapAttr@MapClass@@QAEXPADH@Z:PROC		; MapClass::LoadMapAttr
; Function compile flags: /Ogtp
;	COMDAT ?LoadKanturuMapAttr@CKanturu@@QAEXPADE@Z
_TEXT	SEGMENT
_lpszFileName$ = 8					; size = 4
_btLevel$ = 12						; size = 1
?LoadKanturuMapAttr@CKanturu@@QAEXPADE@Z PROC		; CKanturu::LoadKanturuMapAttr, COMDAT
; _this$ = ecx

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 172  : 	if ( !lpszFileName || btLevel > MAX_KANTURU_MAP_LEVEL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _lpszFileName$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 32		 je	 SHORT $LN5@LoadKantur
  0000a	8a 45 0c	 mov	 al, BYTE PTR _btLevel$[ebp]
  0000d	3c 02		 cmp	 al, 2
  0000f	77 2b		 ja	 SHORT $LN5@LoadKantur

; 173  : 		return;
; 174  : 
; 175  : 	switch ( btLevel )

  00011	0f b6 c0	 movzx	 eax, al
  00014	83 e8 00	 sub	 eax, 0
  00017	74 15		 je	 SHORT $LN2@LoadKantur
  00019	48		 dec	 eax
  0001a	75 20		 jne	 SHORT $LN5@LoadKantur

; 176  : 	{
; 177  : 		case KANTURU_MAP_CLOSE:
; 178  : 			this->m_KanturuMap[btLevel].LoadMapAttr(lpszFileName, MAP_INDEX_KANTURU_BOSS);

  0001c	6a 27		 push	 39			; 00000027H

; 179  : 			break;
; 180  : 		case KANTURU_MAP_OPEN:
; 181  : 			this->m_KanturuMap[btLevel].LoadMapAttr(lpszFileName, MAP_INDEX_KANTURU_BOSS);

  0001e	81 c1 8c 41 05
	00		 add	 ecx, 344460		; 0005418cH
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?LoadMapAttr@MapClass@@QAEXPADH@Z ; MapClass::LoadMapAttr

; 182  : 			break;
; 183  : 	}
; 184  : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
$LN2@LoadKantur:

; 176  : 	{
; 177  : 		case KANTURU_MAP_CLOSE:
; 178  : 			this->m_KanturuMap[btLevel].LoadMapAttr(lpszFileName, MAP_INDEX_KANTURU_BOSS);

  0002e	6a 27		 push	 39			; 00000027H
  00030	81 c1 44 04 00
	00		 add	 ecx, 1092		; 00000444H
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?LoadMapAttr@MapClass@@QAEXPADH@Z ; MapClass::LoadMapAttr
$LN5@LoadKantur:

; 182  : 			break;
; 183  : 	}
; 184  : }

  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
?LoadKanturuMapAttr@CKanturu@@QAEXPADE@Z ENDP		; CKanturu::LoadKanturuMapAttr
_TEXT	ENDS
PUBLIC	?ChangeState@CKanturu@@QAEXHH@Z			; CKanturu::ChangeState
; Function compile flags: /Ogtp
;	COMDAT ?ChangeState@CKanturu@@QAEXHH@Z
_TEXT	SEGMENT
_iState$ = 8						; size = 4
_DetailState$ = 12					; size = 4
?ChangeState@CKanturu@@QAEXHH@Z PROC			; CKanturu::ChangeState, COMDAT
; _this$ = ecx

; 282  : 	switch ( iState )
; 283  : 	{
; 284  : 	}
; 285  : }

  00000	c2 08 00	 ret	 8
?ChangeState@CKanturu@@QAEXHH@Z ENDP			; CKanturu::ChangeState
_TEXT	ENDS
PUBLIC	??_C@_0BO@LMGJPIE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NONE?$AA@ ; `string'
PUBLIC	?SetState_NONE@CKanturu@@QAEXXZ			; CKanturu::SetState_NONE
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
;	COMDAT ??_C@_0BO@LMGJPIE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NONE?$AA@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0BO@LMGJPIE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NONE?$AA@ DB '['
	DB	' KANTURU ] State(%d) -> NONE', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetState_NONE@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?SetState_NONE@CKanturu@@QAEXXZ PROC			; CKanturu::SetState_NONE, COMDAT
; _this$ = ecx

; 289  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 290  : 	LogAddC(7, "[ KANTURU ] State(%d) -> NONE", this->m_iKanturuState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LMGJPIE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NONE?$AA@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 291  : 	this->SetKanturuState(KANTURU_STATE_NONE);

  00017	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001e	5e		 pop	 esi

; 292  : }

  0001f	c3		 ret	 0
?SetState_NONE@CKanturu@@QAEXXZ ENDP			; CKanturu::SetState_NONE
_TEXT	ENDS
PUBLIC	??_C@_0CB@GKBCFNNE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ ; `string'
PUBLIC	?SetState_BATTLE_STANDBY@CKanturu@@QAEXXZ	; CKanturu::SetState_BATTLE_STANDBY
EXTRN	?SetState@CKanturuBattleStanby@@QAEXH@Z:PROC	; CKanturuBattleStanby::SetState
EXTRN	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::ResetAllData
EXTRN	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A:BYTE ; g_KanturuBattleUserMng
;	COMDAT ??_C@_0CB@GKBCFNNE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0CB@GKBCFNNE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ DB '['
	DB	' KANTURU ] State(%d) -> STANDBY', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetState_BATTLE_STANDBY@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?SetState_BATTLE_STANDBY@CKanturu@@QAEXXZ PROC		; CKanturu::SetState_BATTLE_STANDBY, COMDAT
; _this$ = ecx

; 296  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 297  : 	LogAddC(7, "[ KANTURU ] State(%d) -> STANDBY", this->m_iKanturuState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GKBCFNNE@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 298  : 	g_KanturuBattleUserMng.ResetAllData();

  00017	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  0001c	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 299  : 	this->SetKanturuState(KANTURU_STATE_BATTLE_STANTBY);
; 300  : 	this->m_BattleStanby.SetState(1);

  00021	6a 01		 push	 1
  00023	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  00029	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00030	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetState
  00035	5e		 pop	 esi

; 301  : 	//this->SetKanturuTimeAttackEventInfo();
; 302  : }

  00036	c3		 ret	 0
?SetState_BATTLE_STANDBY@CKanturu@@QAEXXZ ENDP		; CKanturu::SetState_BATTLE_STANDBY
_TEXT	ENDS
PUBLIC	??_C@_0CI@PJNHIIEF@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@ ; `string'
PUBLIC	?SetState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ	; CKanturu::SetState_BATTLE_OF_MAYA
EXTRN	?SetState@CKanturuBattleOfMaya@@QAEXH@Z:PROC	; CKanturuBattleOfMaya::SetState
;	COMDAT ??_C@_0CI@PJNHIIEF@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0CI@PJNHIIEF@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@ DB '['
	DB	' KANTURU ] State(%d) -> BATTLE_OF_MAYA', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?SetState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ PROC		; CKanturu::SetState_BATTLE_OF_MAYA, COMDAT
; _this$ = ecx

; 306  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 307  : 	LogAddC(7, "[ KANTURU ] State(%d) -> BATTLE_OF_MAYA", this->m_iKanturuState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@PJNHIIEF@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 308  : 	this->SetKanturuState(KANTURU_STATE_BATTLE_OF_MAYA);
; 309  : 	this->m_BattleOfMaya.SetState(1);

  00017	6a 01		 push	 1
  00019	8d 8e f4 00 00
	00		 lea	 ecx, DWORD PTR [esi+244]
  0001f	c7 46 08 02 00
	00 00		 mov	 DWORD PTR [esi+8], 2
  00026	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfMaya@@QAEXH@Z ; CKanturuBattleOfMaya::SetState
  0002b	5e		 pop	 esi

; 310  : }

  0002c	c3		 ret	 0
?SetState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ ENDP		; CKanturu::SetState_BATTLE_OF_MAYA
_TEXT	ENDS
PUBLIC	??_C@_0CN@KPOCOHKC@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@ ; `string'
PUBLIC	?SetState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ	; CKanturu::SetState_BATTLE_OF_NIGHTMARE
EXTRN	?SetState@CKanturuBattleOfNightmare@@QAEXH@Z:PROC ; CKanturuBattleOfNightmare::SetState
;	COMDAT ??_C@_0CN@KPOCOHKC@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0CN@KPOCOHKC@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@ DB '['
	DB	' KANTURU ] State(%d) -> BATTLE_OF_NIGHTMARE', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?SetState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ PROC	; CKanturu::SetState_BATTLE_OF_NIGHTMARE, COMDAT
; _this$ = ecx

; 314  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 315  : 	LogAddC(7, "[ KANTURU ] State(%d) -> BATTLE_OF_NIGHTMARE", this->m_iKanturuState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@KPOCOHKC@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5BATTLE_@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 316  : 	this->SetKanturuState(KANTURU_STATE_BATTLE_OF_NIGHTMARE);
; 317  : 	this->m_BattleOfNightmare.SetState(1);

  00017	6a 01		 push	 1
  00019	8d 8e 20 03 00
	00		 lea	 ecx, DWORD PTR [esi+800]
  0001f	c7 46 08 03 00
	00 00		 mov	 DWORD PTR [esi+8], 3
  00026	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetState
  0002b	5e		 pop	 esi

; 318  : }

  0002c	c3		 ret	 0
?SetState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ ENDP	; CKanturu::SetState_BATTLE_OF_NIGHTMARE
_TEXT	ENDS
PUBLIC	??_C@_0BN@DHNKBFGM@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ ; `string'
PUBLIC	?SetState_END@CKanturu@@QAEXXZ			; CKanturu::SetState_END
;	COMDAT ??_C@_0BN@DHNKBFGM@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0BN@DHNKBFGM@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ DB '['
	DB	' KANTURU ] State(%d) -> END', 00H		; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetState_END@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?SetState_END@CKanturu@@QAEXXZ PROC			; CKanturu::SetState_END, COMDAT
; _this$ = ecx

; 331  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 332  : 	LogAddC(7, "[ KANTURU ] State(%d) -> END", this->m_iKanturuState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DHNKBFGM@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 333  : 	this->SetKanturuState(KANTURU_STATE_END);

  00017	c7 46 08 05 00
	00 00		 mov	 DWORD PTR [esi+8], 5

; 334  : 	g_KanturuBattleUserMng.ResetAllData();

  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00023	5e		 pop	 esi
  00024	e9 00 00 00 00	 jmp	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData
?SetState_END@CKanturu@@QAEXXZ ENDP			; CKanturu::SetState_END
_TEXT	ENDS
PUBLIC	?GetKanturuDetailState@CKanturu@@QAEHXZ		; CKanturu::GetKanturuDetailState
; Function compile flags: /Ogtp
;	COMDAT ?GetKanturuDetailState@CKanturu@@QAEHXZ
_TEXT	SEGMENT
?GetKanturuDetailState@CKanturu@@QAEHXZ PROC		; CKanturu::GetKanturuDetailState, COMDAT
; _this$ = ecx

; 424  : 	int iCurrentDetailState = KANTURU_STATE_NONE;
; 425  : 
; 426  : 	switch ( this->GetKanturuState() )

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	4a		 dec	 edx
  00004	33 c0		 xor	 eax, eax
  00006	83 fa 03	 cmp	 edx, 3
  00009	77 22		 ja	 SHORT $LN5@GetKanturu
  0000b	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN19@GetKanturu[edx*4]
$LN4@GetKanturu:

; 427  : 	{
; 428  : 		case KANTURU_STATE_BATTLE_STANTBY:
; 429  : 			iCurrentDetailState = this->m_BattleStanby.GetBattleStanbyState();

  00012	8b 81 94 00 00
	00		 mov	 eax, DWORD PTR [ecx+148]

; 439  : 			break;
; 440  : 	}
; 441  : 
; 442  : 	return iCurrentDetailState;
; 443  : }

  00018	c3		 ret	 0
$LN3@GetKanturu:

; 430  : 			break;
; 431  : 		case KANTURU_STATE_BATTLE_OF_MAYA:
; 432  : 			iCurrentDetailState = this->m_BattleOfMaya.GetBattleOfMayaState();

  00019	8b 81 fc 00 00
	00		 mov	 eax, DWORD PTR [ecx+252]

; 439  : 			break;
; 440  : 	}
; 441  : 
; 442  : 	return iCurrentDetailState;
; 443  : }

  0001f	c3		 ret	 0
$LN2@GetKanturu:

; 433  : 			break;
; 434  : 		case KANTURU_STATE_BATTLE_OF_NIGHTMARE:
; 435  : 			iCurrentDetailState = this->m_BattleOfNightmare.GetBattleOfNightmareState();

  00020	8b 81 24 03 00
	00		 mov	 eax, DWORD PTR [ecx+804]

; 439  : 			break;
; 440  : 	}
; 441  : 
; 442  : 	return iCurrentDetailState;
; 443  : }

  00026	c3		 ret	 0
$LN1@GetKanturu:

; 436  : 			break;
; 437  : 		case KANTURU_STATE_TOWER_OF_REFINEMENT:
; 438  : 			iCurrentDetailState = this->m_TowerOfRefinement.GetTowerOfRefinementState();

  00027	8b 81 b8 03 00
	00		 mov	 eax, DWORD PTR [ecx+952]
$LN5@GetKanturu:

; 439  : 			break;
; 440  : 	}
; 441  : 
; 442  : 	return iCurrentDetailState;
; 443  : }

  0002d	c3		 ret	 0
  0002e	8b ff		 npad	 2
$LN19@GetKanturu:
  00030	00 00 00 00	 DD	 $LN4@GetKanturu
  00034	00 00 00 00	 DD	 $LN3@GetKanturu
  00038	00 00 00 00	 DD	 $LN2@GetKanturu
  0003c	00 00 00 00	 DD	 $LN1@GetKanturu
?GetKanturuDetailState@CKanturu@@QAEHXZ ENDP		; CKanturu::GetKanturuDetailState
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturu@@QAEHXZ			; CKanturu::GetRemainTime
EXTRN	?GetRemainTime@CKanturuTowerOfRefinement@@QAEHXZ:PROC ; CKanturuTowerOfRefinement::GetRemainTime
EXTRN	?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ:PROC ; CKanturuBattleOfNightmare::GetRemainTime
EXTRN	?GetRemainTime@CKanturuBattleOfMaya@@QAEHXZ:PROC ; CKanturuBattleOfMaya::GetRemainTime
EXTRN	?GetRemainTime@CKanturuBattleStanby@@QAEHXZ:PROC ; CKanturuBattleStanby::GetRemainTime
; Function compile flags: /Ogtp
;	COMDAT ?GetRemainTime@CKanturu@@QAEHXZ
_TEXT	SEGMENT
?GetRemainTime@CKanturu@@QAEHXZ PROC			; CKanturu::GetRemainTime, COMDAT
; _this$ = ecx

; 466  : 	int iRemainTime = 0;
; 467  : 
; 468  : 	switch ( this->GetKanturuState() )

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	4a		 dec	 edx
  00004	33 c0		 xor	 eax, eax
  00006	83 fa 03	 cmp	 edx, 3
  00009	77 33		 ja	 SHORT $LN5@GetRemainT@2
  0000b	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN13@GetRemainT@2[edx*4]
$LN4@GetRemainT@2:

; 469  : 	{
; 470  : 		case KANTURU_STATE_BATTLE_STANTBY:
; 471  : 			iRemainTime = this->m_BattleStanby.GetRemainTime();

  00012	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00018	e9 00 00 00 00	 jmp	 ?GetRemainTime@CKanturuBattleStanby@@QAEHXZ ; CKanturuBattleStanby::GetRemainTime
$LN3@GetRemainT@2:

; 472  : 			break;
; 473  : 		case KANTURU_STATE_BATTLE_OF_MAYA:
; 474  : 			iRemainTime = this->m_BattleOfMaya.GetRemainTime();

  0001d	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  00023	e9 00 00 00 00	 jmp	 ?GetRemainTime@CKanturuBattleOfMaya@@QAEHXZ ; CKanturuBattleOfMaya::GetRemainTime
$LN2@GetRemainT@2:

; 475  : 			break;
; 476  : 		case KANTURU_STATE_BATTLE_OF_NIGHTMARE:
; 477  : 			iRemainTime = this->m_BattleOfNightmare.GetRemainTime();

  00028	81 c1 20 03 00
	00		 add	 ecx, 800		; 00000320H
  0002e	e9 00 00 00 00	 jmp	 ?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetRemainTime
$LN1@GetRemainT@2:

; 478  : 			break;
; 479  : 		case KANTURU_STATE_TOWER_OF_REFINEMENT:
; 480  : 			iRemainTime = this->m_TowerOfRefinement.GetRemainTime();

  00033	81 c1 b4 03 00
	00		 add	 ecx, 948		; 000003b4H
  00039	e9 00 00 00 00	 jmp	 ?GetRemainTime@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetRemainTime
$LN5@GetRemainT@2:

; 481  : 			break;
; 482  : 	}
; 483  : 
; 484  : 	return iRemainTime;
; 485  : }

  0003e	c3		 ret	 0
  0003f	90		 npad	 1
$LN13@GetRemainT@2:
  00040	00 00 00 00	 DD	 $LN4@GetRemainT@2
  00044	00 00 00 00	 DD	 $LN3@GetRemainT@2
  00048	00 00 00 00	 DD	 $LN2@GetRemainT@2
  0004c	00 00 00 00	 DD	 $LN1@GetRemainT@2
?GetRemainTime@CKanturu@@QAEHXZ ENDP			; CKanturu::GetRemainTime
_TEXT	ENDS
PUBLIC	?KanturuMonsterDieProc@CKanturu@@QAEXHH@Z	; CKanturu::KanturuMonsterDieProc
EXTRN	?MonsterDie@CKanturuMonsterMng@@QAEXH@Z:PROC	; CKanturuMonsterMng::MonsterDie
EXTRN	?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A:BYTE ; g_KanturuMonsterMng
; Function compile flags: /Ogtp
;	COMDAT ?KanturuMonsterDieProc@CKanturu@@QAEXHH@Z
_TEXT	SEGMENT
_iMonIndex$ = 8						; size = 4
_iKillerIndex$ = 12					; size = 4
?KanturuMonsterDieProc@CKanturu@@QAEXHH@Z PROC		; CKanturu::KanturuMonsterDieProc, COMDAT
; _this$ = ecx

; 490  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	g_KanturuMonsterMng.MonsterDie(iMonIndex);	

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMonIndex$[ebp]
  00006	50		 push	 eax
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  0000c	e8 00 00 00 00	 call	 ?MonsterDie@CKanturuMonsterMng@@QAEXH@Z ; CKanturuMonsterMng::MonsterDie

; 492  : }

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?KanturuMonsterDieProc@CKanturu@@QAEXHH@Z ENDP		; CKanturu::KanturuMonsterDieProc
_TEXT	ENDS
PUBLIC	??_C@_0EC@MFOBEJFM@?$FL?5KANTURU?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ ; `string'
PUBLIC	?CheckUserOnKanturuBossMap@CKanturu@@QAEXXZ	; CKanturu::CheckUserOnKanturuBossMap
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0EC@MFOBEJFM@?$FL?5KANTURU?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
CONST	SEGMENT
??_C@_0EC@MFOBEJFM@?$FL?5KANTURU?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ DB '['
	DB	' KANTURU ][ Invalid User ] Invalid Kanturu Boss Map User[%s]['
	DB	'%s]', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CheckUserOnKanturuBossMap@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?CheckUserOnKanturuBossMap@CKanturu@@QAEXXZ PROC	; CKanturu::CheckUserOnKanturuBossMap, COMDAT
; _this$ = ecx

; 497  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  0000d	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00012	bb 02 00 00 00	 mov	 ebx, 2
$LL7@CheckUserO:

; 498  : 	{
; 499  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 500  : 			 gObj[iCount].Type == OBJ_USER &&
; 501  : 			 gObj[iCount].MapNumber == MAP_INDEX_KANTURU_BOSS)

  00017	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001c	75 6a		 jne	 SHORT $LN6@CheckUserO
  0001e	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00024	75 62		 jne	 SHORT $LN6@CheckUserO
  00026	80 bc 06 49 01
	00 00 27	 cmp	 BYTE PTR [esi+eax+329], 39 ; 00000027H
  0002e	75 58		 jne	 SHORT $LN6@CheckUserO

; 502  : 		{
; 503  : //#if(GS_CASTLE==0)
; 504  : 			if ( gObj[iCount].m_bKanturuEntranceByNPC == FALSE )

  00030	83 bc 06 10 20
	00 00 00	 cmp	 DWORD PTR [esi+eax+8208], 0
  00038	75 4e		 jne	 SHORT $LN6@CheckUserO

; 505  : //#endif
; 506  : 			{
; 507  : 				if ( (gObj[iCount].Authority&2) != 2 )

  0003a	84 9c 06 0c 02
	00 00		 test	 BYTE PTR [esi+eax+524], bl
  00041	75 45		 jne	 SHORT $LN6@CheckUserO

; 508  : 				{
; 509  : 					if ( gObj[iCount].RegenOk == 0 &&
; 510  : 						 gObj[iCount].m_State == 2 &&
; 511  : 						 gObj[iCount].Live == TRUE)

  00043	80 bc 06 a3 03
	00 00 00	 cmp	 BYTE PTR [esi+eax+931], 0
  0004b	75 3b		 jne	 SHORT $LN6@CheckUserO
  0004d	39 9c 06 20 02
	00 00		 cmp	 DWORD PTR [esi+eax+544], ebx
  00054	75 32		 jne	 SHORT $LN6@CheckUserO
  00056	80 7c 06 6a 01	 cmp	 BYTE PTR [esi+eax+106], 1
  0005b	75 2b		 jne	 SHORT $LN6@CheckUserO

; 512  : 					{
; 513  : 						gObjMoveGate(iCount, 17);

  0005d	6a 11		 push	 17			; 00000011H
  0005f	57		 push	 edi
  00060	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate

; 514  : 
; 515  : 						LogAddC(2, "[ KANTURU ][ Invalid User ] Invalid Kanturu Boss Map User[%s][%s]",
; 516  : 							gObj[iCount].AccountID, gObj[iCount].Name);

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006a	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  0006e	51		 push	 ecx
  0006f	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@MFOBEJFM@?$FL?5KANTURU?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
  00079	53		 push	 ebx
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00085	83 c4 18	 add	 esp, 24			; 00000018H
$LN6@CheckUserO:

; 497  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00088	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  0008e	47		 inc	 edi
  0008f	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00095	7c 80		 jl	 SHORT $LL7@CheckUserO

; 517  : 					}
; 518  : 				}
; 519  : 			}
; 520  : 
; 521  : 		}
; 522  : 	}
; 523  : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	c3		 ret	 0
?CheckUserOnKanturuBossMap@CKanturu@@QAEXXZ ENDP	; CKanturu::CheckUserOnKanturuBossMap
_TEXT	ENDS
PUBLIC	?CheckCanEnterKanturuBattle@CKanturu@@QAEHXZ	; CKanturu::CheckCanEnterKanturuBattle
; Function compile flags: /Ogtp
;	COMDAT ?CheckCanEnterKanturuBattle@CKanturu@@QAEHXZ
_TEXT	SEGMENT
?CheckCanEnterKanturuBattle@CKanturu@@QAEHXZ PROC	; CKanturu::CheckCanEnterKanturuBattle, COMDAT
; _this$ = ecx

; 688  : 	if ( this->GetKanturuState() == KANTURU_STATE_BATTLE_OF_MAYA &&
; 689  : 		 this->m_BattleOfMaya.GetEntrancePermit() == TRUE )

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	83 fa 02	 cmp	 edx, 2
  0000b	75 08		 jne	 SHORT $LN2@CheckCanEn
  0000d	39 81 c4 02 00
	00		 cmp	 DWORD PTR [ecx+708], eax

; 690  : 	{
; 691  : 		return TRUE;

  00013	74 17		 je	 SHORT $LN3@CheckCanEn
$LN2@CheckCanEn:

; 692  : 	}
; 693  : 
; 694  : 	if ( this->GetKanturuState() == KANTURU_STATE_TOWER_OF_REFINEMENT &&
; 695  : 		 this->m_TowerOfRefinement.GetEntrancePermit() == TRUE &&
; 696  : 		 this->m_TowerOfRefinement.IsUseTowerOfRefinement() == TRUE)

  00015	83 fa 04	 cmp	 edx, 4
  00018	75 10		 jne	 SHORT $LN1@CheckCanEn
  0001a	39 81 bc 03 00
	00		 cmp	 DWORD PTR [ecx+956], eax
  00020	75 08		 jne	 SHORT $LN1@CheckCanEn
  00022	39 81 c0 03 00
	00		 cmp	 DWORD PTR [ecx+960], eax

; 697  : 	{
; 698  : 		return TRUE;

  00028	74 02		 je	 SHORT $LN3@CheckCanEn
$LN1@CheckCanEn:

; 699  : 	}
; 700  : 
; 701  : 	return FALSE;

  0002a	33 c0		 xor	 eax, eax
$LN3@CheckCanEn:

; 702  : }

  0002c	c3		 ret	 0
?CheckCanEnterKanturuBattle@CKanturu@@QAEHXZ ENDP	; CKanturu::CheckCanEnterKanturuBattle
_TEXT	ENDS
PUBLIC	__real@00000000
PUBLIC	?CheckEqipmentMoonStone@CKanturu@@QAEHH@Z	; CKanturu::CheckEqipmentMoonStone
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
;	COMDAT __real@00000000
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?CheckEqipmentMoonStone@CKanturu@@QAEHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
?CheckEqipmentMoonStone@CKanturu@@QAEHH@Z PROC		; CKanturu::CheckEqipmentMoonStone, COMDAT
; _this$ = ecx

; 706  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 707  : 	if ( !this->GetEnableCheckMoonStone() )

  00003	83 b9 d4 7e 0a
	00 00		 cmp	 DWORD PTR [ecx+687828], 0
  0000a	75 09		 jne	 SHORT $LN5@CheckEqipm

; 708  : 		return TRUE;

  0000c	b8 01 00 00 00	 mov	 eax, 1

; 727  : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
$LN5@CheckEqipm:

; 709  : 
; 710  : 	if ( gObj[iUserIndex].pInventory[10].IsItem() ||
; 711  : 		 gObj[iUserIndex].pInventory[11].IsItem() )	

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	56		 push	 esi
  0001b	8b 75 08	 mov	 esi, DWORD PTR _iUserIndex$[ebp]
  0001e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00024	8b 8c 06 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+eax+3620]
  0002b	81 c1 48 08 00
	00		 add	 ecx, 2120		; 00000848H
  00031	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00036	85 c0		 test	 eax, eax
  00038	75 1c		 jne	 SHORT $LN3@CheckEqipm
  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00040	8b 8c 0e 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+ecx+3620]
  00047	81 c1 1c 09 00
	00		 add	 ecx, 2332		; 0000091cH
  0004d	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00052	85 c0		 test	 eax, eax
  00054	74 63		 je	 SHORT $LN1@CheckEqipm
$LN3@CheckEqipm:

; 712  : 	{
; 713  : 		if ( gObj[iUserIndex].pInventory[10].m_Type == ITEMGET(13,38) &&
; 714  : 			 gObj[iUserIndex].pInventory[10].m_Durability != 0.0f )

  00056	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005c	d9 ee		 fldz
  0005e	8b 8c 16 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+edx+3620]
  00065	b8 26 1a 00 00	 mov	 eax, 6694		; 00001a26H
  0006a	66 39 81 4e 08
	00 00		 cmp	 WORD PTR [ecx+2126], ax
  00071	75 1d		 jne	 SHORT $LN2@CheckEqipm
  00073	d9 81 6c 08 00
	00		 fld	 DWORD PTR [ecx+2156]
  00079	d9 c1		 fld	 ST(1)
  0007b	da e9		 fucompp
  0007d	df e0		 fnstsw	 ax
  0007f	f6 c4 44	 test	 ah, 68			; 00000044H
  00082	7b 0c		 jnp	 SHORT $LN2@CheckEqipm
  00084	dd d8		 fstp	 ST(0)

; 715  : 		{
; 716  : 			return TRUE;

  00086	b8 01 00 00 00	 mov	 eax, 1
  0008b	5e		 pop	 esi

; 727  : }

  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
$LN2@CheckEqipm:

; 717  : 		}
; 718  : 
; 719  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,38) &&
; 720  : 			 gObj[iUserIndex].pInventory[11].m_Durability != 0.0f )

  00090	ba 26 1a 00 00	 mov	 edx, 6694		; 00001a26H
  00095	66 39 91 22 09
	00 00		 cmp	 WORD PTR [ecx+2338], dx
  0009c	75 19		 jne	 SHORT $LN17@CheckEqipm
  0009e	d9 81 40 09 00
	00		 fld	 DWORD PTR [ecx+2368]
  000a4	da e9		 fucompp
  000a6	df e0		 fnstsw	 ax
  000a8	f6 c4 44	 test	 ah, 68			; 00000044H
  000ab	7b 0c		 jnp	 SHORT $LN1@CheckEqipm

; 721  : 		{
; 722  : 			return TRUE;

  000ad	b8 01 00 00 00	 mov	 eax, 1
  000b2	5e		 pop	 esi

; 727  : }

  000b3	5d		 pop	 ebp
  000b4	c2 04 00	 ret	 4
$LN17@CheckEqipm:

; 717  : 		}
; 718  : 
; 719  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,38) &&
; 720  : 			 gObj[iUserIndex].pInventory[11].m_Durability != 0.0f )

  000b7	dd d8		 fstp	 ST(0)
$LN1@CheckEqipm:

; 723  : 		}
; 724  : 	}
; 725  : 
; 726  : 	return FALSE;

  000b9	33 c0		 xor	 eax, eax
  000bb	5e		 pop	 esi

; 727  : }

  000bc	5d		 pop	 ebp
  000bd	c2 04 00	 ret	 4
?CheckEqipmentMoonStone@CKanturu@@QAEHH@Z ENDP		; CKanturu::CheckEqipmentMoonStone
_TEXT	ENDS
PUBLIC	?OperateGmCommand@CKanturu@@QAEXHH@Z		; CKanturu::OperateGmCommand
; Function compile flags: /Ogtp
;	COMDAT ?OperateGmCommand@CKanturu@@QAEXHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
_iCommand$ = 12						; size = 4
?OperateGmCommand@CKanturu@@QAEXHH@Z PROC		; CKanturu::OperateGmCommand, COMDAT
; _this$ = ecx

; 733  : 	return;
; 734  : 	{
; 735  : 		int iCurrentState[3];///???
; 736  : 	}
; 737  : }

  00000	c2 08 00	 ret	 8
?OperateGmCommand@CKanturu@@QAEXHH@Z ENDP		; CKanturu::OperateGmCommand
_TEXT	ENDS
PUBLIC	?UserMonsterCountCheck@CKanturu@@QAEXXZ		; CKanturu::UserMonsterCountCheck
; Function compile flags: /Ogtp
;	COMDAT ?UserMonsterCountCheck@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?UserMonsterCountCheck@CKanturu@@QAEXXZ PROC		; CKanturu::UserMonsterCountCheck, COMDAT
; _this$ = ecx

; 748  : 	return;
; 749  : 
; 750  : 	int iUserCount_Live = 0;
; 751  : 	int iUserCount_Die = 0;
; 752  : 	for ( int iAllUserCount=OBJ_STARTUSERINDZT;iAllUserCount<OBJMAX;iAllUserCount++)
; 753  : 	{
; 754  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_KANTURU_BOSS &&
; 755  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 756  : 			 (gObj[iAllUserCount].Authority&2) != 2 )
; 757  : 		{
; 758  : 			if ( gObj[iAllUserCount].Live == TRUE )
; 759  : 			{
; 760  : 				iUserCount_Live++;
; 761  : 			}
; 762  : 			else
; 763  : 			{
; 764  : 				iUserCount_Die++;
; 765  : 			}
; 766  : 		}
; 767  : 	}
; 768  : 
; 769  : 	KANTURU_TEST_LOG.Output("[ KANTURU ][ Debug ] 2. All User Check:%d/(Die:%d)", iUserCount_Live, iUserCount_Die);
; 770  : 	KANTURU_TEST_LOG.Output("[ KANTURU ][ Debug ] 3. MonsterMng Count:%d", g_KanturuMonsterMng.GetAliveMonsterCount());
; 771  : 
; 772  : 	int iMonsterCount=0;
; 773  : 
; 774  : 	for ( int iAllMonsterCount=0;iAllMonsterCount<OBJ_STARTUSERINDZT;iAllMonsterCount++)
; 775  : 	{
; 776  : 		if ( gObj[iAllMonsterCount].MapNumber == MAP_INDEX_KANTURU_BOSS &&
; 777  : 			 gObj[iAllMonsterCount].Connected == PLAYER_PLAYING &&
; 778  : 			 gObj[iAllMonsterCount].Type == OBJ_MONSTER )
; 779  : 		{
; 780  : 			if ( gObj[iAllMonsterCount].Class != 105 &&
; 781  : 				 gObj[iAllMonsterCount].Class != 106 &&
; 782  : 				 gObj[iAllMonsterCount].Class != 364 )
; 783  : 			{
; 784  : 				iMonsterCount++;
; 785  : 
; 786  : 				KANTURU_TEST_LOG.Output("[ KANTURU ][ Debug ] 4. Monster Info %s(%d/ObjIndex:%d) [%d]%d-%d HP:%0.1f IsAlive:%d Connected:%d State:%d ActState:Attack(%d)/Move(%d) DieRegen:%d",
; 787  : 					gObj[iAllMonsterCount].Name, gObj[iAllMonsterCount].Class,
; 788  : 					gObj[iAllMonsterCount].m_Index, gObj[iAllMonsterCount].MapNumber,
; 789  : 					gObj[iAllMonsterCount].X, gObj[iAllMonsterCount].Y,
; 790  : 					gObj[iAllMonsterCount].Life, gObj[iAllMonsterCount].Live,
; 791  : 					gObj[iAllMonsterCount].Connected, gObj[iAllMonsterCount].m_State,
; 792  : 					gObj[iAllMonsterCount].m_ActState.Attack, gObj[iAllMonsterCount].m_ActState.Move,
; 793  : 					gObj[iAllMonsterCount].DieRegen);
; 794  : 			}
; 795  : 		}
; 796  : 	}
; 797  : }

  00000	c3		 ret	 0
?UserMonsterCountCheck@CKanturu@@QAEXXZ ENDP		; CKanturu::UserMonsterCountCheck
_TEXT	ENDS
PUBLIC	?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
;	COMDAT ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::ResetTimeInfo, COMDAT
; _this$ = ecx

; 22   : 		this->SetStateInfo(0);

  00000	33 c0		 xor	 eax, eax
  00002	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 23   : 		this->SetCondition(0);

  00005	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 24   : 		this->SetValue(0);

  00008	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 25   : 	}

  0000b	c3		 ret	 0
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::ResetTimeInfo
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCKanturu@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCKanturu@@UAEPAXI@Z PROC				; CKanturu::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CKanturu@@UAE@XZ	; CKanturu::~CKanturu
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCKanturu@@UAEPAXI@Z ENDP				; CKanturu::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ResetAllData@CKanturu@@QAEXXZ			; CKanturu::ResetAllData
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
;	COMDAT ?ResetAllData@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ResetAllData@CKanturu@@QAEXXZ PROC			; CKanturu::ResetAllData, COMDAT
; _this$ = ecx

; 40   : 	this->m_StateInfoCount = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 41   : 
; 42   : 	for ( int iCount=0;iCount<MAX_KANTURU_STATE_INFO;iCount++)
; 43   : 	{
; 44   : 		this->m_StateInfo[iCount].ResetTimeInfo();

  00008	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  0000b	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  0000e	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  00011	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  00014	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  00017	89 41 34	 mov	 DWORD PTR [ecx+52], eax
  0001a	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  0001d	89 41 44	 mov	 DWORD PTR [ecx+68], eax
  00020	89 41 48	 mov	 DWORD PTR [ecx+72], eax
  00023	89 41 54	 mov	 DWORD PTR [ecx+84], eax
  00026	89 41 58	 mov	 DWORD PTR [ecx+88], eax
  00029	89 41 5c	 mov	 DWORD PTR [ecx+92], eax
  0002c	89 41 68	 mov	 DWORD PTR [ecx+104], eax
  0002f	89 41 6c	 mov	 DWORD PTR [ecx+108], eax
  00032	89 41 70	 mov	 DWORD PTR [ecx+112], eax
  00035	89 41 7c	 mov	 DWORD PTR [ecx+124], eax
  00038	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax
  0003e	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 45   : 	}
; 46   : }

  00044	c3		 ret	 0
?ResetAllData@CKanturu@@QAEXXZ ENDP			; CKanturu::ResetAllData
_TEXT	ENDS
PUBLIC	??_C@_0DA@POPJLFKC@?$FL?5KANTURU?5?$FN?5?9?5File?5load?5error?5?3?5@ ; `string'
PUBLIC	??_C@_0DC@FKIBHPBC@?$FL?5KANTURU?5?$FN?5?9?5Loading?5Exception?5@ ; `string'
PUBLIC	??_C@_0CJ@NADNLLJP@?$FL?5KANTURU?5?$FN?5?9?5Exceed?5Max?5State?5T@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@ ; `string'
PUBLIC	??_C@_0CA@IEFEEOLJ@?$FL?5KANTURU?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ ; `string'
PUBLIC	??_C@_0BN@GAHNOIOK@?$FL?5KANTURU?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?LoadData@CKanturu@@QAEHPAD@Z			; CKanturu::LoadData
EXTRN	?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z:PROC ; CKanturuTowerOfRefinement::LoadData
EXTRN	?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z:PROC ; CKanturuBattleOfNightmare::LoadData
EXTRN	?LoadData@CKanturuBattleOfMaya@@QAEHPAD@Z:PROC	; CKanturuBattleOfMaya::LoadData
EXTRN	?LoadData@CKanturuBattleStanby@@QAEHPAD@Z:PROC	; CKanturuBattleStanby::LoadData
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	_fclose:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0DA@POPJLFKC@?$FL?5KANTURU?5?$FN?5?9?5File?5load?5error?5?3?5@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0DA@POPJLFKC@?$FL?5KANTURU?5?$FN?5?9?5File?5load?5error?5?3?5@ DB '['
	DB	' KANTURU ] - File load error : File Name Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FKIBHPBC@?$FL?5KANTURU?5?$FN?5?9?5Loading?5Exception?5@
CONST	SEGMENT
??_C@_0DC@FKIBHPBC@?$FL?5KANTURU?5?$FN?5?9?5Loading?5Exception?5@ DB '[ K'
	DB	'ANTURU ] - Loading Exception Error (%s) File. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NADNLLJP@?$FL?5KANTURU?5?$FN?5?9?5Exceed?5Max?5State?5T@
CONST	SEGMENT
??_C@_0CJ@NADNLLJP@?$FL?5KANTURU?5?$FN?5?9?5Exceed?5Max?5State?5T@ DB '[ '
	DB	'KANTURU ] - Exceed Max State Time (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@
CONST	SEGMENT
??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@ DB '.\Events\Kanturu.dat'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IEFEEOLJ@?$FL?5KANTURU?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
CONST	SEGMENT
??_C@_0CA@IEFEEOLJ@?$FL?5KANTURU?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ DB '['
	DB	' KANTURU ] - %s file is Loaded', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GAHNOIOK@?$FL?5KANTURU?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
CONST	SEGMENT
??_C@_0BN@GAHNOIOK@?$FL?5KANTURU?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ DB '['
	DB	' KANTURU ] - Can''t Open %s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadData@CKanturu@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CKanturu@@QAEHPAD@Z$0
__unwindtable$?LoadData@CKanturu@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CKanturu@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CKanturu@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CKanturu@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CKanturu@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CKanturu@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
xdata$x	ENDS
;	COMDAT ?LoadData@CKanturu@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_iType$209875 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_lpszFileName$ = 8					; size = 4
?LoadData@CKanturu@@QAEHPAD@Z PROC			; CKanturu::LoadData, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadData@CKanturu@@QAEHPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d e8	 mov	 DWORD PTR _this$[ebp], ebx

; 52   : 	this->m_bFileDataLoad = FALSE;
; 53   : 
; 54   : 	if ( !lpszFileName || !strcmp(lpszFileName, ""))

  00030	8b 75 08	 mov	 esi, DWORD PTR _lpszFileName$[ebp]
  00033	33 ff		 xor	 edi, edi
  00035	89 7b 10	 mov	 DWORD PTR [ebx+16], edi
  00038	3b f7		 cmp	 esi, edi
  0003a	0f 84 d2 02 00
	00		 je	 $LN18@LoadData
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00045	8b c6		 mov	 eax, esi
$LL40@LoadData:
  00047	8a 10		 mov	 dl, BYTE PTR [eax]
  00049	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0004b	75 1a		 jne	 SHORT $LN41@LoadData
  0004d	84 d2		 test	 dl, dl
  0004f	74 12		 je	 SHORT $LN42@LoadData
  00051	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00054	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00057	75 0e		 jne	 SHORT $LN41@LoadData
  00059	83 c0 02	 add	 eax, 2
  0005c	83 c1 02	 add	 ecx, 2
  0005f	84 d2		 test	 dl, dl
  00061	75 e4		 jne	 SHORT $LL40@LoadData
$LN42@LoadData:
  00063	33 c0		 xor	 eax, eax
  00065	eb 05		 jmp	 SHORT $LN43@LoadData
$LN41@LoadData:
  00067	1b c0		 sbb	 eax, eax
  00069	83 d8 ff	 sbb	 eax, -1
$LN43@LoadData:
  0006c	3b c7		 cmp	 eax, edi
  0006e	0f 84 9e 02 00
	00		 je	 $LN18@LoadData

; 58   : 	}
; 59   : 
; 60   : 	try
; 61   : 	{
; 62   : 
; 63   : 		SMDFile = fopen(lpszFileName, "r");

  00074	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00079	56		 push	 esi
  0007a	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi
  0007d	e8 00 00 00 00	 call	 _fopen
  00082	83 c4 08	 add	 esp, 8
  00085	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 64   : 
; 65   : 		if ( SMDFile == NULL )

  0008a	3b c7		 cmp	 eax, edi
  0008c	75 19		 jne	 SHORT $LN16@LoadData

; 66   : 		{
; 67   : 			DWORD dwError = GetLastError();

  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 68   : 			MsgBox("[ KANTURU ] - Can't Open %s ", lpszFileName);

  00094	56		 push	 esi
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@GAHNOIOK@?$FL?5KANTURU?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
  0009a	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0009f	83 c4 08	 add	 esp, 8

; 69   : 			return FALSE;

  000a2	e9 78 02 00 00	 jmp	 $LN58@LoadData
$LN16@LoadData:

; 70   : 		}
; 71   : 
; 72   : 		this->ResetAllData();

  000a7	8b cb		 mov	 ecx, ebx
  000a9	e8 00 00 00 00	 call	 ?ResetAllData@CKanturu@@QAEXXZ ; CKanturu::ResetAllData
  000ae	8b ff		 npad	 2
$LL15@LoadData:

; 73   : 
; 74   : 		enum SMDToken Token;
; 75   : 		int iType = -1;
; 76   : 		int iState = 0;
; 77   : 		int iCondition = 0;
; 78   : 		int iValue = 0;
; 79   : 
; 80   : 		while ( true )
; 81   : 		{
; 82   : 			Token = (SMDToken)GetToken();

  000b0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 83   : 			
; 84   : 			if ( Token ==  END )

  000b5	83 f8 02	 cmp	 eax, 2
  000b8	0f 85 a9 00 00
	00		 jne	 $LN13@LoadData

; 147  : 
; 148  : 		fclose(SMDFile);

  000be	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 _fclose

; 149  : 		LogAddC(2, "[ KANTURU ] - %s file is Loaded", lpszFileName);

  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  000cc	51		 push	 ecx
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IEFEEOLJ@?$FL?5KANTURU?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
  000d2	6a 02		 push	 2
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  000da	83 c4 10	 add	 esp, 16			; 00000010H

; 150  : 		
; 151  : 		this->m_bFileDataLoad = TRUE;
; 152  : 
; 153  : 		// Load Other Resources from Kanturu.dat
; 154  : 		this->m_BattleStanby.LoadData(gDirPath.GetNewPath(".\\Events\\Kanturu.dat"));

  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@
  000e2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  000e7	c7 43 10 01 00
	00 00		 mov	 DWORD PTR [ebx+16], 1
  000ee	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000f3	50		 push	 eax
  000f4	8d 8b 90 00 00
	00		 lea	 ecx, DWORD PTR [ebx+144]
  000fa	e8 00 00 00 00	 call	 ?LoadData@CKanturuBattleStanby@@QAEHPAD@Z ; CKanturuBattleStanby::LoadData

; 155  : 		this->m_BattleOfMaya.LoadData(gDirPath.GetNewPath(".\\Events\\Kanturu.dat"));

  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@
  00104	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00109	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0010e	50		 push	 eax
  0010f	8d 8b f4 00 00
	00		 lea	 ecx, DWORD PTR [ebx+244]
  00115	e8 00 00 00 00	 call	 ?LoadData@CKanturuBattleOfMaya@@QAEHPAD@Z ; CKanturuBattleOfMaya::LoadData

; 156  : 		this->m_BattleOfNightmare.LoadData(gDirPath.GetNewPath(".\\Events\\Kanturu.dat"));

  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@
  0011f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00124	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00129	50		 push	 eax
  0012a	8d 8b 20 03 00
	00		 lea	 ecx, DWORD PTR [ebx+800]
  00130	e8 00 00 00 00	 call	 ?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z ; CKanturuBattleOfNightmare::LoadData

; 157  : 		this->m_TowerOfRefinement.LoadData(gDirPath.GetNewPath(".\\Events\\Kanturu.dat"));

  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OBGFNJKC@?4?2Events?2Kanturu?4dat?$AA@
  0013a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0013f	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00144	50		 push	 eax
  00145	8d 8b b4 03 00
	00		 lea	 ecx, DWORD PTR [ebx+948]
  0014b	e8 00 00 00 00	 call	 ?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z ; CKanturuTowerOfRefinement::LoadData

; 163  : 
; 164  : 	return this->m_bFileDataLoad;

  00150	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]

; 165  : }

  00153	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00156	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015d	59		 pop	 ecx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
$LN13@LoadData:

; 85   : 				break;
; 86   : 			
; 87   : 			iType = (int)TokenNumber;

  00167	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0016d	e8 00 00 00 00	 call	 __ftol2_sse
  00172	8b f0		 mov	 esi, eax
  00174	89 75 ec	 mov	 DWORD PTR _iType$209875[ebp], esi
$LL12@LoadData:

; 88   : 
; 89   : 			while ( true )
; 90   : 			{
; 91   : 				if ( iType == 0 )
; 92   : 				{
; 93   : 					iState = 0;
; 94   : 					iCondition = 0;
; 95   : 					iValue = 0;
; 96   : 
; 97   : 					Token = (SMDToken)GetToken();

  00177	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 98   : 					
; 99   : 					if ( !strcmp("end", TokenString))

  0017c	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00181	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00186	85 f6		 test	 esi, esi
  00188	0f 85 eb 00 00
	00		 jne	 $LN10@LoadData
  0018e	8b ff		 npad	 2
$LL44@LoadData:
  00190	8a 10		 mov	 dl, BYTE PTR [eax]
  00192	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00194	75 1a		 jne	 SHORT $LN45@LoadData
  00196	84 d2		 test	 dl, dl
  00198	74 12		 je	 SHORT $LN46@LoadData
  0019a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0019d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001a0	75 0e		 jne	 SHORT $LN45@LoadData
  001a2	83 c0 02	 add	 eax, 2
  001a5	83 c1 02	 add	 ecx, 2
  001a8	84 d2		 test	 dl, dl
  001aa	75 e4		 jne	 SHORT $LL44@LoadData
$LN46@LoadData:
  001ac	33 c0		 xor	 eax, eax
  001ae	eb 05		 jmp	 SHORT $LN47@LoadData
$LN45@LoadData:
  001b0	1b c0		 sbb	 eax, eax
  001b2	83 d8 ff	 sbb	 eax, -1
$LN47@LoadData:
  001b5	85 c0		 test	 eax, eax
  001b7	0f 84 f3 fe ff
	ff		 je	 $LL15@LoadData

; 100  : 						break;
; 101  : 
; 102  : 					iState = (int)TokenNumber;

  001bd	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001c3	e8 00 00 00 00	 call	 __ftol2_sse
  001c8	8b f8		 mov	 edi, eax

; 103  : 
; 104  : 					Token = (SMDToken)GetToken();

  001ca	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 105  : 					iCondition = (int)TokenNumber;

  001cf	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001d5	e8 00 00 00 00	 call	 __ftol2_sse
  001da	8b f0		 mov	 esi, eax

; 106  : 
; 107  : 					Token = (SMDToken)GetToken();

  001dc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 108  : 					iValue = (int)TokenNumber;

  001e1	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001e7	e8 00 00 00 00	 call	 __ftol2_sse

; 109  : 
; 110  : 					if ( this->m_StateInfoCount < 0 || this->m_StateInfoCount >= MAX_KANTURU_STATE_INFO )

  001ec	8b 8b 8c 00 00
	00		 mov	 ecx, DWORD PTR [ebx+140]
  001f2	85 c9		 test	 ecx, ecx
  001f4	78 3f		 js	 SHORT $LN7@LoadData
  001f6	83 f9 06	 cmp	 ecx, 6
  001f9	7d 3a		 jge	 SHORT $LN7@LoadData

; 114  : 					}
; 115  : 
; 116  : 					this->m_StateInfo[this->m_StateInfoCount].SetStateInfo(iState);

  001fb	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  001fe	89 7c 93 18	 mov	 DWORD PTR [ebx+edx*4+24], edi

; 117  : 					this->m_StateInfo[this->m_StateInfoCount].SetCondition(iCondition);

  00202	8b 8b 8c 00 00
	00		 mov	 ecx, DWORD PTR [ebx+140]
  00208	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0020b	89 74 8b 1c	 mov	 DWORD PTR [ebx+ecx*4+28], esi

; 118  : 
; 119  : 					if ( iCondition == 1 )

  0020f	83 fe 01	 cmp	 esi, 1
  00212	75 06		 jne	 SHORT $LN6@LoadData

; 120  : 						iValue *= 1000;

  00214	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
$LN6@LoadData:

; 121  : 
; 122  : 					this->m_StateInfo[this->m_StateInfoCount].SetValue(iValue);

  0021a	8b 8b 8c 00 00
	00		 mov	 ecx, DWORD PTR [ebx+140]

; 123  : 
; 124  : 					this->m_StateInfoCount++;

  00220	8b 75 ec	 mov	 esi, DWORD PTR _iType$209875[ebp]
  00223	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  00226	89 44 93 20	 mov	 DWORD PTR [ebx+edx*4+32], eax
  0022a	ff 83 8c 00 00
	00		 inc	 DWORD PTR [ebx+140]
  00230	e9 42 ff ff ff	 jmp	 $LL12@LoadData
$LN7@LoadData:

; 111  : 					{
; 112  : 						MsgBox("[ KANTURU ] - Exceed Max State Time (%d)", this->m_StateInfoCount);

  00235	51		 push	 ecx
  00236	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@NADNLLJP@?$FL?5KANTURU?5?$FN?5?9?5Exceed?5Max?5State?5T@
  0023b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00240	83 c4 08	 add	 esp, 8

; 113  : 						break;

  00243	e9 68 fe ff ff	 jmp	 $LL15@LoadData
__catch$?LoadData@CKanturu@@QAEHPAD@Z$0:

; 158  : 	}
; 159  : 	catch (...)
; 160  : 	{
; 161  : 		MsgBox("[ KANTURU ] - Loading Exception Error (%s) File. ", lpszFileName);

  00248	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  0024b	50		 push	 eax
  0024c	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@FKIBHPBC@?$FL?5KANTURU?5?$FN?5?9?5Loading?5Exception?5@
  00251	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00256	83 c4 08	 add	 esp, 8

; 162  : 	}

  00259	b8 00 00 00 00	 mov	 eax, $LN56@LoadData
  0025e	c3		 ret	 0
$LN56@LoadData:
  0025f	8b 5d e8	 mov	 ebx, DWORD PTR _this$[ebp]

; 163  : 
; 164  : 	return this->m_bFileDataLoad;

  00262	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]

; 165  : }

  00265	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00268	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0026f	59		 pop	 ecx
  00270	5f		 pop	 edi
  00271	5e		 pop	 esi
  00272	5b		 pop	 ebx
  00273	8b e5		 mov	 esp, ebp
  00275	5d		 pop	 ebp
  00276	c2 04 00	 ret	 4
$LN10@LoadData:

; 125  : 				}
; 126  : 				else if ( iType == 10 )

  00279	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0027c	75 62		 jne	 SHORT $LL52@LoadData
  0027e	8b ff		 npad	 2
$LL48@LoadData:

; 127  : 				{
; 128  : 					BOOL bEnableCheckMoonStone = FALSE;
; 129  : 
; 130  : 					Token = (SMDToken)GetToken();
; 131  : 					
; 132  : 					if ( !strcmp("end", TokenString))

  00280	8a 10		 mov	 dl, BYTE PTR [eax]
  00282	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00284	75 1a		 jne	 SHORT $LN49@LoadData
  00286	84 d2		 test	 dl, dl
  00288	74 12		 je	 SHORT $LN50@LoadData
  0028a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0028d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00290	75 0e		 jne	 SHORT $LN49@LoadData
  00292	83 c0 02	 add	 eax, 2
  00295	83 c1 02	 add	 ecx, 2
  00298	84 d2		 test	 dl, dl
  0029a	75 e4		 jne	 SHORT $LL48@LoadData
$LN50@LoadData:
  0029c	33 c0		 xor	 eax, eax
  0029e	eb 05		 jmp	 SHORT $LN51@LoadData
$LN49@LoadData:
  002a0	1b c0		 sbb	 eax, eax
  002a2	83 d8 ff	 sbb	 eax, -1
$LN51@LoadData:
  002a5	85 c0		 test	 eax, eax
  002a7	0f 84 03 fe ff
	ff		 je	 $LL15@LoadData

; 133  : 						break;
; 134  : 
; 135  : 					bEnableCheckMoonStone = (bool)TokenNumber;

  002ad	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002b3	d9 ee		 fldz
  002b5	da e9		 fucompp
  002b7	df e0		 fnstsw	 ax
  002b9	f6 c4 44	 test	 ah, 68			; 00000044H
  002bc	7b 10		 jnp	 SHORT $LN22@LoadData
  002be	b0 01		 mov	 al, 1

; 136  : 					this->SetEnableCheckMoonStone(bEnableCheckMoonStone);

  002c0	0f b6 c8	 movzx	 ecx, al
  002c3	89 8b d4 7e 0a
	00		 mov	 DWORD PTR [ebx+687828], ecx

; 137  : 				}
; 138  : 				else

  002c9	e9 a9 fe ff ff	 jmp	 $LL12@LoadData
$LN22@LoadData:

; 133  : 						break;
; 134  : 
; 135  : 					bEnableCheckMoonStone = (bool)TokenNumber;

  002ce	32 c0		 xor	 al, al

; 136  : 					this->SetEnableCheckMoonStone(bEnableCheckMoonStone);

  002d0	0f b6 c8	 movzx	 ecx, al
  002d3	89 8b d4 7e 0a
	00		 mov	 DWORD PTR [ebx+687828], ecx

; 137  : 				}
; 138  : 				else

  002d9	e9 99 fe ff ff	 jmp	 $LL12@LoadData
  002de	8b ff		 npad	 2
$LL52@LoadData:

; 139  : 				{
; 140  : 					Token = (SMDToken)GetToken();
; 141  : 					
; 142  : 					if ( !strcmp("end", TokenString))

  002e0	8a 10		 mov	 dl, BYTE PTR [eax]
  002e2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  002e4	75 1a		 jne	 SHORT $LN53@LoadData
  002e6	84 d2		 test	 dl, dl
  002e8	74 12		 je	 SHORT $LN54@LoadData
  002ea	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  002ed	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  002f0	75 0e		 jne	 SHORT $LN53@LoadData
  002f2	83 c0 02	 add	 eax, 2
  002f5	83 c1 02	 add	 ecx, 2
  002f8	84 d2		 test	 dl, dl
  002fa	75 e4		 jne	 SHORT $LL52@LoadData
$LN54@LoadData:
  002fc	33 c0		 xor	 eax, eax
  002fe	eb 05		 jmp	 SHORT $LN55@LoadData
$LN53@LoadData:
  00300	1b c0		 sbb	 eax, eax
  00302	83 d8 ff	 sbb	 eax, -1
$LN55@LoadData:
  00305	85 c0		 test	 eax, eax
  00307	0f 85 6a fe ff
	ff		 jne	 $LL12@LoadData

; 143  : 						break;
; 144  : 				}
; 145  : 			}
; 146  : 		}

  0030d	e9 9e fd ff ff	 jmp	 $LL15@LoadData
$LN18@LoadData:

; 55   : 	{
; 56   : 		MsgBox("[ KANTURU ] - File load error : File Name Error");

  00312	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@POPJLFKC@?$FL?5KANTURU?5?$FN?5?9?5File?5load?5error?5?3?5@
  00317	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0031c	83 c4 04	 add	 esp, 4
$LN58@LoadData:

; 57   : 		return FALSE;

  0031f	33 c0		 xor	 eax, eax

; 165  : }

  00321	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00324	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0032b	59		 pop	 ecx
  0032c	5f		 pop	 edi
  0032d	5e		 pop	 esi
  0032e	5b		 pop	 ebx
  0032f	8b e5		 mov	 esp, ebp
  00331	5d		 pop	 ebp
  00332	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?LoadData@CKanturu@@QAEHPAD@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CKanturu@@QAEHPAD@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CKanturu@@QAEHPAD@Z ENDP			; CKanturu::LoadData
PUBLIC	??_C@_0EB@FNIFEOPG@?$FL?5KANTURU?5?$FN?$FL?5Map?5Attr?5Change?5?$FN?5M@ ; `string'
PUBLIC	?SetKanturuMapAttr@CKanturu@@QAEXE@Z		; CKanturu::SetKanturuMapAttr
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0EB@FNIFEOPG@?$FL?5KANTURU?5?$FN?$FL?5Map?5Attr?5Change?5?$FN?5M@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0EB@FNIFEOPG@?$FL?5KANTURU?5?$FN?$FL?5Map?5Attr?5Change?5?$FN?5M@ DB '['
	DB	' KANTURU ][ Map Attr Change ] Map(%d) State(%d) DetailState(%'
	DB	'd)', 00H					; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetKanturuMapAttr@CKanturu@@QAEXE@Z
_TEXT	SEGMENT
_btLevel$ = 8						; size = 1
?SetKanturuMapAttr@CKanturu@@QAEXE@Z PROC		; CKanturu::SetKanturuMapAttr, COMDAT
; _this$ = ecx

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 190  : 	MapClass & KanturuMap = this->m_KanturuMap[btLevel];
; 191  : 	memcpy(MapC[MAP_INDEX_KANTURU_BOSS].m_attrbuf, KanturuMap.m_attrbuf, 256*256);

  00003	8b 15 08 56 cc
	00		 mov	 edx, DWORD PTR ?MapC@@3PAVMapClass@@A+13391368
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	0f b6 7d 08	 movzx	 edi, BYTE PTR _btLevel$[ebp]
  0000f	8b c7		 mov	 eax, edi
  00011	69 c0 48 3d 05
	00		 imul	 eax, 343368		; 00053d48H
  00017	8b f1		 mov	 esi, ecx
  00019	8b 8c 30 54 04
	00 00		 mov	 ecx, DWORD PTR [eax+esi+1108]
  00020	68 00 00 01 00	 push	 65536			; 00010000H
  00025	51		 push	 ecx
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 _memcpy
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 192  : 
; 193  : 	LogAddC(2, "[ KANTURU ][ Map Attr Change ] Map(%d) State(%d) DetailState(%d)",
; 194  : 		btLevel, this->GetKanturuState(), this->GetKanturuDetailState());

  0002f	8b ce		 mov	 ecx, esi
  00031	e8 00 00 00 00	 call	 ?GetKanturuDetailState@CKanturu@@QAEHXZ ; CKanturu::GetKanturuDetailState
  00036	50		 push	 eax
  00037	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0003a	50		 push	 eax
  0003b	57		 push	 edi
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@FNIFEOPG@?$FL?5KANTURU?5?$FN?$FL?5Map?5Attr?5Change?5?$FN?5M@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00049	83 c4 14	 add	 esp, 20			; 00000014H
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi

; 195  : 
; 196  : }

  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?SetKanturuMapAttr@CKanturu@@QAEXE@Z ENDP		; CKanturu::SetKanturuMapAttr
_TEXT	ENDS
PUBLIC	??_C@_0CN@CLMPOCFJ@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5TOWER_O@ ; `string'
PUBLIC	?SetState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ	; CKanturu::SetState_TOWER_OF_REFINEMENT
EXTRN	?SetState@CKanturuTowerOfRefinement@@QAEXH@Z:PROC ; CKanturuTowerOfRefinement::SetState
;	COMDAT ??_C@_0CN@CLMPOCFJ@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5TOWER_O@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0CN@CLMPOCFJ@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5TOWER_O@ DB '['
	DB	' KANTURU ] State(%d) -> TOWER_OF_REFINEMENT', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?SetState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?SetState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ PROC	; CKanturu::SetState_TOWER_OF_REFINEMENT, COMDAT
; _this$ = ecx

; 322  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 323  : 	LogAddC(7, "[ KANTURU ] State(%d) -> TOWER_OF_REFINEMENT", this->m_iKanturuState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@CLMPOCFJ@?$FL?5KANTURU?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5TOWER_O@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 324  : 	this->SetKanturuState(KANTURU_STATE_TOWER_OF_REFINEMENT);
; 325  : 	this->m_TowerOfRefinement.SetState(1);

  00017	6a 01		 push	 1
  00019	8d 8e b4 03 00
	00		 lea	 ecx, DWORD PTR [esi+948]
  0001f	c7 46 08 04 00
	00 00		 mov	 DWORD PTR [esi+8], 4
  00026	e8 00 00 00 00	 call	 ?SetState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetState

; 326  : 	this->SetKanturuMapAttr(1);

  0002b	6a 01		 push	 1
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetKanturuMapAttr@CKanturu@@QAEXE@Z ; CKanturu::SetKanturuMapAttr
  00034	5e		 pop	 esi

; 327  : }

  00035	c3		 ret	 0
?SetState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ ENDP	; CKanturu::SetState_TOWER_OF_REFINEMENT
_TEXT	ENDS
PUBLIC	??_C@_0DA@EDHFFGEB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ ; `string'
PUBLIC	??_C@_0DI@ICLHIMEO@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Success?5?$FN?5@ ; `string'
PUBLIC	??_C@_0FB@GCLEDKFJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Tra@ ; `string'
PUBLIC	??_C@_0FI@PBEMOOOD@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Eli@ ; `string'
PUBLIC	??_C@_0FM@LINMECFL@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Jac@ ; `string'
PUBLIC	??_C@_0FD@JPPNGJPG@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5San@ ; `string'
PUBLIC	??_C@_0FI@IBINCNDO@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5X?9M@ ; `string'
PUBLIC	??_C@_0EK@BCIDIJNJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Uni@ ; `string'
PUBLIC	??_C@_0EM@CONDJFLC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Win@ ; `string'
PUBLIC	??_C@_0EN@NDCAHGGF@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Moo@ ; `string'
PUBLIC	??_C@_0ED@IFFAGOLB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Ove@ ; `string'
PUBLIC	??_C@_0EH@NKKJHBHC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ ; `string'
PUBLIC	?CheckEnterKanturu@CKanturu@@QAEHH@Z		; CKanturu::CheckEnterKanturu
EXTRN	?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ:PROC ; CKanturuBattleUserMng::IsOverMaxUser
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0DA@EDHFFGEB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
; File e:\work\tranet_version\gs\gameserver\kanturu.h
CONST	SEGMENT
??_C@_0DA@EDHFFGEB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ DB '['
	DB	' KANTURU ][ Entrance Fail ] [%s][%s] State(%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@ICLHIMEO@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Success?5?$FN?5@
CONST	SEGMENT
??_C@_0DI@ICLHIMEO@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Success?5?$FN?5@ DB '['
	DB	' KANTURU ][ Entrance Success ] [%s][%s] State(%d)-(%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@GCLEDKFJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Tra@
CONST	SEGMENT
??_C@_0FB@GCLEDKFJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Tra@ DB '['
	DB	' KANTURU ][ Entrance Fail ] Trasportation Ring is exist [%s]['
	DB	'%s] State(%d)-(%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@PBEMOOOD@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Eli@
CONST	SEGMENT
??_C@_0FI@PBEMOOOD@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Eli@ DB '['
	DB	' Kanturu ][ Entrance Fail ] EliteSkelletoneChangeRing is exis'
	DB	't [%s][%s] State(%d)-(%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@LINMECFL@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Jac@
CONST	SEGMENT
??_C@_0FM@LINMECFL@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Jac@ DB '['
	DB	' Kanturu ][ Entrance Fail ] Jack''O Lantern Polymorph Ring is'
	DB	' exist [%s][%s] State(%d)-(%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JPPNGJPG@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5San@
CONST	SEGMENT
??_C@_0FD@JPPNGJPG@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5San@ DB '['
	DB	' Kanturu ][ Entrance Fail ] Santa Polymorph Ring is exist [%s'
	DB	'][%s] State(%d)-(%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@IBINCNDO@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5X?9M@
CONST	SEGMENT
??_C@_0FI@IBINCNDO@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5X?9M@ DB '['
	DB	' Kanturu ][ Entrance Fail ] X-MASEvent Polymorph Ring is exis'
	DB	't [%s][%s] State(%d)-(%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@BCIDIJNJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Uni@
CONST	SEGMENT
??_C@_0EK@BCIDIJNJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Uni@ DB '['
	DB	' KANTURU ][ Entrance Fail ] Uniria Item is exist [%s][%s] Sta'
	DB	'te(%d)-(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@CONDJFLC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Win@
CONST	SEGMENT
??_C@_0EM@CONDJFLC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Win@ DB '['
	DB	' KANTURU ][ Entrance Fail ] Wing Item is not exist [%s][%s] S'
	DB	'tate(%d)-(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@NDCAHGGF@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Moo@
CONST	SEGMENT
??_C@_0EN@NDCAHGGF@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Moo@ DB '['
	DB	' KANTURU ][ Entrance Fail ] Moon Stone is not exist [%s][%s] '
	DB	'State(%d)-(%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@IFFAGOLB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Ove@
CONST	SEGMENT
??_C@_0ED@IFFAGOLB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Ove@ DB '['
	DB	' KANTURU ][ Entrance Fail ] Over Max User [%s][%s] State(%d)-'
	DB	'(%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@NKKJHBHC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
CONST	SEGMENT
??_C@_0EH@NKKJHBHC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ DB '['
	DB	' KANTURU ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] S'
	DB	'tate(%d)', 00H				; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturu.cpp
CONST	ENDS
;	COMDAT ?CheckEnterKanturu@CKanturu@@QAEHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
?CheckEnterKanturu@CKanturu@@QAEHH@Z PROC		; CKanturu::CheckEnterKanturu, COMDAT
; _this$ = ecx

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 528  : 	if ( !gObjIsConnected(iUserIndex) )

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _iUserIndex$[ebp]
  00007	57		 push	 edi
  00008	53		 push	 ebx
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 09		 jne	 SHORT $LN20@CheckEnter

; 529  : 		return -1;

  00017	5f		 pop	 edi
  00018	83 c8 ff	 or	 eax, -1
  0001b	5b		 pop	 ebx

; 682  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
$LN20@CheckEnter:

; 530  : 
; 531  : 	if ( gObj[iUserIndex].MapNumber != MAP_INDEX_KANTURU2 ) 

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00025	56		 push	 esi
  00026	8b f3		 mov	 esi, ebx
  00028	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0002e	8a 8c 06 49 01
	00 00		 mov	 cl, BYTE PTR [esi+eax+329]
  00035	80 f9 26	 cmp	 cl, 38			; 00000026H
  00038	74 2c		 je	 SHORT $LN19@CheckEnter

; 532  : 	{
; 533  : 		LogAddTD("[ KANTURU ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] State(%d)",
; 534  : 			gObj[iUserIndex].MapNumber, gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 535  : 			this->GetKanturuState());

  0003a	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  0003d	52		 push	 edx
  0003e	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  00042	52		 push	 edx
  00043	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  00047	0f b6 c9	 movzx	 ecx, cl
  0004a	50		 push	 eax
  0004b	51		 push	 ecx
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@NKKJHBHC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00057	83 c4 14	 add	 esp, 20			; 00000014H
  0005a	5e		 pop	 esi
  0005b	5f		 pop	 edi

; 536  : 
; 537  : 		return 4;

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	5b		 pop	 ebx

; 682  : }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN19@CheckEnter:

; 538  : 	}
; 539  : 
; 540  : 	if ( this->GetKanturuState() == KANTURU_STATE_BATTLE_OF_MAYA &&
; 541  : 		 this->m_BattleOfMaya.GetEntrancePermit() == TRUE)

  00066	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00069	83 f9 02	 cmp	 ecx, 2
  0006c	0f 85 0f 04 00
	00		 jne	 $LN91@CheckEnter
  00072	83 bf c4 02 00
	00 01		 cmp	 DWORD PTR [edi+708], 1
  00079	0f 85 02 04 00
	00		 jne	 $LN91@CheckEnter

; 542  : 	{
; 543  : 		if ( g_KanturuBattleUserMng.IsOverMaxUser() == TRUE )

  0007f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00084	e8 00 00 00 00	 call	 ?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ ; CKanturuBattleUserMng::IsOverMaxUser
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 34		 jne	 SHORT $LN17@CheckEnter

; 544  : 		{
; 545  : 			LogAddTD("[ KANTURU ][ Entrance Fail ] Over Max User [%s][%s] State(%d)-(%d)",
; 546  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 547  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  0008e	8b 97 fc 00 00
	00		 mov	 edx, DWORD PTR [edi+252]
  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00099	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0009c	52		 push	 edx
  0009d	51		 push	 ecx
  0009e	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  000a2	52		 push	 edx
  000a3	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  000a7	50		 push	 eax
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@IFFAGOLB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Ove@
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000b3	83 c4 14	 add	 esp, 20			; 00000014H
  000b6	5e		 pop	 esi
  000b7	5f		 pop	 edi

; 548  : 
; 549  : 			return 1;

  000b8	b8 01 00 00 00	 mov	 eax, 1
  000bd	5b		 pop	 ebx

; 682  : }

  000be	5d		 pop	 ebp
  000bf	c2 04 00	 ret	 4
$LN17@CheckEnter:

; 550  : 		}
; 551  : 
; 552  : 		if ( this->CheckEqipmentMoonStone(iUserIndex) == FALSE )

  000c2	53		 push	 ebx
  000c3	8b cf		 mov	 ecx, edi
  000c5	e8 00 00 00 00	 call	 ?CheckEqipmentMoonStone@CKanturu@@QAEHH@Z ; CKanturu::CheckEqipmentMoonStone
  000ca	85 c0		 test	 eax, eax
  000cc	75 34		 jne	 SHORT $LN16@CheckEnter

; 553  : 		{
; 554  : 			LogAddTD("[ KANTURU ][ Entrance Fail ] Moon Stone is not exist [%s][%s] State(%d)-(%d)",
; 555  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 556  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  000ce	8b 8f fc 00 00
	00		 mov	 ecx, DWORD PTR [edi+252]
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000d9	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  000dc	51		 push	 ecx
  000dd	52		 push	 edx
  000de	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  000e2	51		 push	 ecx
  000e3	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  000e7	52		 push	 edx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NDCAHGGF@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Moo@
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000f3	83 c4 14	 add	 esp, 20			; 00000014H
  000f6	5e		 pop	 esi
  000f7	5f		 pop	 edi

; 557  : 
; 558  : 			return 2;

  000f8	b8 02 00 00 00	 mov	 eax, 2
  000fd	5b		 pop	 ebx

; 682  : }

  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
$LN16@CheckEnter:

; 559  : 		}
; 560  : //#if(GS_CASTLE==0)
; 561  : 		if ( (gObj[iUserIndex].pInventory[7].m_Type < ITEMGET(12,0) || gObj[iUserIndex].pInventory[7].m_Type > ITEMGET(12,6) ) &&
; 562  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(13,30) &&
; 563  : 			 //Season 3.0 add-on (Summoner
; 564  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12,41) &&
; 565  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12,42) &&
; 566  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12,43) &&
; 567  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 49) &&//Season 6 addon
; 568  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 50) &&//Season 6 addon
; 569  : 			gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 130) &&//Season 6 addon
; 570  : 			gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 131) &&//Season 6 addon
; 571  : 			gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 132) &&//Season 6 addon
; 572  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 133) &&//Season 6 addon
; 573  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 134) &&//Season 6 addon
; 574  : 			 gObj[iUserIndex].pInventory[7].m_Type != ITEMGET(12, 135) &&//Season 6 addon
; 575  : 
; 576  : #ifdef NEWWINGS_2_5
; 577  : 			 !IS_NEWWINGS_2_5(gObj[iUserIndex].pInventory[7].m_Type) &&
; 578  : #endif
; 579  : #ifdef NEWWINGS_4
; 580  : 			 !IS_NEWWINGS_4(gObj[iUserIndex].pInventory[7].m_Type) &&
; 581  : #endif
; 582  : #ifdef NEWWINGS_5
; 583  : 			 !IS_NEWWINGS_5(gObj[iUserIndex].pInventory[7].m_Type) &&
; 584  : #endif
; 585  : #ifdef NEWWINGS_6
; 586  : 			 !IS_NEWWINGS_6(gObj[iUserIndex].pInventory[7].m_Type) &&
; 587  : #endif
; 588  : 			 gObj[iUserIndex].pInventory[8].m_Type != ITEMGET(13,3)  &&
; 589  : 			 gObj[iUserIndex].pInventory[8].m_Type != ITEMGET(13,37) &&
; 590  : 			 gObj[iUserIndex].pInventory[8].m_Type != ITEMGET(13,4) &&//Season 4.5 addon
; 591  : 			 //Season 2.5 add-on
; 592  : 			 (gObj[iUserIndex].pInventory[7].m_Type < ITEMGET(12,36) || gObj[iUserIndex].pInventory[7].m_Type > ITEMGET(12,40) ) )

  00102	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00108	8b 84 0e 24 0e
	00 00		 mov	 eax, DWORD PTR [esi+ecx+3620]
  0010f	0f b7 80 d2 05
	00 00		 movzx	 eax, WORD PTR [eax+1490]
  00116	ba 00 18 00 00	 mov	 edx, 6144		; 00001800H
  0011b	66 3b c2	 cmp	 ax, dx
  0011e	7c 0e		 jl	 SHORT $LN14@CheckEnter
  00120	ba 06 18 00 00	 mov	 edx, 6150		; 00001806H
  00125	66 3b c2	 cmp	 ax, dx
  00128	0f 8e 97 01 00
	00		 jle	 $LN15@CheckEnter
$LN14@CheckEnter:
  0012e	ba 1e 1a 00 00	 mov	 edx, 6686		; 00001a1eH
  00133	66 3b c2	 cmp	 ax, dx
  00136	0f 84 89 01 00
	00		 je	 $LN15@CheckEnter
  0013c	ba 29 18 00 00	 mov	 edx, 6185		; 00001829H
  00141	66 3b c2	 cmp	 ax, dx
  00144	0f 84 7b 01 00
	00		 je	 $LN15@CheckEnter
  0014a	ba 2a 18 00 00	 mov	 edx, 6186		; 0000182aH
  0014f	66 3b c2	 cmp	 ax, dx
  00152	0f 84 6d 01 00
	00		 je	 $LN15@CheckEnter
  00158	ba 2b 18 00 00	 mov	 edx, 6187		; 0000182bH
  0015d	66 3b c2	 cmp	 ax, dx
  00160	0f 84 5f 01 00
	00		 je	 $LN15@CheckEnter
  00166	ba 31 18 00 00	 mov	 edx, 6193		; 00001831H
  0016b	66 3b c2	 cmp	 ax, dx
  0016e	0f 84 51 01 00
	00		 je	 $LN15@CheckEnter
  00174	ba 32 18 00 00	 mov	 edx, 6194		; 00001832H
  00179	66 3b c2	 cmp	 ax, dx
  0017c	0f 84 43 01 00
	00		 je	 $LN15@CheckEnter
  00182	ba 82 18 00 00	 mov	 edx, 6274		; 00001882H
  00187	66 3b c2	 cmp	 ax, dx
  0018a	0f 84 35 01 00
	00		 je	 $LN15@CheckEnter
  00190	ba 83 18 00 00	 mov	 edx, 6275		; 00001883H
  00195	66 3b c2	 cmp	 ax, dx
  00198	0f 84 27 01 00
	00		 je	 $LN15@CheckEnter
  0019e	ba 84 18 00 00	 mov	 edx, 6276		; 00001884H
  001a3	66 3b c2	 cmp	 ax, dx
  001a6	0f 84 19 01 00
	00		 je	 $LN15@CheckEnter
  001ac	ba 85 18 00 00	 mov	 edx, 6277		; 00001885H
  001b1	66 3b c2	 cmp	 ax, dx
  001b4	0f 84 0b 01 00
	00		 je	 $LN15@CheckEnter
  001ba	ba 86 18 00 00	 mov	 edx, 6278		; 00001886H
  001bf	66 3b c2	 cmp	 ax, dx
  001c2	0f 84 fd 00 00
	00		 je	 $LN15@CheckEnter
  001c8	ba 87 18 00 00	 mov	 edx, 6279		; 00001887H
  001cd	66 3b c2	 cmp	 ax, dx
  001d0	0f 84 ef 00 00
	00		 je	 $LN15@CheckEnter
  001d6	ba ba 18 00 00	 mov	 edx, 6330		; 000018baH
  001db	66 3b c2	 cmp	 ax, dx
  001de	7c 17		 jl	 SHORT $LN87@CheckEnter
  001e0	33 db		 xor	 ebx, ebx
  001e2	ba bc 18 00 00	 mov	 edx, 6332		; 000018bcH
  001e7	66 3b c2	 cmp	 ax, dx
  001ea	0f 9e c3	 setle	 bl
  001ed	8b d3		 mov	 edx, ebx
  001ef	85 d2		 test	 edx, edx
  001f1	0f 85 ce 00 00
	00		 jne	 $LN15@CheckEnter
$LN87@CheckEnter:
  001f7	ba b4 18 00 00	 mov	 edx, 6324		; 000018b4H
  001fc	66 3b c2	 cmp	 ax, dx
  001ff	7c 17		 jl	 SHORT $LN88@CheckEnter
  00201	33 db		 xor	 ebx, ebx
  00203	ba b9 18 00 00	 mov	 edx, 6329		; 000018b9H
  00208	66 3b c2	 cmp	 ax, dx
  0020b	0f 9e c3	 setle	 bl
  0020e	8b d3		 mov	 edx, ebx
  00210	85 d2		 test	 edx, edx
  00212	0f 85 ad 00 00
	00		 jne	 $LN15@CheckEnter
$LN88@CheckEnter:
  00218	ba bd 18 00 00	 mov	 edx, 6333		; 000018bdH
  0021d	66 3b c2	 cmp	 ax, dx
  00220	7c 17		 jl	 SHORT $LN89@CheckEnter
  00222	33 db		 xor	 ebx, ebx
  00224	ba c2 18 00 00	 mov	 edx, 6338		; 000018c2H
  00229	66 3b c2	 cmp	 ax, dx
  0022c	0f 9e c3	 setle	 bl
  0022f	8b d3		 mov	 edx, ebx
  00231	85 d2		 test	 edx, edx
  00233	0f 85 8c 00 00
	00		 jne	 $LN15@CheckEnter
$LN89@CheckEnter:
  00239	ba c3 18 00 00	 mov	 edx, 6339		; 000018c3H
  0023e	66 3b c2	 cmp	 ax, dx
  00241	7c 13		 jl	 SHORT $LN90@CheckEnter
  00243	33 db		 xor	 ebx, ebx
  00245	ba dc 18 00 00	 mov	 edx, 6364		; 000018dcH
  0024a	66 3b c2	 cmp	 ax, dx
  0024d	0f 9e c3	 setle	 bl
  00250	8b d3		 mov	 edx, ebx
  00252	85 d2		 test	 edx, edx
  00254	75 6f		 jne	 SHORT $LN15@CheckEnter
$LN90@CheckEnter:
  00256	8b 94 0e 24 0e
	00 00		 mov	 edx, DWORD PTR [esi+ecx+3620]
  0025d	0f b7 92 a6 06
	00 00		 movzx	 edx, WORD PTR [edx+1702]
  00264	bb 03 1a 00 00	 mov	 ebx, 6659		; 00001a03H
  00269	66 3b d3	 cmp	 dx, bx
  0026c	74 57		 je	 SHORT $LN15@CheckEnter
  0026e	bb 25 1a 00 00	 mov	 ebx, 6693		; 00001a25H
  00273	66 3b d3	 cmp	 dx, bx
  00276	74 4d		 je	 SHORT $LN15@CheckEnter
  00278	bb 04 1a 00 00	 mov	 ebx, 6660		; 00001a04H
  0027d	66 3b d3	 cmp	 dx, bx
  00280	74 43		 je	 SHORT $LN15@CheckEnter
  00282	ba 24 18 00 00	 mov	 edx, 6180		; 00001824H
  00287	66 3b c2	 cmp	 ax, dx
  0028a	7c 0a		 jl	 SHORT $LN13@CheckEnter
  0028c	ba 28 18 00 00	 mov	 edx, 6184		; 00001828H
  00291	66 3b c2	 cmp	 ax, dx
  00294	7e 2f		 jle	 SHORT $LN15@CheckEnter
$LN13@CheckEnter:

; 593  : 		{
; 594  : 			LogAddTD("[ KANTURU ][ Entrance Fail ] Wing Item is not exist [%s][%s] State(%d)-(%d)",
; 595  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 596  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  00296	8b 87 fc 00 00
	00		 mov	 eax, DWORD PTR [edi+252]
  0029c	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  0029f	50		 push	 eax
  002a0	52		 push	 edx
  002a1	8d 44 0e 77	 lea	 eax, DWORD PTR [esi+ecx+119]
  002a5	50		 push	 eax
  002a6	8d 4c 0e 6c	 lea	 ecx, DWORD PTR [esi+ecx+108]
  002aa	51		 push	 ecx
  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CONDJFLC@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Win@
  002b0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002b6	83 c4 14	 add	 esp, 20			; 00000014H
  002b9	5e		 pop	 esi
  002ba	5f		 pop	 edi

; 597  : 
; 598  : 			return 7;

  002bb	b8 07 00 00 00	 mov	 eax, 7
  002c0	5b		 pop	 ebx

; 682  : }

  002c1	5d		 pop	 ebp
  002c2	c2 04 00	 ret	 4
$LN15@CheckEnter:

; 599  : 		}
; 600  : 
; 601  : 		if ( gObj[iUserIndex].pInventory[8].m_Type == ITEMGET(13,2) )

  002c5	8b 84 0e 24 0e
	00 00		 mov	 eax, DWORD PTR [esi+ecx+3620]
  002cc	ba 02 1a 00 00	 mov	 edx, 6658		; 00001a02H
  002d1	66 39 90 a6 06
	00 00		 cmp	 WORD PTR [eax+1702], dx
  002d8	75 2f		 jne	 SHORT $LN12@CheckEnter

; 602  : 		{
; 603  : 			LogAddTD("[ KANTURU ][ Entrance Fail ] Uniria Item is exist [%s][%s] State(%d)-(%d)",
; 604  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 605  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  002da	8b 87 fc 00 00
	00		 mov	 eax, DWORD PTR [edi+252]
  002e0	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  002e3	50		 push	 eax
  002e4	52		 push	 edx
  002e5	8d 44 0e 77	 lea	 eax, DWORD PTR [esi+ecx+119]
  002e9	50		 push	 eax
  002ea	8d 4c 0e 6c	 lea	 ecx, DWORD PTR [esi+ecx+108]
  002ee	51		 push	 ecx
  002ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@BCIDIJNJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Uni@
  002f4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002fa	83 c4 14	 add	 esp, 20			; 00000014H
  002fd	5e		 pop	 esi
  002fe	5f		 pop	 edi

; 606  : 
; 607  : 			return 5;

  002ff	b8 05 00 00 00	 mov	 eax, 5
  00304	5b		 pop	 ebx

; 682  : }

  00305	5d		 pop	 ebp
  00306	c2 04 00	 ret	 4
$LN12@CheckEnter:

; 608  : 		}
; 609  : 
; 610  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,10) ||
; 611  : 			gObj[iUserIndex].pInventory[10].m_Type == ITEMGET(13,10) )

  00309	0f b7 90 22 09
	00 00		 movzx	 edx, WORD PTR [eax+2338]
  00310	bb 0a 1a 00 00	 mov	 ebx, 6666		; 00001a0aH
  00315	66 3b d3	 cmp	 dx, bx
  00318	0f 84 34 01 00
	00		 je	 $LN10@CheckEnter
  0031e	0f b7 80 4e 08
	00 00		 movzx	 eax, WORD PTR [eax+2126]
  00325	66 3b c3	 cmp	 ax, bx
  00328	0f 84 24 01 00
	00		 je	 $LN10@CheckEnter

; 618  : 		}
; 619  : //#endif
; 620  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,39) ||
; 621  : 			gObj[iUserIndex].pInventory[10].m_Type == ITEMGET(13,39) )

  0032e	bb 27 1a 00 00	 mov	 ebx, 6695		; 00001a27H
  00333	66 3b d3	 cmp	 dx, bx
  00336	0f 84 e7 00 00
	00		 je	 $LN8@CheckEnter
  0033c	66 3b c3	 cmp	 ax, bx
  0033f	0f 84 de 00 00
	00		 je	 $LN8@CheckEnter

; 628  : 		}
; 629  : 
; 630  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,40) || //Second Edition
; 631  : 			gObj[iUserIndex].pInventory[10].m_Type == ITEMGET(13,40) )

  00345	bb 28 1a 00 00	 mov	 ebx, 6696		; 00001a28H
  0034a	66 3b d3	 cmp	 dx, bx
  0034d	0f 84 a1 00 00
	00		 je	 $LN6@CheckEnter
  00353	66 3b c3	 cmp	 ax, bx
  00356	0f 84 98 00 00
	00		 je	 $LN6@CheckEnter

; 638  : 		}
; 639  : 
; 640  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,41) || //season 2.5 add-on
; 641  : 			gObj[iUserIndex].pInventory[10].m_Type == ITEMGET(13,41) )

  0035c	bb 29 1a 00 00	 mov	 ebx, 6697		; 00001a29H
  00361	66 3b d3	 cmp	 dx, bx
  00364	74 5f		 je	 SHORT $LN4@CheckEnter
  00366	66 3b c3	 cmp	 ax, bx
  00369	74 5a		 je	 SHORT $LN4@CheckEnter

; 648  : 		}
; 649  : 
; 650  : 		if ( gObj[iUserIndex].pInventory[11].m_Type == ITEMGET(13,68) || //season4 add-on
; 651  : 			gObj[iUserIndex].pInventory[10].m_Type == ITEMGET(13,68) )

  0036b	bb 44 1a 00 00	 mov	 ebx, 6724		; 00001a44H
  00370	66 3b d3	 cmp	 dx, bx
  00373	74 21		 je	 SHORT $LN2@CheckEnter
  00375	8b d3		 mov	 edx, ebx
  00377	66 3b c2	 cmp	 ax, dx
  0037a	74 1a		 je	 SHORT $LN2@CheckEnter

; 658  : 		}
; 659  : 
; 660  : 		LogAddTD("[ KANTURU ][ Entrance Success ] [%s][%s] State(%d)-(%d)",
; 661  : 			gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 662  : 			this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  0037c	8b 87 fc 00 00
	00		 mov	 eax, DWORD PTR [edi+252]
  00382	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00385	50		 push	 eax
  00386	52		 push	 edx
  00387	8d 44 0e 77	 lea	 eax, DWORD PTR [esi+ecx+119]
  0038b	50		 push	 eax
  0038c	8d 4c 0e 6c	 lea	 ecx, DWORD PTR [esi+ecx+108]
  00390	51		 push	 ecx

; 663  : 
; 664  : 		return 0;

  00391	e9 0c 01 00 00	 jmp	 $LN93@CheckEnter
$LN2@CheckEnter:

; 652  : 		{
; 653  : 			LogAddTD("[ Kanturu ][ Entrance Fail ] X-MASEvent Polymorph Ring is exist [%s][%s] State(%d)-(%d)",
; 654  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 655  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  00396	8b 97 fc 00 00
	00		 mov	 edx, DWORD PTR [edi+252]
  0039c	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0039f	52		 push	 edx
  003a0	50		 push	 eax
  003a1	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  003a5	52		 push	 edx
  003a6	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  003aa	50		 push	 eax
  003ab	68 00 00 00 00	 push	 OFFSET ??_C@_0FI@IBINCNDO@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5X?9M@
  003b0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003b6	83 c4 14	 add	 esp, 20			; 00000014H
  003b9	5e		 pop	 esi
  003ba	5f		 pop	 edi

; 656  : 
; 657  : 			return 6;

  003bb	b8 06 00 00 00	 mov	 eax, 6
  003c0	5b		 pop	 ebx

; 682  : }

  003c1	5d		 pop	 ebp
  003c2	c2 04 00	 ret	 4
$LN4@CheckEnter:

; 642  : 		{
; 643  : 			LogAddTD("[ Kanturu ][ Entrance Fail ] Santa Polymorph Ring is exist [%s][%s] State(%d)-(%d)",
; 644  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 645  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  003c5	8b 97 fc 00 00
	00		 mov	 edx, DWORD PTR [edi+252]
  003cb	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  003ce	52		 push	 edx
  003cf	50		 push	 eax
  003d0	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  003d4	52		 push	 edx
  003d5	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  003d9	50		 push	 eax
  003da	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@JPPNGJPG@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5San@
  003df	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003e5	83 c4 14	 add	 esp, 20			; 00000014H
  003e8	5e		 pop	 esi
  003e9	5f		 pop	 edi

; 646  : 
; 647  : 			return 6;

  003ea	b8 06 00 00 00	 mov	 eax, 6
  003ef	5b		 pop	 ebx

; 682  : }

  003f0	5d		 pop	 ebp
  003f1	c2 04 00	 ret	 4
$LN6@CheckEnter:

; 632  : 		{
; 633  : 			LogAddTD("[ Kanturu ][ Entrance Fail ] Jack'O Lantern Polymorph Ring is exist [%s][%s] State(%d)-(%d)",
; 634  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 635  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  003f4	8b 97 fc 00 00
	00		 mov	 edx, DWORD PTR [edi+252]
  003fa	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  003fd	52		 push	 edx
  003fe	50		 push	 eax
  003ff	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  00403	52		 push	 edx
  00404	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  00408	50		 push	 eax
  00409	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@LINMECFL@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Jac@
  0040e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00414	83 c4 14	 add	 esp, 20			; 00000014H
  00417	5e		 pop	 esi
  00418	5f		 pop	 edi

; 636  : 
; 637  : 			return 6;

  00419	b8 06 00 00 00	 mov	 eax, 6
  0041e	5b		 pop	 ebx

; 682  : }

  0041f	5d		 pop	 ebp
  00420	c2 04 00	 ret	 4
$LN8@CheckEnter:

; 622  : 		{
; 623  : 			LogAddTD("[ Kanturu ][ Entrance Fail ] EliteSkelletoneChangeRing is exist [%s][%s] State(%d)-(%d)",
; 624  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 625  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  00423	8b 97 fc 00 00
	00		 mov	 edx, DWORD PTR [edi+252]
  00429	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0042c	52		 push	 edx
  0042d	50		 push	 eax
  0042e	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  00432	52		 push	 edx
  00433	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  00437	50		 push	 eax
  00438	68 00 00 00 00	 push	 OFFSET ??_C@_0FI@PBEMOOOD@?$FL?5Kanturu?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Eli@
  0043d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00443	83 c4 14	 add	 esp, 20			; 00000014H
  00446	5e		 pop	 esi
  00447	5f		 pop	 edi

; 626  : 
; 627  : 			return 6;

  00448	b8 06 00 00 00	 mov	 eax, 6
  0044d	5b		 pop	 ebx

; 682  : }

  0044e	5d		 pop	 ebp
  0044f	c2 04 00	 ret	 4
$LN10@CheckEnter:

; 612  : 		{
; 613  : 			LogAddTD("[ KANTURU ][ Entrance Fail ] Trasportation Ring is exist [%s][%s] State(%d)-(%d)",
; 614  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 615  : 				this->GetKanturuState(), this->m_BattleOfMaya.GetBattleOfMayaState());

  00452	8b 97 fc 00 00
	00		 mov	 edx, DWORD PTR [edi+252]
  00458	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0045b	52		 push	 edx
  0045c	50		 push	 eax
  0045d	8d 54 0e 77	 lea	 edx, DWORD PTR [esi+ecx+119]
  00461	52		 push	 edx
  00462	8d 44 0e 6c	 lea	 eax, DWORD PTR [esi+ecx+108]
  00466	50		 push	 eax
  00467	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@GCLEDKFJ@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Tra@
  0046c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00472	83 c4 14	 add	 esp, 20			; 00000014H
  00475	5e		 pop	 esi
  00476	5f		 pop	 edi

; 616  : 
; 617  : 			return 6;

  00477	b8 06 00 00 00	 mov	 eax, 6
  0047c	5b		 pop	 ebx

; 682  : }

  0047d	5d		 pop	 ebp
  0047e	c2 04 00	 ret	 4
$LN91@CheckEnter:

; 665  : 	}
; 666  : 
; 667  : 	if ( this->GetKanturuState() == KANTURU_STATE_TOWER_OF_REFINEMENT &&
; 668  : 		 this->m_TowerOfRefinement.GetEntrancePermit() == TRUE )

  00481	83 f9 04	 cmp	 ecx, 4
  00484	75 33		 jne	 SHORT $LN1@CheckEnter
  00486	83 bf bc 03 00
	00 01		 cmp	 DWORD PTR [edi+956], 1
  0048d	75 2a		 jne	 SHORT $LN1@CheckEnter

; 669  : 	{
; 670  : 		LogAddTD("[ KANTURU ][ Entrance Success ] [%s][%s] State(%d)-(%d)",
; 671  : 			gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 672  : 			this->GetKanturuState(), this->m_TowerOfRefinement.GetTowerOfRefinementState());

  0048f	8b 8f b8 03 00
	00		 mov	 ecx, DWORD PTR [edi+952]
  00495	51		 push	 ecx
  00496	6a 04		 push	 4
  00498	8d 54 06 77	 lea	 edx, DWORD PTR [esi+eax+119]
  0049c	52		 push	 edx
  0049d	8d 44 06 6c	 lea	 eax, DWORD PTR [esi+eax+108]
  004a1	50		 push	 eax
$LN93@CheckEnter:
  004a2	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@ICLHIMEO@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Success?5?$FN?5@
  004a7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  004ad	83 c4 14	 add	 esp, 20			; 00000014H
  004b0	5e		 pop	 esi
  004b1	5f		 pop	 edi

; 673  : 
; 674  : 		return 0;

  004b2	33 c0		 xor	 eax, eax
  004b4	5b		 pop	 ebx

; 682  : }

  004b5	5d		 pop	 ebp
  004b6	c2 04 00	 ret	 4
$LN1@CheckEnter:

; 675  : 	}
; 676  : 
; 677  : 	LogAddTD("[ KANTURU ][ Entrance Fail ] [%s][%s] State(%d)",
; 678  : 		gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 679  : 		this->GetKanturuState());

  004b9	51		 push	 ecx
  004ba	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  004be	51		 push	 ecx
  004bf	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  004c3	52		 push	 edx
  004c4	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EDHFFGEB@?$FL?5KANTURU?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
  004c9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  004cf	83 c4 10	 add	 esp, 16			; 00000010H
  004d2	5e		 pop	 esi
  004d3	5f		 pop	 edi

; 680  : 
; 681  : 	return 3;

  004d4	b8 03 00 00 00	 mov	 eax, 3
  004d9	5b		 pop	 ebx

; 682  : }

  004da	5d		 pop	 ebp
  004db	c2 04 00	 ret	 4
?CheckEnterKanturu@CKanturu@@QAEHH@Z ENDP		; CKanturu::CheckEnterKanturu
_TEXT	ENDS
PUBLIC	?SetState@CKanturu@@QAEXH@Z			; CKanturu::SetState
EXTRN	?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ:PROC ; CKanturuMonsterMng::ResetRegenMonsterObjData
; Function compile flags: /Ogtp
;	COMDAT ?SetState@CKanturu@@QAEXH@Z
_TEXT	SEGMENT
_iKanturuState$ = 8					; size = 4
?SetState@CKanturu@@QAEXH@Z PROC			; CKanturu::SetState, COMDAT
; _this$ = ecx

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 234  : 	if ( this->m_StateInfo[iKanturuState].GetCondition() > 0 )

  00006	8b 7d 08	 mov	 edi, DWORD PTR _iKanturuState$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  0000e	83 7c 86 1c 00	 cmp	 DWORD PTR [esi+eax*4+28], 0
  00013	8d 1c 86	 lea	 ebx, DWORD PTR [esi+eax*4]
  00016	7e 09		 jle	 SHORT $LN14@SetState

; 235  : 	{
; 236  : 		this->m_StateInfo[iKanturuState].SetAppliedTime();

  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001e	89 43 24	 mov	 DWORD PTR [ebx+36], eax
$LN14@SetState:

; 237  : 	}
; 238  : 
; 239  : 	g_KanturuMonsterMng.ResetRegenMonsterObjData();

  00021	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00026	e8 00 00 00 00	 call	 ?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ ; CKanturuMonsterMng::ResetRegenMonsterObjData

; 240  : 	this->SetKanturuMapAttr(0);

  0002b	6a 00		 push	 0
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetKanturuMapAttr@CKanturu@@QAEXE@Z ; CKanturu::SetKanturuMapAttr

; 241  : 
; 242  : 	switch ( iKanturuState )

  00034	83 ff 05	 cmp	 edi, 5
  00037	77 54		 ja	 SHORT $LN7@SetState
  00039	ff 24 bd 00 00
	00 00		 jmp	 DWORD PTR $LN16@SetState[edi*4]
$LN6@SetState:

; 243  : 	{
; 244  : 		case KANTURU_STATE_NONE:
; 245  : 			this->SetState_NONE();

  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturu@@QAEXXZ ; CKanturu::SetState_NONE
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx

; 261  : 			break;
; 262  : 	}
; 263  : }

  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
$LN5@SetState:

; 246  : 			break;
; 247  : 		case KANTURU_STATE_BATTLE_STANTBY:
; 248  : 			this->SetState_BATTLE_STANDBY();

  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?SetState_BATTLE_STANDBY@CKanturu@@QAEXXZ ; CKanturu::SetState_BATTLE_STANDBY
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx

; 261  : 			break;
; 262  : 	}
; 263  : }

  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN4@SetState:

; 249  : 			break;
; 250  : 		case KANTURU_STATE_BATTLE_OF_MAYA:
; 251  : 			this->SetState_BATTLE_OF_MAYA();

  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?SetState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ ; CKanturu::SetState_BATTLE_OF_MAYA
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx

; 261  : 			break;
; 262  : 	}
; 263  : }

  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
$LN3@SetState:

; 252  : 			break;
; 253  : 		case KANTURU_STATE_BATTLE_OF_NIGHTMARE:
; 254  : 			this->SetState_BATTLE_OF_NIGHTMARE();

  0006a	8b ce		 mov	 ecx, esi
  0006c	e8 00 00 00 00	 call	 ?SetState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ ; CKanturu::SetState_BATTLE_OF_NIGHTMARE
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx

; 261  : 			break;
; 262  : 	}
; 263  : }

  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
$LN2@SetState:

; 255  : 			break;
; 256  : 		case KANTURU_STATE_TOWER_OF_REFINEMENT:
; 257  : 			this->SetState_TOWER_OF_REFINEMENT();

  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?SetState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ ; CKanturu::SetState_TOWER_OF_REFINEMENT
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx

; 261  : 			break;
; 262  : 	}
; 263  : }

  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
$LN1@SetState:

; 258  : 			break;
; 259  : 		case KANTURU_STATE_END:
; 260  : 			this->SetState_END();

  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?SetState_END@CKanturu@@QAEXXZ ; CKanturu::SetState_END
$LN7@SetState:
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx

; 261  : 			break;
; 262  : 	}
; 263  : }

  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
$LN16@SetState:
  00094	00 00 00 00	 DD	 $LN6@SetState
  00098	00 00 00 00	 DD	 $LN5@SetState
  0009c	00 00 00 00	 DD	 $LN4@SetState
  000a0	00 00 00 00	 DD	 $LN3@SetState
  000a4	00 00 00 00	 DD	 $LN2@SetState
  000a8	00 00 00 00	 DD	 $LN1@SetState
?SetState@CKanturu@@QAEXH@Z ENDP			; CKanturu::SetState
_TEXT	ENDS
PUBLIC	?SetNextState@CKanturu@@QAEXH@Z			; CKanturu::SetNextState
; Function compile flags: /Ogtp
;	COMDAT ?SetNextState@CKanturu@@QAEXH@Z
_TEXT	SEGMENT
_iCurrentState$ = 8					; size = 4
?SetNextState@CKanturu@@QAEXH@Z PROC			; CKanturu::SetNextState, COMDAT
; _this$ = ecx

; 267  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 268  : 	int iNextState = iCurrentState + 1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00006	40		 inc	 eax

; 269  : 
; 270  : 	if ( iNextState >= MAX_KANTURU_STATE_INFO )

  00007	83 f8 06	 cmp	 eax, 6
  0000a	7c 02		 jl	 SHORT $LN1@SetNextSta

; 271  : 	{
; 272  : 		iNextState = KANTURU_STATE_NONE;

  0000c	33 c0		 xor	 eax, eax
$LN1@SetNextSta:

; 273  : 	}
; 274  : 
; 275  : 	this->SetState(iNextState);

  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState

; 276  : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?SetNextState@CKanturu@@QAEXH@Z ENDP			; CKanturu::SetNextState
_TEXT	ENDS
PUBLIC	?ProcState_NONE@CKanturu@@QAEXXZ		; CKanturu::ProcState_NONE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NONE@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NONE@CKanturu@@QAEXXZ PROC			; CKanturu::ProcState_NONE, COMDAT
; _this$ = ecx

; 340  : 	this->SetState(KANTURU_STATE_BATTLE_STANTBY);

  00000	6a 01		 push	 1
  00002	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState

; 341  : }

  00007	c3		 ret	 0
?ProcState_NONE@CKanturu@@QAEXXZ ENDP			; CKanturu::ProcState_NONE
_TEXT	ENDS
PUBLIC	?ProcState_BATTLE_STANDBY@CKanturu@@QAEXXZ	; CKanturu::ProcState_BATTLE_STANDBY
EXTRN	?Run@CKanturuBattleStanby@@QAEXXZ:PROC		; CKanturuBattleStanby::Run
EXTRN	?SetState_NONE@CKanturuBattleStanby@@QAEXXZ:PROC ; CKanturuBattleStanby::SetState_NONE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_BATTLE_STANDBY@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ProcState_BATTLE_STANDBY@CKanturu@@QAEXXZ PROC		; CKanturu::ProcState_BATTLE_STANDBY, COMDAT
; _this$ = ecx

; 345  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 346  : 	if ( this->m_BattleStanby.GetBattleStanbyState() == 3 )

  00003	83 be 94 00 00
	00 03		 cmp	 DWORD PTR [esi+148], 3

; 347  : 	{
; 348  : 		this->m_BattleStanby.SetState_NONE();

  0000a	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  00010	75 10		 jne	 SHORT $LN2@ProcState_
  00012	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_NONE

; 349  : 		this->SetState(KANTURU_STATE_BATTLE_OF_MAYA);

  00017	6a 02		 push	 2
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState
  00020	5e		 pop	 esi

; 354  : 	}
; 355  : }

  00021	c3		 ret	 0
$LN2@ProcState_:
  00022	5e		 pop	 esi

; 350  : 	}
; 351  : 	else
; 352  : 	{
; 353  : 		this->m_BattleStanby.Run();

  00023	e9 00 00 00 00	 jmp	 ?Run@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::Run
?ProcState_BATTLE_STANDBY@CKanturu@@QAEXXZ ENDP		; CKanturu::ProcState_BATTLE_STANDBY
_TEXT	ENDS
PUBLIC	?ProcState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ	; CKanturu::ProcState_BATTLE_OF_MAYA
EXTRN	?Run@CKanturuBattleOfMaya@@QAEXXZ:PROC		; CKanturuBattleOfMaya::Run
EXTRN	?SetState_NONE@CKanturuBattleOfMaya@@QAEXXZ:PROC ; CKanturuBattleOfMaya::SetState_NONE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ProcState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ PROC		; CKanturu::ProcState_BATTLE_OF_MAYA, COMDAT
; _this$ = ecx

; 359  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 360  : 	if ( this->m_BattleOfMaya.GetBattleOfMayaState() == 18 )

  00003	83 be fc 00 00
	00 12		 cmp	 DWORD PTR [esi+252], 18	; 00000012H

; 361  : 	{
; 362  : 		this->m_BattleOfMaya.SetState_NONE();

  0000a	8d 8e f4 00 00
	00		 lea	 ecx, DWORD PTR [esi+244]
  00010	75 22		 jne	 SHORT $LN4@ProcState_@2
  00012	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuBattleOfMaya@@QAEXXZ ; CKanturuBattleOfMaya::SetState_NONE

; 363  : 
; 364  : 		if ( this->m_BattleOfMaya.GetSuccessValue() == 1 )

  00017	83 be c8 02 00
	00 01		 cmp	 DWORD PTR [esi+712], 1

; 365  : 		{
; 366  : 			this->SetState(KANTURU_STATE_BATTLE_OF_NIGHTMARE);

  0001e	8b ce		 mov	 ecx, esi
  00020	75 09		 jne	 SHORT $LN3@ProcState_@2
  00022	6a 03		 push	 3
  00024	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState
  00029	5e		 pop	 esi

; 376  : 	}
; 377  : }

  0002a	c3		 ret	 0
$LN3@ProcState_@2:

; 367  : 		}
; 368  : 		else
; 369  : 		{
; 370  : 			this->SetState(KANTURU_STATE_END);

  0002b	6a 05		 push	 5
  0002d	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState
  00032	5e		 pop	 esi

; 376  : 	}
; 377  : }

  00033	c3		 ret	 0
$LN4@ProcState_@2:
  00034	5e		 pop	 esi

; 371  : 		}
; 372  : 	}
; 373  : 	else
; 374  : 	{
; 375  : 		this->m_BattleOfMaya.Run();

  00035	e9 00 00 00 00	 jmp	 ?Run@CKanturuBattleOfMaya@@QAEXXZ ; CKanturuBattleOfMaya::Run
?ProcState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ ENDP		; CKanturu::ProcState_BATTLE_OF_MAYA
_TEXT	ENDS
PUBLIC	?ProcState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ	; CKanturu::ProcState_BATTLE_OF_NIGHTMARE
EXTRN	?Run@CKanturuBattleOfNightmare@@QAEXXZ:PROC	; CKanturuBattleOfNightmare::Run
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ProcState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ PROC	; CKanturu::ProcState_BATTLE_OF_NIGHTMARE, COMDAT
; _this$ = ecx

; 381  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 382  : 	if ( this->m_BattleOfNightmare.GetBattleOfNightmareState() == 5 )

  00003	83 be 24 03 00
	00 05		 cmp	 DWORD PTR [esi+804], 5

; 383  : 	{
; 384  : 		this->m_BattleOfNightmare.SetState(0);

  0000a	8d 8e 20 03 00
	00		 lea	 ecx, DWORD PTR [esi+800]
  00010	75 24		 jne	 SHORT $LN4@ProcState_@3
  00012	6a 00		 push	 0
  00014	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetState

; 385  : 
; 386  : 		if ( this->m_BattleOfNightmare.GetSuccessValue() == 1 )

  00019	83 be 28 03 00
	00 01		 cmp	 DWORD PTR [esi+808], 1

; 387  : 		{
; 388  : 			this->SetState(KANTURU_STATE_TOWER_OF_REFINEMENT);

  00020	8b ce		 mov	 ecx, esi
  00022	75 09		 jne	 SHORT $LN3@ProcState_@3
  00024	6a 04		 push	 4
  00026	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState
  0002b	5e		 pop	 esi

; 398  : 	}
; 399  : }

  0002c	c3		 ret	 0
$LN3@ProcState_@3:

; 389  : 		}
; 390  : 		else
; 391  : 		{
; 392  : 			this->SetState(KANTURU_STATE_END);

  0002d	6a 05		 push	 5
  0002f	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState
  00034	5e		 pop	 esi

; 398  : 	}
; 399  : }

  00035	c3		 ret	 0
$LN4@ProcState_@3:
  00036	5e		 pop	 esi

; 393  : 		}
; 394  : 	}
; 395  : 	else
; 396  : 	{
; 397  : 		this->m_BattleOfNightmare.Run();

  00037	e9 00 00 00 00	 jmp	 ?Run@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::Run
?ProcState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ ENDP	; CKanturu::ProcState_BATTLE_OF_NIGHTMARE
_TEXT	ENDS
PUBLIC	?ProcState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ	; CKanturu::ProcState_TOWER_OF_REFINEMENT
EXTRN	?Run@CKanturuTowerOfRefinement@@QAEXXZ:PROC	; CKanturuTowerOfRefinement::Run
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ProcState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ PROC	; CKanturu::ProcState_TOWER_OF_REFINEMENT, COMDAT
; _this$ = ecx

; 403  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 404  : 	if ( this->m_TowerOfRefinement.GetTowerOfRefinementState() == 5 )

  00003	83 be b8 03 00
	00 05		 cmp	 DWORD PTR [esi+952], 5

; 405  : 	{
; 406  : 		this->m_TowerOfRefinement.SetState(0);

  0000a	8d 8e b4 03 00
	00		 lea	 ecx, DWORD PTR [esi+948]
  00010	75 12		 jne	 SHORT $LN2@ProcState_@4
  00012	6a 00		 push	 0
  00014	e8 00 00 00 00	 call	 ?SetState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetState

; 407  : 		this->SetState(KANTURU_STATE_END);

  00019	6a 05		 push	 5
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState
  00022	5e		 pop	 esi

; 412  : 	}
; 413  : }

  00023	c3		 ret	 0
$LN2@ProcState_@4:
  00024	5e		 pop	 esi

; 408  : 	}
; 409  : 	else
; 410  : 	{
; 411  : 		this->m_TowerOfRefinement.Run();

  00025	e9 00 00 00 00	 jmp	 ?Run@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::Run
?ProcState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ ENDP	; CKanturu::ProcState_TOWER_OF_REFINEMENT
_TEXT	ENDS
PUBLIC	?ProcState_END@CKanturu@@QAEXXZ			; CKanturu::ProcState_END
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_END@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?ProcState_END@CKanturu@@QAEXXZ PROC			; CKanturu::ProcState_END, COMDAT
; _this$ = ecx

; 418  : 	this->SetState(KANTURU_STATE_NONE);

  00000	6a 00		 push	 0
  00002	e8 00 00 00 00	 call	 ?SetState@CKanturu@@QAEXH@Z ; CKanturu::SetState

; 419  : }

  00007	c3		 ret	 0
?ProcState_END@CKanturu@@QAEXXZ ENDP			; CKanturu::ProcState_END
_TEXT	ENDS
PUBLIC	?CheckStateTime@CKanturu@@QAEXXZ		; CKanturu::CheckStateTime
; Function compile flags: /Ogtp
;	COMDAT ?CheckStateTime@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?CheckStateTime@CKanturu@@QAEXXZ PROC			; CKanturu::CheckStateTime, COMDAT
; _this$ = ecx

; 447  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 448  : 	if ( this->GetKanturuState() )

  00004	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00007	85 f6		 test	 esi, esi
  00009	74 22		 je	 SHORT $LN1@CheckState

; 449  : 	{
; 450  : 		int iState = this->GetKanturuState();
; 451  : 
; 452  : 		if ( this->m_StateInfo[iState].GetCondition() == 1 )

  0000b	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  0000e	83 7c 87 1c 01	 cmp	 DWORD PTR [edi+eax*4+28], 1
  00013	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00016	75 15		 jne	 SHORT $LN1@CheckState

; 453  : 		{
; 454  : 			if ( this->m_StateInfo[iState].IsTimeOut() == TRUE )

  00018	8d 48 14	 lea	 ecx, DWORD PTR [eax+20]
  0001b	e8 00 00 00 00	 call	 ?IsTimeOut@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::IsTimeOut
  00020	83 f8 01	 cmp	 eax, 1
  00023	75 08		 jne	 SHORT $LN1@CheckState

; 455  : 			{
; 456  : 				this->SetNextState(iState);

  00025	56		 push	 esi
  00026	8b cf		 mov	 ecx, edi
  00028	e8 00 00 00 00	 call	 ?SetNextState@CKanturu@@QAEXH@Z ; CKanturu::SetNextState
$LN1@CheckState:

; 457  : 			}
; 458  : 		}
; 459  : 	}
; 460  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	c3		 ret	 0
?CheckStateTime@CKanturu@@QAEXXZ ENDP			; CKanturu::CheckStateTime
_TEXT	ENDS
PUBLIC	?Run@CKanturu@@QAEXXZ				; CKanturu::Run
; Function compile flags: /Ogtp
;	COMDAT ?Run@CKanturu@@QAEXXZ
_TEXT	SEGMENT
?Run@CKanturu@@QAEXXZ PROC				; CKanturu::Run, COMDAT
; _this$ = ecx

; 201  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 202  : 	if ( !this->IsKanturuEnable() )

  00003	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00007	74 4b		 je	 SHORT $LN7@Run

; 203  : 		return;
; 204  : 
; 205  : 	this->CheckStateTime();

  00009	e8 00 00 00 00	 call	 ?CheckStateTime@CKanturu@@QAEXXZ ; CKanturu::CheckStateTime

; 206  : 	this->CheckUserOnKanturuBossMap();

  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?CheckUserOnKanturuBossMap@CKanturu@@QAEXXZ ; CKanturu::CheckUserOnKanturuBossMap

; 207  : 
; 208  : 	switch ( this->m_iKanturuState )

  00015	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00018	83 f8 05	 cmp	 eax, 5
  0001b	77 37		 ja	 SHORT $LN7@Run
  0001d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN16@Run[eax*4]
$LN6@Run:

; 209  : 	{
; 210  : 		case KANTURU_STATE_NONE:
; 211  : 			this->ProcState_NONE();

  00024	8b ce		 mov	 ecx, esi
  00026	5e		 pop	 esi
  00027	e9 00 00 00 00	 jmp	 ?ProcState_NONE@CKanturu@@QAEXXZ ; CKanturu::ProcState_NONE
$LN5@Run:

; 212  : 			break;
; 213  : 		case KANTURU_STATE_BATTLE_STANTBY:
; 214  : 			this->ProcState_BATTLE_STANDBY();

  0002c	8b ce		 mov	 ecx, esi
  0002e	5e		 pop	 esi
  0002f	e9 00 00 00 00	 jmp	 ?ProcState_BATTLE_STANDBY@CKanturu@@QAEXXZ ; CKanturu::ProcState_BATTLE_STANDBY
$LN4@Run:

; 215  : 			break;
; 216  : 		case KANTURU_STATE_BATTLE_OF_MAYA:
; 217  : 			this->ProcState_BATTLE_OF_MAYA();

  00034	8b ce		 mov	 ecx, esi
  00036	5e		 pop	 esi
  00037	e9 00 00 00 00	 jmp	 ?ProcState_BATTLE_OF_MAYA@CKanturu@@QAEXXZ ; CKanturu::ProcState_BATTLE_OF_MAYA
$LN3@Run:

; 218  : 			break;
; 219  : 		case KANTURU_STATE_BATTLE_OF_NIGHTMARE:
; 220  : 			this->ProcState_BATTLE_OF_NIGHTMARE();

  0003c	8b ce		 mov	 ecx, esi
  0003e	5e		 pop	 esi
  0003f	e9 00 00 00 00	 jmp	 ?ProcState_BATTLE_OF_NIGHTMARE@CKanturu@@QAEXXZ ; CKanturu::ProcState_BATTLE_OF_NIGHTMARE
$LN2@Run:

; 221  : 			break;
; 222  : 		case KANTURU_STATE_TOWER_OF_REFINEMENT:
; 223  : 			this->ProcState_TOWER_OF_REFINEMENT();

  00044	8b ce		 mov	 ecx, esi
  00046	5e		 pop	 esi
  00047	e9 00 00 00 00	 jmp	 ?ProcState_TOWER_OF_REFINEMENT@CKanturu@@QAEXXZ ; CKanturu::ProcState_TOWER_OF_REFINEMENT
$LN1@Run:

; 224  : 			break;
; 225  : 		case KANTURU_STATE_END:
; 226  : 			this->ProcState_END();

  0004c	8b ce		 mov	 ecx, esi
  0004e	5e		 pop	 esi
  0004f	e9 00 00 00 00	 jmp	 ?ProcState_END@CKanturu@@QAEXXZ ; CKanturu::ProcState_END
$LN7@Run:
  00054	5e		 pop	 esi

; 227  : 			break;
; 228  : 	}
; 229  : }

  00055	c3		 ret	 0
  00056	8b ff		 npad	 2
$LN16@Run:
  00058	00 00 00 00	 DD	 $LN6@Run
  0005c	00 00 00 00	 DD	 $LN5@Run
  00060	00 00 00 00	 DD	 $LN4@Run
  00064	00 00 00 00	 DD	 $LN3@Run
  00068	00 00 00 00	 DD	 $LN2@Run
  0006c	00 00 00 00	 DD	 $LN1@Run
?Run@CKanturu@@QAEXXZ ENDP				; CKanturu::Run
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
; Function compile flags: /Ogtp
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 14   : static CKanturuUtil KANTURU_UTIL;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00005	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  0000a	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Eg_Kanturu@@YAXXZ
text$yc	SEGMENT
??__Eg_Kanturu@@YAXXZ PROC				; `dynamic initializer for 'g_Kanturu'', COMDAT

; 15   : CKanturu g_Kanturu;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  00005	e8 00 00 00 00	 call	 ??0CKanturu@@QAE@XZ	; CKanturu::CKanturu
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_Kanturu@@YAXXZ ; `dynamic atexit destructor for 'g_Kanturu''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_Kanturu@@YAXXZ ENDP				; `dynamic initializer for 'g_Kanturu''
text$yc	ENDS
PUBLIC	??_C@_0BB@KGGIBKID@KANTURU_TEST_LOG?$AA@	; `string'
PUBLIC	??_C@_0BD@IPKBBHKB@?4?2KANTURU_TEST_LOG?$AA@	; `string'
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
;	COMDAT ??_C@_0BB@KGGIBKID@KANTURU_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BB@KGGIBKID@KANTURU_TEST_LOG?$AA@ DB 'KANTURU_TEST_LOG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IPKBBHKB@?4?2KANTURU_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BD@IPKBBHKB@?4?2KANTURU_TEST_LOG?$AA@ DB '.\KANTURU_TEST_LOG', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??__EKANTURU_TEST_LOG@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_TEST_LOG@@YAXXZ PROC			; `dynamic initializer for 'KANTURU_TEST_LOG'', COMDAT

; 742  : CLogToFile KANTURU_TEST_LOG("KANTURU_TEST_LOG", ".\\KANTURU_TEST_LOG", TRUE);

  00000	6a 01		 push	 1
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IPKBBHKB@?4?2KANTURU_TEST_LOG?$AA@
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KGGIBKID@KANTURU_TEST_LOG?$AA@
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?KANTURU_TEST_LOG@@3VCLogToFile@@A ; KANTURU_TEST_LOG
  00011	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  00016	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_TEST_LOG@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_TEST_LOG''
  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__EKANTURU_TEST_LOG@@YAXXZ ENDP			; `dynamic initializer for 'KANTURU_TEST_LOG''
text$yc	ENDS
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
; Function compile flags: /Ogtp
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00005	e9 00 00 00 00	 jmp	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
text$yd	ENDS
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
; Function compile flags: /Ogtp
;	COMDAT ??__FKANTURU_TEST_LOG@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_TEST_LOG@@YAXXZ PROC			; `dynamic atexit destructor for 'KANTURU_TEST_LOG'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?KANTURU_TEST_LOG@@3VCLogToFile@@A ; KANTURU_TEST_LOG
  00005	e9 00 00 00 00	 jmp	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
??__FKANTURU_TEST_LOG@@YAXXZ ENDP			; `dynamic atexit destructor for 'KANTURU_TEST_LOG''
; Function compile flags: /Ogtp
text$yd	ENDS
;	COMDAT ??__Fg_Kanturu@@YAXXZ
text$yd	SEGMENT
??__Fg_Kanturu@@YAXXZ PROC				; `dynamic atexit destructor for 'g_Kanturu'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  00005	e9 00 00 00 00	 jmp	 ??1CKanturu@@UAE@XZ	; CKanturu::~CKanturu
??__Fg_Kanturu@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_Kanturu''
text$yd	ENDS
PUBLIC	?KANTURU_TEST_LOG@@3VCLogToFile@@A		; KANTURU_TEST_LOG
PUBLIC	?g_Kanturu@@3VCKanturu@@A			; g_Kanturu
_BSS	SEGMENT
?KANTURU_TEST_LOG@@3VCLogToFile@@A DB 010228H DUP (?)	; KANTURU_TEST_LOG
?g_Kanturu@@3VCKanturu@@A DB 0a7ed8H DUP (?)		; g_Kanturu
_KANTURU_UTIL DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_KANTURU_UTIL$initializer$ DD FLAT:??__EKANTURU_UTIL@@YAXXZ
_g_Kanturu$initializer$ DD FLAT:??__Eg_Kanturu@@YAXXZ
_KANTURU_TEST_LOG$initializer$ DD FLAT:??__EKANTURU_TEST_LOG@@YAXXZ
CRT$XCU	ENDS
END
