; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\KanturuBattleOfNightmare.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?SetStateInfo@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
;	COMDAT ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iStateTimeInfo$ = 8					; size = 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetStateInfo, COMDAT
; _this$ = ecx

; 29   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 30   : 		this->m_iState = iStateTimeInfo;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iStateTimeInfo$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 31   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetStateInfo
_TEXT	ENDS
PUBLIC	?SetCondition@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetCondition
; Function compile flags: /Ogtp
;	COMDAT ?SetCondition@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iCondition$ = 8					; size = 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetCondition, COMDAT
; _this$ = ecx

; 34   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 35   : 		this->m_iCondition = iCondition;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCondition$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 36   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetCondition
_TEXT	ENDS
PUBLIC	?GetCondition@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetCondition
; Function compile flags: /Ogtp
;	COMDAT ?GetCondition@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetCondition@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetCondition, COMDAT
; _this$ = ecx

; 41   : 		return this->m_iCondition;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 42   : 	}

  00003	c3		 ret	 0
?GetCondition@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetCondition
_TEXT	ENDS
PUBLIC	?SetValue@CKanturuStateInfo@@QAEXH@Z		; CKanturuStateInfo::SetValue
; Function compile flags: /Ogtp
;	COMDAT ?SetValue@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetValue@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetValue, COMDAT
; _this$ = ecx

; 45   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 46   : 		this->m_iValue = iValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 47   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetValue@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetValue
_TEXT	ENDS
PUBLIC	?GetValue@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetValue
; Function compile flags: /Ogtp
;	COMDAT ?GetValue@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetValue@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetValue, COMDAT
; _this$ = ecx

; 51   : 		return this->m_iValue;

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 52   : 	}

  00003	c3		 ret	 0
?GetValue@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetValue
_TEXT	ENDS
PUBLIC	?SetAppliedTime@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::SetAppliedTime
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Ogtp
;	COMDAT ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::SetAppliedTime, COMDAT
; _this$ = ecx

; 54   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 55   : 		this->m_dwAppliedTickCount = GetTickCount();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0000c	5e		 pop	 esi

; 56   : 	}

  0000d	c3		 ret	 0
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::SetAppliedTime
_TEXT	ENDS
PUBLIC	?GetAppliedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Ogtp
;	COMDAT ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetAppliedTime, COMDAT
; _this$ = ecx

; 60   : 		return this->m_dwAppliedTickCount;

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 61   : 	}

  00003	c3		 ret	 0
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetAppliedTime
_TEXT	ENDS
PUBLIC	?GetElapsedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Ogtp
;	COMDAT ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetElapsedTime, COMDAT
; _this$ = ecx

; 64   : 	{

  00000	56		 push	 esi

; 65   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00001	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0000a	2b c6		 sub	 eax, esi
  0000c	5e		 pop	 esi

; 66   : 		return iElapsedTime;
; 67   : 	}

  0000d	c3		 ret	 0
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetElapsedTime
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetRemainTime
; Function compile flags: /Ogtp
;	COMDAT ?GetRemainTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetRemainTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetRemainTime, COMDAT
; _this$ = ecx

; 70   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 71   : 		int iRemainTime = 0;

  00003	33 c0		 xor	 eax, eax

; 72   : 
; 73   : 		if ( this->GetCondition() == 1 )

  00005	83 7e 08 01	 cmp	 DWORD PTR [esi+8], 1
  00009	75 2b		 jne	 SHORT $LN3@GetRemainT

; 74   : 		{
; 75   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  0000b	57		 push	 edi
  0000c	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00015	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00018	2b c7		 sub	 eax, edi
  0001a	2b c8		 sub	 ecx, eax
  0001c	5f		 pop	 edi

; 76   : 
; 77   : 			if ( iRemainTime <= 0 )

  0001d	85 c9		 test	 ecx, ecx
  0001f	7f 04		 jg	 SHORT $LN1@GetRemainT

; 78   : 			{
; 79   : 				return 0;

  00021	33 c0		 xor	 eax, eax
  00023	5e		 pop	 esi

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;
; 86   : 	}

  00024	c3		 ret	 0
$LN1@GetRemainT:

; 80   : 			}
; 81   : 
; 82   : 			iRemainTime /= 1000;

  00025	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0002a	f7 e9		 imul	 ecx
  0002c	c1 fa 06	 sar	 edx, 6
  0002f	8b c2		 mov	 eax, edx
  00031	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00034	03 c2		 add	 eax, edx
$LN3@GetRemainT:
  00036	5e		 pop	 esi

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;
; 86   : 	}

  00037	c3		 ret	 0
?GetRemainTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetRemainTime
_TEXT	ENDS
PUBLIC	?IsTimeOut@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::IsTimeOut
; Function compile flags: /Ogtp
;	COMDAT ?IsTimeOut@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?IsTimeOut@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::IsTimeOut, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 90   : 		if ( this->GetRemainTime() <= 0 )

  00003	83 7e 08 01	 cmp	 DWORD PTR [esi+8], 1
  00007	75 2b		 jne	 SHORT $LN14@IsTimeOut
  00009	57		 push	 edi
  0000a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00013	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00016	2b c7		 sub	 eax, edi
  00018	2b c8		 sub	 ecx, eax
  0001a	5f		 pop	 edi
  0001b	85 c9		 test	 ecx, ecx
  0001d	7e 15		 jle	 SHORT $LN14@IsTimeOut
  0001f	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00024	f7 e9		 imul	 ecx
  00026	c1 fa 06	 sar	 edx, 6
  00029	8b c2		 mov	 eax, edx
  0002b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002e	03 c2		 add	 eax, edx
  00030	85 c0		 test	 eax, eax
  00032	7f 07		 jg	 SHORT $LN1@IsTimeOut
$LN14@IsTimeOut:

; 91   : 		{
; 92   : 			return TRUE;

  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	5e		 pop	 esi

; 96   : 	}

  0003a	c3		 ret	 0
$LN1@IsTimeOut:

; 93   : 		}
; 94   : 
; 95   : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax
  0003d	5e		 pop	 esi

; 96   : 	}

  0003e	c3		 ret	 0
?IsTimeOut@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::IsTimeOut
_TEXT	ENDS
PUBLIC	?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
;	COMDAT ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z
_TEXT	SEGMENT
_iBattleOfNightmareState$ = 8				; size = 4
?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z PROC ; CKanturuBattleOfNightmare::SetBattleOfNightmareState, COMDAT
; _this$ = ecx

; 49   : 	void SetBattleOfNightmareState(int iBattleOfNightmareState){this->m_iBattleOfNightmareState = iBattleOfNightmareState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iBattleOfNightmareState$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ENDP ; CKanturuBattleOfNightmare::SetBattleOfNightmareState
_TEXT	ENDS
PUBLIC	?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
; Function compile flags: /Ogtp
;	COMDAT ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ PROC ; CKanturuBattleOfNightmare::GetBattleOfNightmareState, COMDAT
; _this$ = ecx

; 50   : 	int GetBattleOfNightmareState(){return this->m_iBattleOfNightmareState;}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ENDP ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
_TEXT	ENDS
PUBLIC	?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z
_TEXT	SEGMENT
_bIsSuccess$ = 8					; size = 4
?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z PROC ; CKanturuBattleOfNightmare::SetSuccessValue, COMDAT
; _this$ = ecx

; 51   : 	void SetSuccessValue(BOOL bIsSuccess){this->m_bIsSucccess = bIsSuccess;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _bIsSuccess$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ENDP ; CKanturuBattleOfNightmare::SetSuccessValue
_TEXT	ENDS
PUBLIC	?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ PROC	; CKanturuBattleOfNightmare::GetSuccessValue, COMDAT
; _this$ = ecx

; 52   : 	BOOL GetSuccessValue(){return this->m_bIsSucccess;}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ENDP	; CKanturuBattleOfNightmare::GetSuccessValue
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ; CKanturuMonsterMng::GetAliveMonsterCount
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturumonstermng.h
;	COMDAT ?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ
_TEXT	SEGMENT
?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ PROC	; CKanturuMonsterMng::GetAliveMonsterCount, COMDAT
; _this$ = ecx

; 48   : 	int GetAliveMonsterCount(){return this->m_iAliveMonsterCount;}

  00000	8b 81 6c 14 00
	00		 mov	 eax, DWORD PTR [ecx+5228]
  00006	c3		 ret	 0
?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ENDP	; CKanturuMonsterMng::GetAliveMonsterCount
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 64		 je	 SHORT $LN39@GetToken

; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 31		 jne	 SHORT $LN30@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 1b		 jne	 SHORT $LN30@GetToken
$LL24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	80 fb ff	 cmp	 bl, -1
  00053	74 44		 je	 SHORT $LN39@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _fgetc
  00061	8a d8		 mov	 bl, al
  00063	83 c4 04	 add	 esp, 4
  00066	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00069	75 e5		 jne	 SHORT $LL24@GetToken
$LN30@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE
; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006b	0f be c3	 movsx	 eax, bl
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _isspace
  00074	83 c4 04	 add	 esp, 4
  00077	85 c0		 test	 eax, eax
  00079	75 a5		 jne	 SHORT $LL31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  0007b	0f be c3	 movsx	 eax, bl
  0007e	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  00081	56		 push	 esi
  00082	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00085	0f 87 2b 01 00
	00		 ja	 $LN6@GetToken
  0008b	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN46@GetToken[ecx]
  00092	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN50@GetToken[ecx*4]
$LN39@GetToken:

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00099	b8 02 00 00 00	 mov	 eax, 2
  0009e	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a2	33 cd		 xor	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000ad	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b2	e9 99 01 00 00	 jmp	 $LN48@GetToken
$LN18@GetToken:

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000b7	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000bc	e9 8f 01 00 00	 jmp	 $LN48@GetToken
$LN17@GetToken:

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000c1	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000c6	e9 85 01 00 00	 jmp	 $LN48@GetToken
$LN16@GetToken:

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  000cb	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  000d0	e9 7b 01 00 00	 jmp	 $LN48@GetToken
$LN15@GetToken:

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  000d5	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  000da	e9 71 01 00 00	 jmp	 $LN48@GetToken
$LN14@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000f1	50		 push	 eax
  000f2	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  000f5	e8 00 00 00 00	 call	 _getc
  000fa	8a d8		 mov	 bl, al
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	80 fb ff	 cmp	 bl, -1
  00102	74 33		 je	 SHORT $LN12@GetToken
$LL13@GetToken:
  00104	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00107	74 15		 je	 SHORT $LN11@GetToken
  00109	0f be cb	 movsx	 ecx, bl
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _isdigit
  00112	83 c4 04	 add	 esp, 4
  00115	85 c0		 test	 eax, eax
  00117	75 05		 jne	 SHORT $LN11@GetToken
  00119	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  0011c	75 19		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00124	88 1e		 mov	 BYTE PTR [esi], bl
  00126	52		 push	 edx

; 102  : 			p++;

  00127	46		 inc	 esi
  00128	e8 00 00 00 00	 call	 _getc
  0012d	8a d8		 mov	 bl, al
  0012f	83 c4 04	 add	 esp, 4
  00132	80 fb ff	 cmp	 bl, -1
  00135	75 cd		 jne	 SHORT $LL13@GetToken
$LN12@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00137	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  0013a	50		 push	 eax
  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	e8 00 00 00 00	 call	 _atof
  00143	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  00149	83 c4 04	 add	 esp, 4
  0014c	5e		 pop	 esi

; 106  : 		return CurrentToken  = NUMBER ;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00157	b8 01 00 00 00	 mov	 eax, 1
  0015c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0015d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00171	51		 push	 ecx
  00172	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  00177	e8 00 00 00 00	 call	 _getc
  0017c	83 c4 04	 add	 esp, 4
  0017f	3c ff		 cmp	 al, -1
  00181	74 1e		 je	 SHORT $LN8@GetToken
$LL9@GetToken:
  00183	3c 22		 cmp	 al, 34			; 00000022H
  00185	0f 84 a1 00 00
	00		 je	 $LN7@GetToken
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 113  : 		{
; 114  : 			*p = ch;

  00191	88 06		 mov	 BYTE PTR [esi], al
  00193	52		 push	 edx

; 115  : 			p++;

  00194	46		 inc	 esi
  00195	e8 00 00 00 00	 call	 _getc
  0019a	83 c4 04	 add	 esp, 4
  0019d	3c ff		 cmp	 al, -1
  0019f	75 e2		 jne	 SHORT $LL9@GetToken
$LN8@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001a1	3c 22		 cmp	 al, 34			; 00000022H
  001a3	0f 84 83 00 00
	00		 je	 $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  001af	0f be d0	 movsx	 edx, al
  001b2	51		 push	 ecx
  001b3	52		 push	 edx

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  001b4	eb 6e		 jmp	 SHORT $LN49@GetToken
$LN6@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _isalpha
  001bc	83 c4 04	 add	 esp, 4
  001bf	85 c0		 test	 eax, eax
  001c1	0f 84 84 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  001d3	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  001d8	e8 00 00 00 00	 call	 _getc
  001dd	8a d8		 mov	 bl, al
  001df	83 c4 04	 add	 esp, 4
  001e2	80 fb ff	 cmp	 bl, -1
  001e5	74 33		 je	 SHORT $LN3@GetToken
$LL4@GetToken:
  001e7	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  001ea	74 15		 je	 SHORT $LN2@GetToken
  001ec	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  001ef	74 10		 je	 SHORT $LN2@GetToken
  001f1	0f be cb	 movsx	 ecx, bl
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 _isalnum
  001fa	83 c4 04	 add	 esp, 4
  001fd	85 c0		 test	 eax, eax
  001ff	74 19		 je	 SHORT $LN3@GetToken
$LN2@GetToken:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 133  : 			{
; 134  : 				*p=ch;

  00207	88 1e		 mov	 BYTE PTR [esi], bl
  00209	52		 push	 edx

; 135  : 				p++;

  0020a	46		 inc	 esi
  0020b	e8 00 00 00 00	 call	 _getc
  00210	8a d8		 mov	 bl, al
  00212	83 c4 04	 add	 esp, 4
  00215	80 fb ff	 cmp	 bl, -1
  00218	75 cd		 jne	 SHORT $LL4@GetToken
$LN3@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0021f	0f be cb	 movsx	 ecx, bl
  00222	50		 push	 eax
  00223	51		 push	 ecx
$LN49@GetToken:
  00224	e8 00 00 00 00	 call	 _ungetc
  00229	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 140  : 			*p=0;

  0022c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0022f	5e		 pop	 esi

; 141  : 			CurrentToken=NAME;

  00230	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0023a	33 c0		 xor	 eax, eax
  0023c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0023d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00240	33 cd		 xor	 ecx, ebp
  00242	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN5@GetToken:

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  0024b	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN48@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00250	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  0025b	5b		 pop	 ebx
  0025c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
  00265	8d 49 00	 npad	 3
$LN50@GetToken:
  00268	00 00 00 00	 DD	 $LN10@GetToken
  0026c	00 00 00 00	 DD	 $LN19@GetToken
  00270	00 00 00 00	 DD	 $LN17@GetToken
  00274	00 00 00 00	 DD	 $LN14@GetToken
  00278	00 00 00 00	 DD	 $LN18@GetToken
  0027c	00 00 00 00	 DD	 $LN16@GetToken
  00280	00 00 00 00	 DD	 $LN15@GetToken
  00284	00 00 00 00	 DD	 $LN6@GetToken
$LN46@GetToken:
  00288	00		 DB	 0
  00289	01		 DB	 1
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	02		 DB	 2
  00293	03		 DB	 3
  00294	03		 DB	 3
  00295	07		 DB	 7
  00296	03		 DB	 3
  00297	03		 DB	 3
  00298	03		 DB	 3
  00299	03		 DB	 3
  0029a	03		 DB	 3
  0029b	03		 DB	 3
  0029c	03		 DB	 3
  0029d	03		 DB	 3
  0029e	03		 DB	 3
  0029f	03		 DB	 3
  002a0	07		 DB	 7
  002a1	04		 DB	 4
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	07		 DB	 7
  002ad	07		 DB	 7
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	07		 DB	 7
  002b1	07		 DB	 7
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	07		 DB	 7
  002b9	07		 DB	 7
  002ba	07		 DB	 7
  002bb	07		 DB	 7
  002bc	07		 DB	 7
  002bd	07		 DB	 7
  002be	07		 DB	 7
  002bf	07		 DB	 7
  002c0	07		 DB	 7
  002c1	07		 DB	 7
  002c2	07		 DB	 7
  002c3	07		 DB	 7
  002c4	07		 DB	 7
  002c5	07		 DB	 7
  002c6	07		 DB	 7
  002c7	07		 DB	 7
  002c8	07		 DB	 7
  002c9	07		 DB	 7
  002ca	07		 DB	 7
  002cb	07		 DB	 7
  002cc	07		 DB	 7
  002cd	07		 DB	 7
  002ce	07		 DB	 7
  002cf	07		 DB	 7
  002d0	07		 DB	 7
  002d1	07		 DB	 7
  002d2	07		 DB	 7
  002d3	07		 DB	 7
  002d4	07		 DB	 7
  002d5	07		 DB	 7
  002d6	07		 DB	 7
  002d7	07		 DB	 7
  002d8	07		 DB	 7
  002d9	07		 DB	 7
  002da	07		 DB	 7
  002db	07		 DB	 7
  002dc	07		 DB	 7
  002dd	07		 DB	 7
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	05		 DB	 5
  002e2	07		 DB	 7
  002e3	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??_7CKanturuBattleOfNightmare@@6B@		; CKanturuBattleOfNightmare::`vftable'
PUBLIC	??1CKanturuBattleOfNightmare@@UAE@XZ		; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
PUBLIC	??_R4CKanturuBattleOfNightmare@@6B@		; CKanturuBattleOfNightmare::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuBattleOfNightmare@@@8		; CKanturuBattleOfNightmare `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuBattleOfNightmare@@8		; CKanturuBattleOfNightmare::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuBattleOfNightmare@@8		; CKanturuBattleOfNightmare::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8	; CKanturuBattleOfNightmare::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??1CKanturuStateInfo@@UAE@XZ:PROC		; CKanturuStateInfo::~CKanturuStateInfo
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECKanturuBattleOfNightmare@@UAEPAXI@Z:PROC	; CKanturuBattleOfNightmare::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8 DD FLAT:??_R0?AVCKanturuBattleOfNightmare@@@8 ; CKanturuBattleOfNightmare::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuBattleOfNightmare@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuBattleOfNightmare@@8
rdata$r	SEGMENT
??_R2CKanturuBattleOfNightmare@@8 DD FLAT:??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8 ; CKanturuBattleOfNightmare::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuBattleOfNightmare@@8
rdata$r	SEGMENT
??_R3CKanturuBattleOfNightmare@@8 DD 00H		; CKanturuBattleOfNightmare::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuBattleOfNightmare@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuBattleOfNightmare@@@8
_DATA	SEGMENT
??_R0?AVCKanturuBattleOfNightmare@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuBattleOfNightmare `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuBattleOfNightmare@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturuBattleOfNightmare@@6B@
rdata$r	SEGMENT
??_R4CKanturuBattleOfNightmare@@6B@ DD 00H		; CKanturuBattleOfNightmare::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuBattleOfNightmare@@@8
	DD	FLAT:??_R3CKanturuBattleOfNightmare@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturuBattleOfNightmare@@6B@
CONST	SEGMENT
??_7CKanturuBattleOfNightmare@@6B@ DD FLAT:??_R4CKanturuBattleOfNightmare@@6B@ ; CKanturuBattleOfNightmare::`vftable'
	DD	FLAT:??_ECKanturuBattleOfNightmare@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CKanturuBattleOfNightmare@@UAE@XZ
_TEXT	SEGMENT
??1CKanturuBattleOfNightmare@@UAE@XZ PROC		; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare, COMDAT
; _this$ = ecx

; 38   : 	return;
; 39   : }

  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00005	6a 06		 push	 6
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CKanturuBattleOfNightmare@@6B@
  0000d	6a 14		 push	 20			; 00000014H
  0000f	83 c1 10	 add	 ecx, 16			; 00000010H
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00018	c3		 ret	 0
??1CKanturuBattleOfNightmare@@UAE@XZ ENDP		; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
_TEXT	ENDS
PUBLIC	??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NONE
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?DelGroupInstance@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::DelGroupInstance
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
;	COMDAT ??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
CONST	SEGMENT
??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_NON'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> NONE', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_NONE, COMDAT
; _this$ = ecx

; 280  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 281  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> NONE",
; 282  : 		this->m_iBattleOfNightmareState);

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0000c	6a 05		 push	 5
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 283  : 
; 284  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_NONE);
; 285  : 	TMonsterAIGroup::DelGroupInstance(this->m_iNightmareAIGroupNumber);

  00014	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  0001a	51		 push	 ecx
  0001b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00022	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 286  : 
; 287  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_NONE");

  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	5e		 pop	 esi

; 288  : }

  00036	c3		 ret	 0
?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_NONE
_TEXT	ENDS
PUBLIC	??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_IDLE
EXTRN	?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z:PROC ; CKanturuBattleUserMng::MoveAllUser
EXTRN	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A:BYTE ; g_KanturuBattleUserMng
;	COMDAT ??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
CONST	SEGMENT
??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_IDL'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> IDLE', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_IDLE, COMDAT
; _this$ = ecx

; 292  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 293  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> IDLE",
; 294  : 		this->m_iBattleOfNightmareState);

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0000c	6a 05		 push	 5
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 295  : 
; 296  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] State(%d) -> IDLE",
; 297  : 		this->m_iBattleOfNightmareState);

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	51		 push	 ecx
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 298  : 
; 299  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_IDLE);
; 300  : 	this->SetSuccessValue(FALSE);
; 301  : 	TMonsterAIGroup::DelGroupInstance(this->m_iNightmareAIGroupNumber);

  00023	8b 96 8c 00 00
	00		 mov	 edx, DWORD PTR [esi+140]
  00029	52		 push	 edx
  0002a	c7 46 04 01 00
	00 00		 mov	 DWORD PTR [esi+4], 1
  00031	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00038	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 302  : 
; 303  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_IDLE");

  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00048	83 c4 1c	 add	 esp, 28			; 0000001cH

; 304  : 	g_KanturuBattleUserMng.MoveAllUser(134);

  0004b	68 86 00 00 00	 push	 134			; 00000086H
  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00055	e8 00 00 00 00	 call	 ?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::MoveAllUser
  0005a	5e		 pop	 esi

; 305  : }

  0005b	c3		 ret	 0
?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_IDLE
_TEXT	ENDS
PUBLIC	??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NOTIFY
;	COMDAT ??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
CONST	SEGMENT
??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> NOTIFY', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_NOTIFY, COMDAT
; _this$ = ecx

; 309  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 310  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> NOTIFY",
; 311  : 		this->m_iBattleOfNightmareState);

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0000c	6a 05		 push	 5
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 312  : 
; 313  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_NOTIFY);

  00017	c7 46 04 02 00
	00 00		 mov	 DWORD PTR [esi+4], 2
  0001e	5e		 pop	 esi

; 314  : }

  0001f	c3		 ret	 0
?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_NOTIFY
_TEXT	ENDS
PUBLIC	??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_START
EXTRN	?FindGroupLeader@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::FindGroupLeader
EXTRN	?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z:PROC	; TMonsterAIGroup::ChangeAIOrder
EXTRN	?Init@TMonsterAIGroup@@SAXH@Z:PROC		; TMonsterAIGroup::Init
EXTRN	?SetKanturuMonster@CKanturuMonsterMng@@QAEHH@Z:PROC ; CKanturuMonsterMng::SetKanturuMonster
EXTRN	?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A:BYTE ; g_KanturuMonsterMng
EXTRN	?NotifyKanturuBattleTime@CKanturuUtil@@QAEXH@Z:PROC ; CKanturuUtil::NotifyKanturuBattleTime
;	COMDAT ??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
CONST	SEGMENT
??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] CKanturuNightmare Set m_iNigh'
	DB	'tmareObjIndex %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> START', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_START, COMDAT
; _this$ = ecx

; 318  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 319  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> START",
; 320  : 		this->m_iBattleOfNightmareState);

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0000c	6a 05		 push	 5
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 321  : 
; 322  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_START);

  00017	c7 46 04 03 00
	00 00		 mov	 DWORD PTR [esi+4], 3

; 323  : 
; 324  : 	if ( this->m_StateInfo[this->m_iBattleOfNightmareState].GetCondition() == 1 )

  0001e	83 7e 54 01	 cmp	 DWORD PTR [esi+84], 1
  00022	75 0e		 jne	 SHORT $LN1@SetState_S

; 325  : 	{
; 326  : 		KANTURU_UTIL.NotifyKanturuBattleTime(this->m_StateInfo[this->m_iBattleOfNightmareState].GetValue());

  00024	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00027	51		 push	 ecx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0002d	e8 00 00 00 00	 call	 ?NotifyKanturuBattleTime@CKanturuUtil@@QAEXH@Z ; CKanturuUtil::NotifyKanturuBattleTime
$LN1@SetState_S:

; 327  : 	}
; 328  : 
; 329  : 	g_KanturuMonsterMng.SetKanturuMonster(2);

  00032	6a 02		 push	 2
  00034	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00039	e8 00 00 00 00	 call	 ?SetKanturuMonster@CKanturuMonsterMng@@QAEHH@Z ; CKanturuMonsterMng::SetKanturuMonster

; 330  : 
; 331  : 	TMonsterAIGroup::Init(this->m_iNightmareAIGroupNumber);

  0003e	8b 96 8c 00 00
	00		 mov	 edx, DWORD PTR [esi+140]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init

; 332  : 	TMonsterAIGroup::ChangeAIOrder(this->m_iNightmareAIGroupNumber, 0);

  0004a	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  00050	6a 00		 push	 0
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder

; 333  : 
; 334  : 	int iIndex = TMonsterAIGroup::FindGroupLeader(this->m_iNightmareAIGroupNumber);

  00058	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?FindGroupLeader@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::FindGroupLeader

; 335  : 	this->m_iNightmareObjIndex = iIndex;
; 336  : 
; 337  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] CKanturuNightmare Set m_iNightmareObjIndex %d",
; 338  : 		this->m_iNightmareObjIndex);

  00064	50		 push	 eax
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0006a	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00076	83 c4 18	 add	 esp, 24			; 00000018H
  00079	5e		 pop	 esi

; 339  : }

  0007a	c3		 ret	 0
?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_START
_TEXT	ENDS
PUBLIC	??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ	; CKanturuBattleOfNightmare::SetState_END
EXTRN	?SendMsgKanturuBattleUser@CKanturuUtil@@QAAXPADZZ:PROC ; CKanturuUtil::SendMsgKanturuBattleUser
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?NotifyKanturuSuccessValue@CKanturuUtil@@QAEXH@Z:PROC ; CKanturuUtil::NotifyKanturuSuccessValue
;	COMDAT ??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
CONST	SEGMENT
??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] Fail!! TimeOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> END', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_END, COMDAT
; _this$ = ecx

; 344  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 345  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> END",
; 346  : 		this->m_iBattleOfNightmareState);

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0000c	6a 05		 push	 5
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 347  : 
; 348  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_END);
; 349  : 	KANTURU_UTIL.NotifyKanturuSuccessValue(this->GetSuccessValue());

  00014	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001a	51		 push	 ecx
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00020	c7 46 04 04 00
	00 00		 mov	 DWORD PTR [esi+4], 4
  00027	e8 00 00 00 00	 call	 ?NotifyKanturuSuccessValue@CKanturuUtil@@QAEXH@Z ; CKanturuUtil::NotifyKanturuSuccessValue

; 350  : 
; 351  : 	if ( this->GetSuccessValue() == FALSE )

  0002c	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00030	5e		 pop	 esi
  00031	75 28		 jne	 SHORT $LN1@SetState_E

; 352  : 	{
; 353  : 		KANTURU_UTIL.SendMsgKanturuBattleUser(lMsg.Get(MSGGET(13, 36)));

  00033	68 24 0d 00 00	 push	 3364			; 00000d24H
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0003d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00042	50		 push	 eax
  00043	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00048	e8 00 00 00 00	 call	 ?SendMsgKanturuBattleUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKanturuBattleUser

; 354  : 		LogAddTD("[ KANTURU ][ BattleOfNightmare ] Fail!! TimeOut");

  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SetState_E:

; 355  : 	}
; 356  : }

  0005b	c3		 ret	 0
?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_END
_TEXT	ENDS
PUBLIC	??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
EXTRN	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::ResetAllData
;	COMDAT ??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
CONST	SEGMENT
??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> ENDCYCLE', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::SetState_ENDCYCLE, COMDAT
; _this$ = ecx

; 360  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 361  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> ENDCYCLE",
; 362  : 		this->m_iBattleOfNightmareState);

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0000c	6a 05		 push	 5
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 363  : 
; 364  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] State(%d) -> ENDCYCLE",
; 365  : 		this->m_iBattleOfNightmareState);

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	51		 push	 ecx
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00023	83 c4 14	 add	 esp, 20			; 00000014H

; 366  : 
; 367  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_ENDCYCLE);
; 368  : 
; 369  : 	if ( this->GetSuccessValue() == TRUE )

  00026	83 7e 08 01	 cmp	 DWORD PTR [esi+8], 1
  0002a	c7 46 04 05 00
	00 00		 mov	 DWORD PTR [esi+4], 5
  00031	5e		 pop	 esi
  00032	75 1e		 jne	 SHORT $LN2@SetState_E@2

; 370  : 	{
; 371  : 		KANTURU_UTIL.SendMsgKanturuBattleUser(lMsg.Get(MSGGET(13, 35)));

  00034	68 23 0d 00 00	 push	 3363			; 00000d23H
  00039	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0003e	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00049	e8 00 00 00 00	 call	 ?SendMsgKanturuBattleUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKanturuBattleUser
  0004e	83 c4 08	 add	 esp, 8

; 377  : 	}
; 378  : }

  00051	c3		 ret	 0
$LN2@SetState_E@2:

; 372  : 	}
; 373  : 	else
; 374  : 	{
; 375  : 		g_KanturuBattleUserMng.MoveAllUser(137);

  00052	68 89 00 00 00	 push	 137			; 00000089H
  00057	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  0005c	e8 00 00 00 00	 call	 ?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::MoveAllUser

; 376  : 		g_KanturuBattleUserMng.ResetAllData();

  00061	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00066	e9 00 00 00 00	 jmp	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData
?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
_TEXT	ENDS
PUBLIC	?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_NONE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_NONE, COMDAT
; _this$ = ecx

; 384  : 	return;
; 385  : }

  00000	c3		 ret	 0
?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_NONE
_TEXT	ENDS
PUBLIC	?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_IDLE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_IDLE, COMDAT
; _this$ = ecx

; 390  : 	return;
; 391  : }

  00000	c3		 ret	 0
?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_IDLE
_TEXT	ENDS
PUBLIC	?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_NOTIFY
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::ProcState_NOTIFY, COMDAT
; _this$ = ecx

; 396  : 	return;
; 397  : }

  00000	c3		 ret	 0
?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::ProcState_NOTIFY
_TEXT	ENDS
PUBLIC	?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_END
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_END, COMDAT
; _this$ = ecx

; 422  : 	return;
; 423  : }

  00000	c3		 ret	 0
?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_END
_TEXT	ENDS
PUBLIC	??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
;	COMDAT ??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] DelGroupInstance ProcState_EN'
	DB	'DCYCLE', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE, COMDAT
; _this$ = ecx

; 429  : 	TMonsterAIGroup::DelGroupInstance(this->m_iNightmareAIGroupNumber);

  00000	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance

; 430  : 
; 431  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] DelGroupInstance ProcState_ENDCYCLE");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00017	83 c4 08	 add	 esp, 8

; 432  : }

  0001a	c3		 ret	 0
?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetRemainTime
; Function compile flags: /Ogtp
;	COMDAT ?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ PROC	; CKanturuBattleOfNightmare::GetRemainTime, COMDAT
; _this$ = ecx

; 455  : 	int iCurrentState = this->GetBattleOfNightmareState();
; 456  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00006	56		 push	 esi
  00007	8d 74 81 10	 lea	 esi, DWORD PTR [ecx+eax*4+16]
  0000b	33 c0		 xor	 eax, eax
  0000d	83 7e 08 01	 cmp	 DWORD PTR [esi+8], 1
  00011	75 2b		 jne	 SHORT $LN7@GetRemainT@2
  00013	57		 push	 edi
  00014	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00020	2b c7		 sub	 eax, edi
  00022	2b c8		 sub	 ecx, eax
  00024	5f		 pop	 edi
  00025	85 c9		 test	 ecx, ecx
  00027	7f 04		 jg	 SHORT $LN5@GetRemainT@2
  00029	33 c0		 xor	 eax, eax
  0002b	5e		 pop	 esi

; 457  : }

  0002c	c3		 ret	 0

; 455  : 	int iCurrentState = this->GetBattleOfNightmareState();
; 456  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

$LN5@GetRemainT@2:
  0002d	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00032	f7 e9		 imul	 ecx
  00034	c1 fa 06	 sar	 edx, 6
  00037	8b c2		 mov	 eax, edx
  00039	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003c	03 c2		 add	 eax, edx
$LN7@GetRemainT@2:
  0003e	5e		 pop	 esi

; 457  : }

  0003f	c3		 ret	 0
?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ ENDP	; CKanturuBattleOfNightmare::GetRemainTime
_TEXT	ENDS
PUBLIC	?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
;	COMDAT ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::ResetTimeInfo, COMDAT
; _this$ = ecx

; 22   : 		this->SetStateInfo(0);

  00000	33 c0		 xor	 eax, eax
  00002	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 23   : 		this->SetCondition(0);

  00005	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 24   : 		this->SetValue(0);

  00008	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 25   : 	}

  0000b	c3		 ret	 0
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::ResetTimeInfo
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCKanturuBattleOfNightmare@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCKanturuBattleOfNightmare@@UAEPAXI@Z PROC		; CKanturuBattleOfNightmare::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CKanturuBattleOfNightmare@@UAE@XZ ; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCKanturuBattleOfNightmare@@UAEPAXI@Z ENDP		; CKanturuBattleOfNightmare::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ	; CKanturuBattleOfNightmare::ResetAllData
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
;	COMDAT ?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ResetAllData, COMDAT
; _this$ = ecx

; 45   : 	this->m_StateInfoCount = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 46   : 
; 47   : 	for ( int iCount=0;iCount<KANTURU_NIGHTMARE_STATE_INFO;iCount++)
; 48   : 	{
; 49   : 		this->m_StateInfo[iCount].ResetTimeInfo();

  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  0000e	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00011	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  00014	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  00017	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  0001a	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
  0001d	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  00020	89 41 44	 mov	 DWORD PTR [ecx+68], eax
  00023	89 41 50	 mov	 DWORD PTR [ecx+80], eax
  00026	89 41 54	 mov	 DWORD PTR [ecx+84], eax
  00029	89 41 58	 mov	 DWORD PTR [ecx+88], eax
  0002c	89 41 64	 mov	 DWORD PTR [ecx+100], eax
  0002f	89 41 68	 mov	 DWORD PTR [ecx+104], eax
  00032	89 41 6c	 mov	 DWORD PTR [ecx+108], eax
  00035	89 41 78	 mov	 DWORD PTR [ecx+120], eax
  00038	89 41 7c	 mov	 DWORD PTR [ecx+124], eax
  0003b	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 50   : 	}
; 51   : }

  00041	c3		 ret	 0
?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ResetAllData
_TEXT	ENDS
PUBLIC	??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z	; CKanturuBattleOfNightmare::LoadData
EXTRN	_fclose:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
CONST	SEGMENT
??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - File load error : File Name'
	DB	' Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Loading Exception Error (%s'
	DB	') File. ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Nightmare Hand AI Group Rea'
	DB	'd Error(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Exceed Max State Time (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ]  %s file is Loaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Can''t Open %s ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$0
__unwindtable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
xdata$x	ENDS
;	COMDAT ?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_iType$209952 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_lpszFileName$ = 8					; size = 4
?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z PROC	; CKanturuBattleOfNightmare::LoadData, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d e8	 mov	 DWORD PTR _this$[ebp], ebx

; 57   : 	this->m_bFileDataLoad = FALSE;
; 58   : 
; 59   : 	if ( !lpszFileName || !strcmp(lpszFileName, ""))

  00030	8b 75 08	 mov	 esi, DWORD PTR _lpszFileName$[ebp]
  00033	33 ff		 xor	 edi, edi
  00035	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  00038	3b f7		 cmp	 esi, edi
  0003a	0f 84 62 02 00
	00		 je	 $LN19@LoadData
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00045	8b c6		 mov	 eax, esi
$LL37@LoadData:
  00047	8a 10		 mov	 dl, BYTE PTR [eax]
  00049	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0004b	75 1a		 jne	 SHORT $LN38@LoadData
  0004d	84 d2		 test	 dl, dl
  0004f	74 12		 je	 SHORT $LN39@LoadData
  00051	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00054	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00057	75 0e		 jne	 SHORT $LN38@LoadData
  00059	83 c0 02	 add	 eax, 2
  0005c	83 c1 02	 add	 ecx, 2
  0005f	84 d2		 test	 dl, dl
  00061	75 e4		 jne	 SHORT $LL37@LoadData
$LN39@LoadData:
  00063	33 c0		 xor	 eax, eax
  00065	eb 05		 jmp	 SHORT $LN40@LoadData
$LN38@LoadData:
  00067	1b c0		 sbb	 eax, eax
  00069	83 d8 ff	 sbb	 eax, -1
$LN40@LoadData:
  0006c	3b c7		 cmp	 eax, edi
  0006e	0f 84 2e 02 00
	00		 je	 $LN19@LoadData

; 63   : 	}
; 64   : 
; 65   : 	try
; 66   : 	{
; 67   : 		
; 68   : 		SMDFile = fopen(lpszFileName, "r");

  00074	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00079	56		 push	 esi
  0007a	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi
  0007d	e8 00 00 00 00	 call	 _fopen
  00082	83 c4 08	 add	 esp, 8
  00085	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 69   : 
; 70   : 		if ( SMDFile == NULL )

  0008a	3b c7		 cmp	 eax, edi
  0008c	75 19		 jne	 SHORT $LN17@LoadData

; 71   : 		{
; 72   : 			DWORD dwLastError = GetLastError();

  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 73   : 
; 74   : 			MsgBox("[ KANTURU ][ BattleOfNightmare ] - Can't Open %s ",
; 75   : 				lpszFileName);

  00094	56		 push	 esi
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0009a	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0009f	83 c4 08	 add	 esp, 8

; 76   : 
; 77   : 			return FALSE;

  000a2	e9 08 02 00 00	 jmp	 $LN55@LoadData
$LN17@LoadData:

; 78   : 		}
; 79   : 
; 80   : 		SMDToken Token;
; 81   : 		this->ResetAllData();

  000a7	8b cb		 mov	 ecx, ebx
  000a9	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ResetAllData
  000ae	8b ff		 npad	 2
$LL16@LoadData:

; 82   : 
; 83   : 		int iType = -1;
; 84   : 		int iState = 0;
; 85   : 		int iCondition = 0;
; 86   : 		int iValue = 0;
; 87   : 
; 88   : 		while ( true )
; 89   : 		{
; 90   : 			Token = GetToken();

  000b0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 91   : 
; 92   : 			if ( Token == END )

  000b5	83 f8 02	 cmp	 eax, 2
  000b8	75 3d		 jne	 SHORT $LN14@LoadData

; 176  : 
; 177  : 		fclose(SMDFile);

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 _fclose

; 178  : 
; 179  : 		LogAddC(2, "[ KANTURU ][ BattleOfNightmare ]  %s file is Loaded",
; 180  : 			lpszFileName);

  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  000c8	51		 push	 ecx
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  000ce	6a 02		 push	 2
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 181  : 
; 182  : 		this->m_bFileDataLoad = TRUE;

  000d6	c7 43 0c 01 00
	00 00		 mov	 DWORD PTR [ebx+12], 1

; 188  : 
; 189  : 	return this->m_bFileDataLoad;

  000dd	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  000e0	83 c4 10	 add	 esp, 16			; 00000010H

; 190  : }

  000e3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ed	59		 pop	 ecx
  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c2 04 00	 ret	 4
$LN14@LoadData:

; 93   : 			{
; 94   : 				break;
; 95   : 			}
; 96   : 
; 97   : 			iType = (int)TokenNumber;

  000f7	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000fd	e8 00 00 00 00	 call	 __ftol2_sse
  00102	8b f0		 mov	 esi, eax
  00104	89 75 ec	 mov	 DWORD PTR _iType$209952[ebp], esi
$LL13@LoadData:

; 98   : 
; 99   : 			while ( true )
; 100  : 			{
; 101  : 				if ( iType == 7 )
; 102  : 				{
; 103  : 					iState = 0;
; 104  : 					iCondition = 0;
; 105  : 					iValue = 0;
; 106  : 
; 107  : 					Token = GetToken();

  00107	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 108  : 
; 109  : 					if ( !strcmp("end", TokenString))

  0010c	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00111	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00116	83 fe 07	 cmp	 esi, 7
  00119	0f 85 b9 00 00
	00		 jne	 $LN11@LoadData
  0011f	90		 npad	 1
$LL41@LoadData:
  00120	8a 10		 mov	 dl, BYTE PTR [eax]
  00122	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00124	75 1a		 jne	 SHORT $LN42@LoadData
  00126	84 d2		 test	 dl, dl
  00128	74 12		 je	 SHORT $LN43@LoadData
  0012a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0012d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00130	75 0e		 jne	 SHORT $LN42@LoadData
  00132	83 c0 02	 add	 eax, 2
  00135	83 c1 02	 add	 ecx, 2
  00138	84 d2		 test	 dl, dl
  0013a	75 e4		 jne	 SHORT $LL41@LoadData
$LN43@LoadData:
  0013c	33 c0		 xor	 eax, eax
  0013e	eb 05		 jmp	 SHORT $LN44@LoadData
$LN42@LoadData:
  00140	1b c0		 sbb	 eax, eax
  00142	83 d8 ff	 sbb	 eax, -1
$LN44@LoadData:
  00145	85 c0		 test	 eax, eax
  00147	0f 84 63 ff ff
	ff		 je	 $LL16@LoadData

; 110  : 					{
; 111  : 						break;
; 112  : 					}
; 113  : 
; 114  : 					iState = (int)TokenNumber;

  0014d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00153	e8 00 00 00 00	 call	 __ftol2_sse
  00158	8b f8		 mov	 edi, eax

; 115  : 
; 116  : 					Token = GetToken();

  0015a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 117  : 					iCondition = (int)TokenNumber;

  0015f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00165	e8 00 00 00 00	 call	 __ftol2_sse
  0016a	8b f0		 mov	 esi, eax

; 118  : 
; 119  : 					Token = GetToken();

  0016c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 120  : 					iValue = (int)TokenNumber;

  00171	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00177	e8 00 00 00 00	 call	 __ftol2_sse

; 121  : 
; 122  : 					if ( this->m_StateInfoCount < 0 || this->m_StateInfoCount >= KANTURU_NIGHTMARE_STATE_INFO )

  0017c	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  00182	85 c9		 test	 ecx, ecx
  00184	78 3f		 js	 SHORT $LN8@LoadData
  00186	83 f9 06	 cmp	 ecx, 6
  00189	7d 3a		 jge	 SHORT $LN8@LoadData

; 128  : 					}
; 129  : 
; 130  : 					this->m_StateInfo[this->m_StateInfoCount].SetStateInfo(iState);

  0018b	8d 54 89 05	 lea	 edx, DWORD PTR [ecx+ecx*4+5]
  0018f	89 3c 93	 mov	 DWORD PTR [ebx+edx*4], edi

; 131  : 					this->m_StateInfo[this->m_StateInfoCount].SetCondition(iCondition);

  00192	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  00198	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0019b	89 74 8b 18	 mov	 DWORD PTR [ebx+ecx*4+24], esi

; 132  : 
; 133  : 					if ( iCondition == 1 )

  0019f	83 fe 01	 cmp	 esi, 1
  001a2	75 06		 jne	 SHORT $LN7@LoadData

; 134  : 					{
; 135  : 						iValue *= 1000;

  001a4	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
$LN7@LoadData:

; 136  : 					}
; 137  : 
; 138  : 					this->m_StateInfo[this->m_StateInfoCount].SetValue(iValue);

  001aa	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]

; 139  : 					this->m_StateInfoCount++;

  001b0	8b 75 ec	 mov	 esi, DWORD PTR _iType$209952[ebp]
  001b3	8d 14 89	 lea	 edx, DWORD PTR [ecx+ecx*4]
  001b6	89 44 93 1c	 mov	 DWORD PTR [ebx+edx*4+28], eax
  001ba	ff 83 88 00 00
	00		 inc	 DWORD PTR [ebx+136]
  001c0	e9 42 ff ff ff	 jmp	 $LL13@LoadData
$LN8@LoadData:

; 123  : 					{
; 124  : 						MsgBox("[ KANTURU ][ BattleOfNightmare ] - Exceed Max State Time (%d)",
; 125  : 							this->m_StateInfoCount);

  001c5	51		 push	 ecx
  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  001cb	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001d0	83 c4 08	 add	 esp, 8

; 126  : 
; 127  : 						break;

  001d3	e9 d8 fe ff ff	 jmp	 $LL16@LoadData
$LN11@LoadData:

; 140  : 				}
; 141  : 				else if ( iType == 8 )

  001d8	83 fe 08	 cmp	 esi, 8
  001db	0f 85 8f 00 00
	00		 jne	 $LL49@LoadData
$LL45@LoadData:

; 142  : 				{
; 143  : 					int iValue = 0;
; 144  : 
; 145  : 					Token = GetToken();
; 146  : 
; 147  : 					if ( !strcmp("end", TokenString))

  001e1	8a 10		 mov	 dl, BYTE PTR [eax]
  001e3	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001e5	75 1a		 jne	 SHORT $LN46@LoadData
  001e7	84 d2		 test	 dl, dl
  001e9	74 12		 je	 SHORT $LN47@LoadData
  001eb	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  001ee	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001f1	75 0e		 jne	 SHORT $LN46@LoadData
  001f3	83 c0 02	 add	 eax, 2
  001f6	83 c1 02	 add	 ecx, 2
  001f9	84 d2		 test	 dl, dl
  001fb	75 e4		 jne	 SHORT $LL45@LoadData
$LN47@LoadData:
  001fd	33 c0		 xor	 eax, eax
  001ff	eb 05		 jmp	 SHORT $LN48@LoadData
$LN46@LoadData:
  00201	1b c0		 sbb	 eax, eax
  00203	83 d8 ff	 sbb	 eax, -1
$LN48@LoadData:
  00206	85 c0		 test	 eax, eax
  00208	0f 84 a2 fe ff
	ff		 je	 $LL16@LoadData

; 148  : 					{
; 149  : 						break;
; 150  : 					}
; 151  : 
; 152  : 					iValue = (int)TokenNumber;

  0020e	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00214	e8 00 00 00 00	 call	 __ftol2_sse

; 153  : 
; 154  : 					if ( iValue < 0 )

  00219	85 c0		 test	 eax, eax
  0021b	79 10		 jns	 SHORT $LN3@LoadData

; 155  : 					{
; 156  : 						MsgBox("[ KANTURU ][ BattleOfNightmare ] - Nightmare Hand AI Group Read Error(%d)",
; 157  : 							iValue);

  0021d	50		 push	 eax
  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00223	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00228	83 c4 08	 add	 esp, 8

; 158  : 
; 159  : 						iValue=0;

  0022b	33 c0		 xor	 eax, eax
$LN3@LoadData:

; 160  : 					}
; 161  : 
; 162  : 					this->m_iNightmareAIGroupNumber = iValue;

  0022d	89 83 8c 00 00
	00		 mov	 DWORD PTR [ebx+140], eax

; 163  : 				}
; 164  : 				else

  00233	e9 cf fe ff ff	 jmp	 $LL13@LoadData
__catch$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$0:

; 183  : 	}	// __try
; 184  : 	catch(...)
; 185  : 	{
; 186  : 		MsgBox("[ KANTURU ][ BattleOfNightmare ] - Loading Exception Error (%s) File. ", lpszFileName);

  00238	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  0023b	50		 push	 eax
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00241	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00246	83 c4 08	 add	 esp, 8

; 187  : 	}

  00249	b8 00 00 00 00	 mov	 eax, $LN53@LoadData
  0024e	c3		 ret	 0
$LN53@LoadData:
  0024f	8b 5d e8	 mov	 ebx, DWORD PTR _this$[ebp]

; 188  : 
; 189  : 	return this->m_bFileDataLoad;

  00252	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]

; 190  : }

  00255	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00258	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0025f	59		 pop	 ecx
  00260	5f		 pop	 edi
  00261	5e		 pop	 esi
  00262	5b		 pop	 ebx
  00263	8b e5		 mov	 esp, ebp
  00265	5d		 pop	 ebp
  00266	c2 04 00	 ret	 4
  00269	8d a4 24 00 00
	00 00		 npad	 7
$LL49@LoadData:

; 165  : 				{
; 166  : 					Token = GetToken();
; 167  : 
; 168  : 					if ( !strcmp("end", TokenString))

  00270	8a 10		 mov	 dl, BYTE PTR [eax]
  00272	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00274	75 1a		 jne	 SHORT $LN50@LoadData
  00276	84 d2		 test	 dl, dl
  00278	74 12		 je	 SHORT $LN51@LoadData
  0027a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0027d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00280	75 0e		 jne	 SHORT $LN50@LoadData
  00282	83 c0 02	 add	 eax, 2
  00285	83 c1 02	 add	 ecx, 2
  00288	84 d2		 test	 dl, dl
  0028a	75 e4		 jne	 SHORT $LL49@LoadData
$LN51@LoadData:
  0028c	33 c0		 xor	 eax, eax
  0028e	eb 05		 jmp	 SHORT $LN52@LoadData
$LN50@LoadData:
  00290	1b c0		 sbb	 eax, eax
  00292	83 d8 ff	 sbb	 eax, -1
$LN52@LoadData:
  00295	85 c0		 test	 eax, eax
  00297	0f 85 6a fe ff
	ff		 jne	 $LL13@LoadData

; 169  : 					{
; 170  : 						break;
; 171  : 					}
; 172  : 				}
; 173  : 
; 174  : 			}	// while
; 175  : 		}	// while

  0029d	e9 0e fe ff ff	 jmp	 $LL16@LoadData
$LN19@LoadData:

; 60   : 	{
; 61   : 		MsgBox("[ KANTURU ][ BattleOfNightmare ] - File load error : File Name Error");

  002a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  002a7	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  002ac	83 c4 04	 add	 esp, 4
$LN55@LoadData:

; 62   : 		return FALSE;

  002af	33 c0		 xor	 eax, eax

; 190  : }

  002b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  002b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002bb	59		 pop	 ecx
  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	5b		 pop	 ebx
  002bf	8b e5		 mov	 esp, ebp
  002c1	5d		 pop	 ebp
  002c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z ENDP	; CKanturuBattleOfNightmare::LoadData
PUBLIC	??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetState@CKanturuBattleOfNightmare@@QAEXH@Z	; CKanturuBattleOfNightmare::SetState
EXTRN	?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuChangeState
EXTRN	?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ:PROC ; CKanturuMonsterMng::ResetRegenMonsterObjData
;	COMDAT ??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
CONST	SEGMENT
??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] CKanturuBattleOfNightmare::Se'
	DB	'tState(...)  m_iNightmareObjIndex %d', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z
_TEXT	SEGMENT
_iBattleOfNightmareState$ = 8				; size = 4
?SetState@CKanturuBattleOfNightmare@@QAEXH@Z PROC	; CKanturuBattleOfNightmare::SetState, COMDAT
; _this$ = ecx

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 227  : 	if ( this->m_StateInfo[iBattleOfNightmareState].GetCondition() > 0 )

  00006	8b 7d 08	 mov	 edi, DWORD PTR _iBattleOfNightmareState$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  0000e	83 7c 86 18 00	 cmp	 DWORD PTR [esi+eax*4+24], 0
  00013	8d 1c 86	 lea	 ebx, DWORD PTR [esi+eax*4]
  00016	7e 09		 jle	 SHORT $LN14@SetState

; 228  : 	{
; 229  : 		this->m_StateInfo[iBattleOfNightmareState].SetAppliedTime();

  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001e	89 43 20	 mov	 DWORD PTR [ebx+32], eax
$LN14@SetState:

; 230  : 	}
; 231  : 
; 232  : 	g_KanturuMonsterMng.ResetRegenMonsterObjData();

  00021	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00026	e8 00 00 00 00	 call	 ?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ ; CKanturuMonsterMng::ResetRegenMonsterObjData

; 233  : 	this->m_iNightmareObjIndex = -1;
; 234  : 
; 235  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] CKanturuBattleOfNightmare::SetState(...)  m_iNightmareObjIndex %d",
; 236  : 		this->m_iNightmareObjIndex);

  0002b	6a ff		 push	 -1
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00032	c7 86 90 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+144], -1
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00042	83 c4 08	 add	 esp, 8

; 237  : 
; 238  : 	switch ( iBattleOfNightmareState )

  00045	83 ff 05	 cmp	 edi, 5
  00048	77 3b		 ja	 SHORT $LN7@SetState
  0004a	ff 24 bd 00 00
	00 00		 jmp	 DWORD PTR $LN16@SetState[edi*4]
$LN6@SetState:

; 239  : 	{
; 240  : 		case KANTURU_NIGHTMARE_NONE:
; 241  : 			this->SetState_NONE();

  00051	8b ce		 mov	 ecx, esi
  00053	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NONE

; 242  : 			break;

  00058	eb 2b		 jmp	 SHORT $LN7@SetState
$LN5@SetState:

; 243  : 		case KANTURU_NIGHTMARE_IDLE:
; 244  : 			this->SetState_IDLE();

  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_IDLE

; 245  : 			break;

  00061	eb 22		 jmp	 SHORT $LN7@SetState
$LN4@SetState:

; 246  : 		case KANTURU_NIGHTMARE_NOTIFY:
; 247  : 			this->SetState_NOTIFY();

  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NOTIFY

; 248  : 			break;

  0006a	eb 19		 jmp	 SHORT $LN7@SetState
$LN3@SetState:

; 249  : 		case KANTURU_NIGHTMARE_START:
; 250  : 			this->SetState_START();

  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_START

; 251  : 			break;

  00073	eb 10		 jmp	 SHORT $LN7@SetState
$LN2@SetState:

; 252  : 		case KANTURU_NIGHTMARE_END:
; 253  : 			this->SetState_END();

  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_END

; 254  : 			break;

  0007c	eb 07		 jmp	 SHORT $LN7@SetState
$LN1@SetState:

; 255  : 		case KANTURU_NIGHTMARE_ENDCYCLE:
; 256  : 			this->SetState_ENDCYCLE();

  0007e	8b ce		 mov	 ecx, esi
  00080	e8 00 00 00 00	 call	 ?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
$LN7@SetState:

; 257  : 			break;
; 258  : 	}
; 259  : 
; 260  : 	KANTURU_UTIL.NotifyKanturuChangeState(KANTURU_STATE_BATTLE_OF_NIGHTMARE, this->m_iBattleOfNightmareState);

  00085	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00088	51		 push	 ecx
  00089	6a 03		 push	 3
  0008b	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00090	e8 00 00 00 00	 call	 ?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuChangeState
  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx

; 261  : }

  00098	5d		 pop	 ebp
  00099	c2 04 00	 ret	 4
$LN16@SetState:
  0009c	00 00 00 00	 DD	 $LN6@SetState
  000a0	00 00 00 00	 DD	 $LN5@SetState
  000a4	00 00 00 00	 DD	 $LN4@SetState
  000a8	00 00 00 00	 DD	 $LN3@SetState
  000ac	00 00 00 00	 DD	 $LN2@SetState
  000b0	00 00 00 00	 DD	 $LN1@SetState
?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ENDP	; CKanturuBattleOfNightmare::SetState
_TEXT	ENDS
PUBLIC	?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetNextState
; Function compile flags: /Ogtp
;	COMDAT ?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z
_TEXT	SEGMENT
_iCurrentState$ = 8					; size = 4
?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z PROC	; CKanturuBattleOfNightmare::SetNextState, COMDAT
; _this$ = ecx

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 267  : 	int iNextState = iCurrentState + 1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00006	40		 inc	 eax

; 268  : 
; 269  : 	if ( iNextState >= KANTURU_NIGHTMARE_STATE_INFO )

  00007	83 f8 06	 cmp	 eax, 6
  0000a	7c 02		 jl	 SHORT $LN1@SetNextSta

; 270  : 	{
; 271  : 		iNextState = KANTURU_NIGHTMARE_NONE;

  0000c	33 c0		 xor	 eax, eax
$LN1@SetNextSta:

; 272  : 	}
; 273  : 
; 274  : 	this->SetState(iNextState);

  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetState

; 275  : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ENDP	; CKanturuBattleOfNightmare::SetNextState
_TEXT	ENDS
PUBLIC	??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_START
EXTRN	?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z:PROC ; CKanturuBattleUserMng::LogBattleWinnerUserInfo
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?NotifyKanturuUserMonsterCount@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuUserMonsterCount
EXTRN	?GetUserCount@CKanturuBattleUserMng@@QAEHXZ:PROC ; CKanturuBattleUserMng::GetUserCount
;	COMDAT ??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturustateinfo.h
CONST	SEGMENT
??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] Success!! Nightmare Die', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_START, COMDAT
; _this$ = ecx

; 401  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 402  : 	KANTURU_UTIL.NotifyKanturuUserMonsterCount(g_KanturuMonsterMng.GetAliveMonsterCount(),
; 403  : 		g_KanturuBattleUserMng.GetUserCount());

  00004	8b 3d 6c 14 00
	00		 mov	 edi, DWORD PTR ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A+5228
  0000a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  0000f	e8 00 00 00 00	 call	 ?GetUserCount@CKanturuBattleUserMng@@QAEHXZ ; CKanturuBattleUserMng::GetUserCount
  00014	50		 push	 eax
  00015	57		 push	 edi
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0001b	e8 00 00 00 00	 call	 ?NotifyKanturuUserMonsterCount@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuUserMonsterCount

; 404  : 
; 405  : 	int iIndex = this->m_iNightmareObjIndex;
; 406  : 
; 407  : 	if ( gObj[iIndex].Live == FALSE )

  00020	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00032	80 7c 08 6a 00	 cmp	 BYTE PTR [eax+ecx+106], 0
  00037	75 3f		 jne	 SHORT $LN1@ProcState_

; 408  : 	{
; 409  : 		this->SetSuccessValue(TRUE);
; 410  : 
; 411  : 		LogAddTD("[ KANTURU ][ BattleOfNightmare ] Success!! Nightmare Die");

  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0003e	c7 46 08 01 00
	00 00		 mov	 DWORD PTR [esi+8], 1
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 412  : 		g_KanturuBattleUserMng.LogBattleWinnerUserInfo(3, this->m_StateInfo[this->m_iBattleOfNightmareState].GetElapsedTime());

  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00051	8b 7c 96 20	 mov	 edi, DWORD PTR [esi+edx*4+32]
  00055	83 c4 04	 add	 esp, 4
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0005e	2b c7		 sub	 eax, edi
  00060	50		 push	 eax
  00061	6a 03		 push	 3
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00068	e8 00 00 00 00	 call	 ?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z ; CKanturuBattleUserMng::LogBattleWinnerUserInfo

; 413  : 
; 414  : 		this->SetNextState(this->m_iBattleOfNightmareState);

  0006d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00070	50		 push	 eax
  00071	8b ce		 mov	 ecx, esi
  00073	e8 00 00 00 00	 call	 ?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetNextState
$LN1@ProcState_:

; 415  : 	}
; 416  : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	c3		 ret	 0
?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_START
_TEXT	ENDS
PUBLIC	?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckStateTime
; Function compile flags: /Ogtp
;	COMDAT ?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::CheckStateTime, COMDAT
; _this$ = ecx

; 436  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 437  : 	int iCurrentState = this->GetBattleOfNightmareState();

  00004	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 438  : 
; 439  : 	if ( iCurrentState )

  00007	85 f6		 test	 esi, esi
  00009	74 22		 je	 SHORT $LN1@CheckState

; 440  : 	{
; 441  : 		if ( this->m_StateInfo[iCurrentState].GetCondition() == 1 )

  0000b	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  0000e	83 7c 87 18 01	 cmp	 DWORD PTR [edi+eax*4+24], 1
  00013	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00016	75 15		 jne	 SHORT $LN1@CheckState

; 442  : 		{
; 443  : 			if ( this->m_StateInfo[iCurrentState].IsTimeOut() == TRUE )

  00018	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  0001b	e8 00 00 00 00	 call	 ?IsTimeOut@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::IsTimeOut
  00020	83 f8 01	 cmp	 eax, 1
  00023	75 08		 jne	 SHORT $LN1@CheckState

; 444  : 			{
; 445  : 				this->SetNextState(iCurrentState);

  00025	56		 push	 esi
  00026	8b cf		 mov	 ecx, edi
  00028	e8 00 00 00 00	 call	 ?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetNextState
$LN1@CheckState:

; 446  : 			}
; 447  : 		}
; 448  : 	}
; 449  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	c3		 ret	 0
?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::CheckStateTime
_TEXT	ENDS
PUBLIC	??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckNightmareBattleUser
EXTRN	?IsEmpty@CKanturuBattleUserMng@@QAEHXZ:PROC	; CKanturuBattleUserMng::IsEmpty
;	COMDAT ??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.h
CONST	SEGMENT
??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] Fail!! All Battle User Die', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\kanturubattleofnightmare.cpp
CONST	ENDS
;	COMDAT ?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::CheckNightmareBattleUser, COMDAT
; _this$ = ecx

; 462  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 463  : 	if ( this->GetBattleOfNightmareState() == KANTURU_NIGHTMARE_NOTIFY ||
; 464  : 		 this->GetBattleOfNightmareState() == KANTURU_NIGHTMARE_START )

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	83 f8 02	 cmp	 eax, 2
  00009	74 05		 je	 SHORT $LN2@CheckNight
  0000b	83 f8 03	 cmp	 eax, 3
  0000e	75 37		 jne	 SHORT $LN1@CheckNight
$LN2@CheckNight:

; 465  : 	{
; 466  : 		if ( g_KanturuBattleUserMng.IsEmpty() == TRUE )

  00010	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00015	e8 00 00 00 00	 call	 ?IsEmpty@CKanturuBattleUserMng@@QAEHXZ ; CKanturuBattleUserMng::IsEmpty
  0001a	83 f8 01	 cmp	 eax, 1
  0001d	75 28		 jne	 SHORT $LN1@CheckNight

; 467  : 		{
; 468  : 			g_KanturuBattleUserMng.ResetAllData();

  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00024	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 469  : 			this->SetSuccessValue(FALSE);
; 470  : 
; 471  : 			LogAddTD("[ KANTURU ][ BattleOfNightmare ] Fail!! All Battle User Die");

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0002e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0003b	83 c4 04	 add	 esp, 4

; 472  : 
; 473  : 			this->SetState(KANTURU_NIGHTMARE_END);

  0003e	6a 04		 push	 4
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetState
$LN1@CheckNight:
  00047	5e		 pop	 esi

; 474  : 		}
; 475  : 	}
; 476  : }

  00048	c3		 ret	 0
?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::CheckNightmareBattleUser
_TEXT	ENDS
PUBLIC	??0CKanturuBattleOfNightmare@@QAE@XZ		; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0CKanturuStateInfo@@QAE@XZ:PROC		; CKanturuStateInfo::CKanturuStateInfo
; Function compile flags: /Ogtp
;	COMDAT ??0CKanturuBattleOfNightmare@@QAE@XZ
_TEXT	SEGMENT
??0CKanturuBattleOfNightmare@@QAE@XZ PROC		; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare, COMDAT
; _this$ = ecx

; 28   : {

  00000	56		 push	 esi
  00001	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00006	68 00 00 00 00	 push	 OFFSET ??0CKanturuStateInfo@@QAE@XZ ; CKanturuStateInfo::CKanturuStateInfo
  0000b	8b f1		 mov	 esi, ecx
  0000d	6a 06		 push	 6
  0000f	6a 14		 push	 20			; 00000014H
  00011	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00014	50		 push	 eax
  00015	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CKanturuBattleOfNightmare@@6B@
  0001b	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z

; 29   : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_NONE);

  00020	33 d2		 xor	 edx, edx

; 30   : 	this->ResetAllData();

  00022	8b ce		 mov	 ecx, esi
  00024	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00027	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ResetAllData

; 31   : 	this->m_iNightmareAIGroupNumber = 0;

  0002c	89 96 8c 00 00
	00		 mov	 DWORD PTR [esi+140], edx

; 32   : 	this->m_iNightmareObjIndex = -1;

  00032	c7 86 90 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+144], -1

; 33   : 	this->SetSuccessValue(FALSE);

  0003c	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 34   : }

  0003f	8b c6		 mov	 eax, esi
  00041	5e		 pop	 esi
  00042	c3		 ret	 0
??0CKanturuBattleOfNightmare@@QAE@XZ ENDP		; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
_TEXT	ENDS
PUBLIC	?Run@CKanturuBattleOfNightmare@@QAEXXZ		; CKanturuBattleOfNightmare::Run
EXTRN	?CheckUserState@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::CheckUserState
; Function compile flags: /Ogtp
;	COMDAT ?Run@CKanturuBattleOfNightmare@@QAEXXZ
_TEXT	SEGMENT
?Run@CKanturuBattleOfNightmare@@QAEXXZ PROC		; CKanturuBattleOfNightmare::Run, COMDAT
; _this$ = ecx

; 195  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 196  : 	this->CheckStateTime();

  00003	e8 00 00 00 00	 call	 ?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckStateTime

; 197  : 	this->CheckNightmareBattleUser();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckNightmareBattleUser

; 198  : 	g_KanturuBattleUserMng.CheckUserState();

  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00014	e8 00 00 00 00	 call	 ?CheckUserState@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::CheckUserState

; 199  : 
; 200  : 	switch ( this->m_iBattleOfNightmareState )

  00019	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001c	83 f8 05	 cmp	 eax, 5
  0001f	77 17		 ja	 SHORT $LN7@Run
  00021	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN13@Run[eax*4]
$LN3@Run:

; 201  : 	{
; 202  : 		case KANTURU_NIGHTMARE_NONE:
; 203  : 			this->ProcState_NONE();
; 204  : 			break;
; 205  : 		case KANTURU_NIGHTMARE_IDLE:
; 206  : 			this->ProcState_IDLE();
; 207  : 			break;
; 208  : 		case KANTURU_NIGHTMARE_NOTIFY:
; 209  : 			this->ProcState_NOTIFY();
; 210  : 			break;
; 211  : 		case KANTURU_NIGHTMARE_START:
; 212  : 			this->ProcState_START();

  00028	8b ce		 mov	 ecx, esi
  0002a	5e		 pop	 esi
  0002b	e9 00 00 00 00	 jmp	 ?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_START
$LN1@Run:

; 213  : 			break;
; 214  : 		case KANTURU_NIGHTMARE_END:
; 215  : 			this->ProcState_END();
; 216  : 			break;
; 217  : 		case KANTURU_NIGHTMARE_ENDCYCLE:
; 218  : 			this->ProcState_ENDCYCLE();

  00030	8b ce		 mov	 ecx, esi
  00032	5e		 pop	 esi
  00033	e9 00 00 00 00	 jmp	 ?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
$LN7@Run:
  00038	5e		 pop	 esi

; 219  : 			break;
; 220  : 	}
; 221  : }

  00039	c3		 ret	 0
  0003a	8b ff		 npad	 2
$LN13@Run:
  0003c	00 00 00 00	 DD	 $LN7@Run
  00040	00 00 00 00	 DD	 $LN7@Run
  00044	00 00 00 00	 DD	 $LN7@Run
  00048	00 00 00 00	 DD	 $LN3@Run
  0004c	00 00 00 00	 DD	 $LN7@Run
  00050	00 00 00 00	 DD	 $LN1@Run
?Run@CKanturuBattleOfNightmare@@QAEXXZ ENDP		; CKanturuBattleOfNightmare::Run
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
; Function compile flags: /Ogtp
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 21   : static CKanturuUtil KANTURU_UTIL;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00005	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  0000a	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
text$yc	ENDS
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
; Function compile flags: /Ogtp
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00005	e9 00 00 00 00	 jmp	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
text$yd	ENDS
_BSS	SEGMENT
_KANTURU_UTIL DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_KANTURU_UTIL$initializer$ DD FLAT:??__EKANTURU_UTIL@@YAXXZ
CRT$XCU	ENDS
END
