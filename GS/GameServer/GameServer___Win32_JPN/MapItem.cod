; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\MapItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CMapItem@@6B@				; CMapItem::`vftable'
PUBLIC	??1CMapItem@@UAE@XZ				; CMapItem::~CMapItem
PUBLIC	??_R4CMapItem@@6B@				; CMapItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMapItem@@@8				; CMapItem `RTTI Type Descriptor'
PUBLIC	??_R3CMapItem@@8				; CMapItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapItem@@8				; CMapItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMapItem@@8			; CMapItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@CItem@@8				; CItem::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCItem@@@8				; CItem `RTTI Type Descriptor'
PUBLIC	??_R3CItem@@8					; CItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItem@@8					; CItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItem@@8				; CItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECMapItem@@UAEPAXI@Z:PROC			; CMapItem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CItem@@8
; File e:\work\tranet_version\gs\gameserver\mapitem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CItem@@8 DD FLAT:??_R0?AVCItem@@@8	; CItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CItem@@8
rdata$r	SEGMENT
??_R2CItem@@8 DD FLAT:??_R1A@?0A@EA@CItem@@8		; CItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CItem@@8
rdata$r	SEGMENT
??_R3CItem@@8 DD 00H					; CItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItem@@@8
_DATA	SEGMENT
??_R0?AVCItem@@@8 DD FLAT:??_7type_info@@6B@		; CItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CItem@@8
rdata$r	SEGMENT
??_R13?0A@EA@CItem@@8 DD FLAT:??_R0?AVCItem@@@8		; CItem::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMapItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapItem@@8 DD FLAT:??_R0?AVCMapItem@@@8	; CMapItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapItem@@8
rdata$r	SEGMENT
??_R2CMapItem@@8 DD FLAT:??_R1A@?0A@EA@CMapItem@@8	; CMapItem::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@CItem@@8
rdata$r	ENDS
;	COMDAT ??_R3CMapItem@@8
rdata$r	SEGMENT
??_R3CMapItem@@8 DD 00H					; CMapItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapItem@@@8
_DATA	SEGMENT
??_R0?AVCMapItem@@@8 DD FLAT:??_7type_info@@6B@		; CMapItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMapItem@@6B@
rdata$r	SEGMENT
??_R4CMapItem@@6B@ DD 00H				; CMapItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMapItem@@@8
	DD	FLAT:??_R3CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_7CMapItem@@6B@
CONST	SEGMENT
??_7CMapItem@@6B@ DD FLAT:??_R4CMapItem@@6B@		; CMapItem::`vftable'
	DD	FLAT:??_ECMapItem@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CMapItem@@UAE@XZ
_TEXT	SEGMENT
??1CMapItem@@UAE@XZ PROC				; CMapItem::~CMapItem, COMDAT
; _this$ = ecx

; 14   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CMapItem@@6B@

; 15   : 	return;
; 16   : 
; 17   : }

  00006	c3		 ret	 0
??1CMapItem@@UAE@XZ ENDP				; CMapItem::~CMapItem
_TEXT	ENDS
PUBLIC	?Init@CMapItem@@QAEXXZ				; CMapItem::Init
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Init@CMapItem@@QAEXXZ
_TEXT	SEGMENT
?Init@CMapItem@@QAEXXZ PROC				; CMapItem::Init, COMDAT
; _this$ = ecx

; 21   : 	this->VPCount = 0;

  00000	33 d2		 xor	 edx, edx

; 22   : 	this->m_State = 0;
; 23   : 
; 24   : 	for ( int n=0;n<MAX_VIEWPORT;n++ )
; 25   : 	{
; 26   : 		memset(&this->VpPlayer[n], 0, sizeof(VIEWPORT_PLAYER_STRUCT));

  00002	68 84 03 00 00	 push	 900			; 00000384H
  00007	8d 81 ec 00 00
	00		 lea	 eax, DWORD PTR [ecx+236]
  0000d	52		 push	 edx
  0000e	50		 push	 eax
  0000f	89 91 70 04 00
	00		 mov	 DWORD PTR [ecx+1136], edx
  00015	89 91 dc 00 00
	00		 mov	 DWORD PTR [ecx+220], edx
  0001b	e8 00 00 00 00	 call	 _memset
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 27   : 	}
; 28   : }

  00023	c3		 ret	 0
?Init@CMapItem@@QAEXXZ ENDP				; CMapItem::Init
_TEXT	ENDS
PUBLIC	?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z	; CMapItem::CreateItem
EXTRN	?gLootingTime@@3HA:DWORD			; gLootingTime
EXTRN	?Zt_ItemsDurationTime@@3HA:DWORD		; Zt_ItemsDurationTime
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z:PROC	; CItem::Convert
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
_level$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_dur$ = 24						; size = 4
_Option1$ = 28						; size = 1
_Option2$ = 32						; size = 1
_Option3$ = 36						; size = 1
_NOption$ = 40						; size = 1
_SOption$ = 44						; size = 1
_number$ = 48						; size = 4
_ItemEffectEx$ = 52					; size = 1
_SocketOption$ = 56					; size = 4
_SocketIndex$ = 60					; size = 1
?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z PROC	; CMapItem::CreateItem, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 32   : 	this->Init();

  00008	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 33   : 
; 34   : 	this->m_Level = level;
; 35   : 	this->m_Durability = dur;

  0000d	d9 45 18	 fld	 DWORD PTR _dur$[ebp]

; 36   : 	this->Convert(type, Option1, Option2, Option3, NOption, SOption, ItemEffectEx, SocketOption, SocketIndex, 0, CURRENT_DB_VERSION);

  00010	8b 4d 3c	 mov	 ecx, DWORD PTR _SocketIndex$[ebp]
  00013	d9 5e 28	 fstp	 DWORD PTR [esi+40]
  00016	66 8b 45 0c	 mov	 ax, WORD PTR _level$[ebp]
  0001a	8b 55 38	 mov	 edx, DWORD PTR _SocketOption$[ebp]
  0001d	6a 03		 push	 3
  0001f	6a 00		 push	 0
  00021	51		 push	 ecx
  00022	8b 4d 2c	 mov	 ecx, DWORD PTR _SOption$[ebp]
  00025	52		 push	 edx
  00026	8b 55 28	 mov	 edx, DWORD PTR _NOption$[ebp]
  00029	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
  0002d	8b 45 34	 mov	 eax, DWORD PTR _ItemEffectEx$[ebp]
  00030	50		 push	 eax
  00031	8b 45 24	 mov	 eax, DWORD PTR _Option3$[ebp]
  00034	51		 push	 ecx
  00035	8b 4d 20	 mov	 ecx, DWORD PTR _Option2$[ebp]
  00038	52		 push	 edx
  00039	8b 55 1c	 mov	 edx, DWORD PTR _Option1$[ebp]
  0003c	50		 push	 eax
  0003d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00040	51		 push	 ecx
  00041	52		 push	 edx
  00042	50		 push	 eax
  00043	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00046	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 37   : 	this->px = x;
; 38   : 	this->py= y;
; 39   : 	this->live = true;
; 40   : 	this->Give = false;
; 41   : 	this->m_State = 1;
; 42   : 
; 43   : 	if ( this->m_QuestItem != false )

  0004b	80 be b1 00 00
	00 00		 cmp	 BYTE PTR [esi+177], 0
  00052	8a 4d 10	 mov	 cl, BYTE PTR _x$[ebp]
  00055	8a 55 14	 mov	 dl, BYTE PTR _y$[ebp]
  00058	b8 01 00 00 00	 mov	 eax, 1
  0005d	88 8e d8 00 00
	00		 mov	 BYTE PTR [esi+216], cl
  00063	88 96 d9 00 00
	00		 mov	 BYTE PTR [esi+217], dl
  00069	66 89 86 da 00
	00 00		 mov	 WORD PTR [esi+218], ax
  00070	89 86 dc 00 00
	00		 mov	 DWORD PTR [esi+220], eax
  00076	74 2d		 je	 SHORT $LN2@CreateItem

; 44   : 	{
; 45   : 		this->m_Time = GetTickCount() + 60000;

  00078	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  0007e	ff d7		 call	 edi
  00080	05 60 ea 00 00	 add	 eax, 60000		; 0000ea60H
  00085	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax

; 46   : 		this->m_LootTime = GetTickCount() + 600000;

  0008b	ff d7		 call	 edi
  0008d	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H
  00092	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax

; 47   : 		this->m_Number = number;

  00098	8b 45 30	 mov	 eax, DWORD PTR _number$[ebp]
  0009b	5f		 pop	 edi
  0009c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx

; 56   : 	}
; 57   : 
; 58   : }

  000a1	5d		 pop	 ebp
  000a2	c2 38 00	 ret	 56			; 00000038H
$LN2@CreateItem:

; 48   : 	}
; 49   : 	else
; 50   : 	{
; 51   : 		//int Zt_ItemsDurationTime = GetPrivateProfileInt("Items","ItemsDurationTime",120,"..\\Data\\ZtData\\CommonServer.ini");
; 52   : 		int Zt_Duration	= Zt_ItemsDurationTime * 1000;

  000a5	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?Zt_ItemsDurationTime@@3HA ; Zt_ItemsDurationTime
  000ab	69 ff e8 03 00
	00		 imul	 edi, 1000		; 000003e8H

; 53   : 		this->m_Time = GetTickCount() + Zt_Duration;

  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000b7	03 c7		 add	 eax, edi
  000b9	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax

; 54   : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gLootingTime@@3HA ; gLootingTime

; 55   : 		this->m_Number = number;

  000cb	8b 55 30	 mov	 edx, DWORD PTR _number$[ebp]
  000ce	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  000d4	03 c1		 add	 eax, ecx
  000d6	5f		 pop	 edi
  000d7	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  000dd	89 56 04	 mov	 DWORD PTR [esi+4], edx
  000e0	5e		 pop	 esi
  000e1	5b		 pop	 ebx

; 56   : 	}
; 57   : 
; 58   : }

  000e2	5d		 pop	 ebp
  000e3	c2 38 00	 ret	 56			; 00000038H
?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z ENDP	; CMapItem::CreateItem
_TEXT	ENDS
PUBLIC	?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z ; CMapItem::DropCreateItem
EXTRN	?SetPetItemInfo@CItem@@QAEXHH@Z:PROC		; CItem::SetPetItemInfo
; Function compile flags: /Ogtp
;	COMDAT ?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
_level$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_Zt_Duration$209603 = 24				; size = 4
_dur$ = 24						; size = 4
_Option1$ = 28						; size = 1
_Option2$ = 32						; size = 1
_Option3$ = 36						; size = 1
_NOption$ = 40						; size = 1
_SOption$ = 44						; size = 1
_number$ = 48						; size = 4
_PetLevel$ = 52						; size = 4
_PetExp$ = 56						; size = 4
_ItemEffectEx$ = 60					; size = 1
_SocketOption$ = 64					; size = 4
_SocketIndex$ = 68					; size = 1
?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z PROC	; CMapItem::DropCreateItem, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 62   : 	this->Init();

  00008	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 63   : 
; 64   : 	this->m_Level = level;
; 65   : 	this->m_Durability = dur;

  0000d	d9 45 18	 fld	 DWORD PTR _dur$[ebp]

; 66   : 	this->Convert(type, Option1, Option2, Option3, NOption, SOption, ItemEffectEx, SocketOption, SocketIndex, 0, CURRENT_DB_VERSION);

  00010	8b 4d 44	 mov	 ecx, DWORD PTR _SocketIndex$[ebp]
  00013	d9 5e 28	 fstp	 DWORD PTR [esi+40]
  00016	66 8b 45 0c	 mov	 ax, WORD PTR _level$[ebp]
  0001a	8b 55 40	 mov	 edx, DWORD PTR _SocketOption$[ebp]
  0001d	8b 5d 08	 mov	 ebx, DWORD PTR _type$[ebp]
  00020	6a 03		 push	 3
  00022	6a 00		 push	 0
  00024	51		 push	 ecx
  00025	8b 4d 2c	 mov	 ecx, DWORD PTR _SOption$[ebp]
  00028	52		 push	 edx
  00029	8b 55 28	 mov	 edx, DWORD PTR _NOption$[ebp]
  0002c	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
  00030	8b 45 3c	 mov	 eax, DWORD PTR _ItemEffectEx$[ebp]
  00033	50		 push	 eax
  00034	8b 45 24	 mov	 eax, DWORD PTR _Option3$[ebp]
  00037	51		 push	 ecx
  00038	8b 4d 20	 mov	 ecx, DWORD PTR _Option2$[ebp]
  0003b	52		 push	 edx
  0003c	8b 55 1c	 mov	 edx, DWORD PTR _Option1$[ebp]
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	52		 push	 edx
  00042	53		 push	 ebx
  00043	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00046	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 67   : 	this->SetPetItemInfo(PetLevel, PetExp);

  0004b	8b 45 38	 mov	 eax, DWORD PTR _PetExp$[ebp]
  0004e	8b 4d 34	 mov	 ecx, DWORD PTR _PetLevel$[ebp]
  00051	50		 push	 eax
  00052	51		 push	 ecx
  00053	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00056	e8 00 00 00 00	 call	 ?SetPetItemInfo@CItem@@QAEXHH@Z ; CItem::SetPetItemInfo

; 68   : 	this->px = x;
; 69   : 	this->py= y;
; 70   : 	this->live = true;
; 71   : 	this->Give = false;
; 72   : 	this->m_State = 1;
; 73   : 
; 74   : 	if ( this->m_QuestItem != false )

  0005b	80 be b1 00 00
	00 00		 cmp	 BYTE PTR [esi+177], 0
  00062	8a 45 14	 mov	 al, BYTE PTR _y$[ebp]
  00065	8a 55 10	 mov	 dl, BYTE PTR _x$[ebp]
  00068	88 86 d9 00 00
	00		 mov	 BYTE PTR [esi+217], al
  0006e	b8 01 00 00 00	 mov	 eax, 1
  00073	88 96 d8 00 00
	00		 mov	 BYTE PTR [esi+216], dl
  00079	66 89 86 da 00
	00 00		 mov	 WORD PTR [esi+218], ax
  00080	89 86 dc 00 00
	00		 mov	 DWORD PTR [esi+220], eax
  00086	74 39		 je	 SHORT $LN9@DropCreate

; 75   : 	{
; 76   : 		if ( type == ITEMGET(14,11) )

  00088	81 fb 0b 1c 00
	00		 cmp	 ebx, 7179		; 00001c0bH

; 77   : 		{
; 78   : 			this->m_Time = GetTickCount() + 1000;

  0008e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetTickCount@0
  00094	75 09		 jne	 SHORT $LN8@DropCreate
  00096	ff d3		 call	 ebx
  00098	05 e8 03 00 00	 add	 eax, 1000		; 000003e8H

; 79   : 		}
; 80   : 		else

  0009d	eb 07		 jmp	 SHORT $LN14@DropCreate
$LN8@DropCreate:

; 81   : 		{
; 82   : 			this->m_Time = GetTickCount() + 60000;

  0009f	ff d3		 call	 ebx
  000a1	05 60 ea 00 00	 add	 eax, 60000		; 0000ea60H
$LN14@DropCreate:
  000a6	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax

; 83   : 		}
; 84   : 
; 85   : 		this->m_LootTime = GetTickCount() + 600000;

  000ac	ff d3		 call	 ebx

; 86   : 		this->m_Number = number;

  000ae	8b 4d 30	 mov	 ecx, DWORD PTR _number$[ebp]
  000b1	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H
  000b6	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  000bc	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 87   : 	}
; 88   : 	else 

  000bf	eb 4c		 jmp	 SHORT $LN6@DropCreate
$LN9@DropCreate:

; 89   : 	{
; 90   : 		if ( type == ITEMGET(14,11) )

  000c1	81 fb 0b 1c 00
	00		 cmp	 ebx, 7179		; 00001c0bH

; 91   : 		{
; 92   : 			this->m_Time = GetTickCount() + 1000;

  000c7	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetTickCount@0
  000cd	75 09		 jne	 SHORT $LN5@DropCreate
  000cf	ff d3		 call	 ebx
  000d1	05 e8 03 00 00	 add	 eax, 1000		; 000003e8H

; 93   : 		}
; 94   : 		else

  000d6	eb 13		 jmp	 SHORT $LN15@DropCreate
$LN5@DropCreate:

; 95   : 		{
; 96   : 			int Zt_Duration	= Zt_ItemsDurationTime * 1000;

  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Zt_ItemsDurationTime@@3HA ; Zt_ItemsDurationTime
  000dd	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  000e3	89 45 18	 mov	 DWORD PTR _Zt_Duration$209603[ebp], eax

; 97   : 			this->m_Time = GetTickCount() + Zt_Duration;

  000e6	ff d3		 call	 ebx
  000e8	03 45 18	 add	 eax, DWORD PTR _Zt_Duration$209603[ebp]
$LN15@DropCreate:
  000eb	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax

; 98   : 		}
; 99   : 
; 100  : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  000f1	ff d3		 call	 ebx
  000f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gLootingTime@@3HA ; gLootingTime
  000f9	69 d2 e8 03 00
	00		 imul	 edx, 1000		; 000003e8H
  000ff	03 c2		 add	 eax, edx
  00101	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax

; 101  : 		this->m_Number = number;

  00107	8b 45 30	 mov	 eax, DWORD PTR _number$[ebp]
  0010a	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN6@DropCreate:

; 102  : 	}
; 103  : 
; 104  : 	if ( type == ITEMGET(13,19) )

  0010d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00110	3d 13 1a 00 00	 cmp	 eax, 6675		; 00001a13H
  00115	75 31		 jne	 SHORT $LN2@DropCreate

; 105  : 	{
; 106  : 		if ( ( level  < 0)?FALSE:(level>2)?FALSE:TRUE)

  00117	8b 45 0c	 mov	 eax, DWORD PTR _level$[ebp]
  0011a	85 c0		 test	 eax, eax
  0011c	78 3e		 js	 SHORT $LN1@DropCreate
  0011e	33 c9		 xor	 ecx, ecx
  00120	83 f8 02	 cmp	 eax, 2
  00123	0f 9e c1	 setle	 cl
  00126	8b c1		 mov	 eax, ecx
  00128	85 c0		 test	 eax, eax
  0012a	74 30		 je	 SHORT $LN1@DropCreate

; 107  : 		{
; 108  : 			this->m_Time = GetTickCount() + 900000;

  0012c	ff d3		 call	 ebx
  0012e	05 a0 bb 0d 00	 add	 eax, 900000		; 000dbba0H
  00133	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax

; 109  : 			this->m_LootTime = GetTickCount();

  00139	ff d3		 call	 ebx
  0013b	5f		 pop	 edi
  0013c	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  00142	5e		 pop	 esi
  00143	5b		 pop	 ebx

; 116  : 	}
; 117  : }

  00144	5d		 pop	 ebp
  00145	c2 40 00	 ret	 64			; 00000040H
$LN2@DropCreate:

; 110  : 		}
; 111  : 	}
; 112  : 
; 113  : 	if ( type == ITEMGET(14,64) )

  00148	3d 40 1c 00 00	 cmp	 eax, 7232		; 00001c40H
  0014d	75 0d		 jne	 SHORT $LN1@DropCreate

; 114  : 	{
; 115  : 		this->m_Time = GetTickCount() + 20000;

  0014f	ff d3		 call	 ebx
  00151	05 20 4e 00 00	 add	 eax, 20000		; 00004e20H
  00156	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax
$LN1@DropCreate:
  0015c	5f		 pop	 edi
  0015d	5e		 pop	 esi
  0015e	5b		 pop	 ebx

; 116  : 	}
; 117  : }

  0015f	5d		 pop	 ebp
  00160	c2 40 00	 ret	 64			; 00000040H
?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z ENDP	; CMapItem::DropCreateItem
_TEXT	ENDS
PUBLIC	??0CMapItem@@QAE@XZ				; CMapItem::CMapItem
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
; Function compile flags: /Ogtp
;	COMDAT ??0CMapItem@@QAE@XZ
_TEXT	SEGMENT
??0CMapItem@@QAE@XZ PROC				; CMapItem::CMapItem, COMDAT
; _this$ = ecx

; 9    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem

; 10   : 	this->Init();

  0000b	8b ce		 mov	 ecx, esi
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMapItem@@6B@
  00013	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 11   : }

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??0CMapItem@@QAE@XZ ENDP				; CMapItem::CMapItem
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCMapItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMapItem@@UAEPAXI@Z PROC				; CMapItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMapItem@@UAE@XZ	; CMapItem::~CMapItem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCMapItem@@UAEPAXI@Z ENDP				; CMapItem::`scalar deleting destructor'
_TEXT	ENDS
END
