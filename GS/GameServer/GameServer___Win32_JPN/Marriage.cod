; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\Marriage.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??1CMarriage@@QAE@XZ				; CMarriage::~CMarriage
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\marriage.cpp
;	COMDAT ??1CMarriage@@QAE@XZ
_TEXT	SEGMENT
??1CMarriage@@QAE@XZ PROC				; CMarriage::~CMarriage, COMDAT
; _this$ = ecx

; 24   : }

  00000	c3		 ret	 0
??1CMarriage@@QAE@XZ ENDP				; CMarriage::~CMarriage
_TEXT	ENDS
PUBLIC	?Init@CMarriage@@QAEXXZ				; CMarriage::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CMarriage@@QAEXXZ
_TEXT	SEGMENT
?Init@CMarriage@@QAEXXZ PROC				; CMarriage::Init, COMDAT
; _this$ = ecx

; 28   : 	this->Enable = false;

  00000	33 c0		 xor	 eax, eax

; 29   : 	this->iNpcClass = 0;
; 30   : 	this->iNpcMap = 0;
; 31   : 	this->iNpcX = 0;
; 32   : 	this->iNpcY = 0;
; 33   : 	this->iNeedHeart1 = 0;
; 34   : 	this->iNeedHeart2 = 0;
; 35   : 	this->iRewardItemType = 0;
; 36   : 	this->iRewardItemIndex = 0;
; 37   : 	this->iRewardItemLevel = 0;
; 38   : 	this->iRewardItemOpt = 0;
; 39   : 	this->iRewardItemExel = 0;
; 40   : 	this->iRewardDoubleDamage = 0;
; 41   : 	this->iRewardIgnoreDefence = 0;
; 42   : 	this->iKickPriceWcoin = 0;
; 43   : 	this->iClassIndex1 = -1;

  00002	83 ca ff	 or	 edx, -1
  00005	88 01		 mov	 BYTE PTR [ecx], al
  00007	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000a	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0000d	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00010	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00013	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00016	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00019	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  0001c	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  0001f	89 41 24	 mov	 DWORD PTR [ecx+36], eax
  00022	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  00025	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  00028	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  0002b	89 41 34	 mov	 DWORD PTR [ecx+52], eax
  0002e	89 41 38	 mov	 DWORD PTR [ecx+56], eax
  00031	89 51 3c	 mov	 DWORD PTR [ecx+60], edx

; 44   : 	this->iClassIndex2 = -1;

  00034	89 51 40	 mov	 DWORD PTR [ecx+64], edx

; 45   : 	this->bClickOK1 = false;

  00037	66 89 41 44	 mov	 WORD PTR [ecx+68], ax

; 46   : 	this->bClickOK2 = false;
; 47   : }

  0003b	c3		 ret	 0
?Init@CMarriage@@QAEXXZ ENDP				; CMarriage::Init
_TEXT	ENDS
PUBLIC	??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@		; `string'
PUBLIC	??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@	; `string'
PUBLIC	??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@	; `string'
PUBLIC	??_C@_0P@ICHMHKKG@RewardItemExel?$AA@		; `string'
PUBLIC	??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@		; `string'
PUBLIC	??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@		; `string'
PUBLIC	??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@		; `string'
PUBLIC	??_C@_0P@KMGPHJCD@RewardItemType?$AA@		; `string'
PUBLIC	??_C@_0L@JBOMNOIE@NeedHeart2?$AA@		; `string'
PUBLIC	??_C@_0L@LKMBINEH@NeedHeart1?$AA@		; `string'
PUBLIC	??_C@_04JEMJNNDC@NpcY?$AA@			; `string'
PUBLIC	??_C@_04INNCOMHD@NpcX?$AA@			; `string'
PUBLIC	??_C@_06KMEDHGPI@NpcMap?$AA@			; `string'
PUBLIC	??_C@_08BNJJHKPI@NpcClass?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	?Read@CMarriage@@QAEXPAD@Z			; CMarriage::Read
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@
CONST	SEGMENT
??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@ DB 'KickPriceWcoin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@
CONST	SEGMENT
??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@ DB 'RewardIgnoreDefence', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@
CONST	SEGMENT
??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@ DB 'RewardDoubleDamage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ICHMHKKG@RewardItemExel?$AA@
CONST	SEGMENT
??_C@_0P@ICHMHKKG@RewardItemExel?$AA@ DB 'RewardItemExel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@
CONST	SEGMENT
??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@ DB 'RewardItemOpt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
CONST	SEGMENT
??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@ DB 'RewardItemLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
CONST	SEGMENT
??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@ DB 'RewardItemIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
CONST	SEGMENT
??_C@_0P@KMGPHJCD@RewardItemType?$AA@ DB 'RewardItemType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JBOMNOIE@NeedHeart2?$AA@
CONST	SEGMENT
??_C@_0L@JBOMNOIE@NeedHeart2?$AA@ DB 'NeedHeart2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LKMBINEH@NeedHeart1?$AA@
CONST	SEGMENT
??_C@_0L@LKMBINEH@NeedHeart1?$AA@ DB 'NeedHeart1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JEMJNNDC@NpcY?$AA@
CONST	SEGMENT
??_C@_04JEMJNNDC@NpcY?$AA@ DB 'NpcY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04INNCOMHD@NpcX?$AA@
CONST	SEGMENT
??_C@_04INNCOMHD@NpcX?$AA@ DB 'NpcX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KMEDHGPI@NpcMap?$AA@
CONST	SEGMENT
??_C@_06KMEDHGPI@NpcMap?$AA@ DB 'NpcMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNJJHKPI@NpcClass?$AA@
CONST	SEGMENT
??_C@_08BNJJHKPI@NpcClass?$AA@ DB 'NpcClass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Read@CMarriage@@QAEXPAD@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
?Read@CMarriage@@QAEXPAD@Z PROC				; CMarriage::Read, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 63   : 	this->Enable = GetPrivateProfileInt("Common", "Enable", 0, filename);

  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetPrivateProfileIntA@16
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _filename$[ebp]
  0000f	57		 push	 edi
  00010	6a 00		 push	 0
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0001c	8b f1		 mov	 esi, ecx
  0001e	ff d3		 call	 ebx

; 64   : 	this->iNpcClass = GetPrivateProfileInt("Common", "NpcClass", 0, filename);

  00020	57		 push	 edi
  00021	6a 00		 push	 0
  00023	85 c0		 test	 eax, eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_08BNJJHKPI@NpcClass?$AA@
  0002a	0f 95 c0	 setne	 al
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00032	88 06		 mov	 BYTE PTR [esi], al
  00034	ff d3		 call	 ebx

; 65   : 	this->iNpcMap = GetPrivateProfileInt("Common", "NpcMap", 0, filename);

  00036	57		 push	 edi
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_06KMEDHGPI@NpcMap?$AA@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00046	ff d3		 call	 ebx

; 66   : 	this->iNpcX = GetPrivateProfileInt("Common", "NpcX", 0, filename);

  00048	57		 push	 edi
  00049	6a 00		 push	 0
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_04INNCOMHD@NpcX?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00055	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00058	ff d3		 call	 ebx

; 67   : 	this->iNpcY = GetPrivateProfileInt("Common", "NpcY", 0, filename);

  0005a	57		 push	 edi
  0005b	6a 00		 push	 0
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_04JEMJNNDC@NpcY?$AA@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00067	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0006a	ff d3		 call	 ebx

; 68   : 	this->iNeedHeart1 = GetPrivateProfileInt("Common", "NeedHeart1", 0, filename);

  0006c	57		 push	 edi
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LKMBINEH@NeedHeart1?$AA@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00079	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0007c	ff d3		 call	 ebx

; 69   : 	this->iNeedHeart2 = GetPrivateProfileInt("Common", "NeedHeart2", 0, filename);

  0007e	57		 push	 edi
  0007f	6a 00		 push	 0
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JBOMNOIE@NeedHeart2?$AA@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0008b	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0008e	ff d3		 call	 ebx

; 70   : 	this->iRewardItemType = GetPrivateProfileInt("Common", "RewardItemType", 0, filename);

  00090	57		 push	 edi
  00091	6a 00		 push	 0
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0009d	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000a0	ff d3		 call	 ebx

; 71   : 	this->iRewardItemIndex = GetPrivateProfileInt("Common", "RewardItemIndex", 0, filename);

  000a2	57		 push	 edi
  000a3	6a 00		 push	 0
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000af	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000b2	ff d3		 call	 ebx

; 72   : 	this->iRewardItemLevel = GetPrivateProfileInt("Common", "RewardItemLevel", 0, filename);

  000b4	57		 push	 edi
  000b5	6a 00		 push	 0
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000c1	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000c4	ff d3		 call	 ebx

; 73   : 	this->iRewardItemOpt = GetPrivateProfileInt("Common", "RewardItemOpt", 0, filename);

  000c6	57		 push	 edi
  000c7	6a 00		 push	 0
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000d3	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000d6	ff d3		 call	 ebx

; 74   : 	this->iRewardItemExel = GetPrivateProfileInt("Common", "RewardItemExel", 0, filename);

  000d8	57		 push	 edi
  000d9	6a 00		 push	 0
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ICHMHKKG@RewardItemExel?$AA@
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000e5	89 46 28	 mov	 DWORD PTR [esi+40], eax
  000e8	ff d3		 call	 ebx
  000ea	89 46 2c	 mov	 DWORD PTR [esi+44], eax

; 75   : 	this->iRewardDoubleDamage = GetPrivateProfileInt("Common", "RewardDoubleDamage", 0, filename);

  000ed	57		 push	 edi
  000ee	6a 00		 push	 0
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000fa	ff d3		 call	 ebx

; 76   : 	this->iRewardIgnoreDefence = GetPrivateProfileInt("Common", "RewardIgnoreDefence", 0, filename);

  000fc	57		 push	 edi
  000fd	6a 00		 push	 0
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00109	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0010c	ff d3		 call	 ebx

; 77   : 	this->iKickPriceWcoin = GetPrivateProfileInt("Common", "KickPriceWcoin", 0, filename);

  0010e	57		 push	 edi
  0010f	6a 00		 push	 0
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0011b	89 46 34	 mov	 DWORD PTR [esi+52], eax
  0011e	ff d3		 call	 ebx
  00120	5f		 pop	 edi
  00121	89 46 38	 mov	 DWORD PTR [esi+56], eax
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 78   : }

  00126	5d		 pop	 ebp
  00127	c2 04 00	 ret	 4
?Read@CMarriage@@QAEXPAD@Z ENDP				; CMarriage::Read
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCInfoNames@CMarriage@@QAEXXZ			; CMarriage::GCInfoNames
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObjGetItemCountInInventory@@YAHHHH@Z:PROC	; gObjGetItemCountInInventory
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GCInfoNames@CMarriage@@QAEXXZ
_TEXT	SEGMENT
_pMsg$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
?GCInfoNames@CMarriage@@QAEXXZ PROC			; CMarriage::GCInfoNames, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b f1		 mov	 esi, ecx

; 131  : 	if(!this->Enable)

  00014	33 db		 xor	 ebx, ebx
  00016	38 1e		 cmp	 BYTE PTR [esi], bl
  00018	0f 84 24 01 00
	00		 je	 $LN1@GCInfoName

; 132  : 	{
; 133  : 		return;
; 134  : 	}
; 135  : 
; 136  : 	PMSG_GC_MARRIAGE_NAMES pMsg;
; 137  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x31, sizeof(pMsg));
; 138  : 
; 139  : 	pMsg.bResult = true;
; 140  : 	pMsg.bUser1 = false;
; 141  : 	pMsg.bUser2 = false;
; 142  : 
; 143  : 	memset(pMsg.szName1, 0, sizeof(pMsg.szName1));
; 144  : 	memset(pMsg.szName2, 0, sizeof(pMsg.szName2));
; 145  : 
; 146  : 	pMsg.iCountHeart1 = 0;
; 147  : 	pMsg.iCountHeart2 = 0;
; 148  : 
; 149  : 	pMsg.iNeedHeart1 = this->iNeedHeart1;
; 150  : 	pMsg.iNeedHeart2 = this->iNeedHeart2;

  0001e	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00021	33 c0		 xor	 eax, eax
  00023	89 45 d3	 mov	 DWORD PTR _pMsg$[ebp+7], eax
  00026	89 45 d7	 mov	 DWORD PTR _pMsg$[ebp+11], eax
  00029	66 89 45 db	 mov	 WORD PTR _pMsg$[ebp+15], ax
  0002d	88 45 dd	 mov	 BYTE PTR _pMsg$[ebp+17], al
  00030	89 45 de	 mov	 DWORD PTR _pMsg$[ebp+18], eax
  00033	89 45 e2	 mov	 DWORD PTR _pMsg$[ebp+22], eax
  00036	66 89 45 e6	 mov	 WORD PTR _pMsg$[ebp+26], ax
  0003a	88 45 e8	 mov	 BYTE PTR _pMsg$[ebp+28], al
  0003d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00040	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+40], eax

; 151  : 
; 152  : 	if(OBJMAX_RANGE(this->iClassIndex1))

  00043	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00046	c7 45 cc c1 30
	fb 31		 mov	 DWORD PTR _pMsg$[ebp], 838545601 ; 31fb30c1H
  0004d	66 c7 45 d0 01
	00		 mov	 WORD PTR _pMsg$[ebp+4], 1
  00053	88 5d d2	 mov	 BYTE PTR _pMsg$[ebp+6], bl
  00056	89 5d ec	 mov	 DWORD PTR _pMsg$[ebp+32], ebx
  00059	89 5d f0	 mov	 DWORD PTR _pMsg$[ebp+36], ebx
  0005c	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+44], ecx
  0005f	3b c3		 cmp	 eax, ebx
  00061	7c 52		 jl	 SHORT $LN8@GCInfoName
  00063	33 c9		 xor	 ecx, ecx
  00065	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0006a	0f 9e c1	 setle	 cl
  0006d	3b cb		 cmp	 ecx, ebx
  0006f	74 44		 je	 SHORT $LN8@GCInfoName

; 153  : 	{
; 154  : 		pMsg.bUser1 = true;
; 155  : 		pMsg.szName1[10] = 0;
; 156  : 		memcpy(pMsg.szName1, gObj[this->iClassIndex1].Name, sizeof(pMsg.szName1)-1);

  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00077	8b d0		 mov	 edx, eax
  00079	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0007f	8d 4c 0a 77	 lea	 ecx, DWORD PTR [edx+ecx+119]
  00083	c6 45 d1 01	 mov	 BYTE PTR _pMsg$[ebp+5], 1
  00087	88 5d dd	 mov	 BYTE PTR _pMsg$[ebp+17], bl
  0008a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008c	89 55 d3	 mov	 DWORD PTR _pMsg$[ebp+7], edx
  0008f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 157  : 
; 158  : 		pMsg.iCountHeart1 = gObjGetItemCountInInventory(this->iClassIndex1, ITEMGET(14,12), 1);

  00092	6a 01		 push	 1
  00094	89 55 d7	 mov	 DWORD PTR _pMsg$[ebp+11], edx
  00097	66 8b 49 08	 mov	 cx, WORD PTR [ecx+8]
  0009b	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  000a0	50		 push	 eax
  000a1	66 89 4d db	 mov	 WORD PTR _pMsg$[ebp+15], cx
  000a5	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ad	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+32], eax

; 159  : 
; 160  : 		if(pMsg.iNeedHeart1 > pMsg.iCountHeart1)

  000b0	39 45 f4	 cmp	 DWORD PTR _pMsg$[ebp+40], eax
  000b3	7e 03		 jle	 SHORT $LN6@GCInfoName
$LN8@GCInfoName:

; 161  : 		{
; 162  : 			pMsg.bResult = false;
; 163  : 		}
; 164  : 	}
; 165  : 	else
; 166  : 	{
; 167  : 		pMsg.bResult = false;

  000b5	88 5d d0	 mov	 BYTE PTR _pMsg$[ebp+4], bl
$LN6@GCInfoName:

; 168  : 	}
; 169  : 
; 170  : 	if(OBJMAX_RANGE(this->iClassIndex2))

  000b8	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  000bb	3b cb		 cmp	 ecx, ebx
  000bd	7c 52		 jl	 SHORT $LN5@GCInfoName
  000bf	33 c0		 xor	 eax, eax
  000c1	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  000c7	0f 9e c0	 setle	 al
  000ca	3b c3		 cmp	 eax, ebx
  000cc	74 43		 je	 SHORT $LN5@GCInfoName

; 171  : 	{
; 172  : 		pMsg.bUser2 = true;
; 173  : 		pMsg.szName2[10] = 0;
; 174  : 		memcpy(pMsg.szName2, gObj[this->iClassIndex2].Name, sizeof(pMsg.szName2)-1);

  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000d3	8b d1		 mov	 edx, ecx
  000d5	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  000db	8d 44 02 77	 lea	 eax, DWORD PTR [edx+eax+119]
  000df	c6 45 d2 01	 mov	 BYTE PTR _pMsg$[ebp+6], 1
  000e3	88 5d e8	 mov	 BYTE PTR _pMsg$[ebp+28], bl
  000e6	8b 10		 mov	 edx, DWORD PTR [eax]
  000e8	89 55 de	 mov	 DWORD PTR _pMsg$[ebp+18], edx
  000eb	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 175  : 
; 176  : 		pMsg.iCountHeart2 = gObjGetItemCountInInventory(this->iClassIndex2, ITEMGET(14,12), 1);

  000ee	6a 01		 push	 1
  000f0	89 55 e2	 mov	 DWORD PTR _pMsg$[ebp+22], edx
  000f3	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  000f7	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  000fc	51		 push	 ecx
  000fd	66 89 45 e6	 mov	 WORD PTR _pMsg$[ebp+26], ax
  00101	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
  00109	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+36], eax

; 177  : 
; 178  : 		if(pMsg.iNeedHeart2 > pMsg.iCountHeart2)

  0010c	39 45 f8	 cmp	 DWORD PTR _pMsg$[ebp+44], eax
  0010f	7e 03		 jle	 SHORT $LN3@GCInfoName
$LN5@GCInfoName:

; 179  : 		{
; 180  : 			pMsg.bResult = false;
; 181  : 		}
; 182  : 	}	
; 183  : 	else
; 184  : 	{
; 185  : 		pMsg.bResult = false;

  00111	88 5d d0	 mov	 BYTE PTR _pMsg$[ebp+4], bl
$LN3@GCInfoName:

; 186  : 	}
; 187  : 
; 188  : 	if(this->iClassIndex1 != -1)

  00114	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00117	83 f8 ff	 cmp	 eax, -1
  0011a	74 0f		 je	 SHORT $LN18@GCInfoName

; 189  : 	{
; 190  : 		DataSend(this->iClassIndex1, (LPBYTE)&pMsg, sizeof(pMsg));

  0011c	6a 30		 push	 48			; 00000030H
  0011e	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00121	51		 push	 ecx
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00128	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN18@GCInfoName:

; 191  : 	}
; 192  : 
; 193  : 	if(this->iClassIndex2 != -1)

  0012b	8b 76 40	 mov	 esi, DWORD PTR [esi+64]
  0012e	83 fe ff	 cmp	 esi, -1
  00131	74 0f		 je	 SHORT $LN1@GCInfoName

; 194  : 	{
; 195  : 		DataSend(this->iClassIndex2, (LPBYTE)&pMsg, sizeof(pMsg));

  00133	6a 30		 push	 48			; 00000030H
  00135	8d 55 cc	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00138	52		 push	 edx
  00139	56		 push	 esi
  0013a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@GCInfoName:

; 196  : 	}	
; 197  : }

  00142	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00145	5e		 pop	 esi
  00146	33 cd		 xor	 ecx, ebp
  00148	5b		 pop	 ebx
  00149	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c3		 ret	 0
?GCInfoNames@CMarriage@@QAEXXZ ENDP			; CMarriage::GCInfoNames
_TEXT	ENDS
PUBLIC	?IndexClose@CMarriage@@QAEXH@Z			; CMarriage::IndexClose
; Function compile flags: /Ogtp
;	COMDAT ?IndexClose@CMarriage@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?IndexClose@CMarriage@@QAEXH@Z PROC			; CMarriage::IndexClose, COMDAT
; _this$ = ecx

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 201  : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 35		 je	 SHORT $LN5@IndexClose

; 202  : 	{
; 203  : 		return;
; 204  : 	}
; 205  : 
; 206  : 	if(!OBJMAX_RANGE(aIndex))

  00008	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000b	85 c0		 test	 eax, eax
  0000d	78 2e		 js	 SHORT $LN5@IndexClose
  0000f	33 d2		 xor	 edx, edx
  00011	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00016	0f 9e c2	 setle	 dl
  00019	85 d2		 test	 edx, edx
  0001b	74 20		 je	 SHORT $LN5@IndexClose

; 207  : 	{
; 208  : 		return;
; 209  : 	}
; 210  : 
; 211  : 	if(aIndex == this->iClassIndex1)

  0001d	83 ca ff	 or	 edx, -1
  00020	3b 41 3c	 cmp	 eax, DWORD PTR [ecx+60]
  00023	75 07		 jne	 SHORT $LN2@IndexClose

; 212  : 	{
; 213  : 		this->iClassIndex1 = -1;

  00025	89 51 3c	 mov	 DWORD PTR [ecx+60], edx

; 214  : 		this->bClickOK1 = false;

  00028	c6 41 44 00	 mov	 BYTE PTR [ecx+68], 0
$LN2@IndexClose:

; 215  : 	}
; 216  : 
; 217  : 	if(aIndex == this->iClassIndex2)

  0002c	3b 41 40	 cmp	 eax, DWORD PTR [ecx+64]
  0002f	75 07		 jne	 SHORT $LN1@IndexClose

; 218  : 	{
; 219  : 		this->iClassIndex2 = -1;

  00031	89 51 40	 mov	 DWORD PTR [ecx+64], edx

; 220  : 		this->bClickOK2 = false;

  00034	c6 41 45 00	 mov	 BYTE PTR [ecx+69], 0
$LN1@IndexClose:

; 221  : 	}
; 222  : 
; 223  : 	this->GCInfoNames();

  00038	e8 00 00 00 00	 call	 ?GCInfoNames@CMarriage@@QAEXXZ ; CMarriage::GCInfoNames
$LN5@IndexClose:

; 224  : }

  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?IndexClose@CMarriage@@QAEXH@Z ENDP			; CMarriage::IndexClose
_TEXT	ENDS
PUBLIC	?CGWindowClose@CMarriage@@QAEXXZ		; CMarriage::CGWindowClose
; Function compile flags: /Ogtp
;	COMDAT ?CGWindowClose@CMarriage@@QAEXXZ
_TEXT	SEGMENT
_pMsg$ = -4						; size = 4
?CGWindowClose@CMarriage@@QAEXXZ PROC			; CMarriage::CGWindowClose, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 265  : 	PMSG_GC_MARRIAGE_WIN_CLOSE pMsg;
; 266  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x32, sizeof(pMsg));
; 267  : 	DataSend(this->iClassIndex1, (LPBYTE)&pMsg, sizeof(pMsg));

  00007	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  0000a	6a 04		 push	 4
  0000c	8d 45 fc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0000f	50		 push	 eax
  00010	51		 push	 ecx
  00011	c7 45 fc c1 04
	fb 32		 mov	 DWORD PTR _pMsg$[ebp], 855311553 ; 32fb04c1H
  00018	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 268  : 	DataSend(this->iClassIndex2, (LPBYTE)&pMsg, sizeof(pMsg));

  0001d	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00020	6a 04		 push	 4
  00022	8d 55 fc	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00025	52		 push	 edx
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0002c	83 c4 18	 add	 esp, 24			; 00000018H

; 269  : 
; 270  : 	this->iClassIndex1 = -1;

  0002f	83 c9 ff	 or	 ecx, -1
  00032	89 4e 3c	 mov	 DWORD PTR [esi+60], ecx

; 271  : 	this->bClickOK1 = false;
; 272  : 	this->iClassIndex2 = -1;

  00035	89 4e 40	 mov	 DWORD PTR [esi+64], ecx
  00038	66 c7 46 44 00
	00		 mov	 WORD PTR [esi+68], 0
  0003e	5e		 pop	 esi

; 273  : 	this->bClickOK2 = false;
; 274  : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?CGWindowClose@CMarriage@@QAEXXZ ENDP			; CMarriage::CGWindowClose
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDLoad@CMarriage@@QAEXH@Z			; CMarriage::GDLoad
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
; Function compile flags: /Ogtp
;	COMDAT ?GDLoad@CMarriage@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GDLoad@CMarriage@@QAEXH@Z PROC				; CMarriage::GDLoad, COMDAT
; _this$ = ecx

; 277  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 278  : 	if(!this->Enable)

  00010	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00013	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00016	74 7b		 je	 SHORT $LN6@GDLoad

; 279  : 	{
; 280  : 		return;
; 281  : 	}
; 282  : 
; 283  : 	if(!OBJMAX_RANGE(aIndex))

  00018	85 d2		 test	 edx, edx
  0001a	78 77		 js	 SHORT $LN6@GDLoad
  0001c	33 c0		 xor	 eax, eax
  0001e	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  00024	0f 9e c0	 setle	 al
  00027	85 c0		 test	 eax, eax
  00029	74 68		 je	 SHORT $LN6@GDLoad

; 284  : 	{
; 285  : 		return;
; 286  : 	}
; 287  : 
; 288  : 	LPOBJ lpUser = &gObj[aIndex];

  0002b	8b c2		 mov	 eax, edx
  0002d	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00033	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 289  : 
; 290  : 	PMSG_REQ_MARRIAGE_LOAD pMsg;
; 291  : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x00, sizeof(pMsg));

  00039	c7 45 e8 c1 14
	eb 00		 mov	 DWORD PTR _pMsg$[ebp], 15406273 ; 00eb14c1H

; 292  : 
; 293  : 	pMsg.aIndex = aIndex;

  00040	89 55 ec	 mov	 DWORD PTR _pMsg$[ebp+4], edx

; 294  : 
; 295  : 	if(lpUser->Class == CLASS_KNIGHT || lpUser->Class == CLASS_WIZARD || lpUser->Class == CLASS_MAGUMSA || lpUser->Class == CLASS_DARKLORD || lpUser->Class == CLASS_MONK)

  00043	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0004a	83 f9 01	 cmp	 ecx, 1
  0004d	74 18		 je	 SHORT $LN2@GDLoad
  0004f	66 85 c9	 test	 cx, cx
  00052	74 13		 je	 SHORT $LN2@GDLoad
  00054	83 f9 03	 cmp	 ecx, 3
  00057	74 0e		 je	 SHORT $LN2@GDLoad
  00059	83 f9 04	 cmp	 ecx, 4
  0005c	74 09		 je	 SHORT $LN2@GDLoad

; 298  : 	}
; 299  : 	else
; 300  : 	{
; 301  : 		pMsg.bClass = 1;

  0005e	c6 45 f0 01	 mov	 BYTE PTR _pMsg$[ebp+8], 1
  00062	83 f9 06	 cmp	 ecx, 6
  00065	75 04		 jne	 SHORT $LN1@GDLoad
$LN2@GDLoad:

; 296  : 	{
; 297  : 		pMsg.bClass = 0;

  00067	c6 45 f0 00	 mov	 BYTE PTR _pMsg$[ebp+8], 0
$LN1@GDLoad:

; 302  : 	}
; 303  : 
; 304  : 	pMsg.szName[10] = 0;

  0006b	c6 45 fb 00	 mov	 BYTE PTR _pMsg$[ebp+19], 0

; 305  : 	memcpy(pMsg.szName, lpUser->Name, sizeof(pMsg.szName)-1);

  0006f	8b 48 77	 mov	 ecx, DWORD PTR [eax+119]
  00072	89 4d f1	 mov	 DWORD PTR _pMsg$[ebp+9], ecx
  00075	8b 50 7b	 mov	 edx, DWORD PTR [eax+123]

; 306  : 
; 307  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00078	6a 14		 push	 20			; 00000014H
  0007a	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0007d	89 55 f5	 mov	 DWORD PTR _pMsg$[ebp+13], edx
  00080	66 8b 40 7f	 mov	 ax, WORD PTR [eax+127]
  00084	51		 push	 ecx
  00085	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0008a	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+17], ax
  0008e	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN6@GDLoad:

; 308  : }

  00093	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00096	33 cd		 xor	 ecx, ebp
  00098	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 04 00	 ret	 4
?GDLoad@CMarriage@@QAEXH@Z ENDP				; CMarriage::GDLoad
_TEXT	ENDS
PUBLIC	??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@ ; `string'
PUBLIC	??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@ ; `string'
PUBLIC	??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@ ; `string'
PUBLIC	?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z ; CMarriage::DGLoad
EXTRN	?MessageChat@@YAXHPADZZ:PROC			; MessageChat
;	COMDAT ??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@
CONST	SEGMENT
??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@ DB '~'
	DB	'[MARRIAGE] Player: %s Online', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@
CONST	SEGMENT
??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@ DB '~'
	DB	'[MARRIAGE] Player: %s Connected!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@
CONST	SEGMENT
??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@ DB '~'
	DB	'[MARRIAGE] Player: %s Offline', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z
_TEXT	SEGMENT
_aIndex$ = -4						; size = 4
_n$211001 = 8						; size = 4
_aRecv$ = 8						; size = 4
?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z PROC ; CMarriage::DGLoad, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 312  : 	int aIndex = aRecv->aIndex;

  00004	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00007	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0000a	89 55 fc	 mov	 DWORD PTR _aIndex$[ebp], edx

; 313  : 
; 314  : 	if(!OBJMAX_RANGE(aIndex))

  0000d	85 d2		 test	 edx, edx
  0000f	0f 88 c5 00 00
	00		 js	 $LN1@DGLoad
  00015	33 c9		 xor	 ecx, ecx
  00017	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  0001d	0f 9e c1	 setle	 cl
  00020	85 c9		 test	 ecx, ecx
  00022	0f 84 b2 00 00
	00		 je	 $LN1@DGLoad

; 315  : 	{
; 316  : 		return;
; 317  : 	}
; 318  : 
; 319  : 	LPOBJ lpUser = &gObj[aIndex];

  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	8b f2		 mov	 esi, edx
  0002c	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00032	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	57		 push	 edi

; 320  : 
; 321  : 	lpUser->bMarriage = true;

  00039	c6 86 ed 28 00
	00 01		 mov	 BYTE PTR [esi+10477], 1

; 322  : 
; 323  : 	lpUser->MarriageName[10] = 0;

  00040	c6 86 f8 28 00
	00 00		 mov	 BYTE PTR [esi+10488], 0

; 324  : 	memcpy(lpUser->MarriageName, aRecv->szMarriageName, sizeof(lpUser->MarriageName)-1);

  00047	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004a	8d be ee 28 00
	00		 lea	 edi, DWORD PTR [esi+10478]
  00050	89 0f		 mov	 DWORD PTR [edi], ecx
  00052	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00055	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  00058	66 8b 40 10	 mov	 ax, WORD PTR [eax+16]
  0005c	66 89 47 08	 mov	 WORD PTR [edi+8], ax
  00060	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 325  : 
; 326  : 	bool bMarriageOnline = false;
; 327  : 
; 328  : 	for(int n = OBJ_STARTUSERINDZT; n < OBJMAX; n++)

  00066	b8 b0 36 00 00	 mov	 eax, 14000		; 000036b0H
  0006b	89 45 08	 mov	 DWORD PTR _n$211001[ebp], eax
  0006e	81 c3 77 a7 40
	09		 add	 ebx, 155232119		; 0940a777H
$LL9@DGLoad:

; 329  : 	{
; 330  : 		LPOBJ sObj = &gObj[n];
; 331  : 
; 332  : 		if(sObj->Connected < PLAYER_PLAYING || n == aIndex) 

  00074	83 7b 8d 03	 cmp	 DWORD PTR [ebx-115], 3
  00078	7c 3d		 jl	 SHORT $LN8@DGLoad
  0007a	3b c2		 cmp	 eax, edx
  0007c	74 39		 je	 SHORT $LN8@DGLoad

; 333  : 		{
; 334  : 			continue;
; 335  : 		}
; 336  : 
; 337  : 		if(sObj->Name[0] == lpUser->MarriageName[0])

  0007e	8a 0b		 mov	 cl, BYTE PTR [ebx]
  00080	3a 0f		 cmp	 cl, BYTE PTR [edi]
  00082	75 33		 jne	 SHORT $LN8@DGLoad

; 338  : 		{
; 339  : 			if(strcmp(sObj->Name, lpUser->MarriageName) == 0)

  00084	8b cf		 mov	 ecx, edi
  00086	8b c3		 mov	 eax, ebx
$LL19@DGLoad:
  00088	8a 10		 mov	 dl, BYTE PTR [eax]
  0008a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0008c	75 1a		 jne	 SHORT $LN20@DGLoad
  0008e	84 d2		 test	 dl, dl
  00090	74 12		 je	 SHORT $LN21@DGLoad
  00092	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00095	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00098	75 0e		 jne	 SHORT $LN20@DGLoad
  0009a	83 c0 02	 add	 eax, 2
  0009d	83 c1 02	 add	 ecx, 2
  000a0	84 d2		 test	 dl, dl
  000a2	75 e4		 jne	 SHORT $LL19@DGLoad
$LN21@DGLoad:
  000a4	33 c0		 xor	 eax, eax
  000a6	eb 05		 jmp	 SHORT $LN22@DGLoad
$LN20@DGLoad:
  000a8	1b c0		 sbb	 eax, eax
  000aa	83 d8 ff	 sbb	 eax, -1
$LN22@DGLoad:
  000ad	85 c0		 test	 eax, eax
  000af	74 2f		 je	 SHORT $LN16@DGLoad
  000b1	8b 55 fc	 mov	 edx, DWORD PTR _aIndex$[ebp]
  000b4	8b 45 08	 mov	 eax, DWORD PTR _n$211001[ebp]
$LN8@DGLoad:

; 325  : 
; 326  : 	bool bMarriageOnline = false;
; 327  : 
; 328  : 	for(int n = OBJ_STARTUSERINDZT; n < OBJMAX; n++)

  000b7	40		 inc	 eax
  000b8	81 c3 50 2b 00
	00		 add	 ebx, 11088		; 00002b50H
  000be	89 45 08	 mov	 DWORD PTR _n$211001[ebp], eax
  000c1	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  000c6	7c ac		 jl	 SHORT $LL9@DGLoad

; 351  : 	}
; 352  : 	else
; 353  : 	{
; 354  : 		MessageChat(aIndex, "~[MARRIAGE] Player: %s Offline", lpUser->MarriageName);

  000c8	57		 push	 edi
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@
  000ce	52		 push	 edx
  000cf	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
$LN1@DGLoad:

; 355  : 	}
; 356  : }

  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
$LN16@DGLoad:

; 340  : 			{
; 341  : 				bMarriageOnline = true;
; 342  : 				MessageChat(n, "~[MARRIAGE] Player: %s Connected!", lpUser->Name);

  000e0	8b 55 08	 mov	 edx, DWORD PTR _n$211001[ebp]
  000e3	83 c6 77	 add	 esi, 119		; 00000077H
  000e6	56		 push	 esi
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@
  000ec	52		 push	 edx
  000ed	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 343  : 				break;
; 344  : 			}
; 345  : 		}				
; 346  : 	}
; 347  : 
; 348  : 	if(bMarriageOnline)
; 349  : 	{
; 350  : 		MessageChat(aIndex, "~[MARRIAGE] Player: %s Online", lpUser->MarriageName);

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000f5	57		 push	 edi
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00101	83 c4 18	 add	 esp, 24			; 00000018H
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx

; 355  : 	}
; 356  : }

  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c2 04 00	 ret	 4
?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z ENDP ; CMarriage::DGLoad
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDInsert@CMarriage@@QAEXXZ			; CMarriage::GDInsert
; Function compile flags: /Ogtp
;	COMDAT ?GDInsert@CMarriage@@QAEXXZ
_TEXT	SEGMENT
_pMsg$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
?GDInsert@CMarriage@@QAEXXZ PROC			; CMarriage::GDInsert, COMDAT
; _this$ = ecx

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 360  : 	if(!this->Enable)

  00010	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00013	0f 84 ad 00 00
	00		 je	 $LN1@GDInsert

; 361  : 	{
; 362  : 		return;
; 363  : 	}
; 364  : 
; 365  : 	if(!OBJMAX_RANGE(this->iClassIndex1) || !OBJMAX_RANGE(this->iClassIndex2))

  00019	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  0001c	85 c0		 test	 eax, eax
  0001e	0f 88 a2 00 00
	00		 js	 $LN1@GDInsert
  00024	33 d2		 xor	 edx, edx
  00026	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0002b	0f 9e c2	 setle	 dl
  0002e	8b c2		 mov	 eax, edx
  00030	85 c0		 test	 eax, eax
  00032	0f 84 8e 00 00
	00		 je	 $LN1@GDInsert
  00038	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  0003b	85 c0		 test	 eax, eax
  0003d	0f 88 83 00 00
	00		 js	 $LN1@GDInsert
  00043	33 d2		 xor	 edx, edx
  00045	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0004a	0f 9e c2	 setle	 dl
  0004d	8b c2		 mov	 eax, edx
  0004f	85 c0		 test	 eax, eax
  00051	74 73		 je	 SHORT $LN1@GDInsert

; 366  : 	{
; 367  : 		return;
; 368  : 	}
; 369  : 
; 370  : 	LPOBJ lpUser1 = &gObj[this->iClassIndex1];

  00053	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00056	8b c2		 mov	 eax, edx
  00058	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0005e	56		 push	 esi

; 371  : 	LPOBJ lpUser2 = &gObj[this->iClassIndex2];

  0005f	8b 71 40	 mov	 esi, DWORD PTR [ecx+64]

; 372  : 
; 373  : 	PMSG_REQ_MARRIAGE_INSERT pMsg;
; 374  : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x01, sizeof(pMsg));
; 375  : 	pMsg.aIndex1 = this->iClassIndex1;

  00062	89 55 dc	 mov	 DWORD PTR _pMsg$[ebp+4], edx
  00065	c7 45 d8 c1 24
	eb 01		 mov	 DWORD PTR _pMsg$[ebp], 32187585 ; 01eb24c1H

; 376  : 	pMsg.aIndex2 = this->iClassIndex2;

  0006c	89 75 e0	 mov	 DWORD PTR _pMsg$[ebp+8], esi

; 377  : 
; 378  : 	pMsg.szName1[10] = 0;

  0006f	c6 45 ee 00	 mov	 BYTE PTR _pMsg$[ebp+22], 0
  00073	57		 push	 edi
  00074	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 379  : 	memcpy(pMsg.szName1, lpUser1->Name, sizeof(pMsg.szName1)-1);

  0007a	8b 54 38 77	 mov	 edx, DWORD PTR [eax+edi+119]
  0007e	8b ce		 mov	 ecx, esi
  00080	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00086	89 55 e4	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  00089	8b 54 38 7b	 mov	 edx, DWORD PTR [eax+edi+123]
  0008d	89 55 e8	 mov	 DWORD PTR _pMsg$[ebp+16], edx
  00090	66 8b 44 38 7f	 mov	 ax, WORD PTR [eax+edi+127]
  00095	66 89 45 ec	 mov	 WORD PTR _pMsg$[ebp+20], ax

; 380  : 
; 381  : 	pMsg.szName2[10] = 0;

  00099	c6 45 f9 00	 mov	 BYTE PTR _pMsg$[ebp+33], 0

; 382  : 	memcpy(pMsg.szName2, lpUser2->Name, sizeof(pMsg.szName2)-1);

  0009d	8b 54 39 77	 mov	 edx, DWORD PTR [ecx+edi+119]
  000a1	89 55 ef	 mov	 DWORD PTR _pMsg$[ebp+23], edx
  000a4	8b 44 39 7b	 mov	 eax, DWORD PTR [ecx+edi+123]
  000a8	89 45 f3	 mov	 DWORD PTR _pMsg$[ebp+27], eax
  000ab	66 8b 4c 39 7f	 mov	 cx, WORD PTR [ecx+edi+127]

; 383  : 
; 384  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  000b0	6a 24		 push	 36			; 00000024H
  000b2	8d 55 d8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  000b5	66 89 4d f7	 mov	 WORD PTR _pMsg$[ebp+31], cx
  000b9	52		 push	 edx
  000ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000bf	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
$LN1@GDInsert:

; 385  : }

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c9	33 cd		 xor	 ecx, ebp
  000cb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
?GDInsert@CMarriage@@QAEXXZ ENDP			; CMarriage::GDInsert
_TEXT	ENDS
PUBLIC	??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@ ; `string'
PUBLIC	?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z ; CMarriage::DGInsert
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?GenExcOpt@@YAHH@Z:PROC				; GenExcOpt
EXTRN	?ZtFireCracker@@YAXHEE@Z:PROC			; ZtFireCracker
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
EXTRN	?gObjDeleteItemsCount@@YAHHFFH@Z:PROC		; gObjDeleteItemsCount
;	COMDAT ??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@
CONST	SEGMENT
??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@ DB 'Cong'
	DB	'ratulations, %s and %s are now married', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z
_TEXT	SEGMENT
_iItemExl$ = -16					; size = 4
_iItemType$ = -12					; size = 4
_iItemLevel$ = -8					; size = 4
_iItemOpt$ = -4						; size = 4
_this$ = -4						; size = 4
_aIndex2$ = 8						; size = 4
_aRecv$ = 8						; size = 4
?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z PROC ; CMarriage::DGInsert, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 389  : 	if(!aRecv->bResult)

  00006	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00009	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0000d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00010	0f 84 b1 01 00
	00		 je	 $LN1@DGInsert

; 390  : 	{
; 391  : 		return;
; 392  : 	}
; 393  : 
; 394  : 	int aIndex1 = aRecv->aIndex1;

  00016	53		 push	 ebx
  00017	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  0001a	57		 push	 edi

; 395  : 	int aIndex2 = aRecv->aIndex2;

  0001b	8b 78 08	 mov	 edi, DWORD PTR [eax+8]
  0001e	89 7d 08	 mov	 DWORD PTR _aIndex2$[ebp], edi

; 396  : 
; 397  : 	if(!OBJMAX_RANGE(aIndex1) || !OBJMAX_RANGE(aIndex2))

  00021	85 db		 test	 ebx, ebx
  00023	0f 88 9c 01 00
	00		 js	 $LN12@DGInsert
  00029	33 c0		 xor	 eax, eax
  0002b	81 fb 97 3a 00
	00		 cmp	 ebx, 14999		; 00003a97H
  00031	0f 9e c0	 setle	 al
  00034	85 c0		 test	 eax, eax
  00036	0f 84 89 01 00
	00		 je	 $LN12@DGInsert
  0003c	85 ff		 test	 edi, edi
  0003e	0f 88 81 01 00
	00		 js	 $LN12@DGInsert
  00044	33 c0		 xor	 eax, eax
  00046	81 ff 97 3a 00
	00		 cmp	 edi, 14999		; 00003a97H
  0004c	0f 9e c0	 setle	 al
  0004f	85 c0		 test	 eax, eax
  00051	0f 84 6e 01 00
	00		 je	 $LN12@DGInsert

; 398  : 	{
; 399  : 		return;
; 400  : 	}
; 401  : 
; 402  : 	LPOBJ lpUser1 = &gObj[aIndex1];

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 403  : 	LPOBJ lpUser2 = &gObj[aIndex2];

  0005c	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00062	56		 push	 esi
  00063	8b f3		 mov	 esi, ebx
  00065	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0006b	03 f0		 add	 esi, eax
  0006d	03 f8		 add	 edi, eax

; 404  : 
; 405  : 	if(lpUser1->Connected < PLAYER_PLAYING || lpUser2->Connected < PLAYER_PLAYING)

  0006f	b8 03 00 00 00	 mov	 eax, 3
  00074	39 46 04	 cmp	 DWORD PTR [esi+4], eax
  00077	0f 8c 47 01 00
	00		 jl	 $LN14@DGInsert
  0007d	39 47 04	 cmp	 DWORD PTR [edi+4], eax
  00080	0f 8c 3e 01 00
	00		 jl	 $LN14@DGInsert

; 406  : 	{
; 407  : 		return;
; 408  : 	}
; 409  : 
; 410  : 	gObjDeleteItemsCount(aIndex1, ITEMGET(14,12), 1, this->iNeedHeart1);

  00086	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00089	50		 push	 eax
  0008a	6a 01		 push	 1
  0008c	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  00091	53		 push	 ebx
  00092	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 411  : 	gObjDeleteItemsCount(aIndex2, ITEMGET(14,12), 1, this->iNeedHeart2);

  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0009d	8b 45 08	 mov	 eax, DWORD PTR _aIndex2$[ebp]
  000a0	52		 push	 edx
  000a1	6a 01		 push	 1
  000a3	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount

; 412  : 
; 413  : 	MessaageAllGlobal("Congratulations, %s and %s are now married", lpUser1->Name, lpUser2->Name);

  000ae	8d 4f 77	 lea	 ecx, DWORD PTR [edi+119]
  000b1	51		 push	 ecx
  000b2	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  000b5	52		 push	 edx
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@
  000bb	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal

; 414  : 	
; 415  : 	ZtFireCracker(aIndex1, lpUser1->X, lpUser1->Y);

  000c0	0f b6 86 46 01
	00 00		 movzx	 eax, BYTE PTR [esi+326]
  000c7	0f b6 8e 44 01
	00 00		 movzx	 ecx, BYTE PTR [esi+324]
  000ce	50		 push	 eax
  000cf	51		 push	 ecx
  000d0	53		 push	 ebx
  000d1	e8 00 00 00 00	 call	 ?ZtFireCracker@@YAXHEE@Z ; ZtFireCracker

; 416  : 	ZtFireCracker(aIndex1, lpUser2->X, lpUser2->Y);

  000d6	0f b6 97 46 01
	00 00		 movzx	 edx, BYTE PTR [edi+326]
  000dd	0f b6 87 44 01
	00 00		 movzx	 eax, BYTE PTR [edi+324]
  000e4	52		 push	 edx
  000e5	50		 push	 eax
  000e6	53		 push	 ebx
  000e7	e8 00 00 00 00	 call	 ?ZtFireCracker@@YAXHEE@Z ; ZtFireCracker

; 417  : 	ZtFireCracker(aIndex2, lpUser1->X, lpUser1->Y);

  000ec	0f b6 8e 46 01
	00 00		 movzx	 ecx, BYTE PTR [esi+326]
  000f3	0f b6 96 44 01
	00 00		 movzx	 edx, BYTE PTR [esi+324]
  000fa	8b 45 08	 mov	 eax, DWORD PTR _aIndex2$[ebp]
  000fd	83 c4 44	 add	 esp, 68			; 00000044H
  00100	51		 push	 ecx
  00101	52		 push	 edx
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?ZtFireCracker@@YAXHEE@Z ; ZtFireCracker

; 418  : 	ZtFireCracker(aIndex2, lpUser2->X, lpUser2->Y);

  00108	0f b6 8f 46 01
	00 00		 movzx	 ecx, BYTE PTR [edi+326]
  0010f	0f b6 97 44 01
	00 00		 movzx	 edx, BYTE PTR [edi+324]
  00116	8b 45 08	 mov	 eax, DWORD PTR _aIndex2$[ebp]
  00119	51		 push	 ecx
  0011a	52		 push	 edx
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?ZtFireCracker@@YAXHEE@Z ; ZtFireCracker

; 419  : 
; 420  : 	lpUser1->bMarriage = true;
; 421  : 	lpUser2->bMarriage = true;
; 422  : 
; 423  : 	int iItemType = ITEMGET(this->iRewardItemType, this->iRewardItemIndex);

  00121	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00124	c6 86 ed 28 00
	00 01		 mov	 BYTE PTR [esi+10477], 1
  0012b	c6 87 ed 28 00
	00 01		 mov	 BYTE PTR [edi+10477], 1
  00132	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 424  : 	int iItemLevel = this->iRewardItemLevel;
; 425  : 	int iItemOpt = this->iRewardItemOpt;

  00135	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00138	c1 e1 09	 shl	 ecx, 9
  0013b	03 48 20	 add	 ecx, DWORD PTR [eax+32]
  0013e	89 55 fc	 mov	 DWORD PTR _iItemOpt$[ebp], edx
  00141	89 4d f4	 mov	 DWORD PTR _iItemType$[ebp], ecx
  00144	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]

; 426  : 	int iItemExl = GenExcOpt(this->iRewardItemExel);

  00147	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0014a	50		 push	 eax
  0014b	89 4d f8	 mov	 DWORD PTR _iItemLevel$[ebp], ecx
  0014e	e8 00 00 00 00	 call	 ?GenExcOpt@@YAHH@Z	; GenExcOpt

; 427  : 
; 428  : 	ItemSerialCreateSend(aIndex1,235,lpUser1->X,lpUser2->Y,iItemType,iItemLevel,0,0,0,iItemOpt,aIndex1,iItemExl,0);

  00153	8b 4d fc	 mov	 ecx, DWORD PTR _iItemOpt$[ebp]
  00156	8b 55 f8	 mov	 edx, DWORD PTR _iItemLevel$[ebp]
  00159	6a 00		 push	 0
  0015b	50		 push	 eax
  0015c	53		 push	 ebx
  0015d	51		 push	 ecx
  0015e	0f b6 8f 46 01
	00 00		 movzx	 ecx, BYTE PTR [edi+326]
  00165	6a 00		 push	 0
  00167	6a 00		 push	 0
  00169	6a 00		 push	 0
  0016b	52		 push	 edx
  0016c	0f b6 96 44 01
	00 00		 movzx	 edx, BYTE PTR [esi+324]
  00173	89 45 f0	 mov	 DWORD PTR _iItemExl$[ebp], eax
  00176	8b 45 f4	 mov	 eax, DWORD PTR _iItemType$[ebp]
  00179	50		 push	 eax
  0017a	51		 push	 ecx
  0017b	52		 push	 edx
  0017c	68 eb 00 00 00	 push	 235			; 000000ebH
  00181	53		 push	 ebx
  00182	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

; 429  : 	ItemSerialCreateSend(aIndex2,235,lpUser1->X,lpUser2->Y,iItemType,iItemLevel,0,0,0,iItemOpt,aIndex1,iItemExl,0);

  00187	8b 45 f0	 mov	 eax, DWORD PTR _iItemExl$[ebp]
  0018a	8b 4d fc	 mov	 ecx, DWORD PTR _iItemOpt$[ebp]
  0018d	8b 55 f8	 mov	 edx, DWORD PTR _iItemLevel$[ebp]
  00190	83 c4 50	 add	 esp, 80			; 00000050H
  00193	6a 00		 push	 0
  00195	50		 push	 eax
  00196	8b 45 f4	 mov	 eax, DWORD PTR _iItemType$[ebp]
  00199	53		 push	 ebx
  0019a	51		 push	 ecx
  0019b	0f b6 8f 46 01
	00 00		 movzx	 ecx, BYTE PTR [edi+326]
  001a2	6a 00		 push	 0
  001a4	6a 00		 push	 0
  001a6	6a 00		 push	 0
  001a8	52		 push	 edx
  001a9	0f b6 96 44 01
	00 00		 movzx	 edx, BYTE PTR [esi+324]
  001b0	50		 push	 eax
  001b1	8b 45 08	 mov	 eax, DWORD PTR _aIndex2$[ebp]
  001b4	51		 push	 ecx
  001b5	52		 push	 edx
  001b6	68 eb 00 00 00	 push	 235			; 000000ebH
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  001c1	83 c4 34	 add	 esp, 52			; 00000034H
$LN14@DGInsert:
  001c4	5e		 pop	 esi
$LN12@DGInsert:
  001c5	5f		 pop	 edi
  001c6	5b		 pop	 ebx
$LN1@DGInsert:

; 430  : }

  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c2 04 00	 ret	 4
?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z ENDP ; CMarriage::DGInsert
_TEXT	ENDS
PUBLIC	??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GDDelete@CMarriage@@QAEXH@Z			; CMarriage::GDDelete
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@
; File e:\work\tranet_version\gs\include\prodef.h
CONST	SEGMENT
??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@ DB '~'
	DB	'[MARRIAGE] Kick Price: %d WCoin', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\marriage.cpp
CONST	ENDS
;	COMDAT ?GDDelete@CMarriage@@QAEXH@Z
_TEXT	SEGMENT
tv174 = -28						; size = 4
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GDDelete@CMarriage@@QAEXH@Z PROC			; CMarriage::GDDelete, COMDAT
; _this$ = ecx

; 433  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 434  : 	if(!this->Enable)

  00010	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00017	0f 84 e8 00 00
	00		 je	 $LN8@GDDelete

; 435  : 	{
; 436  : 		return;
; 437  : 	}
; 438  : 
; 439  : 	if(!OBJMAX_RANGE(aIndex))

  0001d	85 ff		 test	 edi, edi
  0001f	0f 88 e0 00 00
	00		 js	 $LN8@GDDelete
  00025	33 c0		 xor	 eax, eax
  00027	81 ff 97 3a 00
	00		 cmp	 edi, 14999		; 00003a97H
  0002d	0f 9e c0	 setle	 al
  00030	85 c0		 test	 eax, eax
  00032	0f 84 cd 00 00
	00		 je	 $LN8@GDDelete

; 440  : 	{
; 441  : 		return;
; 442  : 	}
; 443  : 
; 444  : 	LPOBJ lpUser = &gObj[aIndex];

  00038	56		 push	 esi
  00039	8b f7		 mov	 esi, edi
  0003b	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00041	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 445  : 
; 446  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00047	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  0004b	0f 8c b3 00 00
	00		 jl	 $LN14@GDDelete

; 447  : 	{
; 448  : 		return;
; 449  : 	}
; 450  : 
; 451  : 	if(this->iKickPriceWcoin > lpUser->GameShop.WCoinC)

  00051	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  00054	89 4d e4	 mov	 DWORD PTR tv174[ebp], ecx
  00057	db 45 e4	 fild	 DWORD PTR tv174[ebp]
  0005a	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  00060	df e0		 fnstsw	 ax
  00062	f6 c4 41	 test	 ah, 65			; 00000041H
  00065	75 23		 jne	 SHORT $LN4@GDDelete

; 452  : 	{
; 453  : 		MessageChat(aIndex, "~[MARRIAGE] Kick Price: %d WCoin", this->iKickPriceWcoin);

  00067	51		 push	 ecx
  00068	dd d8		 fstp	 ST(0)
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@
  0006f	57		 push	 edi
  00070	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	5e		 pop	 esi
  00079	5f		 pop	 edi

; 479  : }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
$LN4@GDDelete:

; 454  : 		return;
; 455  : 	}
; 456  : 
; 457  : 	lpUser->GameShop.WCoinC -= this->iKickPriceWcoin;

  0008a	dc ae 00 23 00
	00		 fsubr	 QWORD PTR [esi+8960]

; 458  : 	gGameShop.GDSaveUserInfo(aIndex);

  00090	57		 push	 edi
  00091	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00096	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]
  0009c	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 459  : 	ZtUserDataSend(aIndex);

  000a1	57		 push	 edi
  000a2	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 460  : 
; 461  : 	PMSG_REQ_MARRIAGE_DELETE pMsg;
; 462  : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x02, sizeof(pMsg));

  000a7	c7 45 e8 c1 14
	eb 02		 mov	 DWORD PTR _pMsg$[ebp], 48960705 ; 02eb14c1H

; 463  : 
; 464  : 	pMsg.aIndex = aIndex;

  000ae	89 7d ec	 mov	 DWORD PTR _pMsg$[ebp+4], edi

; 465  : 
; 466  : 	if(lpUser->Class == CLASS_KNIGHT || lpUser->Class == CLASS_WIZARD || lpUser->Class == CLASS_MAGUMSA || lpUser->Class == CLASS_DARKLORD || lpUser->Class == CLASS_MONK)

  000b1	0f b7 86 b8 00
	00 00		 movzx	 eax, WORD PTR [esi+184]
  000b8	83 c4 04	 add	 esp, 4
  000bb	83 f8 01	 cmp	 eax, 1
  000be	74 18		 je	 SHORT $LN2@GDDelete
  000c0	66 85 c0	 test	 ax, ax
  000c3	74 13		 je	 SHORT $LN2@GDDelete
  000c5	83 f8 03	 cmp	 eax, 3
  000c8	74 0e		 je	 SHORT $LN2@GDDelete
  000ca	83 f8 04	 cmp	 eax, 4
  000cd	74 09		 je	 SHORT $LN2@GDDelete

; 469  : 	}
; 470  : 	else
; 471  : 	{
; 472  : 		pMsg.bClass = 1;

  000cf	c6 45 f0 01	 mov	 BYTE PTR _pMsg$[ebp+8], 1
  000d3	83 f8 06	 cmp	 eax, 6
  000d6	75 04		 jne	 SHORT $LN1@GDDelete
$LN2@GDDelete:

; 467  : 	{
; 468  : 		pMsg.bClass = 0;

  000d8	c6 45 f0 00	 mov	 BYTE PTR _pMsg$[ebp+8], 0
$LN1@GDDelete:

; 473  : 	}
; 474  : 
; 475  : 	pMsg.szName[10] = 0;

  000dc	c6 45 fb 00	 mov	 BYTE PTR _pMsg$[ebp+19], 0

; 476  : 	memcpy(pMsg.szName, lpUser->Name, sizeof(pMsg.szName)-1);

  000e0	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  000e3	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  000e6	8b 4e 7b	 mov	 ecx, DWORD PTR [esi+123]
  000e9	89 4d f5	 mov	 DWORD PTR _pMsg$[ebp+13], ecx
  000ec	66 8b 56 7f	 mov	 dx, WORD PTR [esi+127]

; 477  : 
; 478  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  000f0	6a 14		 push	 20			; 00000014H
  000f2	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  000f5	50		 push	 eax
  000f6	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000fb	66 89 55 f9	 mov	 WORD PTR _pMsg$[ebp+17], dx
  000ff	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN14@GDDelete:
  00104	5e		 pop	 esi
$LN8@GDDelete:

; 479  : }

  00105	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00108	33 cd		 xor	 ecx, ebp
  0010a	5f		 pop	 edi
  0010b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 04 00	 ret	 4
?GDDelete@CMarriage@@QAEXH@Z ENDP			; CMarriage::GDDelete
_TEXT	ENDS
PUBLIC	??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@ ; `string'
PUBLIC	??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@ ; `string'
PUBLIC	?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z ; CMarriage::DGDelete
;	COMDAT ??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@
CONST	SEGMENT
??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@ DB '~[MARR'
	DB	'IAGE] Kick Players!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@
CONST	SEGMENT
??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@ DB '~[MARRIAG'
	DB	'E] Kick Players', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aRecv$ = 8						; size = 4
?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z PROC ; CMarriage::DGDelete, COMDAT
; _this$ = ecx

; 482  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 483  : 	if(!aRecv->bResult)

  00003	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00006	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  0000a	0f 84 d0 00 00
	00		 je	 $LN5@DGDelete

; 484  : 	{
; 485  : 		return;
; 486  : 	}
; 487  : 
; 488  : 	int aIndex = aRecv->aIndex;

  00010	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00013	89 4d 08	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 489  : 
; 490  : 	if(!OBJMAX_RANGE(aIndex))

  00016	85 c9		 test	 ecx, ecx
  00018	0f 88 c2 00 00
	00		 js	 $LN5@DGDelete
  0001e	33 c0		 xor	 eax, eax
  00020	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  00026	0f 9e c0	 setle	 al
  00029	85 c0		 test	 eax, eax
  0002b	0f 84 af 00 00
	00		 je	 $LN5@DGDelete

; 491  : 	{
; 492  : 		return;
; 493  : 	}
; 494  : 
; 495  : 	LPOBJ lpUser = &gObj[aIndex];

  00031	53		 push	 ebx
  00032	56		 push	 esi
  00033	57		 push	 edi
  00034	8b f9		 mov	 edi, ecx
  00036	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  0003c	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 496  : 
; 497  : 	lpUser->bMarriage = false;
; 498  : 
; 499  : 	MessageChat(aIndex, "~[MARRIAGE] Kick Players");

  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@
  00047	51		 push	 ecx
  00048	c6 87 ed 28 00
	00 00		 mov	 BYTE PTR [edi+10477], 0
  0004f	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00054	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005a	83 c4 08	 add	 esp, 8

; 500  : 
; 501  : 	for(int n = OBJ_STARTUSERINDZT; n < OBJMAX; n++)

  0005d	bb b0 36 00 00	 mov	 ebx, 14000		; 000036b0H
  00062	81 c6 77 a7 40
	09		 add	 esi, 155232119		; 0940a777H
$LL7@DGDelete:

; 502  : 	{
; 503  : 		LPOBJ sObj = &gObj[n];
; 504  : 
; 505  : 		if(sObj->Connected < PLAYER_PLAYING || n == aIndex) 

  00068	83 7e 8d 03	 cmp	 DWORD PTR [esi-115], 3
  0006c	7c 40		 jl	 SHORT $LN6@DGDelete
  0006e	3b 5d 08	 cmp	 ebx, DWORD PTR _aIndex$[ebp]
  00071	74 3b		 je	 SHORT $LN6@DGDelete

; 506  : 		{
; 507  : 			continue;
; 508  : 		}
; 509  : 
; 510  : 		if(sObj->Name[0] == lpUser->MarriageName[0])

  00073	8a 06		 mov	 al, BYTE PTR [esi]
  00075	3a 87 ee 28 00
	00		 cmp	 al, BYTE PTR [edi+10478]
  0007b	8d 8f ee 28 00
	00		 lea	 ecx, DWORD PTR [edi+10478]
  00081	75 2b		 jne	 SHORT $LN6@DGDelete

; 511  : 		{
; 512  : 			if(strcmp(sObj->Name, lpUser->MarriageName) == 0)

  00083	8b c6		 mov	 eax, esi
$LL17@DGDelete:
  00085	8a 10		 mov	 dl, BYTE PTR [eax]
  00087	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00089	75 1a		 jne	 SHORT $LN18@DGDelete
  0008b	84 d2		 test	 dl, dl
  0008d	74 12		 je	 SHORT $LN19@DGDelete
  0008f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00092	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00095	75 0e		 jne	 SHORT $LN18@DGDelete
  00097	83 c0 02	 add	 eax, 2
  0009a	83 c1 02	 add	 ecx, 2
  0009d	84 d2		 test	 dl, dl
  0009f	75 e4		 jne	 SHORT $LL17@DGDelete
$LN19@DGDelete:
  000a1	33 c0		 xor	 eax, eax
  000a3	eb 05		 jmp	 SHORT $LN20@DGDelete
$LN18@DGDelete:
  000a5	1b c0		 sbb	 eax, eax
  000a7	83 d8 ff	 sbb	 eax, -1
$LN20@DGDelete:
  000aa	85 c0		 test	 eax, eax
  000ac	74 16		 je	 SHORT $LN15@DGDelete
$LN6@DGDelete:

; 500  : 
; 501  : 	for(int n = OBJ_STARTUSERINDZT; n < OBJMAX; n++)

  000ae	43		 inc	 ebx
  000af	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  000b5	81 fb 98 3a 00
	00		 cmp	 ebx, 15000		; 00003a98H
  000bb	7c ab		 jl	 SHORT $LL7@DGDelete
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 516  : 				break;
; 517  : 			}
; 518  : 		}				
; 519  : 	}
; 520  : }

  000c0	5d		 pop	 ebp
  000c1	c2 04 00	 ret	 4
$LN15@DGDelete:

; 513  : 			{
; 514  : 				sObj->bMarriage = false;
; 515  : 				MessageChat(n, "~[MARRIAGE] Kick Players!", lpUser->Name);

  000c4	83 c7 77	 add	 edi, 119		; 00000077H
  000c7	57		 push	 edi
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@
  000cd	53		 push	 ebx
  000ce	c6 86 76 28 00
	00 00		 mov	 BYTE PTR [esi+10358], 0
  000d5	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
$LN5@DGDelete:

; 516  : 				break;
; 517  : 			}
; 518  : 		}				
; 519  : 	}
; 520  : }

  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z ENDP ; CMarriage::DGDelete
_TEXT	ENDS
PUBLIC	?AddedCharacter@CMarriage@@QAEXH@Z		; CMarriage::AddedCharacter
; Function compile flags: /Ogtp
;	COMDAT ?AddedCharacter@CMarriage@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?AddedCharacter@CMarriage@@QAEXH@Z PROC			; CMarriage::AddedCharacter, COMDAT
; _this$ = ecx

; 523  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 524  : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 5a		 je	 SHORT $LN1@AddedChara

; 525  : 	{
; 526  : 		return;
; 527  : 	}
; 528  : 
; 529  : 	if(!OBJMAX_RANGE(aIndex))

  00008	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000b	85 c0		 test	 eax, eax
  0000d	78 53		 js	 SHORT $LN1@AddedChara
  0000f	33 d2		 xor	 edx, edx
  00011	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00016	0f 9e c2	 setle	 dl
  00019	85 d2		 test	 edx, edx
  0001b	74 45		 je	 SHORT $LN1@AddedChara

; 530  : 	{
; 531  : 		return;
; 532  : 	}
; 533  : 
; 534  : 	LPOBJ lpUser = &gObj[aIndex];

  0001d	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00023	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 535  : 
; 536  : 	if(!lpUser->bMarriage)

  00029	80 b8 ed 28 00
	00 00		 cmp	 BYTE PTR [eax+10477], 0
  00030	74 30		 je	 SHORT $LN1@AddedChara

; 537  : 	{
; 538  : 		return;
; 539  : 	}
; 540  : 
; 541  : 	lpUser->SetOpIgnoreDefense += this->iRewardIgnoreDefence;

  00032	8a 51 34	 mov	 dl, BYTE PTR [ecx+52]
  00035	00 90 3e 11 00
	00		 add	 BYTE PTR [eax+4414], dl

; 542  : 	lpUser->SetOpDoubleDamage += this->iRewardDoubleDamage;

  0003b	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  0003e	00 88 3f 11 00
	00		 add	 BYTE PTR [eax+4415], cl

; 543  : 
; 544  : 	if(lpUser->SetOpIgnoreDefense > 90)

  00044	b1 5a		 mov	 cl, 90			; 0000005aH
  00046	38 88 3e 11 00
	00		 cmp	 BYTE PTR [eax+4414], cl
  0004c	76 06		 jbe	 SHORT $LN2@AddedChara

; 545  : 	{
; 546  : 		lpUser->SetOpIgnoreDefense = 90;

  0004e	88 88 3e 11 00
	00		 mov	 BYTE PTR [eax+4414], cl
$LN2@AddedChara:

; 547  : 	}
; 548  : 
; 549  : 	if(lpUser->SetOpDoubleDamage > 90)

  00054	38 88 3f 11 00
	00		 cmp	 BYTE PTR [eax+4415], cl
  0005a	76 06		 jbe	 SHORT $LN1@AddedChara

; 550  : 	{
; 551  : 		lpUser->SetOpDoubleDamage = 90;

  0005c	88 88 3f 11 00
	00		 mov	 BYTE PTR [eax+4415], cl
$LN1@AddedChara:

; 552  : 	}
; 553  : }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?AddedCharacter@CMarriage@@QAEXH@Z ENDP			; CMarriage::AddedCharacter
_TEXT	ENDS
PUBLIC	?BuffAdded@CMarriage@@QAEXH@Z			; CMarriage::BuffAdded
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
EXTRN	?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjRemoveBuffEffect
EXTRN	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjSearchActiveEffect
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
; Function compile flags: /Ogtp
;	COMDAT ?BuffAdded@CMarriage@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?BuffAdded@CMarriage@@QAEXH@Z PROC			; CMarriage::BuffAdded, COMDAT
; _this$ = ecx

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 557  : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 0e 01 00
	00		 je	 $LN5@BuffAdded

; 558  : 	{
; 559  : 		return;
; 560  : 	}
; 561  : 
; 562  : 	if(!OBJMAX_RANGE(aIndex))

  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00010	85 f6		 test	 esi, esi
  00012	0f 88 01 01 00
	00		 js	 $LN16@BuffAdded
  00018	33 c0		 xor	 eax, eax
  0001a	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  00020	0f 9e c0	 setle	 al
  00023	85 c0		 test	 eax, eax
  00025	0f 84 ee 00 00
	00		 je	 $LN16@BuffAdded

; 563  : 	{
; 564  : 		return;
; 565  : 	}
; 566  : 
; 567  : 	LPOBJ lpUser = &gObj[aIndex];

  0002b	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00031	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 568  : 
; 569  : 	if(g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  00037	6a 20		 push	 32			; 00000020H
  00039	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0003e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00043	84 c0		 test	 al, al
  00045	75 7d		 jne	 SHORT $LN8@BuffAdded
  00047	6a 21		 push	 33			; 00000021H
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0004e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00053	84 c0		 test	 al, al
  00055	75 6d		 jne	 SHORT $LN8@BuffAdded
  00057	6a 22		 push	 34			; 00000022H
  00059	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0005e	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00063	84 c0		 test	 al, al
  00065	75 5d		 jne	 SHORT $LN8@BuffAdded

; 583  : 		}
; 584  : 	}
; 585  : 	else
; 586  : 	{
; 587  : 		if(!lpUser->bMarriage)
; 588  : 		{
; 589  : 			if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF) == TRUE)

  00067	68 b9 00 00 00	 push	 185			; 000000b9H
  0006c	56		 push	 esi
  0006d	38 86 ed 28 00
	00		 cmp	 BYTE PTR [esi+10477], al
  00073	75 23		 jne	 SHORT $LN3@BuffAdded
  00075	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0007a	83 c4 08	 add	 esp, 8
  0007d	3c 01		 cmp	 al, 1
  0007f	0f 85 94 00 00
	00		 jne	 $LN16@BuffAdded

; 590  : 			{
; 591  : 				gObjRemoveBuffEffect(lpUser,AT_MARRI_BUFF);

  00085	68 b9 00 00 00	 push	 185			; 000000b9H
  0008a	56		 push	 esi
  0008b	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00090	83 c4 08	 add	 esp, 8
  00093	5e		 pop	 esi

; 599  : 		}
; 600  : 	}
; 601  : }

  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
$LN3@BuffAdded:

; 592  : 			}
; 593  : 			return;
; 594  : 		}
; 595  : 
; 596  : 		if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF) == FALSE)

  00098	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0009d	83 c4 08	 add	 esp, 8
  000a0	84 c0		 test	 al, al
  000a2	75 75		 jne	 SHORT $LN16@BuffAdded

; 597  : 		{
; 598  : 			gObjApplyBuffEffectDuration(lpUser,AT_MARRI_BUFF,0,0,0,0,600);

  000a4	68 58 02 00 00	 push	 600			; 00000258H
  000a9	6a 00		 push	 0
  000ab	6a 00		 push	 0
  000ad	6a 00		 push	 0
  000af	6a 00		 push	 0
  000b1	68 b9 00 00 00	 push	 185			; 000000b9H
  000b6	56		 push	 esi
  000b7	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  000bc	83 c4 1c	 add	 esp, 28			; 0000001cH
  000bf	5e		 pop	 esi

; 599  : 		}
; 600  : 	}
; 601  : }

  000c0	5d		 pop	 ebp
  000c1	c2 04 00	 ret	 4
$LN8@BuffAdded:

; 570  : 	{
; 571  : 		if(!lpUser->bMarriage)

  000c4	80 be ed 28 00
	00 00		 cmp	 BYTE PTR [esi+10477], 0

; 572  : 		{
; 573  : 			if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF2) == TRUE)

  000cb	68 c1 00 00 00	 push	 193			; 000000c1H
  000d0	56		 push	 esi
  000d1	75 1f		 jne	 SHORT $LN7@BuffAdded
  000d3	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  000d8	83 c4 08	 add	 esp, 8
  000db	3c 01		 cmp	 al, 1
  000dd	75 3a		 jne	 SHORT $LN16@BuffAdded

; 574  : 			{
; 575  : 				gObjRemoveBuffEffect(lpUser,AT_MARRI_BUFF2);

  000df	68 c1 00 00 00	 push	 193			; 000000c1H
  000e4	56		 push	 esi
  000e5	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  000ea	83 c4 08	 add	 esp, 8
  000ed	5e		 pop	 esi

; 599  : 		}
; 600  : 	}
; 601  : }

  000ee	5d		 pop	 ebp
  000ef	c2 04 00	 ret	 4
$LN7@BuffAdded:

; 576  : 			}
; 577  : 			return;
; 578  : 		}
; 579  : 
; 580  : 		if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF2) == FALSE)

  000f2	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  000f7	83 c4 08	 add	 esp, 8
  000fa	84 c0		 test	 al, al
  000fc	75 1b		 jne	 SHORT $LN16@BuffAdded

; 581  : 		{
; 582  : 			gObjApplyBuffEffectDuration(lpUser,AT_MARRI_BUFF2,0,0,0,0,600);

  000fe	68 58 02 00 00	 push	 600			; 00000258H
  00103	6a 00		 push	 0
  00105	6a 00		 push	 0
  00107	6a 00		 push	 0
  00109	6a 00		 push	 0
  0010b	68 c1 00 00 00	 push	 193			; 000000c1H
  00110	56		 push	 esi
  00111	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00116	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN16@BuffAdded:
  00119	5e		 pop	 esi
$LN5@BuffAdded:

; 599  : 		}
; 600  : 	}
; 601  : }

  0011a	5d		 pop	 ebp
  0011b	c2 04 00	 ret	 4
?BuffAdded@CMarriage@@QAEXH@Z ENDP			; CMarriage::BuffAdded
_TEXT	ENDS
PUBLIC	??0CMarriage@@QAE@XZ				; CMarriage::CMarriage
; Function compile flags: /Ogtp
;	COMDAT ??0CMarriage@@QAE@XZ
_TEXT	SEGMENT
??0CMarriage@@QAE@XZ PROC				; CMarriage::CMarriage, COMDAT
; _this$ = ecx

; 19   : 	this->Init();

  00000	e8 00 00 00 00	 call	 ?Init@CMarriage@@QAEXXZ	; CMarriage::Init

; 20   : }

  00005	8b c1		 mov	 eax, ecx
  00007	c3		 ret	 0
??0CMarriage@@QAE@XZ ENDP				; CMarriage::CMarriage
_TEXT	ENDS
PUBLIC	??_C@_0BE@HCAJGIPA@ZtData?2Marriage?4ini?$AA@	; `string'
PUBLIC	?Load@CMarriage@@QAEXXZ				; CMarriage::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
;	COMDAT ??_C@_0BE@HCAJGIPA@ZtData?2Marriage?4ini?$AA@
CONST	SEGMENT
??_C@_0BE@HCAJGIPA@ZtData?2Marriage?4ini?$AA@ DB 'ZtData\Marriage.ini', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@CMarriage@@QAEXXZ
_TEXT	SEGMENT
?Load@CMarriage@@QAEXXZ PROC				; CMarriage::Load, COMDAT
; _this$ = ecx

; 50   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 51   : 	this->Init();

  00003	e8 00 00 00 00	 call	 ?Init@CMarriage@@QAEXXZ	; CMarriage::Init

; 52   : 
; 53   : 	if(!g_ZtLicense.user.Marriage)

  00008	80 3d e7 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+231, 0
  0000f	74 17		 je	 SHORT $LN2@Load

; 54   : 	{
; 55   : 		return;
; 56   : 	}
; 57   : 
; 58   : 	this->Read(gDirPath.GetNewPath("ZtData\\Marriage.ini"));

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HCAJGIPA@ZtData?2Marriage?4ini?$AA@
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0001b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00020	50		 push	 eax
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?Read@CMarriage@@QAEXPAD@Z ; CMarriage::Read
$LN2@Load:
  00028	5e		 pop	 esi

; 59   : }

  00029	c3		 ret	 0
?Load@CMarriage@@QAEXXZ ENDP				; CMarriage::Load
_TEXT	ENDS
PUBLIC	??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@ ; `string'
PUBLIC	??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@ ; `string'
PUBLIC	??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@ ; `string'
PUBLIC	?NpcDialog@CMarriage@@QAE_NHH@Z			; CMarriage::NpcDialog
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
;	COMDAT ??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@
CONST	SEGMENT
??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@ DB '[Marriage] cla'
	DB	'ss1 busy', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@
CONST	SEGMENT
??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@ DB '[Marriage] cla'
	DB	'ss2 busy', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@
CONST	SEGMENT
??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@ DB '[Marriage] Married', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?NpcDialog@CMarriage@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NpcDialog@CMarriage@@QAE_NHH@Z PROC			; CMarriage::NpcDialog, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   : 	if(!this->Enable)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	75 06		 jne	 SHORT $LN8@NpcDialog

; 83   : 	{
; 84   : 		return false;

  00008	32 c0		 xor	 al, al

; 127  : }

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
$LN8@NpcDialog:

; 85   : 	}
; 86   : 
; 87   : 	LPOBJ lpUser = &gObj[aIndex];
; 88   : 	LPOBJ lpNpc = &gObj[aNpcIndex];

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _aNpcIndex$[ebp]
  00011	56		 push	 esi
  00012	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00018	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001e	57		 push	 edi
  0001f	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00022	8b d7		 mov	 edx, edi
  00024	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0002a	03 c6		 add	 eax, esi
  0002c	03 d6		 add	 edx, esi

; 89   : 
; 90   : 	if( lpNpc->Class == this->iNpcClass && 
; 91   : 		lpNpc->MapNumber == this->iNpcMap && 
; 92   : 		lpNpc->X == this->iNpcX && 
; 93   : 		lpNpc->Y == this->iNpcY )

  0002e	0f b7 b0 b8 00
	00 00		 movzx	 esi, WORD PTR [eax+184]
  00035	3b 71 04	 cmp	 esi, DWORD PTR [ecx+4]
  00038	0f 85 c7 00 00
	00		 jne	 $LN7@NpcDialog
  0003e	0f b6 b0 49 01
	00 00		 movzx	 esi, BYTE PTR [eax+329]
  00045	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00048	0f 85 b7 00 00
	00		 jne	 $LN7@NpcDialog
  0004e	0f bf b0 44 01
	00 00		 movsx	 esi, WORD PTR [eax+324]
  00055	3b 71 0c	 cmp	 esi, DWORD PTR [ecx+12]
  00058	0f 85 a7 00 00
	00		 jne	 $LN7@NpcDialog
  0005e	0f bf 80 46 01
	00 00		 movsx	 eax, WORD PTR [eax+326]
  00065	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00068	0f 85 97 00 00
	00		 jne	 $LN7@NpcDialog

; 94   : 	{
; 95   : 
; 96   : 		if(lpUser->bMarriage)

  0006e	80 ba ed 28 00
	00 00		 cmp	 BYTE PTR [edx+10477], 0
  00075	74 16		 je	 SHORT $LN6@NpcDialog

; 97   : 		{
; 98   : 			MsgOutput(aIndex, "[Marriage] Married");

  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@
  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00082	83 c4 08	 add	 esp, 8
  00085	5f		 pop	 edi

; 99   : 			return true;

  00086	b0 01		 mov	 al, 1
  00088	5e		 pop	 esi

; 127  : }

  00089	5d		 pop	 ebp
  0008a	c2 08 00	 ret	 8
$LN6@NpcDialog:

; 100  : 		}
; 101  : 
; 102  : 		if(lpUser->Class == CLASS_KNIGHT || lpUser->Class == CLASS_WIZARD || lpUser->Class == CLASS_MAGUMSA || lpUser->Class == CLASS_DARKLORD || lpUser->Class == CLASS_MONK)

  0008d	0f b7 82 b8 00
	00 00		 movzx	 eax, WORD PTR [edx+184]
  00094	83 f8 01	 cmp	 eax, 1
  00097	74 40		 je	 SHORT $LN4@NpcDialog
  00099	66 85 c0	 test	 ax, ax
  0009c	74 3b		 je	 SHORT $LN4@NpcDialog
  0009e	83 f8 03	 cmp	 eax, 3
  000a1	74 36		 je	 SHORT $LN4@NpcDialog
  000a3	83 f8 04	 cmp	 eax, 4
  000a6	74 31		 je	 SHORT $LN4@NpcDialog
  000a8	83 f8 06	 cmp	 eax, 6
  000ab	74 2c		 je	 SHORT $LN4@NpcDialog

; 110  : 		}
; 111  : 		else
; 112  : 		{
; 113  : 			if(this->iClassIndex2 != -1)

  000ad	83 79 40 ff	 cmp	 DWORD PTR [ecx+64], -1
  000b1	74 16		 je	 SHORT $LN1@NpcDialog

; 114  : 			{
; 115  : 				MsgOutput(aIndex, "[Marriage] class2 busy");

  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@
  000b8	57		 push	 edi
  000b9	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  000be	83 c4 08	 add	 esp, 8
  000c1	5f		 pop	 edi

; 116  : 				return true;

  000c2	b0 01		 mov	 al, 1
  000c4	5e		 pop	 esi

; 127  : }

  000c5	5d		 pop	 ebp
  000c6	c2 08 00	 ret	 8
$LN1@NpcDialog:

; 117  : 			}
; 118  : 			this->iClassIndex2 = aIndex;

  000c9	89 79 40	 mov	 DWORD PTR [ecx+64], edi

; 119  : 		}
; 120  : 
; 121  : 		this->GCInfoNames();

  000cc	e8 00 00 00 00	 call	 ?GCInfoNames@CMarriage@@QAEXXZ ; CMarriage::GCInfoNames
  000d1	5f		 pop	 edi

; 122  : 
; 123  : 		return true;

  000d2	b0 01		 mov	 al, 1
  000d4	5e		 pop	 esi

; 127  : }

  000d5	5d		 pop	 ebp
  000d6	c2 08 00	 ret	 8
$LN4@NpcDialog:

; 103  : 		{
; 104  : 			if(this->iClassIndex1 != -1)

  000d9	83 79 3c ff	 cmp	 DWORD PTR [ecx+60], -1
  000dd	74 16		 je	 SHORT $LN3@NpcDialog

; 105  : 			{
; 106  : 				MsgOutput(aIndex, "[Marriage] class1 busy");

  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@
  000e4	57		 push	 edi
  000e5	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  000ea	83 c4 08	 add	 esp, 8
  000ed	5f		 pop	 edi

; 107  : 				return true;

  000ee	b0 01		 mov	 al, 1
  000f0	5e		 pop	 esi

; 127  : }

  000f1	5d		 pop	 ebp
  000f2	c2 08 00	 ret	 8
$LN3@NpcDialog:

; 108  : 			}
; 109  : 			this->iClassIndex1 = aIndex;

  000f5	89 79 3c	 mov	 DWORD PTR [ecx+60], edi

; 119  : 		}
; 120  : 
; 121  : 		this->GCInfoNames();

  000f8	e8 00 00 00 00	 call	 ?GCInfoNames@CMarriage@@QAEXXZ ; CMarriage::GCInfoNames
  000fd	5f		 pop	 edi

; 122  : 
; 123  : 		return true;

  000fe	b0 01		 mov	 al, 1
  00100	5e		 pop	 esi

; 127  : }

  00101	5d		 pop	 ebp
  00102	c2 08 00	 ret	 8
$LN7@NpcDialog:
  00105	5f		 pop	 edi

; 124  : 	}
; 125  : 
; 126  : 	return false;

  00106	32 c0		 xor	 al, al
  00108	5e		 pop	 esi

; 127  : }

  00109	5d		 pop	 ebp
  0010a	c2 08 00	 ret	 8
?NpcDialog@CMarriage@@QAE_NHH@Z ENDP			; CMarriage::NpcDialog
_TEXT	ENDS
PUBLIC	?CGClickOK@CMarriage@@QAEXH@Z			; CMarriage::CGClickOK
; Function compile flags: /Ogtp
;	COMDAT ?CGClickOK@CMarriage@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?CGClickOK@CMarriage@@QAEXH@Z PROC			; CMarriage::CGClickOK, COMDAT
; _this$ = ecx

; 227  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 228  : 	if(!this->Enable)

  00006	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00009	0f 84 80 00 00
	00		 je	 $LN1@CGClickOK

; 229  : 	{
; 230  : 		return;
; 231  : 	}
; 232  : 
; 233  : 	if(!OBJMAX_RANGE(aIndex))

  0000f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00012	85 c0		 test	 eax, eax
  00014	78 79		 js	 SHORT $LN1@CGClickOK
  00016	33 c9		 xor	 ecx, ecx
  00018	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001d	0f 9e c1	 setle	 cl
  00020	85 c9		 test	 ecx, ecx
  00022	74 6b		 je	 SHORT $LN1@CGClickOK

; 234  : 	{
; 235  : 		return;
; 236  : 	}
; 237  : 
; 238  : 	if (gObj[aIndex].Connected < PLAYER_PLAYING)

  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002a	8b c8		 mov	 ecx, eax
  0002c	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00032	83 7c 11 04 03	 cmp	 DWORD PTR [ecx+edx+4], 3
  00037	7c 56		 jl	 SHORT $LN1@CGClickOK

; 239  : 	{
; 240  : 		return;
; 241  : 	}
; 242  : 
; 243  : 	if(aIndex == this->iClassIndex1)

  00039	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  0003c	53		 push	 ebx
  0003d	b3 01		 mov	 bl, 1
  0003f	3b c1		 cmp	 eax, ecx
  00041	75 03		 jne	 SHORT $LN4@CGClickOK

; 244  : 	{
; 245  : 		this->bClickOK1 = true;

  00043	88 5e 44	 mov	 BYTE PTR [esi+68], bl
$LN4@CGClickOK:

; 246  : 	}
; 247  : 
; 248  : 	if(aIndex == this->iClassIndex2)

  00046	8b 56 40	 mov	 edx, DWORD PTR [esi+64]
  00049	3b c2		 cmp	 eax, edx
  0004b	75 03		 jne	 SHORT $LN3@CGClickOK

; 249  : 	{
; 250  : 		this->bClickOK2 = true;

  0004d	88 5e 45	 mov	 BYTE PTR [esi+69], bl
$LN3@CGClickOK:

; 251  : 	}
; 252  : 
; 253  : 	if(OBJMAX_RANGE(this->iClassIndex1) && OBJMAX_RANGE(this->iClassIndex2))

  00050	85 c9		 test	 ecx, ecx
  00052	78 3a		 js	 SHORT $LN16@CGClickOK
  00054	33 c0		 xor	 eax, eax
  00056	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  0005c	0f 9e c0	 setle	 al
  0005f	85 c0		 test	 eax, eax
  00061	74 2b		 je	 SHORT $LN16@CGClickOK
  00063	85 d2		 test	 edx, edx
  00065	78 27		 js	 SHORT $LN16@CGClickOK
  00067	33 c0		 xor	 eax, eax
  00069	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  0006f	0f 9e c0	 setle	 al
  00072	85 c0		 test	 eax, eax
  00074	74 18		 je	 SHORT $LN16@CGClickOK

; 254  : 	{
; 255  : 		if(this->bClickOK1 == true && this->bClickOK2 == true)

  00076	38 5e 44	 cmp	 BYTE PTR [esi+68], bl
  00079	75 13		 jne	 SHORT $LN16@CGClickOK
  0007b	38 5e 45	 cmp	 BYTE PTR [esi+69], bl
  0007e	75 0e		 jne	 SHORT $LN16@CGClickOK

; 256  : 		{
; 257  : 			this->GDInsert();

  00080	8b ce		 mov	 ecx, esi
  00082	e8 00 00 00 00	 call	 ?GDInsert@CMarriage@@QAEXXZ ; CMarriage::GDInsert

; 258  : 			this->CGWindowClose();

  00087	8b ce		 mov	 ecx, esi
  00089	e8 00 00 00 00	 call	 ?CGWindowClose@CMarriage@@QAEXXZ ; CMarriage::CGWindowClose
$LN16@CGClickOK:
  0008e	5b		 pop	 ebx
$LN1@CGClickOK:
  0008f	5e		 pop	 esi

; 259  : 		}
; 260  : 	}
; 261  : }

  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
?CGClickOK@CMarriage@@QAEXH@Z ENDP			; CMarriage::CGClickOK
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_Marriage@@YAXXZ
text$yc	SEGMENT
??__Eg_Marriage@@YAXXZ PROC				; `dynamic initializer for 'g_Marriage'', COMDAT

; 15   : CMarriage g_Marriage;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Marriage@@3VCMarriage@@A ; g_Marriage
  00005	e8 00 00 00 00	 call	 ??0CMarriage@@QAE@XZ	; CMarriage::CMarriage
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_Marriage@@YAXXZ ; `dynamic atexit destructor for 'g_Marriage''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_Marriage@@YAXXZ ENDP				; `dynamic initializer for 'g_Marriage''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_Marriage@@YAXXZ
text$yd	SEGMENT
??__Fg_Marriage@@YAXXZ PROC				; `dynamic atexit destructor for 'g_Marriage'', COMDAT
  00000	c3		 ret	 0
??__Fg_Marriage@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_Marriage''
text$yd	ENDS
PUBLIC	?g_Marriage@@3VCMarriage@@A			; g_Marriage
_BSS	SEGMENT
?g_Marriage@@3VCMarriage@@A DB 048H DUP (?)		; g_Marriage
_BSS	ENDS
CRT$XCU	SEGMENT
_g_Marriage$initializer$ DD FLAT:??__Eg_Marriage@@YAXXZ
CRT$XCU	ENDS
END
