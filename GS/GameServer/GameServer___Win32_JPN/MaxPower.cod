; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\MaxPower.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gMaxPower@@3VcMaxPower@@A			; gMaxPower
_BSS	SEGMENT
?gMaxPower@@3VcMaxPower@@A DB 0138H DUP (?)		; gMaxPower
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_07OABJPIEF@MaxSdRF?$AA@			; `string'
PUBLIC	??_C@_09DMFNNCEF@MaxLifeRF?$AA@			; `string'
PUBLIC	??_C@_0BC@KLPOGMFL@MaxWizardDamageRF?$AA@	; `string'
PUBLIC	??_C@_0BH@JIBNFEOA@MaxReflectDamageRateRF?$AA@	; `string'
PUBLIC	??_C@_0BG@HHJPFLFI@MaxAbsordDamageRateRF?$AA@	; `string'
PUBLIC	??_C@_0BG@CANOIKBE@MaxDoubleDamageRateRF?$AA@	; `string'
PUBLIC	??_C@_0BI@IHINJPIK@MaxExellentDamageRateRF?$AA@	; `string'
PUBLIC	??_C@_0BI@FJMCLMKO@MaxCriticalDamageRateRF?$AA@	; `string'
PUBLIC	??_C@_0BH@OEHAFBFC@MaxIgnoreDefenceRateRF?$AA@	; `string'
PUBLIC	??_C@_0N@JKBMAEON@MaxDefenceRF?$AA@		; `string'
PUBLIC	??_C@_0M@GCFLONP@MaxDamageRF?$AA@		; `string'
PUBLIC	??_C@_08OFFNOHOD@MaxSdSUM?$AA@			; `string'
PUBLIC	??_C@_0L@OFIBKDMJ@MaxLifeSUM?$AA@		; `string'
PUBLIC	??_C@_0BD@BPBJDNBE@MaxWizardDamageSUM?$AA@	; `string'
PUBLIC	??_C@_0BI@EDJJLECI@MaxReflectDamageRateSUM?$AA@	; `string'
PUBLIC	??_C@_0BH@IGMMANJJ@MaxAbsordDamageRateSUM?$AA@	; `string'
PUBLIC	??_C@_0BH@PJPBEBPD@MaxDoubleDamageRateSUM?$AA@	; `string'
PUBLIC	??_C@_0BJ@OOOBKMKF@MaxExellentDamageRateSUM?$AA@ ; `string'
PUBLIC	??_C@_0BJ@NCDMAHFH@MaxCriticalDamageRateSUM?$AA@ ; `string'
PUBLIC	??_C@_0BI@GGIKALIN@MaxIgnoreDefenceRateSUM?$AA@	; `string'
PUBLIC	??_C@_0O@DNCKMJMF@MaxDefenceSUM?$AA@		; `string'
PUBLIC	??_C@_0N@PFGBKBPP@MaxDamageSUM?$AA@		; `string'
PUBLIC	??_C@_07CFNMPAN@MaxSdDL?$AA@			; `string'
PUBLIC	??_C@_09NOBJOFAN@MaxLifeDL?$AA@			; `string'
PUBLIC	??_C@_0BC@EJLKFLBD@MaxWizardDamageDL?$AA@	; `string'
PUBLIC	??_C@_0BH@HKFJGDKI@MaxReflectDamageRateDL?$AA@	; `string'
PUBLIC	??_C@_0BG@JFNLGMBA@MaxAbsordDamageRateDL?$AA@	; `string'
PUBLIC	??_C@_0BG@MCJKLNFM@MaxDoubleDamageRateDL?$AA@	; `string'
PUBLIC	??_C@_0BI@GFMJKIMC@MaxExellentDamageRateDL?$AA@	; `string'
PUBLIC	??_C@_0BI@LLIGILOG@MaxCriticalDamageRateDL?$AA@	; `string'
PUBLIC	??_C@_0BH@GDEGGBK@MaxIgnoreDefenceRateDL?$AA@	; `string'
PUBLIC	??_C@_0N@HIFIDDKF@MaxDefenceDL?$AA@		; `string'
PUBLIC	??_C@_0M@OEGBIJJH@MaxDamageDL?$AA@		; `string'
PUBLIC	??_C@_07OOHICNEJ@MaxSdMG?$AA@			; `string'
PUBLIC	??_C@_09DCDMAHEJ@MaxLifeMG?$AA@			; `string'
PUBLIC	??_C@_0BC@KFJPLJFH@MaxWizardDamageMG?$AA@	; `string'
PUBLIC	??_C@_0BH@JGHMIBOM@MaxReflectDamageRateMG?$AA@	; `string'
PUBLIC	??_C@_0BG@HJPOIOFE@MaxAbsordDamageRateMG?$AA@	; `string'
PUBLIC	??_C@_0BG@COLPFPBI@MaxDoubleDamageRateMG?$AA@	; `string'
PUBLIC	??_C@_0BI@IJOMEKIG@MaxExellentDamageRateMG?$AA@	; `string'
PUBLIC	??_C@_0BI@FHKDGJKC@MaxCriticalDamageRateMG?$AA@	; `string'
PUBLIC	??_C@_0BH@OKBBIEFO@MaxIgnoreDefenceRateMG?$AA@	; `string'
PUBLIC	??_C@_0N@JEHNNBOB@MaxDefenceMG?$AA@		; `string'
PUBLIC	??_C@_0M@IEEGLND@MaxDamageMG?$AA@		; `string'
PUBLIC	??_C@_08MNOFMMNG@MaxSdElf?$AA@			; `string'
PUBLIC	??_C@_0L@MNDJIIPM@MaxLifeElf?$AA@		; `string'
PUBLIC	??_C@_0BD@DHKBBGCB@MaxWizardDamageElf?$AA@	; `string'
PUBLIC	??_C@_0BI@GLCBJPBN@MaxReflectDamageRateElf?$AA@	; `string'
PUBLIC	??_C@_0BH@KOHECGKM@MaxAbsordDamageRateElf?$AA@	; `string'
PUBLIC	??_C@_0BH@NBEJGKMG@MaxDoubleDamageRateElf?$AA@	; `string'
PUBLIC	??_C@_0BJ@MGFJIHJA@MaxExellentDamageRateElf?$AA@ ; `string'
PUBLIC	??_C@_0BJ@PKIECMGC@MaxCriticalDamageRateElf?$AA@ ; `string'
PUBLIC	??_C@_0BI@EODCCALI@MaxIgnoreDefenceRateElf?$AA@	; `string'
PUBLIC	??_C@_0O@BFJCOCPA@MaxDefenceElf?$AA@		; `string'
PUBLIC	??_C@_0N@NNNJIKMK@MaxDamageElf?$AA@		; `string'
PUBLIC	??_C@_07KLGLAEJH@MaxSdDW?$AA@			; `string'
PUBLIC	??_C@_09HHCPCOJH@MaxLifeDW?$AA@			; `string'
PUBLIC	??_C@_0BC@OAIMJAIJ@MaxWizardDamageDW?$AA@	; `string'
PUBLIC	??_C@_0BH@NDGPKIDC@MaxReflectDamageRateDW?$AA@	; `string'
PUBLIC	??_C@_0BG@DMONKHIK@MaxAbsordDamageRateDW?$AA@	; `string'
PUBLIC	??_C@_0BG@GLKMHGMG@MaxDoubleDamageRateDW?$AA@	; `string'
PUBLIC	??_C@_0BI@MMPPGDFI@MaxExellentDamageRateDW?$AA@	; `string'
PUBLIC	??_C@_0BI@BCLAEAHM@MaxCriticalDamageRateDW?$AA@	; `string'
PUBLIC	??_C@_0BH@KPACKNIA@MaxIgnoreDefenceRateDW?$AA@	; `string'
PUBLIC	??_C@_0N@NBGOPIDP@MaxDefenceDW?$AA@		; `string'
PUBLIC	??_C@_0M@ENFHECAN@MaxDamageDW?$AA@		; `string'
PUBLIC	??_C@_07ENBMFJMK@MaxSdDK?$AA@			; `string'
PUBLIC	??_C@_09JBFIHDMK@MaxLifeDK?$AA@			; `string'
PUBLIC	??_C@_0BC@GPLMNNE@MaxWizardDamageDK?$AA@	; `string'
PUBLIC	??_C@_0BH@DFBIPFGP@MaxReflectDamageRateDK?$AA@	; `string'
PUBLIC	??_C@_0BG@NKJKPKNH@MaxAbsordDamageRateDK?$AA@	; `string'
PUBLIC	??_C@_0BG@INNLCLJL@MaxDoubleDamageRateDK?$AA@	; `string'
PUBLIC	??_C@_0BI@CKIIDOAF@MaxExellentDamageRateDK?$AA@	; `string'
PUBLIC	??_C@_0BI@PEMHBNCB@MaxCriticalDamageRateDK?$AA@	; `string'
PUBLIC	??_C@_0BH@EJHFPANN@MaxIgnoreDefenceRateDK?$AA@	; `string'
PUBLIC	??_C@_0N@DHBJKFGC@MaxDefenceDK?$AA@		; `string'
PUBLIC	??_C@_0M@KLCABPFA@MaxDamageDK?$AA@		; `string'
PUBLIC	??_C@_06CNKIADGI@ZtTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@ ; `string'
PUBLIC	?Load@cMaxPower@@QAEXXZ				; cMaxPower::Load
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_07OABJPIEF@MaxSdRF?$AA@
; File e:\work\tranet_version\gs\gameserver\maxpower.cpp
CONST	SEGMENT
??_C@_07OABJPIEF@MaxSdRF?$AA@ DB 'MaxSdRF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DMFNNCEF@MaxLifeRF?$AA@
CONST	SEGMENT
??_C@_09DMFNNCEF@MaxLifeRF?$AA@ DB 'MaxLifeRF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLPOGMFL@MaxWizardDamageRF?$AA@
CONST	SEGMENT
??_C@_0BC@KLPOGMFL@MaxWizardDamageRF?$AA@ DB 'MaxWizardDamageRF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JIBNFEOA@MaxReflectDamageRateRF?$AA@
CONST	SEGMENT
??_C@_0BH@JIBNFEOA@MaxReflectDamageRateRF?$AA@ DB 'MaxReflectDamageRateRF'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HHJPFLFI@MaxAbsordDamageRateRF?$AA@
CONST	SEGMENT
??_C@_0BG@HHJPFLFI@MaxAbsordDamageRateRF?$AA@ DB 'MaxAbsordDamageRateRF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CANOIKBE@MaxDoubleDamageRateRF?$AA@
CONST	SEGMENT
??_C@_0BG@CANOIKBE@MaxDoubleDamageRateRF?$AA@ DB 'MaxDoubleDamageRateRF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IHINJPIK@MaxExellentDamageRateRF?$AA@
CONST	SEGMENT
??_C@_0BI@IHINJPIK@MaxExellentDamageRateRF?$AA@ DB 'MaxExellentDamageRate'
	DB	'RF', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FJMCLMKO@MaxCriticalDamageRateRF?$AA@
CONST	SEGMENT
??_C@_0BI@FJMCLMKO@MaxCriticalDamageRateRF?$AA@ DB 'MaxCriticalDamageRate'
	DB	'RF', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OEHAFBFC@MaxIgnoreDefenceRateRF?$AA@
CONST	SEGMENT
??_C@_0BH@OEHAFBFC@MaxIgnoreDefenceRateRF?$AA@ DB 'MaxIgnoreDefenceRateRF'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JKBMAEON@MaxDefenceRF?$AA@
CONST	SEGMENT
??_C@_0N@JKBMAEON@MaxDefenceRF?$AA@ DB 'MaxDefenceRF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCFLONP@MaxDamageRF?$AA@
CONST	SEGMENT
??_C@_0M@GCFLONP@MaxDamageRF?$AA@ DB 'MaxDamageRF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFFNOHOD@MaxSdSUM?$AA@
CONST	SEGMENT
??_C@_08OFFNOHOD@MaxSdSUM?$AA@ DB 'MaxSdSUM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OFIBKDMJ@MaxLifeSUM?$AA@
CONST	SEGMENT
??_C@_0L@OFIBKDMJ@MaxLifeSUM?$AA@ DB 'MaxLifeSUM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BPBJDNBE@MaxWizardDamageSUM?$AA@
CONST	SEGMENT
??_C@_0BD@BPBJDNBE@MaxWizardDamageSUM?$AA@ DB 'MaxWizardDamageSUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EDJJLECI@MaxReflectDamageRateSUM?$AA@
CONST	SEGMENT
??_C@_0BI@EDJJLECI@MaxReflectDamageRateSUM?$AA@ DB 'MaxReflectDamageRateS'
	DB	'UM', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IGMMANJJ@MaxAbsordDamageRateSUM?$AA@
CONST	SEGMENT
??_C@_0BH@IGMMANJJ@MaxAbsordDamageRateSUM?$AA@ DB 'MaxAbsordDamageRateSUM'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PJPBEBPD@MaxDoubleDamageRateSUM?$AA@
CONST	SEGMENT
??_C@_0BH@PJPBEBPD@MaxDoubleDamageRateSUM?$AA@ DB 'MaxDoubleDamageRateSUM'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OOOBKMKF@MaxExellentDamageRateSUM?$AA@
CONST	SEGMENT
??_C@_0BJ@OOOBKMKF@MaxExellentDamageRateSUM?$AA@ DB 'MaxExellentDamageRat'
	DB	'eSUM', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NCDMAHFH@MaxCriticalDamageRateSUM?$AA@
CONST	SEGMENT
??_C@_0BJ@NCDMAHFH@MaxCriticalDamageRateSUM?$AA@ DB 'MaxCriticalDamageRat'
	DB	'eSUM', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GGIKALIN@MaxIgnoreDefenceRateSUM?$AA@
CONST	SEGMENT
??_C@_0BI@GGIKALIN@MaxIgnoreDefenceRateSUM?$AA@ DB 'MaxIgnoreDefenceRateS'
	DB	'UM', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DNCKMJMF@MaxDefenceSUM?$AA@
CONST	SEGMENT
??_C@_0O@DNCKMJMF@MaxDefenceSUM?$AA@ DB 'MaxDefenceSUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFGBKBPP@MaxDamageSUM?$AA@
CONST	SEGMENT
??_C@_0N@PFGBKBPP@MaxDamageSUM?$AA@ DB 'MaxDamageSUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CFNMPAN@MaxSdDL?$AA@
CONST	SEGMENT
??_C@_07CFNMPAN@MaxSdDL?$AA@ DB 'MaxSdDL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NOBJOFAN@MaxLifeDL?$AA@
CONST	SEGMENT
??_C@_09NOBJOFAN@MaxLifeDL?$AA@ DB 'MaxLifeDL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJLKFLBD@MaxWizardDamageDL?$AA@
CONST	SEGMENT
??_C@_0BC@EJLKFLBD@MaxWizardDamageDL?$AA@ DB 'MaxWizardDamageDL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HKFJGDKI@MaxReflectDamageRateDL?$AA@
CONST	SEGMENT
??_C@_0BH@HKFJGDKI@MaxReflectDamageRateDL?$AA@ DB 'MaxReflectDamageRateDL'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JFNLGMBA@MaxAbsordDamageRateDL?$AA@
CONST	SEGMENT
??_C@_0BG@JFNLGMBA@MaxAbsordDamageRateDL?$AA@ DB 'MaxAbsordDamageRateDL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCJKLNFM@MaxDoubleDamageRateDL?$AA@
CONST	SEGMENT
??_C@_0BG@MCJKLNFM@MaxDoubleDamageRateDL?$AA@ DB 'MaxDoubleDamageRateDL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GFMJKIMC@MaxExellentDamageRateDL?$AA@
CONST	SEGMENT
??_C@_0BI@GFMJKIMC@MaxExellentDamageRateDL?$AA@ DB 'MaxExellentDamageRate'
	DB	'DL', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LLIGILOG@MaxCriticalDamageRateDL?$AA@
CONST	SEGMENT
??_C@_0BI@LLIGILOG@MaxCriticalDamageRateDL?$AA@ DB 'MaxCriticalDamageRate'
	DB	'DL', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDEGGBK@MaxIgnoreDefenceRateDL?$AA@
CONST	SEGMENT
??_C@_0BH@GDEGGBK@MaxIgnoreDefenceRateDL?$AA@ DB 'MaxIgnoreDefenceRateDL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HIFIDDKF@MaxDefenceDL?$AA@
CONST	SEGMENT
??_C@_0N@HIFIDDKF@MaxDefenceDL?$AA@ DB 'MaxDefenceDL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OEGBIJJH@MaxDamageDL?$AA@
CONST	SEGMENT
??_C@_0M@OEGBIJJH@MaxDamageDL?$AA@ DB 'MaxDamageDL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OOHICNEJ@MaxSdMG?$AA@
CONST	SEGMENT
??_C@_07OOHICNEJ@MaxSdMG?$AA@ DB 'MaxSdMG', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DCDMAHEJ@MaxLifeMG?$AA@
CONST	SEGMENT
??_C@_09DCDMAHEJ@MaxLifeMG?$AA@ DB 'MaxLifeMG', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KFJPLJFH@MaxWizardDamageMG?$AA@
CONST	SEGMENT
??_C@_0BC@KFJPLJFH@MaxWizardDamageMG?$AA@ DB 'MaxWizardDamageMG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JGHMIBOM@MaxReflectDamageRateMG?$AA@
CONST	SEGMENT
??_C@_0BH@JGHMIBOM@MaxReflectDamageRateMG?$AA@ DB 'MaxReflectDamageRateMG'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HJPOIOFE@MaxAbsordDamageRateMG?$AA@
CONST	SEGMENT
??_C@_0BG@HJPOIOFE@MaxAbsordDamageRateMG?$AA@ DB 'MaxAbsordDamageRateMG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@COLPFPBI@MaxDoubleDamageRateMG?$AA@
CONST	SEGMENT
??_C@_0BG@COLPFPBI@MaxDoubleDamageRateMG?$AA@ DB 'MaxDoubleDamageRateMG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IJOMEKIG@MaxExellentDamageRateMG?$AA@
CONST	SEGMENT
??_C@_0BI@IJOMEKIG@MaxExellentDamageRateMG?$AA@ DB 'MaxExellentDamageRate'
	DB	'MG', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FHKDGJKC@MaxCriticalDamageRateMG?$AA@
CONST	SEGMENT
??_C@_0BI@FHKDGJKC@MaxCriticalDamageRateMG?$AA@ DB 'MaxCriticalDamageRate'
	DB	'MG', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OKBBIEFO@MaxIgnoreDefenceRateMG?$AA@
CONST	SEGMENT
??_C@_0BH@OKBBIEFO@MaxIgnoreDefenceRateMG?$AA@ DB 'MaxIgnoreDefenceRateMG'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JEHNNBOB@MaxDefenceMG?$AA@
CONST	SEGMENT
??_C@_0N@JEHNNBOB@MaxDefenceMG?$AA@ DB 'MaxDefenceMG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEEGLND@MaxDamageMG?$AA@
CONST	SEGMENT
??_C@_0M@IEEGLND@MaxDamageMG?$AA@ DB 'MaxDamageMG', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MNOFMMNG@MaxSdElf?$AA@
CONST	SEGMENT
??_C@_08MNOFMMNG@MaxSdElf?$AA@ DB 'MaxSdElf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MNDJIIPM@MaxLifeElf?$AA@
CONST	SEGMENT
??_C@_0L@MNDJIIPM@MaxLifeElf?$AA@ DB 'MaxLifeElf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHKBBGCB@MaxWizardDamageElf?$AA@
CONST	SEGMENT
??_C@_0BD@DHKBBGCB@MaxWizardDamageElf?$AA@ DB 'MaxWizardDamageElf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GLCBJPBN@MaxReflectDamageRateElf?$AA@
CONST	SEGMENT
??_C@_0BI@GLCBJPBN@MaxReflectDamageRateElf?$AA@ DB 'MaxReflectDamageRateE'
	DB	'lf', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KOHECGKM@MaxAbsordDamageRateElf?$AA@
CONST	SEGMENT
??_C@_0BH@KOHECGKM@MaxAbsordDamageRateElf?$AA@ DB 'MaxAbsordDamageRateElf'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NBEJGKMG@MaxDoubleDamageRateElf?$AA@
CONST	SEGMENT
??_C@_0BH@NBEJGKMG@MaxDoubleDamageRateElf?$AA@ DB 'MaxDoubleDamageRateElf'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MGFJIHJA@MaxExellentDamageRateElf?$AA@
CONST	SEGMENT
??_C@_0BJ@MGFJIHJA@MaxExellentDamageRateElf?$AA@ DB 'MaxExellentDamageRat'
	DB	'eElf', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PKIECMGC@MaxCriticalDamageRateElf?$AA@
CONST	SEGMENT
??_C@_0BJ@PKIECMGC@MaxCriticalDamageRateElf?$AA@ DB 'MaxCriticalDamageRat'
	DB	'eElf', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EODCCALI@MaxIgnoreDefenceRateElf?$AA@
CONST	SEGMENT
??_C@_0BI@EODCCALI@MaxIgnoreDefenceRateElf?$AA@ DB 'MaxIgnoreDefenceRateE'
	DB	'lf', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCOCPA@MaxDefenceElf?$AA@
CONST	SEGMENT
??_C@_0O@BFJCOCPA@MaxDefenceElf?$AA@ DB 'MaxDefenceElf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NNNJIKMK@MaxDamageElf?$AA@
CONST	SEGMENT
??_C@_0N@NNNJIKMK@MaxDamageElf?$AA@ DB 'MaxDamageElf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KLGLAEJH@MaxSdDW?$AA@
CONST	SEGMENT
??_C@_07KLGLAEJH@MaxSdDW?$AA@ DB 'MaxSdDW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HHCPCOJH@MaxLifeDW?$AA@
CONST	SEGMENT
??_C@_09HHCPCOJH@MaxLifeDW?$AA@ DB 'MaxLifeDW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OAIMJAIJ@MaxWizardDamageDW?$AA@
CONST	SEGMENT
??_C@_0BC@OAIMJAIJ@MaxWizardDamageDW?$AA@ DB 'MaxWizardDamageDW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NDGPKIDC@MaxReflectDamageRateDW?$AA@
CONST	SEGMENT
??_C@_0BH@NDGPKIDC@MaxReflectDamageRateDW?$AA@ DB 'MaxReflectDamageRateDW'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DMONKHIK@MaxAbsordDamageRateDW?$AA@
CONST	SEGMENT
??_C@_0BG@DMONKHIK@MaxAbsordDamageRateDW?$AA@ DB 'MaxAbsordDamageRateDW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GLKMHGMG@MaxDoubleDamageRateDW?$AA@
CONST	SEGMENT
??_C@_0BG@GLKMHGMG@MaxDoubleDamageRateDW?$AA@ DB 'MaxDoubleDamageRateDW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MMPPGDFI@MaxExellentDamageRateDW?$AA@
CONST	SEGMENT
??_C@_0BI@MMPPGDFI@MaxExellentDamageRateDW?$AA@ DB 'MaxExellentDamageRate'
	DB	'DW', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BCLAEAHM@MaxCriticalDamageRateDW?$AA@
CONST	SEGMENT
??_C@_0BI@BCLAEAHM@MaxCriticalDamageRateDW?$AA@ DB 'MaxCriticalDamageRate'
	DB	'DW', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPACKNIA@MaxIgnoreDefenceRateDW?$AA@
CONST	SEGMENT
??_C@_0BH@KPACKNIA@MaxIgnoreDefenceRateDW?$AA@ DB 'MaxIgnoreDefenceRateDW'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBGOPIDP@MaxDefenceDW?$AA@
CONST	SEGMENT
??_C@_0N@NBGOPIDP@MaxDefenceDW?$AA@ DB 'MaxDefenceDW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ENFHECAN@MaxDamageDW?$AA@
CONST	SEGMENT
??_C@_0M@ENFHECAN@MaxDamageDW?$AA@ DB 'MaxDamageDW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ENBMFJMK@MaxSdDK?$AA@
CONST	SEGMENT
??_C@_07ENBMFJMK@MaxSdDK?$AA@ DB 'MaxSdDK', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JBFIHDMK@MaxLifeDK?$AA@
CONST	SEGMENT
??_C@_09JBFIHDMK@MaxLifeDK?$AA@ DB 'MaxLifeDK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GPLMNNE@MaxWizardDamageDK?$AA@
CONST	SEGMENT
??_C@_0BC@GPLMNNE@MaxWizardDamageDK?$AA@ DB 'MaxWizardDamageDK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DFBIPFGP@MaxReflectDamageRateDK?$AA@
CONST	SEGMENT
??_C@_0BH@DFBIPFGP@MaxReflectDamageRateDK?$AA@ DB 'MaxReflectDamageRateDK'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NKJKPKNH@MaxAbsordDamageRateDK?$AA@
CONST	SEGMENT
??_C@_0BG@NKJKPKNH@MaxAbsordDamageRateDK?$AA@ DB 'MaxAbsordDamageRateDK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@INNLCLJL@MaxDoubleDamageRateDK?$AA@
CONST	SEGMENT
??_C@_0BG@INNLCLJL@MaxDoubleDamageRateDK?$AA@ DB 'MaxDoubleDamageRateDK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CKIIDOAF@MaxExellentDamageRateDK?$AA@
CONST	SEGMENT
??_C@_0BI@CKIIDOAF@MaxExellentDamageRateDK?$AA@ DB 'MaxExellentDamageRate'
	DB	'DK', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PEMHBNCB@MaxCriticalDamageRateDK?$AA@
CONST	SEGMENT
??_C@_0BI@PEMHBNCB@MaxCriticalDamageRateDK?$AA@ DB 'MaxCriticalDamageRate'
	DB	'DK', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EJHFPANN@MaxIgnoreDefenceRateDK?$AA@
CONST	SEGMENT
??_C@_0BH@EJHFPANN@MaxIgnoreDefenceRateDK?$AA@ DB 'MaxIgnoreDefenceRateDK'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DHBJKFGC@MaxDefenceDK?$AA@
CONST	SEGMENT
??_C@_0N@DHBJKFGC@MaxDefenceDK?$AA@ DB 'MaxDefenceDK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KLCABPFA@MaxDamageDK?$AA@
CONST	SEGMENT
??_C@_0M@KLCABPFA@MaxDamageDK?$AA@ DB 'MaxDamageDK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CNKIADGI@ZtTeam?$AA@
CONST	SEGMENT
??_C@_06CNKIADGI@ZtTeam?$AA@ DB 'ZtTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
CONST	SEGMENT
??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@ DB '..\Data\ZtD'
	DB	'ata\MaxPower.ini', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@cMaxPower@@QAEXXZ
_TEXT	SEGMENT
?Load@cMaxPower@@QAEXXZ PROC				; cMaxPower::Load, COMDAT
; _this$ = ecx

; 9    : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 10   : 
; 11   : 	//CheckFile(MaxPower_Dir);
; 12   : 
; 13   : 	this->Enable = GetPrivateProfileInt("ZtTeam","Enable",0,MaxPower_Dir);

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0000d	6a 00		 push	 0
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00019	8b f1		 mov	 esi, ecx
  0001b	ff d7		 call	 edi

; 14   : 
; 15   : 	//-> DK
; 16   : 	this->MaxDamageDK = GetPrivateProfileInt("ZtTeam","MaxDamageDK",0,MaxPower_Dir);

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00022	6a 00		 push	 0
  00024	85 c0		 test	 eax, eax
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KLCABPFA@MaxDamageDK?$AA@
  0002b	0f 95 c0	 setne	 al
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00033	88 06		 mov	 BYTE PTR [esi], al
  00035	ff d7		 call	 edi

; 17   : 	this->MaxDefenceDK = GetPrivateProfileInt("ZtTeam","MaxDefenceDK",0,MaxPower_Dir);

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0003c	6a 00		 push	 0
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DHBJKFGC@MaxDefenceDK?$AA@
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00048	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0004b	ff d7		 call	 edi

; 18   : 	this->MaxIgnoreDefenceRateDK = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateDK",0,MaxPower_Dir);

  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00052	6a 00		 push	 0
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EJHFPANN@MaxIgnoreDefenceRateDK?$AA@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0005e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00061	ff d7		 call	 edi

; 19   : 	this->MaxCriticalDamageRateDK = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateDK",0,MaxPower_Dir);

  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00068	6a 00		 push	 0
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@PEMHBNCB@MaxCriticalDamageRateDK?$AA@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00074	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00077	ff d7		 call	 edi

; 20   : 	this->MaxExellentDamageRateDK = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateDK",0,MaxPower_Dir);

  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0007e	6a 00		 push	 0
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CKIIDOAF@MaxExellentDamageRateDK?$AA@
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0008a	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0008d	ff d7		 call	 edi

; 21   : 	this->MaxDoubleDamageRateDK = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateDK",0,MaxPower_Dir);

  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00094	6a 00		 push	 0
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@INNLCLJL@MaxDoubleDamageRateDK?$AA@
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000a0	89 46 14	 mov	 DWORD PTR [esi+20], eax
  000a3	ff d7		 call	 edi

; 22   : 	this->MaxAbsordDamageRateDK = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateDK",0,MaxPower_Dir);

  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  000aa	6a 00		 push	 0
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NKJKPKNH@MaxAbsordDamageRateDK?$AA@
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000b6	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000b9	ff d7		 call	 edi

; 23   : 	this->MaxReflectDamageRateDK = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateDK",0,MaxPower_Dir);

  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  000c0	6a 00		 push	 0
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DFBIPFGP@MaxReflectDamageRateDK?$AA@
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000cc	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000cf	ff d7		 call	 edi

; 24   : 	this->MaxWizardDamageDK = GetPrivateProfileInt("ZtTeam","MaxWizardDamageDK",0,MaxPower_Dir);

  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  000d6	6a 00		 push	 0
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GPLMNNE@MaxWizardDamageDK?$AA@
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000e2	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000e5	ff d7		 call	 edi

; 25   : 	this->MaxLifeDK = GetPrivateProfileInt("ZtTeam","MaxLifeDK",0,MaxPower_Dir);

  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  000ec	6a 00		 push	 0
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_09JBFIHDMK@MaxLifeDK?$AA@
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000f8	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000fb	ff d7		 call	 edi

; 26   : 	this->MaxSdDK = GetPrivateProfileInt("ZtTeam","MaxSdDK",0,MaxPower_Dir);

  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00102	6a 00		 push	 0
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_07ENBMFJMK@MaxSdDK?$AA@
  00109	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0010e	89 46 28	 mov	 DWORD PTR [esi+40], eax
  00111	ff d7		 call	 edi

; 27   : 
; 28   : 	//-> DW
; 29   : 	this->MaxDamageDW = GetPrivateProfileInt("ZtTeam","MaxDamageDW",0,MaxPower_Dir);

  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00118	6a 00		 push	 0
  0011a	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  0011d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ENFHECAN@MaxDamageDW?$AA@
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00127	ff d7		 call	 edi

; 30   : 	this->MaxDefenceDW = GetPrivateProfileInt("ZtTeam","MaxDefenceDW",0,MaxPower_Dir);

  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0012e	6a 00		 push	 0
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NBGOPIDP@MaxDefenceDW?$AA@
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0013a	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0013d	ff d7		 call	 edi

; 31   : 	this->MaxIgnoreDefenceRateDW = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateDW",0,MaxPower_Dir);

  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00144	6a 00		 push	 0
  00146	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KPACKNIA@MaxIgnoreDefenceRateDW?$AA@
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00150	89 46 34	 mov	 DWORD PTR [esi+52], eax
  00153	ff d7		 call	 edi

; 32   : 	this->MaxCriticalDamageRateDW = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateDW",0,MaxPower_Dir);

  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0015a	6a 00		 push	 0
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BCLAEAHM@MaxCriticalDamageRateDW?$AA@
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00166	89 46 38	 mov	 DWORD PTR [esi+56], eax
  00169	ff d7		 call	 edi

; 33   : 	this->MaxExellentDamageRateDW = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateDW",0,MaxPower_Dir);

  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00170	6a 00		 push	 0
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MMPPGDFI@MaxExellentDamageRateDW?$AA@
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0017c	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  0017f	ff d7		 call	 edi

; 34   : 	this->MaxDoubleDamageRateDW = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateDW",0,MaxPower_Dir);

  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00186	6a 00		 push	 0
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GLKMHGMG@MaxDoubleDamageRateDW?$AA@
  0018d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00192	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00195	ff d7		 call	 edi

; 35   : 	this->MaxAbsordDamageRateDW = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateDW",0,MaxPower_Dir);

  00197	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0019c	6a 00		 push	 0
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DMONKHIK@MaxAbsordDamageRateDW?$AA@
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001a8	89 46 44	 mov	 DWORD PTR [esi+68], eax
  001ab	ff d7		 call	 edi

; 36   : 	this->MaxReflectDamageRateDW = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateDW",0,MaxPower_Dir);

  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  001b2	6a 00		 push	 0
  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NDGPKIDC@MaxReflectDamageRateDW?$AA@
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001be	89 46 48	 mov	 DWORD PTR [esi+72], eax
  001c1	ff d7		 call	 edi

; 37   : 	this->MaxWizardDamageDW = GetPrivateProfileInt("ZtTeam","MaxWizardDamageDW",0,MaxPower_Dir);

  001c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  001c8	6a 00		 push	 0
  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OAIMJAIJ@MaxWizardDamageDW?$AA@
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001d4	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  001d7	ff d7		 call	 edi

; 38   : 	this->MaxLifeDW = GetPrivateProfileInt("ZtTeam","MaxLifeDW",0,MaxPower_Dir);

  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  001de	6a 00		 push	 0
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_09HHCPCOJH@MaxLifeDW?$AA@
  001e5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001ea	89 46 50	 mov	 DWORD PTR [esi+80], eax
  001ed	ff d7		 call	 edi

; 39   : 	this->MaxSdDW = GetPrivateProfileInt("ZtTeam","MaxSdDW",0,MaxPower_Dir);

  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  001f4	6a 00		 push	 0
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_07KLGLAEJH@MaxSdDW?$AA@
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00200	89 46 54	 mov	 DWORD PTR [esi+84], eax
  00203	ff d7		 call	 edi

; 40   : 
; 41   : 	//-> Elf
; 42   : 	this->MaxDamageElf = GetPrivateProfileInt("ZtTeam","MaxDamageElf",0,MaxPower_Dir);

  00205	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0020a	6a 00		 push	 0
  0020c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NNNJIKMK@MaxDamageElf?$AA@
  00211	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00216	89 46 58	 mov	 DWORD PTR [esi+88], eax
  00219	ff d7		 call	 edi

; 43   : 	this->MaxDefenceElf = GetPrivateProfileInt("ZtTeam","MaxDefenceElf",0,MaxPower_Dir);

  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00220	6a 00		 push	 0
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BFJCOCPA@MaxDefenceElf?$AA@
  00227	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0022c	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  0022f	ff d7		 call	 edi

; 44   : 	this->MaxIgnoreDefenceRateElf = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateElf",0,MaxPower_Dir);

  00231	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00236	6a 00		 push	 0
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EODCCALI@MaxIgnoreDefenceRateElf?$AA@
  0023d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00242	89 46 60	 mov	 DWORD PTR [esi+96], eax
  00245	ff d7		 call	 edi
  00247	89 46 64	 mov	 DWORD PTR [esi+100], eax

; 45   : 	this->MaxCriticalDamageRateElf = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateElf",0,MaxPower_Dir);

  0024a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0024f	6a 00		 push	 0
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PKIECMGC@MaxCriticalDamageRateElf?$AA@
  00256	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0025b	ff d7		 call	 edi

; 46   : 	this->MaxExellentDamageRateElf = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateElf",0,MaxPower_Dir);

  0025d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00262	6a 00		 push	 0
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@MGFJIHJA@MaxExellentDamageRateElf?$AA@
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0026e	89 46 68	 mov	 DWORD PTR [esi+104], eax
  00271	ff d7		 call	 edi

; 47   : 	this->MaxDoubleDamageRateElf = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateElf",0,MaxPower_Dir);

  00273	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00278	6a 00		 push	 0
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NBEJGKMG@MaxDoubleDamageRateElf?$AA@
  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00284	89 46 6c	 mov	 DWORD PTR [esi+108], eax
  00287	ff d7		 call	 edi

; 48   : 	this->MaxAbsordDamageRateElf = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateElf",0,MaxPower_Dir);

  00289	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0028e	6a 00		 push	 0
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KOHECGKM@MaxAbsordDamageRateElf?$AA@
  00295	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0029a	89 46 70	 mov	 DWORD PTR [esi+112], eax
  0029d	ff d7		 call	 edi

; 49   : 	this->MaxReflectDamageRateElf = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateElf",0,MaxPower_Dir);

  0029f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  002a4	6a 00		 push	 0
  002a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GLCBJPBN@MaxReflectDamageRateElf?$AA@
  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002b0	89 46 74	 mov	 DWORD PTR [esi+116], eax
  002b3	ff d7		 call	 edi

; 50   : 	this->MaxWizardDamageElf = GetPrivateProfileInt("ZtTeam","MaxWizardDamageElf",0,MaxPower_Dir);

  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  002ba	6a 00		 push	 0
  002bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DHKBBGCB@MaxWizardDamageElf?$AA@
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002c6	89 46 78	 mov	 DWORD PTR [esi+120], eax
  002c9	ff d7		 call	 edi

; 51   : 	this->MaxLifeElf = GetPrivateProfileInt("ZtTeam","MaxLifeElf",0,MaxPower_Dir);

  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  002d0	6a 00		 push	 0
  002d2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNDJIIPM@MaxLifeElf?$AA@
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002dc	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  002df	ff d7		 call	 edi

; 52   : 	this->MaxSdElf = GetPrivateProfileInt("ZtTeam","MaxSdElf",0,MaxPower_Dir);

  002e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  002e6	6a 00		 push	 0
  002e8	68 00 00 00 00	 push	 OFFSET ??_C@_08MNOFMMNG@MaxSdElf?$AA@
  002ed	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  002f2	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  002f8	ff d7		 call	 edi

; 53   : 
; 54   : 	//-> MG
; 55   : 	this->MaxDamageMG = GetPrivateProfileInt("ZtTeam","MaxDamageMG",0,MaxPower_Dir);

  002fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  002ff	6a 00		 push	 0
  00301	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IEEGLND@MaxDamageMG?$AA@
  00306	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0030b	89 86 84 00 00
	00		 mov	 DWORD PTR [esi+132], eax
  00311	ff d7		 call	 edi

; 56   : 	this->MaxDefenceMG = GetPrivateProfileInt("ZtTeam","MaxDefenceMG",0,MaxPower_Dir);

  00313	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00318	6a 00		 push	 0
  0031a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JEHNNBOB@MaxDefenceMG?$AA@
  0031f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00324	89 86 88 00 00
	00		 mov	 DWORD PTR [esi+136], eax
  0032a	ff d7		 call	 edi

; 57   : 	this->MaxIgnoreDefenceRateMG = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateMG",0,MaxPower_Dir);

  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00331	6a 00		 push	 0
  00333	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OKBBIEFO@MaxIgnoreDefenceRateMG?$AA@
  00338	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0033d	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
  00343	ff d7		 call	 edi

; 58   : 	this->MaxCriticalDamageRateMG = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateMG",0,MaxPower_Dir);

  00345	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0034a	6a 00		 push	 0
  0034c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FHKDGJKC@MaxCriticalDamageRateMG?$AA@
  00351	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00356	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
  0035c	ff d7		 call	 edi

; 59   : 	this->MaxExellentDamageRateMG = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateMG",0,MaxPower_Dir);

  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00363	6a 00		 push	 0
  00365	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IJOMEKIG@MaxExellentDamageRateMG?$AA@
  0036a	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0036f	89 86 94 00 00
	00		 mov	 DWORD PTR [esi+148], eax
  00375	ff d7		 call	 edi

; 60   : 	this->MaxDoubleDamageRateMG = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateMG",0,MaxPower_Dir);

  00377	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0037c	6a 00		 push	 0
  0037e	89 86 98 00 00
	00		 mov	 DWORD PTR [esi+152], eax
  00384	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@COLPFPBI@MaxDoubleDamageRateMG?$AA@
  00389	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0038e	ff d7		 call	 edi

; 61   : 	this->MaxAbsordDamageRateMG = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateMG",0,MaxPower_Dir);

  00390	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00395	6a 00		 push	 0
  00397	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HJPOIOFE@MaxAbsordDamageRateMG?$AA@
  0039c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003a1	89 86 9c 00 00
	00		 mov	 DWORD PTR [esi+156], eax
  003a7	ff d7		 call	 edi

; 62   : 	this->MaxReflectDamageRateMG = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateMG",0,MaxPower_Dir);

  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  003ae	6a 00		 push	 0
  003b0	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JGHMIBOM@MaxReflectDamageRateMG?$AA@
  003b5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003ba	89 86 a0 00 00
	00		 mov	 DWORD PTR [esi+160], eax
  003c0	ff d7		 call	 edi

; 63   : 	this->MaxWizardDamageMG = GetPrivateProfileInt("ZtTeam","MaxWizardDamageMG",0,MaxPower_Dir);

  003c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  003c7	6a 00		 push	 0
  003c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KFJPLJFH@MaxWizardDamageMG?$AA@
  003ce	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003d3	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
  003d9	ff d7		 call	 edi

; 64   : 	this->MaxLifeMG = GetPrivateProfileInt("ZtTeam","MaxLifeMG",0,MaxPower_Dir);

  003db	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  003e0	6a 00		 push	 0
  003e2	68 00 00 00 00	 push	 OFFSET ??_C@_09DCDMAHEJ@MaxLifeMG?$AA@
  003e7	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  003ec	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  003f2	ff d7		 call	 edi

; 65   : 	this->MaxSdMG = GetPrivateProfileInt("ZtTeam","MaxSdMG",0,MaxPower_Dir);

  003f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  003f9	6a 00		 push	 0
  003fb	68 00 00 00 00	 push	 OFFSET ??_C@_07OOHICNEJ@MaxSdMG?$AA@
  00400	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00405	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  0040b	ff d7		 call	 edi

; 66   : 
; 67   : 	//-> DL
; 68   : 	this->MaxDamageDL = GetPrivateProfileInt("ZtTeam","MaxDamageDL",0,MaxPower_Dir);

  0040d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00412	6a 00		 push	 0
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OEGBIJJH@MaxDamageDL?$AA@
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0041e	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  00424	ff d7		 call	 edi

; 69   : 	this->MaxDefenceDL = GetPrivateProfileInt("ZtTeam","MaxDefenceDL",0,MaxPower_Dir);

  00426	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0042b	6a 00		 push	 0
  0042d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HIFIDDKF@MaxDefenceDL?$AA@
  00432	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00437	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  0043d	ff d7		 call	 edi

; 70   : 	this->MaxIgnoreDefenceRateDL = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateDL",0,MaxPower_Dir);

  0043f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00444	6a 00		 push	 0
  00446	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GDEGGBK@MaxIgnoreDefenceRateDL?$AA@
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00450	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
  00456	ff d7		 call	 edi

; 71   : 	this->MaxCriticalDamageRateDL = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateDL",0,MaxPower_Dir);

  00458	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0045d	6a 00		 push	 0
  0045f	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LLIGILOG@MaxCriticalDamageRateDL?$AA@
  00464	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00469	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax
  0046f	ff d7		 call	 edi

; 72   : 	this->MaxExellentDamageRateDL = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateDL",0,MaxPower_Dir);

  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00476	6a 00		 push	 0
  00478	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFMJKIMC@MaxExellentDamageRateDL?$AA@
  0047d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00482	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax
  00488	ff d7		 call	 edi

; 73   : 	this->MaxDoubleDamageRateDL = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateDL",0,MaxPower_Dir);

  0048a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0048f	6a 00		 push	 0
  00491	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MCJKLNFM@MaxDoubleDamageRateDL?$AA@
  00496	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0049b	89 86 c4 00 00
	00		 mov	 DWORD PTR [esi+196], eax
  004a1	ff d7		 call	 edi

; 74   : 	this->MaxAbsordDamageRateDL = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateDL",0,MaxPower_Dir);

  004a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  004a8	6a 00		 push	 0
  004aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JFNLGMBA@MaxAbsordDamageRateDL?$AA@
  004af	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004b4	89 86 c8 00 00
	00		 mov	 DWORD PTR [esi+200], eax
  004ba	ff d7		 call	 edi

; 75   : 	this->MaxReflectDamageRateDL = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateDL",0,MaxPower_Dir);

  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  004c1	6a 00		 push	 0
  004c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HKFJGDKI@MaxReflectDamageRateDL?$AA@
  004c8	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004cd	89 86 cc 00 00
	00		 mov	 DWORD PTR [esi+204], eax
  004d3	ff d7		 call	 edi
  004d5	89 86 d0 00 00
	00		 mov	 DWORD PTR [esi+208], eax

; 76   : 	this->MaxWizardDamageDL = GetPrivateProfileInt("ZtTeam","MaxWizardDamageDL",0,MaxPower_Dir);

  004db	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  004e0	6a 00		 push	 0
  004e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EJLKFLBD@MaxWizardDamageDL?$AA@
  004e7	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004ec	ff d7		 call	 edi

; 77   : 	this->MaxLifeDL = GetPrivateProfileInt("ZtTeam","MaxLifeDL",0,MaxPower_Dir);

  004ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  004f3	6a 00		 push	 0
  004f5	68 00 00 00 00	 push	 OFFSET ??_C@_09NOBJOFAN@MaxLifeDL?$AA@
  004fa	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  004ff	89 86 d4 00 00
	00		 mov	 DWORD PTR [esi+212], eax
  00505	ff d7		 call	 edi

; 78   : 	this->MaxSdDL = GetPrivateProfileInt("ZtTeam","MaxSdDL",0,MaxPower_Dir);

  00507	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0050c	6a 00		 push	 0
  0050e	68 00 00 00 00	 push	 OFFSET ??_C@_07CFNMPAN@MaxSdDL?$AA@
  00513	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00518	89 86 d8 00 00
	00		 mov	 DWORD PTR [esi+216], eax
  0051e	ff d7		 call	 edi

; 79   : 
; 80   : 	//-> SUM
; 81   : 	this->MaxDamageSUM = GetPrivateProfileInt("ZtTeam","MaxDamageSUM",0,MaxPower_Dir);

  00520	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00525	6a 00		 push	 0
  00527	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PFGBKBPP@MaxDamageSUM?$AA@
  0052c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00531	89 86 dc 00 00
	00		 mov	 DWORD PTR [esi+220], eax
  00537	ff d7		 call	 edi

; 82   : 	this->MaxDefenceSUM = GetPrivateProfileInt("ZtTeam","MaxDefenceSUM",0,MaxPower_Dir);

  00539	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0053e	6a 00		 push	 0
  00540	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DNCKMJMF@MaxDefenceSUM?$AA@
  00545	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0054a	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax
  00550	ff d7		 call	 edi

; 83   : 	this->MaxIgnoreDefenceRateSUM = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateSUM",0,MaxPower_Dir);

  00552	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00557	6a 00		 push	 0
  00559	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GGIKALIN@MaxIgnoreDefenceRateSUM?$AA@
  0055e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00563	89 86 e4 00 00
	00		 mov	 DWORD PTR [esi+228], eax
  00569	ff d7		 call	 edi

; 84   : 	this->MaxCriticalDamageRateSUM = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateSUM",0,MaxPower_Dir);

  0056b	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00570	6a 00		 push	 0
  00572	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NCDMAHFH@MaxCriticalDamageRateSUM?$AA@
  00577	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0057c	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  00582	ff d7		 call	 edi

; 85   : 	this->MaxExellentDamageRateSUM = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateSUM",0,MaxPower_Dir);

  00584	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00589	6a 00		 push	 0
  0058b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@OOOBKMKF@MaxExellentDamageRateSUM?$AA@
  00590	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00595	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  0059b	ff d7		 call	 edi

; 86   : 	this->MaxDoubleDamageRateSUM = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateSUM",0,MaxPower_Dir);

  0059d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  005a2	6a 00		 push	 0
  005a4	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@PJPBEBPD@MaxDoubleDamageRateSUM?$AA@
  005a9	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005ae	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  005b4	ff d7		 call	 edi

; 87   : 	this->MaxAbsordDamageRateSUM = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateSUM",0,MaxPower_Dir);

  005b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  005bb	6a 00		 push	 0
  005bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IGMMANJJ@MaxAbsordDamageRateSUM?$AA@
  005c2	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005c7	89 86 f4 00 00
	00		 mov	 DWORD PTR [esi+244], eax
  005cd	ff d7		 call	 edi

; 88   : 	this->MaxReflectDamageRateSUM = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateSUM",0,MaxPower_Dir);

  005cf	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  005d4	6a 00		 push	 0
  005d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EDJJLECI@MaxReflectDamageRateSUM?$AA@
  005db	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005e0	89 86 f8 00 00
	00		 mov	 DWORD PTR [esi+248], eax
  005e6	ff d7		 call	 edi

; 89   : 	this->MaxWizardDamageSUM = GetPrivateProfileInt("ZtTeam","MaxWizardDamageSUM",0,MaxPower_Dir);

  005e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  005ed	6a 00		 push	 0
  005ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BPBJDNBE@MaxWizardDamageSUM?$AA@
  005f4	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  005f9	89 86 fc 00 00
	00		 mov	 DWORD PTR [esi+252], eax
  005ff	ff d7		 call	 edi

; 90   : 	this->MaxLifeSUM = GetPrivateProfileInt("ZtTeam","MaxLifeSUM",0,MaxPower_Dir);

  00601	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00606	6a 00		 push	 0
  00608	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OFIBKDMJ@MaxLifeSUM?$AA@
  0060d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00612	89 86 00 01 00
	00		 mov	 DWORD PTR [esi+256], eax
  00618	ff d7		 call	 edi

; 91   : 	this->MaxSdSUM = GetPrivateProfileInt("ZtTeam","MaxSdSUM",0,MaxPower_Dir);

  0061a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0061f	6a 00		 push	 0
  00621	89 86 04 01 00
	00		 mov	 DWORD PTR [esi+260], eax
  00627	68 00 00 00 00	 push	 OFFSET ??_C@_08OFFNOHOD@MaxSdSUM?$AA@
  0062c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00631	ff d7		 call	 edi

; 92   : 
; 93   : 	//-> RF
; 94   : 	this->MaxDamageRF = GetPrivateProfileInt("ZtTeam","MaxDamageRF",0,MaxPower_Dir);

  00633	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00638	6a 00		 push	 0
  0063a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GCFLONP@MaxDamageRF?$AA@
  0063f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00644	89 86 08 01 00
	00		 mov	 DWORD PTR [esi+264], eax
  0064a	ff d7		 call	 edi

; 95   : 	this->MaxDefenceRF = GetPrivateProfileInt("ZtTeam","MaxDefenceRF",0,MaxPower_Dir);

  0064c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00651	6a 00		 push	 0
  00653	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JKBMAEON@MaxDefenceRF?$AA@
  00658	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0065d	89 86 0c 01 00
	00		 mov	 DWORD PTR [esi+268], eax
  00663	ff d7		 call	 edi

; 96   : 	this->MaxIgnoreDefenceRateRF = GetPrivateProfileInt("ZtTeam","MaxIgnoreDefenceRateRF",0,MaxPower_Dir);

  00665	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0066a	6a 00		 push	 0
  0066c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OEHAFBFC@MaxIgnoreDefenceRateRF?$AA@
  00671	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00676	89 86 10 01 00
	00		 mov	 DWORD PTR [esi+272], eax
  0067c	ff d7		 call	 edi

; 97   : 	this->MaxCriticalDamageRateRF = GetPrivateProfileInt("ZtTeam","MaxCriticalDamageRateRF",0,MaxPower_Dir);

  0067e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00683	6a 00		 push	 0
  00685	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FJMCLMKO@MaxCriticalDamageRateRF?$AA@
  0068a	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0068f	89 86 14 01 00
	00		 mov	 DWORD PTR [esi+276], eax
  00695	ff d7		 call	 edi

; 98   : 	this->MaxExellentDamageRateRF = GetPrivateProfileInt("ZtTeam","MaxExellentDamageRateRF",0,MaxPower_Dir);

  00697	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  0069c	6a 00		 push	 0
  0069e	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IHINJPIK@MaxExellentDamageRateRF?$AA@
  006a3	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  006a8	89 86 18 01 00
	00		 mov	 DWORD PTR [esi+280], eax
  006ae	ff d7		 call	 edi

; 99   : 	this->MaxDoubleDamageRateRF = GetPrivateProfileInt("ZtTeam","MaxDoubleDamageRateRF",0,MaxPower_Dir);

  006b0	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  006b5	6a 00		 push	 0
  006b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CANOIKBE@MaxDoubleDamageRateRF?$AA@
  006bc	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  006c1	89 86 1c 01 00
	00		 mov	 DWORD PTR [esi+284], eax
  006c7	ff d7		 call	 edi

; 100  : 	this->MaxAbsordDamageRateRF = GetPrivateProfileInt("ZtTeam","MaxAbsordDamageRateRF",0,MaxPower_Dir);

  006c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  006ce	6a 00		 push	 0
  006d0	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HHJPFLFI@MaxAbsordDamageRateRF?$AA@
  006d5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  006da	89 86 20 01 00
	00		 mov	 DWORD PTR [esi+288], eax
  006e0	ff d7		 call	 edi

; 101  : 	this->MaxReflectDamageRateRF = GetPrivateProfileInt("ZtTeam","MaxReflectDamageRateRF",0,MaxPower_Dir);

  006e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  006e7	6a 00		 push	 0
  006e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JIBNFEOA@MaxReflectDamageRateRF?$AA@
  006ee	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  006f3	89 86 24 01 00
	00		 mov	 DWORD PTR [esi+292], eax
  006f9	ff d7		 call	 edi

; 102  : 	this->MaxWizardDamageRF = GetPrivateProfileInt("ZtTeam","MaxWizardDamageRF",0,MaxPower_Dir);

  006fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00700	6a 00		 push	 0
  00702	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KLPOGMFL@MaxWizardDamageRF?$AA@
  00707	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0070c	89 86 28 01 00
	00		 mov	 DWORD PTR [esi+296], eax
  00712	ff d7		 call	 edi

; 103  : 	this->MaxLifeRF = GetPrivateProfileInt("ZtTeam","MaxLifeRF",0,MaxPower_Dir);

  00714	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00719	6a 00		 push	 0
  0071b	68 00 00 00 00	 push	 OFFSET ??_C@_09DMFNNCEF@MaxLifeRF?$AA@
  00720	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00725	89 86 2c 01 00
	00		 mov	 DWORD PTR [esi+300], eax
  0072b	ff d7		 call	 edi

; 104  : 	this->MaxSdRF = GetPrivateProfileInt("ZtTeam","MaxSdRF",0,MaxPower_Dir);

  0072d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DLMLHHIA@?4?4?2Data?2ZtData?2MaxPower?4ini?$AA@
  00732	6a 00		 push	 0
  00734	68 00 00 00 00	 push	 OFFSET ??_C@_07OABJPIEF@MaxSdRF?$AA@
  00739	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0073e	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax
  00744	ff d7		 call	 edi
  00746	5f		 pop	 edi
  00747	89 86 34 01 00
	00		 mov	 DWORD PTR [esi+308], eax
  0074d	5e		 pop	 esi

; 105  : }

  0074e	c3		 ret	 0
?Load@cMaxPower@@QAEXXZ ENDP				; cMaxPower::Load
_TEXT	ENDS
PUBLIC	?DK@cMaxPower@@AAEXH@Z				; cMaxPower::DK
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?DK@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?DK@cMaxPower@@AAEXH@Z PROC				; cMaxPower::DK, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 156  : 
; 157  : 	if(this->MaxDamageDK != -1)

  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0000f	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	83 f8 ff	 cmp	 eax, -1
  00018	74 31		 je	 SHORT $LN22@DK

; 158  : 	{
; 159  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageDK || lpObj->m_AttackDamageMaxLeft > this->MaxDamageDK)

  0001a	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00020	7f 08		 jg	 SHORT $LN21@DK
  00022	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  00028	7e 21		 jle	 SHORT $LN22@DK
$LN21@DK:

; 160  : 		{
; 161  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageDK;

  0002a	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 162  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageDK;

  00030	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00033	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 163  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageDK;

  00039	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0003c	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 164  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageDK;

  00042	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00045	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@DK:

; 165  : 		}
; 166  : 	}
; 167  : 
; 168  : 	if(this->MaxDefenceDK != -1)

  0004b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004e	83 f8 ff	 cmp	 eax, -1
  00051	74 0e		 je	 SHORT $LN19@DK

; 169  : 	{
; 170  : 		if(lpObj->m_Defense > this->MaxDefenceDK)

  00053	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00059	7e 06		 jle	 SHORT $LN19@DK

; 171  : 		{
; 172  : 			lpObj->m_Defense = this->MaxDefenceDK;

  0005b	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@DK:

; 173  : 		}
; 174  : 	}
; 175  : 
; 176  : 	if(this->MaxIgnoreDefenceRateDK != -1)

  00061	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00064	56		 push	 esi
  00065	83 f8 ff	 cmp	 eax, -1
  00068	74 11		 je	 SHORT $LN17@DK

; 177  : 	{
; 178  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateDK)

  0006a	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00071	3b f0		 cmp	 esi, eax
  00073	7e 06		 jle	 SHORT $LN17@DK

; 179  : 		{
; 180  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateDK;

  00075	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@DK:

; 181  : 		}
; 182  : 	}
; 183  : 
; 184  : 	if(this->MaxCriticalDamageRateDK != -1)

  0007b	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0007e	83 f8 ff	 cmp	 eax, -1
  00081	74 0e		 je	 SHORT $LN15@DK

; 185  : 	{
; 186  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateDK)

  00083	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  00089	7e 06		 jle	 SHORT $LN15@DK

; 187  : 		{
; 188  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateDK;

  0008b	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@DK:

; 189  : 		}
; 190  : 	}
; 191  : 
; 192  : 	if(this->MaxExellentDamageRateDK != -1)

  00091	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00094	83 f8 ff	 cmp	 eax, -1
  00097	74 0e		 je	 SHORT $LN13@DK

; 193  : 	{
; 194  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateDK)

  00099	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  0009f	7e 06		 jle	 SHORT $LN13@DK

; 195  : 		{
; 196  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateDK;

  000a1	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@DK:

; 197  : 		}
; 198  : 	}
; 199  : 
; 200  : 	if(this->MaxDoubleDamageRateDK != -1)

  000a7	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000aa	83 f8 ff	 cmp	 eax, -1
  000ad	74 11		 je	 SHORT $LN11@DK

; 201  : 	{
; 202  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateDK)

  000af	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000b6	3b f0		 cmp	 esi, eax
  000b8	7e 06		 jle	 SHORT $LN11@DK

; 203  : 		{
; 204  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateDK;

  000ba	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@DK:

; 205  : 		}
; 206  : 	}
; 207  : 
; 208  : 	if(this->MaxAbsordDamageRateDK != -1)

  000c0	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000c3	83 f8 ff	 cmp	 eax, -1
  000c6	74 11		 je	 SHORT $LN9@DK

; 209  : 	{
; 210  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateDK)

  000c8	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000cf	3b f0		 cmp	 esi, eax
  000d1	7e 06		 jle	 SHORT $LN9@DK

; 211  : 		{
; 212  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateDK;

  000d3	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@DK:

; 213  : 		}
; 214  : 	}
; 215  : 
; 216  : 	if(this->MaxReflectDamageRateDK != -1)

  000d9	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  000dc	83 f8 ff	 cmp	 eax, -1
  000df	74 11		 je	 SHORT $LN7@DK

; 217  : 	{
; 218  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateDK)

  000e1	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  000e8	3b f0		 cmp	 esi, eax
  000ea	7e 06		 jle	 SHORT $LN7@DK

; 219  : 		{
; 220  : 			lpObj->DamageReflect = this->MaxReflectDamageRateDK;

  000ec	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@DK:

; 221  : 		}
; 222  : 	}
; 223  : 
; 224  : 	if(this->MaxWizardDamageDK != -1)

  000f2	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  000f5	5e		 pop	 esi
  000f6	83 f8 ff	 cmp	 eax, -1
  000f9	74 17		 je	 SHORT $LN5@DK

; 225  : 	{
; 226  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageDK)

  000fb	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00101	7e 0f		 jle	 SHORT $LN5@DK

; 227  : 		{
; 228  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageDK;

  00103	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 229  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageDK;

  00109	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0010c	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@DK:

; 230  : 		}
; 231  : 	}
; 232  : 
; 233  : 	if(this->MaxLifeDK != -1)

  00112	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00115	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  00118	83 f8 ff	 cmp	 eax, -1
  0011b	74 24		 je	 SHORT $LN3@DK

; 234  : 	{
; 235  : 		if( lpObj->Life > this->MaxLifeDK)

  0011d	db 45 08	 fild	 DWORD PTR tv358[ebp]
  00120	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  00123	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  00129	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  0012c	d8 d1		 fcom	 ST(1)
  0012e	df e0		 fnstsw	 ax
  00130	dd d9		 fstp	 ST(1)
  00132	f6 c4 05	 test	 ah, 5
  00135	7a 08		 jp	 SHORT $LN27@DK

; 236  : 		{
; 237  : 			lpObj->Life = this->MaxLifeDK;

  00137	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  0013d	eb 02		 jmp	 SHORT $LN3@DK
$LN27@DK:
  0013f	dd d8		 fstp	 ST(0)
$LN3@DK:

; 238  : 		}
; 239  : 	}
; 240  : 
; 241  : 	if(this->MaxSdDK != -1)

  00141	8b 49 2c	 mov	 ecx, DWORD PTR [ecx+44]
  00144	83 f9 ff	 cmp	 ecx, -1
  00147	74 0e		 je	 SHORT $LN1@DK

; 242  : 	{
; 243  : 		if( lpObj->iShield > this->MaxSdDK)

  00149	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  0014f	7e 06		 jle	 SHORT $LN1@DK

; 244  : 		{
; 245  : 			lpObj->iShield = this->MaxSdDK;

  00151	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@DK:

; 246  : 		}
; 247  : 	}
; 248  : }

  00157	5d		 pop	 ebp
  00158	c2 04 00	 ret	 4
?DK@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::DK
_TEXT	ENDS
PUBLIC	?DW@cMaxPower@@AAEXH@Z				; cMaxPower::DW
; Function compile flags: /Ogtp
;	COMDAT ?DW@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?DW@cMaxPower@@AAEXH@Z PROC				; cMaxPower::DW, COMDAT
; _this$ = ecx

; 251  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 252  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 253  : 
; 254  : 	if(this->MaxDamageDW != -1)

  00006	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00009	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0000f	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	83 f8 ff	 cmp	 eax, -1
  00018	74 31		 je	 SHORT $LN22@DW

; 255  : 	{
; 256  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageDW || lpObj->m_AttackDamageMaxLeft > this->MaxDamageDW)

  0001a	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00020	7f 08		 jg	 SHORT $LN21@DW
  00022	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  00028	7e 21		 jle	 SHORT $LN22@DW
$LN21@DW:

; 257  : 		{
; 258  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageDW;

  0002a	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 259  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageDW;

  00030	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00033	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 260  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageDW;

  00039	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  0003c	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 261  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageDW;

  00042	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00045	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@DW:

; 262  : 		}
; 263  : 	}
; 264  : 
; 265  : 	if(this->MaxDefenceDW != -1)

  0004b	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  0004e	83 f8 ff	 cmp	 eax, -1
  00051	74 0e		 je	 SHORT $LN19@DW

; 266  : 	{
; 267  : 		if(lpObj->m_Defense > this->MaxDefenceDW)

  00053	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00059	7e 06		 jle	 SHORT $LN19@DW

; 268  : 		{
; 269  : 			lpObj->m_Defense = this->MaxDefenceDW;

  0005b	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@DW:

; 270  : 		}
; 271  : 	}
; 272  : 
; 273  : 	if(this->MaxIgnoreDefenceRateDW != -1)

  00061	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00064	56		 push	 esi
  00065	83 f8 ff	 cmp	 eax, -1
  00068	74 11		 je	 SHORT $LN17@DW

; 274  : 	{
; 275  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateDW)

  0006a	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00071	3b f0		 cmp	 esi, eax
  00073	7e 06		 jle	 SHORT $LN17@DW

; 276  : 		{
; 277  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateDW;

  00075	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@DW:

; 278  : 		}
; 279  : 	}
; 280  : 
; 281  : 	if(this->MaxCriticalDamageRateDW != -1)

  0007b	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  0007e	83 f8 ff	 cmp	 eax, -1
  00081	74 0e		 je	 SHORT $LN15@DW

; 282  : 	{
; 283  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateDW)

  00083	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  00089	7e 06		 jle	 SHORT $LN15@DW

; 284  : 		{
; 285  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateDW;

  0008b	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@DW:

; 286  : 		}
; 287  : 	}
; 288  : 
; 289  : 	if(this->MaxExellentDamageRateDW != -1)

  00091	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  00094	83 f8 ff	 cmp	 eax, -1
  00097	74 0e		 je	 SHORT $LN13@DW

; 290  : 	{
; 291  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateDW)

  00099	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  0009f	7e 06		 jle	 SHORT $LN13@DW

; 292  : 		{
; 293  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateDW;

  000a1	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@DW:

; 294  : 		}
; 295  : 	}
; 296  : 
; 297  : 	if(this->MaxDoubleDamageRateDW != -1)

  000a7	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  000aa	83 f8 ff	 cmp	 eax, -1
  000ad	74 11		 je	 SHORT $LN11@DW

; 298  : 	{
; 299  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateDW)

  000af	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000b6	3b f0		 cmp	 esi, eax
  000b8	7e 06		 jle	 SHORT $LN11@DW

; 300  : 		{
; 301  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateDW;

  000ba	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@DW:

; 302  : 		}
; 303  : 	}
; 304  : 
; 305  : 	if(this->MaxAbsordDamageRateDW != -1)

  000c0	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  000c3	83 f8 ff	 cmp	 eax, -1
  000c6	74 11		 je	 SHORT $LN9@DW

; 306  : 	{
; 307  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateDW)

  000c8	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000cf	3b f0		 cmp	 esi, eax
  000d1	7e 06		 jle	 SHORT $LN9@DW

; 308  : 		{
; 309  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateDW;

  000d3	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@DW:

; 310  : 		}
; 311  : 	}
; 312  : 
; 313  : 	if(this->MaxReflectDamageRateDW != -1)

  000d9	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  000dc	83 f8 ff	 cmp	 eax, -1
  000df	74 11		 je	 SHORT $LN7@DW

; 314  : 	{
; 315  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateDW)

  000e1	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  000e8	3b f0		 cmp	 esi, eax
  000ea	7e 06		 jle	 SHORT $LN7@DW

; 316  : 		{
; 317  : 			lpObj->DamageReflect = this->MaxReflectDamageRateDW;

  000ec	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@DW:

; 318  : 		}
; 319  : 	}
; 320  : 
; 321  : 	if(this->MaxWizardDamageDW != -1)

  000f2	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  000f5	5e		 pop	 esi
  000f6	83 f8 ff	 cmp	 eax, -1
  000f9	74 17		 je	 SHORT $LN5@DW

; 322  : 	{
; 323  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageDW)

  000fb	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00101	7e 0f		 jle	 SHORT $LN5@DW

; 324  : 		{
; 325  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageDW;

  00103	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 326  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageDW;

  00109	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  0010c	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@DW:

; 327  : 		}
; 328  : 	}
; 329  : 
; 330  : 	if(this->MaxLifeDW != -1)

  00112	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  00115	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  00118	83 f8 ff	 cmp	 eax, -1
  0011b	74 24		 je	 SHORT $LN3@DW

; 331  : 	{
; 332  : 		if( lpObj->Life > this->MaxLifeDW)

  0011d	db 45 08	 fild	 DWORD PTR tv358[ebp]
  00120	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  00123	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  00129	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  0012c	d8 d1		 fcom	 ST(1)
  0012e	df e0		 fnstsw	 ax
  00130	dd d9		 fstp	 ST(1)
  00132	f6 c4 05	 test	 ah, 5
  00135	7a 08		 jp	 SHORT $LN27@DW

; 333  : 		{
; 334  : 			lpObj->Life = this->MaxLifeDW;

  00137	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  0013d	eb 02		 jmp	 SHORT $LN3@DW
$LN27@DW:
  0013f	dd d8		 fstp	 ST(0)
$LN3@DW:

; 335  : 		}
; 336  : 	}
; 337  : 
; 338  : 	if(this->MaxSdDW != -1)

  00141	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  00144	83 f9 ff	 cmp	 ecx, -1
  00147	74 0e		 je	 SHORT $LN1@DW

; 339  : 	{
; 340  : 		if( lpObj->iShield > this->MaxSdDW)

  00149	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  0014f	7e 06		 jle	 SHORT $LN1@DW

; 341  : 		{
; 342  : 			lpObj->iShield = this->MaxSdDW;

  00151	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@DW:

; 343  : 		}
; 344  : 	}
; 345  : }

  00157	5d		 pop	 ebp
  00158	c2 04 00	 ret	 4
?DW@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::DW
_TEXT	ENDS
PUBLIC	?Elf@cMaxPower@@AAEXH@Z				; cMaxPower::Elf
; Function compile flags: /Ogtp
;	COMDAT ?Elf@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?Elf@cMaxPower@@AAEXH@Z PROC				; cMaxPower::Elf, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 349  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 350  : 
; 351  : 	if(this->MaxDamageElf != -1)

  00006	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00009	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  0000f	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	83 f8 ff	 cmp	 eax, -1
  00018	74 31		 je	 SHORT $LN22@Elf

; 352  : 	{
; 353  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageElf || lpObj->m_AttackDamageMaxLeft > this->MaxDamageElf)

  0001a	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00020	7f 08		 jg	 SHORT $LN21@Elf
  00022	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  00028	7e 21		 jle	 SHORT $LN22@Elf
$LN21@Elf:

; 354  : 		{
; 355  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageElf;

  0002a	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 356  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageElf;

  00030	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00033	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 357  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageElf;

  00039	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  0003c	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 358  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageElf;

  00042	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00045	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@Elf:

; 359  : 		}
; 360  : 	}
; 361  : 
; 362  : 	if(this->MaxDefenceElf != -1)

  0004b	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  0004e	83 f8 ff	 cmp	 eax, -1
  00051	74 0e		 je	 SHORT $LN19@Elf

; 363  : 	{
; 364  : 		if(lpObj->m_Defense > this->MaxDefenceElf)

  00053	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00059	7e 06		 jle	 SHORT $LN19@Elf

; 365  : 		{
; 366  : 			lpObj->m_Defense = this->MaxDefenceElf;

  0005b	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@Elf:

; 367  : 		}
; 368  : 	}
; 369  : 
; 370  : 	if(this->MaxIgnoreDefenceRateElf != -1)

  00061	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  00064	56		 push	 esi
  00065	83 f8 ff	 cmp	 eax, -1
  00068	74 11		 je	 SHORT $LN17@Elf

; 371  : 	{
; 372  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateElf)

  0006a	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00071	3b f0		 cmp	 esi, eax
  00073	7e 06		 jle	 SHORT $LN17@Elf

; 373  : 		{
; 374  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateElf;

  00075	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@Elf:

; 375  : 		}
; 376  : 	}
; 377  : 
; 378  : 	if(this->MaxCriticalDamageRateElf != -1)

  0007b	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  0007e	83 f8 ff	 cmp	 eax, -1
  00081	74 0e		 je	 SHORT $LN15@Elf

; 379  : 	{
; 380  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateElf)

  00083	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  00089	7e 06		 jle	 SHORT $LN15@Elf

; 381  : 		{
; 382  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateElf;

  0008b	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@Elf:

; 383  : 		}
; 384  : 	}
; 385  : 
; 386  : 	if(this->MaxExellentDamageRateElf != -1)

  00091	8b 41 6c	 mov	 eax, DWORD PTR [ecx+108]
  00094	83 f8 ff	 cmp	 eax, -1
  00097	74 0e		 je	 SHORT $LN13@Elf

; 387  : 	{
; 388  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateElf)

  00099	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  0009f	7e 06		 jle	 SHORT $LN13@Elf

; 389  : 		{
; 390  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateElf;

  000a1	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@Elf:

; 391  : 		}
; 392  : 	}
; 393  : 
; 394  : 	if(this->MaxDoubleDamageRateElf != -1)

  000a7	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  000aa	83 f8 ff	 cmp	 eax, -1
  000ad	74 11		 je	 SHORT $LN11@Elf

; 395  : 	{
; 396  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateElf)

  000af	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000b6	3b f0		 cmp	 esi, eax
  000b8	7e 06		 jle	 SHORT $LN11@Elf

; 397  : 		{
; 398  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateElf;

  000ba	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@Elf:

; 399  : 		}
; 400  : 	}
; 401  : 
; 402  : 	if(this->MaxAbsordDamageRateElf != -1)

  000c0	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  000c3	83 f8 ff	 cmp	 eax, -1
  000c6	74 11		 je	 SHORT $LN9@Elf

; 403  : 	{
; 404  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateElf)

  000c8	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000cf	3b f0		 cmp	 esi, eax
  000d1	7e 06		 jle	 SHORT $LN9@Elf

; 405  : 		{
; 406  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateElf;

  000d3	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@Elf:

; 407  : 		}
; 408  : 	}
; 409  : 
; 410  : 	if(this->MaxReflectDamageRateElf != -1)

  000d9	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]
  000dc	83 f8 ff	 cmp	 eax, -1
  000df	74 11		 je	 SHORT $LN7@Elf

; 411  : 	{
; 412  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateElf)

  000e1	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  000e8	3b f0		 cmp	 esi, eax
  000ea	7e 06		 jle	 SHORT $LN7@Elf

; 413  : 		{
; 414  : 			lpObj->DamageReflect = this->MaxReflectDamageRateElf;

  000ec	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@Elf:

; 415  : 		}
; 416  : 	}
; 417  : 
; 418  : 	if(this->MaxWizardDamageElf != -1)

  000f2	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  000f5	5e		 pop	 esi
  000f6	83 f8 ff	 cmp	 eax, -1
  000f9	74 17		 je	 SHORT $LN5@Elf

; 419  : 	{
; 420  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageElf)

  000fb	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00101	7e 0f		 jle	 SHORT $LN5@Elf

; 421  : 		{
; 422  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageElf;

  00103	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 423  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageElf;

  00109	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  0010c	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@Elf:

; 424  : 		}
; 425  : 	}
; 426  : 
; 427  : 	if(this->MaxLifeElf != -1)

  00112	8b 81 80 00 00
	00		 mov	 eax, DWORD PTR [ecx+128]
  00118	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  0011b	83 f8 ff	 cmp	 eax, -1
  0011e	74 24		 je	 SHORT $LN3@Elf

; 428  : 	{
; 429  : 		if( lpObj->Life > this->MaxLifeElf)

  00120	db 45 08	 fild	 DWORD PTR tv358[ebp]
  00123	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  00126	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  0012c	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  0012f	d8 d1		 fcom	 ST(1)
  00131	df e0		 fnstsw	 ax
  00133	dd d9		 fstp	 ST(1)
  00135	f6 c4 05	 test	 ah, 5
  00138	7a 08		 jp	 SHORT $LN27@Elf

; 430  : 		{
; 431  : 			lpObj->Life = this->MaxLifeElf;

  0013a	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  00140	eb 02		 jmp	 SHORT $LN3@Elf
$LN27@Elf:
  00142	dd d8		 fstp	 ST(0)
$LN3@Elf:

; 432  : 		}
; 433  : 	}
; 434  : 
; 435  : 	if(this->MaxSdElf != -1)

  00144	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
  0014a	83 f9 ff	 cmp	 ecx, -1
  0014d	74 0e		 je	 SHORT $LN1@Elf

; 436  : 	{
; 437  : 		if( lpObj->iShield > this->MaxSdElf)

  0014f	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  00155	7e 06		 jle	 SHORT $LN1@Elf

; 438  : 		{
; 439  : 			lpObj->iShield = this->MaxSdElf;

  00157	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@Elf:

; 440  : 		}
; 441  : 	}
; 442  : }

  0015d	5d		 pop	 ebp
  0015e	c2 04 00	 ret	 4
?Elf@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::Elf
_TEXT	ENDS
PUBLIC	?MG@cMaxPower@@AAEXH@Z				; cMaxPower::MG
; Function compile flags: /Ogtp
;	COMDAT ?MG@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?MG@cMaxPower@@AAEXH@Z PROC				; cMaxPower::MG, COMDAT
; _this$ = ecx

; 445  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 446  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 447  : 
; 448  : 	if(this->MaxDamageMG != -1)

  00006	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  0000c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00012	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 f8 ff	 cmp	 eax, -1
  0001b	74 3a		 je	 SHORT $LN22@MG

; 449  : 	{
; 450  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageMG || lpObj->m_AttackDamageMaxLeft > this->MaxDamageMG)

  0001d	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00023	7f 08		 jg	 SHORT $LN21@MG
  00025	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  0002b	7e 2a		 jle	 SHORT $LN22@MG
$LN21@MG:

; 451  : 		{
; 452  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageMG;

  0002d	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 453  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageMG;

  00033	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00039	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 454  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageMG;

  0003f	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00045	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 455  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageMG;

  0004b	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00051	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@MG:

; 456  : 		}
; 457  : 	}
; 458  : 
; 459  : 	if(this->MaxDefenceMG != -1)

  00057	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  0005d	83 f8 ff	 cmp	 eax, -1
  00060	74 0e		 je	 SHORT $LN19@MG

; 460  : 	{
; 461  : 		if(lpObj->m_Defense > this->MaxDefenceMG)

  00062	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00068	7e 06		 jle	 SHORT $LN19@MG

; 462  : 		{
; 463  : 			lpObj->m_Defense = this->MaxDefenceMG;

  0006a	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@MG:

; 464  : 		}
; 465  : 	}
; 466  : 
; 467  : 	if(this->MaxIgnoreDefenceRateMG != -1)

  00070	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]
  00076	56		 push	 esi
  00077	83 f8 ff	 cmp	 eax, -1
  0007a	74 11		 je	 SHORT $LN17@MG

; 468  : 	{
; 469  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateMG)

  0007c	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00083	3b f0		 cmp	 esi, eax
  00085	7e 06		 jle	 SHORT $LN17@MG

; 470  : 		{
; 471  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateMG;

  00087	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@MG:

; 472  : 		}
; 473  : 	}
; 474  : 
; 475  : 	if(this->MaxCriticalDamageRateMG != -1)

  0008d	8b 81 94 00 00
	00		 mov	 eax, DWORD PTR [ecx+148]
  00093	83 f8 ff	 cmp	 eax, -1
  00096	74 0e		 je	 SHORT $LN15@MG

; 476  : 	{
; 477  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateMG)

  00098	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  0009e	7e 06		 jle	 SHORT $LN15@MG

; 478  : 		{
; 479  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateMG;

  000a0	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@MG:

; 480  : 		}
; 481  : 	}
; 482  : 
; 483  : 	if(this->MaxExellentDamageRateMG != -1)

  000a6	8b 81 98 00 00
	00		 mov	 eax, DWORD PTR [ecx+152]
  000ac	83 f8 ff	 cmp	 eax, -1
  000af	74 0e		 je	 SHORT $LN13@MG

; 484  : 	{
; 485  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateMG)

  000b1	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  000b7	7e 06		 jle	 SHORT $LN13@MG

; 486  : 		{
; 487  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateMG;

  000b9	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@MG:

; 488  : 		}
; 489  : 	}
; 490  : 
; 491  : 	if(this->MaxDoubleDamageRateMG != -1)

  000bf	8b 81 9c 00 00
	00		 mov	 eax, DWORD PTR [ecx+156]
  000c5	83 f8 ff	 cmp	 eax, -1
  000c8	74 11		 je	 SHORT $LN11@MG

; 492  : 	{
; 493  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateMG)

  000ca	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000d1	3b f0		 cmp	 esi, eax
  000d3	7e 06		 jle	 SHORT $LN11@MG

; 494  : 		{
; 495  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateMG;

  000d5	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@MG:

; 496  : 		}
; 497  : 	}
; 498  : 
; 499  : 	if(this->MaxAbsordDamageRateMG != -1)

  000db	8b 81 a0 00 00
	00		 mov	 eax, DWORD PTR [ecx+160]
  000e1	83 f8 ff	 cmp	 eax, -1
  000e4	74 11		 je	 SHORT $LN9@MG

; 500  : 	{
; 501  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateMG)

  000e6	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000ed	3b f0		 cmp	 esi, eax
  000ef	7e 06		 jle	 SHORT $LN9@MG

; 502  : 		{
; 503  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateMG;

  000f1	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@MG:

; 504  : 		}
; 505  : 	}
; 506  : 
; 507  : 	if(this->MaxReflectDamageRateMG != -1)

  000f7	8b 81 a4 00 00
	00		 mov	 eax, DWORD PTR [ecx+164]
  000fd	83 f8 ff	 cmp	 eax, -1
  00100	74 11		 je	 SHORT $LN7@MG

; 508  : 	{
; 509  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateMG)

  00102	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  00109	3b f0		 cmp	 esi, eax
  0010b	7e 06		 jle	 SHORT $LN7@MG

; 510  : 		{
; 511  : 			lpObj->DamageReflect = this->MaxReflectDamageRateMG;

  0010d	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@MG:

; 512  : 		}
; 513  : 	}
; 514  : 
; 515  : 	if(this->MaxWizardDamageMG != -1)

  00113	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00119	5e		 pop	 esi
  0011a	83 f8 ff	 cmp	 eax, -1
  0011d	74 1a		 je	 SHORT $LN5@MG

; 516  : 	{
; 517  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageMG)

  0011f	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00125	7e 12		 jle	 SHORT $LN5@MG

; 518  : 		{
; 519  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageMG;

  00127	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 520  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageMG;

  0012d	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00133	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@MG:

; 521  : 		}
; 522  : 	}
; 523  : 
; 524  : 	if(this->MaxLifeMG != -1)

  00139	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  0013f	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  00142	83 f8 ff	 cmp	 eax, -1
  00145	74 24		 je	 SHORT $LN3@MG

; 525  : 	{
; 526  : 		if( lpObj->Life > this->MaxLifeMG)

  00147	db 45 08	 fild	 DWORD PTR tv358[ebp]
  0014a	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  0014d	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  00153	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  00156	d8 d1		 fcom	 ST(1)
  00158	df e0		 fnstsw	 ax
  0015a	dd d9		 fstp	 ST(1)
  0015c	f6 c4 05	 test	 ah, 5
  0015f	7a 08		 jp	 SHORT $LN27@MG

; 527  : 		{
; 528  : 			lpObj->Life = this->MaxLifeMG;

  00161	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  00167	eb 02		 jmp	 SHORT $LN3@MG
$LN27@MG:
  00169	dd d8		 fstp	 ST(0)
$LN3@MG:

; 529  : 		}
; 530  : 	}
; 531  : 
; 532  : 	if(this->MaxSdMG != -1)

  0016b	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  00171	83 f9 ff	 cmp	 ecx, -1
  00174	74 0e		 je	 SHORT $LN1@MG

; 533  : 	{
; 534  : 		if( lpObj->iShield > this->MaxSdMG)

  00176	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  0017c	7e 06		 jle	 SHORT $LN1@MG

; 535  : 		{
; 536  : 			lpObj->iShield = this->MaxSdMG;

  0017e	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@MG:

; 537  : 		}
; 538  : 	}
; 539  : }

  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
?MG@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::MG
_TEXT	ENDS
PUBLIC	?DL@cMaxPower@@AAEXH@Z				; cMaxPower::DL
; Function compile flags: /Ogtp
;	COMDAT ?DL@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?DL@cMaxPower@@AAEXH@Z PROC				; cMaxPower::DL, COMDAT
; _this$ = ecx

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 543  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 544  : 
; 545  : 	if(this->MaxDamageDL != -1)

  00006	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  0000c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00012	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 f8 ff	 cmp	 eax, -1
  0001b	74 3a		 je	 SHORT $LN22@DL

; 546  : 	{
; 547  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageDL || lpObj->m_AttackDamageMaxLeft > this->MaxDamageDL)

  0001d	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00023	7f 08		 jg	 SHORT $LN21@DL
  00025	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  0002b	7e 2a		 jle	 SHORT $LN22@DL
$LN21@DL:

; 548  : 		{
; 549  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageDL;

  0002d	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 550  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageDL;

  00033	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  00039	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 551  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageDL;

  0003f	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  00045	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 552  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageDL;

  0004b	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  00051	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@DL:

; 553  : 		}
; 554  : 	}
; 555  : 
; 556  : 	if(this->MaxDefenceDL != -1)

  00057	8b 81 b8 00 00
	00		 mov	 eax, DWORD PTR [ecx+184]
  0005d	83 f8 ff	 cmp	 eax, -1
  00060	74 0e		 je	 SHORT $LN19@DL

; 557  : 	{
; 558  : 		if(lpObj->m_Defense > this->MaxDefenceDL)

  00062	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00068	7e 06		 jle	 SHORT $LN19@DL

; 559  : 		{
; 560  : 			lpObj->m_Defense = this->MaxDefenceDL;

  0006a	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@DL:

; 561  : 		}
; 562  : 	}
; 563  : 
; 564  : 	if(this->MaxIgnoreDefenceRateDL != -1)

  00070	8b 81 bc 00 00
	00		 mov	 eax, DWORD PTR [ecx+188]
  00076	56		 push	 esi
  00077	83 f8 ff	 cmp	 eax, -1
  0007a	74 11		 je	 SHORT $LN17@DL

; 565  : 	{
; 566  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateDL)

  0007c	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00083	3b f0		 cmp	 esi, eax
  00085	7e 06		 jle	 SHORT $LN17@DL

; 567  : 		{
; 568  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateDL;

  00087	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@DL:

; 569  : 		}
; 570  : 	}
; 571  : 
; 572  : 	if(this->MaxCriticalDamageRateDL != -1)

  0008d	8b 81 c0 00 00
	00		 mov	 eax, DWORD PTR [ecx+192]
  00093	83 f8 ff	 cmp	 eax, -1
  00096	74 0e		 je	 SHORT $LN15@DL

; 573  : 	{
; 574  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateDL)

  00098	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  0009e	7e 06		 jle	 SHORT $LN15@DL

; 575  : 		{
; 576  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateDL;

  000a0	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@DL:

; 577  : 		}
; 578  : 	}
; 579  : 
; 580  : 	if(this->MaxExellentDamageRateDL != -1)

  000a6	8b 81 c4 00 00
	00		 mov	 eax, DWORD PTR [ecx+196]
  000ac	83 f8 ff	 cmp	 eax, -1
  000af	74 0e		 je	 SHORT $LN13@DL

; 581  : 	{
; 582  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateDL)

  000b1	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  000b7	7e 06		 jle	 SHORT $LN13@DL

; 583  : 		{
; 584  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateDL;

  000b9	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@DL:

; 585  : 		}
; 586  : 	}
; 587  : 
; 588  : 	if(this->MaxDoubleDamageRateDL != -1)

  000bf	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  000c5	83 f8 ff	 cmp	 eax, -1
  000c8	74 11		 je	 SHORT $LN11@DL

; 589  : 	{
; 590  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateDL)

  000ca	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000d1	3b f0		 cmp	 esi, eax
  000d3	7e 06		 jle	 SHORT $LN11@DL

; 591  : 		{
; 592  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateDL;

  000d5	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@DL:

; 593  : 		}
; 594  : 	}
; 595  : 
; 596  : 	if(this->MaxAbsordDamageRateDL != -1)

  000db	8b 81 cc 00 00
	00		 mov	 eax, DWORD PTR [ecx+204]
  000e1	83 f8 ff	 cmp	 eax, -1
  000e4	74 11		 je	 SHORT $LN9@DL

; 597  : 	{
; 598  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateDL)

  000e6	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000ed	3b f0		 cmp	 esi, eax
  000ef	7e 06		 jle	 SHORT $LN9@DL

; 599  : 		{
; 600  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateDL;

  000f1	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@DL:

; 601  : 		}
; 602  : 	}
; 603  : 
; 604  : 	if(this->MaxReflectDamageRateDL != -1)

  000f7	8b 81 d0 00 00
	00		 mov	 eax, DWORD PTR [ecx+208]
  000fd	83 f8 ff	 cmp	 eax, -1
  00100	74 11		 je	 SHORT $LN7@DL

; 605  : 	{
; 606  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateDL)

  00102	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  00109	3b f0		 cmp	 esi, eax
  0010b	7e 06		 jle	 SHORT $LN7@DL

; 607  : 		{
; 608  : 			lpObj->DamageReflect = this->MaxReflectDamageRateDL;

  0010d	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@DL:

; 609  : 		}
; 610  : 	}
; 611  : 
; 612  : 	if(this->MaxWizardDamageDL != -1)

  00113	8b 81 d4 00 00
	00		 mov	 eax, DWORD PTR [ecx+212]
  00119	5e		 pop	 esi
  0011a	83 f8 ff	 cmp	 eax, -1
  0011d	74 1a		 je	 SHORT $LN5@DL

; 613  : 	{
; 614  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageDL)

  0011f	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00125	7e 12		 jle	 SHORT $LN5@DL

; 615  : 		{
; 616  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageDL;

  00127	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 617  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageDL;

  0012d	8b 81 d4 00 00
	00		 mov	 eax, DWORD PTR [ecx+212]
  00133	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@DL:

; 618  : 		}
; 619  : 	}
; 620  : 
; 621  : 	if(this->MaxLifeDL != -1)

  00139	8b 81 d8 00 00
	00		 mov	 eax, DWORD PTR [ecx+216]
  0013f	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  00142	83 f8 ff	 cmp	 eax, -1
  00145	74 24		 je	 SHORT $LN3@DL

; 622  : 	{
; 623  : 		if( lpObj->Life > this->MaxLifeDL)

  00147	db 45 08	 fild	 DWORD PTR tv358[ebp]
  0014a	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  0014d	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  00153	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  00156	d8 d1		 fcom	 ST(1)
  00158	df e0		 fnstsw	 ax
  0015a	dd d9		 fstp	 ST(1)
  0015c	f6 c4 05	 test	 ah, 5
  0015f	7a 08		 jp	 SHORT $LN27@DL

; 624  : 		{
; 625  : 			lpObj->Life = this->MaxLifeDL;

  00161	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  00167	eb 02		 jmp	 SHORT $LN3@DL
$LN27@DL:
  00169	dd d8		 fstp	 ST(0)
$LN3@DL:

; 626  : 		}
; 627  : 	}
; 628  : 
; 629  : 	if(this->MaxSdDL != -1)

  0016b	8b 89 dc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+220]
  00171	83 f9 ff	 cmp	 ecx, -1
  00174	74 0e		 je	 SHORT $LN1@DL

; 630  : 	{
; 631  : 		if( lpObj->iShield > this->MaxSdDL)

  00176	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  0017c	7e 06		 jle	 SHORT $LN1@DL

; 632  : 		{
; 633  : 			lpObj->iShield = this->MaxSdDL;

  0017e	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@DL:

; 634  : 		}
; 635  : 	}
; 636  : }

  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
?DL@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::DL
_TEXT	ENDS
PUBLIC	?SUM@cMaxPower@@AAEXH@Z				; cMaxPower::SUM
; Function compile flags: /Ogtp
;	COMDAT ?SUM@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?SUM@cMaxPower@@AAEXH@Z PROC				; cMaxPower::SUM, COMDAT
; _this$ = ecx

; 639  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 640  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 641  : 
; 642  : 	if(this->MaxDamageSUM != -1)

  00006	8b 81 e0 00 00
	00		 mov	 eax, DWORD PTR [ecx+224]
  0000c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00012	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 f8 ff	 cmp	 eax, -1
  0001b	74 3a		 je	 SHORT $LN22@SUM

; 643  : 	{
; 644  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageSUM || lpObj->m_AttackDamageMaxLeft > this->MaxDamageSUM)

  0001d	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00023	7f 08		 jg	 SHORT $LN21@SUM
  00025	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  0002b	7e 2a		 jle	 SHORT $LN22@SUM
$LN21@SUM:

; 645  : 		{
; 646  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageSUM;

  0002d	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 647  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageSUM;

  00033	8b 81 e0 00 00
	00		 mov	 eax, DWORD PTR [ecx+224]
  00039	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 648  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageSUM;

  0003f	8b 81 e0 00 00
	00		 mov	 eax, DWORD PTR [ecx+224]
  00045	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 649  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageSUM;

  0004b	8b 81 e0 00 00
	00		 mov	 eax, DWORD PTR [ecx+224]
  00051	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@SUM:

; 650  : 		}
; 651  : 	}
; 652  : 
; 653  : 	if(this->MaxDefenceSUM != -1)

  00057	8b 81 e4 00 00
	00		 mov	 eax, DWORD PTR [ecx+228]
  0005d	83 f8 ff	 cmp	 eax, -1
  00060	74 0e		 je	 SHORT $LN19@SUM

; 654  : 	{
; 655  : 		if(lpObj->m_Defense > this->MaxDefenceSUM)

  00062	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00068	7e 06		 jle	 SHORT $LN19@SUM

; 656  : 		{
; 657  : 			lpObj->m_Defense = this->MaxDefenceSUM;

  0006a	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@SUM:

; 658  : 		}
; 659  : 	}
; 660  : 
; 661  : 	if(this->MaxIgnoreDefenceRateSUM != -1)

  00070	8b 81 e8 00 00
	00		 mov	 eax, DWORD PTR [ecx+232]
  00076	56		 push	 esi
  00077	83 f8 ff	 cmp	 eax, -1
  0007a	74 11		 je	 SHORT $LN17@SUM

; 662  : 	{
; 663  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateSUM)

  0007c	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00083	3b f0		 cmp	 esi, eax
  00085	7e 06		 jle	 SHORT $LN17@SUM

; 664  : 		{
; 665  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateSUM;

  00087	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@SUM:

; 666  : 		}
; 667  : 	}
; 668  : 
; 669  : 	if(this->MaxCriticalDamageRateSUM != -1)

  0008d	8b 81 ec 00 00
	00		 mov	 eax, DWORD PTR [ecx+236]
  00093	83 f8 ff	 cmp	 eax, -1
  00096	74 0e		 je	 SHORT $LN15@SUM

; 670  : 	{
; 671  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateSUM)

  00098	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  0009e	7e 06		 jle	 SHORT $LN15@SUM

; 672  : 		{
; 673  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateSUM;

  000a0	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@SUM:

; 674  : 		}
; 675  : 	}
; 676  : 
; 677  : 	if(this->MaxExellentDamageRateSUM != -1)

  000a6	8b 81 f0 00 00
	00		 mov	 eax, DWORD PTR [ecx+240]
  000ac	83 f8 ff	 cmp	 eax, -1
  000af	74 0e		 je	 SHORT $LN13@SUM

; 678  : 	{
; 679  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateSUM)

  000b1	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  000b7	7e 06		 jle	 SHORT $LN13@SUM

; 680  : 		{
; 681  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateSUM;

  000b9	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@SUM:

; 682  : 		}
; 683  : 	}
; 684  : 
; 685  : 	if(this->MaxDoubleDamageRateSUM != -1)

  000bf	8b 81 f4 00 00
	00		 mov	 eax, DWORD PTR [ecx+244]
  000c5	83 f8 ff	 cmp	 eax, -1
  000c8	74 11		 je	 SHORT $LN11@SUM

; 686  : 	{
; 687  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateSUM)

  000ca	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000d1	3b f0		 cmp	 esi, eax
  000d3	7e 06		 jle	 SHORT $LN11@SUM

; 688  : 		{
; 689  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateSUM;

  000d5	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@SUM:

; 690  : 		}
; 691  : 	}
; 692  : 
; 693  : 	if(this->MaxAbsordDamageRateSUM != -1)

  000db	8b 81 f8 00 00
	00		 mov	 eax, DWORD PTR [ecx+248]
  000e1	83 f8 ff	 cmp	 eax, -1
  000e4	74 11		 je	 SHORT $LN9@SUM

; 694  : 	{
; 695  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateSUM)

  000e6	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000ed	3b f0		 cmp	 esi, eax
  000ef	7e 06		 jle	 SHORT $LN9@SUM

; 696  : 		{
; 697  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateSUM;

  000f1	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@SUM:

; 698  : 		}
; 699  : 	}
; 700  : 
; 701  : 	if(this->MaxReflectDamageRateSUM != -1)

  000f7	8b 81 fc 00 00
	00		 mov	 eax, DWORD PTR [ecx+252]
  000fd	83 f8 ff	 cmp	 eax, -1
  00100	74 11		 je	 SHORT $LN7@SUM

; 702  : 	{
; 703  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateSUM)

  00102	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  00109	3b f0		 cmp	 esi, eax
  0010b	7e 06		 jle	 SHORT $LN7@SUM

; 704  : 		{
; 705  : 			lpObj->DamageReflect = this->MaxReflectDamageRateSUM;

  0010d	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@SUM:

; 706  : 		}
; 707  : 	}
; 708  : 
; 709  : 	if(this->MaxWizardDamageSUM != -1)

  00113	8b 81 00 01 00
	00		 mov	 eax, DWORD PTR [ecx+256]
  00119	5e		 pop	 esi
  0011a	83 f8 ff	 cmp	 eax, -1
  0011d	74 1a		 je	 SHORT $LN5@SUM

; 710  : 	{
; 711  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageSUM)

  0011f	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00125	7e 12		 jle	 SHORT $LN5@SUM

; 712  : 		{
; 713  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageSUM;

  00127	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 714  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageSUM;

  0012d	8b 81 00 01 00
	00		 mov	 eax, DWORD PTR [ecx+256]
  00133	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@SUM:

; 715  : 		}
; 716  : 	}
; 717  : 
; 718  : 	if(this->MaxLifeSUM != -1)

  00139	8b 81 04 01 00
	00		 mov	 eax, DWORD PTR [ecx+260]
  0013f	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  00142	83 f8 ff	 cmp	 eax, -1
  00145	74 24		 je	 SHORT $LN3@SUM

; 719  : 	{
; 720  : 		if( lpObj->Life > this->MaxLifeSUM)

  00147	db 45 08	 fild	 DWORD PTR tv358[ebp]
  0014a	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  0014d	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  00153	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  00156	d8 d1		 fcom	 ST(1)
  00158	df e0		 fnstsw	 ax
  0015a	dd d9		 fstp	 ST(1)
  0015c	f6 c4 05	 test	 ah, 5
  0015f	7a 08		 jp	 SHORT $LN27@SUM

; 721  : 		{
; 722  : 			lpObj->Life = this->MaxLifeSUM;

  00161	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  00167	eb 02		 jmp	 SHORT $LN3@SUM
$LN27@SUM:
  00169	dd d8		 fstp	 ST(0)
$LN3@SUM:

; 723  : 		}
; 724  : 	}
; 725  : 
; 726  : 	if(this->MaxSdSUM != -1)

  0016b	8b 89 08 01 00
	00		 mov	 ecx, DWORD PTR [ecx+264]
  00171	83 f9 ff	 cmp	 ecx, -1
  00174	74 0e		 je	 SHORT $LN1@SUM

; 727  : 	{
; 728  : 		if( lpObj->iShield > this->MaxSdSUM)

  00176	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  0017c	7e 06		 jle	 SHORT $LN1@SUM

; 729  : 		{
; 730  : 			lpObj->iShield = this->MaxSdSUM;

  0017e	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@SUM:

; 731  : 		}
; 732  : 	}
; 733  : }

  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
?SUM@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::SUM
_TEXT	ENDS
PUBLIC	?RF@cMaxPower@@AAEXH@Z				; cMaxPower::RF
; Function compile flags: /Ogtp
;	COMDAT ?RF@cMaxPower@@AAEXH@Z
_TEXT	SEGMENT
tv364 = 8						; size = 4
tv358 = 8						; size = 4
_aIndex$ = 8						; size = 4
?RF@cMaxPower@@AAEXH@Z PROC				; cMaxPower::RF, COMDAT
; _this$ = ecx

; 736  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 737  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]

; 738  : 
; 739  : 	if(this->MaxDamageRF != -1)

  00006	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  0000c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00012	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 f8 ff	 cmp	 eax, -1
  0001b	74 3a		 je	 SHORT $LN22@RF

; 740  : 	{
; 741  : 		if(lpObj->m_AttackDamageMaxRight > this->MaxDamageRF || lpObj->m_AttackDamageMaxLeft > this->MaxDamageRF)

  0001d	39 82 80 04 00
	00		 cmp	 DWORD PTR [edx+1152], eax
  00023	7f 08		 jg	 SHORT $LN21@RF
  00025	39 82 78 04 00
	00		 cmp	 DWORD PTR [edx+1144], eax
  0002b	7e 2a		 jle	 SHORT $LN22@RF
$LN21@RF:

; 742  : 		{
; 743  : 			lpObj->m_AttackDamageMinRight = this->MaxDamageRF;

  0002d	89 82 84 04 00
	00		 mov	 DWORD PTR [edx+1156], eax

; 744  : 			lpObj->m_AttackDamageMaxRight = this->MaxDamageRF;

  00033	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00039	89 82 80 04 00
	00		 mov	 DWORD PTR [edx+1152], eax

; 745  : 			lpObj->m_AttackDamageMinLeft = this->MaxDamageRF;

  0003f	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00045	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 746  : 			lpObj->m_AttackDamageMaxLeft = this->MaxDamageRF;

  0004b	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00051	89 82 78 04 00
	00		 mov	 DWORD PTR [edx+1144], eax
$LN22@RF:

; 747  : 		}
; 748  : 	}
; 749  : 
; 750  : 	if(this->MaxDefenceRF != -1)

  00057	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  0005d	83 f8 ff	 cmp	 eax, -1
  00060	74 0e		 je	 SHORT $LN19@RF

; 751  : 	{
; 752  : 		if(lpObj->m_Defense > this->MaxDefenceRF)

  00062	39 82 94 04 00
	00		 cmp	 DWORD PTR [edx+1172], eax
  00068	7e 06		 jle	 SHORT $LN19@RF

; 753  : 		{
; 754  : 			lpObj->m_Defense = this->MaxDefenceRF;

  0006a	89 82 94 04 00
	00		 mov	 DWORD PTR [edx+1172], eax
$LN19@RF:

; 755  : 		}
; 756  : 	}
; 757  : 
; 758  : 	if(this->MaxIgnoreDefenceRateRF != -1)

  00070	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  00076	56		 push	 esi
  00077	83 f8 ff	 cmp	 eax, -1
  0007a	74 11		 je	 SHORT $LN17@RF

; 759  : 	{
; 760  : 		if(lpObj->SetOpIgnoreDefense > this->MaxIgnoreDefenceRateRF)

  0007c	0f b6 b2 3e 11
	00 00		 movzx	 esi, BYTE PTR [edx+4414]
  00083	3b f0		 cmp	 esi, eax
  00085	7e 06		 jle	 SHORT $LN17@RF

; 761  : 		{
; 762  : 			lpObj->SetOpIgnoreDefense = this->MaxIgnoreDefenceRateRF;

  00087	88 82 3e 11 00
	00		 mov	 BYTE PTR [edx+4414], al
$LN17@RF:

; 763  : 		}
; 764  : 	}
; 765  : 
; 766  : 	if(this->MaxCriticalDamageRateRF != -1)

  0008d	8b 81 18 01 00
	00		 mov	 eax, DWORD PTR [ecx+280]
  00093	83 f8 ff	 cmp	 eax, -1
  00096	74 0e		 je	 SHORT $LN15@RF

; 767  : 	{
; 768  : 		if(lpObj->m_CriticalDamage > this->MaxCriticalDamageRateRF)

  00098	39 82 bc 04 00
	00		 cmp	 DWORD PTR [edx+1212], eax
  0009e	7e 06		 jle	 SHORT $LN15@RF

; 769  : 		{
; 770  : 			lpObj->m_CriticalDamage = this->MaxCriticalDamageRateRF;

  000a0	89 82 bc 04 00
	00		 mov	 DWORD PTR [edx+1212], eax
$LN15@RF:

; 771  : 		}
; 772  : 	}
; 773  : 
; 774  : 	if(this->MaxExellentDamageRateRF != -1)

  000a6	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]
  000ac	83 f8 ff	 cmp	 eax, -1
  000af	74 0e		 je	 SHORT $LN13@RF

; 775  : 	{
; 776  : 		if(lpObj->m_ExcelentDamage > this->MaxExellentDamageRateRF)

  000b1	39 82 c0 04 00
	00		 cmp	 DWORD PTR [edx+1216], eax
  000b7	7e 06		 jle	 SHORT $LN13@RF

; 777  : 		{
; 778  : 			lpObj->m_ExcelentDamage = this->MaxExellentDamageRateRF;

  000b9	89 82 c0 04 00
	00		 mov	 DWORD PTR [edx+1216], eax
$LN13@RF:

; 779  : 		}
; 780  : 	}
; 781  : 
; 782  : 	if(this->MaxDoubleDamageRateRF != -1)

  000bf	8b 81 20 01 00
	00		 mov	 eax, DWORD PTR [ecx+288]
  000c5	83 f8 ff	 cmp	 eax, -1
  000c8	74 11		 je	 SHORT $LN11@RF

; 783  : 	{
; 784  : 		if(lpObj->SetOpDoubleDamage > this->MaxDoubleDamageRateRF)

  000ca	0f b6 b2 3f 11
	00 00		 movzx	 esi, BYTE PTR [edx+4415]
  000d1	3b f0		 cmp	 esi, eax
  000d3	7e 06		 jle	 SHORT $LN11@RF

; 785  : 		{
; 786  : 			lpObj->SetOpDoubleDamage = this->MaxDoubleDamageRateRF;

  000d5	88 82 3f 11 00
	00		 mov	 BYTE PTR [edx+4415], al
$LN11@RF:

; 787  : 		}
; 788  : 	}
; 789  : 
; 790  : 	if(this->MaxAbsordDamageRateRF != -1)

  000db	8b 81 24 01 00
	00		 mov	 eax, DWORD PTR [ecx+292]
  000e1	83 f8 ff	 cmp	 eax, -1
  000e4	74 11		 je	 SHORT $LN9@RF

; 791  : 	{
; 792  : 		if(lpObj->DamageMinus > this->MaxAbsordDamageRateRF)

  000e6	0f b6 b2 70 01
	00 00		 movzx	 esi, BYTE PTR [edx+368]
  000ed	3b f0		 cmp	 esi, eax
  000ef	7e 06		 jle	 SHORT $LN9@RF

; 793  : 		{
; 794  : 			lpObj->DamageMinus = this->MaxAbsordDamageRateRF;

  000f1	88 82 70 01 00
	00		 mov	 BYTE PTR [edx+368], al
$LN9@RF:

; 795  : 		}
; 796  : 	}
; 797  : 
; 798  : 	if(this->MaxReflectDamageRateRF != -1)

  000f7	8b 81 28 01 00
	00		 mov	 eax, DWORD PTR [ecx+296]
  000fd	83 f8 ff	 cmp	 eax, -1
  00100	74 11		 je	 SHORT $LN7@RF

; 799  : 	{
; 800  : 		if(lpObj->DamageReflect > this->MaxReflectDamageRateRF)

  00102	0f b6 b2 71 01
	00 00		 movzx	 esi, BYTE PTR [edx+369]
  00109	3b f0		 cmp	 esi, eax
  0010b	7e 06		 jle	 SHORT $LN7@RF

; 801  : 		{
; 802  : 			lpObj->DamageReflect = this->MaxReflectDamageRateRF;

  0010d	88 82 71 01 00
	00		 mov	 BYTE PTR [edx+369], al
$LN7@RF:

; 803  : 		}
; 804  : 	}
; 805  : 
; 806  : 	if(this->MaxWizardDamageRF != -1)

  00113	8b 81 2c 01 00
	00		 mov	 eax, DWORD PTR [ecx+300]
  00119	5e		 pop	 esi
  0011a	83 f8 ff	 cmp	 eax, -1
  0011d	74 1a		 je	 SHORT $LN5@RF

; 807  : 	{
; 808  : 		if(lpObj->m_MagicDamageMax > this->MaxWizardDamageRF)

  0011f	39 82 6c 04 00
	00		 cmp	 DWORD PTR [edx+1132], eax
  00125	7e 12		 jle	 SHORT $LN5@RF

; 809  : 		{
; 810  : 			lpObj->m_MagicDamageMax = this->MaxWizardDamageRF;

  00127	89 82 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], eax

; 811  : 			lpObj->m_MagicDamageMin = this->MaxWizardDamageRF;

  0012d	8b 81 2c 01 00
	00		 mov	 eax, DWORD PTR [ecx+300]
  00133	89 82 68 04 00
	00		 mov	 DWORD PTR [edx+1128], eax
$LN5@RF:

; 812  : 		}
; 813  : 	}
; 814  : 
; 815  : 	if(this->MaxLifeRF != -1)

  00139	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]
  0013f	89 45 08	 mov	 DWORD PTR tv358[ebp], eax
  00142	83 f8 ff	 cmp	 eax, -1
  00145	74 24		 je	 SHORT $LN3@RF

; 816  : 	{
; 817  : 		if( lpObj->Life > this->MaxLifeRF)

  00147	db 45 08	 fild	 DWORD PTR tv358[ebp]
  0014a	d9 5d 08	 fstp	 DWORD PTR tv364[ebp]
  0014d	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  00153	d9 45 08	 fld	 DWORD PTR tv364[ebp]
  00156	d8 d1		 fcom	 ST(1)
  00158	df e0		 fnstsw	 ax
  0015a	dd d9		 fstp	 ST(1)
  0015c	f6 c4 05	 test	 ah, 5
  0015f	7a 08		 jp	 SHORT $LN27@RF

; 818  : 		{
; 819  : 			lpObj->Life = this->MaxLifeRF;

  00161	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
  00167	eb 02		 jmp	 SHORT $LN3@RF
$LN27@RF:
  00169	dd d8		 fstp	 ST(0)
$LN3@RF:

; 820  : 		}
; 821  : 	}
; 822  : 
; 823  : 	if(this->MaxSdRF != -1)

  0016b	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00171	83 f9 ff	 cmp	 ecx, -1
  00174	74 0e		 je	 SHORT $LN1@RF

; 824  : 	{
; 825  : 		if( lpObj->iShield > this->MaxSdRF)

  00176	39 8a 54 01 00
	00		 cmp	 DWORD PTR [edx+340], ecx
  0017c	7e 06		 jle	 SHORT $LN1@RF

; 826  : 		{
; 827  : 			lpObj->iShield = this->MaxSdRF;

  0017e	89 8a 54 01 00
	00		 mov	 DWORD PTR [edx+340], ecx
$LN1@RF:

; 828  : 		}
; 829  : 	}
; 830  : }

  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
?RF@cMaxPower@@AAEXH@Z ENDP				; cMaxPower::RF
_TEXT	ENDS
PUBLIC	?Main@cMaxPower@@QAEXH@Z			; cMaxPower::Main
; Function compile flags: /Ogtp
;	COMDAT ?Main@cMaxPower@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?Main@cMaxPower@@QAEXH@Z PROC				; cMaxPower::Main, COMDAT
; _this$ = ecx

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 109  : 	if(!this->Enable) return;

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 69		 je	 SHORT $LN8@Main

; 110  : 
; 111  : 	LPOBJ lpObj = &gObj[aIndex];

  00008	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000b	8b d0		 mov	 edx, eax
  0000d	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00013	56		 push	 esi

; 112  : 
; 113  : 	switch(lpObj->Class)

  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001a	0f b7 94 32 b8
	00 00 00	 movzx	 edx, WORD PTR [edx+esi+184]
  00022	5e		 pop	 esi
  00023	83 fa 06	 cmp	 edx, 6
  00026	77 49		 ja	 SHORT $LN8@Main
  00028	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN13@Main[edx*4]
$LN7@Main:

; 114  : 	{
; 115  : 	case CLASS_WIZARD:
; 116  : 		{
; 117  : 			this->DW(aIndex);

  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?DW@cMaxPower@@AAEXH@Z	; cMaxPower::DW

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN6@Main:

; 118  : 		}
; 119  : 		break;
; 120  : 	case CLASS_KNIGHT:
; 121  : 		{
; 122  : 			this->DK(aIndex);

  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?DK@cMaxPower@@AAEXH@Z	; cMaxPower::DK

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN5@Main:

; 123  : 		}
; 124  : 		break;
; 125  : 	case CLASS_ELF:
; 126  : 		{
; 127  : 			this->Elf(aIndex);

  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?Elf@cMaxPower@@AAEXH@Z	; cMaxPower::Elf

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
$LN4@Main:

; 128  : 		}
; 129  : 		break;
; 130  : 	case CLASS_MAGUMSA:
; 131  : 		{
; 132  : 			this->MG(aIndex);

  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?MG@cMaxPower@@AAEXH@Z	; cMaxPower::MG

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
$LN3@Main:

; 133  : 		}
; 134  : 		break;
; 135  : 	case CLASS_DARKLORD:
; 136  : 		{
; 137  : 			this->DL(aIndex);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?DL@cMaxPower@@AAEXH@Z	; cMaxPower::DL

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN2@Main:

; 138  : 		}
; 139  : 		break;
; 140  : 	case CLASS_SUMMONER:
; 141  : 		{
; 142  : 			this->SUM(aIndex);

  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?SUM@cMaxPower@@AAEXH@Z	; cMaxPower::SUM

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
$LN1@Main:

; 143  : 		}
; 144  : 		break;
; 145  : 	case CLASS_MONK:
; 146  : 		{
; 147  : 			this->RF(aIndex);

  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?RF@cMaxPower@@AAEXH@Z	; cMaxPower::RF
$LN8@Main:

; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
  00075	8d 49 00	 npad	 3
$LN13@Main:
  00078	00 00 00 00	 DD	 $LN7@Main
  0007c	00 00 00 00	 DD	 $LN6@Main
  00080	00 00 00 00	 DD	 $LN5@Main
  00084	00 00 00 00	 DD	 $LN4@Main
  00088	00 00 00 00	 DD	 $LN3@Main
  0008c	00 00 00 00	 DD	 $LN2@Main
  00090	00 00 00 00	 DD	 $LN1@Main
?Main@cMaxPower@@QAEXH@Z ENDP				; cMaxPower::Main
_TEXT	ENDS
END
