; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\MiniDump.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA ; PreviousExceptionFilter
_BSS	SEGMENT
?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA DD 01H DUP (?) ; PreviousExceptionFilter
_BSS	ENDS
PUBLIC	??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@ ; `string'
PUBLIC	??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@	; `string'
PUBLIC	??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; UnHandledExceptionFilter
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__snprintf:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@
; File e:\work\tranet_version\gs\gameserver\minidump.cpp
CONST	SEGMENT
??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@ DB '%d'
	DB	'-%d-%d_%dh%dm%ds.dmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@
CONST	SEGMENT
??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@ DB 'MiniDumpWriteDump', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@
CONST	SEGMENT
??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@ DB 'DBGHELP.DLL', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z
_TEXT	SEGMENT
_MiniDumpExceptionInfo$189562 = -292			; size = 12
_SystemTime$189556 = -280				; size = 16
_DumpPath$189555 = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_exceptionInfo$ = 8					; size = 4
?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z PROC ; UnHandledExceptionFilter, COMDAT

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _exceptionInfo$[ebp]
  00017	56		 push	 esi
  00018	57		 push	 edi

; 19   :     HMODULE    DllHandle        = NULL;
; 20   : 
; 21   :     // Windows 2000 ???? ?? DBGHELP? ???? ??? ??? ??.
; 22   :     DllHandle                = LoadLibrary(_T("DBGHELP.DLL"));

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4

; 23   : 
; 24   :     if (DllHandle)

  00024	85 c0		 test	 eax, eax
  00026	0f 84 13 01 00
	00		 je	 $LN3@UnHandledE

; 25   :     {
; 26   :         MINIDUMPWRITEDUMP Dump = (MINIDUMPWRITEDUMP) GetProcAddress(DllHandle, "MiniDumpWriteDump");

  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00038	8b f8		 mov	 edi, eax

; 27   : 
; 28   :         if (Dump)

  0003a	85 ff		 test	 edi, edi
  0003c	0f 84 fd 00 00
	00		 je	 $LN3@UnHandledE

; 29   :         {
; 30   :             TCHAR        DumpPath[MAX_PATH] = {0,};

  00042	68 03 01 00 00	 push	 259			; 00000103H
  00047	8d 85 f9 fe ff
	ff		 lea	 eax, DWORD PTR _DumpPath$189555[ebp+1]
  0004d	6a 00		 push	 0
  0004f	50		 push	 eax
  00050	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _DumpPath$189555[ebp], 0
  00057	e8 00 00 00 00	 call	 _memset
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 31   :             SYSTEMTIME    SystemTime;
; 32   : 
; 33   :             GetLocalTime(&SystemTime);

  0005f	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _SystemTime$189556[ebp]
  00065	51		 push	 ecx
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 34   : 
; 35   :             _sntprintf(DumpPath, MAX_PATH, _T("%d-%d-%d_%dh%dm%ds.dmp"),
; 36   :                 SystemTime.wYear,
; 37   :                 SystemTime.wMonth,
; 38   :                 SystemTime.wDay,
; 39   :                 SystemTime.wHour,
; 40   :                 SystemTime.wMinute,
; 41   :                 SystemTime.wSecond);

  0006c	0f b7 95 f4 fe
	ff ff		 movzx	 edx, WORD PTR _SystemTime$189556[ebp+12]
  00073	0f b7 85 f2 fe
	ff ff		 movzx	 eax, WORD PTR _SystemTime$189556[ebp+10]
  0007a	0f b7 8d f0 fe
	ff ff		 movzx	 ecx, WORD PTR _SystemTime$189556[ebp+8]
  00081	52		 push	 edx
  00082	0f b7 95 ee fe
	ff ff		 movzx	 edx, WORD PTR _SystemTime$189556[ebp+6]
  00089	50		 push	 eax
  0008a	0f b7 85 ea fe
	ff ff		 movzx	 eax, WORD PTR _SystemTime$189556[ebp+2]
  00091	51		 push	 ecx
  00092	0f b7 8d e8 fe
	ff ff		 movzx	 ecx, WORD PTR _SystemTime$189556[ebp]
  00099	52		 push	 edx
  0009a	50		 push	 eax
  0009b	51		 push	 ecx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@
  000a1	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _DumpPath$189555[ebp]
  000a7	68 04 01 00 00	 push	 260			; 00000104H
  000ac	52		 push	 edx
  000ad	e8 00 00 00 00	 call	 __snprintf
  000b2	83 c4 24	 add	 esp, 36			; 00000024H

; 42   :            
; 43   :             HANDLE FileHandle = CreateFile(
; 44   :                 DumpPath,
; 45   :                 GENERIC_WRITE,
; 46   :                 FILE_SHARE_WRITE,
; 47   :                 NULL, CREATE_ALWAYS,
; 48   :                 FILE_ATTRIBUTE_NORMAL,
; 49   :                 NULL);

  000b5	6a 00		 push	 0
  000b7	68 80 00 00 00	 push	 128			; 00000080H
  000bc	6a 02		 push	 2
  000be	6a 00		 push	 0
  000c0	6a 02		 push	 2
  000c2	68 00 00 00 40	 push	 1073741824		; 40000000H
  000c7	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _DumpPath$189555[ebp]
  000cd	50		 push	 eax
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  000d4	8b f0		 mov	 esi, eax

; 50   : 
; 51   :             if (FileHandle != INVALID_HANDLE_VALUE)

  000d6	83 fe ff	 cmp	 esi, -1
  000d9	74 5d		 je	 SHORT $LN1@UnHandledE

; 52   :             {
; 53   :                 _MINIDUMP_EXCEPTION_INFORMATION MiniDumpExceptionInfo;
; 54   :                
; 55   :                 MiniDumpExceptionInfo.ThreadId            = GetCurrentThreadId();

  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0

; 56   :                 MiniDumpExceptionInfo.ExceptionPointers    = exceptionInfo;
; 57   :                 MiniDumpExceptionInfo.ClientPointers    = NULL;
; 58   : 
; 59   :                 BOOL Success = Dump(
; 60   :                     GetCurrentProcess(),
; 61   :                     GetCurrentProcessId(),
; 62   :                     FileHandle,
; 63   :                     (_MINIDUMP_TYPE)(MiniDumpWithUnloadedModules+
; 64   : 					MiniDumpWithHandleData+
; 65   : 					MiniDumpWithFullMemory), //webzen...
; 66   :                     &MiniDumpExceptionInfo,
; 67   :                     NULL,
; 68   :                     NULL);

  000e1	6a 00		 push	 0
  000e3	6a 00		 push	 0
  000e5	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _MiniDumpExceptionInfo$189562[ebp]
  000eb	51		 push	 ecx
  000ec	6a 26		 push	 38			; 00000026H
  000ee	56		 push	 esi
  000ef	89 85 dc fe ff
	ff		 mov	 DWORD PTR _MiniDumpExceptionInfo$189562[ebp], eax
  000f5	89 9d e0 fe ff
	ff		 mov	 DWORD PTR _MiniDumpExceptionInfo$189562[ebp+4], ebx
  000fb	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _MiniDumpExceptionInfo$189562[ebp+8], 0
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  0010b	50		 push	 eax
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcess@0
  00112	50		 push	 eax
  00113	ff d7		 call	 edi

; 69   : 
; 70   :                 if (Success)

  00115	85 c0		 test	 eax, eax
  00117	74 1f		 je	 SHORT $LN1@UnHandledE

; 71   :                 {
; 72   :                     CloseHandle(FileHandle);

  00119	56		 push	 esi
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi

; 73   : 
; 74   :                     return EXCEPTION_EXECUTE_HANDLER;

  00122	b8 01 00 00 00	 mov	 eax, 1
  00127	5b		 pop	 ebx

; 79   :         }
; 80   :     }
; 81   : 
; 82   :     return EXCEPTION_CONTINUE_SEARCH;
; 83   : }

  00128	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012b	33 cd		 xor	 ecx, ebp
  0012d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 04 00	 ret	 4
$LN1@UnHandledE:

; 75   :                 }
; 76   :             }
; 77   : 
; 78   :             CloseHandle(FileHandle);

  00138	56		 push	 esi
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN3@UnHandledE:

; 79   :         }
; 80   :     }
; 81   : 
; 82   :     return EXCEPTION_CONTINUE_SEARCH;
; 83   : }

  0013f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	33 cd		 xor	 ecx, ebp
  00146	33 c0		 xor	 eax, eax
  00148	5b		 pop	 ebx
  00149	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c2 04 00	 ret	 4
?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ENDP ; UnHandledExceptionFilter
_TEXT	ENDS
PUBLIC	?Begin@CMiniDump@@SAHXZ				; CMiniDump::Begin
EXTRN	__imp__SetUnhandledExceptionFilter@4:PROC
EXTRN	__imp__SetErrorMode@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Begin@CMiniDump@@SAHXZ
_TEXT	SEGMENT
?Begin@CMiniDump@@SAHXZ PROC				; CMiniDump::Begin, COMDAT

; 87   :     SetErrorMode(SEM_FAILCRITICALERRORS);

  00000	6a 01		 push	 1
  00002	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetErrorMode@4

; 88   : 
; 89   :     PreviousExceptionFilter = SetUnhandledExceptionFilter(UnHandledExceptionFilter);

  00008	68 00 00 00 00	 push	 OFFSET ?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; UnHandledExceptionFilter
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA, eax ; PreviousExceptionFilter

; 90   : 
; 91   :     return true;

  00018	b8 01 00 00 00	 mov	 eax, 1

; 92   : }

  0001d	c3		 ret	 0
?Begin@CMiniDump@@SAHXZ ENDP				; CMiniDump::Begin
_TEXT	ENDS
PUBLIC	?End@CMiniDump@@SAHXZ				; CMiniDump::End
; Function compile flags: /Ogtp
;	COMDAT ?End@CMiniDump@@SAHXZ
_TEXT	SEGMENT
?End@CMiniDump@@SAHXZ PROC				; CMiniDump::End, COMDAT

; 96   :     SetUnhandledExceptionFilter(PreviousExceptionFilter);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA ; PreviousExceptionFilter
  00005	50		 push	 eax
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4

; 97   : 
; 98   :     return true;

  0000c	b8 01 00 00 00	 mov	 eax, 1

; 99   : }

  00011	c3		 ret	 0
?End@CMiniDump@@SAHXZ ENDP				; CMiniDump::End
_TEXT	ENDS
END
