; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\MonsterSpawner.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gMonsterSpawner@@3VcMonsterSpawner@@A		; gMonsterSpawner
_BSS	SEGMENT
?gMonsterSpawner@@3VcMonsterSpawner@@A DB 0355cH DUP (?) ; gMonsterSpawner
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_0BN@MGCNOKFF@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ ; `string'
PUBLIC	??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CC@HOFBNFCC@?4?4?2Data?2ZtData?2MonsterSpawner?4in@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Load@cMonsterSpawner@@QAEXXZ			; cMonsterSpawner::Load
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Zt_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Zt_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0BN@MGCNOKFF@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
; File e:\work\tranet_version\gs\gameserver\monsterspawner.cpp
CONST	SEGMENT
??_C@_0BN@MGCNOKFF@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d "%[^"]"', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@ DB 'LOAD FILE ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HOFBNFCC@?4?4?2Data?2ZtData?2MonsterSpawner?4in@
CONST	SEGMENT
??_C@_0CC@HOFBNFCC@?4?4?2Data?2ZtData?2MonsterSpawner?4in@ DB '..\Data\Zt'
	DB	'Data\MonsterSpawner.ini', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@cMonsterSpawner@@QAEXXZ
_TEXT	SEGMENT
_Flag$ = -400						; size = 4
_file$ = -396						; size = 4
_n$202456 = -392					; size = 32
_Buff$ = -360						; size = 256
_str$202457 = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?Load@cMonsterSpawner@@QAEXXZ PROC			; cMonsterSpawner::Load, COMDAT
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 01 00
	00		 sub	 esp, 400		; 00000190H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 13   : 	this->Enable = GetPrivateProfileInt("Common","Enable",0,MONSTER_SPAWNER_DIR);

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@HOFBNFCC@?4?4?2Data?2ZtData?2MonsterSpawner?4in@
  0001b	33 db		 xor	 ebx, ebx
  0001d	53		 push	 ebx
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00028	8b f1		 mov	 esi, ecx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16

; 14   : 	
; 15   : 
; 16   : 	FILE * file = fopen(MONSTER_SPAWNER_DIR,"r");

  00030	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@HOFBNFCC@?4?4?2Data?2ZtData?2MonsterSpawner?4in@
  0003a	89 86 20 35 00
	00		 mov	 DWORD PTR [esi+13600], eax
  00040	e8 00 00 00 00	 call	 _fopen
  00045	83 c4 08	 add	 esp, 8
  00048	89 85 74 fe ff
	ff		 mov	 DWORD PTR _file$[ebp], eax

; 17   : 	if(file == NULL)

  0004e	3b c3		 cmp	 eax, ebx
  00050	75 18		 jne	 SHORT $LN10@Load

; 18   : 	{
; 19   : 		MessageBoxA(0,MONSTER_SPAWNER_DIR,"LOAD FILE ERROR",0);

  00052	53		 push	 ebx
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@HOFBNFCC@?4?4?2Data?2ZtData?2MonsterSpawner?4in@
  0005d	53		 push	 ebx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 20   : 		this->Enable = false;

  00064	89 9e 20 35 00
	00		 mov	 DWORD PTR [esi+13600], ebx
$LN10@Load:

; 21   : 	}
; 22   : 
; 23   : 	char Buff[256];
; 24   : 	int Flag = 0;

  0006a	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0006f	89 9d 70 fe ff
	ff		 mov	 DWORD PTR _Flag$[ebp], ebx

; 25   : 	this->CountMobs = 0;

  00075	89 9e 58 35 00
	00		 mov	 DWORD PTR [esi+13656], ebx
  0007b	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0007e	8d 79 9d	 lea	 edi, DWORD PTR [ecx-99]
$LL9@Load:

; 26   : 	for (int i = 0; i < MAX_MONSTER_SPAWNER; i++)
; 27   : 	{
; 28   : 		this->MonsterSpawn[i].ID = 0;

  00081	89 58 f8	 mov	 DWORD PTR [eax-8], ebx

; 29   : 		this->MonsterSpawn[i].MapNumber = 0;

  00084	89 58 fc	 mov	 DWORD PTR [eax-4], ebx

; 30   : 		this->MonsterSpawn[i].X = 0;

  00087	89 18		 mov	 DWORD PTR [eax], ebx

; 31   : 		this->MonsterSpawn[i].Y = 0;

  00089	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 32   : 		this->MonsterSpawn[i].WeekDay = 0;

  0008c	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 33   : 		this->MonsterSpawn[i].TimeHour = 0;

  0008f	89 58 0c	 mov	 DWORD PTR [eax+12], ebx

; 34   : 		this->MonsterSpawn[i].TimeMin = 0;

  00092	89 58 10	 mov	 DWORD PTR [eax+16], ebx

; 35   : 		this->MonsterSpawn[i].Status = false;

  00095	88 58 78	 mov	 BYTE PTR [eax+120], bl
  00098	05 88 00 00 00	 add	 eax, 136		; 00000088H
  0009d	2b cf		 sub	 ecx, edi
  0009f	75 e0		 jne	 SHORT $LL9@Load

; 36   : 	}
; 37   : 
; 38   : 	if(!this->Enable)

  000a1	39 9e 20 35 00
	00		 cmp	 DWORD PTR [esi+13600], ebx
  000a7	0f 84 9f 01 00
	00		 je	 $LN11@Load

; 39   : 	{
; 40   : 		return;
; 41   : 	}
; 42   : 
; 43   : 	while(!feof(file))

  000ad	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _file$[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 _feof
  000b9	83 c4 04	 add	 esp, 4
  000bc	85 c0		 test	 eax, eax
  000be	0f 85 79 01 00
	00		 jne	 $LN18@Load
  000c4	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL5@Load:

; 44   : 	{
; 45   : 		fgets(Buff,256,file);

  000d0	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR _file$[ebp]
  000d6	51		 push	 ecx
  000d7	8d 95 98 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  000dd	68 00 01 00 00	 push	 256			; 00000100H
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _fgets

; 46   : 		if(Zt_IsBadFileLine(Buff, Flag))

  000e8	8d 85 70 fe ff
	ff		 lea	 eax, DWORD PTR _Flag$[ebp]
  000ee	50		 push	 eax
  000ef	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  000f5	51		 push	 ecx
  000f6	e8 00 00 00 00	 call	 ?Zt_IsBadFileLine@@YA_NPADAAH@Z ; Zt_IsBadFileLine
  000fb	83 c4 14	 add	 esp, 20			; 00000014H
  000fe	84 c0		 test	 al, al
  00100	0f 85 20 01 00
	00		 jne	 $LN2@Load

; 47   : 			continue;
; 48   : 		if(Flag == 1)

  00106	39 bd 70 fe ff
	ff		 cmp	 DWORD PTR _Flag$[ebp], edi
  0010c	0f 85 14 01 00
	00		 jne	 $LN2@Load

; 49   : 		{
; 50   : 			if(this->CountMobs == MAX_MONSTER_SPAWNER) break;

  00112	83 be 58 35 00
	00 64		 cmp	 DWORD PTR [esi+13656], 100 ; 00000064H
  00119	0f 84 1e 01 00
	00		 je	 $LN18@Load

; 51   : 			int n[8];
; 52   : 			char str[100];
; 53   : 			sscanf(Buff, "%d %d %d %d %d %d %d \"%[^\"]\"", &n[0], &n[1], &n[2], &n[3], &n[4], &n[5], &n[6], &str);

  0011f	8d 55 98	 lea	 edx, DWORD PTR _str$202457[ebp]
  00122	52		 push	 edx
  00123	8d 85 90 fe ff
	ff		 lea	 eax, DWORD PTR _n$202456[ebp+24]
  00129	50		 push	 eax
  0012a	8d 8d 8c fe ff
	ff		 lea	 ecx, DWORD PTR _n$202456[ebp+20]
  00130	51		 push	 ecx
  00131	8d 95 88 fe ff
	ff		 lea	 edx, DWORD PTR _n$202456[ebp+16]
  00137	52		 push	 edx
  00138	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _n$202456[ebp+12]
  0013e	50		 push	 eax
  0013f	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR _n$202456[ebp+8]
  00145	51		 push	 ecx
  00146	8d 95 7c fe ff
	ff		 lea	 edx, DWORD PTR _n$202456[ebp+4]
  0014c	52		 push	 edx
  0014d	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _n$202456[ebp]
  00153	50		 push	 eax
  00154	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MGCNOKFF@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CC?$CF?$FL?$FO?$CC?$FN?$CC?$AA@
  0015f	51		 push	 ecx
  00160	e8 00 00 00 00	 call	 _sscanf

; 54   : 			this->MonsterSpawn[this->CountMobs].ID = n[0];

  00165	8b 96 58 35 00
	00		 mov	 edx, DWORD PTR [esi+13656]
  0016b	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _n$202456[ebp]
  00171	69 d2 88 00 00
	00		 imul	 edx, 136		; 00000088H
  00177	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 55   : 			this->MonsterSpawn[this->CountMobs].MapNumber = n[1];

  0017a	8b 8e 58 35 00
	00		 mov	 ecx, DWORD PTR [esi+13656]
  00180	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _n$202456[ebp+4]
  00186	69 c9 88 00 00
	00		 imul	 ecx, 136		; 00000088H
  0018c	89 54 31 04	 mov	 DWORD PTR [ecx+esi+4], edx

; 56   : 			this->MonsterSpawn[this->CountMobs].X = n[2];

  00190	8b 86 58 35 00
	00		 mov	 eax, DWORD PTR [esi+13656]
  00196	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR _n$202456[ebp+8]
  0019c	69 c0 88 00 00
	00		 imul	 eax, 136		; 00000088H
  001a2	89 4c 30 08	 mov	 DWORD PTR [eax+esi+8], ecx

; 57   : 			this->MonsterSpawn[this->CountMobs].Y = n[3];

  001a6	8b 96 58 35 00
	00		 mov	 edx, DWORD PTR [esi+13656]
  001ac	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR _n$202456[ebp+12]
  001b2	69 d2 88 00 00
	00		 imul	 edx, 136		; 00000088H
  001b8	89 44 32 0c	 mov	 DWORD PTR [edx+esi+12], eax

; 58   : 			this->MonsterSpawn[this->CountMobs].WeekDay = n[4];

  001bc	8b 8e 58 35 00
	00		 mov	 ecx, DWORD PTR [esi+13656]
  001c2	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _n$202456[ebp+16]
  001c8	69 c9 88 00 00
	00		 imul	 ecx, 136		; 00000088H
  001ce	89 54 31 10	 mov	 DWORD PTR [ecx+esi+16], edx

; 59   : 			this->MonsterSpawn[this->CountMobs].TimeHour = n[5];

  001d2	8b 86 58 35 00
	00		 mov	 eax, DWORD PTR [esi+13656]
  001d8	8b 8d 8c fe ff
	ff		 mov	 ecx, DWORD PTR _n$202456[ebp+20]
  001de	69 c0 88 00 00
	00		 imul	 eax, 136		; 00000088H
  001e4	89 4c 30 14	 mov	 DWORD PTR [eax+esi+20], ecx

; 60   : 			this->MonsterSpawn[this->CountMobs].TimeMin = n[6];

  001e8	8b 96 58 35 00
	00		 mov	 edx, DWORD PTR [esi+13656]
  001ee	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR _n$202456[ebp+24]
  001f4	69 d2 88 00 00
	00		 imul	 edx, 136		; 00000088H
  001fa	89 44 32 18	 mov	 DWORD PTR [edx+esi+24], eax

; 61   : 			strcpy(MonsterSpawn[this->CountMobs].Message,str);

  001fe	8b 96 58 35 00
	00		 mov	 edx, DWORD PTR [esi+13656]
  00204	83 c4 28	 add	 esp, 40			; 00000028H
  00207	69 d2 88 00 00
	00		 imul	 edx, 136		; 00000088H
  0020d	8d 4d 98	 lea	 ecx, DWORD PTR _str$202457[ebp]
  00210	8d 54 32 1c	 lea	 edx, DWORD PTR [edx+esi+28]
$LL13@Load:
  00214	8a 01		 mov	 al, BYTE PTR [ecx]
  00216	88 02		 mov	 BYTE PTR [edx], al
  00218	03 cf		 add	 ecx, edi
  0021a	03 d7		 add	 edx, edi
  0021c	3a c3		 cmp	 al, bl
  0021e	75 f4		 jne	 SHORT $LL13@Load

; 62   : 			this->CountMobs++;

  00220	01 be 58 35 00
	00		 add	 DWORD PTR [esi+13656], edi
$LN2@Load:

; 39   : 	{
; 40   : 		return;
; 41   : 	}
; 42   : 
; 43   : 	while(!feof(file))

  00226	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _file$[ebp]
  0022c	50		 push	 eax
  0022d	e8 00 00 00 00	 call	 _feof
  00232	83 c4 04	 add	 esp, 4
  00235	85 c0		 test	 eax, eax
  00237	0f 84 93 fe ff
	ff		 je	 $LL5@Load
$LN18@Load:

; 63   : 		}
; 64   : 	}
; 65   : 	fclose(file);

  0023d	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR _file$[ebp]
  00243	51		 push	 ecx
  00244	e8 00 00 00 00	 call	 _fclose
  00249	83 c4 04	 add	 esp, 4
$LN11@Load:

; 66   : }

  0024c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024f	5f		 pop	 edi
  00250	5e		 pop	 esi
  00251	33 cd		 xor	 ecx, ebp
  00253	5b		 pop	 ebx
  00254	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00259	8b e5		 mov	 esp, ebp
  0025b	5d		 pop	 ebp
  0025c	c3		 ret	 0
?Load@cMonsterSpawner@@QAEXXZ ENDP			; cMonsterSpawner::Load
_TEXT	ENDS
PUBLIC	?StartMonster@cMonsterSpawner@@QAE_NH@Z		; cMonsterSpawner::StartMonster
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	_rand:PROC
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	?gObjAddMonster@@YAFH@Z:PROC			; gObjAddMonster
; Function compile flags: /Ogtp
;	COMDAT ?StartMonster@cMonsterSpawner@@QAE_NH@Z
_TEXT	SEGMENT
_result$ = -4						; size = 4
_iX$202466 = 8						; size = 4
_Index$ = 8						; size = 4
?StartMonster@cMonsterSpawner@@QAE_NH@Z PROC		; cMonsterSpawner::StartMonster, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 70   : 	if (!this->Enable) return false;

  00004	83 b9 20 35 00
	00 00		 cmp	 DWORD PTR [ecx+13600], 0
  0000b	75 08		 jne	 SHORT $LN9@StartMonst
  0000d	32 c0		 xor	 al, al

; 129  : 	}
; 130  : }

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
$LN9@StartMonst:

; 71   : 
; 72   : 	int result = gObjAddMonster(this->MonsterSpawn[Index].MapNumber);

  00015	8b 45 08	 mov	 eax, DWORD PTR _Index$[ebp]
  00018	69 c0 88 00 00
	00		 imul	 eax, 136		; 00000088H
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8d 3c 08	 lea	 edi, DWORD PTR [eax+ecx]
  00023	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ?gObjAddMonster@@YAFH@Z	; gObjAddMonster
  0002c	0f bf f0	 movsx	 esi, ax
  0002f	83 c4 04	 add	 esp, 4
  00032	89 75 fc	 mov	 DWORD PTR _result$[ebp], esi

; 73   : 
; 74   : 	if((result >= 0 && result < OBJ_MAXMONSTER) && MonsterSpawn[Index].Status == false)

  00035	81 fe c7 32 00
	00		 cmp	 esi, 12999		; 000032c7H
  0003b	0f 87 c8 01 00
	00		 ja	 $LN8@StartMonst
  00041	80 bf 80 00 00
	00 00		 cmp	 BYTE PTR [edi+128], 0
  00048	0f 85 bb 01 00
	00		 jne	 $LN8@StartMonst

; 75   : 	{
; 76   : 		int iX = this->MonsterSpawn[Index].X;

  0004e	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00051	53		 push	 ebx

; 77   : 		int iY = this->MonsterSpawn[Index].Y;

  00052	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]

; 78   : 
; 79   : 		if(g_ZtLicense.CheckUser(eZtUB::ulasevich) || g_ZtLicense.CheckUser(eZtUB::ulasevich2))

  00055	6a 17		 push	 23			; 00000017H
  00057	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0005c	89 55 08	 mov	 DWORD PTR _iX$202466[ebp], edx
  0005f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00064	84 c0		 test	 al, al
  00066	75 10		 jne	 SHORT $LN6@StartMonst
  00068	6a 24		 push	 36			; 00000024H
  0006a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0006f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00074	84 c0		 test	 al, al
  00076	74 28		 je	 SHORT $LN7@StartMonst
$LN6@StartMonst:

; 80   : 		{
; 81   : 			iX = iX + (rand() % 80 - 40);

  00078	e8 00 00 00 00	 call	 _rand
  0007d	99		 cdq
  0007e	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  00083	f7 f9		 idiv	 ecx
  00085	8b 45 08	 mov	 eax, DWORD PTR _iX$202466[ebp]
  00088	8d 4c 10 d8	 lea	 ecx, DWORD PTR [eax+edx-40]
  0008c	89 4d 08	 mov	 DWORD PTR _iX$202466[ebp], ecx

; 82   : 			iY = iY + (rand() % 80 - 40);

  0008f	e8 00 00 00 00	 call	 _rand
  00094	99		 cdq
  00095	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  0009a	f7 f9		 idiv	 ecx
  0009c	8d 5c 13 d8	 lea	 ebx, DWORD PTR [ebx+edx-40]
$LN7@StartMonst:

; 83   : 		}
; 84   : 
; 85   : 		if(iX > 254)

  000a0	8b 45 08	 mov	 eax, DWORD PTR _iX$202466[ebp]
  000a3	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  000a8	7e 0a		 jle	 SHORT $LN5@StartMonst

; 86   : 		{
; 87   : 			iX = 254;

  000aa	c7 45 08 fe 00
	00 00		 mov	 DWORD PTR _iX$202466[ebp], 254 ; 000000feH
  000b1	8b 45 08	 mov	 eax, DWORD PTR _iX$202466[ebp]
$LN5@StartMonst:

; 88   : 		}
; 89   : 		if(iY > 254)

  000b4	81 fb fe 00 00
	00		 cmp	 ebx, 254		; 000000feH
  000ba	7e 05		 jle	 SHORT $LN4@StartMonst

; 90   : 		{
; 91   : 			iY = 254;

  000bc	bb fe 00 00 00	 mov	 ebx, 254		; 000000feH
$LN4@StartMonst:

; 92   : 		}
; 93   : 		if(iX < 1)

  000c1	83 f8 01	 cmp	 eax, 1
  000c4	7d 0a		 jge	 SHORT $LN3@StartMonst

; 94   : 		{
; 95   : 			iX = 1;

  000c6	c7 45 08 01 00
	00 00		 mov	 DWORD PTR _iX$202466[ebp], 1
  000cd	8b 45 08	 mov	 eax, DWORD PTR _iX$202466[ebp]
$LN3@StartMonst:

; 96   : 		}
; 97   : 		if(iY < 1)

  000d0	83 fb 01	 cmp	 ebx, 1
  000d3	7d 05		 jge	 SHORT $LN2@StartMonst

; 98   : 		{
; 99   : 			iY = 1;

  000d5	bb 01 00 00 00	 mov	 ebx, 1
$LN2@StartMonst:

; 100  : 		}
; 101  : 
; 102  : 		gObj[result].m_PosNum = (WORD)-1;

  000da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e0	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  000e6	83 ca ff	 or	 edx, -1
  000e9	66 89 94 0e b0
	03 00 00	 mov	 WORD PTR [esi+ecx+944], dx

; 103  : 		gObj[result].MapNumber = this->MonsterSpawn[Index].MapNumber;

  000f1	8a 57 04	 mov	 dl, BYTE PTR [edi+4]
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000fa	88 94 0e 49 01
	00 00		 mov	 BYTE PTR [esi+ecx+329], dl

; 104  : 		gObj[result].X = iX;

  00101	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00107	66 89 84 16 44
	01 00 00	 mov	 WORD PTR [esi+edx+324], ax

; 105  : 		gObj[result].Y = iY;

  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00115	66 89 9c 0e 46
	01 00 00	 mov	 WORD PTR [esi+ecx+326], bx

; 106  : 		gObj[result].TX = iX;

  0011d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00123	66 89 84 16 7c
	01 00 00	 mov	 WORD PTR [esi+edx+380], ax

; 107  : 		gObj[result].TY = iY;

  0012b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00131	66 89 9c 0e 7e
	01 00 00	 mov	 WORD PTR [esi+ecx+382], bx

; 108  : 		gObj[result].m_OldX = iX;

  00139	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0013f	66 89 84 16 78
	01 00 00	 mov	 WORD PTR [esi+edx+376], ax

; 109  : 		gObj[result].m_OldY = iY;

  00147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0014d	66 89 9c 0e 7a
	01 00 00	 mov	 WORD PTR [esi+ecx+378], bx

; 110  : 		gObj[result].StartX = iX;

  00155	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0015b	88 84 16 76 01
	00 00		 mov	 BYTE PTR [esi+edx+374], al

; 111  : 		gObj[result].StartY = iY;

  00162	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00167	88 9c 06 77 01
	00 00		 mov	 BYTE PTR [esi+eax+375], bl

; 112  : 		gObj[result].MaxRegenTime = 0;

  0016e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00174	c7 84 0e ac 03
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+940], 0

; 113  : 		gObj[result].Dir = rand()%8;

  0017f	e8 00 00 00 00	 call	 _rand
  00184	25 07 00 00 80	 and	 eax, -2147483641	; 80000007H
  00189	79 05		 jns	 SHORT $LN14@StartMonst
  0018b	48		 dec	 eax
  0018c	83 c8 f8	 or	 eax, -8			; fffffff8H
  0018f	40		 inc	 eax
$LN14@StartMonst:
  00190	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00196	88 84 16 48 01
	00 00		 mov	 BYTE PTR [esi+edx+328], al

; 114  : 		gObj[result].RegenTime = GetTickCount();

  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  001a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a9	89 84 0e a8 03
	00 00		 mov	 DWORD PTR [esi+ecx+936], eax

; 115  : 
; 116  : 		gObj[result].m_ActState.Emotion       = 1;

  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001b5	8b 94 06 18 02
	00 00		 mov	 edx, DWORD PTR [esi+eax+536]
  001bc	81 e2 1f ff ff
	ff		 and	 edx, -225		; ffffff1fH
  001c2	83 ca 10	 or	 edx, 16			; 00000010H
  001c5	89 94 06 18 02
	00 00		 mov	 DWORD PTR [esi+eax+536], edx

; 117  : 		gObj[result].m_ActState.EmotionCount  = 15;

  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d1	c6 84 06 19 02
	00 00 0f	 mov	 BYTE PTR [esi+eax+537], 15 ; 0000000fH

; 118  : 
; 119  : 		gObjSetMonster(result,this->MonsterSpawn[Index].ID);

  001d9	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001db	8b 75 fc	 mov	 esi, DWORD PTR _result$[ebp]
  001de	51		 push	 ecx
  001df	56		 push	 esi
  001e0	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster

; 120  : 		MessaageAllGlobal(this->MonsterSpawn[Index].Message);

  001e5	8d 57 1c	 lea	 edx, DWORD PTR [edi+28]
  001e8	52		 push	 edx
  001e9	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  001ee	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f1	5b		 pop	 ebx

; 121  : 		MonsterSpawn[Index].Status = true;
; 122  : 		MonsterSpawn[Index].Index = result;

  001f2	89 b7 84 00 00
	00		 mov	 DWORD PTR [edi+132], esi
  001f8	c6 87 80 00 00
	00 01		 mov	 BYTE PTR [edi+128], 1
  001ff	5f		 pop	 edi

; 123  : 		return true;

  00200	b0 01		 mov	 al, 1
  00202	5e		 pop	 esi

; 129  : 	}
; 130  : }

  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c2 04 00	 ret	 4
$LN8@StartMonst:
  00209	5f		 pop	 edi

; 124  : 
; 125  : 	}
; 126  : 	else
; 127  : 	{
; 128  : 		return false;

  0020a	32 c0		 xor	 al, al
  0020c	5e		 pop	 esi

; 129  : 	}
; 130  : }

  0020d	8b e5		 mov	 esp, ebp
  0020f	5d		 pop	 ebp
  00210	c2 04 00	 ret	 4
?StartMonster@cMonsterSpawner@@QAE_NH@Z ENDP		; cMonsterSpawner::StartMonster
_TEXT	ENDS
PUBLIC	??_C@_0O@MBOGICEI@?$CFs?5Kill?5in?5?$CFs?$AA@	; `string'
PUBLIC	?KillMob@cMonsterSpawner@@QAEXPAUOBJECTSTRUCT@@@Z ; cMonsterSpawner::KillMob
EXTRN	?ztMapName@@YAPADH@Z:PROC			; ztMapName
;	COMDAT ??_C@_0O@MBOGICEI@?$CFs?5Kill?5in?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0O@MBOGICEI@?$CFs?5Kill?5in?5?$CFs?$AA@ DB '%s Kill in %s', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?KillMob@cMonsterSpawner@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpMobObj$ = 8						; size = 4
?KillMob@cMonsterSpawner@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cMonsterSpawner::KillMob, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 133  : 	int i;
; 134  : 	for (i = 0; i < this->CountMobs; i++)

  00005	33 db		 xor	 ebx, ebx
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	39 99 58 35 00
	00		 cmp	 DWORD PTR [ecx+13656], ebx
  00010	7e 50		 jle	 SHORT $LN3@KillMob
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _lpMobObj$[ebp]
  00017	8d b1 80 00 00
	00		 lea	 esi, DWORD PTR [ecx+128]
  0001d	8d 49 00	 npad	 3
$LL5@KillMob:

; 135  : 	{
; 136  : 		if (MonsterSpawn[i].Status)

  00020	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00023	74 2c		 je	 SHORT $LN4@KillMob

; 137  : 			if (MonsterSpawn[i].Index == lpMobObj->m_Index)

  00025	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00028	3b 07		 cmp	 eax, DWORD PTR [edi]
  0002a	75 25		 jne	 SHORT $LN4@KillMob

; 138  : 			{	
; 139  : 				MessaageAllGlobal("%s Kill in %s",lpMobObj->Name, ztMapName(lpMobObj->MapNumber));

  0002c	0f b6 8f 49 01
	00 00		 movzx	 ecx, BYTE PTR [edi+329]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?ztMapName@@YAPADH@Z	; ztMapName
  00039	50		 push	 eax
  0003a	8d 57 77	 lea	 edx, DWORD PTR [edi+119]
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MBOGICEI@?$CFs?5Kill?5in?5?$CFs?$AA@
  00043	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal

; 140  : 				MonsterSpawn[i].Status = false;

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN4@KillMob:

; 133  : 	int i;
; 134  : 	for (i = 0; i < this->CountMobs; i++)

  00051	43		 inc	 ebx
  00052	81 c6 88 00 00
	00		 add	 esi, 136		; 00000088H
  00058	3b 99 58 35 00
	00		 cmp	 ebx, DWORD PTR [ecx+13656]
  0005e	7c c0		 jl	 SHORT $LL5@KillMob
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
$LN3@KillMob:
  00062	5b		 pop	 ebx

; 141  : 			}
; 142  : 	}
; 143  : }

  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
?KillMob@cMonsterSpawner@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cMonsterSpawner::KillMob
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?TickTime@cMonsterSpawner@@QAEXXZ		; cMonsterSpawner::TickTime
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?TickTime@cMonsterSpawner@@QAEXXZ
_TEXT	SEGMENT
_t$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?TickTime@cMonsterSpawner@@QAEXXZ PROC			; cMonsterSpawner::TickTime, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx

; 147  : 	if (!this->Enable) return;

  00013	83 bf 20 35 00
	00 00		 cmp	 DWORD PTR [edi+13600], 0
  0001a	74 6b		 je	 SHORT $LN5@TickTime

; 148  : 	SYSTEMTIME t;
; 149  : 	GetLocalTime(&t);

  0001c	56		 push	 esi
  0001d	8d 45 ec	 lea	 eax, DWORD PTR _t$[ebp]
  00020	50		 push	 eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 150  : 	int i;
; 151  : 	for (i = 0; i < this->CountMobs; i++)

  00027	33 f6		 xor	 esi, esi
  00029	39 b7 58 35 00
	00		 cmp	 DWORD PTR [edi+13656], esi
  0002f	7e 55		 jle	 SHORT $LN13@TickTime

; 148  : 	SYSTEMTIME t;
; 149  : 	GetLocalTime(&t);

  00031	53		 push	 ebx
  00032	8d 5f 14	 lea	 ebx, DWORD PTR [edi+20]
$LL7@TickTime:

; 152  : 	{
; 153  : 		if (this->MonsterSpawn[i].WeekDay == -1)

  00035	8b 43 fc	 mov	 eax, DWORD PTR [ebx-4]
  00038	83 f8 ff	 cmp	 eax, -1
  0003b	75 11		 jne	 SHORT $LN4@TickTime

; 154  : 		{
; 155  : 			if(t.wHour == this->MonsterSpawn[i].TimeHour && t.wMinute == this->MonsterSpawn[i].TimeMin && t.wSecond == 00)

  0003d	0f b7 4d f4	 movzx	 ecx, WORD PTR _t$[ebp+8]
  00041	3b 0b		 cmp	 ecx, DWORD PTR [ebx]
  00043	75 31		 jne	 SHORT $LN6@TickTime
  00045	0f b7 55 f6	 movzx	 edx, WORD PTR _t$[ebp+10]
  00049	3b 53 04	 cmp	 edx, DWORD PTR [ebx+4]

; 156  : 			{
; 157  : 				this->StartMonster(i);
; 158  : 			}
; 159  : 		}
; 160  : 		else

  0004c	eb 17		 jmp	 SHORT $LN16@TickTime
$LN4@TickTime:

; 161  : 		{
; 162  : 			if(t.wDayOfWeek == this->MonsterSpawn[i].WeekDay && t.wHour == this->MonsterSpawn[i].TimeHour && t.wMinute == this->MonsterSpawn[i].TimeMin && t.wSecond == 00)

  0004e	0f b7 4d f0	 movzx	 ecx, WORD PTR _t$[ebp+4]
  00052	3b c8		 cmp	 ecx, eax
  00054	75 20		 jne	 SHORT $LN6@TickTime
  00056	0f b7 55 f4	 movzx	 edx, WORD PTR _t$[ebp+8]
  0005a	3b 13		 cmp	 edx, DWORD PTR [ebx]
  0005c	75 18		 jne	 SHORT $LN6@TickTime
  0005e	0f b7 45 f6	 movzx	 eax, WORD PTR _t$[ebp+10]
  00062	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
$LN16@TickTime:
  00065	75 0f		 jne	 SHORT $LN6@TickTime
  00067	66 83 7d f8 00	 cmp	 WORD PTR _t$[ebp+12], 0
  0006c	75 08		 jne	 SHORT $LN6@TickTime

; 163  : 			{
; 164  : 				this->StartMonster(i);

  0006e	56		 push	 esi
  0006f	8b cf		 mov	 ecx, edi
  00071	e8 00 00 00 00	 call	 ?StartMonster@cMonsterSpawner@@QAE_NH@Z ; cMonsterSpawner::StartMonster
$LN6@TickTime:

; 150  : 	int i;
; 151  : 	for (i = 0; i < this->CountMobs; i++)

  00076	46		 inc	 esi
  00077	81 c3 88 00 00
	00		 add	 ebx, 136		; 00000088H
  0007d	3b b7 58 35 00
	00		 cmp	 esi, DWORD PTR [edi+13656]
  00083	7c b0		 jl	 SHORT $LL7@TickTime
  00085	5b		 pop	 ebx
$LN13@TickTime:
  00086	5e		 pop	 esi
$LN5@TickTime:

; 165  : 			}
; 166  : 		}
; 167  : 
; 168  : 	}
; 169  : 			
; 170  : }

  00087	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008a	33 cd		 xor	 ecx, ebp
  0008c	5f		 pop	 edi
  0008d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
?TickTime@cMonsterSpawner@@QAEXXZ ENDP			; cMonsterSpawner::TickTime
_TEXT	ENDS
END
