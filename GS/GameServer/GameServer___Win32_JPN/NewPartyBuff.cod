; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\NewPartyBuff.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCDisplayBuffeffectPartyMember@@YAXH@Z		; GCDisplayBuffeffectPartyMember
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\newpartybuff.cpp
;	COMDAT ?GCDisplayBuffeffectPartyMember@@YAXH@Z
_TEXT	SEGMENT
_pMsg$212341 = -52					; size = 47
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GCDisplayBuffeffectPartyMember@@YAXH@Z PROC		; GCDisplayBuffeffectPartyMember, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 22   : 	//if(g_ZtLicense.CheckUser(eZtUB::PrideMuLocal) || g_ZtLicense.CheckUser(eZtUB::drynea) || g_ZtLicense.CheckUser(eZtUB::PrideMu) || g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(eZtUB::Local) || g_ZtLicense.CheckUser(eZtUB::feqan))
; 23   : 	if(g_ZtLicense.user.PartySystem || g_ZtLicense.CheckUser(eZtUB::MedoniAndrei))

  00010	80 3d d3 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+211, 0
  00017	57		 push	 edi
  00018	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0001b	75 14		 jne	 SHORT $LN14@GCDisplayB
  0001d	6a 32		 push	 50			; 00000032H
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00024	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00029	84 c0		 test	 al, al
  0002b	0f 84 fe 00 00
	00		 je	 $LN12@GCDisplayB
$LN14@GCDisplayB:

; 24   : 	{
; 25   : 			
; 26   : 	int nDestUserIndex;
; 27   : 	signed int i;
; 28   : 	signed int nBuffCnt;
; 29   : 	int nPartyIndex;
; 30   : 	signed int nTotalBuffCount;
; 31   : 	PMSG_BUFFLIST_SEND_PARTY pMsg;
; 32   : 
; 33   : 	if ( aIndex < 0 || aIndex > OBJMAX-1)

  00031	81 ff 97 3a 00
	00		 cmp	 edi, 14999		; 00003a97H
  00037	0f 87 f2 00 00
	00		 ja	 $LN12@GCDisplayB

; 34   : 	{
; 35   : 		return;
; 36   : 	}
; 37   : 
; 38   : 	if ( gObj[aIndex].Connected < PLAYER_PLAYING )

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00042	56		 push	 esi
  00043	8b f7		 mov	 esi, edi
  00045	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0004b	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  00050	0f 8c d8 00 00
	00		 jl	 $LN22@GCDisplayB

; 39   : 	{
; 40   : 		return;
; 41   : 	}
; 42   : 
; 43   : 	if ( gObjIsConnected(aIndex) && gObj[aIndex].PartyNumber >= 0 )

  00056	57		 push	 edi
  00057	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0005c	83 c4 04	 add	 esp, 4
  0005f	85 c0		 test	 eax, eax
  00061	0f 84 c7 00 00
	00		 je	 $LN22@GCDisplayB
  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006d	83 bc 0e 2c 04
	00 00 00	 cmp	 DWORD PTR [esi+ecx+1068], 0
  00075	0f 8c b3 00 00
	00		 jl	 $LN22@GCDisplayB

; 44   : 	{
; 45   : 		ZeroMemory(&pMsg,sizeof(pMsg));

  0007b	6a 2f		 push	 47			; 0000002fH
  0007d	8d 55 cc	 lea	 edx, DWORD PTR _pMsg$212341[ebp]
  00080	6a 00		 push	 0
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 _memset

; 46   : 		//PHeadSetB((LPBYTE)&pMsg, 0x2E, 175);
; 47   : 		PHeadSetB((LPBYTE)&pMsg, 0x2E, sizeof(pMsg));

  00088	6a 2f		 push	 47			; 0000002fH
  0008a	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$212341[ebp]
  0008d	6a 2e		 push	 46			; 0000002eH
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 48   : 		//LogAddC(2, "PMSG_BUFFLIST_SEND_PARTY: %d", sizeof(pMsg));
; 49   : 		
; 50   : 		nTotalBuffCount = gObj[aIndex].m_btViewStateCount;

  00095	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009b	8a 84 16 27 02
	00 00		 mov	 al, BYTE PTR [esi+edx+551]
  000a2	0f b6 c8	 movzx	 ecx, al

; 51   : 		pMsg.btBuffCount = gObj[aIndex].m_btViewStateCount;

  000a5	88 45 da	 mov	 BYTE PTR _pMsg$212341[ebp+14], al

; 52   : 
; 53   : 	    memcpy(pMsg.szName, gObj[aIndex].Name, 10);

  000a8	8b 44 16 77	 mov	 eax, DWORD PTR [esi+edx+119]
  000ac	89 45 cf	 mov	 DWORD PTR _pMsg$212341[ebp+3], eax
  000af	8b 44 16 7b	 mov	 eax, DWORD PTR [esi+edx+123]
  000b3	89 45 d3	 mov	 DWORD PTR _pMsg$212341[ebp+7], eax
  000b6	66 8b 44 16 7f	 mov	 ax, WORD PTR [esi+edx+127]
  000bb	83 c4 18	 add	 esp, 24			; 00000018H
  000be	66 89 45 d7	 mov	 WORD PTR _pMsg$212341[ebp+11], ax

; 54   : 		nPartyIndex = gObj[aIndex].PartyNumber;

  000c2	8b bc 16 2c 04
	00 00		 mov	 edi, DWORD PTR [esi+edx+1068]

; 55   : 		if ( nTotalBuffCount >= 0 )

  000c9	85 c9		 test	 ecx, ecx
  000cb	78 61		 js	 SHORT $LN22@GCDisplayB

; 56   : 		{
; 57   : 			if ( nTotalBuffCount > 32 )

  000cd	83 f9 20	 cmp	 ecx, 32			; 00000020H
  000d0	7e 08		 jle	 SHORT $LN8@GCDisplayB

; 58   : 			{
; 59   : 				nTotalBuffCount = 32;

  000d2	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H

; 60   : 				pMsg.btBuffCount = 32;

  000d7	88 4d da	 mov	 BYTE PTR _pMsg$212341[ebp+14], cl
$LN8@GCDisplayB:

; 61   : 			}
; 62   : 			for ( nBuffCnt = 0; nBuffCnt < nTotalBuffCount; nBuffCnt++ )

  000da	33 c0		 xor	 eax, eax
  000dc	85 c9		 test	 ecx, ecx
  000de	7e 15		 jle	 SHORT $LN5@GCDisplayB
  000e0	8d b4 16 28 02
	00 00		 lea	 esi, DWORD PTR [esi+edx+552]
$LL7@GCDisplayB:

; 63   : 			{
; 64   : 				pMsg.iBuffList[nBuffCnt] = gObj[aIndex].m_BuffEffectState[nBuffCnt].btBuffIndex;

  000e7	8a 16		 mov	 dl, BYTE PTR [esi]
  000e9	88 54 05 db	 mov	 BYTE PTR _pMsg$212341[ebp+eax+15], dl
  000ed	40		 inc	 eax
  000ee	83 c6 14	 add	 esi, 20			; 00000014H
  000f1	3b c1		 cmp	 eax, ecx
  000f3	7c f2		 jl	 SHORT $LL7@GCDisplayB
$LN5@GCDisplayB:

; 65   : 			}
; 66   : 			for ( i = 0; i < MAX_USER_IN_PARTY; ++i )

  000f5	6b ff 68	 imul	 edi, 104		; 00000068H
  000f8	81 c7 0c 00 00
	00		 add	 edi, OFFSET ?gParty@@3VPartyClass@@A+12
  000fe	53		 push	 ebx
  000ff	8b f7		 mov	 esi, edi
  00101	bb 0a 00 00 00	 mov	 ebx, 10			; 0000000aH
$LL4@GCDisplayB:

; 67   : 			{
; 68   : 				nDestUserIndex = gParty.m_PartyS[nPartyIndex].Number[i];

  00106	8b 3e		 mov	 edi, DWORD PTR [esi]

; 69   : 				if ( gObjIsConnected(nDestUserIndex) )

  00108	57		 push	 edi
  00109	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0010e	83 c4 04	 add	 esp, 4
  00111	85 c0		 test	 eax, eax
  00113	74 12		 je	 SHORT $LN3@GCDisplayB

; 70   : 				{
; 71   : 					DataSend(nDestUserIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00115	0f b6 45 cd	 movzx	 eax, BYTE PTR _pMsg$212341[ebp+1]
  00119	50		 push	 eax
  0011a	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$212341[ebp]
  0011d	51		 push	 ecx
  0011e	57		 push	 edi
  0011f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00124	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GCDisplayB:

; 65   : 			}
; 66   : 			for ( i = 0; i < MAX_USER_IN_PARTY; ++i )

  00127	83 c6 04	 add	 esi, 4
  0012a	4b		 dec	 ebx
  0012b	75 d9		 jne	 SHORT $LL4@GCDisplayB
  0012d	5b		 pop	 ebx
$LN22@GCDisplayB:
  0012e	5e		 pop	 esi
$LN12@GCDisplayB:

; 72   : 				}
; 73   : 		
; 74   : 			}
; 75   : 		}
; 76   : 	}
; 77   : 	}
; 78   : }

  0012f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00132	33 cd		 xor	 ecx, ebp
  00134	5f		 pop	 edi
  00135	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013a	8b e5		 mov	 esp, ebp
  0013c	5d		 pop	 ebp
  0013d	c3		 ret	 0
?GCDisplayBuffeffectPartyMember@@YAXH@Z ENDP		; GCDisplayBuffeffectPartyMember
_TEXT	ENDS
END
