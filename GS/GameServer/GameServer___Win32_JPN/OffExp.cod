; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\OffExp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?OffExp@@3VcOffExp@@A				; OffExp
_BSS	SEGMENT
?OffExp@@3VcOffExp@@A DB 034H DUP (?)			; OffExp
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_09BADGNAEJ@TickPrice?$AA@			; `string'
PUBLIC	??_C@_0O@GIOBNCDJ@TickPriceType?$AA@		; `string'
PUBLIC	??_C@_0M@ILNEHGIB@TickTimeMin?$AA@		; `string'
PUBLIC	??_C@_0BA@CADDNINH@TickPriceEnable?$AA@		; `string'
PUBLIC	??_C@_0M@JIHMJIMC@PriceGoblin?$AA@		; `string'
PUBLIC	??_C@_0M@EAIPIDK@PriceWCoinP?$AA@		; `string'
PUBLIC	??_C@_0M@GFOHLJKI@PriceWCoinC?$AA@		; `string'
PUBLIC	??_C@_0M@BEMCKDLA@PriceCredit?$AA@		; `string'
PUBLIC	??_C@_08FFJPBABB@PriceZen?$AA@			; `string'
PUBLIC	??_C@_04OKOFBOPB@Time?$AA@			; `string'
PUBLIC	??_C@_0L@OCIIFDDH@EnableTime?$AA@		; `string'
PUBLIC	??_C@_0L@NIKPPPCH@KickFallen?$AA@		; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@ ; `string'
PUBLIC	?LoadConfig@cOffExp@@QAEXXZ			; cOffExp::LoadConfig
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_09BADGNAEJ@TickPrice?$AA@
; File e:\work\tranet_version\gs\gameserver\offexp.cpp
CONST	SEGMENT
??_C@_09BADGNAEJ@TickPrice?$AA@ DB 'TickPrice', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GIOBNCDJ@TickPriceType?$AA@
CONST	SEGMENT
??_C@_0O@GIOBNCDJ@TickPriceType?$AA@ DB 'TickPriceType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILNEHGIB@TickTimeMin?$AA@
CONST	SEGMENT
??_C@_0M@ILNEHGIB@TickTimeMin?$AA@ DB 'TickTimeMin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CADDNINH@TickPriceEnable?$AA@
CONST	SEGMENT
??_C@_0BA@CADDNINH@TickPriceEnable?$AA@ DB 'TickPriceEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIHMJIMC@PriceGoblin?$AA@
CONST	SEGMENT
??_C@_0M@JIHMJIMC@PriceGoblin?$AA@ DB 'PriceGoblin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EAIPIDK@PriceWCoinP?$AA@
CONST	SEGMENT
??_C@_0M@EAIPIDK@PriceWCoinP?$AA@ DB 'PriceWCoinP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GFOHLJKI@PriceWCoinC?$AA@
CONST	SEGMENT
??_C@_0M@GFOHLJKI@PriceWCoinC?$AA@ DB 'PriceWCoinC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BEMCKDLA@PriceCredit?$AA@
CONST	SEGMENT
??_C@_0M@BEMCKDLA@PriceCredit?$AA@ DB 'PriceCredit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FFJPBABB@PriceZen?$AA@
CONST	SEGMENT
??_C@_08FFJPBABB@PriceZen?$AA@ DB 'PriceZen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKOFBOPB@Time?$AA@
CONST	SEGMENT
??_C@_04OKOFBOPB@Time?$AA@ DB 'Time', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OCIIFDDH@EnableTime?$AA@
CONST	SEGMENT
??_C@_0L@OCIIFDDH@EnableTime?$AA@ DB 'EnableTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NIKPPPCH@KickFallen?$AA@
CONST	SEGMENT
??_C@_0L@NIKPPPCH@KickFallen?$AA@ DB 'KickFallen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
CONST	SEGMENT
??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@ DB '..\Data\ZtDat'
	DB	'a\OffExp.ini', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadConfig@cOffExp@@QAEXXZ
_TEXT	SEGMENT
?LoadConfig@cOffExp@@QAEXXZ PROC			; cOffExp::LoadConfig, COMDAT
; _this$ = ecx

; 18   : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 19   : 	//CheckFile(OFF_EXP_DIR);
; 20   : 
; 21   : 	this->Enable = GetPrivateProfileInt("Common","Enable",1,OFF_EXP_DIR);

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  0000d	6a 01		 push	 1
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00019	8b f1		 mov	 esi, ecx
  0001b	ff d7		 call	 edi

; 22   : 	this->KickFallen = GetPrivateProfileInt("Common","KickFallen",0,OFF_EXP_DIR);

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  00022	6a 00		 push	 0
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NIKPPPCH@KickFallen?$AA@
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0002e	89 06		 mov	 DWORD PTR [esi], eax
  00030	ff d7		 call	 edi

; 23   : 	this->EnableTime = GetPrivateProfileInt("Common","EnableTime",0,OFF_EXP_DIR);

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCIIFDDH@EnableTime?$AA@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00046	ff d7		 call	 edi

; 24   : 	this->TimeEnd = GetPrivateProfileInt("Common","Time",0,OFF_EXP_DIR);

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  0004d	6a 00		 push	 0
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_04OKOFBOPB@Time?$AA@
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00059	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0005c	ff d7		 call	 edi

; 25   : 
; 26   : 	this->PriceZen = GetPrivateProfileInt("Common","PriceZen",0,OFF_EXP_DIR);

  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  00063	6a 00		 push	 0
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_08FFJPBABB@PriceZen?$AA@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0006f	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00072	ff d7		 call	 edi

; 27   : 	this->PriceCredit = GetPrivateProfileInt("Common","PriceCredit",0,OFF_EXP_DIR);

  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  00079	6a 00		 push	 0
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BEMCKDLA@PriceCredit?$AA@
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00085	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00088	ff d7		 call	 edi

; 28   : 	this->PriceWCoinC = GetPrivateProfileInt("Common","PriceWCoinC",0,OFF_EXP_DIR);

  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  0008f	6a 00		 push	 0
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GFOHLJKI@PriceWCoinC?$AA@
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0009b	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0009e	ff d7		 call	 edi

; 29   : 	this->PriceWCoinP = GetPrivateProfileInt("Common","PriceWCoinP",0,OFF_EXP_DIR);

  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  000a5	6a 00		 push	 0
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EAIPIDK@PriceWCoinP?$AA@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000b1	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000b4	ff d7		 call	 edi

; 30   : 	this->PriceGoblin = GetPrivateProfileInt("Common","PriceGoblin",0,OFF_EXP_DIR);

  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  000bb	6a 00		 push	 0
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JIHMJIMC@PriceGoblin?$AA@
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000c7	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000ca	ff d7		 call	 edi

; 31   : 
; 32   : 	this->TickPriceEnable = GetPrivateProfileInt("Common", "TickPriceEnable", 0, OFF_EXP_DIR);

  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  000d1	6a 00		 push	 0
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CADDNINH@TickPriceEnable?$AA@
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000dd	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000e0	ff d7		 call	 edi

; 33   : 	this->TickTimeMin = GetPrivateProfileInt("Common", "TickTimeMin", 0, OFF_EXP_DIR);

  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  000e7	6a 00		 push	 0
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ILNEHGIB@TickTimeMin?$AA@
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000f3	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000f6	ff d7		 call	 edi

; 34   : 	this->TickPriceType = GetPrivateProfileInt("Common", "TickPriceType", 0, OFF_EXP_DIR);

  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  000fd	6a 00		 push	 0
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GIOBNCDJ@TickPriceType?$AA@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00109	89 46 28	 mov	 DWORD PTR [esi+40], eax
  0010c	ff d7		 call	 edi

; 35   : 	this->TickPrice = GetPrivateProfileInt("Common", "TickPrice", 0, OFF_EXP_DIR);

  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HKMDKFPL@?4?4?2Data?2ZtData?2OffExp?4ini?$AA@
  00113	6a 00		 push	 0
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_09BADGNAEJ@TickPrice?$AA@
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0011f	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  00122	ff d7		 call	 edi
  00124	5f		 pop	 edi
  00125	89 46 30	 mov	 DWORD PTR [esi+48], eax
  00128	5e		 pop	 esi

; 36   : }

  00129	c3		 ret	 0
?LoadConfig@cOffExp@@QAEXXZ ENDP			; cOffExp::LoadConfig
_TEXT	ENDS
PUBLIC	_lpObj$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?SearchTarget@cOffExp@@QAEHPAUOBJECTSTRUCT@@@Z	; cOffExp::SearchTarget
EXTRN	_rand:PROC
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?GetAttr@MapClass@@QAEEHH@Z:PROC		; MapClass::GetAttr
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?SearchTarget@cOffExp@@QAEHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$GSCopy$ = -316					; size = 4
tv77 = -312						; size = 4
_TargetCount$ = -308					; size = 4
_TargetIndex$ = -304					; size = 300
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?SearchTarget@cOffExp@@QAEHPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::SearchTarget, COMDAT
; _this$ = ecx

; 767  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 3c 01 00
	00		 sub	 esp, 316		; 0000013cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 768  : 	int dis;
; 769  : 	int searchtarget = -1;
; 770  : 	int tObjNum;
; 771  : 	BYTE attr;
; 772  : 	int TargetIndex[MAX_VIEWPORT_MONSTER];
; 773  : 	int TargetCount = 0;
; 774  : 	int IndexNumber;
; 775  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	53		 push	 ebx
  00019	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  0001c	56		 push	 esi
  0001d	89 9d c4 fe ff
	ff		 mov	 DWORD PTR _lpObj$GSCopy$[ebp], ebx
  00023	57		 push	 edi
  00024	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _TargetCount$[ebp], 0

; 776  : 	{
; 777  : 		tObjNum = lpObj->VpPlayer2[n].number;

  0002e	81 c3 ac 08 00
	00		 add	 ebx, 2220		; 000008acH
  00034	c7 85 c8 fe ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv77[ebp], 75	; 0000004bH
  0003e	8b ff		 npad	 2
$LL16@SearchTarg:

; 778  : 		if(lpObj->VpPlayer2[n].state == 0) continue;

  00040	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  00043	0f bf 7b 02	 movsx	 edi, WORD PTR [ebx+2]
  00047	74 77		 je	 SHORT $LN8@SearchTarg

; 779  : 		if ( tObjNum >= 0 )

  00049	85 ff		 test	 edi, edi
  0004b	78 73		 js	 SHORT $LN8@SearchTarg

; 780  : 		{
; 781  : 			if ( gObj[tObjNum].Type == OBJ_MONSTER )

  0004d	8b f7		 mov	 esi, edi
  0004f	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00055	66 83 7c 06 68
	02		 cmp	 WORD PTR [esi+eax+104], 2
  0005b	75 63		 jne	 SHORT $LN8@SearchTarg

; 782  : 			{
; 783  : 				attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 784  : 				if ( (attr&1) != 1 )

  0005d	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  00065	0f bf 94 06 44
	01 00 00	 movsx	 edx, WORD PTR [esi+eax+324]
  0006d	51		 push	 ecx
  0006e	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  00076	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  0007c	52		 push	 edx
  0007d	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00083	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  00088	a8 01		 test	 al, 1
  0008a	75 2f		 jne	 SHORT $LN14@SearchTarg

; 785  : 				{
; 786  : 					dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  0008c	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00092	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _lpObj$GSCopy$[ebp]
  00098	56		 push	 esi
  00099	51		 push	 ecx
  0009a	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0009f	83 c4 08	 add	 esp, 8

; 787  : 					if(6 >= dis)

  000a2	83 f8 06	 cmp	 eax, 6
  000a5	7f 14		 jg	 SHORT $LN14@SearchTarg

; 788  : 					{
; 789  : 						TargetIndex[TargetCount] = tObjNum;

  000a7	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _TargetCount$[ebp]
  000ad	89 bc 85 d0 fe
	ff ff		 mov	 DWORD PTR _TargetIndex$[ebp+eax*4], edi

; 790  : 						TargetCount++;

  000b4	40		 inc	 eax
  000b5	89 85 cc fe ff
	ff		 mov	 DWORD PTR _TargetCount$[ebp], eax
$LN14@SearchTarg:
  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN8@SearchTarg:

; 768  : 	int dis;
; 769  : 	int searchtarget = -1;
; 770  : 	int tObjNum;
; 771  : 	BYTE attr;
; 772  : 	int TargetIndex[MAX_VIEWPORT_MONSTER];
; 773  : 	int TargetCount = 0;
; 774  : 	int IndexNumber;
; 775  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  000c0	83 c3 0c	 add	 ebx, 12			; 0000000cH
  000c3	ff 8d c8 fe ff
	ff		 dec	 DWORD PTR tv77[ebp]
  000c9	0f 85 71 ff ff
	ff		 jne	 $LL16@SearchTarg

; 791  : 					}
; 792  : 				}
; 793  : 			}
; 794  : 		}
; 795  : 	}
; 796  : 
; 797  : 	if(TargetCount == 0)	return -1;

  000cf	83 bd cc fe ff
	ff 00		 cmp	 DWORD PTR _TargetCount$[ebp], 0
  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	75 13		 jne	 SHORT $LN1@SearchTarg
  000db	83 c8 ff	 or	 eax, -1

; 800  : 
; 801  : 	searchtarget = TargetIndex[IndexNumber];
; 802  : 
; 803  : 	return searchtarget;
; 804  : }

  000de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e1	33 cd		 xor	 ecx, ebp
  000e3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e8	8b e5		 mov	 esp, ebp
  000ea	5d		 pop	 ebp
  000eb	c2 04 00	 ret	 4
$LN1@SearchTarg:

; 798  : 	
; 799  : 	IndexNumber = rand()%TargetCount;

  000ee	e8 00 00 00 00	 call	 _rand
  000f3	99		 cdq
  000f4	f7 bd cc fe ff
	ff		 idiv	 DWORD PTR _TargetCount$[ebp]

; 800  : 
; 801  : 	searchtarget = TargetIndex[IndexNumber];
; 802  : 
; 803  : 	return searchtarget;
; 804  : }

  000fa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fd	33 cd		 xor	 ecx, ebp
  000ff	8b 84 95 d0 fe
	ff ff		 mov	 eax, DWORD PTR _TargetIndex$[ebp+edx*4]
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 04 00	 ret	 4
?SearchTarget@cOffExp@@QAEHPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::SearchTarget
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4059000000000000
PUBLIC	?UseMana@cOffExp@@QAEXH@Z			; cOffExp::UseMana
EXTRN	?GCInventoryItemDeleteSend@@YAXHEE@Z:PROC	; GCInventoryItemDeleteSend
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
EXTRN	?gObjInventoryItemSet@@YAXHHE@Z:PROC		; gObjInventoryItemSet
EXTRN	?gObjSearchItemMinus@@YAHPAUOBJECTSTRUCT@@HH@Z:PROC ; gObjSearchItemMinus
EXTRN	?GCManaSend@@YAXHHEEH@Z:PROC			; GCManaSend
EXTRN	?gObjGetManaItemPos@@YAHH@Z:PROC		; gObjGetManaItemPos
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UseMana@cOffExp@@QAEXH@Z
_TEXT	SEGMENT
tv329 = -12						; size = 4
_pos$ = -8						; size = 4
_tMana$212237 = -4					; size = 4
_aIndex$ = 8						; size = 4
?UseMana@cOffExp@@QAEXH@Z PROC				; cOffExp::UseMana, COMDAT
; _this$ = ecx

; 807  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 808  : 	LPOBJ lpObj = &gObj[aIndex];

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0000b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000e	56		 push	 esi
  0000f	8b f1		 mov	 esi, ecx
  00011	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H

; 809  : 
; 810  : 	if(lpObj->Mana > 100) return;

  00017	d9 84 06 10 01
	00 00		 fld	 DWORD PTR [esi+eax+272]
  0001e	dc 1d 00 00 00
	00		 fcomp	 QWORD PTR __real@4059000000000000
  00024	57		 push	 edi
  00025	8d 3c 06	 lea	 edi, DWORD PTR [esi+eax]
  00028	df e0		 fnstsw	 ax
  0002a	f6 c4 41	 test	 ah, 65			; 00000041H
  0002d	0f 84 b1 01 00
	00		 je	 $LN1@UseMana

; 811  : 		
; 812  : 	int pos;
; 813  : 
; 814  : 	pos = gObjGetManaItemPos(aIndex);

  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?gObjGetManaItemPos@@YAHH@Z ; gObjGetManaItemPos
  00039	83 c4 04	 add	 esp, 4
  0003c	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 815  : 
; 816  : 	if(pos == -1) return;

  0003f	83 f8 ff	 cmp	 eax, -1
  00042	0f 84 9c 01 00
	00		 je	 $LN1@UseMana

; 817  : 
; 818  : 	if( lpObj->pInventory[pos].m_Type == ITEMGET(14,4) || 
; 819  : 		lpObj->pInventory[pos].m_Type == ITEMGET(14,5) || 
; 820  : 		lpObj->pInventory[pos].m_Type == ITEMGET(14,6)  )

  00048	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0004e	89 45 f4	 mov	 DWORD PTR tv329[ebp], eax
  00051	03 87 24 0e 00
	00		 add	 eax, DWORD PTR [edi+3620]
  00057	ba 04 1c 00 00	 mov	 edx, 7172		; 00001c04H
  0005c	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00060	66 3b ca	 cmp	 cx, dx
  00063	74 18		 je	 SHORT $LN9@UseMana
  00065	ba 05 1c 00 00	 mov	 edx, 7173		; 00001c05H
  0006a	66 3b ca	 cmp	 cx, dx
  0006d	74 0e		 je	 SHORT $LN9@UseMana
  0006f	ba 06 1c 00 00	 mov	 edx, 7174		; 00001c06H
  00074	66 3b ca	 cmp	 cx, dx
  00077	0f 85 67 01 00
	00		 jne	 $LN1@UseMana
$LN9@UseMana:

; 821  : 	{
; 822  : 		int tMana = (lpObj->pInventory[pos].m_Value*10) - (gObj[aIndex].Level);

  0007d	8b 40 68	 mov	 eax, DWORD PTR [eax+104]
  00080	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00086	53		 push	 ebx
  00087	8d 1c 80	 lea	 ebx, DWORD PTR [eax+eax*4]
  0008a	0f bf 84 3e be
	00 00 00	 movsx	 eax, WORD PTR [esi+edi+190]
  00092	03 db		 add	 ebx, ebx
  00094	2b d8		 sub	 ebx, eax
  00096	89 5d fc	 mov	 DWORD PTR _tMana$212237[ebp], ebx

; 823  : 
; 824  : 		if ( tMana < 0 )

  00099	79 05		 jns	 SHORT $LN15@UseMana

; 825  : 		{
; 826  : 			tMana=0;

  0009b	33 db		 xor	 ebx, ebx
  0009d	89 5d fc	 mov	 DWORD PTR _tMana$212237[ebp], ebx
$LN15@UseMana:

; 827  : 		}
; 828  : 
; 829  : 		switch ( lpObj->pInventory[pos].m_Type )

  000a0	0f bf c1	 movsx	 eax, cx
  000a3	2d 04 1c 00 00	 sub	 eax, 7172		; 00001c04H
  000a8	74 51		 je	 SHORT $LN5@UseMana
  000aa	48		 dec	 eax
  000ab	74 1d		 je	 SHORT $LN4@UseMana
  000ad	48		 dec	 eax
  000ae	75 7b		 jne	 SHORT $LN6@UseMana

; 837  : 		case ITEMGET(14,6):
; 838  : 			tMana += ((int)(gObj[aIndex].MaxMana + gObj[aIndex].AddMana))*40/100; 

  000b0	db 84 3e 50 01
	00 00		 fild	 DWORD PTR [esi+edi+336]
  000b7	d8 84 3e 14 01
	00 00		 fadd	 DWORD PTR [esi+edi+276]
  000be	e8 00 00 00 00	 call	 __ftol2_sse
  000c3	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  000c6	03 c9		 add	 ecx, ecx

; 839  : 			break;

  000c8	eb 47		 jmp	 SHORT $LN20@UseMana
$LN4@UseMana:

; 833  : 			break;
; 834  : 		case ITEMGET(14,5):
; 835  : 			tMana += ((int)(gObj[aIndex].MaxMana + gObj[aIndex].AddMana))*30/100; 

  000ca	db 84 3e 50 01
	00 00		 fild	 DWORD PTR [esi+edi+336]
  000d1	d8 84 3e 14 01
	00 00		 fadd	 DWORD PTR [esi+edi+276]
  000d8	e8 00 00 00 00	 call	 __ftol2_sse
  000dd	8b c8		 mov	 ecx, eax
  000df	c1 e1 04	 shl	 ecx, 4
  000e2	2b c8		 sub	 ecx, eax
  000e4	03 c9		 add	 ecx, ecx
  000e6	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000eb	f7 e9		 imul	 ecx
  000ed	c1 fa 05	 sar	 edx, 5
  000f0	8b c2		 mov	 eax, edx
  000f2	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f5	03 c2		 add	 eax, edx
  000f7	03 d8		 add	 ebx, eax

; 836  : 			break;

  000f9	eb 2d		 jmp	 SHORT $LN21@UseMana
$LN5@UseMana:

; 830  : 		{
; 831  : 		case ITEMGET(14,4):
; 832  : 			tMana += ((int)(gObj[aIndex].MaxMana + gObj[aIndex].AddMana))*20/100; 

  000fb	db 84 3e 50 01
	00 00		 fild	 DWORD PTR [esi+edi+336]
  00102	d8 84 3e 14 01
	00 00		 fadd	 DWORD PTR [esi+edi+276]
  00109	e8 00 00 00 00	 call	 __ftol2_sse
  0010e	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
$LN20@UseMana:
  00111	03 c9		 add	 ecx, ecx
  00113	03 c9		 add	 ecx, ecx
  00115	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0011a	f7 e9		 imul	 ecx
  0011c	c1 fa 05	 sar	 edx, 5
  0011f	8b ca		 mov	 ecx, edx
  00121	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00124	03 ca		 add	 ecx, edx
  00126	03 d9		 add	 ebx, ecx
$LN21@UseMana:
  00128	89 5d fc	 mov	 DWORD PTR _tMana$212237[ebp], ebx
$LN6@UseMana:

; 840  : 		}
; 841  : 
; 842  : 		gObj[aIndex].Mana += tMana;

  0012b	db 45 fc	 fild	 DWORD PTR _tMana$212237[ebp]
  0012e	8d bc 3e 10 01
	00 00		 lea	 edi, DWORD PTR [esi+edi+272]
  00135	d8 07		 fadd	 DWORD PTR [edi]
  00137	d9 1f		 fstp	 DWORD PTR [edi]

; 843  : 
; 844  : 		if ( gObj[aIndex].Mana > (gObj[aIndex].MaxMana+gObj[aIndex].AddMana-1.0f) )

  00139	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0013f	db 84 0e 50 01
	00 00		 fild	 DWORD PTR [esi+ecx+336]
  00146	8d 94 0e 10 01
	00 00		 lea	 edx, DWORD PTR [esi+ecx+272]
  0014d	d8 84 0e 14 01
	00 00		 fadd	 DWORD PTR [esi+ecx+276]
  00154	d9 02		 fld	 DWORD PTR [edx]
  00156	d9 c1		 fld	 ST(1)
  00158	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3ff0000000000000
  0015e	de d9		 fcompp
  00160	df e0		 fnstsw	 ax
  00162	f6 c4 05	 test	 ah, 5
  00165	7a 0a		 jp	 SHORT $LN18@UseMana

; 845  : 		{
; 846  : 			gObj[aIndex].Mana = gObj[aIndex].MaxMana+gObj[aIndex].AddMana;

  00167	d9 1a		 fstp	 DWORD PTR [edx]
  00169	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0016f	eb 02		 jmp	 SHORT $LN2@UseMana
$LN18@UseMana:
  00171	dd d8		 fstp	 ST(0)
$LN2@UseMana:

; 847  : 		}
; 848  : 
; 849  : 		GCManaSend(aIndex, (int)gObj[aIndex].Mana, 0xFF, 0, (int)gObj[aIndex].BP);

  00173	8b 94 0e 28 01
	00 00		 mov	 edx, DWORD PTR [esi+ecx+296]
  0017a	d9 84 0e 10 01
	00 00		 fld	 DWORD PTR [esi+ecx+272]
  00181	52		 push	 edx
  00182	6a 00		 push	 0
  00184	68 ff 00 00 00	 push	 255			; 000000ffH
  00189	e8 00 00 00 00	 call	 __ftol2_sse
  0018e	8b 5d 08	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00191	50		 push	 eax
  00192	53		 push	 ebx
  00193	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend

; 850  : 
; 851  : 		if ( !gObjSearchItemMinus(&gObj[aIndex], pos, 1) )

  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0019d	8b 7d f8	 mov	 edi, DWORD PTR _pos$[ebp]
  001a0	6a 01		 push	 1
  001a2	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  001a5	57		 push	 edi
  001a6	51		 push	 ecx
  001a7	e8 00 00 00 00	 call	 ?gObjSearchItemMinus@@YAHPAUOBJECTSTRUCT@@HH@Z ; gObjSearchItemMinus
  001ac	83 c4 20	 add	 esp, 32			; 00000020H
  001af	85 c0		 test	 eax, eax
  001b1	75 30		 jne	 SHORT $LN16@UseMana

; 852  : 		{
; 853  : 			gObjInventoryItemSet(aIndex, pos, -1);

  001b3	68 ff 00 00 00	 push	 255			; 000000ffH
  001b8	57		 push	 edi
  001b9	53		 push	 ebx
  001ba	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 854  : 			gObj[aIndex].pInventory[pos].Clear();

  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001c5	8b 8c 16 24 0e
	00 00		 mov	 ecx, DWORD PTR [esi+edx+3620]
  001cc	03 4d f4	 add	 ecx, DWORD PTR tv329[ebp]
  001cf	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d2	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear

; 855  : 			GCInventoryItemDeleteSend(aIndex, pos, 1);

  001d7	6a 01		 push	 1
  001d9	57		 push	 edi
  001da	53		 push	 ebx
  001db	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend
  001e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN16@UseMana:
  001e3	5b		 pop	 ebx
$LN1@UseMana:
  001e4	5f		 pop	 edi
  001e5	5e		 pop	 esi

; 856  : 		}
; 857  : 	}
; 858  : }

  001e6	8b e5		 mov	 esp, ebp
  001e8	5d		 pop	 ebp
  001e9	c2 04 00	 ret	 4
?UseMana@cOffExp@@QAEXH@Z ENDP				; cOffExp::UseMana
_TEXT	ENDS
PUBLIC	?CheckTerrain@cOffExp@@QAE_NPAUOBJECTSTRUCT@@@Z	; cOffExp::CheckTerrain
; Function compile flags: /Ogtp
;	COMDAT ?CheckTerrain@cOffExp@@QAE_NPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?CheckTerrain@cOffExp@@QAE_NPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::CheckTerrain, COMDAT
; _this$ = ecx

; 861  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 862  : 	BYTE attr = MapC[lpObj->MapNumber].GetAttr(lpObj->X, lpObj->Y);
; 863  : 	if ( (attr&1) != 1 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  0000d	0f bf 90 44 01
	00 00		 movsx	 edx, WORD PTR [eax+324]
  00014	51		 push	 ecx
  00015	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  0001c	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  00022	52		 push	 edx
  00023	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00029	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  0002e	24 01		 and	 al, 1
  00030	3c 01		 cmp	 al, 1
  00032	0f 95 c0	 setne	 al

; 864  : 	{
; 865  : 		return true;
; 866  : 	}
; 867  : 	else
; 868  : 	{
; 869  : 		return false;
; 870  : 	}
; 871  : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?CheckTerrain@cOffExp@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::CheckTerrain
_TEXT	ENDS
PUBLIC	??_C@_0BI@CGJMHIKF@?$FLOffExp?$FN?5Need?5?$CFd?5Goblin?$AA@ ; `string'
PUBLIC	??_C@_0BI@LKOIBIFN@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinP?$AA@ ; `string'
PUBLIC	??_C@_0BI@NLAHFJMP@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinC?$AA@ ; `string'
PUBLIC	??_C@_0BI@KKCCEDNH@?$FLOffExp?$FN?5Need?5?$CFd?5Credit?$AA@ ; `string'
PUBLIC	??_C@_0BF@MAMJKDIJ@?$FLOffExp?$FN?5Need?5?$CFd?5Zen?$AA@ ; `string'
PUBLIC	??_C@_0CJ@JCIOOKIM@?$FLOfflineExp?$FN?5Disable?5in?5Castle?5s@ ; `string'
PUBLIC	?OffExpStart@cOffExp@@QAEXHH@Z			; cOffExp::OffExpStart
EXTRN	?SendClose@ConnectZt@@QAEXHH@Z:PROC		; ConnectZt::SendClose
EXTRN	?g_ConnectZt@@3VConnectZt@@A:QWORD		; g_ConnectZt
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	?MsgNormal@@YAXHPADZZ:PROC			; MsgNormal
;	COMDAT ??_C@_0BI@CGJMHIKF@?$FLOffExp?$FN?5Need?5?$CFd?5Goblin?$AA@
CONST	SEGMENT
??_C@_0BI@CGJMHIKF@?$FLOffExp?$FN?5Need?5?$CFd?5Goblin?$AA@ DB '[OffExp] '
	DB	'Need %d Goblin', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKOIBIFN@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinP?$AA@
CONST	SEGMENT
??_C@_0BI@LKOIBIFN@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinP?$AA@ DB '[OffExp] '
	DB	'Need %d WCoinP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NLAHFJMP@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinC?$AA@
CONST	SEGMENT
??_C@_0BI@NLAHFJMP@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinC?$AA@ DB '[OffExp] '
	DB	'Need %d WCoinC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KKCCEDNH@?$FLOffExp?$FN?5Need?5?$CFd?5Credit?$AA@
CONST	SEGMENT
??_C@_0BI@KKCCEDNH@?$FLOffExp?$FN?5Need?5?$CFd?5Credit?$AA@ DB '[OffExp] '
	DB	'Need %d Credit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MAMJKDIJ@?$FLOffExp?$FN?5Need?5?$CFd?5Zen?$AA@
CONST	SEGMENT
??_C@_0BF@MAMJKDIJ@?$FLOffExp?$FN?5Need?5?$CFd?5Zen?$AA@ DB '[OffExp] Nee'
	DB	'd %d Zen', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JCIOOKIM@?$FLOfflineExp?$FN?5Disable?5in?5Castle?5s@
CONST	SEGMENT
??_C@_0CJ@JCIOOKIM@?$FLOfflineExp?$FN?5Disable?5in?5Castle?5s@ DB '[Offli'
	DB	'neExp] Disable in Castle siege map', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?OffExpStart@cOffExp@@QAEXHH@Z
_TEXT	SEGMENT
tv474 = 8						; size = 4
tv464 = 8						; size = 4
tv454 = 8						; size = 4
tv443 = 8						; size = 4
tv441 = 8						; size = 4
_aIndex$ = 8						; size = 4
_Time$ = 12						; size = 4
?OffExpStart@cOffExp@@QAEXHH@Z PROC			; cOffExp::OffExpStart, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx

; 40   : 	if(!this->Enable) return;

  00006	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  00009	0f 84 a2 03 00
	00		 je	 $LN1@OffExpStar

; 41   : 	
; 42   : 	LPOBJ lpObj = &gObj[aIndex];

  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00014	8b f7		 mov	 esi, edi
  00016	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0001c	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 43   : 
; 44   : 
; 45   : 	if(lpObj->MapNumber == MAP_INDEX_CASTLESIEGE)

  00022	80 be 49 01 00
	00 1e		 cmp	 BYTE PTR [esi+329], 30	; 0000001eH
  00029	75 15		 jne	 SHORT $LN35@OffExpStar

; 46   : 	{
; 47   : 		MsgNormal(aIndex,"[OfflineExp] Disable in Castle siege map");

  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@JCIOOKIM@?$FLOfflineExp?$FN?5Disable?5in?5Castle?5s@

; 167  : 	}
; 168  : 	else
; 169  : 	{
; 170  : 		MsgNormal(aIndex,g_ZtText.GetText(244));

  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00036	83 c4 08	 add	 esp, 8
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
$LN35@OffExpStar:

; 48   : 		return;
; 49   : 	}
; 50   : 
; 51   : 	if (CheckTerrain(lpObj))

  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ?CheckTerrain@cOffExp@@QAE_NPAUOBJECTSTRUCT@@@Z ; cOffExp::CheckTerrain
  00046	84 c0		 test	 al, al
  00048	0f 84 48 03 00
	00		 je	 $LN34@OffExpStar

; 52   : 	{
; 53   : 		if(g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(eZtUB::drynea) || g_ZtLicense.CheckUser(eZtUB::Local2) || g_ZtLicense.CheckUser(eZtUB::Local))

  0004e	6a 1c		 push	 28			; 0000001cH
  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00055	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0005a	84 c0		 test	 al, al
  0005c	0f 85 9c 01 00
	00		 jne	 $LN32@OffExpStar
  00062	6a 01		 push	 1
  00064	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00069	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0006e	84 c0		 test	 al, al
  00070	0f 85 88 01 00
	00		 jne	 $LN32@OffExpStar
  00076	6a 18		 push	 24			; 00000018H
  00078	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0007d	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00082	84 c0		 test	 al, al
  00084	0f 85 74 01 00
	00		 jne	 $LN32@OffExpStar
  0008a	6a 00		 push	 0
  0008c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00091	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00096	84 c0		 test	 al, al
  00098	0f 85 60 01 00
	00		 jne	 $LN32@OffExpStar

; 104  : 			}
; 105  : 		}
; 106  : 		else
; 107  : 		{
; 108  : 			if(this->PriceZen)

  0009e	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  000a1	85 c9		 test	 ecx, ecx
  000a3	74 2f		 je	 SHORT $LN16@OffExpStar

; 109  : 			{
; 110  : 				if(this->PriceZen > lpObj->Money)

  000a5	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  000ab	3b c8		 cmp	 ecx, eax
  000ad	0f 8e 7b 01 00
	00		 jle	 $LN30@OffExpStar

; 111  : 				{
; 112  : 					MsgNormal(aIndex, g_ZtText.GetText(239),this->PriceZen);

  000b3	51		 push	 ecx
  000b4	68 ef 00 00 00	 push	 239			; 000000efH
  000b9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000be	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000c3	50		 push	 eax
  000c4	57		 push	 edi
  000c5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  000ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  000d0	5d		 pop	 ebp
  000d1	c2 08 00	 ret	 8
$LN16@OffExpStar:

; 113  : 					return;
; 114  : 				}
; 115  : 				lpObj->Money -= this->PriceZen;
; 116  : 				GCMoneySend(aIndex,lpObj->Money);
; 117  : 			}
; 118  : 			else if(this->PriceCredit)

  000d4	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  000d7	89 4d 08	 mov	 DWORD PTR tv441[ebp], ecx
  000da	85 c9		 test	 ecx, ecx
  000dc	74 3f		 je	 SHORT $LN13@OffExpStar

; 119  : 			{
; 120  : 				if(this->PriceCredit > lpObj->ZtCred)

  000de	db 45 08	 fild	 DWORD PTR tv441[ebp]
  000e1	d9 5d 08	 fstp	 DWORD PTR tv443[ebp]
  000e4	d9 45 08	 fld	 DWORD PTR tv443[ebp]
  000e7	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  000ed	d8 d9		 fcomp	 ST(1)
  000ef	df e0		 fnstsw	 ax
  000f1	f6 c4 05	 test	 ah, 5
  000f4	0f 8a 8e 01 00
	00		 jp	 $LN27@OffExpStar

; 121  : 				{
; 122  : 					MsgNormal(aIndex,g_ZtText.GetText(240),this->PriceCredit);

  000fa	51		 push	 ecx
  000fb	dd d8		 fstp	 ST(0)
  000fd	68 f0 00 00 00	 push	 240			; 000000f0H
  00102	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00107	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0010c	50		 push	 eax
  0010d	57		 push	 edi
  0010e	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	5f		 pop	 edi
  00117	5e		 pop	 esi
  00118	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  00119	5d		 pop	 ebp
  0011a	c2 08 00	 ret	 8
$LN13@OffExpStar:

; 123  : 					return;
; 124  : 				}
; 125  : 				lpObj->ZtCred -= this->PriceCredit;//Conflict
; 126  : 				ZtUserDataSend(aIndex);
; 127  : 			}
; 128  : 			else if(this->PriceWCoinC)

  0011d	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]
  00120	89 4d 08	 mov	 DWORD PTR tv454[ebp], ecx
  00123	85 c9		 test	 ecx, ecx
  00125	74 44		 je	 SHORT $LN10@OffExpStar

; 129  : 			{
; 130  : 				if(this->PriceWCoinC > lpObj->GameShop.WCoinC)

  00127	db 45 08	 fild	 DWORD PTR tv454[ebp]
  0012a	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  00130	df e0		 fnstsw	 ax
  00132	f6 c4 41	 test	 ah, 65			; 00000041H
  00135	75 23		 jne	 SHORT $LN9@OffExpStar

; 131  : 				{
; 132  : 					MsgNormal(aIndex,g_ZtText.GetText(241),this->PriceWCoinC);

  00137	51		 push	 ecx
  00138	dd d8		 fstp	 ST(0)
  0013a	68 f1 00 00 00	 push	 241			; 000000f1H
  0013f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00144	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00149	50		 push	 eax
  0014a	57		 push	 edi
  0014b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00150	83 c4 0c	 add	 esp, 12			; 0000000cH
  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  00156	5d		 pop	 ebp
  00157	c2 08 00	 ret	 8
$LN9@OffExpStar:

; 133  : 					return;
; 134  : 				}
; 135  : 				lpObj->GameShop.WCoinC -= this->PriceWCoinC;

  0015a	dc ae 00 23 00
	00		 fsubr	 QWORD PTR [esi+8960]
  00160	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]

; 136  : 				gGameShop.GDSaveUserInfo(aIndex);

  00166	e9 fc 01 00 00	 jmp	 $LN66@OffExpStar
$LN10@OffExpStar:

; 137  : 			}
; 138  : 			else if(this->PriceWCoinP)

  0016b	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  0016e	89 4d 08	 mov	 DWORD PTR tv464[ebp], ecx
  00171	85 c9		 test	 ecx, ecx
  00173	74 44		 je	 SHORT $LN7@OffExpStar

; 139  : 			{
; 140  : 				if(this->PriceWCoinP > lpObj->GameShop.WCoinP)

  00175	db 45 08	 fild	 DWORD PTR tv464[ebp]
  00178	dc 96 f8 22 00
	00		 fcom	 QWORD PTR [esi+8952]
  0017e	df e0		 fnstsw	 ax
  00180	f6 c4 41	 test	 ah, 65			; 00000041H
  00183	75 23		 jne	 SHORT $LN6@OffExpStar

; 141  : 				{
; 142  : 					MsgNormal(aIndex,g_ZtText.GetText(242),this->PriceWCoinP);

  00185	51		 push	 ecx
  00186	dd d8		 fstp	 ST(0)
  00188	68 f2 00 00 00	 push	 242			; 000000f2H
  0018d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00192	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00197	50		 push	 eax
  00198	57		 push	 edi
  00199	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0019e	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a1	5f		 pop	 edi
  001a2	5e		 pop	 esi
  001a3	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  001a4	5d		 pop	 ebp
  001a5	c2 08 00	 ret	 8
$LN6@OffExpStar:

; 143  : 					return;
; 144  : 				}
; 145  : 				lpObj->GameShop.WCoinP -= this->PriceWCoinP;

  001a8	dc ae f8 22 00
	00		 fsubr	 QWORD PTR [esi+8952]
  001ae	dd 9e f8 22 00
	00		 fstp	 QWORD PTR [esi+8952]

; 146  : 				gGameShop.GDSaveUserInfo(aIndex);

  001b4	e9 ae 01 00 00	 jmp	 $LN66@OffExpStar
$LN7@OffExpStar:

; 147  : 			}
; 148  : 			else if(this->PriceGoblin)

  001b9	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  001bc	89 4d 08	 mov	 DWORD PTR tv474[ebp], ecx
  001bf	85 c9		 test	 ecx, ecx
  001c1	0f 84 ab 01 00
	00		 je	 $LN19@OffExpStar

; 149  : 			{
; 150  : 				if(this->PriceGoblin > lpObj->GameShop.GoblinPoint)

  001c7	db 45 08	 fild	 DWORD PTR tv474[ebp]
  001ca	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  001d0	df e0		 fnstsw	 ax
  001d2	f6 c4 41	 test	 ah, 65			; 00000041H
  001d5	0f 85 80 01 00
	00		 jne	 $LN18@OffExpStar

; 151  : 				{
; 152  : 					MsgNormal(aIndex,g_ZtText.GetText(243),this->PriceGoblin);

  001db	51		 push	 ecx
  001dc	dd d8		 fstp	 ST(0)
  001de	68 f3 00 00 00	 push	 243			; 000000f3H
  001e3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  001e8	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  001ed	50		 push	 eax
  001ee	57		 push	 edi
  001ef	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  001f4	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f7	5f		 pop	 edi
  001f8	5e		 pop	 esi
  001f9	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  001fa	5d		 pop	 ebp
  001fb	c2 08 00	 ret	 8
$LN32@OffExpStar:

; 54   : 		{
; 55   : 			if(this->PriceZen && (!lpObj->PremiumTime))

  001fe	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00201	85 c9		 test	 ecx, ecx
  00203	74 40		 je	 SHORT $LN31@OffExpStar
  00205	83 be b8 22 00
	00 00		 cmp	 DWORD PTR [esi+8888], 0
  0020c	75 37		 jne	 SHORT $LN31@OffExpStar

; 56   : 			{
; 57   : 				if(this->PriceZen > lpObj->Money)

  0020e	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  00214	3b c8		 cmp	 ecx, eax
  00216	7e 16		 jle	 SHORT $LN30@OffExpStar

; 58   : 				{
; 59   : 					MsgNormal(aIndex,"[OffExp] Need %d Zen",this->PriceZen);

  00218	51		 push	 ecx
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MAMJKDIJ@?$FLOffExp?$FN?5Need?5?$CFd?5Zen?$AA@
  0021e	57		 push	 edi
  0021f	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00224	83 c4 0c	 add	 esp, 12			; 0000000cH
  00227	5f		 pop	 edi
  00228	5e		 pop	 esi
  00229	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  0022a	5d		 pop	 ebp
  0022b	c2 08 00	 ret	 8
$LN30@OffExpStar:

; 60   : 					return;
; 61   : 				}
; 62   : 				lpObj->Money -= this->PriceZen;

  0022e	2b c1		 sub	 eax, ecx

; 63   : 				GCMoneySend(aIndex,lpObj->Money);

  00230	50		 push	 eax
  00231	57		 push	 edi
  00232	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  00238	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  0023d	83 c4 08	 add	 esp, 8
  00240	e9 2d 01 00 00	 jmp	 $LN19@OffExpStar
$LN31@OffExpStar:

; 64   : 			}
; 65   : 			else if(this->PriceCredit && (!lpObj->PremiumTime))

  00245	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  00248	89 4d 08	 mov	 DWORD PTR tv441[ebp], ecx
  0024b	85 c9		 test	 ecx, ecx
  0024d	74 53		 je	 SHORT $LN28@OffExpStar
  0024f	83 be b8 22 00
	00 00		 cmp	 DWORD PTR [esi+8888], 0
  00256	75 4a		 jne	 SHORT $LN28@OffExpStar

; 66   : 			{
; 67   : 				if(this->PriceCredit > lpObj->ZtCred)

  00258	db 45 08	 fild	 DWORD PTR tv441[ebp]
  0025b	d9 5d 08	 fstp	 DWORD PTR tv443[ebp]
  0025e	d9 45 08	 fld	 DWORD PTR tv443[ebp]
  00261	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  00267	d8 d9		 fcomp	 ST(1)
  00269	df e0		 fnstsw	 ax
  0026b	f6 c4 05	 test	 ah, 5
  0026e	7a 18		 jp	 SHORT $LN27@OffExpStar

; 68   : 				{
; 69   : 					MsgNormal(aIndex,"[OffExp] Need %d Credit",this->PriceCredit);

  00270	51		 push	 ecx
  00271	dd d8		 fstp	 ST(0)
  00273	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KKCCEDNH@?$FLOffExp?$FN?5Need?5?$CFd?5Credit?$AA@
  00278	57		 push	 edi
  00279	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0027e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00281	5f		 pop	 edi
  00282	5e		 pop	 esi
  00283	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  00284	5d		 pop	 ebp
  00285	c2 08 00	 ret	 8
$LN27@OffExpStar:

; 70   : 					return;
; 71   : 				}
; 72   : 				lpObj->ZtCred -= this->PriceCredit;//Conflict

  00288	d8 ae a8 22 00
	00		 fsubr	 DWORD PTR [esi+8872]

; 73   : 				ZtUserDataSend(aIndex);

  0028e	57		 push	 edi
  0028f	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  00295	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  0029a	83 c4 04	 add	 esp, 4
  0029d	e9 d0 00 00 00	 jmp	 $LN19@OffExpStar
$LN28@OffExpStar:

; 74   : 			}
; 75   : 			else if(this->PriceWCoinC && (!lpObj->PremiumTime))

  002a2	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]
  002a5	89 4d 08	 mov	 DWORD PTR tv454[ebp], ecx
  002a8	85 c9		 test	 ecx, ecx
  002aa	74 35		 je	 SHORT $LN25@OffExpStar
  002ac	83 be b8 22 00
	00 00		 cmp	 DWORD PTR [esi+8888], 0
  002b3	75 2c		 jne	 SHORT $LN25@OffExpStar

; 76   : 			{
; 77   : 				if(this->PriceWCoinC > lpObj->GameShop.WCoinC)

  002b5	db 45 08	 fild	 DWORD PTR tv454[ebp]
  002b8	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  002be	df e0		 fnstsw	 ax
  002c0	f6 c4 41	 test	 ah, 65			; 00000041H
  002c3	0f 85 91 fe ff
	ff		 jne	 $LN9@OffExpStar

; 78   : 				{
; 79   : 					MsgNormal(aIndex,"[OffExp] Need %d WCoinC",this->PriceWCoinC);

  002c9	51		 push	 ecx
  002ca	dd d8		 fstp	 ST(0)
  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NLAHFJMP@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinC?$AA@
  002d1	57		 push	 edi
  002d2	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  002d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  002da	5f		 pop	 edi
  002db	5e		 pop	 esi
  002dc	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  002dd	5d		 pop	 ebp
  002de	c2 08 00	 ret	 8
$LN25@OffExpStar:

; 80   : 					return;
; 81   : 				}
; 82   : 				lpObj->GameShop.WCoinC -= this->PriceWCoinC;
; 83   : 				gGameShop.GDSaveUserInfo(aIndex);
; 84   : 			}
; 85   : 			else if(this->PriceWCoinP && (!lpObj->PremiumTime))

  002e1	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  002e4	89 4d 08	 mov	 DWORD PTR tv464[ebp], ecx
  002e7	85 c9		 test	 ecx, ecx
  002e9	74 35		 je	 SHORT $LN22@OffExpStar
  002eb	83 be b8 22 00
	00 00		 cmp	 DWORD PTR [esi+8888], 0
  002f2	75 2c		 jne	 SHORT $LN22@OffExpStar

; 86   : 			{
; 87   : 				if(this->PriceWCoinP > lpObj->GameShop.WCoinP)

  002f4	db 45 08	 fild	 DWORD PTR tv464[ebp]
  002f7	dc 96 f8 22 00
	00		 fcom	 QWORD PTR [esi+8952]
  002fd	df e0		 fnstsw	 ax
  002ff	f6 c4 41	 test	 ah, 65			; 00000041H
  00302	0f 85 a0 fe ff
	ff		 jne	 $LN6@OffExpStar

; 88   : 				{
; 89   : 					MsgNormal(aIndex,"[OffExp] Need %d WCoinP",this->PriceWCoinP);

  00308	51		 push	 ecx
  00309	dd d8		 fstp	 ST(0)
  0030b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKOIBIFN@?$FLOffExp?$FN?5Need?5?$CFd?5WCoinP?$AA@
  00310	57		 push	 edi
  00311	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00316	83 c4 0c	 add	 esp, 12			; 0000000cH
  00319	5f		 pop	 edi
  0031a	5e		 pop	 esi
  0031b	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  0031c	5d		 pop	 ebp
  0031d	c2 08 00	 ret	 8
$LN22@OffExpStar:

; 90   : 					return;
; 91   : 				}
; 92   : 				lpObj->GameShop.WCoinP -= this->PriceWCoinP;
; 93   : 				gGameShop.GDSaveUserInfo(aIndex);
; 94   : 			}
; 95   : 			else if(this->PriceGoblin && (!lpObj->PremiumTime))

  00320	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00323	89 4d 08	 mov	 DWORD PTR tv474[ebp], ecx
  00326	85 c9		 test	 ecx, ecx
  00328	74 48		 je	 SHORT $LN19@OffExpStar
  0032a	83 be b8 22 00
	00 00		 cmp	 DWORD PTR [esi+8888], 0
  00331	75 3f		 jne	 SHORT $LN19@OffExpStar

; 96   : 			{
; 97   : 				if(this->PriceGoblin > lpObj->GameShop.GoblinPoint)

  00333	db 45 08	 fild	 DWORD PTR tv474[ebp]
  00336	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  0033c	df e0		 fnstsw	 ax
  0033e	f6 c4 41	 test	 ah, 65			; 00000041H
  00341	75 18		 jne	 SHORT $LN18@OffExpStar

; 98   : 				{
; 99   : 					MsgNormal(aIndex,"[OffExp] Need %d Goblin",this->PriceGoblin);

  00343	51		 push	 ecx
  00344	dd d8		 fstp	 ST(0)
  00346	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CGJMHIKF@?$FLOffExp?$FN?5Need?5?$CFd?5Goblin?$AA@
  0034b	57		 push	 edi
  0034c	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00351	83 c4 0c	 add	 esp, 12			; 0000000cH
  00354	5f		 pop	 edi
  00355	5e		 pop	 esi
  00356	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  00357	5d		 pop	 ebp
  00358	c2 08 00	 ret	 8
$LN18@OffExpStar:

; 100  : 					return;
; 101  : 				}
; 102  : 				lpObj->GameShop.GoblinPoint -= this->PriceGoblin;

  0035b	dc ae 08 23 00
	00		 fsubr	 QWORD PTR [esi+8968]
  00361	dd 9e 08 23 00
	00		 fstp	 QWORD PTR [esi+8968]
$LN66@OffExpStar:

; 103  : 				gGameShop.GDSaveUserInfo(aIndex);

  00367	57		 push	 edi
  00368	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  0036d	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN19@OffExpStar:

; 153  : 					return;
; 154  : 				}
; 155  : 				lpObj->GameShop.GoblinPoint -= this->PriceGoblin;
; 156  : 				gGameShop.GDSaveUserInfo(aIndex);
; 157  : 			}
; 158  : 		}
; 159  : 		//******
; 160  : #ifdef _RECONNECT_
; 161  : 		g_ConnectZt.SendClose(aIndex,OFFAFK_DC);

  00372	6a 14		 push	 20			; 00000014H
  00374	57		 push	 edi
  00375	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectZt@@3VConnectZt@@A ; g_ConnectZt
  0037a	e8 00 00 00 00	 call	 ?SendClose@ConnectZt@@QAEXHH@Z ; ConnectZt::SendClose

; 162  : #else
; 163  : 		CloseClient(aIndex);
; 164  : 		lpObj->OffExp = 1;
; 165  : #endif
; 166  : 		if(this->EnableTime) lpObj->OffExpTick = 0;

  0037f	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  00383	74 2a		 je	 SHORT $LN39@OffExpStar
  00385	5f		 pop	 edi
  00386	c7 86 9c 22 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+8860], 0
  00390	5e		 pop	 esi
  00391	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  00392	5d		 pop	 ebp
  00393	c2 08 00	 ret	 8
$LN34@OffExpStar:

; 167  : 	}
; 168  : 	else
; 169  : 	{
; 170  : 		MsgNormal(aIndex,g_ZtText.GetText(244));

  00396	68 f4 00 00 00	 push	 244			; 000000f4H
  0039b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  003a0	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  003a5	50		 push	 eax
  003a6	57		 push	 edi
  003a7	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  003ac	83 c4 08	 add	 esp, 8
$LN39@OffExpStar:
  003af	5f		 pop	 edi
  003b0	5e		 pop	 esi
$LN1@OffExpStar:
  003b1	5b		 pop	 ebx

; 171  : 	}
; 172  : }

  003b2	5d		 pop	 ebp
  003b3	c2 08 00	 ret	 8
?OffExpStart@cOffExp@@QAEXHH@Z ENDP			; cOffExp::OffExpStart
_TEXT	ENDS
PUBLIC	?DarkWizardOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z	; cOffExp::DarkWizardOff
EXTRN	?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z:PROC ; gObjAttack
EXTRN	?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z:PROC ; CObjUseSkill::UseSkill
EXTRN	?gObjUseSkill@@3VCObjUseSkill@@A:DWORD		; gObjUseSkill
EXTRN	?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z:PROC ; gObjGetMagicSearch
; Function compile flags: /Ogtp
;	COMDAT ?DarkWizardOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv161 = -4						; size = 4
tv338 = 8						; size = 4
_lpObj$ = 8						; size = 4
?DarkWizardOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::DarkWizardOff, COMDAT
; _this$ = ecx

; 315  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi

; 316  : 	int SearchSkill = 0;
; 317  : 	CMagicInf * lpMagic;
; 318  : 
; 319  : 	if(gObjGetMagicSearch( lpObj, 9) != NULL) SearchSkill = 9;

  00007	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000a	6a 09		 push	 9
  0000c	57		 push	 edi
  0000d	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00010	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00015	83 c4 08	 add	 esp, 8
  00018	85 c0		 test	 eax, eax
  0001a	74 07		 je	 SHORT $LN21@DarkWizard
  0001c	b8 09 00 00 00	 mov	 eax, 9
  00021	eb 7f		 jmp	 SHORT $LN10@DarkWizard
$LN21@DarkWizard:

; 320  : 	else if(gObjGetMagicSearch( lpObj, 445) != NULL) SearchSkill = 445;

  00023	68 bd 01 00 00	 push	 445			; 000001bdH
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0002e	83 c4 08	 add	 esp, 8
  00031	85 c0		 test	 eax, eax
  00033	74 07		 je	 SHORT $LN19@DarkWizard
  00035	b8 bd 01 00 00	 mov	 eax, 445		; 000001bdH
  0003a	eb 66		 jmp	 SHORT $LN10@DarkWizard
$LN19@DarkWizard:

; 321  : 	else if(gObjGetMagicSearch( lpObj, 446) != NULL) SearchSkill = 446;

  0003c	68 be 01 00 00	 push	 446			; 000001beH
  00041	57		 push	 edi
  00042	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00047	83 c4 08	 add	 esp, 8
  0004a	85 c0		 test	 eax, eax
  0004c	74 07		 je	 SHORT $LN17@DarkWizard
  0004e	b8 be 01 00 00	 mov	 eax, 446		; 000001beH
  00053	eb 4d		 jmp	 SHORT $LN10@DarkWizard
$LN17@DarkWizard:

; 322  : 	else if(gObjGetMagicSearch( lpObj, 447) != NULL) SearchSkill = 447;

  00055	68 bf 01 00 00	 push	 447			; 000001bfH
  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00060	83 c4 08	 add	 esp, 8
  00063	85 c0		 test	 eax, eax
  00065	74 07		 je	 SHORT $LN15@DarkWizard
  00067	b8 bf 01 00 00	 mov	 eax, 447		; 000001bfH
  0006c	eb 34		 jmp	 SHORT $LN10@DarkWizard
$LN15@DarkWizard:

; 323  : 	else if(gObjGetMagicSearch( lpObj, 448) != NULL) SearchSkill = 448;

  0006e	68 c0 01 00 00	 push	 448			; 000001c0H
  00073	57		 push	 edi
  00074	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00079	83 c4 08	 add	 esp, 8
  0007c	85 c0		 test	 eax, eax
  0007e	74 07		 je	 SHORT $LN13@DarkWizard
  00080	b8 c0 01 00 00	 mov	 eax, 448		; 000001c0H
  00085	eb 1b		 jmp	 SHORT $LN10@DarkWizard
$LN13@DarkWizard:

; 324  : 	else if(gObjGetMagicSearch( lpObj, 449) != NULL) SearchSkill = 449;

  00087	68 c1 01 00 00	 push	 449			; 000001c1H
  0008c	57		 push	 edi
  0008d	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00092	83 c4 08	 add	 esp, 8
  00095	85 c0		 test	 eax, eax
  00097	0f 84 fa 00 00
	00		 je	 $LN11@DarkWizard
  0009d	b8 c1 01 00 00	 mov	 eax, 449		; 000001c1H
$LN10@DarkWizard:
  000a2	53		 push	 ebx

; 325  : 	else return;
; 326  : 
; 327  : 	lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  000a3	50		 push	 eax
  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000aa	8b d8		 mov	 ebx, eax
  000ac	83 c4 08	 add	 esp, 8

; 328  : 	if(lpMagic==NULL) return;

  000af	85 db		 test	 ebx, ebx
  000b1	0f 84 df 00 00
	00		 je	 $LN27@DarkWizard

; 329  : 
; 330  : 	gObjUseSkill.UseSkill(lpObj->m_Index, lpMagic,lpObj->X, lpObj->Y,0,0,-1);

  000b7	0f b6 87 46 01
	00 00		 movzx	 eax, BYTE PTR [edi+326]
  000be	0f b6 8f 44 01
	00 00		 movzx	 ecx, BYTE PTR [edi+324]
  000c5	8b 17		 mov	 edx, DWORD PTR [edi]
  000c7	6a ff		 push	 -1
  000c9	6a 00		 push	 0
  000cb	6a 00		 push	 0
  000cd	50		 push	 eax
  000ce	51		 push	 ecx
  000cf	53		 push	 ebx
  000d0	52		 push	 edx
  000d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  000d6	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z ; CObjUseSkill::UseSkill
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e0	8d 8f ac 08 00
	00		 lea	 ecx, DWORD PTR [edi+2220]
  000e6	89 4d 08	 mov	 DWORD PTR tv338[ebp], ecx
  000e9	c7 45 fc 4b 00
	00 00		 mov	 DWORD PTR tv161[ebp], 75 ; 0000004bH
  000f0	56		 push	 esi
$LL8@DarkWizard:

; 336  : 	{
; 337  : 		tObjNum = lpObj->VpPlayer2[n].number;
; 338  : 		if(lpObj->VpPlayer2[n].state == 0) continue;

  000f1	80 39 00	 cmp	 BYTE PTR [ecx], 0
  000f4	0f bf 71 02	 movsx	 esi, WORD PTR [ecx+2]
  000f8	0f 84 7a 00 00
	00		 je	 $LN7@DarkWizard

; 339  : 		if ( tObjNum >= 0 )

  000fe	85 f6		 test	 esi, esi
  00100	78 76		 js	 SHORT $LN7@DarkWizard

; 340  : 		{
; 341  : 			if ( gObj[tObjNum].Type == OBJ_MONSTER )

  00102	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00108	66 83 7c 06 68
	02		 cmp	 WORD PTR [esi+eax+104], 2
  0010e	75 68		 jne	 SHORT $LN7@DarkWizard

; 342  : 			{
; 343  : 				attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 344  : 				if ( (attr&1) != 1 )

  00110	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  00118	0f bf 94 06 44
	01 00 00	 movsx	 edx, WORD PTR [esi+eax+324]
  00120	51		 push	 ecx
  00121	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  00129	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  0012f	52		 push	 edx
  00130	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00136	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  0013b	a8 01		 test	 al, 1
  0013d	75 34		 jne	 SHORT $LN26@DarkWizard

; 345  : 				{
; 346  : 					dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00144	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00147	51		 push	 ecx
  00148	57		 push	 edi
  00149	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0014e	83 c4 08	 add	 esp, 8

; 347  : 					if(6 >= dis)

  00151	83 f8 06	 cmp	 eax, 6
  00154	7f 1d		 jg	 SHORT $LN26@DarkWizard

; 348  : 					{
; 349  : 						gObjAttack(lpObj, &gObj[tObjNum], lpMagic, FALSE, 1, 0, FALSE,0,0);

  00156	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0015c	6a 00		 push	 0
  0015e	6a 00		 push	 0
  00160	6a 00		 push	 0
  00162	6a 00		 push	 0
  00164	6a 01		 push	 1
  00166	6a 00		 push	 0
  00168	53		 push	 ebx
  00169	56		 push	 esi
  0016a	57		 push	 edi
  0016b	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  00170	83 c4 24	 add	 esp, 36			; 00000024H
$LN26@DarkWizard:
  00173	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN7@DarkWizard:

; 331  : 
; 332  : 	int dis;
; 333  : 	int tObjNum;
; 334  : 	BYTE attr;
; 335  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  00178	8b 4d 08	 mov	 ecx, DWORD PTR tv338[ebp]
  0017b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0017e	ff 4d fc	 dec	 DWORD PTR tv161[ebp]
  00181	89 4d 08	 mov	 DWORD PTR tv338[ebp], ecx
  00184	0f 85 67 ff ff
	ff		 jne	 $LL8@DarkWizard

; 350  : 					}
; 351  : 				}
; 352  : 			}
; 353  : 		}
; 354  : 	}
; 355  : 
; 356  : 	this->UseMana(lpObj->m_Index);

  0018a	8b 07		 mov	 eax, DWORD PTR [edi]
  0018c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
  00195	5e		 pop	 esi
$LN27@DarkWizard:
  00196	5b		 pop	 ebx
$LN11@DarkWizard:
  00197	5f		 pop	 edi

; 357  : }

  00198	8b e5		 mov	 esp, ebp
  0019a	5d		 pop	 ebp
  0019b	c2 04 00	 ret	 4
?DarkWizardOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::DarkWizardOff
_TEXT	ENDS
PUBLIC	?DarkKnightOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z	; cOffExp::DarkKnightOff
; Function compile flags: /Ogtp
;	COMDAT ?DarkKnightOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv161 = -4						; size = 4
tv338 = 8						; size = 4
_lpObj$ = 8						; size = 4
?DarkKnightOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::DarkKnightOff, COMDAT
; _this$ = ecx

; 362  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi

; 363  : 	int SearchSkill = 0;
; 364  : 	CMagicInf * lpMagic;
; 365  : 
; 366  : 	if(gObjGetMagicSearch( lpObj, 41) != NULL) SearchSkill = 41;

  00007	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000a	6a 29		 push	 41			; 00000029H
  0000c	57		 push	 edi
  0000d	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00010	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00015	83 c4 08	 add	 esp, 8
  00018	85 c0		 test	 eax, eax
  0001a	74 07		 je	 SHORT $LN21@DarkKnight
  0001c	b8 29 00 00 00	 mov	 eax, 41			; 00000029H
  00021	eb 7f		 jmp	 SHORT $LN10@DarkKnight
$LN21@DarkKnight:

; 367  : 	else if(gObjGetMagicSearch( lpObj, 455) != NULL) SearchSkill = 455;

  00023	68 c7 01 00 00	 push	 455			; 000001c7H
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0002e	83 c4 08	 add	 esp, 8
  00031	85 c0		 test	 eax, eax
  00033	74 07		 je	 SHORT $LN19@DarkKnight
  00035	b8 c7 01 00 00	 mov	 eax, 455		; 000001c7H
  0003a	eb 66		 jmp	 SHORT $LN10@DarkKnight
$LN19@DarkKnight:

; 368  : 	else if(gObjGetMagicSearch( lpObj, 456) != NULL) SearchSkill = 456;

  0003c	68 c8 01 00 00	 push	 456			; 000001c8H
  00041	57		 push	 edi
  00042	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00047	83 c4 08	 add	 esp, 8
  0004a	85 c0		 test	 eax, eax
  0004c	74 07		 je	 SHORT $LN17@DarkKnight
  0004e	b8 c8 01 00 00	 mov	 eax, 456		; 000001c8H
  00053	eb 4d		 jmp	 SHORT $LN10@DarkKnight
$LN17@DarkKnight:

; 369  : 	else if(gObjGetMagicSearch( lpObj, 457) != NULL) SearchSkill = 457;

  00055	68 c9 01 00 00	 push	 457			; 000001c9H
  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00060	83 c4 08	 add	 esp, 8
  00063	85 c0		 test	 eax, eax
  00065	74 07		 je	 SHORT $LN15@DarkKnight
  00067	b8 c9 01 00 00	 mov	 eax, 457		; 000001c9H
  0006c	eb 34		 jmp	 SHORT $LN10@DarkKnight
$LN15@DarkKnight:

; 370  : 	else if(gObjGetMagicSearch( lpObj, 458) != NULL) SearchSkill = 458;

  0006e	68 ca 01 00 00	 push	 458			; 000001caH
  00073	57		 push	 edi
  00074	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00079	83 c4 08	 add	 esp, 8
  0007c	85 c0		 test	 eax, eax
  0007e	74 07		 je	 SHORT $LN13@DarkKnight
  00080	b8 ca 01 00 00	 mov	 eax, 458		; 000001caH
  00085	eb 1b		 jmp	 SHORT $LN10@DarkKnight
$LN13@DarkKnight:

; 371  : 	else if(gObjGetMagicSearch( lpObj, 459) != NULL) SearchSkill = 459;

  00087	68 cb 01 00 00	 push	 459			; 000001cbH
  0008c	57		 push	 edi
  0008d	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00092	83 c4 08	 add	 esp, 8
  00095	85 c0		 test	 eax, eax
  00097	0f 84 fa 00 00
	00		 je	 $LN11@DarkKnight
  0009d	b8 cb 01 00 00	 mov	 eax, 459		; 000001cbH
$LN10@DarkKnight:
  000a2	53		 push	 ebx

; 372  : 	else return;
; 373  : 
; 374  : 	lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  000a3	50		 push	 eax
  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000aa	8b d8		 mov	 ebx, eax
  000ac	83 c4 08	 add	 esp, 8

; 375  : 	if(lpMagic==NULL) return;

  000af	85 db		 test	 ebx, ebx
  000b1	0f 84 df 00 00
	00		 je	 $LN27@DarkKnight

; 376  : 
; 377  : 	gObjUseSkill.UseSkill(lpObj->m_Index, lpMagic,lpObj->X, lpObj->Y,0,0,-1);

  000b7	0f b6 87 46 01
	00 00		 movzx	 eax, BYTE PTR [edi+326]
  000be	0f b6 8f 44 01
	00 00		 movzx	 ecx, BYTE PTR [edi+324]
  000c5	8b 17		 mov	 edx, DWORD PTR [edi]
  000c7	6a ff		 push	 -1
  000c9	6a 00		 push	 0
  000cb	6a 00		 push	 0
  000cd	50		 push	 eax
  000ce	51		 push	 ecx
  000cf	53		 push	 ebx
  000d0	52		 push	 edx
  000d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  000d6	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z ; CObjUseSkill::UseSkill
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e0	8d 8f ac 08 00
	00		 lea	 ecx, DWORD PTR [edi+2220]
  000e6	89 4d 08	 mov	 DWORD PTR tv338[ebp], ecx
  000e9	c7 45 fc 4b 00
	00 00		 mov	 DWORD PTR tv161[ebp], 75 ; 0000004bH
  000f0	56		 push	 esi
$LL8@DarkKnight:

; 383  : 	{
; 384  : 		tObjNum = lpObj->VpPlayer2[n].number;
; 385  : 		if(lpObj->VpPlayer2[n].state == 0) continue;

  000f1	80 39 00	 cmp	 BYTE PTR [ecx], 0
  000f4	0f bf 71 02	 movsx	 esi, WORD PTR [ecx+2]
  000f8	0f 84 7a 00 00
	00		 je	 $LN7@DarkKnight

; 386  : 		if ( tObjNum >= 0 )

  000fe	85 f6		 test	 esi, esi
  00100	78 76		 js	 SHORT $LN7@DarkKnight

; 387  : 		{
; 388  : 			if ( gObj[tObjNum].Type == OBJ_MONSTER )

  00102	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00108	66 83 7c 06 68
	02		 cmp	 WORD PTR [esi+eax+104], 2
  0010e	75 68		 jne	 SHORT $LN7@DarkKnight

; 389  : 			{
; 390  : 				attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 391  : 				if ( (attr&1) != 1 )

  00110	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  00118	0f bf 94 06 44
	01 00 00	 movsx	 edx, WORD PTR [esi+eax+324]
  00120	51		 push	 ecx
  00121	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  00129	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  0012f	52		 push	 edx
  00130	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00136	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  0013b	a8 01		 test	 al, 1
  0013d	75 34		 jne	 SHORT $LN26@DarkKnight

; 392  : 				{
; 393  : 					dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00144	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00147	51		 push	 ecx
  00148	57		 push	 edi
  00149	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0014e	83 c4 08	 add	 esp, 8

; 394  : 					if(2 >= dis)

  00151	83 f8 02	 cmp	 eax, 2
  00154	7f 1d		 jg	 SHORT $LN26@DarkKnight

; 395  : 					{
; 396  : 						gObjAttack(lpObj, &gObj[tObjNum], lpMagic, FALSE, 1, 0, FALSE,0,0);

  00156	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0015c	6a 00		 push	 0
  0015e	6a 00		 push	 0
  00160	6a 00		 push	 0
  00162	6a 00		 push	 0
  00164	6a 01		 push	 1
  00166	6a 00		 push	 0
  00168	53		 push	 ebx
  00169	56		 push	 esi
  0016a	57		 push	 edi
  0016b	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  00170	83 c4 24	 add	 esp, 36			; 00000024H
$LN26@DarkKnight:
  00173	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN7@DarkKnight:

; 378  : 
; 379  : 	int dis;
; 380  : 	int tObjNum;
; 381  : 	BYTE attr;
; 382  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  00178	8b 4d 08	 mov	 ecx, DWORD PTR tv338[ebp]
  0017b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0017e	ff 4d fc	 dec	 DWORD PTR tv161[ebp]
  00181	89 4d 08	 mov	 DWORD PTR tv338[ebp], ecx
  00184	0f 85 67 ff ff
	ff		 jne	 $LL8@DarkKnight

; 397  : 					}
; 398  : 				}
; 399  : 			}
; 400  : 		}
; 401  : 	}
; 402  : 
; 403  : 	this->UseMana(lpObj->m_Index);

  0018a	8b 07		 mov	 eax, DWORD PTR [edi]
  0018c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
  00195	5e		 pop	 esi
$LN27@DarkKnight:
  00196	5b		 pop	 ebx
$LN11@DarkKnight:
  00197	5f		 pop	 edi

; 404  : }

  00198	8b e5		 mov	 esp, ebp
  0019a	5d		 pop	 ebp
  0019b	c2 04 00	 ret	 4
?DarkKnightOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::DarkKnightOff
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?FairyElfOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z	; cOffExp::FairyElfOff
EXTRN	?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z:PROC ; CObjUseSkill::UseSkill
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?FairyElfOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpMagic$ = -56						; size = 4
_this$ = -52						; size = 4
tv495 = -48						; size = 4
tv489 = -48						; size = 4
_time$ = -44						; size = 16
_NumDir$212088 = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?FairyElfOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::FairyElfOff, COMDAT
; _this$ = ecx

; 409  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00015	57		 push	 edi

; 410  : 	int SearchSkill = 0;
; 411  : 	int dis;
; 412  : 	int tObjNum;
; 413  : 	BYTE attr;
; 414  : 
; 415  : 	CMagicInf * lpMagic;
; 416  : 
; 417  : 	//Buff
; 418  : 	SYSTEMTIME time;
; 419  : 	GetLocalTime(&time);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _time$[ebp]
  00019	50		 push	 eax
  0001a	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 420  : 	if( time.wSecond == 0  || 
; 421  : 	    time.wSecond == 10 ||
; 422  : 	    time.wSecond == 20 ||
; 423  : 	    time.wSecond == 30 ||
; 424  : 	    time.wSecond == 40 ||
; 425  : 	    time.wSecond == 50 )

  00023	66 8b 45 e0	 mov	 ax, WORD PTR _time$[ebp+12]
  00027	66 85 c0	 test	 ax, ax
  0002a	74 22		 je	 SHORT $LN105@FairyElfOf
  0002c	66 83 f8 0a	 cmp	 ax, 10			; 0000000aH
  00030	74 1c		 je	 SHORT $LN105@FairyElfOf
  00032	66 83 f8 14	 cmp	 ax, 20			; 00000014H
  00036	74 16		 je	 SHORT $LN105@FairyElfOf
  00038	66 83 f8 1e	 cmp	 ax, 30			; 0000001eH
  0003c	74 10		 je	 SHORT $LN105@FairyElfOf
  0003e	66 83 f8 28	 cmp	 ax, 40			; 00000028H
  00042	74 0a		 je	 SHORT $LN105@FairyElfOf
  00044	66 83 f8 32	 cmp	 ax, 50			; 00000032H
  00048	0f 85 8c 04 00
	00		 jne	 $LN13@FairyElfOf
$LN105@FairyElfOf:

; 426  : 	{
; 427  : 		int partynum = -1;
; 428  : 		int partycount;
; 429  : 		int number;
; 430  : 
; 431  : 		LPOBJ lpPartyObj;
; 432  : 
; 433  : 		partynum = lpObj->PartyNumber;

  0004e	8b 86 2c 04 00
	00		 mov	 eax, DWORD PTR [esi+1068]

; 434  : 
; 435  : 		if(partynum != -1)

  00054	83 f8 ff	 cmp	 eax, -1
  00057	0f 84 73 02 00
	00		 je	 $LN104@FairyElfOf

; 436  : 		{
; 437  : 			partycount = gParty.m_PartyS[partynum].Count;
; 438  : 
; 439  : 			for(int j = 0; j < MAX_USER_IN_PARTY; j++)

  0005d	6b c0 68	 imul	 eax, 104		; 00000068H
  00060	05 0c 00 00 00	 add	 eax, OFFSET ?gParty@@3VPartyClass@@A+12
  00065	8b d8		 mov	 ebx, eax
  00067	c7 45 d0 0a 00
	00 00		 mov	 DWORD PTR tv489[ebp], 10 ; 0000000aH
  0006e	8b ff		 npad	 2
$LL103@FairyElfOf:

; 440  : 			{
; 441  : 				number = gParty.m_PartyS[partynum].Number[j];

  00070	8b 03		 mov	 eax, DWORD PTR [ebx]

; 442  : 
; 443  : 				if(number >= 0)

  00072	85 c0		 test	 eax, eax
  00074	0f 88 45 02 00
	00		 js	 $LN102@FairyElfOf

; 444  : 				{
; 445  : 					lpPartyObj = &gObj[number];

  0007a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00080	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 446  : 
; 447  : 					if(lpObj->MapNumber == lpPartyObj->MapNumber)

  00086	8a 96 49 01 00
	00		 mov	 dl, BYTE PTR [esi+329]
  0008c	3a 94 08 49 01
	00 00		 cmp	 dl, BYTE PTR [eax+ecx+329]
  00093	8d 3c 08	 lea	 edi, DWORD PTR [eax+ecx]
  00096	0f 85 23 02 00
	00		 jne	 $LN102@FairyElfOf

; 448  : 					{
; 449  : 						dis = gObjCalDistance(lpObj,&gObj[number]);

  0009c	57		 push	 edi
  0009d	56		 push	 esi
  0009e	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  000a3	83 c4 08	 add	 esp, 8

; 450  : 
; 451  : 						if(dis < 6)

  000a6	83 f8 06	 cmp	 eax, 6
  000a9	0f 8d 10 02 00
	00		 jge	 $LN102@FairyElfOf

; 452  : 						{
; 453  : 							////Defence Baf
; 454  : 							//lpMagic = gObjGetMagicSearch( lpObj, 27);
; 455  : 							//if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpPartyObj->m_Index, lpMagic);
; 456  : 							////Damage Baf
; 457  : 							//lpMagic = gObjGetMagicSearch( lpObj, 28);
; 458  : 							//if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpPartyObj->m_Index, lpMagic);
; 459  : 							////Heal Baf
; 460  : 							//lpMagic = gObjGetMagicSearch( lpObj, 26);
; 461  : 							//if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpPartyObj->m_Index, lpMagic);
; 462  : 							//Defence Baf
; 463  : 							if(gObjGetMagicSearch( lpObj, 27) != NULL) SearchSkill = 27;

  000af	6a 1b		 push	 27			; 0000001bH
  000b1	56		 push	 esi
  000b2	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000b7	83 c4 08	 add	 esp, 8
  000ba	85 c0		 test	 eax, eax
  000bc	74 07		 je	 SHORT $LN97@FairyElfOf
  000be	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH
  000c3	eb 7b		 jmp	 SHORT $LN113@FairyElfOf
$LN97@FairyElfOf:

; 464  : 							else if(gObjGetMagicSearch( lpObj, 480) != NULL) SearchSkill = 480;

  000c5	68 e0 01 00 00	 push	 480			; 000001e0H
  000ca	56		 push	 esi
  000cb	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000d0	83 c4 08	 add	 esp, 8
  000d3	85 c0		 test	 eax, eax
  000d5	74 07		 je	 SHORT $LN95@FairyElfOf
  000d7	b8 e0 01 00 00	 mov	 eax, 480		; 000001e0H
  000dc	eb 62		 jmp	 SHORT $LN113@FairyElfOf
$LN95@FairyElfOf:

; 465  : 							else if(gObjGetMagicSearch( lpObj, 481) != NULL) SearchSkill = 481;

  000de	68 e1 01 00 00	 push	 481			; 000001e1H
  000e3	56		 push	 esi
  000e4	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000e9	83 c4 08	 add	 esp, 8
  000ec	85 c0		 test	 eax, eax
  000ee	74 07		 je	 SHORT $LN93@FairyElfOf
  000f0	b8 e1 01 00 00	 mov	 eax, 481		; 000001e1H
  000f5	eb 49		 jmp	 SHORT $LN113@FairyElfOf
$LN93@FairyElfOf:

; 466  : 							else if(gObjGetMagicSearch( lpObj, 482) != NULL) SearchSkill = 482;

  000f7	68 e2 01 00 00	 push	 482			; 000001e2H
  000fc	56		 push	 esi
  000fd	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00102	83 c4 08	 add	 esp, 8
  00105	85 c0		 test	 eax, eax
  00107	74 07		 je	 SHORT $LN91@FairyElfOf
  00109	b8 e2 01 00 00	 mov	 eax, 482		; 000001e2H
  0010e	eb 30		 jmp	 SHORT $LN113@FairyElfOf
$LN91@FairyElfOf:

; 467  : 							else if(gObjGetMagicSearch( lpObj, 483) != NULL) SearchSkill = 483;

  00110	68 e3 01 00 00	 push	 483			; 000001e3H
  00115	56		 push	 esi
  00116	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0011b	83 c4 08	 add	 esp, 8
  0011e	85 c0		 test	 eax, eax
  00120	74 07		 je	 SHORT $LN89@FairyElfOf
  00122	b8 e3 01 00 00	 mov	 eax, 483		; 000001e3H
  00127	eb 17		 jmp	 SHORT $LN113@FairyElfOf
$LN89@FairyElfOf:

; 468  : 							else if(gObjGetMagicSearch( lpObj, 484) != NULL) SearchSkill = 484;

  00129	68 e4 01 00 00	 push	 484			; 000001e4H
  0012e	56		 push	 esi
  0012f	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00134	83 c4 08	 add	 esp, 8
  00137	85 c0		 test	 eax, eax
  00139	74 24		 je	 SHORT $LN84@FairyElfOf
  0013b	b8 e4 01 00 00	 mov	 eax, 484		; 000001e4H
$LN113@FairyElfOf:

; 469  : 							else SearchSkill = 0;
; 470  : 							if(SearchSkill != 0)
; 471  : 							{
; 472  : 								lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  00140	50		 push	 eax
  00141	56		 push	 esi
  00142	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00147	83 c4 08	 add	 esp, 8

; 473  : 								if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpPartyObj->m_Index, lpMagic);

  0014a	85 c0		 test	 eax, eax
  0014c	74 11		 je	 SHORT $LN84@FairyElfOf
  0014e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00150	50		 push	 eax
  00151	8b 07		 mov	 eax, DWORD PTR [edi]
  00153	50		 push	 eax
  00154	51		 push	 ecx
  00155	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  0015a	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill
$LN84@FairyElfOf:

; 474  : 							}
; 475  : 							//Damage Baf
; 476  : 							if(gObjGetMagicSearch( lpObj, 28) != NULL) SearchSkill = 28;

  0015f	6a 1c		 push	 28			; 0000001cH
  00161	56		 push	 esi
  00162	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00167	83 c4 08	 add	 esp, 8
  0016a	85 c0		 test	 eax, eax
  0016c	74 07		 je	 SHORT $LN83@FairyElfOf
  0016e	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
  00173	eb 7b		 jmp	 SHORT $LN114@FairyElfOf
$LN83@FairyElfOf:

; 477  : 							else if(gObjGetMagicSearch( lpObj, 485) != NULL) SearchSkill = 485;

  00175	68 e5 01 00 00	 push	 485			; 000001e5H
  0017a	56		 push	 esi
  0017b	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00180	83 c4 08	 add	 esp, 8
  00183	85 c0		 test	 eax, eax
  00185	74 07		 je	 SHORT $LN81@FairyElfOf
  00187	b8 e5 01 00 00	 mov	 eax, 485		; 000001e5H
  0018c	eb 62		 jmp	 SHORT $LN114@FairyElfOf
$LN81@FairyElfOf:

; 478  : 							else if(gObjGetMagicSearch( lpObj, 486) != NULL) SearchSkill = 486;

  0018e	68 e6 01 00 00	 push	 486			; 000001e6H
  00193	56		 push	 esi
  00194	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00199	83 c4 08	 add	 esp, 8
  0019c	85 c0		 test	 eax, eax
  0019e	74 07		 je	 SHORT $LN79@FairyElfOf
  001a0	b8 e6 01 00 00	 mov	 eax, 486		; 000001e6H
  001a5	eb 49		 jmp	 SHORT $LN114@FairyElfOf
$LN79@FairyElfOf:

; 479  : 							else if(gObjGetMagicSearch( lpObj, 487) != NULL) SearchSkill = 487;

  001a7	68 e7 01 00 00	 push	 487			; 000001e7H
  001ac	56		 push	 esi
  001ad	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  001b2	83 c4 08	 add	 esp, 8
  001b5	85 c0		 test	 eax, eax
  001b7	74 07		 je	 SHORT $LN77@FairyElfOf
  001b9	b8 e7 01 00 00	 mov	 eax, 487		; 000001e7H
  001be	eb 30		 jmp	 SHORT $LN114@FairyElfOf
$LN77@FairyElfOf:

; 480  : 							else if(gObjGetMagicSearch( lpObj, 488) != NULL) SearchSkill = 488;

  001c0	68 e8 01 00 00	 push	 488			; 000001e8H
  001c5	56		 push	 esi
  001c6	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  001cb	83 c4 08	 add	 esp, 8
  001ce	85 c0		 test	 eax, eax
  001d0	74 07		 je	 SHORT $LN75@FairyElfOf
  001d2	b8 e8 01 00 00	 mov	 eax, 488		; 000001e8H
  001d7	eb 17		 jmp	 SHORT $LN114@FairyElfOf
$LN75@FairyElfOf:

; 481  : 							else if(gObjGetMagicSearch( lpObj, 489) != NULL) SearchSkill = 489;

  001d9	68 e9 01 00 00	 push	 489			; 000001e9H
  001de	56		 push	 esi
  001df	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  001e4	83 c4 08	 add	 esp, 8
  001e7	85 c0		 test	 eax, eax
  001e9	74 24		 je	 SHORT $LN70@FairyElfOf
  001eb	b8 e9 01 00 00	 mov	 eax, 489		; 000001e9H
$LN114@FairyElfOf:

; 482  : 							else SearchSkill = 0;
; 483  : 							if(SearchSkill != 0)
; 484  : 							{
; 485  : 								lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  001f0	50		 push	 eax
  001f1	56		 push	 esi
  001f2	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  001f7	83 c4 08	 add	 esp, 8

; 486  : 								if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpPartyObj->m_Index, lpMagic);

  001fa	85 c0		 test	 eax, eax
  001fc	74 11		 je	 SHORT $LN70@FairyElfOf
  001fe	8b 17		 mov	 edx, DWORD PTR [edi]
  00200	50		 push	 eax
  00201	8b 06		 mov	 eax, DWORD PTR [esi]
  00203	52		 push	 edx
  00204	50		 push	 eax
  00205	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  0020a	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill
$LN70@FairyElfOf:

; 487  : 							}
; 488  : 							//Heal Baf
; 489  : 							if(gObjGetMagicSearch( lpObj, 26) != NULL) SearchSkill = 26;

  0020f	6a 1a		 push	 26			; 0000001aH
  00211	56		 push	 esi
  00212	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00217	83 c4 08	 add	 esp, 8
  0021a	85 c0		 test	 eax, eax
  0021c	74 07		 je	 SHORT $LN69@FairyElfOf
  0021e	b8 1a 00 00 00	 mov	 eax, 26			; 0000001aH
  00223	eb 7b		 jmp	 SHORT $LN115@FairyElfOf
$LN69@FairyElfOf:

; 490  : 							else if(gObjGetMagicSearch( lpObj, 475) != NULL) SearchSkill = 475;

  00225	68 db 01 00 00	 push	 475			; 000001dbH
  0022a	56		 push	 esi
  0022b	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00230	83 c4 08	 add	 esp, 8
  00233	85 c0		 test	 eax, eax
  00235	74 07		 je	 SHORT $LN67@FairyElfOf
  00237	b8 db 01 00 00	 mov	 eax, 475		; 000001dbH
  0023c	eb 62		 jmp	 SHORT $LN115@FairyElfOf
$LN67@FairyElfOf:

; 491  : 							else if(gObjGetMagicSearch( lpObj, 476) != NULL) SearchSkill = 476;

  0023e	68 dc 01 00 00	 push	 476			; 000001dcH
  00243	56		 push	 esi
  00244	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00249	83 c4 08	 add	 esp, 8
  0024c	85 c0		 test	 eax, eax
  0024e	74 07		 je	 SHORT $LN65@FairyElfOf
  00250	b8 dc 01 00 00	 mov	 eax, 476		; 000001dcH
  00255	eb 49		 jmp	 SHORT $LN115@FairyElfOf
$LN65@FairyElfOf:

; 492  : 							else if(gObjGetMagicSearch( lpObj, 477) != NULL) SearchSkill = 477;

  00257	68 dd 01 00 00	 push	 477			; 000001ddH
  0025c	56		 push	 esi
  0025d	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00262	83 c4 08	 add	 esp, 8
  00265	85 c0		 test	 eax, eax
  00267	74 07		 je	 SHORT $LN63@FairyElfOf
  00269	b8 dd 01 00 00	 mov	 eax, 477		; 000001ddH
  0026e	eb 30		 jmp	 SHORT $LN115@FairyElfOf
$LN63@FairyElfOf:

; 493  : 							else if(gObjGetMagicSearch( lpObj, 478) != NULL) SearchSkill = 478;

  00270	68 de 01 00 00	 push	 478			; 000001deH
  00275	56		 push	 esi
  00276	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0027b	83 c4 08	 add	 esp, 8
  0027e	85 c0		 test	 eax, eax
  00280	74 07		 je	 SHORT $LN61@FairyElfOf
  00282	b8 de 01 00 00	 mov	 eax, 478		; 000001deH
  00287	eb 17		 jmp	 SHORT $LN115@FairyElfOf
$LN61@FairyElfOf:

; 494  : 							else if(gObjGetMagicSearch( lpObj, 479) != NULL) SearchSkill = 479;

  00289	68 df 01 00 00	 push	 479			; 000001dfH
  0028e	56		 push	 esi
  0028f	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00294	83 c4 08	 add	 esp, 8
  00297	85 c0		 test	 eax, eax
  00299	74 24		 je	 SHORT $LN102@FairyElfOf
  0029b	b8 df 01 00 00	 mov	 eax, 479		; 000001dfH
$LN115@FairyElfOf:

; 495  : 							else SearchSkill = 0;
; 496  : 							if(SearchSkill != 0)
; 497  : 							{
; 498  : 								lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  002a0	50		 push	 eax
  002a1	56		 push	 esi
  002a2	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  002a7	83 c4 08	 add	 esp, 8

; 499  : 								if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpPartyObj->m_Index, lpMagic);

  002aa	85 c0		 test	 eax, eax
  002ac	74 11		 je	 SHORT $LN102@FairyElfOf
  002ae	8b 0f		 mov	 ecx, DWORD PTR [edi]
  002b0	8b 16		 mov	 edx, DWORD PTR [esi]
  002b2	50		 push	 eax
  002b3	51		 push	 ecx
  002b4	52		 push	 edx
  002b5	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  002ba	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill
$LN102@FairyElfOf:

; 436  : 		{
; 437  : 			partycount = gParty.m_PartyS[partynum].Count;
; 438  : 
; 439  : 			for(int j = 0; j < MAX_USER_IN_PARTY; j++)

  002bf	83 c3 04	 add	 ebx, 4
  002c2	ff 4d d0	 dec	 DWORD PTR tv489[ebp]
  002c5	0f 85 a5 fd ff
	ff		 jne	 $LL103@FairyElfOf

; 500  : 							}
; 501  : 						}
; 502  : 					}
; 503  : 				}
; 504  : 			}
; 505  : 		}
; 506  : 		else

  002cb	e9 0a 02 00 00	 jmp	 $LN13@FairyElfOf
$LN104@FairyElfOf:

; 507  : 		{
; 508  : 			//Defence Baf
; 509  : 			if(gObjGetMagicSearch( lpObj, 27) != NULL) SearchSkill = 27;

  002d0	6a 1b		 push	 27			; 0000001bH
  002d2	56		 push	 esi
  002d3	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  002d8	83 c4 08	 add	 esp, 8
  002db	85 c0		 test	 eax, eax
  002dd	74 07		 je	 SHORT $LN54@FairyElfOf
  002df	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH
  002e4	eb 7b		 jmp	 SHORT $LN116@FairyElfOf
$LN54@FairyElfOf:

; 510  : 			else if(gObjGetMagicSearch( lpObj, 480) != NULL) SearchSkill = 480;

  002e6	68 e0 01 00 00	 push	 480			; 000001e0H
  002eb	56		 push	 esi
  002ec	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  002f1	83 c4 08	 add	 esp, 8
  002f4	85 c0		 test	 eax, eax
  002f6	74 07		 je	 SHORT $LN52@FairyElfOf
  002f8	b8 e0 01 00 00	 mov	 eax, 480		; 000001e0H
  002fd	eb 62		 jmp	 SHORT $LN116@FairyElfOf
$LN52@FairyElfOf:

; 511  : 			else if(gObjGetMagicSearch( lpObj, 481) != NULL) SearchSkill = 481;

  002ff	68 e1 01 00 00	 push	 481			; 000001e1H
  00304	56		 push	 esi
  00305	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0030a	83 c4 08	 add	 esp, 8
  0030d	85 c0		 test	 eax, eax
  0030f	74 07		 je	 SHORT $LN50@FairyElfOf
  00311	b8 e1 01 00 00	 mov	 eax, 481		; 000001e1H
  00316	eb 49		 jmp	 SHORT $LN116@FairyElfOf
$LN50@FairyElfOf:

; 512  : 			else if(gObjGetMagicSearch( lpObj, 482) != NULL) SearchSkill = 482;

  00318	68 e2 01 00 00	 push	 482			; 000001e2H
  0031d	56		 push	 esi
  0031e	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00323	83 c4 08	 add	 esp, 8
  00326	85 c0		 test	 eax, eax
  00328	74 07		 je	 SHORT $LN48@FairyElfOf
  0032a	b8 e2 01 00 00	 mov	 eax, 482		; 000001e2H
  0032f	eb 30		 jmp	 SHORT $LN116@FairyElfOf
$LN48@FairyElfOf:

; 513  : 			else if(gObjGetMagicSearch( lpObj, 483) != NULL) SearchSkill = 483;

  00331	68 e3 01 00 00	 push	 483			; 000001e3H
  00336	56		 push	 esi
  00337	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0033c	83 c4 08	 add	 esp, 8
  0033f	85 c0		 test	 eax, eax
  00341	74 07		 je	 SHORT $LN46@FairyElfOf
  00343	b8 e3 01 00 00	 mov	 eax, 483		; 000001e3H
  00348	eb 17		 jmp	 SHORT $LN116@FairyElfOf
$LN46@FairyElfOf:

; 514  : 			else if(gObjGetMagicSearch( lpObj, 484) != NULL) SearchSkill = 484;

  0034a	68 e4 01 00 00	 push	 484			; 000001e4H
  0034f	56		 push	 esi
  00350	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00355	83 c4 08	 add	 esp, 8
  00358	85 c0		 test	 eax, eax
  0035a	74 22		 je	 SHORT $LN41@FairyElfOf
  0035c	b8 e4 01 00 00	 mov	 eax, 484		; 000001e4H
$LN116@FairyElfOf:

; 515  : 			else SearchSkill = 0;
; 516  : 			if(SearchSkill != 0)
; 517  : 			{
; 518  : 				lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  00361	50		 push	 eax
  00362	56		 push	 esi
  00363	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00368	83 c4 08	 add	 esp, 8

; 519  : 				if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpObj->m_Index, lpMagic);

  0036b	85 c0		 test	 eax, eax
  0036d	74 0f		 je	 SHORT $LN41@FairyElfOf
  0036f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00371	50		 push	 eax
  00372	51		 push	 ecx
  00373	51		 push	 ecx
  00374	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  00379	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill
$LN41@FairyElfOf:

; 520  : 			}
; 521  : 			//Damage Baf
; 522  : 			if(gObjGetMagicSearch( lpObj, 28) != NULL) SearchSkill = 28;

  0037e	6a 1c		 push	 28			; 0000001cH
  00380	56		 push	 esi
  00381	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00386	83 c4 08	 add	 esp, 8
  00389	85 c0		 test	 eax, eax
  0038b	74 07		 je	 SHORT $LN40@FairyElfOf
  0038d	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
  00392	eb 7b		 jmp	 SHORT $LN117@FairyElfOf
$LN40@FairyElfOf:

; 523  : 			else if(gObjGetMagicSearch( lpObj, 485) != NULL) SearchSkill = 485;

  00394	68 e5 01 00 00	 push	 485			; 000001e5H
  00399	56		 push	 esi
  0039a	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0039f	83 c4 08	 add	 esp, 8
  003a2	85 c0		 test	 eax, eax
  003a4	74 07		 je	 SHORT $LN38@FairyElfOf
  003a6	b8 e5 01 00 00	 mov	 eax, 485		; 000001e5H
  003ab	eb 62		 jmp	 SHORT $LN117@FairyElfOf
$LN38@FairyElfOf:

; 524  : 			else if(gObjGetMagicSearch( lpObj, 486) != NULL) SearchSkill = 486;

  003ad	68 e6 01 00 00	 push	 486			; 000001e6H
  003b2	56		 push	 esi
  003b3	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  003b8	83 c4 08	 add	 esp, 8
  003bb	85 c0		 test	 eax, eax
  003bd	74 07		 je	 SHORT $LN36@FairyElfOf
  003bf	b8 e6 01 00 00	 mov	 eax, 486		; 000001e6H
  003c4	eb 49		 jmp	 SHORT $LN117@FairyElfOf
$LN36@FairyElfOf:

; 525  : 			else if(gObjGetMagicSearch( lpObj, 487) != NULL) SearchSkill = 487;

  003c6	68 e7 01 00 00	 push	 487			; 000001e7H
  003cb	56		 push	 esi
  003cc	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  003d1	83 c4 08	 add	 esp, 8
  003d4	85 c0		 test	 eax, eax
  003d6	74 07		 je	 SHORT $LN34@FairyElfOf
  003d8	b8 e7 01 00 00	 mov	 eax, 487		; 000001e7H
  003dd	eb 30		 jmp	 SHORT $LN117@FairyElfOf
$LN34@FairyElfOf:

; 526  : 			else if(gObjGetMagicSearch( lpObj, 488) != NULL) SearchSkill = 488;

  003df	68 e8 01 00 00	 push	 488			; 000001e8H
  003e4	56		 push	 esi
  003e5	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  003ea	83 c4 08	 add	 esp, 8
  003ed	85 c0		 test	 eax, eax
  003ef	74 07		 je	 SHORT $LN32@FairyElfOf
  003f1	b8 e8 01 00 00	 mov	 eax, 488		; 000001e8H
  003f6	eb 17		 jmp	 SHORT $LN117@FairyElfOf
$LN32@FairyElfOf:

; 527  : 			else if(gObjGetMagicSearch( lpObj, 489) != NULL) SearchSkill = 489;

  003f8	68 e9 01 00 00	 push	 489			; 000001e9H
  003fd	56		 push	 esi
  003fe	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00403	83 c4 08	 add	 esp, 8
  00406	85 c0		 test	 eax, eax
  00408	74 22		 je	 SHORT $LN27@FairyElfOf
  0040a	b8 e9 01 00 00	 mov	 eax, 489		; 000001e9H
$LN117@FairyElfOf:

; 528  : 			else SearchSkill = 0;
; 529  : 			if(SearchSkill != 0)
; 530  : 			{
; 531  : 				lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  0040f	50		 push	 eax
  00410	56		 push	 esi
  00411	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00416	83 c4 08	 add	 esp, 8

; 532  : 				if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpObj->m_Index, lpMagic);

  00419	85 c0		 test	 eax, eax
  0041b	74 0f		 je	 SHORT $LN27@FairyElfOf
  0041d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0041f	50		 push	 eax
  00420	51		 push	 ecx
  00421	51		 push	 ecx
  00422	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  00427	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill
$LN27@FairyElfOf:

; 533  : 			}
; 534  : 			//Heal Baf
; 535  : 			if(gObjGetMagicSearch( lpObj, 26) != NULL) SearchSkill = 26;

  0042c	6a 1a		 push	 26			; 0000001aH
  0042e	56		 push	 esi
  0042f	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00434	83 c4 08	 add	 esp, 8
  00437	85 c0		 test	 eax, eax
  00439	74 07		 je	 SHORT $LN26@FairyElfOf
  0043b	b8 1a 00 00 00	 mov	 eax, 26			; 0000001aH
  00440	eb 7b		 jmp	 SHORT $LN118@FairyElfOf
$LN26@FairyElfOf:

; 536  : 			else if(gObjGetMagicSearch( lpObj, 475) != NULL) SearchSkill = 475;

  00442	68 db 01 00 00	 push	 475			; 000001dbH
  00447	56		 push	 esi
  00448	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0044d	83 c4 08	 add	 esp, 8
  00450	85 c0		 test	 eax, eax
  00452	74 07		 je	 SHORT $LN24@FairyElfOf
  00454	b8 db 01 00 00	 mov	 eax, 475		; 000001dbH
  00459	eb 62		 jmp	 SHORT $LN118@FairyElfOf
$LN24@FairyElfOf:

; 537  : 			else if(gObjGetMagicSearch( lpObj, 476) != NULL) SearchSkill = 476;

  0045b	68 dc 01 00 00	 push	 476			; 000001dcH
  00460	56		 push	 esi
  00461	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00466	83 c4 08	 add	 esp, 8
  00469	85 c0		 test	 eax, eax
  0046b	74 07		 je	 SHORT $LN22@FairyElfOf
  0046d	b8 dc 01 00 00	 mov	 eax, 476		; 000001dcH
  00472	eb 49		 jmp	 SHORT $LN118@FairyElfOf
$LN22@FairyElfOf:

; 538  : 			else if(gObjGetMagicSearch( lpObj, 477) != NULL) SearchSkill = 477;

  00474	68 dd 01 00 00	 push	 477			; 000001ddH
  00479	56		 push	 esi
  0047a	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0047f	83 c4 08	 add	 esp, 8
  00482	85 c0		 test	 eax, eax
  00484	74 07		 je	 SHORT $LN20@FairyElfOf
  00486	b8 dd 01 00 00	 mov	 eax, 477		; 000001ddH
  0048b	eb 30		 jmp	 SHORT $LN118@FairyElfOf
$LN20@FairyElfOf:

; 539  : 			else if(gObjGetMagicSearch( lpObj, 478) != NULL) SearchSkill = 478;

  0048d	68 de 01 00 00	 push	 478			; 000001deH
  00492	56		 push	 esi
  00493	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00498	83 c4 08	 add	 esp, 8
  0049b	85 c0		 test	 eax, eax
  0049d	74 07		 je	 SHORT $LN18@FairyElfOf
  0049f	b8 de 01 00 00	 mov	 eax, 478		; 000001deH
  004a4	eb 17		 jmp	 SHORT $LN118@FairyElfOf
$LN18@FairyElfOf:

; 540  : 			else if(gObjGetMagicSearch( lpObj, 479) != NULL) SearchSkill = 479;

  004a6	68 df 01 00 00	 push	 479			; 000001dfH
  004ab	56		 push	 esi
  004ac	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  004b1	83 c4 08	 add	 esp, 8
  004b4	85 c0		 test	 eax, eax
  004b6	74 22		 je	 SHORT $LN13@FairyElfOf
  004b8	b8 df 01 00 00	 mov	 eax, 479		; 000001dfH
$LN118@FairyElfOf:

; 541  : 			else SearchSkill = 0;
; 542  : 			if(SearchSkill != 0)
; 543  : 			{
; 544  : 				lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  004bd	50		 push	 eax
  004be	56		 push	 esi
  004bf	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  004c4	83 c4 08	 add	 esp, 8

; 545  : 				if(lpMagic!=NULL) gObjUseSkill.UseSkill(lpObj->m_Index, lpObj->m_Index, lpMagic);

  004c7	85 c0		 test	 eax, eax
  004c9	74 0f		 je	 SHORT $LN13@FairyElfOf
  004cb	8b 0e		 mov	 ecx, DWORD PTR [esi]
  004cd	50		 push	 eax
  004ce	51		 push	 ecx
  004cf	51		 push	 ecx
  004d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  004d5	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill
$LN13@FairyElfOf:

; 546  : 			}
; 547  : 		}
; 548  : 	}
; 549  : 
; 550  : 	CItem * Right = &lpObj->pInventory[0];

  004da	8b 86 24 0e 00
	00		 mov	 eax, DWORD PTR [esi+3620]

; 551  : 	CItem * Left  = &lpObj->pInventory[1];
; 552  : 
; 553  : 	if(Right->m_Type >= ITEMGET(4,0) && Right->m_Type <= ITEMGET(4,255) || Left->m_Type >= ITEMGET(4,0) && Left->m_Type <= ITEMGET(4,255))

  004e0	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  004e4	ba 00 08 00 00	 mov	 edx, 2048		; 00000800H
  004e9	66 3b ca	 cmp	 cx, dx
  004ec	7c 0a		 jl	 SHORT $LN10@FairyElfOf
  004ee	ba ff 08 00 00	 mov	 edx, 2303		; 000008ffH
  004f3	66 3b ca	 cmp	 cx, dx
  004f6	7e 23		 jle	 SHORT $LN11@FairyElfOf
$LN10@FairyElfOf:
  004f8	0f b7 80 da 00
	00 00		 movzx	 eax, WORD PTR [eax+218]
  004ff	b9 00 08 00 00	 mov	 ecx, 2048		; 00000800H
  00504	66 3b c1	 cmp	 ax, cx
  00507	0f 8c 2c 01 00
	00		 jl	 $LN6@FairyElfOf
  0050d	ba ff 08 00 00	 mov	 edx, 2303		; 000008ffH
  00512	66 3b c2	 cmp	 ax, dx
  00515	0f 8f 1e 01 00
	00		 jg	 $LN6@FairyElfOf
$LN11@FairyElfOf:

; 554  : 	{
; 555  : 		lpMagic = gObjGetMagicSearch( lpObj, 235);	//Multi-Shot 235

  0051b	68 eb 00 00 00	 push	 235			; 000000ebH
  00520	56		 push	 esi
  00521	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00526	8b f8		 mov	 edi, eax
  00528	83 c4 08	 add	 esp, 8
  0052b	89 7d c8	 mov	 DWORD PTR _lpMagic$[ebp], edi

; 556  : 		if(lpMagic==NULL) return;

  0052e	85 ff		 test	 edi, edi
  00530	0f 84 0e 01 00
	00		 je	 $LN107@FairyElfOf

; 557  : 
; 558  : 		int NumDir[6] = {0, 50, 100, 150, 200, 250 };

  00536	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _NumDir$212088[ebp], 0
  0053d	c7 45 e8 32 00
	00 00		 mov	 DWORD PTR _NumDir$212088[ebp+4], 50 ; 00000032H
  00544	c7 45 ec 64 00
	00 00		 mov	 DWORD PTR _NumDir$212088[ebp+8], 100 ; 00000064H
  0054b	c7 45 f0 96 00
	00 00		 mov	 DWORD PTR _NumDir$212088[ebp+12], 150 ; 00000096H
  00552	c7 45 f4 c8 00
	00 00		 mov	 DWORD PTR _NumDir$212088[ebp+16], 200 ; 000000c8H
  00559	c7 45 f8 fa 00
	00 00		 mov	 DWORD PTR _NumDir$212088[ebp+20], 250 ; 000000faH

; 559  : 		int StartDir = NumDir[rand()%6];

  00560	e8 00 00 00 00	 call	 _rand
  00565	99		 cdq
  00566	b9 06 00 00 00	 mov	 ecx, 6
  0056b	f7 f9		 idiv	 ecx

; 560  : 		gObjUseSkill.UseSkill(lpObj->m_Index, lpMagic,lpObj->X, lpObj->Y,StartDir,0,-1);

  0056d	0f b6 86 44 01
	00 00		 movzx	 eax, BYTE PTR [esi+324]
  00574	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00576	6a ff		 push	 -1
  00578	6a 00		 push	 0
  0057a	8b 54 95 e4	 mov	 edx, DWORD PTR _NumDir$212088[ebp+edx*4]
  0057e	52		 push	 edx
  0057f	0f b6 96 46 01
	00 00		 movzx	 edx, BYTE PTR [esi+326]
  00586	52		 push	 edx
  00587	50		 push	 eax
  00588	57		 push	 edi
  00589	51		 push	 ecx
  0058a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  0058f	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z ; CObjUseSkill::UseSkill
  00594	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00599	8d 9e ac 08 00
	00		 lea	 ebx, DWORD PTR [esi+2220]
  0059f	c7 45 d0 4b 00
	00 00		 mov	 DWORD PTR tv495[ebp], 75 ; 0000004bH
$LL8@FairyElfOf:

; 563  : 		{
; 564  : 			tObjNum = lpObj->VpPlayer2[n].number;
; 565  : 			if(lpObj->VpPlayer2[n].state == 0) continue;

  005a6	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  005a9	0f bf 7b 02	 movsx	 edi, WORD PTR [ebx+2]
  005ad	74 7e		 je	 SHORT $LN7@FairyElfOf

; 566  : 			if ( tObjNum >= 0 )

  005af	85 ff		 test	 edi, edi
  005b1	78 7a		 js	 SHORT $LN7@FairyElfOf

; 567  : 			{
; 568  : 				if ( gObj[tObjNum].Type == OBJ_MONSTER )

  005b3	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  005b9	66 83 7c 07 68
	02		 cmp	 WORD PTR [edi+eax+104], 2
  005bf	75 6c		 jne	 SHORT $LN7@FairyElfOf

; 569  : 				{
; 570  : 					attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 571  : 					if ( (attr&1) != 1 )

  005c1	0f bf 94 07 46
	01 00 00	 movsx	 edx, WORD PTR [edi+eax+326]
  005c9	0f bf 8c 07 44
	01 00 00	 movsx	 ecx, WORD PTR [edi+eax+324]
  005d1	52		 push	 edx
  005d2	51		 push	 ecx
  005d3	0f b6 8c 07 49
	01 00 00	 movzx	 ecx, BYTE PTR [edi+eax+329]
  005db	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  005e1	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  005e7	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  005ec	a8 01		 test	 al, 1
  005ee	75 38		 jne	 SHORT $LN120@FairyElfOf

; 572  : 					{
; 573  : 						dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  005f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005f6	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  005f9	50		 push	 eax
  005fa	56		 push	 esi
  005fb	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  00600	83 c4 08	 add	 esp, 8

; 574  : 						if(5 >= dis)

  00603	83 f8 05	 cmp	 eax, 5
  00606	7f 20		 jg	 SHORT $LN120@FairyElfOf

; 575  : 						{
; 576  : 							gObjAttack(lpObj, &gObj[tObjNum], lpMagic, FALSE, 1, 0, FALSE,0,0);

  00608	8b 4d c8	 mov	 ecx, DWORD PTR _lpMagic$[ebp]
  0060b	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00611	6a 00		 push	 0
  00613	6a 00		 push	 0
  00615	6a 00		 push	 0
  00617	6a 00		 push	 0
  00619	6a 01		 push	 1
  0061b	6a 00		 push	 0
  0061d	51		 push	 ecx
  0061e	57		 push	 edi
  0061f	56		 push	 esi
  00620	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  00625	83 c4 24	 add	 esp, 36			; 00000024H
$LN120@FairyElfOf:
  00628	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN7@FairyElfOf:

; 561  : 
; 562  : 		for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  0062d	83 c3 0c	 add	 ebx, 12			; 0000000cH
  00630	ff 4d d0	 dec	 DWORD PTR tv495[ebp]
  00633	0f 85 6d ff ff
	ff		 jne	 $LL8@FairyElfOf
$LN6@FairyElfOf:

; 577  : 						}
; 578  : 					}
; 579  : 				}
; 580  : 			}
; 581  : 		}
; 582  : 	}
; 583  : 
; 584  : 	this->UseMana(lpObj->m_Index);

  00639	8b 06		 mov	 eax, DWORD PTR [esi]
  0063b	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0063e	50		 push	 eax
  0063f	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
$LN107@FairyElfOf:

; 585  : }

  00644	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00647	5f		 pop	 edi
  00648	5e		 pop	 esi
  00649	33 cd		 xor	 ecx, ebp
  0064b	5b		 pop	 ebx
  0064c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00651	8b e5		 mov	 esp, ebp
  00653	5d		 pop	 ebp
  00654	c2 04 00	 ret	 4
?FairyElfOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::FairyElfOff
_TEXT	ENDS
PUBLIC	?MagicGladiatorOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::MagicGladiatorOff
; Function compile flags: /Ogtp
;	COMDAT ?MagicGladiatorOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv176 = -8						; size = 4
tv395 = -4						; size = 4
_NormDis$ = 8						; size = 4
_lpObj$ = 8						; size = 4
?MagicGladiatorOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; cOffExp::MagicGladiatorOff, COMDAT
; _this$ = ecx

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	57		 push	 edi

; 591  : 	int skill;
; 592  : 	int NormDis;
; 593  : 	CMagicInf * lpMagic;
; 594  : 	int SearchSkill = 0;
; 595  : 
; 596  : 	if(lpObj->pInventory[0].m_Type >= ITEMGET(5,0) && lpObj->pInventory[0].m_Type < ITEMGET(6,0))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000a	8b 87 24 0e 00
	00		 mov	 eax, DWORD PTR [edi+3620]
  00010	0f b7 40 06	 movzx	 eax, WORD PTR [eax+6]
  00014	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 0a 00 00	 mov	 ecx, 2560		; 00000a00H
  0001c	66 3b c1	 cmp	 ax, cx
  0001f	0f 8c e1 00 00
	00		 jl	 $LN35@MagicGladi
  00025	ba 00 0c 00 00	 mov	 edx, 3072		; 00000c00H
  0002a	66 3b c2	 cmp	 ax, dx
  0002d	0f 8d d3 00 00
	00		 jge	 $LN35@MagicGladi

; 597  : 	{
; 598  : 		if(gObjGetMagicSearch( lpObj, 9) != NULL) SearchSkill = 9;

  00033	6a 09		 push	 9
  00035	57		 push	 edi
  00036	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0003b	83 c4 08	 add	 esp, 8
  0003e	85 c0		 test	 eax, eax
  00040	74 11		 je	 SHORT $LN34@MagicGladi
  00042	b8 09 00 00 00	 mov	 eax, 9

; 604  : 		else return;
; 605  : 		skill = SearchSkill;
; 606  : 		NormDis = 6;

  00047	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 6

; 607  : 	}
; 608  : 	else

  0004e	e9 4f 01 00 00	 jmp	 $LN22@MagicGladi
$LN34@MagicGladi:

; 599  : 		else if(gObjGetMagicSearch( lpObj, 530) != NULL) SearchSkill = 530;

  00053	68 12 02 00 00	 push	 530			; 00000212H
  00058	57		 push	 edi
  00059	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0005e	83 c4 08	 add	 esp, 8
  00061	85 c0		 test	 eax, eax
  00063	74 11		 je	 SHORT $LN32@MagicGladi
  00065	b8 12 02 00 00	 mov	 eax, 530		; 00000212H

; 604  : 		else return;
; 605  : 		skill = SearchSkill;
; 606  : 		NormDis = 6;

  0006a	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 6

; 607  : 	}
; 608  : 	else

  00071	e9 2c 01 00 00	 jmp	 $LN22@MagicGladi
$LN32@MagicGladi:

; 600  : 		else if(gObjGetMagicSearch( lpObj, 531) != NULL) SearchSkill = 531;

  00076	68 13 02 00 00	 push	 531			; 00000213H
  0007b	57		 push	 edi
  0007c	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00081	83 c4 08	 add	 esp, 8
  00084	85 c0		 test	 eax, eax
  00086	74 11		 je	 SHORT $LN30@MagicGladi
  00088	b8 13 02 00 00	 mov	 eax, 531		; 00000213H

; 604  : 		else return;
; 605  : 		skill = SearchSkill;
; 606  : 		NormDis = 6;

  0008d	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 6

; 607  : 	}
; 608  : 	else

  00094	e9 09 01 00 00	 jmp	 $LN22@MagicGladi
$LN30@MagicGladi:

; 601  : 		else if(gObjGetMagicSearch( lpObj, 532) != NULL) SearchSkill = 532;

  00099	68 14 02 00 00	 push	 532			; 00000214H
  0009e	57		 push	 edi
  0009f	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000a4	83 c4 08	 add	 esp, 8
  000a7	85 c0		 test	 eax, eax
  000a9	74 11		 je	 SHORT $LN28@MagicGladi
  000ab	b8 14 02 00 00	 mov	 eax, 532		; 00000214H

; 604  : 		else return;
; 605  : 		skill = SearchSkill;
; 606  : 		NormDis = 6;

  000b0	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 6

; 607  : 	}
; 608  : 	else

  000b7	e9 e6 00 00 00	 jmp	 $LN22@MagicGladi
$LN28@MagicGladi:

; 602  : 		else if(gObjGetMagicSearch( lpObj, 533) != NULL) SearchSkill = 533;

  000bc	68 15 02 00 00	 push	 533			; 00000215H
  000c1	57		 push	 edi
  000c2	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000c7	83 c4 08	 add	 esp, 8
  000ca	85 c0		 test	 eax, eax
  000cc	74 11		 je	 SHORT $LN26@MagicGladi
  000ce	b8 15 02 00 00	 mov	 eax, 533		; 00000215H

; 604  : 		else return;
; 605  : 		skill = SearchSkill;
; 606  : 		NormDis = 6;

  000d3	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 6

; 607  : 	}
; 608  : 	else

  000da	e9 c3 00 00 00	 jmp	 $LN22@MagicGladi
$LN26@MagicGladi:

; 603  : 		else if(gObjGetMagicSearch( lpObj, 534) != NULL) SearchSkill = 534;

  000df	68 16 02 00 00	 push	 534			; 00000216H
  000e4	57		 push	 edi
  000e5	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000ea	83 c4 08	 add	 esp, 8
  000ed	85 c0		 test	 eax, eax
  000ef	0f 84 9e 01 00
	00		 je	 $LN11@MagicGladi
  000f5	b8 16 02 00 00	 mov	 eax, 534		; 00000216H

; 604  : 		else return;
; 605  : 		skill = SearchSkill;
; 606  : 		NormDis = 6;

  000fa	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 6

; 607  : 	}
; 608  : 	else

  00101	e9 9c 00 00 00	 jmp	 $LN22@MagicGladi
$LN35@MagicGladi:

; 609  : 	{
; 610  : 		if(gObjGetMagicSearch( lpObj, 41) != NULL) SearchSkill = 41;

  00106	6a 29		 push	 41			; 00000029H
  00108	57		 push	 edi
  00109	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0010e	83 c4 08	 add	 esp, 8
  00111	85 c0		 test	 eax, eax
  00113	74 07		 je	 SHORT $LN21@MagicGladi
  00115	b8 29 00 00 00	 mov	 eax, 41			; 00000029H
  0011a	eb 7f		 jmp	 SHORT $LN10@MagicGladi
$LN21@MagicGladi:

; 611  : 		else if(gObjGetMagicSearch( lpObj, 495) != NULL) SearchSkill = 495;

  0011c	68 ef 01 00 00	 push	 495			; 000001efH
  00121	57		 push	 edi
  00122	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00127	83 c4 08	 add	 esp, 8
  0012a	85 c0		 test	 eax, eax
  0012c	74 07		 je	 SHORT $LN19@MagicGladi
  0012e	b8 ef 01 00 00	 mov	 eax, 495		; 000001efH
  00133	eb 66		 jmp	 SHORT $LN10@MagicGladi
$LN19@MagicGladi:

; 612  : 		else if(gObjGetMagicSearch( lpObj, 496) != NULL) SearchSkill = 496;

  00135	68 f0 01 00 00	 push	 496			; 000001f0H
  0013a	57		 push	 edi
  0013b	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00140	83 c4 08	 add	 esp, 8
  00143	85 c0		 test	 eax, eax
  00145	74 07		 je	 SHORT $LN17@MagicGladi
  00147	b8 f0 01 00 00	 mov	 eax, 496		; 000001f0H
  0014c	eb 4d		 jmp	 SHORT $LN10@MagicGladi
$LN17@MagicGladi:

; 613  : 		else if(gObjGetMagicSearch( lpObj, 497) != NULL) SearchSkill = 497;

  0014e	68 f1 01 00 00	 push	 497			; 000001f1H
  00153	57		 push	 edi
  00154	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00159	83 c4 08	 add	 esp, 8
  0015c	85 c0		 test	 eax, eax
  0015e	74 07		 je	 SHORT $LN15@MagicGladi
  00160	b8 f1 01 00 00	 mov	 eax, 497		; 000001f1H
  00165	eb 34		 jmp	 SHORT $LN10@MagicGladi
$LN15@MagicGladi:

; 614  : 		else if(gObjGetMagicSearch( lpObj, 498) != NULL) SearchSkill = 498;

  00167	68 f2 01 00 00	 push	 498			; 000001f2H
  0016c	57		 push	 edi
  0016d	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00172	83 c4 08	 add	 esp, 8
  00175	85 c0		 test	 eax, eax
  00177	74 07		 je	 SHORT $LN13@MagicGladi
  00179	b8 f2 01 00 00	 mov	 eax, 498		; 000001f2H
  0017e	eb 1b		 jmp	 SHORT $LN10@MagicGladi
$LN13@MagicGladi:

; 615  : 		else if(gObjGetMagicSearch( lpObj, 499) != NULL) SearchSkill = 499;

  00180	68 f3 01 00 00	 push	 499			; 000001f3H
  00185	57		 push	 edi
  00186	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0018b	83 c4 08	 add	 esp, 8
  0018e	85 c0		 test	 eax, eax
  00190	0f 84 fd 00 00
	00		 je	 $LN11@MagicGladi
  00196	b8 f3 01 00 00	 mov	 eax, 499		; 000001f3H
$LN10@MagicGladi:

; 616  : 		else return;
; 617  : 		skill = SearchSkill;
; 618  : 		NormDis = 2;

  0019b	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _NormDis$[ebp], 2
$LN22@MagicGladi:
  001a2	53		 push	 ebx

; 619  : 	}
; 620  : 
; 621  : 	lpMagic = gObjGetMagicSearch( lpObj, skill);	//Twisting Slash 41

  001a3	50		 push	 eax
  001a4	57		 push	 edi
  001a5	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  001aa	8b d8		 mov	 ebx, eax
  001ac	83 c4 08	 add	 esp, 8

; 622  : 	if(lpMagic==NULL) return;

  001af	85 db		 test	 ebx, ebx
  001b1	0f 84 db 00 00
	00		 je	 $LN41@MagicGladi

; 623  : 
; 624  : 	gObjUseSkill.UseSkill(lpObj->m_Index, lpMagic,lpObj->X, lpObj->Y,0,0,-1);

  001b7	0f b6 87 46 01
	00 00		 movzx	 eax, BYTE PTR [edi+326]
  001be	0f b6 8f 44 01
	00 00		 movzx	 ecx, BYTE PTR [edi+324]
  001c5	8b 17		 mov	 edx, DWORD PTR [edi]
  001c7	6a ff		 push	 -1
  001c9	6a 00		 push	 0
  001cb	6a 00		 push	 0
  001cd	50		 push	 eax
  001ce	51		 push	 ecx
  001cf	53		 push	 ebx
  001d0	52		 push	 edx
  001d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  001d6	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z ; CObjUseSkill::UseSkill
  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001e0	8d 8f ac 08 00
	00		 lea	 ecx, DWORD PTR [edi+2220]
  001e6	89 4d fc	 mov	 DWORD PTR tv395[ebp], ecx
  001e9	c7 45 f8 4b 00
	00 00		 mov	 DWORD PTR tv176[ebp], 75 ; 0000004bH
  001f0	56		 push	 esi
$LL8@MagicGladi:

; 630  : 	{
; 631  : 		tObjNum = lpObj->VpPlayer2[n].number;
; 632  : 		if(lpObj->VpPlayer2[n].state == 0) continue;

  001f1	80 39 00	 cmp	 BYTE PTR [ecx], 0
  001f4	0f bf 71 02	 movsx	 esi, WORD PTR [ecx+2]
  001f8	74 7a		 je	 SHORT $LN7@MagicGladi

; 633  : 		if ( tObjNum >= 0 )

  001fa	85 f6		 test	 esi, esi
  001fc	78 76		 js	 SHORT $LN7@MagicGladi

; 634  : 		{
; 635  : 			if ( gObj[tObjNum].Type == OBJ_MONSTER )

  001fe	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00204	66 83 7c 06 68
	02		 cmp	 WORD PTR [esi+eax+104], 2
  0020a	75 68		 jne	 SHORT $LN7@MagicGladi

; 636  : 			{
; 637  : 				attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 638  : 				if ( (attr&1) != 1 )

  0020c	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  00214	0f bf 94 06 44
	01 00 00	 movsx	 edx, WORD PTR [esi+eax+324]
  0021c	51		 push	 ecx
  0021d	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  00225	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  0022b	52		 push	 edx
  0022c	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00232	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  00237	a8 01		 test	 al, 1
  00239	75 34		 jne	 SHORT $LN40@MagicGladi

; 639  : 				{
; 640  : 					dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  0023b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00240	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00243	51		 push	 ecx
  00244	57		 push	 edi
  00245	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0024a	83 c4 08	 add	 esp, 8

; 641  : 					if(NormDis >= dis)

  0024d	39 45 08	 cmp	 DWORD PTR _NormDis$[ebp], eax
  00250	7c 1d		 jl	 SHORT $LN40@MagicGladi

; 642  : 					{
; 643  : 						gObjAttack(lpObj, &gObj[tObjNum], lpMagic, FALSE, 1, 0, FALSE,0,0);

  00252	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00258	6a 00		 push	 0
  0025a	6a 00		 push	 0
  0025c	6a 00		 push	 0
  0025e	6a 00		 push	 0
  00260	6a 01		 push	 1
  00262	6a 00		 push	 0
  00264	53		 push	 ebx
  00265	56		 push	 esi
  00266	57		 push	 edi
  00267	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  0026c	83 c4 24	 add	 esp, 36			; 00000024H
$LN40@MagicGladi:
  0026f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN7@MagicGladi:

; 625  : 
; 626  : 	int dis;
; 627  : 	int tObjNum;
; 628  : 	BYTE attr;
; 629  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  00274	8b 4d fc	 mov	 ecx, DWORD PTR tv395[ebp]
  00277	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0027a	ff 4d f8	 dec	 DWORD PTR tv176[ebp]
  0027d	89 4d fc	 mov	 DWORD PTR tv395[ebp], ecx
  00280	0f 85 6b ff ff
	ff		 jne	 $LL8@MagicGladi

; 644  : 					}
; 645  : 				}
; 646  : 			}
; 647  : 		}
; 648  : 	}
; 649  : 
; 650  : 	this->UseMana(lpObj->m_Index);

  00286	8b 07		 mov	 eax, DWORD PTR [edi]
  00288	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028b	50		 push	 eax
  0028c	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
  00291	5e		 pop	 esi
$LN41@MagicGladi:
  00292	5b		 pop	 ebx
$LN11@MagicGladi:
  00293	5f		 pop	 edi

; 651  : }

  00294	8b e5		 mov	 esp, ebp
  00296	5d		 pop	 ebp
  00297	c2 04 00	 ret	 4
?MagicGladiatorOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; cOffExp::MagicGladiatorOff
_TEXT	ENDS
PUBLIC	?DarkLordOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z	; cOffExp::DarkLordOff
; Function compile flags: /Ogtp
;	COMDAT ?DarkLordOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?DarkLordOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::DarkLordOff, COMDAT
; _this$ = ecx

; 656  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 657  : 	int Target = this->SearchTarget(lpObj);

  00005	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00008	57		 push	 edi
  00009	56		 push	 esi
  0000a	8b f9		 mov	 edi, ecx
  0000c	e8 00 00 00 00	 call	 ?SearchTarget@cOffExp@@QAEHPAUOBJECTSTRUCT@@@Z ; cOffExp::SearchTarget
  00011	8b d8		 mov	 ebx, eax

; 658  : 
; 659  : 	if(Target == -1) return;

  00013	83 fb ff	 cmp	 ebx, -1
  00016	0f 84 b8 00 00
	00		 je	 $LN3@DarkLordOf

; 660  : 
; 661  : 	int SearchSkill = 0;
; 662  : 	CMagicInf * lpMagic;
; 663  : 
; 664  : 	if(gObjGetMagicSearch( lpObj, 61) != NULL) SearchSkill = 61;

  0001c	6a 3d		 push	 61			; 0000003dH
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00024	83 c4 08	 add	 esp, 8
  00027	85 c0		 test	 eax, eax
  00029	74 07		 je	 SHORT $LN13@DarkLordOf
  0002b	b8 3d 00 00 00	 mov	 eax, 61			; 0000003dH
  00030	eb 7b		 jmp	 SHORT $LN2@DarkLordOf
$LN13@DarkLordOf:

; 665  : 	else if(gObjGetMagicSearch( lpObj, 520) != NULL) SearchSkill = 520;

  00032	68 08 02 00 00	 push	 520			; 00000208H
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0003d	83 c4 08	 add	 esp, 8
  00040	85 c0		 test	 eax, eax
  00042	74 07		 je	 SHORT $LN11@DarkLordOf
  00044	b8 08 02 00 00	 mov	 eax, 520		; 00000208H
  00049	eb 62		 jmp	 SHORT $LN2@DarkLordOf
$LN11@DarkLordOf:

; 666  : 	else if(gObjGetMagicSearch( lpObj, 521) != NULL) SearchSkill = 521;

  0004b	68 09 02 00 00	 push	 521			; 00000209H
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00056	83 c4 08	 add	 esp, 8
  00059	85 c0		 test	 eax, eax
  0005b	74 07		 je	 SHORT $LN9@DarkLordOf
  0005d	b8 09 02 00 00	 mov	 eax, 521		; 00000209H
  00062	eb 49		 jmp	 SHORT $LN2@DarkLordOf
$LN9@DarkLordOf:

; 667  : 	else if(gObjGetMagicSearch( lpObj, 522) != NULL) SearchSkill = 522;

  00064	68 0a 02 00 00	 push	 522			; 0000020aH
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0006f	83 c4 08	 add	 esp, 8
  00072	85 c0		 test	 eax, eax
  00074	74 07		 je	 SHORT $LN7@DarkLordOf
  00076	b8 0a 02 00 00	 mov	 eax, 522		; 0000020aH
  0007b	eb 30		 jmp	 SHORT $LN2@DarkLordOf
$LN7@DarkLordOf:

; 668  : 	else if(gObjGetMagicSearch( lpObj, 523) != NULL) SearchSkill = 523;

  0007d	68 0b 02 00 00	 push	 523			; 0000020bH
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00088	83 c4 08	 add	 esp, 8
  0008b	85 c0		 test	 eax, eax
  0008d	74 07		 je	 SHORT $LN5@DarkLordOf
  0008f	b8 0b 02 00 00	 mov	 eax, 523		; 0000020bH
  00094	eb 17		 jmp	 SHORT $LN2@DarkLordOf
$LN5@DarkLordOf:

; 669  : 	else if(gObjGetMagicSearch( lpObj, 524) != NULL) SearchSkill = 524;

  00096	68 0c 02 00 00	 push	 524			; 0000020cH
  0009b	56		 push	 esi
  0009c	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000a1	83 c4 08	 add	 esp, 8
  000a4	85 c0		 test	 eax, eax
  000a6	74 2c		 je	 SHORT $LN3@DarkLordOf
  000a8	b8 0c 02 00 00	 mov	 eax, 524		; 0000020cH
$LN2@DarkLordOf:

; 670  : 	else return;
; 671  : 
; 672  : 	lpMagic = gObjGetMagicSearch( lpObj, SearchSkill);

  000ad	50		 push	 eax
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  000b4	83 c4 08	 add	 esp, 8

; 673  : 	if(lpMagic==NULL) return;

  000b7	85 c0		 test	 eax, eax
  000b9	74 19		 je	 SHORT $LN3@DarkLordOf

; 674  : 
; 675  : 	gObjUseSkill.UseSkill(lpObj->m_Index,Target, lpMagic); //

  000bb	50		 push	 eax
  000bc	8b 06		 mov	 eax, DWORD PTR [esi]
  000be	53		 push	 ebx
  000bf	50		 push	 eax
  000c0	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  000c5	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHHPAVCMagicInf@@@Z ; CObjUseSkill::UseSkill

; 676  : 
; 677  : 	this->UseMana(lpObj->m_Index);

  000ca	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000cc	51		 push	 ecx
  000cd	8b cf		 mov	 ecx, edi
  000cf	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
$LN3@DarkLordOf:
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx

; 678  : }

  000d7	5d		 pop	 ebp
  000d8	c2 04 00	 ret	 4
?DarkLordOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::DarkLordOff
_TEXT	ENDS
PUBLIC	?SummonerOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z	; cOffExp::SummonerOff
; Function compile flags: /Ogtp
;	COMDAT ?SummonerOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv137 = -4						; size = 4
tv294 = 8						; size = 4
_lpObj$ = 8						; size = 4
?SummonerOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::SummonerOff, COMDAT
; _this$ = ecx

; 683  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	57		 push	 edi

; 684  : 	CMagicInf * lpMagic;
; 685  : 	lpMagic = gObjGetMagicSearch( lpObj, 230);	//Lightning Shock

  00008	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000b	68 e6 00 00 00	 push	 230			; 000000e6H
  00010	57		 push	 edi
  00011	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00014	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00019	8b d8		 mov	 ebx, eax
  0001b	83 c4 08	 add	 esp, 8

; 686  : 	if(lpMagic==NULL) return;

  0001e	85 db		 test	 ebx, ebx
  00020	0f 84 db 00 00
	00		 je	 $LN10@SummonerOf

; 687  : 
; 688  : 	gObjUseSkill.UseSkill(lpObj->m_Index, lpMagic,lpObj->X, lpObj->Y,0,0,-1);

  00026	0f b6 87 46 01
	00 00		 movzx	 eax, BYTE PTR [edi+326]
  0002d	0f b6 8f 44 01
	00 00		 movzx	 ecx, BYTE PTR [edi+324]
  00034	8b 17		 mov	 edx, DWORD PTR [edi]
  00036	6a ff		 push	 -1
  00038	6a 00		 push	 0
  0003a	6a 00		 push	 0
  0003c	50		 push	 eax
  0003d	51		 push	 ecx
  0003e	53		 push	 ebx
  0003f	52		 push	 edx
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  00045	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z ; CObjUseSkill::UseSkill
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004f	8d 8f ac 08 00
	00		 lea	 ecx, DWORD PTR [edi+2220]
  00055	89 4d 08	 mov	 DWORD PTR tv294[ebp], ecx
  00058	c7 45 fc 4b 00
	00 00		 mov	 DWORD PTR tv137[ebp], 75 ; 0000004bH
  0005f	56		 push	 esi
$LL8@SummonerOf:

; 694  : 	{
; 695  : 		tObjNum = lpObj->VpPlayer2[n].number;
; 696  : 		if(lpObj->VpPlayer2[n].state == 0) continue;

  00060	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00063	0f bf 71 02	 movsx	 esi, WORD PTR [ecx+2]
  00067	74 7a		 je	 SHORT $LN7@SummonerOf

; 697  : 		if ( tObjNum >= 0 )

  00069	85 f6		 test	 esi, esi
  0006b	78 76		 js	 SHORT $LN7@SummonerOf

; 698  : 		{
; 699  : 			if ( gObj[tObjNum].Type == OBJ_MONSTER )

  0006d	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00073	66 83 7c 06 68
	02		 cmp	 WORD PTR [esi+eax+104], 2
  00079	75 68		 jne	 SHORT $LN7@SummonerOf

; 700  : 			{
; 701  : 				attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 702  : 				if ( (attr&1) != 1 )

  0007b	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  00083	0f bf 94 06 44
	01 00 00	 movsx	 edx, WORD PTR [esi+eax+324]
  0008b	51		 push	 ecx
  0008c	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  00094	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  0009a	52		 push	 edx
  0009b	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  000a1	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  000a6	a8 01		 test	 al, 1
  000a8	75 34		 jne	 SHORT $LN14@SummonerOf

; 703  : 				{
; 704  : 					dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000af	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  000b2	51		 push	 ecx
  000b3	57		 push	 edi
  000b4	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  000b9	83 c4 08	 add	 esp, 8

; 705  : 					if(6 >= dis)

  000bc	83 f8 06	 cmp	 eax, 6
  000bf	7f 1d		 jg	 SHORT $LN14@SummonerOf

; 706  : 					{
; 707  : 						gObjAttack(lpObj, &gObj[tObjNum], lpMagic, FALSE, 1, 0, FALSE,0,0);

  000c1	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c7	6a 00		 push	 0
  000c9	6a 00		 push	 0
  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	6a 01		 push	 1
  000d1	6a 00		 push	 0
  000d3	53		 push	 ebx
  000d4	56		 push	 esi
  000d5	57		 push	 edi
  000d6	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  000db	83 c4 24	 add	 esp, 36			; 00000024H
$LN14@SummonerOf:
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN7@SummonerOf:

; 689  : 
; 690  : 	int dis;
; 691  : 	int tObjNum;
; 692  : 	BYTE attr;
; 693  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  000e3	8b 4d 08	 mov	 ecx, DWORD PTR tv294[ebp]
  000e6	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000e9	ff 4d fc	 dec	 DWORD PTR tv137[ebp]
  000ec	89 4d 08	 mov	 DWORD PTR tv294[ebp], ecx
  000ef	0f 85 6b ff ff
	ff		 jne	 $LL8@SummonerOf

; 708  : 					}
; 709  : 				}
; 710  : 			}
; 711  : 		}
; 712  : 	}
; 713  : 
; 714  : 	this->UseMana(lpObj->m_Index);

  000f5	8b 07		 mov	 eax, DWORD PTR [edi]
  000f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	50		 push	 eax
  000fb	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
  00100	5e		 pop	 esi
$LN10@SummonerOf:
  00101	5f		 pop	 edi
  00102	5b		 pop	 ebx

; 715  : }

  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
?SummonerOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::SummonerOff
_TEXT	ENDS
PUBLIC	?RageFighterOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::RageFighterOff
; Function compile flags: /Ogtp
;	COMDAT ?RageFighterOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv72 = -4						; size = 4
_lpMagic$ = 8						; size = 4
_lpObj$ = 8						; size = 4
?RageFighterOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; cOffExp::RageFighterOff, COMDAT
; _this$ = ecx

; 721  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 722  : 	CMagicInf * lpMagic;
; 723  : #ifdef TEST_OFFAFF_DARK_SIDE
; 724  : 	if(g_ZtLicense.CheckUser(eZtUB::ulasevich) || g_ZtLicense.CheckUser(eZtUB::Local3) || g_ZtLicense.CheckUser(eZtUB::Local) || g_ZtLicense.CheckUser(eZtUB::ulasevich2))

  0000a	6a 17		 push	 23			; 00000017H
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00011	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00016	84 c0		 test	 al, al
  00018	75 43		 jne	 SHORT $LN18@RageFighte
  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00021	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00026	84 c0		 test	 al, al
  00028	75 33		 jne	 SHORT $LN18@RageFighte
  0002a	6a 00		 push	 0
  0002c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00031	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00036	84 c0		 test	 al, al
  00038	75 23		 jne	 SHORT $LN18@RageFighte
  0003a	6a 24		 push	 36			; 00000024H
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00041	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00046	84 c0		 test	 al, al
  00048	75 13		 jne	 SHORT $LN18@RageFighte

; 727  : 	}
; 728  : 	else
; 729  : 	{
; 730  : 		lpMagic = gObjGetMagicSearch( lpObj, 264);

  0004a	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0004d	68 08 01 00 00	 push	 264			; 00000108H
  00052	57		 push	 edi
  00053	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  00058	89 45 08	 mov	 DWORD PTR _lpMagic$[ebp], eax
  0005b	eb 11		 jmp	 SHORT $LN19@RageFighte
$LN18@RageFighte:

; 725  : 	{
; 726  : 		lpMagic = gObjGetMagicSearch( lpObj, 263);

  0005d	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00060	68 07 01 00 00	 push	 263			; 00000107H
  00065	57		 push	 edi
  00066	e8 00 00 00 00	 call	 ?gObjGetMagicSearch@@YAPAVCMagicInf@@PAUOBJECTSTRUCT@@H@Z ; gObjGetMagicSearch
  0006b	89 45 08	 mov	 DWORD PTR _lpMagic$[ebp], eax
$LN19@RageFighte:
  0006e	83 c4 08	 add	 esp, 8

; 731  : 	}
; 732  : #else
; 733  : 	lpMagic = gObjGetMagicSearch( lpObj, 264);
; 734  : #endif
; 735  : 	if(lpMagic==NULL) return;

  00071	85 c0		 test	 eax, eax
  00073	0f 84 db 00 00
	00		 je	 $LN13@RageFighte

; 736  : 
; 737  : 	gObjUseSkill.UseSkill(lpObj->m_Index, lpMagic,lpObj->X, lpObj->Y,0,0,-1);

  00079	0f b6 8f 46 01
	00 00		 movzx	 ecx, BYTE PTR [edi+326]
  00080	0f b6 97 44 01
	00 00		 movzx	 edx, BYTE PTR [edi+324]
  00087	53		 push	 ebx
  00088	56		 push	 esi
  00089	6a ff		 push	 -1
  0008b	6a 00		 push	 0
  0008d	6a 00		 push	 0
  0008f	51		 push	 ecx
  00090	52		 push	 edx
  00091	50		 push	 eax
  00092	8b 07		 mov	 eax, DWORD PTR [edi]
  00094	50		 push	 eax
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  0009a	e8 00 00 00 00	 call	 ?UseSkill@CObjUseSkill@@QAEXHPAVCMagicInf@@EEEEH@Z ; CObjUseSkill::UseSkill
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a4	8d 9f ac 08 00
	00		 lea	 ebx, DWORD PTR [edi+2220]
  000aa	c7 45 fc 4b 00
	00 00		 mov	 DWORD PTR tv72[ebp], 75	; 0000004bH
$LL8@RageFighte:

; 743  : 	{
; 744  : 		tObjNum = lpObj->VpPlayer2[n].number;
; 745  : 		if(lpObj->VpPlayer2[n].state == 0) continue;

  000b1	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  000b4	0f bf 73 02	 movsx	 esi, WORD PTR [ebx+2]
  000b8	0f 84 7d 00 00
	00		 je	 $LN7@RageFighte

; 746  : 		if ( tObjNum >= 0 )

  000be	85 f6		 test	 esi, esi
  000c0	78 79		 js	 SHORT $LN7@RageFighte

; 747  : 		{
; 748  : 			if ( gObj[tObjNum].Type == OBJ_MONSTER )

  000c2	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  000c8	66 83 7c 06 68
	02		 cmp	 WORD PTR [esi+eax+104], 2
  000ce	75 6b		 jne	 SHORT $LN7@RageFighte

; 749  : 			{
; 750  : 				attr = MapC[gObj[tObjNum].MapNumber].GetAttr(gObj[tObjNum].X, gObj[tObjNum].Y);
; 751  : 				if ( (attr&1) != 1 )

  000d0	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  000d8	0f bf 94 06 44
	01 00 00	 movsx	 edx, WORD PTR [esi+eax+324]
  000e0	51		 push	 ecx
  000e1	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  000e9	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  000ef	52		 push	 edx
  000f0	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  000f6	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  000fb	a8 01		 test	 al, 1
  000fd	75 37		 jne	 SHORT $LN17@RageFighte

; 752  : 				{
; 753  : 					dis = gObjCalDistance(lpObj, &gObj[tObjNum]);

  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00104	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00107	51		 push	 ecx
  00108	57		 push	 edi
  00109	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0010e	83 c4 08	 add	 esp, 8

; 754  : 					if(6 >= dis)

  00111	83 f8 06	 cmp	 eax, 6
  00114	7f 20		 jg	 SHORT $LN17@RageFighte

; 755  : 					{
; 756  : 						gObjAttack(lpObj, &gObj[tObjNum], lpMagic, FALSE, 1, 0, FALSE, 0 , 0);

  00116	8b 55 08	 mov	 edx, DWORD PTR _lpMagic$[ebp]
  00119	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0011f	6a 00		 push	 0
  00121	6a 00		 push	 0
  00123	6a 00		 push	 0
  00125	6a 00		 push	 0
  00127	6a 01		 push	 1
  00129	6a 00		 push	 0
  0012b	52		 push	 edx
  0012c	56		 push	 esi
  0012d	57		 push	 edi
  0012e	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  00133	83 c4 24	 add	 esp, 36			; 00000024H
$LN17@RageFighte:
  00136	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN7@RageFighte:

; 738  : 
; 739  : 	int dis;
; 740  : 	int tObjNum;
; 741  : 	BYTE attr;
; 742  : 	for (int n=0;n<MAX_VIEWPORT_MONSTER;n++)

  0013b	83 c3 0c	 add	 ebx, 12			; 0000000cH
  0013e	ff 4d fc	 dec	 DWORD PTR tv72[ebp]
  00141	0f 85 6a ff ff
	ff		 jne	 $LL8@RageFighte

; 757  : 					}
; 758  : 				}
; 759  : 			}
; 760  : 		}
; 761  : 	}
; 762  : 
; 763  : 	this->UseMana(lpObj->m_Index);

  00147	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00149	51		 push	 ecx
  0014a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?UseMana@cOffExp@@QAEXH@Z ; cOffExp::UseMana
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
$LN13@RageFighte:
  00154	5f		 pop	 edi

; 764  : }

  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 04 00	 ret	 4
?RageFighterOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; cOffExp::RageFighterOff
_TEXT	ENDS
PUBLIC	?MainFunction@cOffExp@@QAEXH@Z			; cOffExp::MainFunction
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
EXTRN	?GJPUserClose@@YAXPAD@Z:PROC			; GJPUserClose
; Function compile flags: /Ogtp
;	COMDAT ?MainFunction@cOffExp@@QAEXH@Z
_TEXT	SEGMENT
tv378 = 8						; size = 4
_aIndex$ = 8						; size = 4
?MainFunction@cOffExp@@QAEXH@Z PROC			; cOffExp::MainFunction, COMDAT
; _this$ = ecx

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 176  : 	LPOBJ lpObj = &gObj[aIndex];

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0000d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00013	57		 push	 edi

; 177  : 
; 178  : 	if(!lpObj->OffExp) return;

  00014	83 be 98 22 00
	00 00		 cmp	 DWORD PTR [esi+8856], 0
  0001b	8b f9		 mov	 edi, ecx
  0001d	0f 84 14 02 00
	00		 je	 $LN8@MainFuncti

; 179  : 
; 180  : 	// ----
; 181  : 
; 182  : 	if(!this->CheckTerrain(lpObj))

  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 ?CheckTerrain@cOffExp@@QAE_NPAUOBJECTSTRUCT@@@Z ; cOffExp::CheckTerrain
  00029	84 c0		 test	 al, al
  0002b	75 2e		 jne	 SHORT $LN34@MainFuncti

; 183  : 	{
; 184  : 		if(this->KickFallen)

  0002d	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00031	0f 84 00 02 00
	00		 je	 $LN8@MainFuncti
$LN52@MainFuncti:

; 185  : 		{
; 186  : 			GJPUserClose(lpObj->AccountID);

  00037	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?GJPUserClose@@YAXPAD@Z	; GJPUserClose

; 187  : 			gObjDel(lpObj->m_Index);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	51		 push	 ecx
$LN51@MainFuncti:
  00043	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  00048	83 c4 08	 add	 esp, 8
  0004b	5f		 pop	 edi

; 188  : 			lpObj->OffExp = 0;

  0004c	c7 86 98 22 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+8856], 0
  00056	5e		 pop	 esi

; 309  : 	}
; 310  : }

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
$LN34@MainFuncti:

; 189  : 		}
; 190  : 		return;
; 191  : 	}
; 192  : 
; 193  : 	// ----
; 194  : 
; 195  : 	if(this->EnableTime)

  0005b	83 7f 08 00	 cmp	 DWORD PTR [edi+8], 0
  0005f	74 1f		 je	 SHORT $LN31@MainFuncti

; 196  : 	{
; 197  : 		lpObj->OffExpTick++;

  00061	ff 86 9c 22 00
	00		 inc	 DWORD PTR [esi+8860]
  00067	8b 86 9c 22 00
	00		 mov	 eax, DWORD PTR [esi+8860]

; 198  : 		if(lpObj->OffExpTick >= this->TimeEnd)

  0006d	3b 47 0c	 cmp	 eax, DWORD PTR [edi+12]
  00070	72 0e		 jb	 SHORT $LN31@MainFuncti
$LN54@MainFuncti:

; 199  : 		{
; 200  : 			GJPUserClose(lpObj->AccountID);

  00072	8d 56 6c	 lea	 edx, DWORD PTR [esi+108]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ?GJPUserClose@@YAXPAD@Z	; GJPUserClose

; 201  : 			gObjDel(lpObj->m_Index);

  0007b	8b 06		 mov	 eax, DWORD PTR [esi]
  0007d	50		 push	 eax

; 202  : 			lpObj->OffExp = 0;
; 203  : 			return;

  0007e	eb c3		 jmp	 SHORT $LN51@MainFuncti
$LN31@MainFuncti:

; 204  : 		}
; 205  : 	}
; 206  : 
; 207  : 	// ----
; 208  : 
; 209  : #ifdef PRIVATE_MODULE)
; 210  : #ifdef DRYNEA_13_11
; 211  : 	if(g_ZtLicense.CheckUser(eZtUB::Vadim) || g_ZtLicense.CheckUser(eZtUB::drynea))

  00080	6a 09		 push	 9
  00082	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00087	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0008c	84 c0		 test	 al, al
  0008e	75 10		 jne	 SHORT $LN29@MainFuncti
  00090	6a 01		 push	 1
  00092	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00097	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0009c	84 c0		 test	 al, al

; 223  : 		}
; 224  : 	}
; 225  : 	else
; 226  : 	{
; 227  : 		lpObj->OffExpTickPRice++;

  0009e	74 15		 je	 SHORT $LN28@MainFuncti
$LN29@MainFuncti:

; 212  : #else
; 213  : 	if(g_ZtLicense.CheckUser(eZtUB::Vadim))
; 214  : #endif
; 215  : 	{
; 216  : 		if(lpObj->PremiumTime > 0)

  000a0	83 be b8 22 00
	00 00		 cmp	 DWORD PTR [esi+8888], 0
  000a7	7e 0c		 jle	 SHORT $LN28@MainFuncti

; 217  : 		{
; 218  : 			lpObj->OffExpTickPRice = 0;

  000a9	c7 86 a0 22 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+8864], 0

; 219  : 		}
; 220  : 		else

  000b3	eb 06		 jmp	 SHORT $LN27@MainFuncti
$LN28@MainFuncti:

; 221  : 		{
; 222  : 			lpObj->OffExpTickPRice++;

  000b5	ff 86 a0 22 00
	00		 inc	 DWORD PTR [esi+8864]
$LN27@MainFuncti:

; 228  : 	}
; 229  : #else
; 230  : 	lpObj->OffExpTickPRice++;
; 231  : #endif
; 232  : 
; 233  : 	if (this->TickPriceEnable)

  000bb	83 7f 24 00	 cmp	 DWORD PTR [edi+36], 0
  000bf	0f 84 03 01 00
	00		 je	 $LN11@MainFuncti

; 234  : 	{
; 235  : 		if (lpObj->OffExpTickPRice > (this->TickTimeMin * 60))

  000c5	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  000c8	8b c8		 mov	 ecx, eax
  000ca	c1 e1 04	 shl	 ecx, 4
  000cd	2b c8		 sub	 ecx, eax
  000cf	03 c9		 add	 ecx, ecx
  000d1	03 c9		 add	 ecx, ecx
  000d3	39 8e a0 22 00
	00		 cmp	 DWORD PTR [esi+8864], ecx
  000d9	0f 86 e9 00 00
	00		 jbe	 $LN11@MainFuncti

; 236  : 		{
; 237  : 			lpObj->OffExpTickPRice = 0;

  000df	c7 86 a0 22 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+8864], 0

; 238  : 			if (this->TickPriceType == 0)

  000e9	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  000ec	85 c0		 test	 eax, eax
  000ee	75 1e		 jne	 SHORT $LN23@MainFuncti

; 239  : 			{
; 240  : 				if (this->TickPrice > lpObj->Money)

  000f0	8b 4f 30	 mov	 ecx, DWORD PTR [edi+48]
  000f3	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  000f9	3b c8		 cmp	 ecx, eax

; 241  : 				{
; 242  : 					GJPUserClose(lpObj->AccountID);
; 243  : 					gObjDel(lpObj->m_Index);
; 244  : 					lpObj->OffExp = 0;
; 245  : 					return;

  000fb	0f 8f 71 ff ff
	ff		 jg	 $LN54@MainFuncti

; 246  : 				}
; 247  : 				lpObj->Money -= this->TickPrice;

  00101	2b c1		 sub	 eax, ecx
  00103	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  00109	e9 ba 00 00 00	 jmp	 $LN11@MainFuncti
$LN23@MainFuncti:

; 248  : 			}
; 249  : 			else if (this->TickPriceType == 1)

  0010e	83 f8 01	 cmp	 eax, 1
  00111	75 39		 jne	 SHORT $LN20@MainFuncti

; 250  : 			{
; 251  : 				if (this->TickPrice > lpObj->ZtCred)

  00113	db 47 30	 fild	 DWORD PTR [edi+48]
  00116	d9 5d 08	 fstp	 DWORD PTR tv378[ebp]
  00119	d9 45 08	 fld	 DWORD PTR tv378[ebp]
  0011c	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  00122	d8 d9		 fcomp	 ST(1)
  00124	df e0		 fnstsw	 ax
  00126	f6 c4 05	 test	 ah, 5
  00129	7a 13		 jp	 SHORT $LN19@MainFuncti

; 252  : 				{
; 253  : 					GJPUserClose(lpObj->AccountID);

  0012b	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  0012e	dd d8		 fstp	 ST(0)
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 ?GJPUserClose@@YAXPAD@Z	; GJPUserClose

; 254  : 					gObjDel(lpObj->m_Index);

  00136	8b 16		 mov	 edx, DWORD PTR [esi]
  00138	52		 push	 edx

; 255  : 					lpObj->OffExp = 0;
; 256  : 					return;

  00139	e9 05 ff ff ff	 jmp	 $LN51@MainFuncti
$LN19@MainFuncti:

; 257  : 				}
; 258  : 				lpObj->ZtCred -= this->TickPrice;

  0013e	d8 ae a8 22 00
	00		 fsubr	 DWORD PTR [esi+8872]
  00144	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  0014a	eb 7c		 jmp	 SHORT $LN11@MainFuncti
$LN20@MainFuncti:

; 259  : 			}
; 260  : 			else if (this->TickPriceType == 2)

  0014c	83 f8 02	 cmp	 eax, 2
  0014f	75 25		 jne	 SHORT $LN17@MainFuncti

; 261  : 			{
; 262  : 				if (this->TickPrice > lpObj->GameShop.WCoinC)

  00151	db 47 30	 fild	 DWORD PTR [edi+48]
  00154	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  0015a	df e0		 fnstsw	 ax
  0015c	f6 c4 41	 test	 ah, 65			; 00000041H
  0015f	75 07		 jne	 SHORT $LN16@MainFuncti
$LN53@MainFuncti:
  00161	dd d8		 fstp	 ST(0)

; 263  : 				{
; 264  : 					GJPUserClose(lpObj->AccountID);
; 265  : 					gObjDel(lpObj->m_Index);
; 266  : 					lpObj->OffExp = 0;
; 267  : 					return;

  00163	e9 cf fe ff ff	 jmp	 $LN52@MainFuncti
$LN16@MainFuncti:

; 268  : 				}
; 269  : 				lpObj->GameShop.WCoinC -= this->TickPrice;

  00168	dc ae 00 23 00
	00		 fsubr	 QWORD PTR [esi+8960]
  0016e	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]

; 270  : 				gGameShop.GDSaveUserInfo(aIndex);

  00174	eb 44		 jmp	 SHORT $LN50@MainFuncti
$LN17@MainFuncti:

; 271  : 			}
; 272  : 			else if (this->TickPriceType == 3)

  00176	83 f8 03	 cmp	 eax, 3
  00179	75 1e		 jne	 SHORT $LN14@MainFuncti

; 273  : 			{
; 274  : 				if (this->TickPrice > lpObj->GameShop.WCoinP)

  0017b	db 47 30	 fild	 DWORD PTR [edi+48]
  0017e	dc 96 f8 22 00
	00		 fcom	 QWORD PTR [esi+8952]
  00184	df e0		 fnstsw	 ax
  00186	f6 c4 41	 test	 ah, 65			; 00000041H

; 275  : 				{
; 276  : 					GJPUserClose(lpObj->AccountID);
; 277  : 					gObjDel(lpObj->m_Index);
; 278  : 					lpObj->OffExp = 0;
; 279  : 					return;

  00189	74 d6		 je	 SHORT $LN53@MainFuncti

; 280  : 				}
; 281  : 				lpObj->GameShop.WCoinP -= this->TickPrice;

  0018b	dc ae f8 22 00
	00		 fsubr	 QWORD PTR [esi+8952]
  00191	dd 9e f8 22 00
	00		 fstp	 QWORD PTR [esi+8952]

; 282  : 				gGameShop.GDSaveUserInfo(aIndex);

  00197	eb 21		 jmp	 SHORT $LN50@MainFuncti
$LN14@MainFuncti:

; 283  : 			}
; 284  : 			else if (this->TickPriceType == 4)

  00199	83 f8 04	 cmp	 eax, 4
  0019c	75 2a		 jne	 SHORT $LN11@MainFuncti

; 285  : 			{
; 286  : 				if (this->TickPrice > lpObj->GameShop.GoblinPoint)

  0019e	db 47 30	 fild	 DWORD PTR [edi+48]
  001a1	dc 96 08 23 00
	00		 fcom	 QWORD PTR [esi+8968]
  001a7	df e0		 fnstsw	 ax
  001a9	f6 c4 41	 test	 ah, 65			; 00000041H

; 287  : 				{
; 288  : 					GJPUserClose(lpObj->AccountID);
; 289  : 					gObjDel(lpObj->m_Index);
; 290  : 					lpObj->OffExp = 0;
; 291  : 					return;

  001ac	74 b3		 je	 SHORT $LN53@MainFuncti

; 292  : 				}
; 293  : 				lpObj->GameShop.GoblinPoint -= this->TickPrice;

  001ae	dc ae 08 23 00
	00		 fsubr	 QWORD PTR [esi+8968]
  001b4	dd 9e 08 23 00
	00		 fstp	 QWORD PTR [esi+8968]
$LN50@MainFuncti:

; 294  : 				gGameShop.GDSaveUserInfo(aIndex);

  001ba	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  001bd	52		 push	 edx
  001be	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  001c3	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN11@MainFuncti:

; 295  : 			}
; 296  : 		}
; 297  : 	}
; 298  : 
; 299  : 
; 300  : 	switch(lpObj->Class)

  001c8	0f b7 86 b8 00
	00 00		 movzx	 eax, WORD PTR [esi+184]
  001cf	83 f8 06	 cmp	 eax, 6
  001d2	77 63		 ja	 SHORT $LN8@MainFuncti
  001d4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN55@MainFuncti[eax*4]
$LN7@MainFuncti:

; 301  : 	{
; 302  : 		case 0:	this->DarkWizardOff(lpObj);		break;

  001db	56		 push	 esi
  001dc	8b cf		 mov	 ecx, edi
  001de	e8 00 00 00 00	 call	 ?DarkWizardOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::DarkWizardOff
  001e3	5f		 pop	 edi
  001e4	5e		 pop	 esi

; 309  : 	}
; 310  : }

  001e5	5d		 pop	 ebp
  001e6	c2 04 00	 ret	 4
$LN6@MainFuncti:

; 303  : 		case 1:	this->DarkKnightOff(lpObj);		break;

  001e9	56		 push	 esi
  001ea	8b cf		 mov	 ecx, edi
  001ec	e8 00 00 00 00	 call	 ?DarkKnightOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::DarkKnightOff
  001f1	5f		 pop	 edi
  001f2	5e		 pop	 esi

; 309  : 	}
; 310  : }

  001f3	5d		 pop	 ebp
  001f4	c2 04 00	 ret	 4
$LN5@MainFuncti:

; 304  : 		case 2:	this->FairyElfOff(lpObj);		break;

  001f7	56		 push	 esi
  001f8	8b cf		 mov	 ecx, edi
  001fa	e8 00 00 00 00	 call	 ?FairyElfOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::FairyElfOff
  001ff	5f		 pop	 edi
  00200	5e		 pop	 esi

; 309  : 	}
; 310  : }

  00201	5d		 pop	 ebp
  00202	c2 04 00	 ret	 4
$LN4@MainFuncti:

; 305  : 		case 3:	this->MagicGladiatorOff(lpObj);	break;

  00205	56		 push	 esi
  00206	8b cf		 mov	 ecx, edi
  00208	e8 00 00 00 00	 call	 ?MagicGladiatorOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::MagicGladiatorOff
  0020d	5f		 pop	 edi
  0020e	5e		 pop	 esi

; 309  : 	}
; 310  : }

  0020f	5d		 pop	 ebp
  00210	c2 04 00	 ret	 4
$LN3@MainFuncti:

; 306  : 		case 4:	this->DarkLordOff(lpObj);		break;

  00213	56		 push	 esi
  00214	8b cf		 mov	 ecx, edi
  00216	e8 00 00 00 00	 call	 ?DarkLordOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::DarkLordOff
  0021b	5f		 pop	 edi
  0021c	5e		 pop	 esi

; 309  : 	}
; 310  : }

  0021d	5d		 pop	 ebp
  0021e	c2 04 00	 ret	 4
$LN2@MainFuncti:

; 307  : 		case 5:	this->SummonerOff(lpObj);		break;

  00221	56		 push	 esi
  00222	8b cf		 mov	 ecx, edi
  00224	e8 00 00 00 00	 call	 ?SummonerOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::SummonerOff
  00229	5f		 pop	 edi
  0022a	5e		 pop	 esi

; 309  : 	}
; 310  : }

  0022b	5d		 pop	 ebp
  0022c	c2 04 00	 ret	 4
$LN1@MainFuncti:

; 308  : 		case 6: this->RageFighterOff(lpObj);	break;

  0022f	56		 push	 esi
  00230	8b cf		 mov	 ecx, edi
  00232	e8 00 00 00 00	 call	 ?RageFighterOff@cOffExp@@QAEXPAUOBJECTSTRUCT@@@Z ; cOffExp::RageFighterOff
$LN8@MainFuncti:
  00237	5f		 pop	 edi
  00238	5e		 pop	 esi

; 309  : 	}
; 310  : }

  00239	5d		 pop	 ebp
  0023a	c2 04 00	 ret	 4
  0023d	8d 49 00	 npad	 3
$LN55@MainFuncti:
  00240	00 00 00 00	 DD	 $LN7@MainFuncti
  00244	00 00 00 00	 DD	 $LN6@MainFuncti
  00248	00 00 00 00	 DD	 $LN5@MainFuncti
  0024c	00 00 00 00	 DD	 $LN4@MainFuncti
  00250	00 00 00 00	 DD	 $LN3@MainFuncti
  00254	00 00 00 00	 DD	 $LN2@MainFuncti
  00258	00 00 00 00	 DD	 $LN1@MainFuncti
?MainFunction@cOffExp@@QAEXH@Z ENDP			; cOffExp::MainFunction
_TEXT	ENDS
END
