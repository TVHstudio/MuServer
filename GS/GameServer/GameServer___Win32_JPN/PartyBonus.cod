; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\PartyBonus.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gPartyBonus@@3VPartyBonus@@A			; gPartyBonus
_BSS	SEGMENT
?gPartyBonus@@3VPartyBonus@@A DB 029cH DUP (?)		; gPartyBonus
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PartyBonus@@QAEXXZ			; PartyBonus::Init
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\partybonus.cpp
;	COMDAT ?Init@PartyBonus@@QAEXXZ
_TEXT	SEGMENT
?Init@PartyBonus@@QAEXXZ PROC				; PartyBonus::Init, COMDAT
; _this$ = ecx

; 12   : 	this->Enable = 0;

  00000	33 d2		 xor	 edx, edx
  00002	56		 push	 esi
  00003	89 11		 mov	 DWORD PTR [ecx], edx
  00005	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00008	8d 72 14	 lea	 esi, DWORD PTR [edx+20]
  0000b	eb 03 8d 49 00	 npad	 5
$LL3@Init:

; 13   : 	for (int i = 0; i < MAX_CLASS_BONUS; i++)
; 14   : 	{
; 15   : 		ClassBonus[i].dw = 0;

  00010	89 50 fc	 mov	 DWORD PTR [eax-4], edx

; 16   : 		ClassBonus[i].dk = 0;

  00013	89 10		 mov	 DWORD PTR [eax], edx

; 17   : 		ClassBonus[i].elf = 0;

  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 18   : 		ClassBonus[i].mg = 0;

  00018	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 19   : 		ClassBonus[i].dl = 0;

  0001b	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 20   : 		ClassBonus[i].sum = 0;

  0001e	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 21   : 		ClassBonus[i].rf = 0;

  00021	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 22   : 		ClassBonus[i].Bonus = 0;

  00024	89 50 18	 mov	 DWORD PTR [eax+24], edx
  00027	83 c0 20	 add	 eax, 32			; 00000020H
  0002a	4e		 dec	 esi
  0002b	75 e3		 jne	 SHORT $LL3@Init

; 23   : 	}
; 24   : 	this->nearbycount2  = 0;

  0002d	89 91 8c 02 00
	00		 mov	 DWORD PTR [ecx+652], edx

; 25   : 	this->nearbycount3  = 0;

  00033	89 91 90 02 00
	00		 mov	 DWORD PTR [ecx+656], edx

; 26   : 	this->nearbycount4  = 0;

  00039	89 91 94 02 00
	00		 mov	 DWORD PTR [ecx+660], edx

; 27   : 	this->nearbycount5  = 0;

  0003f	89 91 98 02 00
	00		 mov	 DWORD PTR [ecx+664], edx

; 28   : 	this->Count = 0;

  00045	89 91 84 02 00
	00		 mov	 DWORD PTR [ecx+644], edx
  0004b	5e		 pop	 esi

; 29   : 
; 30   : }

  0004c	c3		 ret	 0
?Init@PartyBonus@@QAEXXZ ENDP				; PartyBonus::Init
_TEXT	ENDS
PUBLIC	??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0N@EOPNENAN@nearbycount5?$AA@		; `string'
PUBLIC	??_C@_0N@FHOGHMEM@nearbycount4?$AA@		; `string'
PUBLIC	??_C@_0N@BIKHOKIL@nearbycount3?$AA@		; `string'
PUBLIC	??_C@_0N@BLMNLMK@nearbycount2?$AA@		; `string'
PUBLIC	??_C@_0N@CKJBIIAJ@nearbycount1?$AA@		; `string'
PUBLIC	??_C@_06CNKIADGI@ZtTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Load@PartyBonus@@QAEXXZ			; PartyBonus::Load
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Zt_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Zt_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@ DB 'LOAD FILE ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EOPNENAN@nearbycount5?$AA@
CONST	SEGMENT
??_C@_0N@EOPNENAN@nearbycount5?$AA@ DB 'nearbycount5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHOGHMEM@nearbycount4?$AA@
CONST	SEGMENT
??_C@_0N@FHOGHMEM@nearbycount4?$AA@ DB 'nearbycount4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIKHOKIL@nearbycount3?$AA@
CONST	SEGMENT
??_C@_0N@BIKHOKIL@nearbycount3?$AA@ DB 'nearbycount3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLMNLMK@nearbycount2?$AA@
CONST	SEGMENT
??_C@_0N@BLMNLMK@nearbycount2?$AA@ DB 'nearbycount2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKJBIIAJ@nearbycount1?$AA@
CONST	SEGMENT
??_C@_0N@CKJBIIAJ@nearbycount1?$AA@ DB 'nearbycount1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CNKIADGI@ZtTeam?$AA@
CONST	SEGMENT
??_C@_06CNKIADGI@ZtTeam?$AA@ DB 'ZtTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
CONST	SEGMENT
??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@ DB '..\Data\Z'
	DB	'tData\PartyBonus.ini', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@PartyBonus@@QAEXXZ
_TEXT	SEGMENT
_Flag$ = -296						; size = 4
_n$208968 = -292					; size = 32
_Buff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?Load@PartyBonus@@QAEXXZ PROC				; PartyBonus::Load, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	8b f1		 mov	 esi, ecx

; 34   : 	this->Init();

  00017	e8 00 00 00 00	 call	 ?Init@PartyBonus@@QAEXXZ ; PartyBonus::Init

; 35   : 
; 36   : 
; 37   : 	this->Enable = GetPrivateProfileInt("ZtTeam","Enable",0,PartyBonus_DIR);

  0001c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  00027	6a 00		 push	 0
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00033	ff d7		 call	 edi

; 38   : 	
; 39   : 	this->nearbycount1	= GetPrivateProfileInt("ZtTeam","nearbycount1",100,PartyBonus_DIR);

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  0003a	6a 64		 push	 100			; 00000064H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CKJBIIAJ@nearbycount1?$AA@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00046	89 06		 mov	 DWORD PTR [esi], eax
  00048	ff d7		 call	 edi

; 40   : 	this->nearbycount2	= GetPrivateProfileInt("ZtTeam","nearbycount2",100,PartyBonus_DIR);

  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  0004f	6a 64		 push	 100			; 00000064H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BLMNLMK@nearbycount2?$AA@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0005b	89 86 88 02 00
	00		 mov	 DWORD PTR [esi+648], eax
  00061	ff d7		 call	 edi

; 41   : 	this->nearbycount3  = GetPrivateProfileInt("ZtTeam","nearbycount3",100,PartyBonus_DIR);

  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  00068	6a 64		 push	 100			; 00000064H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BIKHOKIL@nearbycount3?$AA@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00074	89 86 8c 02 00
	00		 mov	 DWORD PTR [esi+652], eax
  0007a	ff d7		 call	 edi

; 42   : 	this->nearbycount4  = GetPrivateProfileInt("ZtTeam","nearbycount4",100,PartyBonus_DIR);

  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  00081	6a 64		 push	 100			; 00000064H
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FHOGHMEM@nearbycount4?$AA@
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0008d	89 86 90 02 00
	00		 mov	 DWORD PTR [esi+656], eax
  00093	ff d7		 call	 edi

; 43   : 	this->nearbycount5	= GetPrivateProfileInt("ZtTeam","nearbycount5",100,PartyBonus_DIR);

  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  0009a	6a 64		 push	 100			; 00000064H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EOPNENAN@nearbycount5?$AA@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000a6	89 86 94 02 00
	00		 mov	 DWORD PTR [esi+660], eax
  000ac	ff d7		 call	 edi

; 44   : 
; 45   : 	FILE * file = fopen(PartyBonus_DIR,"r");

  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  000b8	89 86 98 02 00
	00		 mov	 DWORD PTR [esi+664], eax
  000be	e8 00 00 00 00	 call	 _fopen
  000c3	8b f8		 mov	 edi, eax
  000c5	83 c4 08	 add	 esp, 8

; 46   : 	char Buff[256];
; 47   : 	int Flag = 0;

  000c8	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Flag$[ebp], 0

; 48   : 
; 49   : 	if(file == NULL)

  000d2	85 ff		 test	 edi, edi
  000d4	75 24		 jne	 SHORT $LN7@Load

; 50   : 	{
; 51   : 		MessageBoxA(0,PartyBonus_DIR,"LOAD FILE ERROR",0);

  000d6	50		 push	 eax
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DHFPDHMO@?4?4?2Data?2ZtData?2PartyBonus?4ini?$AA@
  000e1	50		 push	 eax
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 52   : 		this->Enable = false;

  000e8	89 3e		 mov	 DWORD PTR [esi], edi
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi

; 79   : 
; 80   : }

  000ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ef	33 cd		 xor	 ecx, ebp
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
$LN7@Load:

; 53   : 	}
; 54   : 
; 55   : 	if(!this->Enable) return;

  000fa	83 3e 00	 cmp	 DWORD PTR [esi], 0
  000fd	0f 84 68 01 00
	00		 je	 $LN8@Load

; 56   : 
; 57   : 	while(!feof(file))

  00103	53		 push	 ebx
  00104	57		 push	 edi
  00105	e8 00 00 00 00	 call	 _feof
  0010a	83 c4 04	 add	 esp, 4
  0010d	85 c0		 test	 eax, eax
  0010f	0f 85 4c 01 00
	00		 jne	 $LN4@Load
  00115	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  00118	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL5@Load:

; 58   : 	{
; 59   : 		fgets(Buff,256,file);

  00120	57		 push	 edi
  00121	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  00127	68 00 01 00 00	 push	 256			; 00000100H
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 _fgets

; 60   : 		if(Zt_IsBadFileLine(Buff, Flag))

  00132	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _Flag$[ebp]
  00138	51		 push	 ecx
  00139	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  0013f	52		 push	 edx
  00140	e8 00 00 00 00	 call	 ?Zt_IsBadFileLine@@YA_NPADAAH@Z ; Zt_IsBadFileLine
  00145	83 c4 14	 add	 esp, 20			; 00000014H
  00148	84 c0		 test	 al, al
  0014a	0f 85 00 01 00
	00		 jne	 $LN1@Load

; 61   : 			continue;
; 62   : 		if(Flag == 1)

  00150	39 9d d8 fe ff
	ff		 cmp	 DWORD PTR _Flag$[ebp], ebx
  00156	0f 85 f4 00 00
	00		 jne	 $LN1@Load

; 63   : 		{
; 64   : 			int n[8];
; 65   : 			sscanf(Buff, "%d %d %d %d %d %d %d %d" , &n[0], &n[1], &n[2], &n[3] , &n[4], &n[5], &n[6], &n[7]);

  0015c	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _n$208968[ebp+28]
  00162	50		 push	 eax
  00163	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _n$208968[ebp+24]
  00169	51		 push	 ecx
  0016a	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _n$208968[ebp+20]
  00170	52		 push	 edx
  00171	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _n$208968[ebp+16]
  00177	50		 push	 eax
  00178	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _n$208968[ebp+12]
  0017e	51		 push	 ecx
  0017f	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _n$208968[ebp+8]
  00185	52		 push	 edx
  00186	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _n$208968[ebp+4]
  0018c	50		 push	 eax
  0018d	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _n$208968[ebp]
  00193	51		 push	 ecx
  00194	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
  0019f	52		 push	 edx
  001a0	e8 00 00 00 00	 call	 _sscanf

; 66   : 			ClassBonus[this->Count].dw	=	n[0];

  001a5	8b 86 84 02 00
	00		 mov	 eax, DWORD PTR [esi+644]
  001ab	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _n$208968[ebp]
  001b1	c1 e0 05	 shl	 eax, 5
  001b4	89 4c 30 04	 mov	 DWORD PTR [eax+esi+4], ecx

; 67   : 			ClassBonus[this->Count].dk	=	n[1];

  001b8	8b 96 84 02 00
	00		 mov	 edx, DWORD PTR [esi+644]
  001be	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _n$208968[ebp+4]
  001c4	c1 e2 05	 shl	 edx, 5
  001c7	89 44 32 08	 mov	 DWORD PTR [edx+esi+8], eax

; 68   : 			ClassBonus[this->Count].elf	=	n[2];

  001cb	8b 8e 84 02 00
	00		 mov	 ecx, DWORD PTR [esi+644]
  001d1	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _n$208968[ebp+8]
  001d7	c1 e1 05	 shl	 ecx, 5
  001da	89 54 31 0c	 mov	 DWORD PTR [ecx+esi+12], edx

; 69   : 			ClassBonus[this->Count].mg	=	n[3];

  001de	8b 86 84 02 00
	00		 mov	 eax, DWORD PTR [esi+644]
  001e4	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _n$208968[ebp+12]
  001ea	c1 e0 05	 shl	 eax, 5
  001ed	89 4c 30 10	 mov	 DWORD PTR [eax+esi+16], ecx

; 70   : 			ClassBonus[this->Count].dl	=	n[4];

  001f1	8b 96 84 02 00
	00		 mov	 edx, DWORD PTR [esi+644]
  001f7	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _n$208968[ebp+16]
  001fd	c1 e2 05	 shl	 edx, 5
  00200	89 44 32 14	 mov	 DWORD PTR [edx+esi+20], eax

; 71   : 			ClassBonus[this->Count].sum	=	n[5];

  00204	8b 8e 84 02 00
	00		 mov	 ecx, DWORD PTR [esi+644]
  0020a	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _n$208968[ebp+20]
  00210	c1 e1 05	 shl	 ecx, 5
  00213	89 54 31 18	 mov	 DWORD PTR [ecx+esi+24], edx

; 72   : 			ClassBonus[this->Count].rf	=	n[6];

  00217	8b 86 84 02 00
	00		 mov	 eax, DWORD PTR [esi+644]
  0021d	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _n$208968[ebp+24]
  00223	c1 e0 05	 shl	 eax, 5
  00226	89 4c 30 1c	 mov	 DWORD PTR [eax+esi+28], ecx

; 73   : 			ClassBonus[this->Count].Bonus	=	n[7];

  0022a	8b 96 84 02 00
	00		 mov	 edx, DWORD PTR [esi+644]
  00230	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _n$208968[ebp+28]
  00236	03 d3		 add	 edx, ebx
  00238	c1 e2 05	 shl	 edx, 5
  0023b	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 74   : 			this->Count++;

  0023e	01 9e 84 02 00
	00		 add	 DWORD PTR [esi+644], ebx
  00244	83 c4 28	 add	 esp, 40			; 00000028H

; 75   : 			if (this->Count >= MAX_CLASS_BONUS) return;

  00247	83 be 84 02 00
	00 14		 cmp	 DWORD PTR [esi+644], 20	; 00000014H
  0024e	7d 1a		 jge	 SHORT $LN13@Load
$LN1@Load:

; 56   : 
; 57   : 	while(!feof(file))

  00250	57		 push	 edi
  00251	e8 00 00 00 00	 call	 _feof
  00256	83 c4 04	 add	 esp, 4
  00259	85 c0		 test	 eax, eax
  0025b	0f 84 bf fe ff
	ff		 je	 $LL5@Load
$LN4@Load:

; 76   : 		}
; 77   : 	}
; 78   : 	fclose(file);

  00261	57		 push	 edi
  00262	e8 00 00 00 00	 call	 _fclose
  00267	83 c4 04	 add	 esp, 4
$LN13@Load:
  0026a	5b		 pop	 ebx
$LN8@Load:

; 79   : 
; 80   : }

  0026b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0026e	5f		 pop	 edi
  0026f	33 cd		 xor	 ecx, ebp
  00271	5e		 pop	 esi
  00272	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00277	8b e5		 mov	 esp, ebp
  00279	5d		 pop	 ebp
  0027a	c3		 ret	 0
?Load@PartyBonus@@QAEXXZ ENDP				; PartyBonus::Load
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ; PartyBonus::ExpNearbyCount
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	?gAddExperience@@3MA:DWORD			; gAddExperience
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Ogtp
;	COMDAT ?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
_ViewCount$ = -48					; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
_viewplayer$ = 16					; size = 4
?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z PROC ; PartyBonus::ExpNearbyCount, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00013	53		 push	 ebx
  00014	8b 5d 0c	 mov	 ebx, DWORD PTR _lpTargetObj$[ebp]
  00017	56		 push	 esi

; 84   : 	if(!this->Enable) return gAddExperience;

  00018	33 f6		 xor	 esi, esi
  0001a	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	39 31		 cmp	 DWORD PTR [ecx], esi
  0001f	75 1d		 jne	 SHORT $LN14@ExpNearbyC
  00021	d9 05 00 00 00
	00		 fld	 DWORD PTR ?gAddExperience@@3MA ; gAddExperience
  00027	e8 00 00 00 00	 call	 __ftol2_sse
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx

; 133  : }

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00031	33 cd		 xor	 ecx, ebp
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
$LN14@ExpNearbyC:
  0003e	57		 push	 edi

; 85   : 	
; 86   : 	LPOBJ lpPartyObj;
; 87   : 	int dis[MAX_USER_IN_PARTY];
; 88   : 
; 89   : 	
; 90   : 	int partynum = lpObj->PartyNumber;

  0003f	8b b8 2c 04 00
	00		 mov	 edi, DWORD PTR [eax+1068]
  00045	6b ff 68	 imul	 edi, 104		; 00000068H

; 91   : 	
; 92   : 	int number = 0;
; 93   : 	int ViewCount = 0;

  00048	89 75 d0	 mov	 DWORD PTR _ViewCount$[ebp], esi
  0004b	81 c7 0c 00 00
	00		 add	 edi, OFFSET ?gParty@@3VPartyClass@@A+12
$LL22@ExpNearbyC:

; 96   : 	{
; 97   : 		number = gParty.m_PartyS[partynum].Number[n];

  00051	8b 07		 mov	 eax, DWORD PTR [edi]

; 98   : 		if(number >= 0)

  00053	85 c0		 test	 eax, eax
  00055	78 2f		 js	 SHORT $LN12@ExpNearbyC

; 99   : 		{
; 100  : 
; 101  : 			lpPartyObj = &gObj[number];
; 102  : 			
; 103  : 			if(lpTargetObj->MapNumber == lpPartyObj->MapNumber)

  00057	8a 93 49 01 00
	00		 mov	 dl, BYTE PTR [ebx+329]
  0005d	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00063	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00069	3a 90 49 01 00
	00		 cmp	 dl, BYTE PTR [eax+329]
  0006f	75 15		 jne	 SHORT $LN12@ExpNearbyC

; 104  : 			{
; 105  : 				dis[n] = gObjCalDistance(lpTargetObj,&gObj[number]);

  00071	50		 push	 eax
  00072	53		 push	 ebx
  00073	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance

; 106  : 
; 107  : 				if(dis[n] < 10)
; 108  : 				{
; 109  : 					ViewCount++;

  00078	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	83 c4 08	 add	 esp, 8
  0007e	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00081	7d 03		 jge	 SHORT $LN12@ExpNearbyC
  00083	ff 45 d0	 inc	 DWORD PTR _ViewCount$[ebp]
$LN12@ExpNearbyC:

; 94   : 
; 95   : 	for(int n = 0; n < MAX_USER_IN_PARTY; n++)

  00086	46		 inc	 esi
  00087	83 c7 04	 add	 edi, 4
  0008a	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0008d	7c c2		 jl	 SHORT $LL22@ExpNearbyC

; 110  : 				}
; 111  : 			}
; 112  : 		}
; 113  : 	}
; 114  : 
; 115  : 
; 116  : 	if (ViewCount == 2)	

  0008f	8b 45 d0	 mov	 eax, DWORD PTR _ViewCount$[ebp]
  00092	5f		 pop	 edi
  00093	83 f8 02	 cmp	 eax, 2
  00096	75 18		 jne	 SHORT $LN7@ExpNearbyC

; 117  : 	{
; 118  : 		return int(nearbycount2);

  00098	8b 81 8c 02 00
	00		 mov	 eax, DWORD PTR [ecx+652]
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx

; 133  : }

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	33 cd		 xor	 ecx, ebp
  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 0c 00	 ret	 12			; 0000000cH
$LN7@ExpNearbyC:

; 119  : 	}
; 120  : 	else if (ViewCount == 3)

  000b0	83 f8 03	 cmp	 eax, 3
  000b3	75 18		 jne	 SHORT $LN5@ExpNearbyC

; 121  : 	{
; 122  : 		return int(nearbycount3);

  000b5	8b 81 90 02 00
	00		 mov	 eax, DWORD PTR [ecx+656]
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx

; 133  : }

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c0	33 cd		 xor	 ecx, ebp
  000c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 0c 00	 ret	 12			; 0000000cH
$LN5@ExpNearbyC:

; 123  : 	}
; 124  : 	else if (ViewCount == 4)

  000cd	83 f8 04	 cmp	 eax, 4
  000d0	75 18		 jne	 SHORT $LN3@ExpNearbyC

; 125  : 	{
; 126  : 		return int(nearbycount4);

  000d2	8b 81 94 02 00
	00		 mov	 eax, DWORD PTR [ecx+660]
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx

; 133  : }

  000da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000dd	33 cd		 xor	 ecx, ebp
  000df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 0c 00	 ret	 12			; 0000000cH
$LN3@ExpNearbyC:

; 127  : 	}
; 128  : 	else if (ViewCount >= 5)

  000ea	83 f8 05	 cmp	 eax, 5
  000ed	7c 18		 jl	 SHORT $LN1@ExpNearbyC

; 129  : 	{
; 130  : 		return int(nearbycount5);

  000ef	8b 81 98 02 00
	00		 mov	 eax, DWORD PTR [ecx+664]
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 133  : }

  000f7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fa	33 cd		 xor	 ecx, ebp
  000fc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 0c 00	 ret	 12			; 0000000cH
$LN1@ExpNearbyC:

; 131  : 	}
; 132  : 	return this->nearbycount1;

  00107	8b 81 88 02 00
	00		 mov	 eax, DWORD PTR [ecx+648]

; 133  : }

  0010d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00110	5e		 pop	 esi
  00111	33 cd		 xor	 ecx, ebp
  00113	5b		 pop	 ebx
  00114	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c2 0c 00	 ret	 12			; 0000000cH
?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ENDP ; PartyBonus::ExpNearbyCount
_TEXT	ENDS
PUBLIC	_lpTargetObj$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ; PartyBonus::ExpClassBonus
; Function compile flags: /Ogtp
;	COMDAT ?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z
_TEXT	SEGMENT
_lpTargetObj$GSCopy$ = -80				; size = 4
_this$ = -76						; size = 4
_elfCount$ = -72					; size = 4
_dkCount$ = -68						; size = 4
_dwCount$ = -64						; size = 4
_mgCount$ = -60						; size = 4
_rfCount$ = -56						; size = 4
_sumCount$ = -52					; size = 4
_dlCount$ = -48						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
_viewplayer$ = 16					; size = 4
?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z PROC ; PartyBonus::ExpClassBonus, COMDAT
; _this$ = ecx

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 0c	 mov	 edx, DWORD PTR _lpTargetObj$[ebp]
  00013	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00016	56		 push	 esi

; 137  : 	if(!this->Enable) return false;

  00017	33 f6		 xor	 esi, esi
  00019	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 	
; 153  : 	for(int n = 0; n < MAX_USER_IN_PARTY; n++)

  0001c	89 55 b0	 mov	 DWORD PTR _lpTargetObj$GSCopy$[ebp], edx
  0001f	39 31		 cmp	 DWORD PTR [ecx], esi
  00021	75 13		 jne	 SHORT $LN30@ExpClassBo

; 137  : 	if(!this->Enable) return false;

  00023	33 c0		 xor	 eax, eax
  00025	5e		 pop	 esi

; 212  : 			
; 213  : }

  00026	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00029	33 cd		 xor	 ecx, ebp
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
$LN30@ExpClassBo:
  00036	53		 push	 ebx

; 143  : 	int dkCount = 0;
; 144  : 	int elfCount = 0;
; 145  : 	int mgCount = 0;
; 146  : 	int dlCount = 0;
; 147  : 	int sumCount = 0;
; 148  : 	int rfCount = 0;
; 149  : 	int number = 0;
; 150  : 
; 151  : 	int partynum = lpObj->PartyNumber;

  00037	8b 98 2c 04 00
	00		 mov	 ebx, DWORD PTR [eax+1068]
  0003d	6b db 68	 imul	 ebx, 104		; 00000068H
  00040	57		 push	 edi

; 152  : 	
; 153  : 	for(int n = 0; n < MAX_USER_IN_PARTY; n++)

  00041	33 ff		 xor	 edi, edi
  00043	89 75 c0	 mov	 DWORD PTR _dwCount$[ebp], esi
  00046	89 75 bc	 mov	 DWORD PTR _dkCount$[ebp], esi
  00049	89 75 b8	 mov	 DWORD PTR _elfCount$[ebp], esi
  0004c	89 75 c4	 mov	 DWORD PTR _mgCount$[ebp], esi
  0004f	89 75 d0	 mov	 DWORD PTR _dlCount$[ebp], esi
  00052	89 75 cc	 mov	 DWORD PTR _sumCount$[ebp], esi
  00055	89 75 c8	 mov	 DWORD PTR _rfCount$[ebp], esi
  00058	81 c3 0c 00 00
	00		 add	 ebx, OFFSET ?gParty@@3VPartyClass@@A+12
  0005e	eb 05		 jmp	 SHORT $LN29@ExpClassBo
$LL41@ExpClassBo:

; 138  : 
; 139  : 	LPOBJ lpPartyObj;
; 140  : 	int dis[MAX_USER_IN_PARTY];
; 141  : 	
; 142  : 	int dwCount = 0;

  00060	8b 55 b0	 mov	 edx, DWORD PTR _lpTargetObj$GSCopy$[ebp]
  00063	33 f6		 xor	 esi, esi
$LN29@ExpClassBo:

; 154  : 	{
; 155  : 		number = gParty.m_PartyS[partynum].Number[n];

  00065	8b 03		 mov	 eax, DWORD PTR [ebx]

; 156  : 		if(number >= 0)

  00067	3b c6		 cmp	 eax, esi
  00069	7c 7c		 jl	 SHORT $LN28@ExpClassBo

; 157  : 		{
; 158  : 			lpPartyObj = &gObj[number];

  0006b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00071	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00077	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]

; 159  : 			
; 160  : 			if(lpTargetObj->MapNumber == lpPartyObj->MapNumber)

  0007a	8a 82 49 01 00
	00		 mov	 al, BYTE PTR [edx+329]
  00080	3a 86 49 01 00
	00		 cmp	 al, BYTE PTR [esi+329]
  00086	75 5f		 jne	 SHORT $LN28@ExpClassBo

; 161  : 			{
; 162  : 				dis[n] = gObjCalDistance(lpTargetObj,&gObj[number]);

  00088	56		 push	 esi
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0008f	83 c4 08	 add	 esp, 8

; 163  : 
; 164  : 				if(dis[n] < 10)

  00092	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00095	7d 50		 jge	 SHORT $LN28@ExpClassBo

; 165  : 				{
; 166  : 					if (lpPartyObj->Class == CLASS_WIZARD)

  00097	0f b7 86 b8 00
	00 00		 movzx	 eax, WORD PTR [esi+184]
  0009e	66 85 c0	 test	 ax, ax
  000a1	75 05		 jne	 SHORT $LN23@ExpClassBo

; 167  : 					{
; 168  : 						dwCount++;

  000a3	ff 45 c0	 inc	 DWORD PTR _dwCount$[ebp]
  000a6	eb 3f		 jmp	 SHORT $LN28@ExpClassBo
$LN23@ExpClassBo:

; 169  : 					}	
; 170  : 					else if (lpPartyObj->Class == CLASS_KNIGHT)

  000a8	b9 01 00 00 00	 mov	 ecx, 1
  000ad	66 3b c1	 cmp	 ax, cx
  000b0	75 05		 jne	 SHORT $LN21@ExpClassBo

; 171  : 					{
; 172  : 						dkCount++;

  000b2	01 4d bc	 add	 DWORD PTR _dkCount$[ebp], ecx
  000b5	eb 30		 jmp	 SHORT $LN28@ExpClassBo
$LN21@ExpClassBo:

; 173  : 					}
; 174  : 					else if (lpPartyObj->Class == CLASS_ELF)

  000b7	83 f8 02	 cmp	 eax, 2
  000ba	75 05		 jne	 SHORT $LN19@ExpClassBo

; 175  : 					{
; 176  : 						elfCount++;

  000bc	01 4d b8	 add	 DWORD PTR _elfCount$[ebp], ecx
  000bf	eb 26		 jmp	 SHORT $LN28@ExpClassBo
$LN19@ExpClassBo:

; 177  : 					}
; 178  : 					else if(lpPartyObj->Class == CLASS_MAGUMSA)

  000c1	83 f8 03	 cmp	 eax, 3
  000c4	75 05		 jne	 SHORT $LN17@ExpClassBo

; 179  : 					{
; 180  : 						mgCount++;

  000c6	01 4d c4	 add	 DWORD PTR _mgCount$[ebp], ecx
  000c9	eb 1c		 jmp	 SHORT $LN28@ExpClassBo
$LN17@ExpClassBo:

; 181  : 					}
; 182  : 					else if(lpPartyObj->Class == CLASS_DARKLORD)

  000cb	83 f8 04	 cmp	 eax, 4
  000ce	75 05		 jne	 SHORT $LN15@ExpClassBo

; 183  : 					{
; 184  : 						dlCount++;

  000d0	01 4d d0	 add	 DWORD PTR _dlCount$[ebp], ecx
  000d3	eb 12		 jmp	 SHORT $LN28@ExpClassBo
$LN15@ExpClassBo:

; 185  : 					}
; 186  : 					else if (lpPartyObj->Class == CLASS_SUMMONER)

  000d5	83 f8 05	 cmp	 eax, 5
  000d8	75 05		 jne	 SHORT $LN13@ExpClassBo

; 187  : 					{
; 188  : 						sumCount++;

  000da	01 4d cc	 add	 DWORD PTR _sumCount$[ebp], ecx
  000dd	eb 08		 jmp	 SHORT $LN28@ExpClassBo
$LN13@ExpClassBo:

; 189  : 					}
; 190  : 					else if (lpPartyObj->Class == CLASS_MONK)

  000df	83 f8 06	 cmp	 eax, 6
  000e2	75 03		 jne	 SHORT $LN28@ExpClassBo

; 191  : 					{
; 192  : 						rfCount++;

  000e4	01 4d c8	 add	 DWORD PTR _rfCount$[ebp], ecx
$LN28@ExpClassBo:

; 152  : 	
; 153  : 	for(int n = 0; n < MAX_USER_IN_PARTY; n++)

  000e7	47		 inc	 edi
  000e8	83 c3 04	 add	 ebx, 4
  000eb	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  000ee	0f 8c 6c ff ff
	ff		 jl	 $LL41@ExpClassBo

; 193  : 					}
; 194  : 				}
; 195  : 			}
; 196  : 		}
; 197  : 	}
; 198  : 	for (int i = 0; i < this->Count; i++)

  000f4	8b 55 b4	 mov	 edx, DWORD PTR _this$[ebp]
  000f7	8b 92 84 02 00
	00		 mov	 edx, DWORD PTR [edx+644]
  000fd	33 c9		 xor	 ecx, ecx
  000ff	85 d2		 test	 edx, edx
  00101	7e 4c		 jle	 SHORT $LN8@ExpClassBo
  00103	8b 75 b4	 mov	 esi, DWORD PTR _this$[ebp]
  00106	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00109	8d a4 24 00 00
	00 00		 npad	 7
$LL10@ExpClassBo:

; 199  : 	{
; 200  : 		if (ClassBonus[i].dw == dwCount)

  00110	8b 7d c0	 mov	 edi, DWORD PTR _dwCount$[ebp]
  00113	39 78 fc	 cmp	 DWORD PTR [eax-4], edi
  00116	75 2f		 jne	 SHORT $LN9@ExpClassBo

; 201  : 			if (ClassBonus[i].dk == dkCount)

  00118	8b 7d bc	 mov	 edi, DWORD PTR _dkCount$[ebp]
  0011b	39 38		 cmp	 DWORD PTR [eax], edi
  0011d	75 28		 jne	 SHORT $LN9@ExpClassBo

; 202  : 				if (ClassBonus[i].elf == elfCount)

  0011f	8b 7d b8	 mov	 edi, DWORD PTR _elfCount$[ebp]
  00122	39 78 04	 cmp	 DWORD PTR [eax+4], edi
  00125	75 20		 jne	 SHORT $LN9@ExpClassBo

; 203  : 					if (ClassBonus[i].mg == mgCount)

  00127	8b 7d c4	 mov	 edi, DWORD PTR _mgCount$[ebp]
  0012a	39 78 08	 cmp	 DWORD PTR [eax+8], edi
  0012d	75 18		 jne	 SHORT $LN9@ExpClassBo

; 204  : 						if (ClassBonus[i].dl == dlCount)

  0012f	8b 7d d0	 mov	 edi, DWORD PTR _dlCount$[ebp]
  00132	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  00135	75 10		 jne	 SHORT $LN9@ExpClassBo

; 205  : 							if (ClassBonus[i].sum == sumCount)

  00137	8b 7d cc	 mov	 edi, DWORD PTR _sumCount$[ebp]
  0013a	39 78 10	 cmp	 DWORD PTR [eax+16], edi
  0013d	75 08		 jne	 SHORT $LN9@ExpClassBo

; 206  : 								if (ClassBonus[i].rf == rfCount)

  0013f	8b 7d c8	 mov	 edi, DWORD PTR _rfCount$[ebp]
  00142	39 78 14	 cmp	 DWORD PTR [eax+20], edi
  00145	74 20		 je	 SHORT $LN35@ExpClassBo
$LN9@ExpClassBo:

; 193  : 					}
; 194  : 				}
; 195  : 			}
; 196  : 		}
; 197  : 	}
; 198  : 	for (int i = 0; i < this->Count; i++)

  00147	41		 inc	 ecx
  00148	83 c0 20	 add	 eax, 32			; 00000020H
  0014b	3b ca		 cmp	 ecx, edx
  0014d	7c c1		 jl	 SHORT $LL10@ExpClassBo
$LN8@ExpClassBo:
  0014f	5f		 pop	 edi
  00150	5b		 pop	 ebx

; 209  : 								}
; 210  : 	}
; 211  : 	return 100;

  00151	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00156	5e		 pop	 esi

; 212  : 			
; 213  : }

  00157	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015a	33 cd		 xor	 ecx, ebp
  0015c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 0c 00	 ret	 12			; 0000000cH
$LN35@ExpClassBo:

; 207  : 								{
; 208  : 									return int(ClassBonus[i].Bonus);

  00167	41		 inc	 ecx
  00168	c1 e1 05	 shl	 ecx, 5
  0016b	8b 04 31	 mov	 eax, DWORD PTR [ecx+esi]

; 212  : 			
; 213  : }

  0016e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00171	5f		 pop	 edi
  00172	5b		 pop	 ebx
  00173	33 cd		 xor	 ecx, ebp
  00175	5e		 pop	 esi
  00176	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017b	8b e5		 mov	 esp, ebp
  0017d	5d		 pop	 ebp
  0017e	c2 0c 00	 ret	 12			; 0000000cH
?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ENDP ; PartyBonus::ExpClassBonus
_TEXT	ENDS
PUBLIC	?isEnable@PartyBonus@@QAE_NH@Z			; PartyBonus::isEnable
; Function compile flags: /Ogtp
;	COMDAT ?isEnable@PartyBonus@@QAE_NH@Z
_TEXT	SEGMENT
_viewplayer$ = 8					; size = 4
?isEnable@PartyBonus@@QAE_NH@Z PROC			; PartyBonus::isEnable, COMDAT
; _this$ = ecx

; 217  : 	if(!this->Enable) return false;

  00000	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00003	0f 95 c0	 setne	 al

; 218  : 	else return true;
; 219  : }

  00006	c2 04 00	 ret	 4
?isEnable@PartyBonus@@QAE_NH@Z ENDP			; PartyBonus::isEnable
_TEXT	ENDS
END
