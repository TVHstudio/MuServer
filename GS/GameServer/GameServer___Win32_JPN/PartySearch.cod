; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\PartySearch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_PartySearch@@3VPartySearch@@A		; g_PartySearch
_BSS	SEGMENT
?g_PartySearch@@3VPartySearch@@A DB 015f4H DUP (?)	; g_PartySearch
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PartySearch@@QAEXXZ			; PartySearch::Init
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\partysearch.cpp
;	COMDAT ?Init@PartySearch@@QAEXXZ
_TEXT	SEGMENT
?Init@PartySearch@@QAEXXZ PROC				; PartySearch::Init, COMDAT
; _this$ = ecx

; 17   : 	this->ActiveSystem = false;	//Active System
; 18   : 	ZeroMemory(&this->Party,sizeof(this->Party));

  00000	68 e0 15 00 00	 push	 5600			; 000015e0H
  00005	c6 01 00	 mov	 BYTE PTR [ecx], 0
  00008	83 c1 14	 add	 ecx, 20			; 00000014H
  0000b	6a 00		 push	 0
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 _memset
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 19   : }

  00016	c3		 ret	 0
?Init@PartySearch@@QAEXXZ ENDP				; PartySearch::Init
_TEXT	ENDS
PUBLIC	??_C@_05MGEEICMI@NPC_Y?$AA@			; `string'
PUBLIC	??_C@_05NPFPLDIJ@NPC_X?$AA@			; `string'
PUBLIC	??_C@_07BEANADGF@NPC_MAP?$AA@			; `string'
PUBLIC	??_C@_09FENANBBA@NPC_CLASS?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_0N@ENJHELDG@ActiveSystem?$AA@		; `string'
PUBLIC	?Read@PartySearch@@QAEXPAD@Z			; PartySearch::Read
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	?CheckFile@@YA_NPAD@Z:PROC			; CheckFile
;	COMDAT ??_C@_05MGEEICMI@NPC_Y?$AA@
CONST	SEGMENT
??_C@_05MGEEICMI@NPC_Y?$AA@ DB 'NPC_Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPFPLDIJ@NPC_X?$AA@
CONST	SEGMENT
??_C@_05NPFPLDIJ@NPC_X?$AA@ DB 'NPC_X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEANADGF@NPC_MAP?$AA@
CONST	SEGMENT
??_C@_07BEANADGF@NPC_MAP?$AA@ DB 'NPC_MAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FENANBBA@NPC_CLASS?$AA@
CONST	SEGMENT
??_C@_09FENANBBA@NPC_CLASS?$AA@ DB 'NPC_CLASS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENJHELDG@ActiveSystem?$AA@
CONST	SEGMENT
??_C@_0N@ENJHELDG@ActiveSystem?$AA@ DB 'ActiveSystem', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Read@PartySearch@@QAEXPAD@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
?Read@PartySearch@@QAEXPAD@Z PROC			; PartySearch::Read, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 36   : 	CheckFile(File);

  00006	8b 7d 08	 mov	 edi, DWORD PTR _File$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?CheckFile@@YA_NPAD@Z	; CheckFile

; 37   : 
; 38   : 	this->ActiveSystem = GetPrivateProfileInt("Common", "ActiveSystem", 0, File);

  00011	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetPrivateProfileIntA@16
  00017	83 c4 04	 add	 esp, 4
  0001a	57		 push	 edi
  0001b	6a 00		 push	 0
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ENJHELDG@ActiveSystem?$AA@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00027	ff d3		 call	 ebx

; 39   : 
; 40   : 	this->NPC_CLASS = GetPrivateProfileInt("Common", "NPC_CLASS", 0, File);

  00029	57		 push	 edi
  0002a	6a 00		 push	 0
  0002c	85 c0		 test	 eax, eax
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_09FENANBBA@NPC_CLASS?$AA@
  00033	0f 95 c0	 setne	 al
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0003b	88 06		 mov	 BYTE PTR [esi], al
  0003d	ff d3		 call	 ebx

; 41   : 	this->NPC_MAP = GetPrivateProfileInt("Common", "NPC_MAP", 0, File);

  0003f	57		 push	 edi
  00040	6a 00		 push	 0
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_07BEANADGF@NPC_MAP?$AA@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0004c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0004f	ff d3		 call	 ebx

; 42   : 	this->NPC_X = GetPrivateProfileInt("Common", "NPC_X", 0, File);

  00051	57		 push	 edi
  00052	6a 00		 push	 0
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_05NPFPLDIJ@NPC_X?$AA@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0005e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00061	ff d3		 call	 ebx

; 43   : 	this->NPC_Y = GetPrivateProfileInt("Common", "NPC_Y", 0, File);

  00063	57		 push	 edi
  00064	6a 00		 push	 0
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_05MGEEICMI@NPC_Y?$AA@
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00070	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00073	ff d3		 call	 ebx
  00075	5f		 pop	 edi
  00076	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx

; 44   : }

  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
?Read@PartySearch@@QAEXPAD@Z ENDP			; PartySearch::Read
_TEXT	ENDS
PUBLIC	?NPC_Dialod@PartySearch@@QAE_NHH@Z		; PartySearch::NPC_Dialod
; Function compile flags: /Ogtp
;	COMDAT ?NPC_Dialod@PartySearch@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NPC_Dialod@PartySearch@@QAE_NHH@Z PROC			; PartySearch::NPC_Dialod, COMDAT
; _this$ = ecx

; 49   : 	return false;

  00000	32 c0		 xor	 al, al

; 50   : 	/*
; 51   : 	if(!this->ActiveSystem)
; 52   : 	{
; 53   :  		return false;
; 54   : 	}
; 55   : 
; 56   : 	if(!gObjIsConnectedZt(aIndex))
; 57   : 	{
; 58   : 		return false;
; 59   : 	}
; 60   : 
; 61   : 	LPOBJ lpUser = &gObj[aIndex];
; 62   : 	LPOBJ lpNpc = &gObj[aNpcIndex];
; 63   : 
; 64   : 	if(		lpNpc->Class		== this->NPC_CLASS 
; 65   : 		&&	lpNpc->MapNumber	== this->NPC_MAP
; 66   : 		&&	lpNpc->X			== this->NPC_X
; 67   : 		&&	lpNpc->Y			== this->NPC_Y )
; 68   : 	{
; 69   : 		this->Search(lpUser->m_Index);
; 70   : 		return true;
; 71   : 	}
; 72   : 	// ----
; 73   : 	return false;
; 74   : 	*/
; 75   : }

  00002	c2 08 00	 ret	 8
?NPC_Dialod@PartySearch@@QAE_NHH@Z ENDP			; PartySearch::NPC_Dialod
_TEXT	ENDS
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?Search@PartySearch@@QAEXH@Z			; PartySearch::Search
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?GetCount@PartyClass@@QAEHH@Z:PROC		; PartyClass::GetCount
EXTRN	_strncpy:PROC
EXTRN	?Isleader@PartyClass@@QAEHHHH@Z:PROC		; PartyClass::Isleader
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedZt@@YA_NH@Z:PROC		; gObjIsConnectedZt
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Search@PartySearch@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$GSCopy$ = -5048					; size = 4
_datasize$ = -5044					; size = 4
_n$209391 = -5040					; size = 4
_icount$ = -5033					; size = 1
_ap$209401 = -5032					; size = 28
_SendBuff$ = -5004					; size = 5000
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?Search@PartySearch@@QAEXH@Z PROC			; PartySearch::Search, COMDAT
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 b8 13 00 00	 mov	 eax, 5048		; 000013b8H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]

; 80   : 	if(!this->ActiveSystem)

  0001c	33 db		 xor	 ebx, ebx

; 100  : 
; 101  : 	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  0001e	89 b5 48 ec ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], esi
  00024	38 19		 cmp	 BYTE PTR [ecx], bl
  00026	0f 84 e5 04 00
	00		 je	 $LN43@Search

; 81   : 	{
; 82   : 		return;
; 83   : 	}
; 84   : 
; 85   : 	if(!gObjIsConnectedZt(aIndex))

  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00032	83 c4 04	 add	 esp, 4
  00035	84 c0		 test	 al, al
  00037	0f 84 d4 04 00
	00		 je	 $LN43@Search

; 86   : 	{
; 87   : 		return;
; 88   : 	}
; 89   : 
; 90   : 	LPOBJ lpUser = &gObj[aIndex];

  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00043	8b c6		 mov	 eax, esi
  00045	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 91   : 
; 92   : 	if(lpUser->OffTrade != 0 || lpUser->OffExp!=0)

  0004b	39 9c 10 ac 22
	00 00		 cmp	 DWORD PTR [eax+edx+8876], ebx
  00052	0f 85 b9 04 00
	00		 jne	 $LN43@Search
  00058	39 9c 10 98 22
	00 00		 cmp	 DWORD PTR [eax+edx+8856], ebx
  0005f	0f 85 ac 04 00
	00		 jne	 $LN43@Search

; 93   : 	{
; 94   : 		return;
; 95   : 	}
; 96   : 
; 97   : 	BYTE SendBuff[5000];
; 98   : 	int datasize = 6;

  00065	c7 85 4c ec ff
	ff 06 00 00 00	 mov	 DWORD PTR _datasize$[ebp], 6

; 99   : 	BYTE icount = 0;

  0006f	88 9d 57 ec ff
	ff		 mov	 BYTE PTR _icount$[ebp], bl

; 100  : 
; 101  : 	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  00075	c7 85 50 ec ff
	ff b0 36 00 00	 mov	 DWORD PTR _n$209391[ebp], 14000 ; 000036b0H
  0007f	57		 push	 edi
$LL42@Search:

; 102  : 	{
; 103  : 		LPOBJ lpSearch = &gObj[n];

  00080	8b b5 50 ec ff
	ff		 mov	 esi, DWORD PTR _n$209391[ebp]
  00086	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0008c	03 f2		 add	 esi, edx

; 104  : 		if(lpSearch->Connected < PLAYER_PLAYING || !lpSearch->pt_Active) 

  0008e	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00092	0f 8c 16 04 00
	00		 jl	 $LN41@Search
  00098	38 9e 7c 28 00
	00		 cmp	 BYTE PTR [esi+10364], bl
  0009e	0f 84 0a 04 00
	00		 je	 $LN41@Search

; 105  : 		{
; 106  : 			continue;
; 107  : 		}
; 108  : 
; 109  : 		int partynum = lpSearch->PartyNumber;

  000a4	8b be 2c 04 00
	00		 mov	 edi, DWORD PTR [esi+1068]

; 110  : 		if(partynum >= 0)

  000aa	3b fb		 cmp	 edi, ebx
  000ac	7c 1e		 jl	 SHORT $LN36@Search

; 111  : 		{
; 112  : 			if( !gParty.Isleader(gObj[n].PartyNumber, n, gObj[n].DBNumber) )

  000ae	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  000b1	8b 95 50 ec ff
	ff		 mov	 edx, DWORD PTR _n$209391[ebp]
  000b7	51		 push	 ecx
  000b8	52		 push	 edx
  000b9	57		 push	 edi
  000ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  000bf	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  000c4	85 c0		 test	 eax, eax
  000c6	0f 84 dc 03 00
	00		 je	 $LN83@Search
$LN36@Search:

; 113  : 			{
; 114  : 				continue;
; 115  : 			}
; 116  : 		}
; 117  : 		
; 118  : 
; 119  : 		AutoParty_DATA ap;
; 120  : 		ap.Index = n;

  000cc	0f b7 8d 50 ec
	ff ff		 movzx	 ecx, WORD PTR _n$209391[ebp]

; 121  : 		strncpy(ap.Name, lpSearch->Name, 10);

  000d3	6a 0a		 push	 10			; 0000000aH
  000d5	8d 56 77	 lea	 edx, DWORD PTR [esi+119]
  000d8	52		 push	 edx
  000d9	8d 85 5a ec ff
	ff		 lea	 eax, DWORD PTR _ap$209401[ebp+2]
  000df	50		 push	 eax
  000e0	66 89 8d 58 ec
	ff ff		 mov	 WORD PTR _ap$209401[ebp], cx
  000e7	e8 00 00 00 00	 call	 _strncpy

; 122  : 		ap.Level = lpSearch->pt_MaxLevel;

  000ec	0f b7 8e 7e 28
	00 00		 movzx	 ecx, WORD PTR [esi+10366]
  000f3	66 89 8d 66 ec
	ff ff		 mov	 WORD PTR _ap$209401[ebp+14], cx

; 123  : 		ap.X = lpSearch->X;

  000fa	8a 96 44 01 00
	00		 mov	 dl, BYTE PTR [esi+324]
  00100	88 95 69 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+17], dl

; 124  : 		ap.Y = lpSearch->Y;

  00106	8a 86 46 01 00
	00		 mov	 al, BYTE PTR [esi+326]
  0010c	88 85 6a ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+18], al

; 125  : 		ap.Map = lpSearch->MapNumber;

  00112	8a 8e 49 01 00
	00		 mov	 cl, BYTE PTR [esi+329]
  00118	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011b	88 8d 68 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+16], cl

; 126  : 		//int partynum = lpSearch->PartyNumber;
; 127  : 		ap.Count = gParty.GetCount(partynum);

  00121	57		 push	 edi
  00122	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00127	e8 00 00 00 00	 call	 ?GetCount@PartyClass@@QAEHH@Z ; PartyClass::GetCount

; 128  : 
; 129  : 		/*if(lpSearch->pt_bAllClass)
; 130  : 		{
; 131  : 			// -> All Class
; 132  : 			ap.dw = true;
; 133  : 			ap.dk = true;
; 134  : 			ap.ee = true;
; 135  : 			ap.mg = true;
; 136  : 			ap.dl = true;
; 137  : 			ap.su = true;
; 138  : 		}
; 139  : 		else*/ if(lpSearch->pt_bOnlyOneClass)

  0012c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00132	88 85 72 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+26], al
  00138	38 9e 81 28 00
	00		 cmp	 BYTE PTR [esi+10369], bl
  0013e	0f 84 d2 02 00
	00		 je	 $LN35@Search

; 140  : 		{
; 141  : 			// -> Gold Party
; 142  : 			ap.dw = true;

  00144	c7 85 6b ec ff
	ff 01 01 01 01	 mov	 DWORD PTR _ap$209401[ebp+19], 16843009 ; 01010101H

; 143  : 			ap.dk = true;
; 144  : 			ap.ee = true;
; 145  : 			ap.mg = true;
; 146  : 			ap.dl = true;

  0014e	66 c7 85 6f ec
	ff ff 01 01	 mov	 WORD PTR _ap$209401[ebp+23], 257 ; 00000101H

; 147  : 			ap.su = true;
; 148  : 			ap.rf = true;

  00157	c6 85 71 ec ff
	ff 01		 mov	 BYTE PTR _ap$209401[ebp+25], 1

; 149  : 
; 150  : 			if(partynum >= 0)

  0015e	3b fb		 cmp	 edi, ebx
  00160	0f 8c 42 02 00
	00		 jl	 $LN34@Search

; 151  : 			{
; 152  : 				
; 153  : 				for(int p = 0; p < MAX_USER_IN_PARTY; p++)

  00166	6b ff 68	 imul	 edi, 104		; 00000068H
  00169	81 c7 10 00 00
	00		 add	 edi, OFFSET ?gParty@@3VPartyClass@@A+16
  0016f	b9 02 00 00 00	 mov	 ecx, 2
$LL33@Search:

; 154  : 				{
; 155  : 					int number = gParty.m_PartyS[partynum].Number[p];

  00174	8b 47 fc	 mov	 eax, DWORD PTR [edi-4]

; 156  : 
; 157  : 					if(number >= 0)

  00177	3b c3		 cmp	 eax, ebx
  00179	7c 67		 jl	 SHORT $LN32@Search

; 158  : 					{
; 159  : 						LPOBJ lpPartyObj = &gObj[number];

  0017b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 160  : 
; 161  : 						if(lpPartyObj->Class == 0)

  00181	0f b7 84 10 b8
	00 00 00	 movzx	 eax, WORD PTR [eax+edx+184]
  00189	66 3b c3	 cmp	 ax, bx
  0018c	75 08		 jne	 SHORT $LN29@Search

; 162  : 						{
; 163  : 							ap.dw = false;

  0018e	88 9d 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], bl
  00194	eb 4c		 jmp	 SHORT $LN32@Search
$LN29@Search:

; 164  : 						}
; 165  : 						else if(lpPartyObj->Class == 1)

  00196	83 f8 01	 cmp	 eax, 1
  00199	75 08		 jne	 SHORT $LN27@Search

; 166  : 						{
; 167  : 							ap.dk = false;

  0019b	88 9d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], bl
  001a1	eb 3f		 jmp	 SHORT $LN32@Search
$LN27@Search:

; 168  : 						}
; 169  : 						else if(lpPartyObj->Class == 2)

  001a3	83 f8 02	 cmp	 eax, 2
  001a6	75 08		 jne	 SHORT $LN25@Search

; 170  : 						{
; 171  : 							ap.ee = false;

  001a8	88 9d 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], bl
  001ae	eb 32		 jmp	 SHORT $LN32@Search
$LN25@Search:

; 172  : 						}
; 173  : 						else if(lpPartyObj->Class == 3)

  001b0	83 f8 03	 cmp	 eax, 3
  001b3	75 08		 jne	 SHORT $LN23@Search

; 174  : 						{
; 175  : 							ap.mg = false;

  001b5	88 9d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], bl
  001bb	eb 25		 jmp	 SHORT $LN32@Search
$LN23@Search:

; 176  : 						}
; 177  : 						else if(lpPartyObj->Class == 4)

  001bd	83 f8 04	 cmp	 eax, 4
  001c0	75 08		 jne	 SHORT $LN21@Search

; 178  : 						{
; 179  : 							ap.dl = false;

  001c2	88 9d 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], bl
  001c8	eb 18		 jmp	 SHORT $LN32@Search
$LN21@Search:

; 180  : 						}
; 181  : 						else if(lpPartyObj->Class == 5)

  001ca	83 f8 05	 cmp	 eax, 5
  001cd	75 08		 jne	 SHORT $LN19@Search

; 182  : 						{
; 183  : 							ap.su = false;

  001cf	88 9d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], bl
  001d5	eb 0b		 jmp	 SHORT $LN32@Search
$LN19@Search:

; 184  : 						}
; 185  : 						else if(lpPartyObj->Class == 6)

  001d7	83 f8 06	 cmp	 eax, 6
  001da	75 06		 jne	 SHORT $LN32@Search

; 186  : 						{
; 187  : 							ap.rf = false;

  001dc	88 9d 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], bl
$LN32@Search:

; 154  : 				{
; 155  : 					int number = gParty.m_PartyS[partynum].Number[p];

  001e2	8b 07		 mov	 eax, DWORD PTR [edi]

; 156  : 
; 157  : 					if(number >= 0)

  001e4	3b c3		 cmp	 eax, ebx
  001e6	7c 67		 jl	 SHORT $LN87@Search

; 158  : 					{
; 159  : 						LPOBJ lpPartyObj = &gObj[number];

  001e8	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 160  : 
; 161  : 						if(lpPartyObj->Class == 0)

  001ee	0f b7 84 10 b8
	00 00 00	 movzx	 eax, WORD PTR [eax+edx+184]
  001f6	66 3b c3	 cmp	 ax, bx
  001f9	75 08		 jne	 SHORT $LN55@Search

; 162  : 						{
; 163  : 							ap.dw = false;

  001fb	88 9d 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], bl
  00201	eb 4c		 jmp	 SHORT $LN87@Search
$LN55@Search:

; 164  : 						}
; 165  : 						else if(lpPartyObj->Class == 1)

  00203	83 f8 01	 cmp	 eax, 1
  00206	75 08		 jne	 SHORT $LN56@Search

; 166  : 						{
; 167  : 							ap.dk = false;

  00208	88 9d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], bl
  0020e	eb 3f		 jmp	 SHORT $LN87@Search
$LN56@Search:

; 168  : 						}
; 169  : 						else if(lpPartyObj->Class == 2)

  00210	83 f8 02	 cmp	 eax, 2
  00213	75 08		 jne	 SHORT $LN57@Search

; 170  : 						{
; 171  : 							ap.ee = false;

  00215	88 9d 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], bl
  0021b	eb 32		 jmp	 SHORT $LN87@Search
$LN57@Search:

; 172  : 						}
; 173  : 						else if(lpPartyObj->Class == 3)

  0021d	83 f8 03	 cmp	 eax, 3
  00220	75 08		 jne	 SHORT $LN58@Search

; 174  : 						{
; 175  : 							ap.mg = false;

  00222	88 9d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], bl
  00228	eb 25		 jmp	 SHORT $LN87@Search
$LN58@Search:

; 176  : 						}
; 177  : 						else if(lpPartyObj->Class == 4)

  0022a	83 f8 04	 cmp	 eax, 4
  0022d	75 08		 jne	 SHORT $LN59@Search

; 178  : 						{
; 179  : 							ap.dl = false;

  0022f	88 9d 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], bl
  00235	eb 18		 jmp	 SHORT $LN87@Search
$LN59@Search:

; 180  : 						}
; 181  : 						else if(lpPartyObj->Class == 5)

  00237	83 f8 05	 cmp	 eax, 5
  0023a	75 08		 jne	 SHORT $LN60@Search

; 182  : 						{
; 183  : 							ap.su = false;

  0023c	88 9d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], bl
  00242	eb 0b		 jmp	 SHORT $LN87@Search
$LN60@Search:

; 184  : 						}
; 185  : 						else if(lpPartyObj->Class == 6)

  00244	83 f8 06	 cmp	 eax, 6
  00247	75 06		 jne	 SHORT $LN87@Search

; 186  : 						{
; 187  : 							ap.rf = false;

  00249	88 9d 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], bl
$LN87@Search:

; 154  : 				{
; 155  : 					int number = gParty.m_PartyS[partynum].Number[p];

  0024f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 156  : 
; 157  : 					if(number >= 0)

  00252	3b c3		 cmp	 eax, ebx
  00254	7c 67		 jl	 SHORT $LN88@Search

; 158  : 					{
; 159  : 						LPOBJ lpPartyObj = &gObj[number];

  00256	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 160  : 
; 161  : 						if(lpPartyObj->Class == 0)

  0025c	0f b7 84 10 b8
	00 00 00	 movzx	 eax, WORD PTR [eax+edx+184]
  00264	66 3b c3	 cmp	 ax, bx
  00267	75 08		 jne	 SHORT $LN62@Search

; 162  : 						{
; 163  : 							ap.dw = false;

  00269	88 9d 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], bl
  0026f	eb 4c		 jmp	 SHORT $LN88@Search
$LN62@Search:

; 164  : 						}
; 165  : 						else if(lpPartyObj->Class == 1)

  00271	83 f8 01	 cmp	 eax, 1
  00274	75 08		 jne	 SHORT $LN63@Search

; 166  : 						{
; 167  : 							ap.dk = false;

  00276	88 9d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], bl
  0027c	eb 3f		 jmp	 SHORT $LN88@Search
$LN63@Search:

; 168  : 						}
; 169  : 						else if(lpPartyObj->Class == 2)

  0027e	83 f8 02	 cmp	 eax, 2
  00281	75 08		 jne	 SHORT $LN64@Search

; 170  : 						{
; 171  : 							ap.ee = false;

  00283	88 9d 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], bl
  00289	eb 32		 jmp	 SHORT $LN88@Search
$LN64@Search:

; 172  : 						}
; 173  : 						else if(lpPartyObj->Class == 3)

  0028b	83 f8 03	 cmp	 eax, 3
  0028e	75 08		 jne	 SHORT $LN65@Search

; 174  : 						{
; 175  : 							ap.mg = false;

  00290	88 9d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], bl
  00296	eb 25		 jmp	 SHORT $LN88@Search
$LN65@Search:

; 176  : 						}
; 177  : 						else if(lpPartyObj->Class == 4)

  00298	83 f8 04	 cmp	 eax, 4
  0029b	75 08		 jne	 SHORT $LN66@Search

; 178  : 						{
; 179  : 							ap.dl = false;

  0029d	88 9d 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], bl
  002a3	eb 18		 jmp	 SHORT $LN88@Search
$LN66@Search:

; 180  : 						}
; 181  : 						else if(lpPartyObj->Class == 5)

  002a5	83 f8 05	 cmp	 eax, 5
  002a8	75 08		 jne	 SHORT $LN67@Search

; 182  : 						{
; 183  : 							ap.su = false;

  002aa	88 9d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], bl
  002b0	eb 0b		 jmp	 SHORT $LN88@Search
$LN67@Search:

; 184  : 						}
; 185  : 						else if(lpPartyObj->Class == 6)

  002b2	83 f8 06	 cmp	 eax, 6
  002b5	75 06		 jne	 SHORT $LN88@Search

; 186  : 						{
; 187  : 							ap.rf = false;

  002b7	88 9d 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], bl
$LN88@Search:

; 154  : 				{
; 155  : 					int number = gParty.m_PartyS[partynum].Number[p];

  002bd	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 156  : 
; 157  : 					if(number >= 0)

  002c0	3b c3		 cmp	 eax, ebx
  002c2	7c 67		 jl	 SHORT $LN89@Search

; 158  : 					{
; 159  : 						LPOBJ lpPartyObj = &gObj[number];

  002c4	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 160  : 
; 161  : 						if(lpPartyObj->Class == 0)

  002ca	0f b7 84 10 b8
	00 00 00	 movzx	 eax, WORD PTR [eax+edx+184]
  002d2	66 3b c3	 cmp	 ax, bx
  002d5	75 08		 jne	 SHORT $LN69@Search

; 162  : 						{
; 163  : 							ap.dw = false;

  002d7	88 9d 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], bl
  002dd	eb 4c		 jmp	 SHORT $LN89@Search
$LN69@Search:

; 164  : 						}
; 165  : 						else if(lpPartyObj->Class == 1)

  002df	83 f8 01	 cmp	 eax, 1
  002e2	75 08		 jne	 SHORT $LN70@Search

; 166  : 						{
; 167  : 							ap.dk = false;

  002e4	88 9d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], bl
  002ea	eb 3f		 jmp	 SHORT $LN89@Search
$LN70@Search:

; 168  : 						}
; 169  : 						else if(lpPartyObj->Class == 2)

  002ec	83 f8 02	 cmp	 eax, 2
  002ef	75 08		 jne	 SHORT $LN71@Search

; 170  : 						{
; 171  : 							ap.ee = false;

  002f1	88 9d 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], bl
  002f7	eb 32		 jmp	 SHORT $LN89@Search
$LN71@Search:

; 172  : 						}
; 173  : 						else if(lpPartyObj->Class == 3)

  002f9	83 f8 03	 cmp	 eax, 3
  002fc	75 08		 jne	 SHORT $LN72@Search

; 174  : 						{
; 175  : 							ap.mg = false;

  002fe	88 9d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], bl
  00304	eb 25		 jmp	 SHORT $LN89@Search
$LN72@Search:

; 176  : 						}
; 177  : 						else if(lpPartyObj->Class == 4)

  00306	83 f8 04	 cmp	 eax, 4
  00309	75 08		 jne	 SHORT $LN73@Search

; 178  : 						{
; 179  : 							ap.dl = false;

  0030b	88 9d 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], bl
  00311	eb 18		 jmp	 SHORT $LN89@Search
$LN73@Search:

; 180  : 						}
; 181  : 						else if(lpPartyObj->Class == 5)

  00313	83 f8 05	 cmp	 eax, 5
  00316	75 08		 jne	 SHORT $LN74@Search

; 182  : 						{
; 183  : 							ap.su = false;

  00318	88 9d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], bl
  0031e	eb 0b		 jmp	 SHORT $LN89@Search
$LN74@Search:

; 184  : 						}
; 185  : 						else if(lpPartyObj->Class == 6)

  00320	83 f8 06	 cmp	 eax, 6
  00323	75 06		 jne	 SHORT $LN89@Search

; 186  : 						{
; 187  : 							ap.rf = false;

  00325	88 9d 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], bl
$LN89@Search:

; 154  : 				{
; 155  : 					int number = gParty.m_PartyS[partynum].Number[p];

  0032b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]

; 156  : 
; 157  : 					if(number >= 0)

  0032e	3b c3		 cmp	 eax, ebx
  00330	7c 67		 jl	 SHORT $LN90@Search

; 158  : 					{
; 159  : 						LPOBJ lpPartyObj = &gObj[number];

  00332	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 160  : 
; 161  : 						if(lpPartyObj->Class == 0)

  00338	0f b7 84 10 b8
	00 00 00	 movzx	 eax, WORD PTR [eax+edx+184]
  00340	66 3b c3	 cmp	 ax, bx
  00343	75 08		 jne	 SHORT $LN76@Search

; 162  : 						{
; 163  : 							ap.dw = false;

  00345	88 9d 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], bl
  0034b	eb 4c		 jmp	 SHORT $LN90@Search
$LN76@Search:

; 164  : 						}
; 165  : 						else if(lpPartyObj->Class == 1)

  0034d	83 f8 01	 cmp	 eax, 1
  00350	75 08		 jne	 SHORT $LN77@Search

; 166  : 						{
; 167  : 							ap.dk = false;

  00352	88 9d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], bl
  00358	eb 3f		 jmp	 SHORT $LN90@Search
$LN77@Search:

; 168  : 						}
; 169  : 						else if(lpPartyObj->Class == 2)

  0035a	83 f8 02	 cmp	 eax, 2
  0035d	75 08		 jne	 SHORT $LN78@Search

; 170  : 						{
; 171  : 							ap.ee = false;

  0035f	88 9d 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], bl
  00365	eb 32		 jmp	 SHORT $LN90@Search
$LN78@Search:

; 172  : 						}
; 173  : 						else if(lpPartyObj->Class == 3)

  00367	83 f8 03	 cmp	 eax, 3
  0036a	75 08		 jne	 SHORT $LN79@Search

; 174  : 						{
; 175  : 							ap.mg = false;

  0036c	88 9d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], bl
  00372	eb 25		 jmp	 SHORT $LN90@Search
$LN79@Search:

; 176  : 						}
; 177  : 						else if(lpPartyObj->Class == 4)

  00374	83 f8 04	 cmp	 eax, 4
  00377	75 08		 jne	 SHORT $LN80@Search

; 178  : 						{
; 179  : 							ap.dl = false;

  00379	88 9d 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], bl
  0037f	eb 18		 jmp	 SHORT $LN90@Search
$LN80@Search:

; 180  : 						}
; 181  : 						else if(lpPartyObj->Class == 5)

  00381	83 f8 05	 cmp	 eax, 5
  00384	75 08		 jne	 SHORT $LN81@Search

; 182  : 						{
; 183  : 							ap.su = false;

  00386	88 9d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], bl
  0038c	eb 0b		 jmp	 SHORT $LN90@Search
$LN81@Search:

; 184  : 						}
; 185  : 						else if(lpPartyObj->Class == 6)

  0038e	83 f8 06	 cmp	 eax, 6
  00391	75 06		 jne	 SHORT $LN90@Search

; 186  : 						{
; 187  : 							ap.rf = false;

  00393	88 9d 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], bl
$LN90@Search:

; 151  : 			{
; 152  : 				
; 153  : 				for(int p = 0; p < MAX_USER_IN_PARTY; p++)

  00399	83 c7 14	 add	 edi, 20			; 00000014H
  0039c	49		 dec	 ecx
  0039d	0f 85 d1 fd ff
	ff		 jne	 $LL33@Search

; 188  : 						}
; 189  : 					}
; 190  : 				}
; 191  : 			}
; 192  : 			else 

  003a3	e9 c9 00 00 00	 jmp	 $LN2@Search
$LN34@Search:

; 193  : 			{
; 194  : 				if(lpSearch->Class == 0)

  003a8	0f b7 86 b8 00
	00 00		 movzx	 eax, WORD PTR [esi+184]
  003af	66 3b c3	 cmp	 ax, bx
  003b2	75 0b		 jne	 SHORT $LN15@Search

; 195  : 				{
; 196  : 					ap.dw = false;

  003b4	88 9d 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], bl
  003ba	e9 b2 00 00 00	 jmp	 $LN2@Search
$LN15@Search:

; 197  : 				}
; 198  : 				else if(lpSearch->Class == 1)

  003bf	83 f8 01	 cmp	 eax, 1
  003c2	75 0b		 jne	 SHORT $LN13@Search

; 199  : 				{
; 200  : 					ap.dk = false;

  003c4	88 9d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], bl
  003ca	e9 a2 00 00 00	 jmp	 $LN2@Search
$LN13@Search:

; 201  : 				}
; 202  : 				else if(lpSearch->Class == 2)

  003cf	83 f8 02	 cmp	 eax, 2
  003d2	75 0b		 jne	 SHORT $LN11@Search

; 203  : 				{
; 204  : 					ap.ee = false;

  003d4	88 9d 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], bl
  003da	e9 92 00 00 00	 jmp	 $LN2@Search
$LN11@Search:

; 205  : 				}
; 206  : 				else if(lpSearch->Class == 3)

  003df	83 f8 03	 cmp	 eax, 3
  003e2	75 0b		 jne	 SHORT $LN9@Search

; 207  : 				{
; 208  : 					ap.mg = false;

  003e4	88 9d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], bl
  003ea	e9 82 00 00 00	 jmp	 $LN2@Search
$LN9@Search:

; 209  : 				}
; 210  : 				else if(lpSearch->Class == 4)

  003ef	83 f8 04	 cmp	 eax, 4
  003f2	75 08		 jne	 SHORT $LN7@Search

; 211  : 				{
; 212  : 					ap.dl = false;

  003f4	88 9d 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], bl
  003fa	eb 75		 jmp	 SHORT $LN2@Search
$LN7@Search:

; 213  : 				}
; 214  : 				else if(lpSearch->Class == 5)

  003fc	83 f8 05	 cmp	 eax, 5
  003ff	75 08		 jne	 SHORT $LN5@Search

; 215  : 				{
; 216  : 					ap.su = false;

  00401	88 9d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], bl
  00407	eb 68		 jmp	 SHORT $LN2@Search
$LN5@Search:

; 217  : 				}
; 218  : 				else if(lpSearch->Class == 6)

  00409	83 f8 06	 cmp	 eax, 6
  0040c	75 63		 jne	 SHORT $LN2@Search

; 219  : 				{
; 220  : 					ap.rf = false;

  0040e	88 9d 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], bl

; 221  : 				}
; 222  : 			}
; 223  : 		}
; 224  : 		else

  00414	eb 5b		 jmp	 SHORT $LN2@Search
$LN35@Search:

; 225  : 		{
; 226  : 			// -> Other Char
; 227  : 			ap.dw = lpSearch->pt_bDarkWizard;

  00416	0f b6 86 82 28
	00 00		 movzx	 eax, BYTE PTR [esi+10370]
  0041d	88 85 6b ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+19], al

; 228  : 			ap.dk = lpSearch->pt_bDarkKnight;

  00423	0f b6 8e 83 28
	00 00		 movzx	 ecx, BYTE PTR [esi+10371]
  0042a	88 8d 6c ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+20], cl

; 229  : 			ap.ee = lpSearch->pt_bElf;

  00430	0f b6 86 84 28
	00 00		 movzx	 eax, BYTE PTR [esi+10372]
  00437	88 85 6d ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+21], al

; 230  : 			ap.mg = lpSearch->pt_bMagicGladiator;

  0043d	0f b6 8e 85 28
	00 00		 movzx	 ecx, BYTE PTR [esi+10373]
  00444	88 8d 6e ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+22], cl

; 231  : 			ap.dl = lpSearch->pt_bDarkLord;

  0044a	0f b6 86 86 28
	00 00		 movzx	 eax, BYTE PTR [esi+10374]
  00451	88 85 6f ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+23], al

; 232  : 			ap.su = lpSearch->pt_bSummoner;

  00457	0f b6 8e 87 28
	00 00		 movzx	 ecx, BYTE PTR [esi+10375]
  0045e	88 8d 70 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+24], cl

; 233  : 			ap.rf = lpSearch->pt_bAllClass;

  00464	0f b6 86 80 28
	00 00		 movzx	 eax, BYTE PTR [esi+10368]
  0046b	88 85 71 ec ff
	ff		 mov	 BYTE PTR _ap$209401[ebp+25], al
$LN2@Search:

; 234  : 		}
; 235  : 
; 236  : 		memcpy(&SendBuff[datasize],&ap,sizeof(ap));

  00471	8b 85 4c ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  00477	8d bc 05 74 ec
	ff ff		 lea	 edi, DWORD PTR _SendBuff$[ebp+eax]

; 237  : 		datasize += sizeof(ap);

  0047e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00481	89 85 4c ec ff
	ff		 mov	 DWORD PTR _datasize$[ebp], eax

; 238  : 
; 239  : 		icount++;

  00487	8a 85 57 ec ff
	ff		 mov	 al, BYTE PTR _icount$[ebp]
  0048d	fe c0		 inc	 al
  0048f	b9 07 00 00 00	 mov	 ecx, 7
  00494	8d b5 58 ec ff
	ff		 lea	 esi, DWORD PTR _ap$209401[ebp]
  0049a	f3 a5		 rep movsd
  0049c	88 85 57 ec ff
	ff		 mov	 BYTE PTR _icount$[ebp], al

; 240  : 
; 241  : 		if(icount >= 200)

  004a2	3c c8		 cmp	 al, 200			; 000000c8H
  004a4	73 20		 jae	 SHORT $LN85@Search
  004a6	eb 06		 jmp	 SHORT $LN41@Search
$LN83@Search:
  004a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN41@Search:

; 100  : 
; 101  : 	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  004ae	8b 85 50 ec ff
	ff		 mov	 eax, DWORD PTR _n$209391[ebp]
  004b4	40		 inc	 eax
  004b5	89 85 50 ec ff
	ff		 mov	 DWORD PTR _n$209391[ebp], eax
  004bb	3d 98 3a 00 00	 cmp	 eax, 15000		; 00003a98H
  004c0	0f 8c ba fb ff
	ff		 jl	 $LL42@Search
$LN85@Search:

; 242  : 		{
; 243  : 			break;		
; 244  : 		}
; 245  : 	}
; 246  : 
; 247  : 	//if(icount > 0)
; 248  : 	{
; 249  : 		SendBuff[0]=0xC2;	// packet header
; 250  : 		SendBuff[1]=SET_NUMBERH(datasize);

  004c6	8b 85 4c ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]

; 251  : 		SendBuff[2]=SET_NUMBERL(datasize);
; 252  : 		SendBuff[3]=0xFA;
; 253  : 		SendBuff[4]=0x08;
; 254  : 		SendBuff[5]=icount;

  004cc	8a 95 57 ec ff
	ff		 mov	 dl, BYTE PTR _icount$[ebp]
  004d2	8b c8		 mov	 ecx, eax

; 255  : 		DataSend(aIndex,SendBuff,datasize);

  004d4	50		 push	 eax
  004d5	c1 e9 08	 shr	 ecx, 8
  004d8	88 85 76 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al
  004de	8d 85 74 ec ff
	ff		 lea	 eax, DWORD PTR _SendBuff$[ebp]
  004e4	88 8d 75 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], cl
  004ea	8b 8d 48 ec ff
	ff		 mov	 ecx, DWORD PTR _aIndex$GSCopy$[ebp]
  004f0	50		 push	 eax
  004f1	51		 push	 ecx
  004f2	c6 85 74 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H
  004f9	66 c7 85 77 ec
	ff ff fa 08	 mov	 WORD PTR _SendBuff$[ebp+3], 2298 ; 000008faH
  00502	88 95 79 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], dl
  00508	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0050d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00510	5f		 pop	 edi
$LN43@Search:

; 256  : 	}
; 257  : }

  00511	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00514	5e		 pop	 esi
  00515	33 cd		 xor	 ecx, ebp
  00517	5b		 pop	 ebx
  00518	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0051d	8b e5		 mov	 esp, ebp
  0051f	5d		 pop	 ebp
  00520	c2 04 00	 ret	 4
?Search@PartySearch@@QAEXH@Z ENDP			; PartySearch::Search
_TEXT	ENDS
PUBLIC	?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z ; PartySearch::CG_RecvInfo
; Function compile flags: /Ogtp
;	COMDAT ?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_Recv$ = 12						; size = 4
?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z PROC ; PartySearch::CG_RecvInfo, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 a7 00 00
	00		 je	 $LN3@CG_RecvInf

; 263  : 	{
; 264  : 		return;
; 265  : 	}
; 266  : 
; 267  : 	if(!gObjIsConnectedZt(aIndex))

  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00016	83 c4 04	 add	 esp, 4
  00019	84 c0		 test	 al, al
  0001b	0f 84 91 00 00
	00		 je	 $LN5@CG_RecvInf

; 268  : 	{
; 269  : 		return;
; 270  : 	}
; 271  : 
; 272  : 	LPOBJ lpUser = &gObj[aIndex];
; 273  : 
; 274  : 	lpUser->pt_Active = Recv->ActiveSystem;

  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _Recv$[ebp]
  00024	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0002a	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00030	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00034	8b c6		 mov	 eax, esi
  00036	0f 95 c2	 setne	 dl
  00039	88 90 7c 28 00
	00		 mov	 BYTE PTR [eax+10364], dl

; 275  : 	lpUser->pt_MaxLevel = Recv->MaxLevel;

  0003f	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  00043	66 89 90 7e 28
	00 00		 mov	 WORD PTR [eax+10366], dx

; 276  : 	lpUser->pt_bAllClass = Recv->bAllClass;

  0004a	80 79 08 00	 cmp	 BYTE PTR [ecx+8], 0
  0004e	0f 95 c2	 setne	 dl
  00051	88 90 80 28 00
	00		 mov	 BYTE PTR [eax+10368], dl

; 277  : 	lpUser->pt_bOnlyOneClass = Recv->bOnlyOneClass;

  00057	80 79 09 00	 cmp	 BYTE PTR [ecx+9], 0
  0005b	0f 95 c2	 setne	 dl
  0005e	88 90 81 28 00
	00		 mov	 BYTE PTR [eax+10369], dl

; 278  : 	lpUser->pt_bDarkWizard = Recv->bDarkWizard;

  00064	80 79 0a 00	 cmp	 BYTE PTR [ecx+10], 0
  00068	0f 95 c2	 setne	 dl
  0006b	88 90 82 28 00
	00		 mov	 BYTE PTR [eax+10370], dl

; 279  : 	lpUser->pt_bDarkKnight = Recv->bDarkKnight;

  00071	80 79 0b 00	 cmp	 BYTE PTR [ecx+11], 0
  00075	0f 95 c2	 setne	 dl
  00078	88 90 83 28 00
	00		 mov	 BYTE PTR [eax+10371], dl

; 280  : 	lpUser->pt_bElf = Recv->bElf;

  0007e	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  00082	0f 95 c2	 setne	 dl
  00085	88 90 84 28 00
	00		 mov	 BYTE PTR [eax+10372], dl

; 281  : 	lpUser->pt_bMagicGladiator = Recv->bMagicGladiator;

  0008b	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0008f	0f 95 c2	 setne	 dl
  00092	88 90 85 28 00
	00		 mov	 BYTE PTR [eax+10373], dl

; 282  : 	lpUser->pt_bDarkLord = Recv->bDarkLord;

  00098	80 79 0e 00	 cmp	 BYTE PTR [ecx+14], 0
  0009c	0f 95 c2	 setne	 dl
  0009f	88 90 86 28 00
	00		 mov	 BYTE PTR [eax+10374], dl

; 283  : 	lpUser->pt_bSummoner = Recv->bSummoner;

  000a5	80 79 0f 00	 cmp	 BYTE PTR [ecx+15], 0
  000a9	0f 95 c1	 setne	 cl
  000ac	88 88 87 28 00
	00		 mov	 BYTE PTR [eax+10375], cl
$LN5@CG_RecvInf:
  000b2	5e		 pop	 esi
$LN3@CG_RecvInf:

; 284  : }

  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z ENDP ; PartySearch::CG_RecvInfo
_TEXT	ENDS
PUBLIC	?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z ; PartySearch::CG_RecvPartyUser
EXTRN	?CGPartyListAll@@YAXH@Z:PROC			; CGPartyListAll
EXTRN	?Paint@PartyClass@@QAEXH@Z:PROC			; PartyClass::Paint
EXTRN	?Add@PartyClass@@QAEHHHHH@Z:PROC		; PartyClass::Add
EXTRN	?Create@PartyClass@@QAEHHHH@Z:PROC		; PartyClass::Create
; Function compile flags: /Ogtp
;	COMDAT ?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_TargetIndex$ = 12					; size = 4
_Recv$ = 12						; size = 4
?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z PROC ; PartySearch::CG_RecvPartyUser, COMDAT
; _this$ = ecx

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 289  : 	if(!this->ActiveSystem)

  00004	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	0f 84 a7 03 00
	00		 je	 $LN1@CG_RecvPar

; 290  : 	{
; 291  : 		return;
; 292  : 	}
; 293  : 
; 294  : 	if(!gObjIsConnectedZt(aIndex))

  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  0001a	83 c4 04	 add	 esp, 4
  0001d	84 c0		 test	 al, al
  0001f	0f 84 91 03 00
	00		 je	 $LN65@CG_RecvPar

; 295  : 	{
; 296  : 		return;
; 297  : 	}
; 298  : 
; 299  : 	int TargetIndex = Recv->UserIndex;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  00028	56		 push	 esi
  00029	0f b7 70 04	 movzx	 esi, WORD PTR [eax+4]

; 300  : 
; 301  : 	if(!gObjIsConnectedZt(TargetIndex))

  0002d	56		 push	 esi
  0002e	89 75 0c	 mov	 DWORD PTR _TargetIndex$[ebp], esi
  00031	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00036	83 c4 04	 add	 esp, 4
  00039	84 c0		 test	 al, al
  0003b	0f 84 74 03 00
	00		 je	 $LN66@CG_RecvPar

; 302  : 	{
; 303  : 		return;
; 304  : 	}
; 305  : 
; 306  : 	if(aIndex == TargetIndex)

  00041	3b fe		 cmp	 edi, esi
  00043	0f 84 6c 03 00
	00		 je	 $LN66@CG_RecvPar

; 307  : 	{
; 308  : 		return;
; 309  : 	}
; 310  : 
; 311  : 	LPOBJ lpUser = &gObj[aIndex];

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 312  : 	LPOBJ lpTarget = &gObj[TargetIndex];

  0004e	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00054	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H

; 313  : 
; 314  : 	if(!lpTarget->pt_Active)

  0005a	80 bc 06 7c 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10364], 0
  00062	0f 84 4d 03 00
	00		 je	 $LN66@CG_RecvPar

; 315  : 	{
; 316  : 		return;
; 317  : 	}
; 318  : 
; 319  : 	int partynum = lpTarget->PartyNumber;
; 320  : 
; 321  : 	BYTE AtributeON = true;
; 322  : 
; 323  : 	if(aIndex == TargetIndex)
; 324  : 	{
; 325  : 		AtributeON = false;
; 326  : 	}
; 327  : 	if(lpUser->PartyNumber > 0)

  00068	83 bc 07 2c 04
	00 00 00	 cmp	 DWORD PTR [edi+eax+1068], 0
  00070	53		 push	 ebx
  00071	b3 01		 mov	 bl, 1
  00073	7e 02		 jle	 SHORT $LN30@CG_RecvPar

; 328  : 	{
; 329  : 		AtributeON = false;

  00075	32 db		 xor	 bl, bl
$LN30@CG_RecvPar:

; 330  : 	}
; 331  : 	if(lpUser->Level > lpTarget->pt_MaxLevel)

  00077	66 8b 8c 07 be
	00 00 00	 mov	 cx, WORD PTR [edi+eax+190]
  0007f	66 3b 8c 06 7e
	28 00 00	 cmp	 cx, WORD PTR [esi+eax+10366]
  00087	7e 02		 jle	 SHORT $LN29@CG_RecvPar

; 332  : 	{
; 333  : 		AtributeON = false;

  00089	32 db		 xor	 bl, bl
$LN29@CG_RecvPar:

; 334  : 	}
; 335  : 	
; 336  : 	if(/*!lpTarget->pt_bAllClass &&*/ !lpTarget->pt_bOnlyOneClass)

  0008b	8a 8c 06 81 28
	00 00		 mov	 cl, BYTE PTR [esi+eax+10369]
  00092	84 c9		 test	 cl, cl
  00094	0f 85 86 00 00
	00		 jne	 $LN69@CG_RecvPar

; 337  : 	{
; 338  : 		if(lpUser->Class == CLASS_WIZARD && lpTarget->pt_bDarkWizard == false)

  0009a	0f b7 94 07 b8
	00 00 00	 movzx	 edx, WORD PTR [edi+eax+184]
  000a2	66 85 d2	 test	 dx, dx
  000a5	75 0b		 jne	 SHORT $LN27@CG_RecvPar
  000a7	38 94 06 82 28
	00 00		 cmp	 BYTE PTR [esi+eax+10370], dl
  000ae	75 02		 jne	 SHORT $LN27@CG_RecvPar

; 339  : 		{
; 340  : 			AtributeON = false;

  000b0	32 db		 xor	 bl, bl
$LN27@CG_RecvPar:

; 341  : 		}
; 342  : 		if(lpUser->Class == CLASS_KNIGHT && lpTarget->pt_bDarkKnight == false)

  000b2	83 fa 01	 cmp	 edx, 1
  000b5	75 0c		 jne	 SHORT $LN26@CG_RecvPar
  000b7	80 bc 06 83 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10371], 0
  000bf	75 02		 jne	 SHORT $LN26@CG_RecvPar

; 343  : 		{
; 344  : 			AtributeON = false;

  000c1	32 db		 xor	 bl, bl
$LN26@CG_RecvPar:

; 345  : 		}
; 346  : 		if(lpUser->Class == CLASS_ELF && lpTarget->pt_bElf == false)

  000c3	83 fa 02	 cmp	 edx, 2
  000c6	75 0c		 jne	 SHORT $LN25@CG_RecvPar
  000c8	80 bc 06 84 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10372], 0
  000d0	75 02		 jne	 SHORT $LN25@CG_RecvPar

; 347  : 		{
; 348  : 			AtributeON = false;

  000d2	32 db		 xor	 bl, bl
$LN25@CG_RecvPar:

; 349  : 		}
; 350  : 		if(lpUser->Class == CLASS_MAGUMSA && lpTarget->pt_bMagicGladiator == false)

  000d4	83 fa 03	 cmp	 edx, 3
  000d7	75 0c		 jne	 SHORT $LN24@CG_RecvPar
  000d9	80 bc 06 85 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10373], 0
  000e1	75 02		 jne	 SHORT $LN24@CG_RecvPar

; 351  : 		{
; 352  : 			AtributeON = false;

  000e3	32 db		 xor	 bl, bl
$LN24@CG_RecvPar:

; 353  : 		}
; 354  : 		if(lpUser->Class == CLASS_DARKLORD && lpTarget->pt_bDarkLord == false)

  000e5	83 fa 04	 cmp	 edx, 4
  000e8	75 0c		 jne	 SHORT $LN23@CG_RecvPar
  000ea	80 bc 06 86 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10374], 0
  000f2	75 02		 jne	 SHORT $LN23@CG_RecvPar

; 355  : 		{
; 356  : 			AtributeON = false;

  000f4	32 db		 xor	 bl, bl
$LN23@CG_RecvPar:

; 357  : 		}
; 358  : 		if(lpUser->Class == CLASS_SUMMONER && lpTarget->pt_bSummoner == false)

  000f6	83 fa 05	 cmp	 edx, 5
  000f9	75 0c		 jne	 SHORT $LN22@CG_RecvPar
  000fb	80 bc 06 87 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10375], 0
  00103	75 02		 jne	 SHORT $LN22@CG_RecvPar

; 359  : 		{
; 360  : 			AtributeON = false;

  00105	32 db		 xor	 bl, bl
$LN22@CG_RecvPar:

; 361  : 		}
; 362  : 		if(lpUser->Class == CLASS_MONK && lpTarget->pt_bAllClass == false)

  00107	83 fa 06	 cmp	 edx, 6
  0010a	75 0c		 jne	 SHORT $LN64@CG_RecvPar
  0010c	80 bc 06 80 28
	00 00 00	 cmp	 BYTE PTR [esi+eax+10368], 0
  00114	75 02		 jne	 SHORT $LN64@CG_RecvPar

; 363  : 		{
; 364  : 			AtributeON = false;

  00116	32 db		 xor	 bl, bl
$LN64@CG_RecvPar:

; 365  : 		}
; 366  : 	}
; 367  : 
; 368  : 	// -> Gold Party
; 369  : 	if(lpTarget->pt_bOnlyOneClass)

  00118	84 c9		 test	 cl, cl
  0011a	0f 84 8e 01 00
	00		 je	 $LN63@CG_RecvPar
$LN69@CG_RecvPar:

; 370  : 	{
; 371  : 		if(partynum >= 0)

  00120	8b 8c 06 2c 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1068]
  00127	85 c9		 test	 ecx, ecx
  00129	0f 88 69 01 00
	00		 js	 $LN19@CG_RecvPar

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  0012f	6b c9 68	 imul	 ecx, 104		; 00000068H
  00132	8b 91 0c 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+12]

; 376  : 
; 377  : 				if(number >= 0)

  00138	85 d2		 test	 edx, edx
  0013a	78 1a		 js	 SHORT $LN17@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  0013c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  00142	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  0014a	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  00152	75 02		 jne	 SHORT $LN17@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  00154	32 db		 xor	 bl, bl
$LN17@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  00156	8b 91 10 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+16]

; 376  : 
; 377  : 				if(number >= 0)

  0015c	85 d2		 test	 edx, edx
  0015e	78 1a		 js	 SHORT $LN45@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  00160	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  00166	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  0016e	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  00176	75 02		 jne	 SHORT $LN45@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  00178	32 db		 xor	 bl, bl
$LN45@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  0017a	8b 91 14 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+20]

; 376  : 
; 377  : 				if(number >= 0)

  00180	85 d2		 test	 edx, edx
  00182	78 1a		 js	 SHORT $LN47@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  00184	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  0018a	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  00192	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  0019a	75 02		 jne	 SHORT $LN47@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  0019c	32 db		 xor	 bl, bl
$LN47@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  0019e	8b 91 18 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+24]

; 376  : 
; 377  : 				if(number >= 0)

  001a4	85 d2		 test	 edx, edx
  001a6	78 1a		 js	 SHORT $LN49@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  001a8	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  001ae	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  001b6	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  001be	75 02		 jne	 SHORT $LN49@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  001c0	32 db		 xor	 bl, bl
$LN49@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  001c2	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+28]

; 376  : 
; 377  : 				if(number >= 0)

  001c8	85 d2		 test	 edx, edx
  001ca	78 1a		 js	 SHORT $LN51@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  001cc	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  001d2	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  001da	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  001e2	75 02		 jne	 SHORT $LN51@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  001e4	32 db		 xor	 bl, bl
$LN51@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  001e6	8b 91 20 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+32]

; 376  : 
; 377  : 				if(number >= 0)

  001ec	85 d2		 test	 edx, edx
  001ee	78 1a		 js	 SHORT $LN53@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  001f0	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  001f6	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  001fe	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  00206	75 02		 jne	 SHORT $LN53@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  00208	32 db		 xor	 bl, bl
$LN53@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  0020a	8b 91 24 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+36]

; 376  : 
; 377  : 				if(number >= 0)

  00210	85 d2		 test	 edx, edx
  00212	78 1a		 js	 SHORT $LN55@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  00214	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  0021a	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  00222	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  0022a	75 02		 jne	 SHORT $LN55@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  0022c	32 db		 xor	 bl, bl
$LN55@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  0022e	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+40]

; 376  : 
; 377  : 				if(number >= 0)

  00234	85 d2		 test	 edx, edx
  00236	78 1a		 js	 SHORT $LN57@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  00238	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  0023e	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  00246	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  0024e	75 02		 jne	 SHORT $LN57@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  00250	32 db		 xor	 bl, bl
$LN57@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  00252	8b 91 2c 00 00
	00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+44]

; 376  : 
; 377  : 				if(number >= 0)

  00258	85 d2		 test	 edx, edx
  0025a	78 1a		 js	 SHORT $LN59@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  0025c	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  00262	66 8b 94 02 b8
	00 00 00	 mov	 dx, WORD PTR [edx+eax+184]
  0026a	66 3b 94 07 b8
	00 00 00	 cmp	 dx, WORD PTR [edi+eax+184]
  00272	75 02		 jne	 SHORT $LN59@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  00274	32 db		 xor	 bl, bl
$LN59@CG_RecvPar:

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)
; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  00276	8b 89 30 00 00
	00		 mov	 ecx, DWORD PTR ?gParty@@3VPartyClass@@A[ecx+48]

; 376  : 
; 377  : 				if(number >= 0)

  0027c	85 c9		 test	 ecx, ecx
  0027e	78 2e		 js	 SHORT $LN63@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  00280	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  00286	66 8b 8c 01 b8
	00 00 00	 mov	 cx, WORD PTR [ecx+eax+184]
  0028e	66 3b 8c 07 b8
	00 00 00	 cmp	 cx, WORD PTR [edi+eax+184]

; 384  : 					}
; 385  : 				}
; 386  : 			}
; 387  : 		}
; 388  : 		else

  00296	eb 10		 jmp	 SHORT $LN70@CG_RecvPar
$LN19@CG_RecvPar:

; 389  : 		{
; 390  : 			if(lpUser->Class == lpTarget->Class)

  00298	66 8b 94 07 b8
	00 00 00	 mov	 dx, WORD PTR [edi+eax+184]
  002a0	66 3b 94 06 b8
	00 00 00	 cmp	 dx, WORD PTR [esi+eax+184]
$LN70@CG_RecvPar:

; 391  : 			{
; 392  : 				AtributeON = false;
; 393  : 			}
; 394  : 		}
; 395  : 	}
; 396  : 				
; 397  : 
; 398  : 	if(!AtributeON)

  002a8	0f 84 06 01 00
	00		 je	 $LN67@CG_RecvPar
$LN63@CG_RecvPar:
  002ae	84 db		 test	 bl, bl
  002b0	0f 84 fe 00 00
	00		 je	 $LN67@CG_RecvPar

; 399  : 	{
; 400  : 		return;
; 401  : 	}
; 402  : 
; 403  : 	int pnumber = -1;
; 404  : 
; 405  : 	if ( gObj[TargetIndex].PartyNumber < 0 )

  002b6	83 bc 06 2c 04
	00 00 00	 cmp	 DWORD PTR [esi+eax+1068], 0
  002be	7d 2e		 jge	 SHORT $LN62@CG_RecvPar

; 406  : 	{
; 407  : 		gObj[TargetIndex].PartyNumber = gParty.Create(TargetIndex, gObj[TargetIndex].DBNumber, gObj[TargetIndex].Level);

  002c0	0f bf 8c 06 be
	00 00 00	 movsx	 ecx, WORD PTR [esi+eax+190]
  002c8	8b 54 06 2c	 mov	 edx, DWORD PTR [esi+eax+44]
  002cc	8b 45 0c	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  002cf	51		 push	 ecx
  002d0	52		 push	 edx
  002d1	50		 push	 eax
  002d2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  002d7	e8 00 00 00 00	 call	 ?Create@PartyClass@@QAEHHHH@Z ; PartyClass::Create
  002dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002e2	89 84 0e 2c 04
	00 00		 mov	 DWORD PTR [esi+ecx+1068], eax
  002e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN62@CG_RecvPar:

; 408  : 	}
; 409  : 
; 410  : 	if ( gObj[TargetIndex].PartyNumber >= 0  && gObj[aIndex].PartyNumber == -1)

  002ee	8b 8c 06 2c 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1068]
  002f5	85 c9		 test	 ecx, ecx
  002f7	0f 88 b7 00 00
	00		 js	 $LN67@CG_RecvPar
  002fd	83 bc 07 2c 04
	00 00 ff	 cmp	 DWORD PTR [edi+eax+1068], -1
  00305	0f 85 a9 00 00
	00		 jne	 $LN67@CG_RecvPar

; 411  : 	{
; 412  : 		if( !gParty.Isleader(gObj[TargetIndex].PartyNumber, TargetIndex, gObj[TargetIndex].DBNumber) )

  0030b	8b 54 06 2c	 mov	 edx, DWORD PTR [esi+eax+44]
  0030f	8b 45 0c	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00312	52		 push	 edx
  00313	50		 push	 eax
  00314	51		 push	 ecx
  00315	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0031a	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  0031f	85 c0		 test	 eax, eax
  00321	0f 84 8d 00 00
	00		 je	 $LN67@CG_RecvPar

; 413  : 		{
; 414  : 			return;
; 415  : 		}
; 416  : 
; 417  : 		if( gParty.GetCount(gObj[TargetIndex].PartyNumber) >= MAX_USER_IN_PARTY )

  00327	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0032d	8b 94 0e 2c 04
	00 00		 mov	 edx, DWORD PTR [esi+ecx+1068]
  00334	52		 push	 edx
  00335	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0033a	e8 00 00 00 00	 call	 ?GetCount@PartyClass@@QAEHH@Z ; PartyClass::GetCount
  0033f	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00342	7d 70		 jge	 SHORT $LN67@CG_RecvPar

; 418  : 		{
; 419  : 			return;
; 420  : 		}
; 421  : 
; 422  : 		pnumber = gObj[TargetIndex].PartyNumber;

  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 423  : 
; 424  : 		int iPartyPos = gParty.Add(gObj[TargetIndex].PartyNumber, aIndex, gObj[aIndex].DBNumber, gObj[aIndex].Level);

  00349	0f bf 8c 07 be
	00 00 00	 movsx	 ecx, WORD PTR [edi+eax+190]
  00351	8b 54 07 2c	 mov	 edx, DWORD PTR [edi+eax+44]
  00355	8b 9c 06 2c 04
	00 00		 mov	 ebx, DWORD PTR [esi+eax+1068]
  0035c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0035f	51		 push	 ecx
  00360	52		 push	 edx
  00361	50		 push	 eax
  00362	53		 push	 ebx
  00363	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00368	e8 00 00 00 00	 call	 ?Add@PartyClass@@QAEHHHHH@Z ; PartyClass::Add

; 425  : 
; 426  : 		if ( iPartyPos >= 0 )

  0036d	85 c0		 test	 eax, eax
  0036f	78 20		 js	 SHORT $LN6@CG_RecvPar

; 427  : 		{
; 428  : 			gObj[aIndex].PartyNumber = gObj[TargetIndex].PartyNumber;

  00371	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00376	8b 8c 06 2c 04
	00 00		 mov	 ecx, DWORD PTR [esi+eax+1068]
  0037d	89 8c 07 2c 04
	00 00		 mov	 DWORD PTR [edi+eax+1068], ecx

; 429  : 
; 430  : 			gParty.Paint(pnumber);

  00384	53		 push	 ebx
  00385	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0038a	e8 00 00 00 00	 call	 ?Paint@PartyClass@@QAEXH@Z ; PartyClass::Paint
  0038f	eb 0a		 jmp	 SHORT $LN2@CG_RecvPar
$LN6@CG_RecvPar:

; 431  : 		}
; 432  : 		else if ( iPartyPos == -1 )

  00391	83 f8 ff	 cmp	 eax, -1
  00394	74 1e		 je	 SHORT $LN67@CG_RecvPar

; 433  : 		{
; 434  : 			return;
; 435  : 		}
; 436  : 		else if ( iPartyPos == -2 )

  00396	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  00399	74 19		 je	 SHORT $LN67@CG_RecvPar
$LN2@CG_RecvPar:

; 437  : 		{
; 438  : 			return;
; 439  : 		}
; 440  : 	}
; 441  : 
; 442  : 	if ( pnumber >= 0 )

  0039b	85 db		 test	 ebx, ebx
  0039d	78 15		 js	 SHORT $LN67@CG_RecvPar

; 443  : 	{
; 444  : 		CGPartyListAll(pnumber);

  0039f	53		 push	 ebx
  003a0	e8 00 00 00 00	 call	 ?CGPartyListAll@@YAXH@Z	; CGPartyListAll

; 445  : 		this->Search(aIndex);

  003a5	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  003a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	52		 push	 edx
  003af	e8 00 00 00 00	 call	 ?Search@PartySearch@@QAEXH@Z ; PartySearch::Search
$LN67@CG_RecvPar:
  003b4	5b		 pop	 ebx
$LN66@CG_RecvPar:
  003b5	5e		 pop	 esi
$LN65@CG_RecvPar:
  003b6	5f		 pop	 edi
$LN1@CG_RecvPar:

; 446  : 	}
; 447  : }

  003b7	8b e5		 mov	 esp, ebp
  003b9	5d		 pop	 ebp
  003ba	c2 08 00	 ret	 8
?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z ENDP ; PartySearch::CG_RecvPartyUser
_TEXT	ENDS
PUBLIC	?SaveBinary@PartySearch@@QAEXHPAE@Z		; PartySearch::SaveBinary
; Function compile flags: /Ogtp
;	COMDAT ?SaveBinary@PartySearch@@QAEXHPAE@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_buf$ = 12						; size = 4
?SaveBinary@PartySearch@@QAEXHPAE@Z PROC		; PartySearch::SaveBinary, COMDAT
; _this$ = ecx

; 451  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 452  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 8e 00 00
	00		 je	 $LN3@SaveBinary

; 453  : 	{
; 454  : 		return;
; 455  : 	}
; 456  : 
; 457  : 	if(!gObjIsConnectedZt(aIndex))

  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00016	83 c4 04	 add	 esp, 4
  00019	84 c0		 test	 al, al
  0001b	74 7c		 je	 SHORT $LN5@SaveBinary

; 458  : 	{
; 459  : 		return;
; 460  : 	}
; 461  : 
; 462  : 	LPOBJ lpUser = &gObj[aIndex];
; 463  : 	WORD Level = lpUser->pt_MaxLevel;
; 464  : 
; 465  : 	//Active
; 466  : 	buf[0] =  lpUser->pt_Active;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _buf$[ebp]
  00020	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00026	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	53		 push	 ebx
  0002d	8b c6		 mov	 eax, esi
  0002f	0f b7 90 7e 28
	00 00		 movzx	 edx, WORD PTR [eax+10366]
  00036	8a 98 7c 28 00
	00		 mov	 bl, BYTE PTR [eax+10364]
  0003c	88 19		 mov	 BYTE PTR [ecx], bl

; 467  : 	
; 468  : 	// level
; 469  : 	buf[1] = SET_NUMBERH(Level);

  0003e	8b da		 mov	 ebx, edx

; 470  : 	buf[2] = SET_NUMBERL(Level);

  00040	88 51 02	 mov	 BYTE PTR [ecx+2], dl
  00043	c1 eb 08	 shr	 ebx, 8
  00046	88 59 01	 mov	 BYTE PTR [ecx+1], bl

; 471  : 
; 472  : 	buf[3] = lpUser->pt_bAllClass;

  00049	0f b6 90 80 28
	00 00		 movzx	 edx, BYTE PTR [eax+10368]
  00050	88 51 03	 mov	 BYTE PTR [ecx+3], dl

; 473  : 	buf[4] = lpUser->pt_bOnlyOneClass;

  00053	0f b6 90 81 28
	00 00		 movzx	 edx, BYTE PTR [eax+10369]
  0005a	88 51 04	 mov	 BYTE PTR [ecx+4], dl

; 474  : 
; 475  : 	buf[5] = lpUser->pt_bDarkWizard;

  0005d	0f b6 90 82 28
	00 00		 movzx	 edx, BYTE PTR [eax+10370]
  00064	88 51 05	 mov	 BYTE PTR [ecx+5], dl

; 476  : 	buf[6] = lpUser->pt_bDarkKnight;

  00067	0f b6 90 83 28
	00 00		 movzx	 edx, BYTE PTR [eax+10371]
  0006e	88 51 06	 mov	 BYTE PTR [ecx+6], dl

; 477  : 	buf[7] = lpUser->pt_bElf;

  00071	0f b6 90 84 28
	00 00		 movzx	 edx, BYTE PTR [eax+10372]
  00078	88 51 07	 mov	 BYTE PTR [ecx+7], dl

; 478  : 	buf[8] = lpUser->pt_bMagicGladiator;

  0007b	0f b6 90 85 28
	00 00		 movzx	 edx, BYTE PTR [eax+10373]
  00082	88 51 08	 mov	 BYTE PTR [ecx+8], dl

; 479  : 	buf[9] = lpUser->pt_bDarkLord;

  00085	0f b6 90 86 28
	00 00		 movzx	 edx, BYTE PTR [eax+10374]
  0008c	88 51 09	 mov	 BYTE PTR [ecx+9], dl

; 480  : 	buf[10] = lpUser->pt_bSummoner;

  0008f	8a 80 87 28 00
	00		 mov	 al, BYTE PTR [eax+10375]
  00095	88 41 0a	 mov	 BYTE PTR [ecx+10], al
  00098	5b		 pop	 ebx
$LN5@SaveBinary:
  00099	5e		 pop	 esi
$LN3@SaveBinary:

; 481  : 
; 482  : }

  0009a	5d		 pop	 ebp
  0009b	c2 08 00	 ret	 8
?SaveBinary@PartySearch@@QAEXHPAE@Z ENDP		; PartySearch::SaveBinary
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GC_InfoSend@PartySearch@@QAEXH@Z		; PartySearch::GC_InfoSend
; Function compile flags: /Ogtp
;	COMDAT ?GC_InfoSend@PartySearch@@QAEXH@Z
_TEXT	SEGMENT
_pSend$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GC_InfoSend@PartySearch@@QAEXH@Z PROC			; PartySearch::GC_InfoSend, COMDAT
; _this$ = ecx

; 525  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 526  : 	if(!this->ActiveSystem)

  00010	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00013	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00016	0f 84 88 00 00
	00		 je	 $LN2@GC_InfoSen

; 527  : 	{
; 528  : 		return;
; 529  : 	}
; 530  : 
; 531  : 	LPOBJ lpUser = &gObj[aIndex];

  0001c	8b c2		 mov	 eax, edx
  0001e	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00024	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 532  : 
; 533  : 	CG_AutoPartyInfo pSend;
; 534  : 
; 535  : 	pSend.h.set((LPBYTE)&pSend, 0xFB, 0x1B, sizeof(pSend));

  0002a	c7 45 ec c1 10
	fb 1b		 mov	 DWORD PTR _pSend$[ebp], 469438657 ; 1bfb10c1H

; 536  : 	pSend.ActiveSystem = lpUser->pt_Active;

  00031	0f b6 88 7c 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10364]
  00038	88 4d f0	 mov	 BYTE PTR _pSend$[ebp+4], cl

; 537  : 	pSend.MaxLevel = lpUser->pt_MaxLevel;

  0003b	66 8b 88 7e 28
	00 00		 mov	 cx, WORD PTR [eax+10366]
  00042	66 89 4d f2	 mov	 WORD PTR _pSend$[ebp+6], cx

; 538  : 	pSend.bAllClass = lpUser->pt_bAllClass;

  00046	0f b6 88 80 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10368]
  0004d	88 4d f4	 mov	 BYTE PTR _pSend$[ebp+8], cl

; 539  : 	pSend.bOnlyOneClass = lpUser->pt_bOnlyOneClass;

  00050	0f b6 88 81 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10369]
  00057	88 4d f5	 mov	 BYTE PTR _pSend$[ebp+9], cl

; 540  : 	pSend.bDarkWizard = lpUser->pt_bDarkWizard;

  0005a	0f b6 88 82 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10370]
  00061	88 4d f6	 mov	 BYTE PTR _pSend$[ebp+10], cl

; 541  : 	pSend.bDarkKnight = lpUser->pt_bDarkKnight;

  00064	0f b6 88 83 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10371]
  0006b	88 4d f7	 mov	 BYTE PTR _pSend$[ebp+11], cl

; 542  : 	pSend.bElf = lpUser->pt_bElf;

  0006e	0f b6 88 84 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10372]
  00075	88 4d f8	 mov	 BYTE PTR _pSend$[ebp+12], cl

; 543  : 	pSend.bMagicGladiator = lpUser->pt_bMagicGladiator;

  00078	0f b6 88 85 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10373]
  0007f	88 4d f9	 mov	 BYTE PTR _pSend$[ebp+13], cl

; 544  : 	pSend.bDarkLord = lpUser->pt_bDarkLord;

  00082	0f b6 88 86 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10374]
  00089	88 4d fa	 mov	 BYTE PTR _pSend$[ebp+14], cl

; 545  : 	pSend.bSummoner = lpUser->pt_bSummoner;

  0008c	8a 80 87 28 00
	00		 mov	 al, BYTE PTR [eax+10375]

; 546  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  00092	6a 10		 push	 16			; 00000010H
  00094	8d 4d ec	 lea	 ecx, DWORD PTR _pSend$[ebp]
  00097	51		 push	 ecx
  00098	52		 push	 edx
  00099	88 45 fb	 mov	 BYTE PTR _pSend$[ebp+15], al
  0009c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GC_InfoSen:

; 547  : }

  000a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a7	33 cd		 xor	 ecx, ebp
  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 04 00	 ret	 4
?GC_InfoSend@PartySearch@@QAEXH@Z ENDP			; PartySearch::GC_InfoSend
_TEXT	ENDS
PUBLIC	??_C@_0BH@GECMHLPB@ZtData?2PartySearch?4txt?$AA@ ; `string'
PUBLIC	?Load@PartySearch@@QAEXXZ			; PartySearch::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
;	COMDAT ??_C@_0BH@GECMHLPB@ZtData?2PartySearch?4txt?$AA@
CONST	SEGMENT
??_C@_0BH@GECMHLPB@ZtData?2PartySearch?4txt?$AA@ DB 'ZtData\PartySearch.t'
	DB	'xt', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@PartySearch@@QAEXXZ
_TEXT	SEGMENT
?Load@PartySearch@@QAEXXZ PROC				; PartySearch::Load, COMDAT
; _this$ = ecx

; 24   : 	if(g_ZtLicense.user.PartySearch == false)

  00000	80 3d d5 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+213, 0
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 1c		 je	 SHORT $LN2@Load

; 25   : 	{
; 26   : 		return;
; 27   : 	}
; 28   : 	this->Init();

  0000c	e8 00 00 00 00	 call	 ?Init@PartySearch@@QAEXXZ ; PartySearch::Init

; 29   : 
; 30   : 	this->Read(gDirPath.GetNewPath("ZtData\\PartySearch.txt"));

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GECMHLPB@ZtData?2PartySearch?4txt?$AA@
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0001b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00020	50		 push	 eax
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?Read@PartySearch@@QAEXPAD@Z ; PartySearch::Read
$LN2@Load:
  00028	5e		 pop	 esi

; 31   : }

  00029	c3		 ret	 0
?Load@PartySearch@@QAEXXZ ENDP				; PartySearch::Load
_TEXT	ENDS
PUBLIC	??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@OJNNEMCA@PartySearch?4cpp?$AA@	; `string'
PUBLIC	?LoadBinary@PartySearch@@QAEXHPAE@Z		; PartySearch::LoadBinary
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
;	COMDAT ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@ DB 'error : %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OJNNEMCA@PartySearch?4cpp?$AA@
CONST	SEGMENT
??_C@_0BA@OJNNEMCA@PartySearch?4cpp?$AA@ DB 'PartySearch.cpp', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadBinary@PartySearch@@QAEXHPAE@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_buf$ = 12						; size = 4
?LoadBinary@PartySearch@@QAEXHPAE@Z PROC		; PartySearch::LoadBinary, COMDAT
; _this$ = ecx

; 486  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 487  : 	if(!this->ActiveSystem)

  00006	80 3f 00	 cmp	 BYTE PTR [edi], 0
  00009	0f 84 e5 00 00
	00		 je	 $LN4@LoadBinary

; 488  : 	{
; 489  : 		return;
; 490  : 	}
; 491  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  0000f	56		 push	 esi
  00010	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00013	85 f6		 test	 esi, esi
  00015	78 0f		 js	 SHORT $LN8@LoadBinary
  00017	33 c0		 xor	 eax, eax
  00019	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  0001f	0f 9e c0	 setle	 al
  00022	85 c0		 test	 eax, eax
  00024	75 1e		 jne	 SHORT $LN2@LoadBinary
$LN8@LoadBinary:

; 492  : 	{
; 493  : 		LogAdd("error : %s %d", __FILE__, __LINE__);

  00026	68 ed 01 00 00	 push	 493			; 000001edH
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OJNNEMCA@PartySearch?4cpp?$AA@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	5e		 pop	 esi
  0003f	5f		 pop	 edi

; 521  : }

  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
$LN2@LoadBinary:

; 494  : 		return;
; 495  : 	}
; 496  : 
; 497  : 	LPOBJ lpObj = &gObj[aIndex];

  00044	8b c6		 mov	 eax, esi
  00046	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 498  : 
; 499  : 	if ( lpObj->Connected < PLAYER_LOGGED )

  0004c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00052	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00056	0f 8c 97 00 00
	00		 jl	 $LN9@LoadBinary

; 500  : 	{
; 501  : 		return;
; 502  : 	}
; 503  : 	LPOBJ lpUser = &gObj[aIndex];
; 504  : 
; 505  : 	lpUser->pt_Active = buf[0];

  0005c	8b 55 0c	 mov	 edx, DWORD PTR _buf$[ebp]
  0005f	80 3a 00	 cmp	 BYTE PTR [edx], 0
  00062	53		 push	 ebx
  00063	0f 95 c1	 setne	 cl
  00066	88 88 7c 28 00
	00		 mov	 BYTE PTR [eax+10364], cl

; 506  : 
; 507  : 	lpUser->pt_MaxLevel = MAKE_NUMBERW(buf[1], buf[2]);

  0006c	0f b6 4a 01	 movzx	 ecx, BYTE PTR [edx+1]
  00070	0f b6 5a 02	 movzx	 ebx, BYTE PTR [edx+2]
  00074	66 c1 e1 08	 shl	 cx, 8
  00078	66 0b cb	 or	 cx, bx
  0007b	66 89 88 7e 28
	00 00		 mov	 WORD PTR [eax+10366], cx

; 508  : 
; 509  : 	lpUser->pt_bAllClass = buf[3];

  00082	80 7a 03 00	 cmp	 BYTE PTR [edx+3], 0

; 510  : 	lpUser->pt_bOnlyOneClass = buf[4];
; 511  : 
; 512  : 	lpUser->pt_bDarkWizard = buf[5];
; 513  : 	lpUser->pt_bDarkKnight = buf[6];
; 514  : 	lpUser->pt_bElf = buf[7];
; 515  : 	lpUser->pt_bMagicGladiator = buf[8];
; 516  : 	lpUser->pt_bDarkLord = buf[9];
; 517  : 	lpUser->pt_bSummoner = buf[10];
; 518  : 
; 519  : 
; 520  : 	this->GC_InfoSend(aIndex);

  00086	56		 push	 esi
  00087	0f 95 c1	 setne	 cl
  0008a	88 88 80 28 00
	00		 mov	 BYTE PTR [eax+10368], cl
  00090	80 7a 04 00	 cmp	 BYTE PTR [edx+4], 0
  00094	0f 95 c1	 setne	 cl
  00097	88 88 81 28 00
	00		 mov	 BYTE PTR [eax+10369], cl
  0009d	80 7a 05 00	 cmp	 BYTE PTR [edx+5], 0
  000a1	0f 95 c1	 setne	 cl
  000a4	88 88 82 28 00
	00		 mov	 BYTE PTR [eax+10370], cl
  000aa	80 7a 06 00	 cmp	 BYTE PTR [edx+6], 0
  000ae	0f 95 c1	 setne	 cl
  000b1	88 88 83 28 00
	00		 mov	 BYTE PTR [eax+10371], cl
  000b7	80 7a 07 00	 cmp	 BYTE PTR [edx+7], 0
  000bb	0f 95 c1	 setne	 cl
  000be	88 88 84 28 00
	00		 mov	 BYTE PTR [eax+10372], cl
  000c4	80 7a 08 00	 cmp	 BYTE PTR [edx+8], 0
  000c8	0f 95 c1	 setne	 cl
  000cb	88 88 85 28 00
	00		 mov	 BYTE PTR [eax+10373], cl
  000d1	80 7a 09 00	 cmp	 BYTE PTR [edx+9], 0
  000d5	0f 95 c1	 setne	 cl
  000d8	88 88 86 28 00
	00		 mov	 BYTE PTR [eax+10374], cl
  000de	80 7a 0a 00	 cmp	 BYTE PTR [edx+10], 0
  000e2	8b cf		 mov	 ecx, edi
  000e4	0f 95 c2	 setne	 dl
  000e7	88 90 87 28 00
	00		 mov	 BYTE PTR [eax+10375], dl
  000ed	e8 00 00 00 00	 call	 ?GC_InfoSend@PartySearch@@QAEXH@Z ; PartySearch::GC_InfoSend
  000f2	5b		 pop	 ebx
$LN9@LoadBinary:
  000f3	5e		 pop	 esi
$LN4@LoadBinary:
  000f4	5f		 pop	 edi

; 521  : }

  000f5	5d		 pop	 ebp
  000f6	c2 08 00	 ret	 8
?LoadBinary@PartySearch@@QAEXHPAE@Z ENDP		; PartySearch::LoadBinary
_TEXT	ENDS
END
