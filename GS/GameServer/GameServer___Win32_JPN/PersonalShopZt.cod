; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\PersonalShopZt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_PersonalShopZt@@3VPersonalShopZt@@A		; g_PersonalShopZt
_BSS	SEGMENT
?g_PersonalShopZt@@3VPersonalShopZt@@A DB 01cH DUP (?)	; g_PersonalShopZt
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PersonalShopZt@@QAEXXZ			; PersonalShopZt::Init
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\personalshopzt.cpp
;	COMDAT ?Init@PersonalShopZt@@QAEXXZ
_TEXT	SEGMENT
?Init@PersonalShopZt@@QAEXXZ PROC			; PersonalShopZt::Init, COMDAT
; _this$ = ecx

; 15   : 	this->Enable = FALSE;

  00000	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 16   : }

  00003	c3		 ret	 0
?Init@PersonalShopZt@@QAEXXZ ENDP			; PersonalShopZt::Init
_TEXT	ENDS
PUBLIC	??_C@_0M@BPPCAONM@CreditPrice?$AA@		; `string'
PUBLIC	??_C@_0L@MIIFHPO@BonusPrice?$AA@		; `string'
PUBLIC	??_C@_05MGEEICMI@NPC_Y?$AA@			; `string'
PUBLIC	??_C@_05NPFPLDIJ@NPC_X?$AA@			; `string'
PUBLIC	??_C@_07BEANADGF@NPC_MAP?$AA@			; `string'
PUBLIC	??_C@_09FENANBBA@NPC_CLASS?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	?Read@PersonalShopZt@@QAEXPAD@Z			; PersonalShopZt::Read
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0M@BPPCAONM@CreditPrice?$AA@
CONST	SEGMENT
??_C@_0M@BPPCAONM@CreditPrice?$AA@ DB 'CreditPrice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MIIFHPO@BonusPrice?$AA@
CONST	SEGMENT
??_C@_0L@MIIFHPO@BonusPrice?$AA@ DB 'BonusPrice', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGEEICMI@NPC_Y?$AA@
CONST	SEGMENT
??_C@_05MGEEICMI@NPC_Y?$AA@ DB 'NPC_Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPFPLDIJ@NPC_X?$AA@
CONST	SEGMENT
??_C@_05NPFPLDIJ@NPC_X?$AA@ DB 'NPC_X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEANADGF@NPC_MAP?$AA@
CONST	SEGMENT
??_C@_07BEANADGF@NPC_MAP?$AA@ DB 'NPC_MAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FENANBBA@NPC_CLASS?$AA@
CONST	SEGMENT
??_C@_09FENANBBA@NPC_CLASS?$AA@ DB 'NPC_CLASS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Read@PersonalShopZt@@QAEXPAD@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
?Read@PersonalShopZt@@QAEXPAD@Z PROC			; PersonalShopZt::Read, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 34   : 	this->Enable = GetPrivateProfileInt("Common", "Enable", 0, File);

  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetPrivateProfileIntA@16
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _File$[ebp]
  0000f	57		 push	 edi
  00010	6a 00		 push	 0
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0001c	8b f1		 mov	 esi, ecx
  0001e	ff d3		 call	 ebx

; 35   : 
; 36   : 	this->NPC_CLASS = GetPrivateProfileInt("Common", "NPC_CLASS", 0, File);

  00020	57		 push	 edi
  00021	6a 00		 push	 0
  00023	85 c0		 test	 eax, eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_09FENANBBA@NPC_CLASS?$AA@
  0002a	0f 95 c0	 setne	 al
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00032	88 06		 mov	 BYTE PTR [esi], al
  00034	ff d3		 call	 ebx

; 37   : 	this->NPC_MAP = GetPrivateProfileInt("Common", "NPC_MAP", 0, File);

  00036	57		 push	 edi
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_07BEANADGF@NPC_MAP?$AA@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00046	ff d3		 call	 ebx

; 38   : 	this->NPC_X = GetPrivateProfileInt("Common", "NPC_X", 0, File);

  00048	57		 push	 edi
  00049	6a 00		 push	 0
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05NPFPLDIJ@NPC_X?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00055	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00058	ff d3		 call	 ebx

; 39   : 	this->NPC_Y = GetPrivateProfileInt("Common", "NPC_Y", 0, File);

  0005a	57		 push	 edi
  0005b	6a 00		 push	 0
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_05MGEEICMI@NPC_Y?$AA@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00067	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0006a	ff d3		 call	 ebx

; 40   : 
; 41   : 	this->BonusPrice = GetPrivateProfileInt("Common", "BonusPrice", 0, File);

  0006c	57		 push	 edi
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIIFHPO@BonusPrice?$AA@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00079	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0007c	ff d3		 call	 ebx

; 42   : 
; 43   : 	this->CreditPrice = 0;
; 44   : 
; 45   : 	if(g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::Gredy2) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || 
; 46   : 	   g_ZtLicense.CheckUser(eZtUB::ProtectDebug) || g_ZtLicense.CheckUser(eZtUB::mu4you) || g_ZtLicense.CheckUser(eZtUB::NSGames))

  0007e	6a 20		 push	 32			; 00000020H
  00080	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00085	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00088	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0008f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00094	84 c0		 test	 al, al
  00096	75 50		 jne	 SHORT $LN1@Read
  00098	6a 22		 push	 34			; 00000022H
  0009a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0009f	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000a4	84 c0		 test	 al, al
  000a6	75 40		 jne	 SHORT $LN1@Read
  000a8	6a 21		 push	 33			; 00000021H
  000aa	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000af	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000b4	84 c0		 test	 al, al
  000b6	75 30		 jne	 SHORT $LN1@Read
  000b8	6a 4b		 push	 75			; 0000004bH
  000ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000bf	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000c4	84 c0		 test	 al, al
  000c6	75 20		 jne	 SHORT $LN1@Read
  000c8	6a 4e		 push	 78			; 0000004eH
  000ca	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000cf	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000d4	84 c0		 test	 al, al
  000d6	75 10		 jne	 SHORT $LN1@Read
  000d8	6a 51		 push	 81			; 00000051H
  000da	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000df	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000e4	84 c0		 test	 al, al
  000e6	74 12		 je	 SHORT $LN2@Read
$LN1@Read:

; 47   : 	{
; 48   : 		this->CreditPrice = GetPrivateProfileInt("Common", "CreditPrice", 1, File);

  000e8	57		 push	 edi
  000e9	6a 01		 push	 1
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BPPCAONM@CreditPrice?$AA@
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000f5	ff d3		 call	 ebx
  000f7	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN2@Read:
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx

; 49   : 	}
; 50   : 	
; 51   : }

  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
?Read@PersonalShopZt@@QAEXPAD@Z ENDP			; PersonalShopZt::Read
_TEXT	ENDS
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?Search@PersonalShopZt@@QAEXHPAUCG_PersonalPage@@@Z ; PersonalShopZt::Search
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	_strncpy:PROC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedZt@@YA_NH@Z:PROC		; gObjIsConnectedZt
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Search@PersonalShopZt@@QAEXHPAUCG_PersonalPage@@@Z
_TEXT	SEGMENT
_EndCount$ = -5088					; size = 4
_StartCount$ = -5084					; size = 4
_n$209213 = -5080					; size = 4
_icount$ = -5076					; size = 2
_aIndex$GSCopy$ = -5072					; size = 4
tv321 = -5068						; size = 4
_datasize$ = -5064					; size = 4
_SendCount$ = -5057					; size = 1
_psi$209222 = -5056					; size = 50
_SendBuff$ = -5004					; size = 5000
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_aRecv$ = 12						; size = 4
?Search@PersonalShopZt@@QAEXHPAUCG_PersonalPage@@@Z PROC ; PersonalShopZt::Search, COMDAT
; _this$ = ecx

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 e0 13 00 00	 mov	 eax, 5088		; 000013e0H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 86   : 	if(!this->Enable)

  00017	80 39 00	 cmp	 BYTE PTR [ecx], 0
  0001a	56		 push	 esi
  0001b	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]

; 116  : 	int EndCount =  StartCount + 10;
; 117  : 
; 118  : 	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  0001e	89 b5 30 ec ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], esi
  00024	0f 84 c3 01 00
	00		 je	 $LN8@Search

; 87   : 	{
; 88   : 		return;
; 89   : 	}
; 90   : 
; 91   : 	if(!gObjIsConnectedZt(aIndex))

  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00030	83 c4 04	 add	 esp, 4
  00033	84 c0		 test	 al, al
  00035	0f 84 b2 01 00
	00		 je	 $LN8@Search

; 92   : 	{
; 93   : 		return;
; 94   : 	}
; 95   : 
; 96   : 	LPOBJ lpUser = &gObj[aIndex];
; 97   : 
; 98   : 	int Page = aRecv->Page;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0003e	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00042	8b ce		 mov	 ecx, esi
  00044	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0004a	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 99   : 
; 100  : 	if(Page < 0 )

  00050	85 c0		 test	 eax, eax
  00052	79 02		 jns	 SHORT $LN10@Search

; 101  : 	{
; 102  : 		Page = 0;

  00054	33 c0		 xor	 eax, eax
$LN10@Search:

; 103  : 	}
; 104  : 
; 105  : 	if(lpUser->OffExp != 0 || lpUser->OffTrade !=0)

  00056	83 b9 98 22 00
	00 00		 cmp	 DWORD PTR [ecx+8856], 0
  0005d	0f 85 8a 01 00
	00		 jne	 $LN8@Search
  00063	83 b9 ac 22 00
	00 00		 cmp	 DWORD PTR [ecx+8876], 0
  0006a	0f 85 7d 01 00
	00		 jne	 $LN8@Search

; 106  : 	{
; 107  : 		return;
; 108  : 	}
; 109  : 
; 110  : 	BYTE SendBuff[5000];
; 111  : 	int datasize = 8;
; 112  : 	short icount = 0;

  00070	53		 push	 ebx
  00071	57		 push	 edi
  00072	33 d2		 xor	 edx, edx

; 113  : 	BYTE SendCount = 0;
; 114  : 
; 115  : 	int StartCount = Page * 10;

  00074	8d 3c 80	 lea	 edi, DWORD PTR [eax+eax*4]
  00077	03 ff		 add	 edi, edi

; 116  : 	int EndCount =  StartCount + 10;
; 117  : 
; 118  : 	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  00079	b8 b0 36 00 00	 mov	 eax, 14000		; 000036b0H
  0007e	b9 00 a7 40 09	 mov	 ecx, 155232000		; 0940a700H
  00083	c7 85 38 ec ff
	ff 08 00 00 00	 mov	 DWORD PTR _datasize$[ebp], 8
  0008d	89 95 2c ec ff
	ff		 mov	 DWORD PTR _icount$[ebp], edx
  00093	88 95 3f ec ff
	ff		 mov	 BYTE PTR _SendCount$[ebp], dl
  00099	89 bd 24 ec ff
	ff		 mov	 DWORD PTR _StartCount$[ebp], edi
  0009f	89 85 28 ec ff
	ff		 mov	 DWORD PTR _n$209213[ebp], eax
  000a5	8d 9d 7c ec ff
	ff		 lea	 ebx, DWORD PTR _SendBuff$[ebp+8]
  000ab	89 8d 34 ec ff
	ff		 mov	 DWORD PTR tv321[ebp], ecx
$LL20@Search:

; 119  : 	{
; 120  : 		LPOBJ lpSearch = &gObj[n];

  000b1	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000b7	03 f1		 add	 esi, ecx

; 121  : 		if(lpSearch->Connected < PLAYER_PLAYING || !lpSearch->m_bPShopOpen || n == aIndex) 

  000b9	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  000bd	0f 8c ae 00 00
	00		 jl	 $LN6@Search
  000c3	80 be c4 0e 00
	00 00		 cmp	 BYTE PTR [esi+3780], 0
  000ca	0f 84 a1 00 00
	00		 je	 $LN6@Search
  000d0	3b 85 30 ec ff
	ff		 cmp	 eax, DWORD PTR _aIndex$GSCopy$[ebp]
  000d6	0f 84 95 00 00
	00		 je	 $LN6@Search

; 122  : 		{
; 123  : 			continue;
; 124  : 		}
; 125  : 
; 126  : 		if( StartCount <= icount && EndCount > icount)

  000dc	0f bf ca	 movsx	 ecx, dx
  000df	3b f9		 cmp	 edi, ecx
  000e1	7f 7b		 jg	 SHORT $LN19@Search
  000e3	8d 57 0a	 lea	 edx, DWORD PTR [edi+10]
  000e6	89 95 20 ec ff
	ff		 mov	 DWORD PTR _EndCount$[ebp], edx
  000ec	3b d1		 cmp	 edx, ecx
  000ee	7e 6e		 jle	 SHORT $LN19@Search

; 127  : 		{
; 128  : 			if(SendCount < 10)

  000f0	80 bd 3f ec ff
	ff 0a		 cmp	 BYTE PTR _SendCount$[ebp], 10 ; 0000000aH
  000f7	73 65		 jae	 SHORT $LN19@Search

; 129  : 			{
; 130  : 				GC_PersonalShopInfo psi;
; 131  : 				psi.aIndex = n;

  000f9	66 89 85 40 ec
	ff ff		 mov	 WORD PTR _psi$209222[ebp], ax

; 132  : 				strncpy(psi.Name, lpSearch->Name, 10);

  00100	6a 0a		 push	 10			; 0000000aH
  00102	8d 46 77	 lea	 eax, DWORD PTR [esi+119]
  00105	50		 push	 eax
  00106	8d 8d 42 ec ff
	ff		 lea	 ecx, DWORD PTR _psi$209222[ebp+2]
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _strncpy

; 133  : 				strncpy(psi.PersonalText, lpSearch->m_szPShopText, 36);

  00112	6a 24		 push	 36			; 00000024H
  00114	81 c6 c8 0e 00
	00		 add	 esi, 3784		; 00000ec8H
  0011a	8d 95 4d ec ff
	ff		 lea	 edx, DWORD PTR _psi$209222[ebp+13]
  00120	56		 push	 esi
  00121	52		 push	 edx
  00122	e8 00 00 00 00	 call	 _strncpy

; 134  : 				psi.Value = 0;
; 135  : 
; 136  : 				memcpy(&SendBuff[datasize],&psi,sizeof(psi));
; 137  : 				datasize += sizeof(psi);

  00127	83 85 38 ec ff
	ff 32		 add	 DWORD PTR _datasize$[ebp], 50 ; 00000032H

; 138  : 
; 139  : 				SendCount++;

  0012e	8b 85 28 ec ff
	ff		 mov	 eax, DWORD PTR _n$209213[ebp]
  00134	8b fb		 mov	 edi, ebx
  00136	c6 85 71 ec ff
	ff 00		 mov	 BYTE PTR _psi$209222[ebp+49], 0
  0013d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00142	8d b5 40 ec ff
	ff		 lea	 esi, DWORD PTR _psi$209222[ebp]
  00148	f3 a5		 rep movsd
  0014a	83 c4 18	 add	 esp, 24			; 00000018H
  0014d	66 a5		 movsw
  0014f	8b bd 24 ec ff
	ff		 mov	 edi, DWORD PTR _StartCount$[ebp]
  00155	83 c3 32	 add	 ebx, 50			; 00000032H
  00158	fe 85 3f ec ff
	ff		 inc	 BYTE PTR _SendCount$[ebp]
$LN19@Search:

; 140  : 			}
; 141  : 		}
; 142  : 
; 143  : 		icount++;

  0015e	8b 95 2c ec ff
	ff		 mov	 edx, DWORD PTR _icount$[ebp]
  00164	8b 8d 34 ec ff
	ff		 mov	 ecx, DWORD PTR tv321[ebp]
  0016a	42		 inc	 edx
  0016b	89 95 2c ec ff
	ff		 mov	 DWORD PTR _icount$[ebp], edx
$LN6@Search:

; 116  : 	int EndCount =  StartCount + 10;
; 117  : 
; 118  : 	for(int n=OBJ_STARTUSERINDZT;n<OBJMAX;n++)

  00171	81 c1 50 2b 00
	00		 add	 ecx, 11088		; 00002b50H
  00177	40		 inc	 eax
  00178	89 85 28 ec ff
	ff		 mov	 DWORD PTR _n$209213[ebp], eax
  0017e	89 8d 34 ec ff
	ff		 mov	 DWORD PTR tv321[ebp], ecx
  00184	81 f9 80 d7 e9
	09		 cmp	 ecx, 166320000		; 09e9d780H
  0018a	0f 8c 21 ff ff
	ff		 jl	 $LL20@Search

; 144  : 	}
; 145  : 
; 146  : 	SendBuff[0]=0xC2;	// packet header
; 147  : 	SendBuff[1]=SET_NUMBERH(datasize);

  00190	8b 85 38 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  00196	8b c8		 mov	 ecx, eax
  00198	c1 e9 08	 shr	 ecx, 8
  0019b	88 8d 75 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], cl

; 148  : 	SendBuff[2]=SET_NUMBERL(datasize);
; 149  : 	SendBuff[3]=0xFA;
; 150  : 	SendBuff[4]=0x09;
; 151  : 	SendBuff[5]=SET_NUMBERH(icount);

  001a1	8b ca		 mov	 ecx, edx

; 152  : 	SendBuff[6]=SET_NUMBERL(icount);
; 153  : 	SendBuff[7]=SendCount;
; 154  : 	DataSend(aIndex,SendBuff,datasize);

  001a3	50		 push	 eax
  001a4	c1 e9 08	 shr	 ecx, 8
  001a7	88 85 76 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al
  001ad	8d 85 74 ec ff
	ff		 lea	 eax, DWORD PTR _SendBuff$[ebp]
  001b3	88 8d 79 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], cl
  001b9	8b 8d 30 ec ff
	ff		 mov	 ecx, DWORD PTR _aIndex$GSCopy$[ebp]
  001bf	88 95 7a ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+6], dl
  001c5	8a 95 3f ec ff
	ff		 mov	 dl, BYTE PTR _SendCount$[ebp]
  001cb	50		 push	 eax
  001cc	51		 push	 ecx
  001cd	c6 85 74 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H
  001d4	66 c7 85 77 ec
	ff ff fa 09	 mov	 WORD PTR _SendBuff$[ebp+3], 2554 ; 000009faH
  001dd	88 95 7b ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+7], dl
  001e3	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  001e8	83 c4 0c	 add	 esp, 12			; 0000000cH
  001eb	5f		 pop	 edi
  001ec	5b		 pop	 ebx
$LN8@Search:

; 155  : }

  001ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f0	33 cd		 xor	 ecx, ebp
  001f2	5e		 pop	 esi
  001f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f8	8b e5		 mov	 esp, ebp
  001fa	5d		 pop	 ebp
  001fb	c2 08 00	 ret	 8
?Search@PersonalShopZt@@QAEXHPAUCG_PersonalPage@@@Z ENDP ; PersonalShopZt::Search
_TEXT	ENDS
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?UpdatePSInventoryUser@PersonalShopZt@@QAEXH@Z	; PersonalShopZt::UpdatePSInventoryUser
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
; Function compile flags: /Ogtp
;	COMDAT ?UpdatePSInventoryUser@PersonalShopZt@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$209248 = -5044					; size = 24
_aIndex$GSCopy$ = -5020					; size = 4
_n$209243 = -5016					; size = 4
_datasize$ = -5012					; size = 4
_icount$ = -5005					; size = 1
_SendBuff$ = -5004					; size = 5000
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?UpdatePSInventoryUser@PersonalShopZt@@QAEXH@Z PROC	; PersonalShopZt::UpdatePSInventoryUser, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 b4 13 00 00	 mov	 eax, 5044		; 000013b4H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 159  : 	//if(!this->Enable)
; 160  : 	//{
; 161  : 	//	return;
; 162  : 	//}
; 163  : 
; 164  : 	if(!this->Enable)

  00017	80 39 00	 cmp	 BYTE PTR [ecx], 0
  0001a	57		 push	 edi
  0001b	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 178  : 	BYTE SendBuff[5000];
; 179  : 
; 180  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  0001e	89 bd 64 ec ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], edi
  00024	0f 84 55 01 00
	00		 je	 $LN7@UpdatePSIn

; 165  : 	{
; 166  :  		return;
; 167  : 	}
; 168  : 
; 169  : 	if(!gObjIsConnectedZt(aIndex))

  0002a	57		 push	 edi
  0002b	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00030	83 c4 04	 add	 esp, 4
  00033	84 c0		 test	 al, al
  00035	0f 84 44 01 00
	00		 je	 $LN7@UpdatePSIn

; 170  : 	{
; 171  : 		return;
; 172  : 	}
; 173  : 
; 174  : 	LPOBJ lpUser = &gObj[aIndex];

  0003b	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00041	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00047	53		 push	 ebx
  00048	56		 push	 esi

; 175  : 
; 176  : 	int datasize = 6;

  00049	c7 85 6c ec ff
	ff 06 00 00 00	 mov	 DWORD PTR _datasize$[ebp], 6

; 177  : 	BYTE icount = 0;

  00053	c6 85 73 ec ff
	ff 00		 mov	 BYTE PTR _icount$[ebp], 0

; 178  : 	BYTE SendBuff[5000];
; 179  : 
; 180  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  0005a	c7 85 68 ec ff
	ff cc 00 00 00	 mov	 DWORD PTR _n$209243[ebp], 204 ; 000000ccH
  00064	8d b5 7a ec ff
	ff		 lea	 esi, DWORD PTR _SendBuff$[ebp+6]
  0006a	bb f0 a8 00 00	 mov	 ebx, 43248		; 0000a8f0H
  0006f	90		 npad	 1
$LL4@UpdatePSIn:

; 181  : 	{
; 182  : 		if ( lpUser->Inventory1[n].IsItem() == TRUE )

  00070	8b 8f 34 0e 00
	00		 mov	 ecx, DWORD PTR [edi+3636]
  00076	03 cb		 add	 ecx, ebx
  00078	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0007d	83 f8 01	 cmp	 eax, 1
  00080	0f 85 95 00 00
	00		 jne	 $LN3@UpdatePSIn

; 183  : 		{
; 184  : 			GC_PSInventoryValue pMsg;
; 185  : 
; 186  : 			pMsg.ItemPos = n;

  00086	66 8b 85 68 ec
	ff ff		 mov	 ax, WORD PTR _n$209243[ebp]
  0008d	66 89 85 4c ec
	ff ff		 mov	 WORD PTR _pMsg$209248[ebp], ax

; 187  : 			//ItemByteConvert(pMsgIL.ItemInfo, lpObjTarget->Inventory1[n]);
; 188  : 			//pMsgIL.PShopItemValue = lpObjTarget->Inventory1[n].m_iPShopValue;
; 189  : 			pMsg.Zen = lpUser->Inventory1[n].m_iPShopValue;

  00094	8b 87 34 0e 00
	00		 mov	 eax, DWORD PTR [edi+3636]

; 190  : 			pMsg.Bonus = lpUser->Inventory1[n].m_iPShopBonus;

  0009a	8b 54 18 78	 mov	 edx, DWORD PTR [eax+ebx+120]
  0009e	8b 4c 18 74	 mov	 ecx, DWORD PTR [eax+ebx+116]
  000a2	03 c3		 add	 eax, ebx
  000a4	89 95 54 ec ff
	ff		 mov	 DWORD PTR _pMsg$209248[ebp+8], edx

; 191  : 			pMsg.Bless = lpUser->Inventory1[n].m_PShopBlessValue;

  000aa	0f b7 50 7c	 movzx	 edx, WORD PTR [eax+124]

; 192  : 			pMsg.Soul = lpUser->Inventory1[n].m_PShopSoulValue;
; 193  : 			pMsg.Chaos = lpUser->Inventory1[n].m_PShopChaosValue;
; 194  : 			pMsg.Life = lpUser->Inventory1[n].m_PShopLifeValue;
; 195  : 			#if(DEV_PERSONAL_CREDIT)
; 196  : 			pMsg.Credit = lpUser->Inventory1[n].m_iPShopCredit;
; 197  : 			#endif
; 198  : 			memcpy(&SendBuff[datasize], &pMsg, sizeof(pMsg));
; 199  : 			
; 200  : 			datasize += sizeof(pMsg);

  000ae	83 85 6c ec ff
	ff 18		 add	 DWORD PTR _datasize$[ebp], 24 ; 00000018H
  000b5	66 89 95 58 ec
	ff ff		 mov	 WORD PTR _pMsg$209248[ebp+12], dx
  000bc	0f b7 50 7e	 movzx	 edx, WORD PTR [eax+126]
  000c0	66 89 95 5a ec
	ff ff		 mov	 WORD PTR _pMsg$209248[ebp+14], dx
  000c7	0f b7 90 80 00
	00 00		 movzx	 edx, WORD PTR [eax+128]
  000ce	66 89 95 5c ec
	ff ff		 mov	 WORD PTR _pMsg$209248[ebp+16], dx
  000d5	0f b7 90 82 00
	00 00		 movzx	 edx, WORD PTR [eax+130]
  000dc	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [eax+132]
  000e2	66 89 95 5e ec
	ff ff		 mov	 WORD PTR _pMsg$209248[ebp+18], dx
  000e9	8b 95 4c ec ff
	ff		 mov	 edx, DWORD PTR _pMsg$209248[ebp]
  000ef	89 16		 mov	 DWORD PTR [esi], edx
  000f1	8b 95 58 ec ff
	ff		 mov	 edx, DWORD PTR _pMsg$209248[ebp+12]
  000f7	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  000fa	8b 8d 54 ec ff
	ff		 mov	 ecx, DWORD PTR _pMsg$209248[ebp+8]
  00100	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00103	8b 8d 5c ec ff
	ff		 mov	 ecx, DWORD PTR _pMsg$209248[ebp+16]
  00109	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  0010c	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0010f	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00112	83 c6 18	 add	 esi, 24			; 00000018H

; 201  : 
; 202  : 			icount++;

  00115	fe 85 73 ec ff
	ff		 inc	 BYTE PTR _icount$[ebp]
$LN3@UpdatePSIn:

; 178  : 	BYTE SendBuff[5000];
; 179  : 
; 180  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  0011b	ff 85 68 ec ff
	ff		 inc	 DWORD PTR _n$209243[ebp]
  00121	81 c3 d4 00 00
	00		 add	 ebx, 212		; 000000d4H
  00127	81 fb 70 c3 00
	00		 cmp	 ebx, 50032		; 0000c370H
  0012d	0f 8c 3d ff ff
	ff		 jl	 $LL4@UpdatePSIn

; 203  : 		}
; 204  : 	}
; 205  : 
; 206  : 	SendBuff[0]=0xC2;	// packet header
; 207  : 	SendBuff[1]=SET_NUMBERH(datasize);

  00133	8b 85 6c ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]

; 208  : 	SendBuff[2]=SET_NUMBERL(datasize);
; 209  : 	SendBuff[3]=0xFA;
; 210  : 	SendBuff[4]=0x0A;
; 211  : 	SendBuff[5]=icount;

  00139	8a 8d 73 ec ff
	ff		 mov	 cl, BYTE PTR _icount$[ebp]
  0013f	8b d0		 mov	 edx, eax
  00141	c1 ea 08	 shr	 edx, 8

; 212  : 	DataSend(aIndex,SendBuff,datasize);

  00144	50		 push	 eax
  00145	88 95 75 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], dl
  0014b	8d 95 74 ec ff
	ff		 lea	 edx, DWORD PTR _SendBuff$[ebp]
  00151	88 85 76 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al
  00157	8b 85 64 ec ff
	ff		 mov	 eax, DWORD PTR _aIndex$GSCopy$[ebp]
  0015d	52		 push	 edx
  0015e	50		 push	 eax
  0015f	c6 85 74 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H
  00166	66 c7 85 77 ec
	ff ff fa 0a	 mov	 WORD PTR _SendBuff$[ebp+3], 2810 ; 00000afaH
  0016f	88 8d 79 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], cl
  00175	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0017a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
$LN7@UpdatePSIn:

; 213  : }

  0017f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00182	33 cd		 xor	 ecx, ebp
  00184	5f		 pop	 edi
  00185	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018a	8b e5		 mov	 esp, ebp
  0018c	5d		 pop	 ebp
  0018d	c2 04 00	 ret	 4
?UpdatePSInventoryUser@PersonalShopZt@@QAEXH@Z ENDP	; PersonalShopZt::UpdatePSInventoryUser
_TEXT	ENDS
PUBLIC	_aTargetIndex$GSCopy$
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?UpdatePSInventoryTarget@PersonalShopZt@@QAEXHH@Z ; PersonalShopZt::UpdatePSInventoryTarget
; Function compile flags: /Ogtp
;	COMDAT ?UpdatePSInventoryTarget@PersonalShopZt@@QAEXHH@Z
_TEXT	SEGMENT
_pMsg$209271 = -5048					; size = 24
_aIndex$GSCopy$ = -5024					; size = 4
_aTargetIndex$GSCopy$ = -5020				; size = 4
_datasize$ = -5016					; size = 4
_n$209266 = -5012					; size = 4
_icount$ = -5005					; size = 1
_SendBuff$ = -5004					; size = 5000
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?UpdatePSInventoryTarget@PersonalShopZt@@QAEXHH@Z PROC	; PersonalShopZt::UpdatePSInventoryTarget, COMDAT
; _this$ = ecx

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 b8 13 00 00	 mov	 eax, 5048		; 000013b8H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 217  : 	if(!this->Enable)

  00017	80 39 00	 cmp	 BYTE PTR [ecx], 0
  0001a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0001d	57		 push	 edi
  0001e	8b 7d 0c	 mov	 edi, DWORD PTR _aTargetIndex$[ebp]

; 232  : 	BYTE SendBuff[5000];
; 233  : 
; 234  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  00021	89 85 60 ec ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], eax
  00027	89 bd 64 ec ff
	ff		 mov	 DWORD PTR _aTargetIndex$GSCopy$[ebp], edi
  0002d	0f 84 73 01 00
	00		 je	 $LN7@UpdatePSIn@2

; 218  : 	{
; 219  :  		return;
; 220  : 	}
; 221  : 
; 222  : 	if(!gObjIsConnectedZt(aIndex))

  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00039	83 c4 04	 add	 esp, 4
  0003c	84 c0		 test	 al, al
  0003e	0f 84 62 01 00
	00		 je	 $LN7@UpdatePSIn@2

; 223  : 	{
; 224  : 		return;
; 225  : 	}
; 226  : 
; 227  : 	LPOBJ lpUser = &gObj[aIndex];
; 228  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  00044	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  0004a	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00050	53		 push	 ebx
  00051	56		 push	 esi

; 229  : 
; 230  : 	int datasize = 8;

  00052	c7 85 68 ec ff
	ff 08 00 00 00	 mov	 DWORD PTR _datasize$[ebp], 8

; 231  : 	BYTE icount = 0;

  0005c	c6 85 73 ec ff
	ff 00		 mov	 BYTE PTR _icount$[ebp], 0

; 232  : 	BYTE SendBuff[5000];
; 233  : 
; 234  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  00063	c7 85 6c ec ff
	ff cc 00 00 00	 mov	 DWORD PTR _n$209266[ebp], 204 ; 000000ccH
  0006d	8d b5 7c ec ff
	ff		 lea	 esi, DWORD PTR _SendBuff$[ebp+8]
  00073	bb f0 a8 00 00	 mov	 ebx, 43248		; 0000a8f0H
  00078	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL4@UpdatePSIn@2:

; 235  : 	{
; 236  : 		if ( lpTarget->Inventory1[n].IsItem() == TRUE )

  00080	8b 8f 34 0e 00
	00		 mov	 ecx, DWORD PTR [edi+3636]
  00086	03 cb		 add	 ecx, ebx
  00088	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0008d	83 f8 01	 cmp	 eax, 1
  00090	0f 85 95 00 00
	00		 jne	 $LN3@UpdatePSIn@2

; 237  : 		{
; 238  : 			GC_PSInventoryValue pMsg;
; 239  : 
; 240  : 			pMsg.ItemPos = n;

  00096	66 8b 85 6c ec
	ff ff		 mov	 ax, WORD PTR _n$209266[ebp]
  0009d	66 89 85 48 ec
	ff ff		 mov	 WORD PTR _pMsg$209271[ebp], ax

; 241  : 			//ItemByteConvert(pMsgIL.ItemInfo, lpObjTarget->Inventory1[n]);
; 242  : 			//pMsgIL.PShopItemValue = lpObjTarget->Inventory1[n].m_iPShopValue;
; 243  : 			pMsg.Zen = lpTarget->Inventory1[n].m_iPShopValue;

  000a4	8b 87 34 0e 00
	00		 mov	 eax, DWORD PTR [edi+3636]

; 244  : 			pMsg.Bonus = lpTarget->Inventory1[n].m_iPShopBonus;

  000aa	8b 54 18 78	 mov	 edx, DWORD PTR [eax+ebx+120]
  000ae	8b 4c 18 74	 mov	 ecx, DWORD PTR [eax+ebx+116]
  000b2	03 c3		 add	 eax, ebx
  000b4	89 95 50 ec ff
	ff		 mov	 DWORD PTR _pMsg$209271[ebp+8], edx

; 245  : 			pMsg.Bless = lpTarget->Inventory1[n].m_PShopBlessValue;

  000ba	0f b7 50 7c	 movzx	 edx, WORD PTR [eax+124]

; 246  : 			pMsg.Soul = lpTarget->Inventory1[n].m_PShopSoulValue;
; 247  : 			pMsg.Chaos = lpTarget->Inventory1[n].m_PShopChaosValue;
; 248  : 			pMsg.Life = lpTarget->Inventory1[n].m_PShopLifeValue;
; 249  : 			#if(DEV_PERSONAL_CREDIT)
; 250  : 			pMsg.Credit = lpTarget->Inventory1[n].m_iPShopCredit;
; 251  : 			#endif
; 252  : 
; 253  : 			memcpy(&SendBuff[datasize], &pMsg, sizeof(pMsg));
; 254  : 			
; 255  : 			datasize += sizeof(pMsg);

  000be	83 85 68 ec ff
	ff 18		 add	 DWORD PTR _datasize$[ebp], 24 ; 00000018H
  000c5	66 89 95 54 ec
	ff ff		 mov	 WORD PTR _pMsg$209271[ebp+12], dx
  000cc	0f b7 50 7e	 movzx	 edx, WORD PTR [eax+126]
  000d0	66 89 95 56 ec
	ff ff		 mov	 WORD PTR _pMsg$209271[ebp+14], dx
  000d7	0f b7 90 80 00
	00 00		 movzx	 edx, WORD PTR [eax+128]
  000de	66 89 95 58 ec
	ff ff		 mov	 WORD PTR _pMsg$209271[ebp+16], dx
  000e5	0f b7 90 82 00
	00 00		 movzx	 edx, WORD PTR [eax+130]
  000ec	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [eax+132]
  000f2	66 89 95 5a ec
	ff ff		 mov	 WORD PTR _pMsg$209271[ebp+18], dx
  000f9	8b 95 48 ec ff
	ff		 mov	 edx, DWORD PTR _pMsg$209271[ebp]
  000ff	89 16		 mov	 DWORD PTR [esi], edx
  00101	8b 95 54 ec ff
	ff		 mov	 edx, DWORD PTR _pMsg$209271[ebp+12]
  00107	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0010a	8b 8d 50 ec ff
	ff		 mov	 ecx, DWORD PTR _pMsg$209271[ebp+8]
  00110	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00113	8b 8d 58 ec ff
	ff		 mov	 ecx, DWORD PTR _pMsg$209271[ebp+16]
  00119	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  0011c	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0011f	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00122	83 c6 18	 add	 esi, 24			; 00000018H

; 256  : 
; 257  : 			icount++;

  00125	fe 85 73 ec ff
	ff		 inc	 BYTE PTR _icount$[ebp]
$LN3@UpdatePSIn@2:

; 232  : 	BYTE SendBuff[5000];
; 233  : 
; 234  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  0012b	ff 85 6c ec ff
	ff		 inc	 DWORD PTR _n$209266[ebp]
  00131	81 c3 d4 00 00
	00		 add	 ebx, 212		; 000000d4H
  00137	81 fb 70 c3 00
	00		 cmp	 ebx, 50032		; 0000c370H
  0013d	0f 8c 3d ff ff
	ff		 jl	 $LL4@UpdatePSIn@2

; 258  : 		}
; 259  : 	}
; 260  : 
; 261  : 	SendBuff[0]=0xC2;	// packet header
; 262  : 	SendBuff[1]=SET_NUMBERH(datasize);

  00143	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]

; 263  : 	SendBuff[2]=SET_NUMBERL(datasize);
; 264  : 	SendBuff[3]=0xFA;
; 265  : 	SendBuff[4]=0x0B;
; 266  : 	SendBuff[5]=SET_NUMBERH(aTargetIndex);

  00149	8b 8d 64 ec ff
	ff		 mov	 ecx, DWORD PTR _aTargetIndex$GSCopy$[ebp]
  0014f	8b d0		 mov	 edx, eax
  00151	c1 ea 08	 shr	 edx, 8
  00154	88 95 75 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], dl
  0015a	8b d1		 mov	 edx, ecx
  0015c	c1 ea 08	 shr	 edx, 8

; 267  : 	SendBuff[6]=SET_NUMBERL(aTargetIndex);
; 268  : 	SendBuff[7]=icount;
; 269  : 	DataSend(aIndex,SendBuff,datasize);

  0015f	50		 push	 eax
  00160	88 95 79 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], dl
  00166	8d 95 74 ec ff
	ff		 lea	 edx, DWORD PTR _SendBuff$[ebp]
  0016c	88 85 76 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al
  00172	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _aIndex$GSCopy$[ebp]
  00178	88 8d 7a ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+6], cl
  0017e	8a 8d 73 ec ff
	ff		 mov	 cl, BYTE PTR _icount$[ebp]
  00184	52		 push	 edx
  00185	50		 push	 eax
  00186	c6 85 74 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H
  0018d	66 c7 85 77 ec
	ff ff fa 0b	 mov	 WORD PTR _SendBuff$[ebp+3], 3066 ; 00000bfaH
  00196	88 8d 7b ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+7], cl
  0019c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
$LN7@UpdatePSIn@2:

; 270  : }

  001a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a9	33 cd		 xor	 ecx, ebp
  001ab	5f		 pop	 edi
  001ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b1	8b e5		 mov	 esp, ebp
  001b3	5d		 pop	 ebp
  001b4	c2 08 00	 ret	 8
?UpdatePSInventoryTarget@PersonalShopZt@@QAEXHH@Z ENDP	; PersonalShopZt::UpdatePSInventoryTarget
_TEXT	ENDS
PUBLIC	?GetMoney@PersonalShopZt@@QAEHHH@Z		; PersonalShopZt::GetMoney
; Function compile flags: /Ogtp
;	COMDAT ?GetMoney@PersonalShopZt@@QAEHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Credit$ = 8						; size = 4
_aIndex$ = 8						; size = 4
_Bonus$ = 12						; size = 4
_Pos$ = 12						; size = 4
?GetMoney@PersonalShopZt@@QAEHHH@Z PROC			; PersonalShopZt::GetMoney, COMDAT
; _this$ = ecx

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 274  : 
; 275  : 	if(!gObjIsConnectedZt(aIndex))

  00005	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00008	56		 push	 esi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00011	83 c4 04	 add	 esp, 4
  00014	84 c0		 test	 al, al
  00016	75 09		 jne	 SHORT $LN14@GetMoney

; 276  : 	{
; 277  : 		return 0;

  00018	33 c0		 xor	 eax, eax
  0001a	5e		 pop	 esi

; 347  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
$LN14@GetMoney:

; 278  : 	}
; 279  : 
; 280  : 	LPOBJ lpUser = &gObj[aIndex];
; 281  : 
; 282  : 	int Zen = lpUser->Inventory1[Pos].m_iPShopValue;
; 283  : 	int Bonus = lpUser->Inventory1[Pos].m_iPShopBonus;

  00021	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00024	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0002a	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00030	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00036	03 86 34 0e 00
	00		 add	 eax, DWORD PTR [esi+3636]
  0003c	53		 push	 ebx

; 284  : 	int Bless = lpUser->Inventory1[Pos].m_PShopBlessValue;
; 285  : 	int Soul = lpUser->Inventory1[Pos].m_PShopSoulValue;
; 286  : 	int Chaos = lpUser->Inventory1[Pos].m_PShopChaosValue;
; 287  : 	int Life = lpUser->Inventory1[Pos].m_PShopLifeValue;
; 288  : 	#if(DEV_PERSONAL_CREDIT)
; 289  : 	int Credit = lpUser->Inventory1[Pos].m_iPShopCredit;

  0003d	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00043	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  00046	0f bf 70 7e	 movsx	 esi, WORD PTR [eax+126]
  0004a	0f bf 98 82 00
	00 00		 movsx	 ebx, WORD PTR [eax+130]
  00051	89 4d 08	 mov	 DWORD PTR _Credit$[ebp], ecx

; 290  : 	#endif
; 291  : 
; 292  : 	bool Result = 0;

  00054	32 c9		 xor	 cl, cl

; 293  : 
; 294  : 	if( Zen > 0 )

  00056	83 78 74 00	 cmp	 DWORD PTR [eax+116], 0
  0005a	57		 push	 edi
  0005b	0f bf b8 80 00
	00 00		 movsx	 edi, WORD PTR [eax+128]
  00062	89 55 0c	 mov	 DWORD PTR _Bonus$[ebp], edx
  00065	0f bf 50 7c	 movsx	 edx, WORD PTR [eax+124]
  00069	7e 02		 jle	 SHORT $LN13@GetMoney

; 295  : 	{
; 296  : 		Result = 1;

  0006b	b1 01		 mov	 cl, 1
$LN13@GetMoney:

; 297  : 	}
; 298  : 	if( Bless > 0)

  0006d	85 d2		 test	 edx, edx
  0006f	7e 02		 jle	 SHORT $LN12@GetMoney

; 299  : 	{
; 300  : 		Result = 1;

  00071	b1 01		 mov	 cl, 1
$LN12@GetMoney:

; 301  : 	}
; 302  : 	if( Soul > 0)

  00073	85 f6		 test	 esi, esi
  00075	7e 02		 jle	 SHORT $LN11@GetMoney

; 303  : 	{
; 304  : 		Result = 1;

  00077	b1 01		 mov	 cl, 1
$LN11@GetMoney:

; 305  : 	}
; 306  : 	if( Chaos > 0)

  00079	85 ff		 test	 edi, edi
  0007b	7e 02		 jle	 SHORT $LN10@GetMoney

; 307  : 	{
; 308  : 		Result = 1;

  0007d	b1 01		 mov	 cl, 1
$LN10@GetMoney:
  0007f	5f		 pop	 edi

; 309  : 	}
; 310  : 	if( Life > 0)

  00080	85 db		 test	 ebx, ebx
  00082	5b		 pop	 ebx
  00083	7e 02		 jle	 SHORT $LN9@GetMoney

; 311  : 	{
; 312  : 		Result = 1;

  00085	b1 01		 mov	 cl, 1
$LN9@GetMoney:

; 313  : 	}
; 314  : 	#if(DEV_PERSONAL_CREDIT)
; 315  : 	if(this->CreditPrice)

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0008e	74 0a		 je	 SHORT $LN8@GetMoney

; 316  : 	{
; 317  : 		if( Credit > 0)

  00090	83 7d 08 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00094	7e 0c		 jle	 SHORT $LN5@GetMoney

; 318  : 		{
; 319  : 			Result = 1;

  00096	b1 01		 mov	 cl, 1

; 320  : 		}
; 321  : 	}
; 322  : 	else

  00098	eb 08		 jmp	 SHORT $LN5@GetMoney
$LN8@GetMoney:

; 323  : 	{
; 324  : 		if( Credit > 0)

  0009a	83 7d 08 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  0009e	7e 02		 jle	 SHORT $LN5@GetMoney

; 325  : 		{
; 326  : 			Result = 0;

  000a0	32 c9		 xor	 cl, cl
$LN5@GetMoney:

; 327  : 		}
; 328  : 	}
; 329  : 	#endif
; 330  : 
; 331  : 	if(!this->BonusPrice)

  000a2	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  000a6	75 12		 jne	 SHORT $LN4@GetMoney

; 332  : 	{
; 333  : 		if(Bonus > 0)

  000a8	83 7d 0c 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  000ac	7e 14		 jle	 SHORT $LN1@GetMoney

; 334  : 		{
; 335  : 			Result = 0;

  000ae	32 c9		 xor	 cl, cl

; 343  : 		}
; 344  : 	}
; 345  : 
; 346  : 	return Result;

  000b0	0f b6 c1	 movzx	 eax, cl
  000b3	5e		 pop	 esi

; 347  : }

  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 08 00	 ret	 8
$LN4@GetMoney:

; 336  : 		}
; 337  : 	}
; 338  : 	else
; 339  : 	{
; 340  : 		if(Bonus > 0)

  000ba	83 7d 0c 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  000be	7e 02		 jle	 SHORT $LN1@GetMoney

; 341  : 		{
; 342  : 			Result = 1;

  000c0	b1 01		 mov	 cl, 1
$LN1@GetMoney:

; 343  : 		}
; 344  : 	}
; 345  : 
; 346  : 	return Result;

  000c2	0f b6 c1	 movzx	 eax, cl
  000c5	5e		 pop	 esi

; 347  : }

  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 08 00	 ret	 8
?GetMoney@PersonalShopZt@@QAEHHH@Z ENDP			; PersonalShopZt::GetMoney
_TEXT	ENDS
PUBLIC	?CheckPrice@PersonalShopZt@@QAE_NHHHHHHH@Z	; PersonalShopZt::CheckPrice
; Function compile flags: /Ogtp
;	COMDAT ?CheckPrice@PersonalShopZt@@QAE_NHHHHHHH@Z
_TEXT	SEGMENT
_Zen$ = 8						; size = 4
_Bonus$ = 12						; size = 4
_Bless$ = 16						; size = 4
_Soul$ = 20						; size = 4
_Chaos$ = 24						; size = 4
_Life$ = 28						; size = 4
_Credit$ = 32						; size = 4
?CheckPrice@PersonalShopZt@@QAE_NHHHHHHH@Z PROC		; PersonalShopZt::CheckPrice, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 351  : 	bool Result = 0;

  00003	32 c0		 xor	 al, al

; 352  : 
; 353  : 	if( Zen > 0 )

  00005	83 7d 08 00	 cmp	 DWORD PTR _Zen$[ebp], 0
  00009	7e 02		 jle	 SHORT $LN13@CheckPrice

; 354  : 	{
; 355  : 		Result = 1;

  0000b	b0 01		 mov	 al, 1
$LN13@CheckPrice:

; 356  : 	}
; 357  : 	if( Bless > 0)

  0000d	83 7d 10 00	 cmp	 DWORD PTR _Bless$[ebp], 0
  00011	7e 02		 jle	 SHORT $LN12@CheckPrice

; 358  : 	{
; 359  : 		Result = 1;

  00013	b0 01		 mov	 al, 1
$LN12@CheckPrice:

; 360  : 	}
; 361  : 	if( Soul > 0)

  00015	83 7d 14 00	 cmp	 DWORD PTR _Soul$[ebp], 0
  00019	7e 02		 jle	 SHORT $LN11@CheckPrice

; 362  : 	{
; 363  : 		Result = 1;

  0001b	b0 01		 mov	 al, 1
$LN11@CheckPrice:

; 364  : 	}
; 365  : 	if( Chaos > 0)

  0001d	83 7d 18 00	 cmp	 DWORD PTR _Chaos$[ebp], 0
  00021	7e 02		 jle	 SHORT $LN10@CheckPrice

; 366  : 	{
; 367  : 		Result = 1;

  00023	b0 01		 mov	 al, 1
$LN10@CheckPrice:

; 368  : 	}
; 369  : 	if( Life > 0)

  00025	83 7d 1c 00	 cmp	 DWORD PTR _Life$[ebp], 0
  00029	7e 02		 jle	 SHORT $LN9@CheckPrice

; 370  : 	{
; 371  : 		Result = 1;

  0002b	b0 01		 mov	 al, 1
$LN9@CheckPrice:

; 372  : 	}
; 373  : 	#if(DEV_PERSONAL_CREDIT)
; 374  : 	if(this->CreditPrice)

  0002d	83 79 18 00	 cmp	 DWORD PTR [ecx+24], 0
  00031	74 0a		 je	 SHORT $LN8@CheckPrice

; 375  : 	{
; 376  : 		if( Credit > 0)

  00033	83 7d 20 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00037	7e 0c		 jle	 SHORT $LN5@CheckPrice

; 377  : 		{
; 378  : 			Result = 1;

  00039	b0 01		 mov	 al, 1

; 379  : 		}
; 380  : 	}
; 381  : 	else

  0003b	eb 08		 jmp	 SHORT $LN5@CheckPrice
$LN8@CheckPrice:

; 382  : 	{
; 383  : 		if( Credit > 0)

  0003d	83 7d 20 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00041	7e 02		 jle	 SHORT $LN5@CheckPrice

; 384  : 		{
; 385  : 			Result = 0;

  00043	32 c0		 xor	 al, al
$LN5@CheckPrice:

; 386  : 		}
; 387  : 	}
; 388  : 	#endif
; 389  : 
; 390  : 	if(!this->BonusPrice)

  00045	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  00049	75 0c		 jne	 SHORT $LN4@CheckPrice

; 391  : 	{
; 392  : 		if(Bonus > 0)

  0004b	83 7d 0c 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  0004f	7e 0e		 jle	 SHORT $LN1@CheckPrice

; 393  : 		{
; 394  : 			Result = 0;

  00051	32 c0		 xor	 al, al

; 402  : 		}
; 403  : 	}
; 404  : 
; 405  : 	return Result;
; 406  : }

  00053	5d		 pop	 ebp
  00054	c2 1c 00	 ret	 28			; 0000001cH
$LN4@CheckPrice:

; 395  : 		}
; 396  : 	}
; 397  : 	else
; 398  : 	{
; 399  : 		if(Bonus > 0)

  00057	83 7d 0c 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  0005b	7e 02		 jle	 SHORT $LN1@CheckPrice

; 400  : 		{
; 401  : 			Result = 1;

  0005d	b0 01		 mov	 al, 1
$LN1@CheckPrice:

; 402  : 		}
; 403  : 	}
; 404  : 
; 405  : 	return Result;
; 406  : }

  0005f	5d		 pop	 ebp
  00060	c2 1c 00	 ret	 28			; 0000001cH
?CheckPrice@PersonalShopZt@@QAE_NHHHHHHH@Z ENDP		; PersonalShopZt::CheckPrice
_TEXT	ENDS
PUBLIC	?PShop_CheckInventoryPrice@PersonalShopZt@@QAE_NF@Z ; PersonalShopZt::PShop_CheckInventoryPrice
; Function compile flags: /Ogtp
;	COMDAT ?PShop_CheckInventoryPrice@PersonalShopZt@@QAE_NF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 2
?PShop_CheckInventoryPrice@PersonalShopZt@@QAE_NF@Z PROC ; PersonalShopZt::PShop_CheckInventoryPrice, COMDAT
; _this$ = ecx

; 409  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 410  : 	if(!gObjIsConnectedZt(aIndex))

  00005	0f bf 75 08	 movsx	 esi, WORD PTR _aIndex$[ebp]
  00009	56		 push	 esi
  0000a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00012	83 c4 04	 add	 esp, 4
  00015	84 c0		 test	 al, al
  00017	75 07		 jne	 SHORT $LN19@PShop_Chec
  00019	5e		 pop	 esi

; 484  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
$LN19@PShop_Chec:

; 411  : 	{
; 412  : 		return false;
; 413  : 	}
; 414  : 
; 415  : 	LPOBJ lpObj = &gObj[aIndex];

  00020	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00026	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	53		 push	 ebx
  0002d	57		 push	 edi
  0002e	8b fe		 mov	 edi, esi

; 416  : 
; 417  : 	bool Result = false;

  00030	32 db		 xor	 bl, bl
  00032	be f0 a8 00 00	 mov	 esi, 43248		; 0000a8f0H
  00037	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL18@PShop_Chec:

; 420  : 	{
; 421  : 		if(lpObj->Inventory1[i].IsItem() == 1)

  00040	8b 8f 34 0e 00
	00		 mov	 ecx, DWORD PTR [edi+3636]
  00046	03 ce		 add	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0004d	83 f8 01	 cmp	 eax, 1
  00050	75 70		 jne	 SHORT $LN17@PShop_Chec

; 422  : 		{
; 423  : 			Result = false;
; 424  : 
; 425  : 			if(lpObj->Inventory1[i].m_iPShopValue > 0 )

  00052	8b 87 34 0e 00
	00		 mov	 eax, DWORD PTR [edi+3636]
  00058	03 c6		 add	 eax, esi
  0005a	32 db		 xor	 bl, bl
  0005c	83 78 74 00	 cmp	 DWORD PTR [eax+116], 0
  00060	7e 02		 jle	 SHORT $LN14@PShop_Chec

; 426  : 			{
; 427  : 				Result = true;

  00062	b3 01		 mov	 bl, 1
$LN14@PShop_Chec:

; 428  : 			}
; 429  : 			if(lpObj->Inventory1[i].m_PShopBlessValue > 0)

  00064	66 83 78 7c 00	 cmp	 WORD PTR [eax+124], 0
  00069	7e 02		 jle	 SHORT $LN13@PShop_Chec

; 430  : 			{
; 431  : 				Result = true;

  0006b	b3 01		 mov	 bl, 1
$LN13@PShop_Chec:

; 432  : 			}
; 433  : 			if(lpObj->Inventory1[i].m_PShopSoulValue > 0)

  0006d	66 83 78 7e 00	 cmp	 WORD PTR [eax+126], 0
  00072	7e 02		 jle	 SHORT $LN12@PShop_Chec

; 434  : 			{
; 435  : 				Result = true;

  00074	b3 01		 mov	 bl, 1
$LN12@PShop_Chec:

; 436  : 			}
; 437  : 			if(lpObj->Inventory1[i].m_PShopChaosValue > 0)

  00076	66 83 b8 80 00
	00 00 00	 cmp	 WORD PTR [eax+128], 0
  0007e	7e 02		 jle	 SHORT $LN11@PShop_Chec

; 438  : 			{
; 439  : 				Result = true;

  00080	b3 01		 mov	 bl, 1
$LN11@PShop_Chec:

; 440  : 			}
; 441  : 			if(lpObj->Inventory1[i].m_PShopLifeValue > 0)

  00082	66 83 b8 82 00
	00 00 00	 cmp	 WORD PTR [eax+130], 0
  0008a	7e 02		 jle	 SHORT $LN10@PShop_Chec

; 442  : 			{
; 443  : 				Result = true;

  0008c	b3 01		 mov	 bl, 1
$LN10@PShop_Chec:

; 444  : 			}
; 445  : 			#if(DEV_PERSONAL_CREDIT)
; 446  : 			if(g_PersonalShopZt.CreditPrice)

  0008e	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?g_PersonalShopZt@@3VPersonalShopZt@@A+24, 0
  00095	74 0d		 je	 SHORT $LN9@PShop_Chec

; 447  : 			{
; 448  : 				if(lpObj->Inventory1[i].m_iPShopCredit > 0)

  00097	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  0009e	7e 0f		 jle	 SHORT $LN6@PShop_Chec

; 449  : 				{
; 450  : 					Result = true;

  000a0	b3 01		 mov	 bl, 1

; 451  : 				}
; 452  : 			}
; 453  : 			else

  000a2	eb 0b		 jmp	 SHORT $LN6@PShop_Chec
$LN9@PShop_Chec:

; 454  : 			{
; 455  : 				if(lpObj->Inventory1[i].m_iPShopCredit > 0)

  000a4	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  000ab	7e 02		 jle	 SHORT $LN6@PShop_Chec

; 456  : 				{
; 457  : 					Result = false;

  000ad	32 db		 xor	 bl, bl
$LN6@PShop_Chec:

; 458  : 				}
; 459  : 			}
; 460  : 			#endif
; 461  : 
; 462  : 			if(!this->BonusPrice)

  000af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  000b6	75 27		 jne	 SHORT $LN5@PShop_Chec

; 463  : 			{
; 464  : 				if(lpObj->Inventory1[i].m_iPShopBonus > 0)

  000b8	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  000bc	7f 2b		 jg	 SHORT $LN25@PShop_Chec
$LN2@PShop_Chec:

; 474  : 				}
; 475  : 			}
; 476  : 
; 477  : 			if(Result == false)

  000be	84 db		 test	 bl, bl
  000c0	74 29		 je	 SHORT $LN23@PShop_Chec
$LN17@PShop_Chec:

; 418  : 
; 419  : 	for(int i = MAIN_INVENTORY_SIZE; i < INVENTORY_SIZE; i++)

  000c2	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  000c8	81 fe 70 c3 00
	00		 cmp	 esi, 50032		; 0000c370H
  000ce	0f 8c 6c ff ff
	ff		 jl	 $LL18@PShop_Chec

; 478  : 			{
; 479  : 				break;
; 480  : 			}
; 481  : 		}
; 482  : 	}
; 483  : 	return Result;

  000d4	5f		 pop	 edi
  000d5	8a c3		 mov	 al, bl
  000d7	5b		 pop	 ebx
  000d8	5e		 pop	 esi

; 484  : }

  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
$LN5@PShop_Chec:

; 467  : 				}
; 468  : 			}
; 469  : 			else
; 470  : 			{
; 471  : 				if(lpObj->Inventory1[i].m_iPShopBonus > 0)

  000df	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  000e3	7e d9		 jle	 SHORT $LN2@PShop_Chec

; 472  : 				{
; 473  : 					Result = true;

  000e5	b3 01		 mov	 bl, 1

; 474  : 				}
; 475  : 			}
; 476  : 
; 477  : 			if(Result == false)

  000e7	eb d9		 jmp	 SHORT $LN17@PShop_Chec
$LN25@PShop_Chec:

; 465  : 				{
; 466  : 					Result = false;

  000e9	32 db		 xor	 bl, bl
$LN23@PShop_Chec:
  000eb	5f		 pop	 edi

; 478  : 			{
; 479  : 				break;
; 480  : 			}
; 481  : 		}
; 482  : 	}
; 483  : 	return Result;

  000ec	8a c3		 mov	 al, bl
  000ee	5b		 pop	 ebx
  000ef	5e		 pop	 esi

; 484  : }

  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 04 00	 ret	 4
?PShop_CheckInventoryPrice@PersonalShopZt@@QAE_NF@Z ENDP ; PersonalShopZt::PShop_CheckInventoryPrice
_TEXT	ENDS
PUBLIC	??_C@_0BK@CJGCBCEE@ZtData?2PersonalShopZt?4ini?$AA@ ; `string'
PUBLIC	?Load@PersonalShopZt@@QAEXXZ			; PersonalShopZt::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
;	COMDAT ??_C@_0BK@CJGCBCEE@ZtData?2PersonalShopZt?4ini?$AA@
CONST	SEGMENT
??_C@_0BK@CJGCBCEE@ZtData?2PersonalShopZt?4ini?$AA@ DB 'ZtData\PersonalSh'
	DB	'opZt.ini', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@PersonalShopZt@@QAEXXZ
_TEXT	SEGMENT
?Load@PersonalShopZt@@QAEXXZ PROC			; PersonalShopZt::Load, COMDAT
; _this$ = ecx

; 20   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 21   : 	this->Init();

  00003	e8 00 00 00 00	 call	 ?Init@PersonalShopZt@@QAEXXZ ; PersonalShopZt::Init

; 22   : 
; 23   : 	if(!g_ZtLicense.user.PerosnalStoreZt)

  00008	80 3d d8 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+216, 0
  0000f	74 17		 je	 SHORT $LN2@Load

; 24   : 	{
; 25   : 		return;
; 26   : 	}
; 27   : 
; 28   : 	this->Read(gDirPath.GetNewPath("ZtData\\PersonalShopZt.ini"));

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CJGCBCEE@ZtData?2PersonalShopZt?4ini?$AA@
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0001b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00020	50		 push	 eax
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?Read@PersonalShopZt@@QAEXPAD@Z ; PersonalShopZt::Read
$LN2@Load:
  00028	5e		 pop	 esi

; 29   : }

  00029	c3		 ret	 0
?Load@PersonalShopZt@@QAEXXZ ENDP			; PersonalShopZt::Load
_TEXT	ENDS
PUBLIC	?NPC_Dialog@PersonalShopZt@@QAE_NHH@Z		; PersonalShopZt::NPC_Dialog
; Function compile flags: /Ogtp
;	COMDAT ?NPC_Dialog@PersonalShopZt@@QAE_NHH@Z
_TEXT	SEGMENT
_aCG$209194 = -8					; size = 5
_aIndex$ = 8						; size = 4
_aIndexNPC$ = 12					; size = 4
?NPC_Dialog@PersonalShopZt@@QAE_NHH@Z PROC		; PersonalShopZt::NPC_Dialog, COMDAT
; _this$ = ecx

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 56   : 	if(!this->Enable)

  00009	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0000c	75 09		 jne	 SHORT $LN3@NPC_Dialog

; 57   : 	{
; 58   :  		return false;

  0000e	32 c0		 xor	 al, al
  00010	5e		 pop	 esi

; 81   : }

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
$LN3@NPC_Dialog:
  00017	57		 push	 edi

; 59   : 	}
; 60   : 
; 61   : 	if(!gObjIsConnectedZt(aIndex))

  00018	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0001b	57		 push	 edi
  0001c	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00021	83 c4 04	 add	 esp, 4
  00024	84 c0		 test	 al, al

; 62   : 	{
; 63   : 		return false;

  00026	74 59		 je	 SHORT $LN1@NPC_Dialog

; 64   : 	}
; 65   : 
; 66   : 	LPOBJ lpUser = &gObj[aIndex];
; 67   : 	LPOBJ lpNpc = &gObj[aIndexNPC];

  00028	8b 45 0c	 mov	 eax, DWORD PTR _aIndexNPC$[ebp]
  0002b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00031	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 68   : 
; 69   : 	if(		lpNpc->Class		== this->NPC_CLASS 
; 70   : 		&&	lpNpc->MapNumber	== this->NPC_MAP
; 71   : 		&&	lpNpc->X			== this->NPC_X
; 72   : 		&&	lpNpc->Y			== this->NPC_Y )

  00037	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0003e	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  00041	75 3e		 jne	 SHORT $LN1@NPC_Dialog
  00043	0f b6 90 49 01
	00 00		 movzx	 edx, BYTE PTR [eax+329]
  0004a	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  0004d	75 32		 jne	 SHORT $LN1@NPC_Dialog
  0004f	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00056	3b 4e 0c	 cmp	 ecx, DWORD PTR [esi+12]
  00059	75 26		 jne	 SHORT $LN1@NPC_Dialog
  0005b	0f bf 90 46 01
	00 00		 movsx	 edx, WORD PTR [eax+326]
  00062	3b 56 10	 cmp	 edx, DWORD PTR [esi+16]
  00065	75 1a		 jne	 SHORT $LN1@NPC_Dialog

; 73   : 	{
; 74   : 		CG_PersonalPage aCG;
; 75   : 		aCG.Page = 0;
; 76   : 		this->Search(aIndex,&aCG);

  00067	8d 45 f8	 lea	 eax, DWORD PTR _aCG$209194[ebp]
  0006a	50		 push	 eax
  0006b	57		 push	 edi
  0006c	8b ce		 mov	 ecx, esi
  0006e	c6 45 fc 00	 mov	 BYTE PTR _aCG$209194[ebp+4], 0
  00072	e8 00 00 00 00	 call	 ?Search@PersonalShopZt@@QAEXHPAUCG_PersonalPage@@@Z ; PersonalShopZt::Search
  00077	5f		 pop	 edi

; 77   : 		return true;

  00078	b0 01		 mov	 al, 1
  0007a	5e		 pop	 esi

; 81   : }

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
$LN1@NPC_Dialog:
  00081	5f		 pop	 edi

; 78   : 	}
; 79   : 	// ----
; 80   : 	return false;

  00082	32 c0		 xor	 al, al
  00084	5e		 pop	 esi

; 81   : }

  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 08 00	 ret	 8
?NPC_Dialog@PersonalShopZt@@QAE_NHH@Z ENDP		; PersonalShopZt::NPC_Dialog
_TEXT	ENDS
END
