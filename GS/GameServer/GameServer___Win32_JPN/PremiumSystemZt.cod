; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\PremiumSystemZt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??1PremiumSystemZt@@QAE@XZ			; PremiumSystemZt::~PremiumSystemZt
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\premiumsystemzt.cpp
;	COMDAT ??1PremiumSystemZt@@QAE@XZ
_TEXT	SEGMENT
??1PremiumSystemZt@@QAE@XZ PROC				; PremiumSystemZt::~PremiumSystemZt, COMDAT
; _this$ = ecx

; 29   : 	// ----
; 30   : }

  00000	c3		 ret	 0
??1PremiumSystemZt@@QAE@XZ ENDP				; PremiumSystemZt::~PremiumSystemZt
_TEXT	ENDS
PUBLIC	?Init@PremiumSystemZt@@QAEXXZ			; PremiumSystemZt::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@PremiumSystemZt@@QAEXXZ
_TEXT	SEGMENT
?Init@PremiumSystemZt@@QAEXXZ PROC			; PremiumSystemZt::Init, COMDAT
; _this$ = ecx

; 35   : 	this->ActiveSystem = false;

  00000	33 c0		 xor	 eax, eax
  00002	88 01		 mov	 BYTE PTR [ecx], al

; 36   : 
; 37   : 	this->Plus1ExpProcent = 0;

  00004	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 38   : 	this->Plus1DropZenProcent = 0;

  00007	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 39   : 	this->Plus1DamageProcent = 0;

  0000a	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 40   : 	this->Plus1DefenceProcent = 0;

  0000d	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 41   : 	this->Plus1WizardDamageProcent = 0;

  00010	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 42   : 	this->Buy1CreditDay = 0;

  00013	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 43   : 
; 44   : 	this->Plus2ExpProcent = 0;

  00016	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 45   : 	this->Plus2DropZenProcent = 0;

  00019	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 46   : 	this->Plus2DamageProcent = 0;

  0001c	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 47   : 	this->Plus2DefenceProcent = 0;

  0001f	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 48   : 	this->Plus2WizardDamageProcent = 0;

  00022	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 49   : 	this->Buy2CreditDay = 0;

  00025	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 50   : 
; 51   : 	this->Plus3ExpProcent = 0;

  00028	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 52   : 	this->Plus3DropZenProcent = 0;

  0002b	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 53   : 	this->Plus3DamageProcent = 0;

  0002e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 54   : 	this->Plus3DefenceProcent = 0;

  00031	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 55   : 	this->Plus3WizardDamageProcent = 0;

  00034	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 56   : 	this->Buy3CreditDay = 0;

  00037	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 57   : 
; 58   : 	this->Buy1WCoinDay = 0;

  0003a	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 59   : 	this->Buy2WCoinDay = 0;

  0003d	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 60   : 	this->Buy3WCoinDay = 0;

  00040	89 41 5c	 mov	 DWORD PTR [ecx+92], eax

; 61   : }

  00043	c3		 ret	 0
?Init@PremiumSystemZt@@QAEXXZ ENDP			; PremiumSystemZt::Init
_TEXT	ENDS
PUBLIC	??_C@_0N@PBKANAPF@Buy3WCoinDay?$AA@		; `string'
PUBLIC	??_C@_0N@BOGCLLML@Buy2WCoinDay?$AA@		; `string'
PUBLIC	??_C@_0N@PFFFAAMI@Buy1WCoinDay?$AA@		; `string'
PUBLIC	??_C@_0BN@OOAELOPG@OfflineModePickUpPremiumRang?$AA@ ; `string'
PUBLIC	??_C@_0CB@KCGGNELK@OfflineModeAttackFreePremiumRang@ ; `string'
PUBLIC	??_C@_0O@ONDOMJAN@Buy3CreditDay?$AA@		; `string'
PUBLIC	??_C@_0BJ@MFJBFKHL@Plus3WizardDamageProcent?$AA@ ; `string'
PUBLIC	??_C@_0BE@BIKGIMAL@Plus3DefenceProcent?$AA@	; `string'
PUBLIC	??_C@_0BD@LOPKOFKG@Plus3DamageProcent?$AA@	; `string'
PUBLIC	??_C@_0BE@BPAPFMKH@Plus3DropZenProcent?$AA@	; `string'
PUBLIC	??_C@_0BA@GILCNFHE@Plus3ExpProcent?$AA@		; `string'
PUBLIC	??_C@_0O@CMLABGMN@Buy2CreditDay?$AA@		; `string'
PUBLIC	??_C@_0BJ@FKELNJOF@Plus2WizardDamageProcent?$AA@ ; `string'
PUBLIC	??_C@_0BE@LGMOBNJK@Plus2DefenceProcent?$AA@	; `string'
PUBLIC	??_C@_0BD@HABDOEO@Plus2DamageProcent?$AA@	; `string'
PUBLIC	??_C@_0BE@LBGHMNDG@Plus2DropZenProcent?$AA@	; `string'
PUBLIC	??_C@_0BA@PDBHJJBL@Plus2ExpProcent?$AA@		; `string'
PUBLIC	??_C@_0O@LFFCHAMM@Buy1CreditDay?$AA@		; `string'
PUBLIC	??_C@_0BJ@CBFFFLAG@Plus1WizardDamageProcent?$AA@ ; `string'
PUBLIC	??_C@_0BD@BGHMFEDH@Plus1DamageProcent?$AA@	; `string'
PUBLIC	??_C@_0BE@JIKPHJME@Plus1DropZenProcent?$AA@	; `string'
PUBLIC	??_C@_0BA@IEIJELOL@Plus1ExpProcent?$AA@		; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_0N@ENJHELDG@ActiveSystem?$AA@		; `string'
PUBLIC	?Read@PremiumSystemZt@@QAEXPAD@Z		; PremiumSystemZt::Read
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0N@PBKANAPF@Buy3WCoinDay?$AA@
CONST	SEGMENT
??_C@_0N@PBKANAPF@Buy3WCoinDay?$AA@ DB 'Buy3WCoinDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BOGCLLML@Buy2WCoinDay?$AA@
CONST	SEGMENT
??_C@_0N@BOGCLLML@Buy2WCoinDay?$AA@ DB 'Buy2WCoinDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFFFAAMI@Buy1WCoinDay?$AA@
CONST	SEGMENT
??_C@_0N@PFFFAAMI@Buy1WCoinDay?$AA@ DB 'Buy1WCoinDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OOAELOPG@OfflineModePickUpPremiumRang?$AA@
CONST	SEGMENT
??_C@_0BN@OOAELOPG@OfflineModePickUpPremiumRang?$AA@ DB 'OfflineModePickU'
	DB	'pPremiumRang', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KCGGNELK@OfflineModeAttackFreePremiumRang@
CONST	SEGMENT
??_C@_0CB@KCGGNELK@OfflineModeAttackFreePremiumRang@ DB 'OfflineModeAttac'
	DB	'kFreePremiumRang', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ONDOMJAN@Buy3CreditDay?$AA@
CONST	SEGMENT
??_C@_0O@ONDOMJAN@Buy3CreditDay?$AA@ DB 'Buy3CreditDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MFJBFKHL@Plus3WizardDamageProcent?$AA@
CONST	SEGMENT
??_C@_0BJ@MFJBFKHL@Plus3WizardDamageProcent?$AA@ DB 'Plus3WizardDamagePro'
	DB	'cent', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BIKGIMAL@Plus3DefenceProcent?$AA@
CONST	SEGMENT
??_C@_0BE@BIKGIMAL@Plus3DefenceProcent?$AA@ DB 'Plus3DefenceProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LOPKOFKG@Plus3DamageProcent?$AA@
CONST	SEGMENT
??_C@_0BD@LOPKOFKG@Plus3DamageProcent?$AA@ DB 'Plus3DamageProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BPAPFMKH@Plus3DropZenProcent?$AA@
CONST	SEGMENT
??_C@_0BE@BPAPFMKH@Plus3DropZenProcent?$AA@ DB 'Plus3DropZenProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GILCNFHE@Plus3ExpProcent?$AA@
CONST	SEGMENT
??_C@_0BA@GILCNFHE@Plus3ExpProcent?$AA@ DB 'Plus3ExpProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CMLABGMN@Buy2CreditDay?$AA@
CONST	SEGMENT
??_C@_0O@CMLABGMN@Buy2CreditDay?$AA@ DB 'Buy2CreditDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FKELNJOF@Plus2WizardDamageProcent?$AA@
CONST	SEGMENT
??_C@_0BJ@FKELNJOF@Plus2WizardDamageProcent?$AA@ DB 'Plus2WizardDamagePro'
	DB	'cent', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LGMOBNJK@Plus2DefenceProcent?$AA@
CONST	SEGMENT
??_C@_0BE@LGMOBNJK@Plus2DefenceProcent?$AA@ DB 'Plus2DefenceProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HABDOEO@Plus2DamageProcent?$AA@
CONST	SEGMENT
??_C@_0BD@HABDOEO@Plus2DamageProcent?$AA@ DB 'Plus2DamageProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LBGHMNDG@Plus2DropZenProcent?$AA@
CONST	SEGMENT
??_C@_0BE@LBGHMNDG@Plus2DropZenProcent?$AA@ DB 'Plus2DropZenProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PDBHJJBL@Plus2ExpProcent?$AA@
CONST	SEGMENT
??_C@_0BA@PDBHJJBL@Plus2ExpProcent?$AA@ DB 'Plus2ExpProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LFFCHAMM@Buy1CreditDay?$AA@
CONST	SEGMENT
??_C@_0O@LFFCHAMM@Buy1CreditDay?$AA@ DB 'Buy1CreditDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CBFFFLAG@Plus1WizardDamageProcent?$AA@
CONST	SEGMENT
??_C@_0BJ@CBFFFLAG@Plus1WizardDamageProcent?$AA@ DB 'Plus1WizardDamagePro'
	DB	'cent', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BGHMFEDH@Plus1DamageProcent?$AA@
CONST	SEGMENT
??_C@_0BD@BGHMFEDH@Plus1DamageProcent?$AA@ DB 'Plus1DamageProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JIKPHJME@Plus1DropZenProcent?$AA@
CONST	SEGMENT
??_C@_0BE@JIKPHJME@Plus1DropZenProcent?$AA@ DB 'Plus1DropZenProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IEIJELOL@Plus1ExpProcent?$AA@
CONST	SEGMENT
??_C@_0BA@IEIJELOL@Plus1ExpProcent?$AA@ DB 'Plus1ExpProcent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENJHELDG@ActiveSystem?$AA@
CONST	SEGMENT
??_C@_0N@ENJHELDG@ActiveSystem?$AA@ DB 'ActiveSystem', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Read@PremiumSystemZt@@QAEXPAD@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
?Read@PremiumSystemZt@@QAEXPAD@Z PROC			; PremiumSystemZt::Read, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 81   : 	this->ActiveSystem = GetPrivateProfileInt("Common", "ActiveSystem", 0, File);

  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetPrivateProfileIntA@16
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _File$[ebp]
  0000f	57		 push	 edi
  00010	6a 00		 push	 0
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ENJHELDG@ActiveSystem?$AA@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0001c	8b f1		 mov	 esi, ecx
  0001e	ff d3		 call	 ebx

; 82   : 
; 83   : 	this->Plus1ExpProcent = GetPrivateProfileInt("Common", "Plus1ExpProcent", 0, File);

  00020	57		 push	 edi
  00021	6a 00		 push	 0
  00023	85 c0		 test	 eax, eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IEIJELOL@Plus1ExpProcent?$AA@
  0002a	0f 95 c0	 setne	 al
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00032	88 06		 mov	 BYTE PTR [esi], al
  00034	ff d3		 call	 ebx

; 84   : 	this->Plus1DropZenProcent = GetPrivateProfileInt("Common", "Plus1DropZenProcent", 0, File);

  00036	57		 push	 edi
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JIKPHJME@Plus1DropZenProcent?$AA@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00046	ff d3		 call	 ebx

; 85   : 	this->Plus1DamageProcent = GetPrivateProfileInt("Common", "Plus1DamageProcent", 0, File);

  00048	57		 push	 edi
  00049	6a 00		 push	 0
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BGHMFEDH@Plus1DamageProcent?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00055	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00058	ff d3		 call	 ebx

; 86   : 	this->Plus1DefenceProcent = GetPrivateProfileInt("Common", "Plus1DamageProcent", 0, File);

  0005a	57		 push	 edi
  0005b	6a 00		 push	 0
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BGHMFEDH@Plus1DamageProcent?$AA@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00067	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0006a	ff d3		 call	 ebx

; 87   : 	this->Plus1WizardDamageProcent = GetPrivateProfileInt("Common", "Plus1WizardDamageProcent", 0, File);

  0006c	57		 push	 edi
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CBFFFLAG@Plus1WizardDamageProcent?$AA@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00079	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0007c	ff d3		 call	 ebx

; 88   : 	this->Buy1CreditDay = GetPrivateProfileInt("Common", "Buy1CreditDay", 0, File);

  0007e	57		 push	 edi
  0007f	6a 00		 push	 0
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LFFCHAMM@Buy1CreditDay?$AA@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0008b	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0008e	ff d3		 call	 ebx

; 89   : 
; 90   : 	this->Plus2ExpProcent = GetPrivateProfileInt("Common", "Plus2ExpProcent", 0, File);

  00090	57		 push	 edi
  00091	6a 00		 push	 0
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PDBHJJBL@Plus2ExpProcent?$AA@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0009d	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000a0	ff d3		 call	 ebx

; 91   : 	this->Plus2DropZenProcent = GetPrivateProfileInt("Common", "Plus2DropZenProcent", 0, File);

  000a2	57		 push	 edi
  000a3	6a 00		 push	 0
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LBGHMNDG@Plus2DropZenProcent?$AA@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000af	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000b2	ff d3		 call	 ebx

; 92   : 	this->Plus2DamageProcent = GetPrivateProfileInt("Common", "Plus2DamageProcent", 0, File);

  000b4	57		 push	 edi
  000b5	6a 00		 push	 0
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HABDOEO@Plus2DamageProcent?$AA@
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000c1	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000c4	ff d3		 call	 ebx

; 93   : 	this->Plus2DefenceProcent = GetPrivateProfileInt("Common", "Plus2DefenceProcent", 0, File);

  000c6	57		 push	 edi
  000c7	6a 00		 push	 0
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LGMOBNJK@Plus2DefenceProcent?$AA@
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000d3	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000d6	ff d3		 call	 ebx

; 94   : 	this->Plus2WizardDamageProcent = GetPrivateProfileInt("Common", "Plus2WizardDamageProcent", 0, File);

  000d8	57		 push	 edi
  000d9	6a 00		 push	 0
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FKELNJOF@Plus2WizardDamageProcent?$AA@
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000e5	89 46 28	 mov	 DWORD PTR [esi+40], eax
  000e8	ff d3		 call	 ebx
  000ea	89 46 2c	 mov	 DWORD PTR [esi+44], eax

; 95   : 	this->Buy2CreditDay = GetPrivateProfileInt("Common", "Buy2CreditDay", 0, File);

  000ed	57		 push	 edi
  000ee	6a 00		 push	 0
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CMLABGMN@Buy2CreditDay?$AA@
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000fa	ff d3		 call	 ebx

; 96   : 
; 97   : 	this->Plus3ExpProcent = GetPrivateProfileInt("Common", "Plus3ExpProcent", 0, File);

  000fc	57		 push	 edi
  000fd	6a 00		 push	 0
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GILCNFHE@Plus3ExpProcent?$AA@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00109	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0010c	ff d3		 call	 ebx

; 98   : 	this->Plus3DropZenProcent = GetPrivateProfileInt("Common", "Plus3DropZenProcent", 0, File);

  0010e	57		 push	 edi
  0010f	6a 00		 push	 0
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BPAPFMKH@Plus3DropZenProcent?$AA@
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0011b	89 46 34	 mov	 DWORD PTR [esi+52], eax
  0011e	ff d3		 call	 ebx

; 99   : 	this->Plus3DamageProcent = GetPrivateProfileInt("Common", "Plus3DamageProcent", 0, File);

  00120	57		 push	 edi
  00121	6a 00		 push	 0
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LOPKOFKG@Plus3DamageProcent?$AA@
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0012d	89 46 38	 mov	 DWORD PTR [esi+56], eax
  00130	ff d3		 call	 ebx

; 100  : 	this->Plus3DefenceProcent = GetPrivateProfileInt("Common", "Plus3DefenceProcent", 0, File);

  00132	57		 push	 edi
  00133	6a 00		 push	 0
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BIKGIMAL@Plus3DefenceProcent?$AA@
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0013f	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00142	ff d3		 call	 ebx

; 101  : 	this->Plus3WizardDamageProcent = GetPrivateProfileInt("Common", "Plus3WizardDamageProcent", 0, File);

  00144	57		 push	 edi
  00145	6a 00		 push	 0
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@MFJBFKHL@Plus3WizardDamageProcent?$AA@
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00151	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00154	ff d3		 call	 ebx

; 102  : 	this->Buy3CreditDay = GetPrivateProfileInt("Common", "Buy3CreditDay", 0, File);

  00156	57		 push	 edi
  00157	6a 00		 push	 0
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ONDOMJAN@Buy3CreditDay?$AA@
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00163	89 46 44	 mov	 DWORD PTR [esi+68], eax
  00166	ff d3		 call	 ebx

; 103  : 
; 104  : 	this->m_iOfflineModeAttackFreePremiumRang = GetPrivateProfileInt("Common", "OfflineModeAttackFreePremiumRang", 0, File);

  00168	57		 push	 edi
  00169	6a 00		 push	 0
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KCGGNELK@OfflineModeAttackFreePremiumRang@
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00175	89 46 48	 mov	 DWORD PTR [esi+72], eax
  00178	ff d3		 call	 ebx

; 105  : 	this->m_iOfflineModePickUpPremiumRang = GetPrivateProfileInt("Common", "OfflineModePickUpPremiumRang", 0, File);

  0017a	57		 push	 edi
  0017b	6a 00		 push	 0
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OOAELOPG@OfflineModePickUpPremiumRang?$AA@
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00187	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  0018a	ff d3		 call	 ebx

; 106  : 
; 107  : 	this->Buy1WCoinDay = GetPrivateProfileInt("Common", "Buy1WCoinDay", 0, File);

  0018c	57		 push	 edi
  0018d	6a 00		 push	 0
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PFFFAAMI@Buy1WCoinDay?$AA@
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00199	89 46 50	 mov	 DWORD PTR [esi+80], eax
  0019c	ff d3		 call	 ebx

; 108  : 	this->Buy2WCoinDay = GetPrivateProfileInt("Common", "Buy2WCoinDay", 0, File);

  0019e	57		 push	 edi
  0019f	6a 00		 push	 0
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BOGCLLML@Buy2WCoinDay?$AA@
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001ab	89 46 54	 mov	 DWORD PTR [esi+84], eax
  001ae	ff d3		 call	 ebx

; 109  : 	this->Buy3WCoinDay = GetPrivateProfileInt("Common", "Buy3WCoinDay", 0, File);

  001b0	57		 push	 edi
  001b1	6a 00		 push	 0
  001b3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PBKANAPF@Buy3WCoinDay?$AA@
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001bd	89 46 58	 mov	 DWORD PTR [esi+88], eax
  001c0	ff d3		 call	 ebx
  001c2	5f		 pop	 edi
  001c3	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  001c6	5e		 pop	 esi
  001c7	5b		 pop	 ebx

; 110  : }

  001c8	5d		 pop	 ebp
  001c9	c2 04 00	 ret	 4
?Read@PremiumSystemZt@@QAEXPAD@Z ENDP			; PremiumSystemZt::Read
_TEXT	ENDS
PUBLIC	?CheckValue@PremiumSystemZt@@QAEXXZ		; PremiumSystemZt::CheckValue
; Function compile flags: /Ogtp
;	COMDAT ?CheckValue@PremiumSystemZt@@QAEXXZ
_TEXT	SEGMENT
?CheckValue@PremiumSystemZt@@QAEXXZ PROC		; PremiumSystemZt::CheckValue, COMDAT
; _this$ = ecx

; 115  : 	if(this->Plus1ExpProcent < 0)

  00000	33 c0		 xor	 eax, eax
  00002	39 41 04	 cmp	 DWORD PTR [ecx+4], eax
  00005	7d 03		 jge	 SHORT $LN21@CheckValue

; 116  : 	{
; 117  : 		this->Plus1ExpProcent = 0;

  00007	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN21@CheckValue:

; 118  : 	}
; 119  : 	if(this->Plus1DropZenProcent < 0)

  0000a	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  0000d	7d 03		 jge	 SHORT $LN20@CheckValue

; 120  : 	{
; 121  : 		this->Plus1DropZenProcent = 0;

  0000f	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@CheckValue:

; 122  : 	}
; 123  : 	if(this->Plus1DamageProcent < 0)

  00012	39 41 0c	 cmp	 DWORD PTR [ecx+12], eax
  00015	7d 03		 jge	 SHORT $LN19@CheckValue

; 124  : 	{
; 125  : 		this->Plus1DamageProcent = 0;

  00017	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
$LN19@CheckValue:

; 126  : 	}
; 127  : 	if(this->Plus1DefenceProcent < 0)

  0001a	39 41 10	 cmp	 DWORD PTR [ecx+16], eax
  0001d	7d 03		 jge	 SHORT $LN18@CheckValue

; 128  : 	{
; 129  : 		this->Plus1DefenceProcent = 0;

  0001f	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN18@CheckValue:

; 130  : 	}
; 131  : 	if(this->Plus1WizardDamageProcent < 0)

  00022	39 41 14	 cmp	 DWORD PTR [ecx+20], eax
  00025	7d 03		 jge	 SHORT $LN17@CheckValue

; 132  : 	{
; 133  : 		this->Plus1WizardDamageProcent = 0;

  00027	89 41 14	 mov	 DWORD PTR [ecx+20], eax
$LN17@CheckValue:

; 134  : 	}
; 135  : 	// ----
; 136  : 	if(this->Plus2ExpProcent < 0)

  0002a	39 41 1c	 cmp	 DWORD PTR [ecx+28], eax
  0002d	7d 03		 jge	 SHORT $LN16@CheckValue

; 137  : 	{
; 138  : 		this->Plus2ExpProcent = 0;

  0002f	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
$LN16@CheckValue:

; 139  : 	}
; 140  : 	if(this->Plus2DropZenProcent < 0)

  00032	39 41 20	 cmp	 DWORD PTR [ecx+32], eax
  00035	7d 03		 jge	 SHORT $LN15@CheckValue

; 141  : 	{
; 142  : 		this->Plus2DropZenProcent = 0;

  00037	89 41 20	 mov	 DWORD PTR [ecx+32], eax
$LN15@CheckValue:

; 143  : 	}
; 144  : 	if(this->Plus2DamageProcent < 0)

  0003a	39 41 24	 cmp	 DWORD PTR [ecx+36], eax
  0003d	7d 03		 jge	 SHORT $LN14@CheckValue

; 145  : 	{
; 146  : 		this->Plus2DamageProcent = 0;

  0003f	89 41 24	 mov	 DWORD PTR [ecx+36], eax
$LN14@CheckValue:

; 147  : 	}
; 148  : 	if(this->Plus2DefenceProcent < 0)

  00042	39 41 28	 cmp	 DWORD PTR [ecx+40], eax
  00045	7d 03		 jge	 SHORT $LN13@CheckValue

; 149  : 	{
; 150  : 		this->Plus2DefenceProcent = 0;

  00047	89 41 28	 mov	 DWORD PTR [ecx+40], eax
$LN13@CheckValue:

; 151  : 	}
; 152  : 	if(this->Plus2WizardDamageProcent < 0)

  0004a	39 41 2c	 cmp	 DWORD PTR [ecx+44], eax
  0004d	7d 03		 jge	 SHORT $LN12@CheckValue

; 153  : 	{
; 154  : 		this->Plus2WizardDamageProcent = 0;

  0004f	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
$LN12@CheckValue:

; 155  : 	}
; 156  : 	// ----
; 157  : 	if(this->Plus3ExpProcent < 0)

  00052	39 41 34	 cmp	 DWORD PTR [ecx+52], eax
  00055	7d 03		 jge	 SHORT $LN11@CheckValue

; 158  : 	{
; 159  : 		this->Plus3ExpProcent = 0;

  00057	89 41 34	 mov	 DWORD PTR [ecx+52], eax
$LN11@CheckValue:

; 160  : 	}
; 161  : 	if(this->Plus3DropZenProcent < 0)

  0005a	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  0005d	7d 03		 jge	 SHORT $LN10@CheckValue

; 162  : 	{
; 163  : 		this->Plus3DropZenProcent = 0;

  0005f	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN10@CheckValue:

; 164  : 	}
; 165  : 	if(this->Plus3DamageProcent < 0)

  00062	39 41 3c	 cmp	 DWORD PTR [ecx+60], eax
  00065	7d 03		 jge	 SHORT $LN9@CheckValue

; 166  : 	{
; 167  : 		this->Plus3DamageProcent = 0;

  00067	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
$LN9@CheckValue:

; 168  : 	}
; 169  : 	if(this->Plus3DefenceProcent < 0)

  0006a	39 41 40	 cmp	 DWORD PTR [ecx+64], eax
  0006d	7d 03		 jge	 SHORT $LN8@CheckValue

; 170  : 	{
; 171  : 		this->Plus3DefenceProcent = 0;

  0006f	89 41 40	 mov	 DWORD PTR [ecx+64], eax
$LN8@CheckValue:

; 172  : 	}
; 173  : 	if(this->Plus3WizardDamageProcent < 0)

  00072	39 41 44	 cmp	 DWORD PTR [ecx+68], eax
  00075	7d 03		 jge	 SHORT $LN7@CheckValue

; 174  : 	{
; 175  : 		this->Plus3WizardDamageProcent = 0;

  00077	89 41 44	 mov	 DWORD PTR [ecx+68], eax
$LN7@CheckValue:

; 176  : 	}
; 177  : 
; 178  : 	if(this->Buy1CreditDay < 0)

  0007a	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  0007d	7d 03		 jge	 SHORT $LN6@CheckValue

; 179  : 	{
; 180  : 		this->Buy1CreditDay = 0;

  0007f	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$LN6@CheckValue:

; 181  : 	}
; 182  : 	if(this->Buy2CreditDay < 0)

  00082	39 41 30	 cmp	 DWORD PTR [ecx+48], eax
  00085	7d 03		 jge	 SHORT $LN5@CheckValue

; 183  : 	{
; 184  : 		this->Buy2CreditDay = 0;

  00087	89 41 30	 mov	 DWORD PTR [ecx+48], eax
$LN5@CheckValue:

; 185  : 	}
; 186  : 	if(this->Buy3CreditDay < 0)

  0008a	39 41 48	 cmp	 DWORD PTR [ecx+72], eax
  0008d	7d 03		 jge	 SHORT $LN4@CheckValue

; 187  : 	{
; 188  : 		this->Buy3CreditDay = 0;

  0008f	89 41 48	 mov	 DWORD PTR [ecx+72], eax
$LN4@CheckValue:

; 189  : 	}
; 190  : 
; 191  : 	if(this->Buy1WCoinDay < 0)

  00092	39 41 54	 cmp	 DWORD PTR [ecx+84], eax
  00095	7d 03		 jge	 SHORT $LN3@CheckValue

; 192  : 	{
; 193  : 		this->Buy1WCoinDay = 0;

  00097	89 41 54	 mov	 DWORD PTR [ecx+84], eax
$LN3@CheckValue:

; 194  : 	}
; 195  : 	if(this->Buy2WCoinDay < 0)

  0009a	39 41 58	 cmp	 DWORD PTR [ecx+88], eax
  0009d	7d 03		 jge	 SHORT $LN2@CheckValue

; 196  : 	{
; 197  : 		this->Buy2WCoinDay = 0;

  0009f	89 41 58	 mov	 DWORD PTR [ecx+88], eax
$LN2@CheckValue:

; 198  : 	}
; 199  : 	if(this->Buy3WCoinDay < 0)

  000a2	39 41 5c	 cmp	 DWORD PTR [ecx+92], eax
  000a5	7d 03		 jge	 SHORT $LN1@CheckValue

; 200  : 	{
; 201  : 		this->Buy3WCoinDay = 0;

  000a7	89 41 5c	 mov	 DWORD PTR [ecx+92], eax
$LN1@CheckValue:

; 202  : 	}
; 203  : }

  000aa	c3		 ret	 0
?CheckValue@PremiumSystemZt@@QAEXXZ ENDP		; PremiumSystemZt::CheckValue
_TEXT	ENDS
PUBLIC	??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@	; `string'
PUBLIC	?UserCalculatorPlus@PremiumSystemZt@@QAEXH@Z	; PremiumSystemZt::UserCalculatorPlus
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
;	COMDAT ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@ DB 'error : %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
CONST	SEGMENT
??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@ DB 'PremiumSystemZt.cpp', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UserCalculatorPlus@PremiumSystemZt@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?UserCalculatorPlus@PremiumSystemZt@@QAEXH@Z PROC	; PremiumSystemZt::UserCalculatorPlus, COMDAT
; _this$ = ecx

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 b4 03 00
	00		 je	 $LN6@UserCalcul

; 209  : 	{
; 210  : 		return;
; 211  : 	}
; 212  : 
; 213  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00010	85 f6		 test	 esi, esi
  00012	78 0f		 js	 SHORT $LN15@UserCalcul
  00014	33 c0		 xor	 eax, eax
  00016	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  0001c	0f 9e c0	 setle	 al
  0001f	85 c0		 test	 eax, eax
  00021	75 1d		 jne	 SHORT $LN9@UserCalcul
$LN15@UserCalcul:

; 214  : 	{
; 215  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  00023	68 d7 00 00 00	 push	 215			; 000000d7H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	5e		 pop	 esi

; 263  : 	}
; 264  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN9@UserCalcul:

; 216  : 		return;
; 217  : 	}
; 218  : 
; 219  : 	LPOBJ lpUser = &gObj[aIndex];

  00040	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00046	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 220  : 
; 221  : 	if(lpUser->Connected < PLAYER_PLAYING)

  0004c	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00050	0f 8c 69 03 00
	00		 jl	 $LN16@UserCalcul

; 222  : 	{
; 223  : 		return;
; 224  : 	}
; 225  : 
; 226  : 	if(lpUser->PremiumTimeType <= 0 || lpUser->PremiumTimeType <= 0)

  00056	8b 86 bc 22 00
	00		 mov	 eax, DWORD PTR [esi+8892]
  0005c	85 c0		 test	 eax, eax
  0005e	0f 8e 5b 03 00
	00		 jle	 $LN16@UserCalcul

; 227  : 	{
; 228  : 		return;
; 229  : 	}
; 230  : 
; 231  : 	if(lpUser->PremiumTimeType == eVip1)

  00064	57		 push	 edi
  00065	83 f8 01	 cmp	 eax, 1
  00068	0f 85 0b 01 00
	00		 jne	 $LN5@UserCalcul

; 232  : 	{
; 233  : 		lpUser->m_AttackDamageMinRight	+= ( lpUser->m_AttackDamageMinRight * this->Plus1DamageProcent ) / 100;

  0006e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00071	8b be 84 04 00
	00		 mov	 edi, DWORD PTR [esi+1156]
  00077	0f af d7	 imul	 edx, edi
  0007a	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0007f	f7 ea		 imul	 edx
  00081	c1 fa 05	 sar	 edx, 5
  00084	8b c2		 mov	 eax, edx
  00086	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00089	03 c2		 add	 eax, edx
  0008b	03 c7		 add	 eax, edi
  0008d	89 86 84 04 00
	00		 mov	 DWORD PTR [esi+1156], eax

; 234  : 		lpUser->m_AttackDamageMaxRight	+= ( lpUser->m_AttackDamageMaxRight * this->Plus1DamageProcent ) / 100;

  00093	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00096	8b be 80 04 00
	00		 mov	 edi, DWORD PTR [esi+1152]
  0009c	0f af d7	 imul	 edx, edi
  0009f	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000a4	f7 ea		 imul	 edx
  000a6	c1 fa 05	 sar	 edx, 5
  000a9	8b c2		 mov	 eax, edx
  000ab	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ae	03 c2		 add	 eax, edx
  000b0	03 c7		 add	 eax, edi
  000b2	89 86 80 04 00
	00		 mov	 DWORD PTR [esi+1152], eax

; 235  : 		lpUser->m_AttackDamageMinLeft	+= ( lpUser->m_AttackDamageMinLeft * this->Plus1DamageProcent ) / 100;

  000b8	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000bb	8b be 7c 04 00
	00		 mov	 edi, DWORD PTR [esi+1148]
  000c1	0f af d7	 imul	 edx, edi
  000c4	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000c9	f7 ea		 imul	 edx
  000cb	c1 fa 05	 sar	 edx, 5
  000ce	8b c2		 mov	 eax, edx
  000d0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d3	03 c2		 add	 eax, edx
  000d5	03 c7		 add	 eax, edi

; 236  : 		lpUser->m_AttackDamageMaxLeft	+= ( lpUser->m_AttackDamageMaxLeft * this->Plus1DamageProcent ) / 100;

  000d7	8b be 78 04 00
	00		 mov	 edi, DWORD PTR [esi+1144]
  000dd	89 86 7c 04 00
	00		 mov	 DWORD PTR [esi+1148], eax
  000e3	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000e6	0f af d7	 imul	 edx, edi
  000e9	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000ee	f7 ea		 imul	 edx
  000f0	c1 fa 05	 sar	 edx, 5
  000f3	8b c2		 mov	 eax, edx
  000f5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f8	03 c2		 add	 eax, edx
  000fa	03 c7		 add	 eax, edi

; 237  : 		lpUser->m_Defense				+= ( lpUser->m_Defense * this->Plus1DefenceProcent ) / 100;

  000fc	8b be 94 04 00
	00		 mov	 edi, DWORD PTR [esi+1172]
  00102	89 86 78 04 00
	00		 mov	 DWORD PTR [esi+1144], eax
  00108	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0010b	0f af d7	 imul	 edx, edi
  0010e	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00113	f7 ea		 imul	 edx
  00115	c1 fa 05	 sar	 edx, 5
  00118	8b c2		 mov	 eax, edx
  0011a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0011d	03 c2		 add	 eax, edx
  0011f	03 c7		 add	 eax, edi

; 238  : 		lpUser->m_MagicDefense			+= ( lpUser->m_MagicDefense * this->Plus1DefenceProcent ) / 100;

  00121	8b be 98 04 00
	00		 mov	 edi, DWORD PTR [esi+1176]
  00127	89 86 94 04 00
	00		 mov	 DWORD PTR [esi+1172], eax
  0012d	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00130	0f af d7	 imul	 edx, edi
  00133	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00138	f7 ea		 imul	 edx
  0013a	c1 fa 05	 sar	 edx, 5
  0013d	8b c2		 mov	 eax, edx
  0013f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00142	03 c2		 add	 eax, edx
  00144	03 c7		 add	 eax, edi

; 239  : 		lpUser->m_MagicDamageMin		+= ( lpUser->m_MagicDamageMin * this->Plus1WizardDamageProcent ) / 100;

  00146	8b be 68 04 00
	00		 mov	 edi, DWORD PTR [esi+1128]
  0014c	89 86 98 04 00
	00		 mov	 DWORD PTR [esi+1176], eax
  00152	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00155	0f af d7	 imul	 edx, edi
  00158	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0015d	f7 ea		 imul	 edx
  0015f	c1 fa 05	 sar	 edx, 5
  00162	8b c2		 mov	 eax, edx
  00164	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00167	03 c2		 add	 eax, edx
  00169	03 c7		 add	 eax, edi
  0016b	89 86 68 04 00
	00		 mov	 DWORD PTR [esi+1128], eax

; 240  : 		lpUser->m_MagicDamageMax		+= ( lpUser->m_MagicDamageMax * this->Plus1WizardDamageProcent ) / 100;

  00171	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00174	e9 23 02 00 00	 jmp	 $LN18@UserCalcul
$LN5@UserCalcul:

; 241  : 	}
; 242  : 	else if(lpUser->PremiumTimeType == eVip2)

  00179	83 f8 02	 cmp	 eax, 2
  0017c	0f 85 0b 01 00
	00		 jne	 $LN3@UserCalcul

; 243  : 	{
; 244  : 		lpUser->m_AttackDamageMinRight	+= ( lpUser->m_AttackDamageMinRight * this->Plus2DamageProcent ) / 100;

  00182	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00185	8b be 84 04 00
	00		 mov	 edi, DWORD PTR [esi+1156]
  0018b	0f af d7	 imul	 edx, edi
  0018e	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00193	f7 ea		 imul	 edx
  00195	c1 fa 05	 sar	 edx, 5
  00198	8b c2		 mov	 eax, edx
  0019a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0019d	03 c2		 add	 eax, edx
  0019f	03 c7		 add	 eax, edi
  001a1	89 86 84 04 00
	00		 mov	 DWORD PTR [esi+1156], eax

; 245  : 		lpUser->m_AttackDamageMaxRight	+= ( lpUser->m_AttackDamageMaxRight * this->Plus2DamageProcent ) / 100;

  001a7	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001aa	8b be 80 04 00
	00		 mov	 edi, DWORD PTR [esi+1152]
  001b0	0f af d7	 imul	 edx, edi
  001b3	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  001b8	f7 ea		 imul	 edx
  001ba	c1 fa 05	 sar	 edx, 5
  001bd	8b c2		 mov	 eax, edx
  001bf	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001c2	03 c2		 add	 eax, edx
  001c4	03 c7		 add	 eax, edi
  001c6	89 86 80 04 00
	00		 mov	 DWORD PTR [esi+1152], eax

; 246  : 		lpUser->m_AttackDamageMinLeft	+= ( lpUser->m_AttackDamageMinLeft * this->Plus2DamageProcent ) / 100;

  001cc	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001cf	8b be 7c 04 00
	00		 mov	 edi, DWORD PTR [esi+1148]
  001d5	0f af d7	 imul	 edx, edi
  001d8	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  001dd	f7 ea		 imul	 edx
  001df	c1 fa 05	 sar	 edx, 5
  001e2	8b c2		 mov	 eax, edx
  001e4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001e7	03 c2		 add	 eax, edx
  001e9	03 c7		 add	 eax, edi

; 247  : 		lpUser->m_AttackDamageMaxLeft	+= ( lpUser->m_AttackDamageMaxLeft * this->Plus2DamageProcent ) / 100;

  001eb	8b be 78 04 00
	00		 mov	 edi, DWORD PTR [esi+1144]
  001f1	89 86 7c 04 00
	00		 mov	 DWORD PTR [esi+1148], eax
  001f7	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001fa	0f af d7	 imul	 edx, edi
  001fd	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00202	f7 ea		 imul	 edx
  00204	c1 fa 05	 sar	 edx, 5
  00207	8b c2		 mov	 eax, edx
  00209	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0020c	03 c2		 add	 eax, edx
  0020e	03 c7		 add	 eax, edi

; 248  : 		lpUser->m_Defense				+= ( lpUser->m_Defense * this->Plus2DefenceProcent ) / 100;

  00210	8b be 94 04 00
	00		 mov	 edi, DWORD PTR [esi+1172]
  00216	89 86 78 04 00
	00		 mov	 DWORD PTR [esi+1144], eax
  0021c	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  0021f	0f af d7	 imul	 edx, edi
  00222	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00227	f7 ea		 imul	 edx
  00229	c1 fa 05	 sar	 edx, 5
  0022c	8b c2		 mov	 eax, edx
  0022e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00231	03 c2		 add	 eax, edx
  00233	03 c7		 add	 eax, edi

; 249  : 		lpUser->m_MagicDefense			+= ( lpUser->m_MagicDefense * this->Plus2DefenceProcent ) / 100;

  00235	8b be 98 04 00
	00		 mov	 edi, DWORD PTR [esi+1176]
  0023b	89 86 94 04 00
	00		 mov	 DWORD PTR [esi+1172], eax
  00241	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00244	0f af d7	 imul	 edx, edi
  00247	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0024c	f7 ea		 imul	 edx
  0024e	c1 fa 05	 sar	 edx, 5
  00251	8b c2		 mov	 eax, edx
  00253	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00256	03 c2		 add	 eax, edx
  00258	03 c7		 add	 eax, edi

; 250  : 		lpUser->m_MagicDamageMin		+= ( lpUser->m_MagicDamageMin * this->Plus2WizardDamageProcent ) / 100;

  0025a	8b be 68 04 00
	00		 mov	 edi, DWORD PTR [esi+1128]
  00260	89 86 98 04 00
	00		 mov	 DWORD PTR [esi+1176], eax
  00266	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00269	0f af d7	 imul	 edx, edi
  0026c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00271	f7 ea		 imul	 edx
  00273	c1 fa 05	 sar	 edx, 5
  00276	8b c2		 mov	 eax, edx
  00278	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0027b	03 c2		 add	 eax, edx
  0027d	03 c7		 add	 eax, edi
  0027f	89 86 68 04 00
	00		 mov	 DWORD PTR [esi+1128], eax

; 251  : 		lpUser->m_MagicDamageMax		+= ( lpUser->m_MagicDamageMax * this->Plus2WizardDamageProcent ) / 100;

  00285	8b 49 2c	 mov	 ecx, DWORD PTR [ecx+44]
  00288	e9 0f 01 00 00	 jmp	 $LN18@UserCalcul
$LN3@UserCalcul:

; 252  : 	}
; 253  : 	else if(lpUser->PremiumTimeType == eVip3)

  0028d	83 f8 03	 cmp	 eax, 3
  00290	0f 85 28 01 00
	00		 jne	 $LN17@UserCalcul

; 254  : 	{
; 255  : 		lpUser->m_AttackDamageMinRight	+= ( lpUser->m_AttackDamageMinRight * this->Plus3DamageProcent ) / 100;

  00296	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00299	8b be 84 04 00
	00		 mov	 edi, DWORD PTR [esi+1156]
  0029f	0f af d7	 imul	 edx, edi
  002a2	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  002a7	f7 ea		 imul	 edx
  002a9	c1 fa 05	 sar	 edx, 5
  002ac	8b c2		 mov	 eax, edx
  002ae	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002b1	03 c2		 add	 eax, edx
  002b3	03 c7		 add	 eax, edi
  002b5	89 86 84 04 00
	00		 mov	 DWORD PTR [esi+1156], eax

; 256  : 		lpUser->m_AttackDamageMaxRight	+= ( lpUser->m_AttackDamageMaxRight * this->Plus3DamageProcent ) / 100;

  002bb	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002be	8b be 80 04 00
	00		 mov	 edi, DWORD PTR [esi+1152]
  002c4	0f af d7	 imul	 edx, edi
  002c7	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  002cc	f7 ea		 imul	 edx
  002ce	c1 fa 05	 sar	 edx, 5
  002d1	8b c2		 mov	 eax, edx
  002d3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002d6	03 c2		 add	 eax, edx
  002d8	03 c7		 add	 eax, edi
  002da	89 86 80 04 00
	00		 mov	 DWORD PTR [esi+1152], eax

; 257  : 		lpUser->m_AttackDamageMinLeft	+= ( lpUser->m_AttackDamageMinLeft * this->Plus3DamageProcent ) / 100;

  002e0	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002e3	8b be 7c 04 00
	00		 mov	 edi, DWORD PTR [esi+1148]
  002e9	0f af d7	 imul	 edx, edi
  002ec	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  002f1	f7 ea		 imul	 edx
  002f3	c1 fa 05	 sar	 edx, 5
  002f6	8b c2		 mov	 eax, edx
  002f8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002fb	03 c2		 add	 eax, edx
  002fd	03 c7		 add	 eax, edi

; 258  : 		lpUser->m_AttackDamageMaxLeft	+= ( lpUser->m_AttackDamageMaxLeft * this->Plus3DamageProcent ) / 100;

  002ff	8b be 78 04 00
	00		 mov	 edi, DWORD PTR [esi+1144]
  00305	89 86 7c 04 00
	00		 mov	 DWORD PTR [esi+1148], eax
  0030b	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0030e	0f af d7	 imul	 edx, edi
  00311	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00316	f7 ea		 imul	 edx
  00318	c1 fa 05	 sar	 edx, 5
  0031b	8b c2		 mov	 eax, edx
  0031d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00320	03 c2		 add	 eax, edx
  00322	03 c7		 add	 eax, edi

; 259  : 		lpUser->m_Defense				+= ( lpUser->m_Defense * this->Plus3DefenceProcent ) / 100;

  00324	8b be 94 04 00
	00		 mov	 edi, DWORD PTR [esi+1172]
  0032a	89 86 78 04 00
	00		 mov	 DWORD PTR [esi+1144], eax
  00330	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  00333	0f af d7	 imul	 edx, edi
  00336	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0033b	f7 ea		 imul	 edx
  0033d	c1 fa 05	 sar	 edx, 5
  00340	8b c2		 mov	 eax, edx
  00342	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00345	03 c2		 add	 eax, edx
  00347	03 c7		 add	 eax, edi

; 260  : 		lpUser->m_MagicDefense			+= ( lpUser->m_MagicDefense * this->Plus3DefenceProcent ) / 100;

  00349	8b be 98 04 00
	00		 mov	 edi, DWORD PTR [esi+1176]
  0034f	89 86 94 04 00
	00		 mov	 DWORD PTR [esi+1172], eax
  00355	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  00358	0f af d7	 imul	 edx, edi
  0035b	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00360	f7 ea		 imul	 edx
  00362	c1 fa 05	 sar	 edx, 5
  00365	8b c2		 mov	 eax, edx
  00367	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0036a	03 c2		 add	 eax, edx
  0036c	03 c7		 add	 eax, edi

; 261  : 		lpUser->m_MagicDamageMin		+= ( lpUser->m_MagicDamageMin * this->Plus3WizardDamageProcent ) / 100;

  0036e	8b be 68 04 00
	00		 mov	 edi, DWORD PTR [esi+1128]
  00374	89 86 98 04 00
	00		 mov	 DWORD PTR [esi+1176], eax
  0037a	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0037d	0f af d7	 imul	 edx, edi
  00380	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00385	f7 ea		 imul	 edx
  00387	c1 fa 05	 sar	 edx, 5
  0038a	8b c2		 mov	 eax, edx
  0038c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0038f	03 c2		 add	 eax, edx
  00391	03 c7		 add	 eax, edi
  00393	89 86 68 04 00
	00		 mov	 DWORD PTR [esi+1128], eax

; 262  : 		lpUser->m_MagicDamageMax		+= ( lpUser->m_MagicDamageMax * this->Plus3WizardDamageProcent ) / 100;

  00399	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
$LN18@UserCalcul:
  0039c	8b be 6c 04 00
	00		 mov	 edi, DWORD PTR [esi+1132]
  003a2	0f af cf	 imul	 ecx, edi
  003a5	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  003aa	f7 e9		 imul	 ecx
  003ac	c1 fa 05	 sar	 edx, 5
  003af	8b ca		 mov	 ecx, edx
  003b1	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  003b4	03 ca		 add	 ecx, edx
  003b6	03 cf		 add	 ecx, edi
  003b8	89 8e 6c 04 00
	00		 mov	 DWORD PTR [esi+1132], ecx
$LN17@UserCalcul:
  003be	5f		 pop	 edi
$LN16@UserCalcul:
  003bf	5e		 pop	 esi
$LN6@UserCalcul:

; 263  : 	}
; 264  : }

  003c0	5d		 pop	 ebp
  003c1	c2 04 00	 ret	 4
?UserCalculatorPlus@PremiumSystemZt@@QAEXH@Z ENDP	; PremiumSystemZt::UserCalculatorPlus
_TEXT	ENDS
PUBLIC	?UserExpPlus@PremiumSystemZt@@QAEHH@Z		; PremiumSystemZt::UserExpPlus
; Function compile flags: /Ogtp
;	COMDAT ?UserExpPlus@PremiumSystemZt@@QAEHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?UserExpPlus@PremiumSystemZt@@QAEHH@Z PROC		; PremiumSystemZt::UserExpPlus, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 269  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0

; 270  : 	{
; 271  : 		return 0;

  00006	74 2d		 je	 SHORT $LN6@UserExpPlu

; 272  : 	}
; 273  : 
; 274  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00008	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000b	85 c0		 test	 eax, eax
  0000d	78 0e		 js	 SHORT $LN15@UserExpPlu
  0000f	33 d2		 xor	 edx, edx
  00011	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00016	0f 9e c2	 setle	 dl
  00019	85 d2		 test	 edx, edx
  0001b	75 1e		 jne	 SHORT $LN9@UserExpPlu
$LN15@UserExpPlu:

; 275  : 	{
; 276  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  0001d	68 14 01 00 00	 push	 276			; 00000114H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@UserExpPlu:

; 288  : 	{
; 289  : 		return 0;

  00035	33 c0		 xor	 eax, eax
$LN11@UserExpPlu:

; 305  : 	}
; 306  : 
; 307  : 	return Result;
; 308  : }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
$LN9@UserExpPlu:

; 277  : 		return 0;
; 278  : 	}
; 279  : 
; 280  : 	LPOBJ lpUser = &gObj[aIndex];

  0003b	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00041	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 281  : 
; 282  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00047	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3

; 283  : 	{
; 284  : 		return 0;

  0004b	7c e8		 jl	 SHORT $LN6@UserExpPlu

; 285  : 	}
; 286  : 
; 287  : 	if(lpUser->PremiumTimeType <= 0 || lpUser->PremiumTimeType <= 0)

  0004d	8b 90 bc 22 00
	00		 mov	 edx, DWORD PTR [eax+8892]
  00053	85 d2		 test	 edx, edx
  00055	7e de		 jle	 SHORT $LN6@UserExpPlu

; 290  : 	}
; 291  : 	
; 292  : 	int Result = 0;

  00057	33 c0		 xor	 eax, eax

; 293  : 
; 294  : 	if(lpUser->PremiumTimeType == eVip1)

  00059	83 fa 01	 cmp	 edx, 1
  0005c	75 07		 jne	 SHORT $LN5@UserExpPlu

; 295  : 	{
; 296  : 		Result = this->Plus1ExpProcent;

  0005e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 305  : 	}
; 306  : 
; 307  : 	return Result;
; 308  : }

  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
$LN5@UserExpPlu:

; 297  : 	}
; 298  : 	else if(lpUser->PremiumTimeType == eVip2)

  00065	83 fa 02	 cmp	 edx, 2
  00068	75 07		 jne	 SHORT $LN3@UserExpPlu

; 299  : 	{
; 300  : 		Result = this->Plus2ExpProcent;

  0006a	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 305  : 	}
; 306  : 
; 307  : 	return Result;
; 308  : }

  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
$LN3@UserExpPlu:

; 301  : 	}
; 302  : 	else if(lpUser->PremiumTimeType == eVip3)

  00071	83 fa 03	 cmp	 edx, 3
  00074	75 c1		 jne	 SHORT $LN11@UserExpPlu

; 303  : 	{
; 304  : 		Result = this->Plus3ExpProcent;

  00076	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]

; 305  : 	}
; 306  : 
; 307  : 	return Result;
; 308  : }

  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?UserExpPlus@PremiumSystemZt@@QAEHH@Z ENDP		; PremiumSystemZt::UserExpPlus
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	?UserZenPlus@PremiumSystemZt@@QAEXHAAM@Z	; PremiumSystemZt::UserZenPlus
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UserZenPlus@PremiumSystemZt@@QAEXHAAM@Z
_TEXT	SEGMENT
_ZenPlus$ = 8						; size = 4
_aIndex$ = 8						; size = 4
_Money$ = 12						; size = 4
?UserZenPlus@PremiumSystemZt@@QAEXHAAM@Z PROC		; PremiumSystemZt::UserZenPlus, COMDAT
; _this$ = ecx

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 313  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 8b 00 00
	00		 je	 $LN6@UserZenPlu

; 314  : 	{
; 315  : 		return;
; 316  : 	}
; 317  : 
; 318  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  0000c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000f	85 c0		 test	 eax, eax
  00011	78 0e		 js	 SHORT $LN15@UserZenPlu
  00013	33 d2		 xor	 edx, edx
  00015	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001a	0f 9e c2	 setle	 dl
  0001d	85 d2		 test	 edx, edx
  0001f	75 1c		 jne	 SHORT $LN9@UserZenPlu
$LN15@UserZenPlu:

; 319  : 	{
; 320  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  00021	68 40 01 00 00	 push	 320			; 00000140H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : }

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN9@UserZenPlu:

; 321  : 		return;
; 322  : 	}
; 323  : 
; 324  : 	LPOBJ lpUser = &gObj[aIndex];

  0003d	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00043	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 325  : 
; 326  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00049	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0004d	7c 48		 jl	 SHORT $LN6@UserZenPlu

; 327  : 	{
; 328  : 		return;
; 329  : 	}
; 330  : 
; 331  : 	if(lpUser->PremiumTimeType <= 0 || lpUser->PremiumTimeType <= 0)

  0004f	8b 80 bc 22 00
	00		 mov	 eax, DWORD PTR [eax+8892]
  00055	85 c0		 test	 eax, eax
  00057	7e 3e		 jle	 SHORT $LN6@UserZenPlu

; 332  : 	{
; 333  : 		return;
; 334  : 	}
; 335  : 
; 336  : 	int ZenPlus = 0;

  00059	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _ZenPlus$[ebp], 0

; 337  : 
; 338  : 	if(lpUser->PremiumTimeType == eVip1)

  00060	83 f8 01	 cmp	 eax, 1
  00063	75 08		 jne	 SHORT $LN5@UserZenPlu

; 339  : 	{
; 340  : 		ZenPlus = this->Plus1DropZenProcent;

  00065	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00068	89 45 08	 mov	 DWORD PTR _ZenPlus$[ebp], eax
  0006b	eb 18		 jmp	 SHORT $LN1@UserZenPlu
$LN5@UserZenPlu:

; 341  : 	}
; 342  : 	else if(lpUser->PremiumTimeType == eVip2)

  0006d	83 f8 02	 cmp	 eax, 2
  00070	75 08		 jne	 SHORT $LN3@UserZenPlu

; 343  : 	{
; 344  : 		ZenPlus = this->Plus2DropZenProcent;

  00072	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00075	89 4d 08	 mov	 DWORD PTR _ZenPlus$[ebp], ecx
  00078	eb 0b		 jmp	 SHORT $LN1@UserZenPlu
$LN3@UserZenPlu:

; 345  : 	}
; 346  : 	else if(lpUser->PremiumTimeType == eVip3)

  0007a	83 f8 03	 cmp	 eax, 3
  0007d	75 06		 jne	 SHORT $LN1@UserZenPlu

; 347  : 	{
; 348  : 		ZenPlus = this->Plus3DropZenProcent;

  0007f	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00082	89 55 08	 mov	 DWORD PTR _ZenPlus$[ebp], edx
$LN1@UserZenPlu:

; 349  : 	}
; 350  : 
; 351  : 	Money += ( Money * ZenPlus ) / 100.0f;

  00085	db 45 08	 fild	 DWORD PTR _ZenPlus$[ebp]
  00088	8b 45 0c	 mov	 eax, DWORD PTR _Money$[ebp]
  0008b	d8 08		 fmul	 DWORD PTR [eax]
  0008d	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  00093	d8 00		 fadd	 DWORD PTR [eax]
  00095	d9 18		 fstp	 DWORD PTR [eax]
$LN6@UserZenPlu:

; 352  : }

  00097	5d		 pop	 ebp
  00098	c2 08 00	 ret	 8
?UserZenPlus@PremiumSystemZt@@QAEXHAAM@Z ENDP		; PremiumSystemZt::UserZenPlus
_TEXT	ENDS
PUBLIC	?PremiumTime@PremiumSystemZt@@QAEXH@Z		; PremiumSystemZt::PremiumTime
EXTRN	?MessageChat@@YAXHPADZZ:PROC			; MessageChat
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
; Function compile flags: /Ogtp
;	COMDAT ?PremiumTime@PremiumSystemZt@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?PremiumTime@PremiumSystemZt@@QAEXH@Z PROC		; PremiumSystemZt::PremiumTime, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 399  : 	if(!this->ActiveSystem)

  00003	33 d2		 xor	 edx, edx
  00005	38 11		 cmp	 BYTE PTR [ecx], dl
  00007	0f 84 94 00 00
	00		 je	 $LN2@PremiumTim

; 400  : 	{
; 401  : 		return;
; 402  : 	}
; 403  : 
; 404  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  0000d	56		 push	 esi
  0000e	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00011	3b f2		 cmp	 esi, edx
  00013	7c 0f		 jl	 SHORT $LN11@PremiumTim
  00015	33 c0		 xor	 eax, eax
  00017	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  0001d	0f 9e c0	 setle	 al
  00020	3b c2		 cmp	 eax, edx
  00022	75 1d		 jne	 SHORT $LN5@PremiumTim
$LN11@PremiumTim:

; 405  : 	{
; 406  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  00024	68 96 01 00 00	 push	 406			; 00000196H
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	5e		 pop	 esi

; 431  : 	}
; 432  : 
; 433  : }

  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
$LN5@PremiumTim:

; 407  : 		return;
; 408  : 	}
; 409  : 
; 410  : 	LPOBJ lpUser = &gObj[aIndex];

  00041	8b c6		 mov	 eax, esi
  00043	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 411  : 
; 412  : 	if(lpUser->Connected < PLAYER_PLAYING)

  0004f	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00053	7c 4b		 jl	 SHORT $LN12@PremiumTim

; 413  : 	{
; 414  : 		return;
; 415  : 	}
; 416  : 
; 417  : 	if(lpUser->PremiumTimeType <= 0 || lpUser->PremiumTime <= 0)

  00055	39 90 bc 22 00
	00		 cmp	 DWORD PTR [eax+8892], edx
  0005b	7e 43		 jle	 SHORT $LN12@PremiumTim
  0005d	8b 88 b8 22 00
	00		 mov	 ecx, DWORD PTR [eax+8888]
  00063	3b ca		 cmp	 ecx, edx
  00065	7e 39		 jle	 SHORT $LN12@PremiumTim

; 418  : 	{
; 419  : 		return;
; 420  : 	}
; 421  : 
; 422  : 	lpUser->PremiumTime--;

  00067	49		 dec	 ecx
  00068	89 88 b8 22 00
	00		 mov	 DWORD PTR [eax+8888], ecx

; 423  : 
; 424  : 	if(lpUser->PremiumTime <= 0)

  0006e	3b ca		 cmp	 ecx, edx
  00070	7f 2e		 jg	 SHORT $LN12@PremiumTim

; 425  : 	{
; 426  : 		lpUser->PremiumTimeType = 0;
; 427  : 		lpUser->PremiumTime = 0;
; 428  : 		ZtUserDataSend(aIndex);

  00072	56		 push	 esi
  00073	89 90 bc 22 00
	00		 mov	 DWORD PTR [eax+8892], edx
  00079	89 90 b8 22 00
	00		 mov	 DWORD PTR [eax+8888], edx
  0007f	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00084	83 c4 04	 add	 esp, 4

; 429  : 
; 430  : 		MessageChat(aIndex, g_ZtText.GetText(252));

  00087	68 fc 00 00 00	 push	 252			; 000000fcH
  0008c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00091	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00096	50		 push	 eax
  00097	56		 push	 esi
  00098	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  0009d	83 c4 08	 add	 esp, 8
$LN12@PremiumTim:
  000a0	5e		 pop	 esi
$LN2@PremiumTim:

; 431  : 	}
; 432  : 
; 433  : }

  000a1	5d		 pop	 ebp
  000a2	c2 04 00	 ret	 4
?PremiumTime@PremiumSystemZt@@QAEXH@Z ENDP		; PremiumSystemZt::PremiumTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GC_Send@PremiumSystemZt@@QAEXHPAUCG_SEND_OPEND_WIN@@@Z ; PremiumSystemZt::GC_Send
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GC_Send@PremiumSystemZt@@QAEXHPAUCG_SEND_OPEND_WIN@@@Z
_TEXT	SEGMENT
tv221 = -48						; size = 4
tv219 = -48						; size = 4
tv224 = -42						; size = 2
_pSend$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_Recv$ = 12						; size = 4
?GC_Send@PremiumSystemZt@@QAEXHPAUCG_SEND_OPEND_WIN@@@Z PROC ; PremiumSystemZt::GC_Send, COMDAT
; _this$ = ecx

; 600  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 601  : 	if(!this->ActiveSystem)

  00013	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  0001a	0f 84 c8 00 00
	00		 je	 $LN5@GC_Send

; 602  : 	{
; 603  : 		return;
; 604  : 	}
; 605  : 
; 606  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00020	85 ff		 test	 edi, edi
  00022	78 0f		 js	 SHORT $LN11@GC_Send
  00024	33 c0		 xor	 eax, eax
  00026	81 ff 97 3a 00
	00		 cmp	 edi, 14999		; 00003a97H
  0002c	0f 9e c0	 setle	 al
  0002f	85 c0		 test	 eax, eax
  00031	75 2a		 jne	 SHORT $LN3@GC_Send
$LN11@GC_Send:

; 607  : 	{
; 608  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  00033	68 60 02 00 00	 push	 608			; 00000260H
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi

; 637  : }

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	33 cd		 xor	 ecx, ebp
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 08 00	 ret	 8
$LN3@GC_Send:
  0005d	53		 push	 ebx

; 609  : 		return;
; 610  : 	}
; 611  : 
; 612  : 	LPOBJ lpUser = &gObj[aIndex];

  0005e	8b df		 mov	 ebx, edi
  00060	69 db 50 2b 00
	00		 imul	 ebx, 11088		; 00002b50H
  00066	03 1d 00 00 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 613  : 
; 614  : 	if(lpUser->Connected < PLAYER_PLAYING)

  0006c	83 7b 04 03	 cmp	 DWORD PTR [ebx+4], 3
  00070	7c 75		 jl	 SHORT $LN12@GC_Send

; 615  : 	{
; 616  : 		return;
; 617  : 	}
; 618  : 
; 619  : 	if(Recv->Result != 1)

  00072	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  00075	80 78 04 01	 cmp	 BYTE PTR [eax+4], 1
  00079	75 6c		 jne	 SHORT $LN12@GC_Send

; 620  : 	{
; 621  : 		return;
; 622  : 	}
; 623  : 
; 624  : 	ZtUserDataSend(aIndex);

  0007b	57		 push	 edi
  0007c	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 625  : 
; 626  : 	GC_PREMIUM_SEND pSend;
; 627  : 	pSend.h.set((LPBYTE)&pSend, 0xFB, 0x09, sizeof(pSend));
; 628  : 	pSend.Buy1CreditDay = this->Buy1CreditDay;
; 629  : 	pSend.Buy2CreditDay = this->Buy2CreditDay;
; 630  : 	pSend.Buy3CreditDay = this->Buy3CreditDay;
; 631  : 	pSend.UserCredit = (WORD)lpUser->ZtCred;

  00081	d9 7d d6	 fnstcw	 WORD PTR tv224[ebp]
  00084	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00087	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0008a	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
  0008d	89 45 e4	 mov	 DWORD PTR _pSend$[ebp+12], eax
  00090	0f b7 45 d6	 movzx	 eax, WORD PTR tv224[ebp]
  00094	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00099	89 45 d0	 mov	 DWORD PTR tv221[ebp], eax

; 632  : 	pSend.OfflineModePickUpPremiumRang = this->m_iOfflineModePickUpPremiumRang;
; 633  : 	pSend.Buy1WCoinDay = this->Buy1WCoinDay;

  0009c	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0009f	89 4d dc	 mov	 DWORD PTR _pSend$[ebp+4], ecx
  000a2	89 55 e0	 mov	 DWORD PTR _pSend$[ebp+8], edx
  000a5	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  000a8	c7 45 d8 c1 24
	fb 09		 mov	 DWORD PTR _pSend$[ebp], 167453889 ; 09fb24c1H

; 634  : 	pSend.Buy2WCoinDay = this->Buy2WCoinDay;
; 635  : 	pSend.Buy3WCoinDay = this->Buy3WCoinDay;
; 636  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  000af	6a 24		 push	 36			; 00000024H
  000b1	d9 83 a8 22 00
	00		 fld	 DWORD PTR [ebx+8872]
  000b7	89 45 f0	 mov	 DWORD PTR _pSend$[ebp+24], eax
  000ba	d9 6d d0	 fldcw	 WORD PTR tv221[ebp]
  000bd	8d 45 d8	 lea	 eax, DWORD PTR _pSend$[ebp]
  000c0	89 55 ec	 mov	 DWORD PTR _pSend$[ebp+20], edx
  000c3	8b 56 5c	 mov	 edx, DWORD PTR [esi+92]
  000c6	50		 push	 eax
  000c7	57		 push	 edi
  000c8	db 5d d0	 fistp	 DWORD PTR tv219[ebp]
  000cb	89 55 f8	 mov	 DWORD PTR _pSend$[ebp+32], edx
  000ce	66 8b 4d d0	 mov	 cx, WORD PTR tv219[ebp]
  000d2	66 89 4d e8	 mov	 WORD PTR _pSend$[ebp+16], cx
  000d6	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  000d9	89 4d f4	 mov	 DWORD PTR _pSend$[ebp+28], ecx
  000dc	d9 6d d6	 fldcw	 WORD PTR tv224[ebp]
  000df	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e4	83 c4 10	 add	 esp, 16			; 00000010H
$LN12@GC_Send:
  000e7	5b		 pop	 ebx
$LN5@GC_Send:

; 637  : }

  000e8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000eb	5f		 pop	 edi
  000ec	33 cd		 xor	 ecx, ebp
  000ee	5e		 pop	 esi
  000ef	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
?GC_Send@PremiumSystemZt@@QAEXHPAUCG_SEND_OPEND_WIN@@@Z ENDP ; PremiumSystemZt::GC_Send
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GC_Config@PremiumSystemZt@@QAEXH@Z		; PremiumSystemZt::GC_Config
; Function compile flags: /Ogtp
;	COMDAT ?GC_Config@PremiumSystemZt@@QAEXH@Z
_TEXT	SEGMENT
_pSend$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GC_Config@PremiumSystemZt@@QAEXH@Z PROC		; PremiumSystemZt::GC_Config, COMDAT
; _this$ = ecx

; 691  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b c1		 mov	 eax, ecx

; 692  : 	if(!this->ActiveSystem)

  00012	80 38 00	 cmp	 BYTE PTR [eax], 0
  00015	74 60		 je	 SHORT $LN3@GC_Config

; 693  : 	{
; 694  : 		return;
; 695  : 	}
; 696  : 
; 697  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00017	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0001a	85 c9		 test	 ecx, ecx
  0001c	78 0f		 js	 SHORT $LN9@GC_Config
  0001e	33 d2		 xor	 edx, edx
  00020	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  00026	0f 9e c2	 setle	 dl
  00029	85 d2		 test	 edx, edx
  0002b	75 28		 jne	 SHORT $LN1@GC_Config
$LN9@GC_Config:

; 698  : 	{
; 699  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  0002d	68 bb 02 00 00	 push	 699			; 000002bbH
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 707  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 708  : }

  00045	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00048	33 cd		 xor	 ecx, ebp
  0004a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN1@GC_Config:

; 700  : 		return;
; 701  : 	}
; 702  : 
; 703  : 	GC_PREMIUM_CONFIG pSend;
; 704  : 	pSend.h.set((LPBYTE)&pSend, 0xFB, 0xAD, sizeof(pSend));
; 705  : 	pSend.OfflineModeAttackFreePremiumRang = this->m_iOfflineModeAttackFreePremiumRang;

  00055	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]

; 706  : 	pSend.OfflineModePickUpPremiumRang = this->m_iOfflineModePickUpPremiumRang;

  00058	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  0005b	89 55 f4	 mov	 DWORD PTR _pSend$[ebp+4], edx

; 707  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  0005e	6a 0c		 push	 12			; 0000000cH
  00060	8d 55 f0	 lea	 edx, DWORD PTR _pSend$[ebp]
  00063	52		 push	 edx
  00064	51		 push	 ecx
  00065	c7 45 f0 c1 0c
	fb ad		 mov	 DWORD PTR _pSend$[ebp], -1376056127 ; adfb0cc1H
  0006c	89 45 f8	 mov	 DWORD PTR _pSend$[ebp+8], eax
  0006f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GC_Config:

; 708  : }

  00077	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007a	33 cd		 xor	 ecx, ebp
  0007c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?GC_Config@PremiumSystemZt@@QAEXH@Z ENDP		; PremiumSystemZt::GC_Config
_TEXT	ENDS
PUBLIC	?UserBuff@PremiumSystemZt@@QAEXH@Z		; PremiumSystemZt::UserBuff
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
; Function compile flags: /Ogtp
;	COMDAT ?UserBuff@PremiumSystemZt@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?UserBuff@PremiumSystemZt@@QAEXH@Z PROC			; PremiumSystemZt::UserBuff, COMDAT
; _this$ = ecx

; 717  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 718  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	0f 84 9d 00 00
	00		 je	 $LN1@UserBuff

; 719  : 	{
; 720  : 		return;
; 721  : 	}
; 722  : 
; 723  : 	if(!OBJMAX_RANGE(aIndex))

  0000c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000f	85 c0		 test	 eax, eax
  00011	0f 88 92 00 00
	00		 js	 $LN1@UserBuff
  00017	33 c9		 xor	 ecx, ecx
  00019	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001e	0f 9e c1	 setle	 cl
  00021	85 c9		 test	 ecx, ecx
  00023	0f 84 80 00 00
	00		 je	 $LN1@UserBuff

; 724  : 	{
; 725  : 		return;
; 726  : 	}
; 727  : 
; 728  : 	LPOBJ lpUser = &gObj[aIndex];

  00029	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0002f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 729  : 
; 730  : 	if(lpUser->PremiumTimeType == eVip1)

  00035	8b 88 bc 22 00
	00		 mov	 ecx, DWORD PTR [eax+8892]
  0003b	83 f9 01	 cmp	 ecx, 1
  0003e	75 21		 jne	 SHORT $LN5@UserBuff

; 731  : 	{
; 732  : 		gObjApplyBuffEffectDuration(lpUser, AT_VIP_SILVER, 0, 0, 0, 0, lpUser->PremiumTime);

  00040	8b 88 b8 22 00
	00		 mov	 ecx, DWORD PTR [eax+8888]
  00046	51		 push	 ecx
  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	6a 00		 push	 0
  0004d	6a 00		 push	 0
  0004f	68 be 00 00 00	 push	 190			; 000000beH

; 739  : 	{
; 740  : 		gObjApplyBuffEffectDuration(lpUser, AT_VIP_PLATINUM, 0, 0, 0, 0, lpUser->PremiumTime);

  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  0005a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 741  : 	}
; 742  : }

  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN5@UserBuff:

; 733  : 	}
; 734  : 	else if(lpUser->PremiumTimeType == eVip2)

  00061	83 f9 02	 cmp	 ecx, 2
  00064	75 21		 jne	 SHORT $LN3@UserBuff

; 735  : 	{
; 736  : 		gObjApplyBuffEffectDuration(lpUser, AT_VIP_GOLD, 0, 0, 0, 0, lpUser->PremiumTime);

  00066	8b 90 b8 22 00
	00		 mov	 edx, DWORD PTR [eax+8888]
  0006c	52		 push	 edx
  0006d	6a 00		 push	 0
  0006f	6a 00		 push	 0
  00071	6a 00		 push	 0
  00073	6a 00		 push	 0
  00075	68 bf 00 00 00	 push	 191			; 000000bfH

; 739  : 	{
; 740  : 		gObjApplyBuffEffectDuration(lpUser, AT_VIP_PLATINUM, 0, 0, 0, 0, lpUser->PremiumTime);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00080	83 c4 1c	 add	 esp, 28			; 0000001cH

; 741  : 	}
; 742  : }

  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
$LN3@UserBuff:

; 737  : 	}
; 738  : 	else if(lpUser->PremiumTimeType == eVip3)

  00087	83 f9 03	 cmp	 ecx, 3
  0008a	75 1d		 jne	 SHORT $LN1@UserBuff

; 739  : 	{
; 740  : 		gObjApplyBuffEffectDuration(lpUser, AT_VIP_PLATINUM, 0, 0, 0, 0, lpUser->PremiumTime);

  0008c	8b 88 b8 22 00
	00		 mov	 ecx, DWORD PTR [eax+8888]
  00092	51		 push	 ecx
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 00		 push	 0
  00099	6a 00		 push	 0
  0009b	68 c0 00 00 00	 push	 192			; 000000c0H
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  000a6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN1@UserBuff:

; 741  : 	}
; 742  : }

  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?UserBuff@PremiumSystemZt@@QAEXH@Z ENDP			; PremiumSystemZt::UserBuff
_TEXT	ENDS
PUBLIC	??0PremiumSystemZt@@QAE@XZ			; PremiumSystemZt::PremiumSystemZt
; Function compile flags: /Ogtp
;	COMDAT ??0PremiumSystemZt@@QAE@XZ
_TEXT	SEGMENT
??0PremiumSystemZt@@QAE@XZ PROC				; PremiumSystemZt::PremiumSystemZt, COMDAT
; _this$ = ecx

; 23   : 	this->Init();

  00000	e8 00 00 00 00	 call	 ?Init@PremiumSystemZt@@QAEXXZ ; PremiumSystemZt::Init

; 24   : }

  00005	8b c1		 mov	 eax, ecx
  00007	c3		 ret	 0
??0PremiumSystemZt@@QAE@XZ ENDP				; PremiumSystemZt::PremiumSystemZt
_TEXT	ENDS
PUBLIC	??_C@_0BL@EPMENNKH@ZtData?2PremiumSystemZt?4ini?$AA@ ; `string'
PUBLIC	?Load@PremiumSystemZt@@QAEXXZ			; PremiumSystemZt::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
;	COMDAT ??_C@_0BL@EPMENNKH@ZtData?2PremiumSystemZt?4ini?$AA@
CONST	SEGMENT
??_C@_0BL@EPMENNKH@ZtData?2PremiumSystemZt?4ini?$AA@ DB 'ZtData\PremiumSy'
	DB	'stemZt.ini', 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@PremiumSystemZt@@QAEXXZ
_TEXT	SEGMENT
?Load@PremiumSystemZt@@QAEXXZ PROC			; PremiumSystemZt::Load, COMDAT
; _this$ = ecx

; 65   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 66   : 	this->Init();

  00003	e8 00 00 00 00	 call	 ?Init@PremiumSystemZt@@QAEXXZ ; PremiumSystemZt::Init

; 67   : 
; 68   : 	if(g_ZtLicense.user.PremiumZt == false)

  00008	80 3d ee 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+238, 0
  0000f	74 1f		 je	 SHORT $LN2@Load

; 69   : 	{
; 70   : 		return;
; 71   : 	}
; 72   : 
; 73   : 	this->Read(gDirPath.GetNewPath("ZtData\\PremiumSystemZt.ini"));

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EPMENNKH@ZtData?2PremiumSystemZt?4ini?$AA@
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0001b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00020	50		 push	 eax
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?Read@PremiumSystemZt@@QAEXPAD@Z ; PremiumSystemZt::Read

; 74   : 
; 75   : 	this->CheckValue();

  00028	8b ce		 mov	 ecx, esi
  0002a	5e		 pop	 esi
  0002b	e9 00 00 00 00	 jmp	 ?CheckValue@PremiumSystemZt@@QAEXXZ ; PremiumSystemZt::CheckValue
$LN2@Load:
  00030	5e		 pop	 esi

; 76   : }

  00031	c3		 ret	 0
?Load@PremiumSystemZt@@QAEXXZ ENDP			; PremiumSystemZt::Load
_TEXT	ENDS
PUBLIC	?InfoMessage@PremiumSystemZt@@QAEXH@Z		; PremiumSystemZt::InfoMessage
; Function compile flags: /Ogtp
;	COMDAT ?InfoMessage@PremiumSystemZt@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?InfoMessage@PremiumSystemZt@@QAEXH@Z PROC		; PremiumSystemZt::InfoMessage, COMDAT
; _this$ = ecx

; 641  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 642  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00004	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	78 0f		 js	 SHORT $LN14@InfoMessag
  0000e	33 c0		 xor	 eax, eax
  00010	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  00016	0f 9e c0	 setle	 al
  00019	85 c0		 test	 eax, eax
  0001b	75 1e		 jne	 SHORT $LN9@InfoMessag
$LN14@InfoMessag:

; 643  : 	{
; 644  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  0001d	68 84 02 00 00	 push	 644			; 00000284H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 688  : }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
$LN9@InfoMessag:
  0003b	53		 push	 ebx

; 645  : 		return;
; 646  : 	}
; 647  : 
; 648  : 	LPOBJ lpUser = &gObj[aIndex];

  0003c	8b de		 mov	 ebx, esi
  0003e	69 db 50 2b 00
	00		 imul	 ebx, 11088		; 00002b50H
  00044	03 1d 00 00 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 649  : 
; 650  : 	if(lpUser->Connected < PLAYER_PLAYING)

  0004a	83 7b 04 03	 cmp	 DWORD PTR [ebx+4], 3
  0004e	0f 8c f4 01 00
	00		 jl	 $LN15@InfoMessag

; 651  : 	{
; 652  : 		return;
; 653  : 	}
; 654  : 
; 655  : 	if(lpUser->PremiumTimeType <= 0 || lpUser->PremiumTime <= 0)

  00054	8b 83 bc 22 00
	00		 mov	 eax, DWORD PTR [ebx+8892]
  0005a	85 c0		 test	 eax, eax
  0005c	0f 8e e6 01 00
	00		 jle	 $LN15@InfoMessag
  00062	83 bb b8 22 00
	00 00		 cmp	 DWORD PTR [ebx+8888], 0
  00069	0f 8e d9 01 00
	00		 jle	 $LN15@InfoMessag

; 656  : 	{
; 657  : 		return;
; 658  : 	}
; 659  : 
; 660  : 	if(lpUser->PremiumTimeType == eVip1)

  0006f	83 f8 01	 cmp	 eax, 1
  00072	75 7d		 jne	 SHORT $LN5@InfoMessag

; 661  : 	{
; 662  : 		MessageChat(aIndex, g_ZtText.GetText(246), Plus1ExpProcent);

  00074	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00077	50		 push	 eax
  00078	68 f6 00 00 00	 push	 246			; 000000f6H
  0007d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00082	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00087	50		 push	 eax
  00088	56		 push	 esi
  00089	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 663  : 		MessageChat(aIndex, g_ZtText.GetText(247), Plus1DropZenProcent);

  0008e	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
  00094	51		 push	 ecx
  00095	68 f7 00 00 00	 push	 247			; 000000f7H
  0009a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0009f	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000a4	50		 push	 eax
  000a5	56		 push	 esi
  000a6	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 664  : 		MessageChat(aIndex, g_ZtText.GetText(248), Plus1DamageProcent);

  000ab	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b1	52		 push	 edx
  000b2	68 f8 00 00 00	 push	 248			; 000000f8H
  000b7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000bc	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000c1	50		 push	 eax
  000c2	56		 push	 esi
  000c3	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 665  : 		MessageChat(aIndex, g_ZtText.GetText(249), Plus1WizardDamageProcent);

  000c8	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ce	50		 push	 eax
  000cf	68 f9 00 00 00	 push	 249			; 000000f9H
  000d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  000d9	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  000de	50		 push	 eax
  000df	56		 push	 esi
  000e0	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 666  : 		MessageChat(aIndex, g_ZtText.GetText(250), Plus1DefenceProcent);

  000e5	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000eb	51		 push	 ecx
  000ec	e9 03 01 00 00	 jmp	 $LN16@InfoMessag
$LN5@InfoMessag:

; 667  : 	}
; 668  : 	else if(lpUser->PremiumTimeType == eVip2)

  000f1	83 f8 02	 cmp	 eax, 2
  000f4	75 7d		 jne	 SHORT $LN3@InfoMessag

; 669  : 	{
; 670  : 		MessageChat(aIndex, g_ZtText.GetText(246), Plus2ExpProcent);

  000f6	8b 57 1c	 mov	 edx, DWORD PTR [edi+28]
  000f9	52		 push	 edx
  000fa	68 f6 00 00 00	 push	 246			; 000000f6H
  000ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00104	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00109	50		 push	 eax
  0010a	56		 push	 esi
  0010b	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 671  : 		MessageChat(aIndex, g_ZtText.GetText(247), Plus2DropZenProcent);

  00110	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	50		 push	 eax
  00117	68 f7 00 00 00	 push	 247			; 000000f7H
  0011c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00121	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00126	50		 push	 eax
  00127	56		 push	 esi
  00128	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 672  : 		MessageChat(aIndex, g_ZtText.GetText(248), Plus2DamageProcent);

  0012d	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00130	83 c4 0c	 add	 esp, 12			; 0000000cH
  00133	51		 push	 ecx
  00134	68 f8 00 00 00	 push	 248			; 000000f8H
  00139	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0013e	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00143	50		 push	 eax
  00144	56		 push	 esi
  00145	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 673  : 		MessageChat(aIndex, g_ZtText.GetText(249), Plus2WizardDamageProcent);

  0014a	8b 57 2c	 mov	 edx, DWORD PTR [edi+44]
  0014d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00150	52		 push	 edx
  00151	68 f9 00 00 00	 push	 249			; 000000f9H
  00156	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0015b	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00160	50		 push	 eax
  00161	56		 push	 esi
  00162	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 674  : 		MessageChat(aIndex, g_ZtText.GetText(250), Plus2DefenceProcent);

  00167	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0016a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016d	50		 push	 eax
  0016e	e9 81 00 00 00	 jmp	 $LN16@InfoMessag
$LN3@InfoMessag:

; 675  : 	}
; 676  : 	else if(lpUser->PremiumTimeType == eVip3)

  00173	83 f8 03	 cmp	 eax, 3
  00176	0f 85 91 00 00
	00		 jne	 $LN1@InfoMessag

; 677  : 	{
; 678  : 		MessageChat(aIndex, g_ZtText.GetText(246), Plus3ExpProcent);

  0017c	8b 4f 34	 mov	 ecx, DWORD PTR [edi+52]
  0017f	51		 push	 ecx
  00180	68 f6 00 00 00	 push	 246			; 000000f6H
  00185	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0018a	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0018f	50		 push	 eax
  00190	56		 push	 esi
  00191	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 679  : 		MessageChat(aIndex, g_ZtText.GetText(247), Plus3DropZenProcent);

  00196	8b 57 38	 mov	 edx, DWORD PTR [edi+56]
  00199	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019c	52		 push	 edx
  0019d	68 f7 00 00 00	 push	 247			; 000000f7H
  001a2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  001a7	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  001ac	50		 push	 eax
  001ad	56		 push	 esi
  001ae	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 680  : 		MessageChat(aIndex, g_ZtText.GetText(248), Plus3DamageProcent);

  001b3	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  001b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b9	50		 push	 eax
  001ba	68 f8 00 00 00	 push	 248			; 000000f8H
  001bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  001c4	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  001c9	50		 push	 eax
  001ca	56		 push	 esi
  001cb	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 681  : 		MessageChat(aIndex, g_ZtText.GetText(249), Plus3WizardDamageProcent);

  001d0	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  001d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d6	51		 push	 ecx
  001d7	68 f9 00 00 00	 push	 249			; 000000f9H
  001dc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  001e1	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  001e6	50		 push	 eax
  001e7	56		 push	 esi
  001e8	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat

; 682  : 		MessageChat(aIndex, g_ZtText.GetText(250), Plus3DefenceProcent);

  001ed	8b 57 40	 mov	 edx, DWORD PTR [edi+64]
  001f0	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f3	52		 push	 edx
$LN16@InfoMessag:
  001f4	68 fa 00 00 00	 push	 250			; 000000faH
  001f9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  001fe	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00203	50		 push	 eax
  00204	56		 push	 esi
  00205	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  0020a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@InfoMessag:

; 683  : 	}
; 684  : 
; 685  : 	MessageChat(aIndex,g_ZtText.GetText(251),(lpUser->PremiumTime/60));

  0020d	8b 9b b8 22 00
	00		 mov	 ebx, DWORD PTR [ebx+8888]
  00213	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00218	f7 eb		 imul	 ebx
  0021a	03 d3		 add	 edx, ebx
  0021c	c1 fa 05	 sar	 edx, 5
  0021f	8b c2		 mov	 eax, edx
  00221	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00224	03 c2		 add	 eax, edx
  00226	50		 push	 eax
  00227	68 fb 00 00 00	 push	 251			; 000000fbH
  0022c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00231	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00236	50		 push	 eax
  00237	56		 push	 esi
  00238	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  0023d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 686  : 
; 687  : 	this->UserBuff(aIndex);

  00240	56		 push	 esi
  00241	8b cf		 mov	 ecx, edi
  00243	e8 00 00 00 00	 call	 ?UserBuff@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::UserBuff
$LN15@InfoMessag:
  00248	5b		 pop	 ebx
  00249	5f		 pop	 edi
  0024a	5e		 pop	 esi

; 688  : }

  0024b	5d		 pop	 ebp
  0024c	c2 04 00	 ret	 4
?InfoMessage@PremiumSystemZt@@QAEXH@Z ENDP		; PremiumSystemZt::InfoMessage
_TEXT	ENDS
PUBLIC	?UserConnect@PremiumSystemZt@@QAEXH@Z		; PremiumSystemZt::UserConnect
; Function compile flags: /Ogtp
;	COMDAT ?UserConnect@PremiumSystemZt@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?UserConnect@PremiumSystemZt@@QAEXH@Z PROC		; PremiumSystemZt::UserConnect, COMDAT
; _this$ = ecx

; 356  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 357  : 	if(!this->ActiveSystem)

  00003	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00006	74 5e		 je	 SHORT $LN1@UserConnec

; 358  : 	{
; 359  : 		return;
; 360  : 	}
; 361  : 
; 362  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00008	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0000b	85 d2		 test	 edx, edx
  0000d	78 0f		 js	 SHORT $LN10@UserConnec
  0000f	33 c0		 xor	 eax, eax
  00011	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  00017	0f 9e c0	 setle	 al
  0001a	85 c0		 test	 eax, eax
  0001c	75 1c		 jne	 SHORT $LN4@UserConnec
$LN10@UserConnec:

; 363  : 	{
; 364  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  0001e	68 6c 01 00 00	 push	 364			; 0000016cH
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 394  : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN4@UserConnec:

; 365  : 		return;
; 366  : 	}
; 367  : 
; 368  : 	LPOBJ lpUser = &gObj[aIndex];

  0003a	8b c2		 mov	 eax, edx
  0003c	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00042	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 369  : 
; 370  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00048	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0004c	7c 18		 jl	 SHORT $LN1@UserConnec

; 371  : 	{
; 372  : 		return;
; 373  : 	}
; 374  : 
; 375  : 	if(lpUser->PremiumTimeType <= 0 || lpUser->PremiumTime <= 0)

  0004e	83 b8 bc 22 00
	00 00		 cmp	 DWORD PTR [eax+8892], 0
  00055	7e 0f		 jle	 SHORT $LN1@UserConnec
  00057	83 b8 b8 22 00
	00 00		 cmp	 DWORD PTR [eax+8888], 0
  0005e	7e 06		 jle	 SHORT $LN1@UserConnec

; 376  : 	{
; 377  : 		return;
; 378  : 	}
; 379  : 
; 380  : 	/*if(lpUser->PremiumTimeType == eVip1)
; 381  : 	{
; 382  : 		g_BuffManagerEx.AddZtBuffData(aIndex, AT_VIP_SILVER, lpUser->PremiumTime);
; 383  : 	}
; 384  : 	else if(lpUser->PremiumTimeType == eVip2)
; 385  : 	{
; 386  : 		g_BuffManagerEx.AddZtBuffData(aIndex, AT_VIP_GOLD, lpUser->PremiumTime);
; 387  : 	}
; 388  : 	else if(lpUser->PremiumTimeType == eVip3)
; 389  : 	{
; 390  : 		g_BuffManagerEx.AddZtBuffData(aIndex, AT_VIP_PLATINUM, lpUser->PremiumTime);
; 391  : 	}*/
; 392  : 
; 393  : 	this->InfoMessage(aIndex);

  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 ?InfoMessage@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::InfoMessage
$LN1@UserConnec:

; 394  : }

  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
?UserConnect@PremiumSystemZt@@QAEXH@Z ENDP		; PremiumSystemZt::UserConnect
_TEXT	ENDS
PUBLIC	?CG_RecvBuy@PremiumSystemZt@@QAEXHPAUCG_PREMIUM_BUY@@@Z ; PremiumSystemZt::CG_RecvBuy
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
; Function compile flags: /Ogtp
;	COMDAT ?CG_RecvBuy@PremiumSystemZt@@QAEXHPAUCG_PREMIUM_BUY@@@Z
_TEXT	SEGMENT
_iPriceType$ = -12					; size = 4
_this$ = -8						; size = 4
_NeedWCoin$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_NeedCredit$ = 12					; size = 4
_Recv$ = 12						; size = 4
?CG_RecvBuy@PremiumSystemZt@@QAEXHPAUCG_PREMIUM_BUY@@@Z PROC ; PremiumSystemZt::CG_RecvBuy, COMDAT
; _this$ = ecx

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 438  : 	if(!this->ActiveSystem)

  00006	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00009	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f 84 cc 02 00
	00		 je	 $LN30@CG_RecvBuy

; 439  : 	{
; 440  : 		return;
; 441  : 	}
; 442  : 
; 443  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00012	56		 push	 esi
  00013	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  00016	33 d2		 xor	 edx, edx
  00018	3b f2		 cmp	 esi, edx
  0001a	7c 0f		 jl	 SHORT $LN41@CG_RecvBuy
  0001c	33 c0		 xor	 eax, eax
  0001e	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  00024	0f 9e c0	 setle	 al
  00027	3b c2		 cmp	 eax, edx
  00029	75 1f		 jne	 SHORT $LN35@CG_RecvBuy
$LN41@CG_RecvBuy:

; 444  : 	{
; 445  : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  0002b	68 bd 01 00 00	 push	 445			; 000001bdH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCKDCMGK@PremiumSystemZt?4cpp?$AA@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	5e		 pop	 esi

; 596  : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
$LN35@CG_RecvBuy:

; 446  : 		return;
; 447  : 	}
; 448  : 
; 449  : 	LPOBJ lpUser = &gObj[aIndex];

  0004a	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00050	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 450  : 
; 451  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00056	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  0005a	0f 8c 7d 02 00
	00		 jl	 $LN46@CG_RecvBuy

; 452  : 	{
; 453  : 		return;
; 454  : 	}
; 455  : 
; 456  : 	int NeedCredit = 0;
; 457  : 	int iPremiumType = Recv->PremiumType;

  00060	53		 push	 ebx
  00061	8b 5d 0c	 mov	 ebx, DWORD PTR _Recv$[ebp]

; 458  : 	int iPremiumDay = Recv->PremiumDay;

  00064	0f b7 43 06	 movzx	 eax, WORD PTR [ebx+6]
  00068	57		 push	 edi
  00069	0f b6 7b 04	 movzx	 edi, BYTE PTR [ebx+4]

; 459  : 
; 460  : 	int NeedWCoin = 0;

  0006d	89 55 fc	 mov	 DWORD PTR _NeedWCoin$[ebp], edx

; 461  : 	int iPriceType = 0;

  00070	89 55 f4	 mov	 DWORD PTR _iPriceType$[ebp], edx

; 462  : 
; 463  : 	if(iPremiumType < 1 || iPremiumType > 3)

  00073	8d 57 ff	 lea	 edx, DWORD PTR [edi-1]
  00076	83 fa 02	 cmp	 edx, 2
  00079	0f 87 5c 02 00
	00		 ja	 $LN47@CG_RecvBuy

; 464  : 	{
; 465  : 		return;
; 466  : 	}
; 467  : 
; 468  : 	if(iPremiumDay <= 0 || iPremiumDay > 100)

  0007f	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  00082	83 fa 63	 cmp	 edx, 99			; 00000063H
  00085	0f 87 50 02 00
	00		 ja	 $LN47@CG_RecvBuy

; 469  : 	{
; 470  : 		return;
; 471  : 	}
; 472  : 
; 473  : 	if(iPremiumType == eVip1)

  0008b	83 ff 01	 cmp	 edi, 1
  0008e	75 05		 jne	 SHORT $LN29@CG_RecvBuy

; 474  : 	{
; 475  : 		NeedCredit = this->Buy1CreditDay * Recv->PremiumDay;

  00090	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00093	eb 13		 jmp	 SHORT $LN49@CG_RecvBuy
$LN29@CG_RecvBuy:

; 476  : 	}
; 477  : 	else if(iPremiumType == eVip2)

  00095	83 ff 02	 cmp	 edi, 2
  00098	75 0b		 jne	 SHORT $LN27@CG_RecvBuy

; 478  : 	{
; 479  : 		NeedCredit = this->Buy2CreditDay * Recv->PremiumDay;

  0009a	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0009d	0f af d0	 imul	 edx, eax
  000a0	89 55 0c	 mov	 DWORD PTR _NeedCredit$[ebp], edx

; 480  : 	}	
; 481  : 	else

  000a3	eb 09		 jmp	 SHORT $LN26@CG_RecvBuy
$LN27@CG_RecvBuy:

; 482  : 	{
; 483  : 		NeedCredit = this->Buy3CreditDay * Recv->PremiumDay;

  000a5	8b 49 48	 mov	 ecx, DWORD PTR [ecx+72]
$LN49@CG_RecvBuy:
  000a8	0f af c8	 imul	 ecx, eax
  000ab	89 4d 0c	 mov	 DWORD PTR _NeedCredit$[ebp], ecx
$LN26@CG_RecvBuy:

; 484  : 	}
; 485  : 
; 486  : 	if(g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  000ae	6a 20		 push	 32			; 00000020H
  000b0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000b5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000ba	84 c0		 test	 al, al
  000bc	75 20		 jne	 SHORT $LN24@CG_RecvBuy
  000be	6a 21		 push	 33			; 00000021H
  000c0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000c5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000ca	84 c0		 test	 al, al
  000cc	75 10		 jne	 SHORT $LN24@CG_RecvBuy
  000ce	6a 22		 push	 34			; 00000022H
  000d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  000d5	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  000da	84 c0		 test	 al, al
  000dc	74 33		 je	 SHORT $LN42@CG_RecvBuy
$LN24@CG_RecvBuy:

; 487  : 	{
; 488  : 		iPriceType = Recv->PriceType;

  000de	0f b6 4b 08	 movzx	 ecx, BYTE PTR [ebx+8]

; 489  : 
; 490  : 		if(iPremiumType == eVip1)
; 491  : 		{
; 492  : 			NeedWCoin = this->Buy1WCoinDay * Recv->PremiumDay;

  000e2	0f b7 53 06	 movzx	 edx, WORD PTR [ebx+6]
  000e6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	89 4d f4	 mov	 DWORD PTR _iPriceType$[ebp], ecx
  000ec	83 ff 01	 cmp	 edi, 1
  000ef	75 06		 jne	 SHORT $LN23@CG_RecvBuy
  000f1	0f af 50 54	 imul	 edx, DWORD PTR [eax+84]
  000f5	eb 0f		 jmp	 SHORT $LN50@CG_RecvBuy
$LN23@CG_RecvBuy:

; 493  : 		}
; 494  : 		else if(iPremiumType == eVip2)

  000f7	83 ff 02	 cmp	 edi, 2
  000fa	75 06		 jne	 SHORT $LN21@CG_RecvBuy

; 495  : 		{
; 496  : 			NeedWCoin = this->Buy2WCoinDay * Recv->PremiumDay;

  000fc	0f af 50 58	 imul	 edx, DWORD PTR [eax+88]

; 497  : 		}	
; 498  : 		else

  00100	eb 04		 jmp	 SHORT $LN50@CG_RecvBuy
$LN21@CG_RecvBuy:

; 499  : 		{
; 500  : 			NeedWCoin = this->Buy3WCoinDay * Recv->PremiumDay;

  00102	0f af 50 5c	 imul	 edx, DWORD PTR [eax+92]
$LN50@CG_RecvBuy:
  00106	89 55 fc	 mov	 DWORD PTR _NeedWCoin$[ebp], edx

; 501  : 		}
; 502  : 	}
; 503  : 
; 504  : 	if(iPriceType == 0)

  00109	85 c9		 test	 ecx, ecx
  0010b	0f 85 49 01 00
	00		 jne	 $LN19@CG_RecvBuy
$LN42@CG_RecvBuy:

; 505  : 	{
; 506  : 		if(g_ZtLicense.CheckUser(eZtUB::Artem) || g_ZtLicense.CheckUser(eZtUB::Artem2) || g_ZtLicense.CheckUser(eZtUB::Chebuk))

  00111	6a 30		 push	 48			; 00000030H
  00113	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00118	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0011d	84 c0		 test	 al, al
  0011f	0f 85 1c 01 00
	00		 jne	 $LN17@CG_RecvBuy
  00125	6a 31		 push	 49			; 00000031H
  00127	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0012c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00131	84 c0		 test	 al, al
  00133	0f 85 08 01 00
	00		 jne	 $LN17@CG_RecvBuy
  00139	6a 56		 push	 86			; 00000056H
  0013b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00140	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00145	84 c0		 test	 al, al
  00147	0f 85 f4 00 00
	00		 jne	 $LN17@CG_RecvBuy

; 509  : 			{
; 510  : 				return;
; 511  : 			}
; 512  : 		}
; 513  : 		else
; 514  : 		{
; 515  : 			if(NeedCredit > lpUser->ZtCred)

  0014d	db 45 0c	 fild	 DWORD PTR _NeedCredit$[ebp]
  00150	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  00156	de d9		 fcompp
  00158	df e0		 fnstsw	 ax
  0015a	f6 c4 05	 test	 ah, 5
  0015d	0f 8b 78 01 00
	00		 jnp	 $LN47@CG_RecvBuy

; 516  : 			{
; 517  : 				return;
; 518  : 			}
; 519  : 
; 520  : 			if(g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  00163	6a 20		 push	 32			; 00000020H
  00165	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0016a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0016f	84 c0		 test	 al, al
  00171	75 20		 jne	 SHORT $LN12@CG_RecvBuy
  00173	6a 21		 push	 33			; 00000021H
  00175	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0017a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0017f	84 c0		 test	 al, al
  00181	75 10		 jne	 SHORT $LN12@CG_RecvBuy
  00183	6a 22		 push	 34			; 00000022H
  00185	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0018a	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0018f	84 c0		 test	 al, al
  00191	74 14		 je	 SHORT $LN43@CG_RecvBuy
$LN12@CG_RecvBuy:

; 521  : 			{
; 522  : 				if(NeedWCoin > lpUser->GameShop.WCoinC)

  00193	db 45 fc	 fild	 DWORD PTR _NeedWCoin$[ebp]
  00196	dc 9e 00 23 00
	00		 fcomp	 QWORD PTR [esi+8960]
  0019c	df e0		 fnstsw	 ax
  0019e	f6 c4 41	 test	 ah, 65			; 00000041H
  001a1	0f 84 34 01 00
	00		 je	 $LN47@CG_RecvBuy
$LN43@CG_RecvBuy:

; 523  : 				{
; 524  : 					return;
; 525  : 				}
; 526  : 			}
; 527  : 		}

  001a7	8b 4d f4	 mov	 ecx, DWORD PTR _iPriceType$[ebp]
$LN8@CG_RecvBuy:

; 532  : 		{
; 533  : 			return;
; 534  : 		}
; 535  : 	}
; 536  : 
; 537  : 	if(iPremiumType != lpUser->PremiumTimeType)

  001aa	3b be bc 22 00
	00		 cmp	 edi, DWORD PTR [esi+8892]
  001b0	74 0e		 je	 SHORT $LN45@CG_RecvBuy

; 538  : 	{
; 539  : 		/*if(lpUser->PremiumTimeType == eVip1)
; 540  : 		{
; 541  : 			g_BuffManagerEx.DeleteZtBuffData(aIndex, AT_VIP_SILVER);
; 542  : 		}
; 543  : 		else if(lpUser->PremiumTimeType == eVip2)
; 544  : 		{
; 545  : 			g_BuffManagerEx.DeleteZtBuffData(aIndex, AT_VIP_GOLD);
; 546  : 		}
; 547  : 		else if(lpUser->PremiumTimeType == eVip3)
; 548  : 		{
; 549  : 			g_BuffManagerEx.DeleteZtBuffData(aIndex, AT_VIP_PLATINUM);
; 550  : 		}*/
; 551  : 
; 552  : 		lpUser->PremiumTimeType = 0;

  001b2	33 c0		 xor	 eax, eax
  001b4	89 86 bc 22 00
	00		 mov	 DWORD PTR [esi+8892], eax

; 553  : 		lpUser->PremiumTime = 0;

  001ba	89 86 b8 22 00
	00		 mov	 DWORD PTR [esi+8888], eax
$LN45@CG_RecvBuy:

; 554  : 	}
; 555  : 
; 556  : 	if(iPriceType == 0)

  001c0	85 c9		 test	 ecx, ecx
  001c2	0f 85 b9 00 00
	00		 jne	 $LN6@CG_RecvBuy

; 557  : 	{
; 558  : 		if(g_ZtLicense.CheckUser(eZtUB::Artem) || g_ZtLicense.CheckUser(eZtUB::Artem2) || g_ZtLicense.CheckUser(eZtUB::Chebuk) ||
; 559  : 			g_ZtLicense.CheckUser(eZtUB::Gredy) || g_ZtLicense.CheckUser(eZtUB::GredyLocal) || g_ZtLicense.CheckUser(eZtUB::Gredy2))

  001c8	6a 30		 push	 48			; 00000030H
  001ca	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001cf	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001d4	84 c0		 test	 al, al
  001d6	0f 85 9c 00 00
	00		 jne	 $LN4@CG_RecvBuy
  001dc	6a 31		 push	 49			; 00000031H
  001de	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001e3	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001e8	84 c0		 test	 al, al
  001ea	0f 85 88 00 00
	00		 jne	 $LN4@CG_RecvBuy
  001f0	6a 56		 push	 86			; 00000056H
  001f2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001f7	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001fc	84 c0		 test	 al, al
  001fe	75 78		 jne	 SHORT $LN4@CG_RecvBuy
  00200	6a 20		 push	 32			; 00000020H
  00202	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00207	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0020c	84 c0		 test	 al, al
  0020e	75 68		 jne	 SHORT $LN4@CG_RecvBuy
  00210	6a 21		 push	 33			; 00000021H
  00212	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00217	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0021c	84 c0		 test	 al, al
  0021e	75 58		 jne	 SHORT $LN4@CG_RecvBuy
  00220	6a 22		 push	 34			; 00000022H
  00222	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00227	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0022c	84 c0		 test	 al, al
  0022e	75 48		 jne	 SHORT $LN4@CG_RecvBuy

; 563  : 		}
; 564  : 		else
; 565  : 		{
; 566  : 			lpUser->ZtCred -= NeedCredit;

  00230	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  00236	da 65 0c	 fisub	 DWORD PTR _NeedCredit$[ebp]
  00239	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  0023f	eb 62		 jmp	 SHORT $LN44@CG_RecvBuy
$LN17@CG_RecvBuy:

; 507  : 		{
; 508  : 			if(NeedCredit >  lpUser->GameShop.WCoinC)

  00241	db 45 0c	 fild	 DWORD PTR _NeedCredit$[ebp]
  00244	dc 9e 00 23 00
	00		 fcomp	 QWORD PTR [esi+8960]
  0024a	df e0		 fnstsw	 ax
  0024c	f6 c4 41	 test	 ah, 65			; 00000041H
  0024f	0f 84 86 00 00
	00		 je	 $LN47@CG_RecvBuy

; 523  : 				{
; 524  : 					return;
; 525  : 				}
; 526  : 			}
; 527  : 		}

  00255	e9 4d ff ff ff	 jmp	 $LN43@CG_RecvBuy
$LN19@CG_RecvBuy:

; 528  : 	}
; 529  : 	else if(iPriceType == 1)

  0025a	83 f9 01	 cmp	 ecx, 1
  0025d	0f 85 47 ff ff
	ff		 jne	 $LN8@CG_RecvBuy

; 530  : 	{
; 531  : 		if(NeedWCoin > lpUser->GameShop.WCoinC)

  00263	db 45 fc	 fild	 DWORD PTR _NeedWCoin$[ebp]
  00266	dc 9e 00 23 00
	00		 fcomp	 QWORD PTR [esi+8960]
  0026c	df e0		 fnstsw	 ax
  0026e	f6 c4 41	 test	 ah, 65			; 00000041H
  00271	74 68		 je	 SHORT $LN47@CG_RecvBuy
  00273	e9 32 ff ff ff	 jmp	 $LN8@CG_RecvBuy
$LN4@CG_RecvBuy:

; 560  : 		{
; 561  : 			lpUser->GameShop.WCoinC -= NeedCredit;
; 562  : 			gGameShop.GDSaveUserInfo(aIndex);

  00278	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0027b	db 45 0c	 fild	 DWORD PTR _NeedCredit$[ebp]
  0027e	51		 push	 ecx

; 567  : 		}

  0027f	eb 0c		 jmp	 SHORT $LN51@CG_RecvBuy
$LN6@CG_RecvBuy:

; 568  : 	}
; 569  : 	else if(iPriceType == 1)

  00281	83 f9 01	 cmp	 ecx, 1
  00284	75 1d		 jne	 SHORT $LN44@CG_RecvBuy

; 570  : 	{
; 571  : 		lpUser->GameShop.WCoinC -= NeedWCoin;
; 572  : 		gGameShop.GDSaveUserInfo(aIndex);

  00286	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00289	db 45 fc	 fild	 DWORD PTR _NeedWCoin$[ebp]
  0028c	52		 push	 edx
$LN51@CG_RecvBuy:
  0028d	dc ae 00 23 00
	00		 fsubr	 QWORD PTR [esi+8960]
  00293	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00298	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]
  0029e	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN44@CG_RecvBuy:

; 573  : 	}
; 574  : 
; 575  : 	lpUser->PremiumTimeType = Recv->PremiumType;

  002a3	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
  002a7	89 86 bc 22 00
	00		 mov	 DWORD PTR [esi+8892], eax

; 576  : 	lpUser->PremiumTime += Recv->PremiumDay * 86400;

  002ad	0f b7 4b 06	 movzx	 ecx, WORD PTR [ebx+6]
  002b1	69 c9 80 51 01
	00		 imul	 ecx, 86400		; 00015180H
  002b7	01 8e b8 22 00
	00		 add	 DWORD PTR [esi+8888], ecx

; 577  : 
; 578  : 	/*if(lpUser->PremiumType == eVip1)
; 579  : 	{
; 580  : 		g_BuffManagerEx.AddZtBuffData(aIndex, AT_VIP_SILVER, lpUser->PremiumTime);
; 581  : 	}
; 582  : 	else if(lpUser->PremiumType == eVip2)
; 583  : 	{
; 584  : 		g_BuffManagerEx.AddZtBuffData(aIndex, AT_VIP_GOLD, lpUser->PremiumTime);
; 585  : 	}
; 586  : 	else if(lpUser->PremiumType == eVip3)
; 587  : 	{
; 588  : 		g_BuffManagerEx.AddZtBuffData(aIndex, AT_VIP_PLATINUM, lpUser->PremiumTime);
; 589  : 	}*/
; 590  : 
; 591  : 	this->InfoMessage(aIndex);

  002bd	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  002c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c3	56		 push	 esi
  002c4	e8 00 00 00 00	 call	 ?InfoMessage@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::InfoMessage

; 592  : 
; 593  : 	ZtUserDataSend(aIndex);

  002c9	56		 push	 esi
  002ca	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 594  : 
; 595  : 	this->UserBuff(aIndex);

  002cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d2	83 c4 04	 add	 esp, 4
  002d5	56		 push	 esi
  002d6	e8 00 00 00 00	 call	 ?UserBuff@PremiumSystemZt@@QAEXH@Z ; PremiumSystemZt::UserBuff
$LN47@CG_RecvBuy:
  002db	5f		 pop	 edi
  002dc	5b		 pop	 ebx
$LN46@CG_RecvBuy:
  002dd	5e		 pop	 esi
$LN30@CG_RecvBuy:

; 596  : }

  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c2 08 00	 ret	 8
?CG_RecvBuy@PremiumSystemZt@@QAEXHPAUCG_PREMIUM_BUY@@@Z ENDP ; PremiumSystemZt::CG_RecvBuy
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_PremiumSystemZt@@YAXXZ
text$yc	SEGMENT
??__Eg_PremiumSystemZt@@YAXXZ PROC			; `dynamic initializer for 'g_PremiumSystemZt'', COMDAT

; 18   : PremiumSystemZt g_PremiumSystemZt;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PremiumSystemZt@@3VPremiumSystemZt@@A ; g_PremiumSystemZt
  00005	e8 00 00 00 00	 call	 ??0PremiumSystemZt@@QAE@XZ ; PremiumSystemZt::PremiumSystemZt
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_PremiumSystemZt@@YAXXZ ; `dynamic atexit destructor for 'g_PremiumSystemZt''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_PremiumSystemZt@@YAXXZ ENDP			; `dynamic initializer for 'g_PremiumSystemZt''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_PremiumSystemZt@@YAXXZ
text$yd	SEGMENT
??__Fg_PremiumSystemZt@@YAXXZ PROC			; `dynamic atexit destructor for 'g_PremiumSystemZt'', COMDAT
  00000	c3		 ret	 0
??__Fg_PremiumSystemZt@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_PremiumSystemZt''
text$yd	ENDS
PUBLIC	?g_PremiumSystemZt@@3VPremiumSystemZt@@A	; g_PremiumSystemZt
_BSS	SEGMENT
?g_PremiumSystemZt@@3VPremiumSystemZt@@A DB 064H DUP (?) ; g_PremiumSystemZt
_BSS	ENDS
CRT$XCU	SEGMENT
_g_PremiumSystemZt$initializer$ DD FLAT:??__Eg_PremiumSystemZt@@YAXXZ
CRT$XCU	ENDS
END
