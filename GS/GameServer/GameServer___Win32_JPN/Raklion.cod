; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\Raklion.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_iUseRaklionEvent@@3HA			; g_iUseRaklionEvent
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
?g_iUseRaklionEvent@@3HA DD 01H				; g_iUseRaklionEvent
_DATA	ENDS
PUBLIC	?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetBattleOfSelupanState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\raklionbattleofselupan.h
;	COMDAT ?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z
_TEXT	SEGMENT
_m_iBattleOfSelupanState$ = 8				; size = 4
?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z PROC ; CRaklionBattleOfSelupan::SetBattleOfSelupanState, COMDAT
; _this$ = ecx

; 95   : 	void SetBattleOfSelupanState	(int m_iBattleOfSelupanState)	{			this->m_iBattleOfSelupanState	= m_iBattleOfSelupanState;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _m_iBattleOfSelupanState$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z ENDP ; CRaklionBattleOfSelupan::SetBattleOfSelupanState
_TEXT	ENDS
PUBLIC	?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
; Function compile flags: /Ogtp
;	COMDAT ?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ
_TEXT	SEGMENT
?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ PROC ; CRaklionBattleOfSelupan::GetBattleOfSelupanState, COMDAT
; _this$ = ecx

; 96   : 	int GetBattleOfSelupanState		(							)	{	return	this->m_iBattleOfSelupanState;								}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ENDP ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
_TEXT	ENDS
PUBLIC	?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z
_TEXT	SEGMENT
_bIsSuccess$ = 8					; size = 4
?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z PROC	; CRaklionBattleOfSelupan::SetSuccessValue, COMDAT
; _this$ = ecx

; 97   : 	void SetSuccessValue			(BOOL bIsSuccess)				{			this->m_bIsSucccess				= bIsSuccess;				}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _bIsSuccess$[ebp]
  00006	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ENDP	; CRaklionBattleOfSelupan::SetSuccessValue
_TEXT	ENDS
PUBLIC	?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ
_TEXT	SEGMENT
?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ PROC	; CRaklionBattleOfSelupan::GetSuccessValue, COMDAT
; _this$ = ecx

; 98   : 	BOOL GetSuccessValue			(							)	{	return	this->m_bIsSucccess;										}

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	c3		 ret	 0
?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ ENDP	; CRaklionBattleOfSelupan::GetSuccessValue
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
EXTRN	__localtime64:PROC
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
;	COMDAT _localtime
_TEXT	SEGMENT
_localtime PROC						; COMDAT
; __Time$ = eax

; 114  : #pragma warning( push )
; 115  : #pragma warning( disable : 4996 )
; 116  :     return _localtime64(_Time);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 __localtime64
  00006	83 c4 04	 add	 esp, 4

; 117  : #pragma warning( pop )
; 118  : }

  00009	c3		 ret	 0
_localtime ENDP
_TEXT	ENDS
EXTRN	__time64:PROC
; Function compile flags: /Ogtp
;	COMDAT _time
_TEXT	SEGMENT
_time	PROC						; COMDAT
; __Time$ = eax

; 133  :     return _time64(_Time);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 __time64
  00006	83 c4 04	 add	 esp, 4

; 134  : }

  00009	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 64		 je	 SHORT $LN39@GetToken

; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 31		 jne	 SHORT $LN30@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 1b		 jne	 SHORT $LN30@GetToken
$LL24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	80 fb ff	 cmp	 bl, -1
  00053	74 44		 je	 SHORT $LN39@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _fgetc
  00061	8a d8		 mov	 bl, al
  00063	83 c4 04	 add	 esp, 4
  00066	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00069	75 e5		 jne	 SHORT $LL24@GetToken
$LN30@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE
; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006b	0f be c3	 movsx	 eax, bl
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _isspace
  00074	83 c4 04	 add	 esp, 4
  00077	85 c0		 test	 eax, eax
  00079	75 a5		 jne	 SHORT $LL31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  0007b	0f be c3	 movsx	 eax, bl
  0007e	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  00081	56		 push	 esi
  00082	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00085	0f 87 2b 01 00
	00		 ja	 $LN6@GetToken
  0008b	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN46@GetToken[ecx]
  00092	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN50@GetToken[ecx*4]
$LN39@GetToken:

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00099	b8 02 00 00 00	 mov	 eax, 2
  0009e	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a2	33 cd		 xor	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000ad	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b2	e9 99 01 00 00	 jmp	 $LN48@GetToken
$LN18@GetToken:

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000b7	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000bc	e9 8f 01 00 00	 jmp	 $LN48@GetToken
$LN17@GetToken:

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000c1	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000c6	e9 85 01 00 00	 jmp	 $LN48@GetToken
$LN16@GetToken:

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  000cb	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  000d0	e9 7b 01 00 00	 jmp	 $LN48@GetToken
$LN15@GetToken:

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  000d5	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  000da	e9 71 01 00 00	 jmp	 $LN48@GetToken
$LN14@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000f1	50		 push	 eax
  000f2	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  000f5	e8 00 00 00 00	 call	 _getc
  000fa	8a d8		 mov	 bl, al
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	80 fb ff	 cmp	 bl, -1
  00102	74 33		 je	 SHORT $LN12@GetToken
$LL13@GetToken:
  00104	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00107	74 15		 je	 SHORT $LN11@GetToken
  00109	0f be cb	 movsx	 ecx, bl
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _isdigit
  00112	83 c4 04	 add	 esp, 4
  00115	85 c0		 test	 eax, eax
  00117	75 05		 jne	 SHORT $LN11@GetToken
  00119	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  0011c	75 19		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00124	88 1e		 mov	 BYTE PTR [esi], bl
  00126	52		 push	 edx

; 102  : 			p++;

  00127	46		 inc	 esi
  00128	e8 00 00 00 00	 call	 _getc
  0012d	8a d8		 mov	 bl, al
  0012f	83 c4 04	 add	 esp, 4
  00132	80 fb ff	 cmp	 bl, -1
  00135	75 cd		 jne	 SHORT $LL13@GetToken
$LN12@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00137	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  0013a	50		 push	 eax
  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	e8 00 00 00 00	 call	 _atof
  00143	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  00149	83 c4 04	 add	 esp, 4
  0014c	5e		 pop	 esi

; 106  : 		return CurrentToken  = NUMBER ;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00157	b8 01 00 00 00	 mov	 eax, 1
  0015c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0015d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00171	51		 push	 ecx
  00172	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  00177	e8 00 00 00 00	 call	 _getc
  0017c	83 c4 04	 add	 esp, 4
  0017f	3c ff		 cmp	 al, -1
  00181	74 1e		 je	 SHORT $LN8@GetToken
$LL9@GetToken:
  00183	3c 22		 cmp	 al, 34			; 00000022H
  00185	0f 84 a1 00 00
	00		 je	 $LN7@GetToken
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 113  : 		{
; 114  : 			*p = ch;

  00191	88 06		 mov	 BYTE PTR [esi], al
  00193	52		 push	 edx

; 115  : 			p++;

  00194	46		 inc	 esi
  00195	e8 00 00 00 00	 call	 _getc
  0019a	83 c4 04	 add	 esp, 4
  0019d	3c ff		 cmp	 al, -1
  0019f	75 e2		 jne	 SHORT $LL9@GetToken
$LN8@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001a1	3c 22		 cmp	 al, 34			; 00000022H
  001a3	0f 84 83 00 00
	00		 je	 $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  001af	0f be d0	 movsx	 edx, al
  001b2	51		 push	 ecx
  001b3	52		 push	 edx

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  001b4	eb 6e		 jmp	 SHORT $LN49@GetToken
$LN6@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _isalpha
  001bc	83 c4 04	 add	 esp, 4
  001bf	85 c0		 test	 eax, eax
  001c1	0f 84 84 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  001d3	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  001d8	e8 00 00 00 00	 call	 _getc
  001dd	8a d8		 mov	 bl, al
  001df	83 c4 04	 add	 esp, 4
  001e2	80 fb ff	 cmp	 bl, -1
  001e5	74 33		 je	 SHORT $LN3@GetToken
$LL4@GetToken:
  001e7	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  001ea	74 15		 je	 SHORT $LN2@GetToken
  001ec	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  001ef	74 10		 je	 SHORT $LN2@GetToken
  001f1	0f be cb	 movsx	 ecx, bl
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 _isalnum
  001fa	83 c4 04	 add	 esp, 4
  001fd	85 c0		 test	 eax, eax
  001ff	74 19		 je	 SHORT $LN3@GetToken
$LN2@GetToken:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 133  : 			{
; 134  : 				*p=ch;

  00207	88 1e		 mov	 BYTE PTR [esi], bl
  00209	52		 push	 edx

; 135  : 				p++;

  0020a	46		 inc	 esi
  0020b	e8 00 00 00 00	 call	 _getc
  00210	8a d8		 mov	 bl, al
  00212	83 c4 04	 add	 esp, 4
  00215	80 fb ff	 cmp	 bl, -1
  00218	75 cd		 jne	 SHORT $LL4@GetToken
$LN3@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0021f	0f be cb	 movsx	 ecx, bl
  00222	50		 push	 eax
  00223	51		 push	 ecx
$LN49@GetToken:
  00224	e8 00 00 00 00	 call	 _ungetc
  00229	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 140  : 			*p=0;

  0022c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0022f	5e		 pop	 esi

; 141  : 			CurrentToken=NAME;

  00230	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0023a	33 c0		 xor	 eax, eax
  0023c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0023d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00240	33 cd		 xor	 ecx, ebp
  00242	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN5@GetToken:

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  0024b	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN48@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00250	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  0025b	5b		 pop	 ebx
  0025c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
  00265	8d 49 00	 npad	 3
$LN50@GetToken:
  00268	00 00 00 00	 DD	 $LN10@GetToken
  0026c	00 00 00 00	 DD	 $LN19@GetToken
  00270	00 00 00 00	 DD	 $LN17@GetToken
  00274	00 00 00 00	 DD	 $LN14@GetToken
  00278	00 00 00 00	 DD	 $LN18@GetToken
  0027c	00 00 00 00	 DD	 $LN16@GetToken
  00280	00 00 00 00	 DD	 $LN15@GetToken
  00284	00 00 00 00	 DD	 $LN6@GetToken
$LN46@GetToken:
  00288	00		 DB	 0
  00289	01		 DB	 1
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	02		 DB	 2
  00293	03		 DB	 3
  00294	03		 DB	 3
  00295	07		 DB	 7
  00296	03		 DB	 3
  00297	03		 DB	 3
  00298	03		 DB	 3
  00299	03		 DB	 3
  0029a	03		 DB	 3
  0029b	03		 DB	 3
  0029c	03		 DB	 3
  0029d	03		 DB	 3
  0029e	03		 DB	 3
  0029f	03		 DB	 3
  002a0	07		 DB	 7
  002a1	04		 DB	 4
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	07		 DB	 7
  002ad	07		 DB	 7
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	07		 DB	 7
  002b1	07		 DB	 7
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	07		 DB	 7
  002b9	07		 DB	 7
  002ba	07		 DB	 7
  002bb	07		 DB	 7
  002bc	07		 DB	 7
  002bd	07		 DB	 7
  002be	07		 DB	 7
  002bf	07		 DB	 7
  002c0	07		 DB	 7
  002c1	07		 DB	 7
  002c2	07		 DB	 7
  002c3	07		 DB	 7
  002c4	07		 DB	 7
  002c5	07		 DB	 7
  002c6	07		 DB	 7
  002c7	07		 DB	 7
  002c8	07		 DB	 7
  002c9	07		 DB	 7
  002ca	07		 DB	 7
  002cb	07		 DB	 7
  002cc	07		 DB	 7
  002cd	07		 DB	 7
  002ce	07		 DB	 7
  002cf	07		 DB	 7
  002d0	07		 DB	 7
  002d1	07		 DB	 7
  002d2	07		 DB	 7
  002d3	07		 DB	 7
  002d4	07		 DB	 7
  002d5	07		 DB	 7
  002d6	07		 DB	 7
  002d7	07		 DB	 7
  002d8	07		 DB	 7
  002d9	07		 DB	 7
  002da	07		 DB	 7
  002db	07		 DB	 7
  002dc	07		 DB	 7
  002dd	07		 DB	 7
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	05		 DB	 5
  002e2	07		 DB	 7
  002e3	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??_7CRaklion@@6B@				; CRaklion::`vftable'
PUBLIC	??1CRaklion@@UAE@XZ				; CRaklion::~CRaklion
PUBLIC	??_R4CRaklion@@6B@				; CRaklion::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRaklion@@@8				; CRaklion `RTTI Type Descriptor'
PUBLIC	??_R3CRaklion@@8				; CRaklion::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRaklion@@8				; CRaklion::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRaklion@@8			; CRaklion::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1CRaklionBattleOfSelupan@@UAE@XZ:PROC		; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECRaklion@@UAEPAXI@Z:PROC			; CRaklion::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CRaklion@@8
; File e:\work\tranet_version\gs\gameserver\raklion.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CRaklion@@8 DD FLAT:??_R0?AVCRaklion@@@8	; CRaklion::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_R2CRaklion@@8
rdata$r	SEGMENT
??_R2CRaklion@@8 DD FLAT:??_R1A@?0A@EA@CRaklion@@8	; CRaklion::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRaklion@@8
rdata$r	SEGMENT
??_R3CRaklion@@8 DD 00H					; CRaklion::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRaklion@@@8
_DATA	SEGMENT
??_R0?AVCRaklion@@@8 DD FLAT:??_7type_info@@6B@		; CRaklion `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRaklion@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRaklion@@6B@
rdata$r	SEGMENT
??_R4CRaklion@@6B@ DD 00H				; CRaklion::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRaklion@@@8
	DD	FLAT:??_R3CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_7CRaklion@@6B@
CONST	SEGMENT
??_7CRaklion@@6B@ DD FLAT:??_R4CRaklion@@6B@		; CRaklion::`vftable'
	DD	FLAT:??_ECRaklion@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CRaklion@@UAE@XZ
_TEXT	SEGMENT
??1CRaklion@@UAE@XZ PROC				; CRaklion::~CRaklion, COMDAT
; _this$ = ecx

; 38   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRaklion@@6B@

; 39   : 
; 40   : }

  00006	83 c1 38	 add	 ecx, 56			; 00000038H
  00009	e9 00 00 00 00	 jmp	 ??1CRaklionBattleOfSelupan@@UAE@XZ ; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
??1CRaklion@@UAE@XZ ENDP				; CRaklion::~CRaklion
_TEXT	ENDS
PUBLIC	?Init@CRaklion@@QAEXXZ				; CRaklion::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?Init@CRaklion@@QAEXXZ PROC				; CRaklion::Init, COMDAT
; _this$ = ecx

; 44   : 	//empty
; 45   : }

  00000	c3		 ret	 0
?Init@CRaklion@@QAEXXZ ENDP				; CRaklion::Init
_TEXT	ENDS
PUBLIC	?ClearData@CRaklion@@QAEXXZ			; CRaklion::ClearData
; Function compile flags: /Ogtp
;	COMDAT ?ClearData@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ClearData@CRaklion@@QAEXXZ PROC			; CRaklion::ClearData, COMDAT
; _this$ = ecx

; 49   : 	this->m_iUnk16 = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 50   : 	this->m_iFileDataLoad = 0;

  00005	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 51   : 	this->m_iAppearanceMSec = 0;

  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 52   : 	this->m_iBossZoneCloseMSec = 0;

  0000b	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 53   : 	this->m_iBossZoneOpenMSec = 0;

  0000e	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 54   : 	this->m_iBossEggHalfChecked = 0;

  00011	89 81 08 0e 00
	00		 mov	 DWORD PTR [ecx+3592], eax

; 55   : 	this->m_iBossEggCount =0;

  00017	89 81 0c 0e 00
	00		 mov	 DWORD PTR [ecx+3596], eax

; 56   : }

  0001d	c3		 ret	 0
?ClearData@CRaklion@@QAEXXZ ENDP			; CRaklion::ClearData
_TEXT	ENDS
PUBLIC	??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@ ; `string'
PUBLIC	??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@ ; `string'
PUBLIC	??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@ ; `string'
PUBLIC	??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@ ; `string'
PUBLIC	??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@ ; `string'
PUBLIC	??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@ ; `string'
PUBLIC	??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@ ; `string'
PUBLIC	??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@ ; `string'
PUBLIC	??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ ; `string'
PUBLIC	??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_szFileName$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?LoadData@CRaklion@@QAEHPAD@Z			; CRaklion::LoadData
EXTRN	?SetPatternCondition@CRaklionBattleOfSelupan@@QAEXHH@Z:PROC ; CRaklionBattleOfSelupan::SetPatternCondition
EXTRN	?SetSelupanSkillDelay@CRaklionBattleOfSelupan@@QAEXH@Z:PROC ; CRaklionBattleOfSelupan::SetSelupanSkillDelay
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	_fclose:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@
CONST	SEGMENT
??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@ DB '['
	DB	' RAKLION ] - File load error : File Name Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@
CONST	SEGMENT
??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@ DB '[ R'
	DB	'AKLION ] - Loading Exception Error (%s) File. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@
CONST	SEGMENT
??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@ DB '[ RAK'
	DB	'LION ] - BossPatternCondition[%d] error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@
CONST	SEGMENT
??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@ DB '[ RA'
	DB	'KLION ] - BossSkillDelay count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@
CONST	SEGMENT
??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@ DB '[ R'
	DB	'AKLION ] - BossEggMax count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@
CONST	SEGMENT
??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@ DB '[ R'
	DB	'AKLION ] - BossEggHalf count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@
CONST	SEGMENT
??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@ DB '[ RA'
	DB	'KLION ] - Exceed AppearanceDelay : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@
CONST	SEGMENT
??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@ DB '[ RA'
	DB	'KLION ] - Exceed BosszoneCloseDelay : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@
CONST	SEGMENT
??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@ DB '[ RA'
	DB	'KLION ] - Exceed BosszoneOpenDelay : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
CONST	SEGMENT
??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ DB '['
	DB	' RAKLION ] - %s file is Loaded', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
CONST	SEGMENT
??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ DB '['
	DB	' RAKLION ] - Can''t Open %s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadData@CRaklion@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CRaklion@@QAEHPAD@Z$0
__unwindtable$?LoadData@CRaklion@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CRaklion@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CRaklion@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CRaklion@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CRaklion@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CRaklion@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?LoadData@CRaklion@@QAEHPAD@Z
_TEXT	SEGMENT
_iType$209699 = -56					; size = 4
_szFileName$GSCopy$ = -52				; size = 4
_this$GSCopy$ = -48					; size = 4
_iPattern$209762 = -44					; size = 24
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_szFileName$ = 8					; size = 4
?LoadData@CRaklion@@QAEHPAD@Z PROC			; CRaklion::LoadData, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadData@CRaklion@@QAEHPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	8b 75 08	 mov	 esi, DWORD PTR _szFileName$[ebp]

; 60   : 	this->m_iFileDataLoad = 0;

  00031	33 db		 xor	 ebx, ebx
  00033	89 4d d0	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00036	89 75 cc	 mov	 DWORD PTR _szFileName$GSCopy$[ebp], esi
  00039	89 59 20	 mov	 DWORD PTR [ecx+32], ebx

; 61   : 
; 62   : 	if(!szFileName || !strcmp(szFileName,""))

  0003c	3b f3		 cmp	 esi, ebx
  0003e	0f 84 de 03 00
	00		 je	 $LN34@LoadData
  00044	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00049	8b c6		 mov	 eax, esi
  0004b	eb 03 8d 49 00	 npad	 5
$LL53@LoadData:
  00050	8a 10		 mov	 dl, BYTE PTR [eax]
  00052	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00054	75 1a		 jne	 SHORT $LN54@LoadData
  00056	3a d3		 cmp	 dl, bl
  00058	74 12		 je	 SHORT $LN55@LoadData
  0005a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0005d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00060	75 0e		 jne	 SHORT $LN54@LoadData
  00062	83 c0 02	 add	 eax, 2
  00065	83 c1 02	 add	 ecx, 2
  00068	3a d3		 cmp	 dl, bl
  0006a	75 e4		 jne	 SHORT $LL53@LoadData
$LN55@LoadData:
  0006c	33 c0		 xor	 eax, eax
  0006e	eb 05		 jmp	 SHORT $LN56@LoadData
$LN54@LoadData:
  00070	1b c0		 sbb	 eax, eax
  00072	83 d8 ff	 sbb	 eax, -1
$LN56@LoadData:
  00075	3b c3		 cmp	 eax, ebx
  00077	0f 84 a5 03 00
	00		 je	 $LN34@LoadData

; 66   : 	}
; 67   : 
; 68   : 	try
; 69   : 	{
; 70   : 
; 71   : 		SMDFile = fopen(szFileName,"r");

  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00082	56		 push	 esi
  00083	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  00086	e8 00 00 00 00	 call	 _fopen
  0008b	83 c4 08	 add	 esp, 8
  0008e	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 72   : 		
; 73   : 		if( SMDFile == NULL)

  00093	3b c3		 cmp	 eax, ebx
  00095	75 21		 jne	 SHORT $LN31@LoadData

; 74   : 		{
; 75   : 			DWORD dwError = GetLastError();

  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 76   : 			MsgBox("[ RAKLION ] - Can't Open %s ",szFileName);

  0009d	56		 push	 esi
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
  000a3	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000a8	83 c4 08	 add	 esp, 8

; 77   : 			return FALSE;

  000ab	e9 7f 03 00 00	 jmp	 $LN89@LoadData
$LN90@LoadData:

; 130  : 					{
; 131  : 						MsgBox("[ RAKLION ] - Exceed BosszoneCloseDelay : (%d)",iZoneCloseDelay);

  000b0	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000b5	83 c4 08	 add	 esp, 8
$LN31@LoadData:

; 78   : 		}
; 79   : 
; 80   : 		enum SMDToken Token;
; 81   : 		int iType = -1;
; 82   : 		int iAppearanceDelay;
; 83   : 		int iZoneCloseDelay;
; 84   : 		int iZoneOpenDelay;
; 85   : 		int iBossEggHalf;
; 86   : 		int iBossEggMax;
; 87   : 		int iBossSkillDelay;
; 88   : 
; 89   : 		while ( true )
; 90   : 		{
; 91   : 
; 92   : 			Token = GetToken();
; 93   : 
; 94   : 			if ( Token == END)

  000b8	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  000bd	83 f8 02	 cmp	 eax, 2
  000c0	75 34		 jne	 SHORT $LN29@LoadData

; 250  : 
; 251  : 		fclose(SMDFile);

  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 _fclose

; 252  : 		LogAddC(2,"[ RAKLION ] - %s file is Loaded", szFileName);

  000cd	8b 4d cc	 mov	 ecx, DWORD PTR _szFileName$GSCopy$[ebp]
  000d0	51		 push	 ecx
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
  000d6	6a 02		 push	 2
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 253  : 		this->m_iFileDataLoad = 1;

  000de	8b 55 d0	 mov	 edx, DWORD PTR _this$GSCopy$[ebp]
  000e1	83 c4 10	 add	 esp, 16			; 00000010H
  000e4	c7 42 20 01 00
	00 00		 mov	 DWORD PTR [edx+32], 1
$LN41@LoadData:

; 259  : 
; 260  : 	return this->m_iFileDataLoad;

  000eb	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000ee	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  000f1	e9 3b 03 00 00	 jmp	 $LN36@LoadData
$LN29@LoadData:

; 95   : 			{
; 96   : 				break;
; 97   : 			}
; 98   : 
; 99   : 			iType = (int)TokenNumber;

  000f6	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000fc	e8 00 00 00 00	 call	 __ftol2_sse
  00101	8b f8		 mov	 edi, eax
  00103	89 7d c8	 mov	 DWORD PTR _iType$209699[ebp], edi
$LL28@LoadData:

; 100  : 
; 101  : 			while ( true )
; 102  : 			{
; 103  : 				if ( iType == 0 )

  00106	3b fb		 cmp	 edi, ebx
  00108	0f 85 b7 00 00
	00		 jne	 $LN26@LoadData

; 104  : 				{
; 105  : 					iAppearanceDelay = 0;
; 106  : 					iZoneCloseDelay = 0;
; 107  : 					iZoneOpenDelay = 0;
; 108  : 
; 109  : 					Token = GetToken();

  0010e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 110  : 
; 111  : 					if( strcmp("end", TokenString) == 0 )

  00113	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00118	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0011d	8d 49 00	 npad	 3
$LL57@LoadData:
  00120	8a 10		 mov	 dl, BYTE PTR [eax]
  00122	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00124	75 1a		 jne	 SHORT $LN58@LoadData
  00126	3a d3		 cmp	 dl, bl
  00128	74 12		 je	 SHORT $LN59@LoadData
  0012a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0012d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00130	75 0e		 jne	 SHORT $LN58@LoadData
  00132	83 c0 02	 add	 eax, 2
  00135	83 c1 02	 add	 ecx, 2
  00138	3a d3		 cmp	 dl, bl
  0013a	75 e4		 jne	 SHORT $LL57@LoadData
$LN59@LoadData:
  0013c	33 c0		 xor	 eax, eax
  0013e	eb 05		 jmp	 SHORT $LN60@LoadData
$LN58@LoadData:
  00140	1b c0		 sbb	 eax, eax
  00142	83 d8 ff	 sbb	 eax, -1
$LN60@LoadData:
  00145	3b c3		 cmp	 eax, ebx
  00147	0f 84 6b ff ff
	ff		 je	 $LN31@LoadData

; 112  : 					{
; 113  : 						break;
; 114  : 					}
; 115  : 					
; 116  : 					iAppearanceDelay = (int)TokenNumber;

  0014d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00153	e8 00 00 00 00	 call	 __ftol2_sse
  00158	8b f0		 mov	 esi, eax

; 117  : 
; 118  : 					Token = GetToken();

  0015a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 119  : 					iZoneCloseDelay = (int)TokenNumber;

  0015f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00165	e8 00 00 00 00	 call	 __ftol2_sse
  0016a	8b f8		 mov	 edi, eax

; 120  : 
; 121  : 					Token = GetToken();

  0016c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 122  : 					iZoneOpenDelay = (int)TokenNumber;

  00171	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00177	e8 00 00 00 00	 call	 __ftol2_sse

; 123  : 
; 124  : 					if (iAppearanceDelay < 0 || iAppearanceDelay > MAX_RAKLION_APPEARANCE_DELAY )

  0017c	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0017f	77 39		 ja	 SHORT $LN23@LoadData

; 128  : 					}
; 129  : 					if (iZoneCloseDelay < 0 || iZoneCloseDelay >= MAX_RAKLION_BOSSZONECLOSE_DELAY )

  00181	81 ff e3 51 01
	00		 cmp	 edi, 86499		; 000151e3H
  00187	77 26		 ja	 SHORT $LN21@LoadData

; 133  : 					}
; 134  : 					if (iZoneOpenDelay < 0 || iZoneOpenDelay >= MAX_RAKLION_BOSSZONEOPEN_DELAY )

  00189	3d e3 51 01 00	 cmp	 eax, 86499		; 000151e3H
  0018e	77 14		 ja	 SHORT $LN19@LoadData

; 138  : 					}
; 139  : 
; 140  : 					this->m_iAppearanceDelay	= iAppearanceDelay;

  00190	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]

; 141  : 					this->m_iBossZoneCloseDelay	= iZoneCloseDelay;

  00193	89 79 28	 mov	 DWORD PTR [ecx+40], edi

; 142  : 					this->m_iBossZoneOpenDelay	= iZoneOpenDelay;

  00196	8b 7d c8	 mov	 edi, DWORD PTR _iType$209699[ebp]
  00199	89 71 24	 mov	 DWORD PTR [ecx+36], esi
  0019c	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  0019f	e9 62 ff ff ff	 jmp	 $LL28@LoadData
$LN19@LoadData:

; 135  : 					{
; 136  : 						MsgBox("[ RAKLION ] - Exceed BosszoneOpenDelay : (%d)",iZoneOpenDelay);

  001a4	50		 push	 eax
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@

; 137  : 						break;

  001aa	e9 01 ff ff ff	 jmp	 $LN90@LoadData
$LN21@LoadData:

; 130  : 					{
; 131  : 						MsgBox("[ RAKLION ] - Exceed BosszoneCloseDelay : (%d)",iZoneCloseDelay);

  001af	57		 push	 edi
  001b0	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@

; 132  : 						break;

  001b5	e9 f6 fe ff ff	 jmp	 $LN90@LoadData
$LN23@LoadData:

; 125  : 					{
; 126  : 						MsgBox("[ RAKLION ] - Exceed AppearanceDelay : (%d)",iAppearanceDelay);

  001ba	56		 push	 esi
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@

; 127  : 						break;

  001c0	e9 eb fe ff ff	 jmp	 $LN90@LoadData
$LN26@LoadData:

; 143  : 
; 144  : 				}
; 145  : 				
; 146  : 				else if ( iType == 1 )

  001c5	83 ff 01	 cmp	 edi, 1
  001c8	0f 85 88 00 00
	00		 jne	 $LN17@LoadData

; 147  : 				{
; 148  : 					iBossEggHalf = 0;
; 149  : 					iBossEggMax = 0;
; 150  : 
; 151  : 					Token = GetToken();

  001ce	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 152  : 
; 153  : 					if ( strcmp("end",TokenString) == 0)

  001d3	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  001d8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  001dd	8d 49 00	 npad	 3
$LL61@LoadData:
  001e0	8a 10		 mov	 dl, BYTE PTR [eax]
  001e2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001e4	75 1a		 jne	 SHORT $LN62@LoadData
  001e6	3a d3		 cmp	 dl, bl
  001e8	74 12		 je	 SHORT $LN63@LoadData
  001ea	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  001ed	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001f0	75 0e		 jne	 SHORT $LN62@LoadData
  001f2	83 c0 02	 add	 eax, 2
  001f5	83 c1 02	 add	 ecx, 2
  001f8	3a d3		 cmp	 dl, bl
  001fa	75 e4		 jne	 SHORT $LL61@LoadData
$LN63@LoadData:
  001fc	33 c0		 xor	 eax, eax
  001fe	eb 05		 jmp	 SHORT $LN64@LoadData
$LN62@LoadData:
  00200	1b c0		 sbb	 eax, eax
  00202	83 d8 ff	 sbb	 eax, -1
$LN64@LoadData:
  00205	3b c3		 cmp	 eax, ebx
  00207	0f 84 ab fe ff
	ff		 je	 $LN31@LoadData

; 154  : 					{
; 155  : 						break;
; 156  : 					}
; 157  : 
; 158  : 					iBossEggHalf = (int)TokenNumber;

  0020d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00213	e8 00 00 00 00	 call	 __ftol2_sse
  00218	8b f0		 mov	 esi, eax

; 159  : 
; 160  : 					Token = GetToken();

  0021a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 161  : 					iBossEggMax = (int)TokenNumber;

  0021f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00225	e8 00 00 00 00	 call	 __ftol2_sse

; 162  : 
; 163  : 
; 164  : 					if(iBossEggHalf < 0 )

  0022a	3b f3		 cmp	 esi, ebx
  0022c	7d 0b		 jge	 SHORT $LN15@LoadData

; 165  : 					{
; 166  : 						MsgBox("[ RAKLION ] - BossEggHalf count error : (%d)",iBossEggHalf);

  0022e	56		 push	 esi
  0022f	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@

; 167  : 						break;

  00234	e9 77 fe ff ff	 jmp	 $LN90@LoadData
$LN15@LoadData:

; 168  : 					}
; 169  : 
; 170  : 					if(iBossEggMax < 0 )

  00239	3b c3		 cmp	 eax, ebx
  0023b	7d 0b		 jge	 SHORT $LN14@LoadData

; 171  : 					{
; 172  : 						MsgBox("[ RAKLION ] - BossEggMax count error : (%d)",iBossEggMax);

  0023d	50		 push	 eax
  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@

; 173  : 						break;

  00243	e9 68 fe ff ff	 jmp	 $LN90@LoadData
$LN14@LoadData:

; 174  : 					}
; 175  : 
; 176  : 					this->m_iBossEggHalf = iBossEggHalf;

  00248	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0024b	89 71 30	 mov	 DWORD PTR [ecx+48], esi

; 177  : 					this->m_iBossEggMax = iBossEggMax;

  0024e	89 41 34	 mov	 DWORD PTR [ecx+52], eax
  00251	e9 b0 fe ff ff	 jmp	 $LL28@LoadData
$LN17@LoadData:

; 178  : 				}
; 179  : 
; 180  : 				else if ( iType == 2 )

  00256	83 ff 02	 cmp	 edi, 2
  00259	75 6c		 jne	 SHORT $LN12@LoadData

; 181  : 				{
; 182  : 					iBossSkillDelay = 0;
; 183  : 
; 184  : 					Token = GetToken();

  0025b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 185  : 
; 186  : 					if ( strcmp("end",TokenString) == 0)

  00260	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00265	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0026a	8d 9b 00 00 00
	00		 npad	 6
$LL65@LoadData:
  00270	8a 10		 mov	 dl, BYTE PTR [eax]
  00272	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00274	75 1a		 jne	 SHORT $LN66@LoadData
  00276	3a d3		 cmp	 dl, bl
  00278	74 12		 je	 SHORT $LN67@LoadData
  0027a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0027d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00280	75 0e		 jne	 SHORT $LN66@LoadData
  00282	83 c0 02	 add	 eax, 2
  00285	83 c1 02	 add	 ecx, 2
  00288	3a d3		 cmp	 dl, bl
  0028a	75 e4		 jne	 SHORT $LL65@LoadData
$LN67@LoadData:
  0028c	33 c0		 xor	 eax, eax
  0028e	eb 05		 jmp	 SHORT $LN68@LoadData
$LN66@LoadData:
  00290	1b c0		 sbb	 eax, eax
  00292	83 d8 ff	 sbb	 eax, -1
$LN68@LoadData:
  00295	3b c3		 cmp	 eax, ebx
  00297	0f 84 1b fe ff
	ff		 je	 $LN31@LoadData

; 187  : 					{
; 188  : 						break;
; 189  : 					}
; 190  : 
; 191  : 					iBossSkillDelay = (int)TokenNumber;

  0029d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002a3	e8 00 00 00 00	 call	 __ftol2_sse

; 192  : 
; 193  : 					if ( iBossSkillDelay < 0)
; 194  : 					{
; 195  : 						MsgBox("[ RAKLION ] - BossSkillDelay count error : (%d)",iBossSkillDelay);

  002a8	50		 push	 eax
  002a9	3b c3		 cmp	 eax, ebx
  002ab	7d 0a		 jge	 SHORT $LN10@LoadData
  002ad	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@

; 196  : 						break;

  002b2	e9 f9 fd ff ff	 jmp	 $LN90@LoadData
$LN10@LoadData:

; 197  : 					}
; 198  : 
; 199  : 					this->m_RaklionBattleOfSelupan.SetSelupanSkillDelay(iBossSkillDelay);

  002b7	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  002ba	83 c1 38	 add	 ecx, 56			; 00000038H
  002bd	e8 00 00 00 00	 call	 ?SetSelupanSkillDelay@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSelupanSkillDelay
  002c2	e9 3f fe ff ff	 jmp	 $LL28@LoadData
$LN12@LoadData:

; 200  : 				}
; 201  : 
; 202  : 				else if ( iType == 3 )

  002c7	83 ff 03	 cmp	 edi, 3
  002ca	0f 85 0a 01 00
	00		 jne	 $LN8@LoadData

; 203  : 				{
; 204  : 					int iPattern[6] = { 0 };

  002d0	33 c0		 xor	 eax, eax
  002d2	89 5d d4	 mov	 DWORD PTR _iPattern$209762[ebp], ebx
  002d5	89 45 d8	 mov	 DWORD PTR _iPattern$209762[ebp+4], eax
  002d8	89 45 dc	 mov	 DWORD PTR _iPattern$209762[ebp+8], eax
  002db	89 45 e0	 mov	 DWORD PTR _iPattern$209762[ebp+12], eax
  002de	89 45 e4	 mov	 DWORD PTR _iPattern$209762[ebp+16], eax
  002e1	89 45 e8	 mov	 DWORD PTR _iPattern$209762[ebp+20], eax

; 205  : 
; 206  : 
; 207  : 					Token = GetToken();

  002e4	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 208  : 
; 209  : 					if ( strcmp("end",TokenString) == 0)

  002e9	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  002ee	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL69@LoadData:
  002f3	8a 10		 mov	 dl, BYTE PTR [eax]
  002f5	3a 11		 cmp	 dl, BYTE PTR [ecx]
  002f7	75 1a		 jne	 SHORT $LN70@LoadData
  002f9	3a d3		 cmp	 dl, bl
  002fb	74 12		 je	 SHORT $LN71@LoadData
  002fd	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00300	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00303	75 0e		 jne	 SHORT $LN70@LoadData
  00305	83 c0 02	 add	 eax, 2
  00308	83 c1 02	 add	 ecx, 2
  0030b	3a d3		 cmp	 dl, bl
  0030d	75 e4		 jne	 SHORT $LL69@LoadData
$LN71@LoadData:
  0030f	33 c0		 xor	 eax, eax
  00311	eb 05		 jmp	 SHORT $LN72@LoadData
$LN70@LoadData:
  00313	1b c0		 sbb	 eax, eax
  00315	83 d8 ff	 sbb	 eax, -1
$LN72@LoadData:
  00318	3b c3		 cmp	 eax, ebx
  0031a	0f 84 98 fd ff
	ff		 je	 $LN31@LoadData

; 210  : 					{
; 211  : 						break;
; 212  : 					}
; 213  : 
; 214  : 					iPattern[0] = (int)TokenNumber;

  00320	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00326	e8 00 00 00 00	 call	 __ftol2_sse
  0032b	89 45 d4	 mov	 DWORD PTR _iPattern$209762[ebp], eax

; 215  : 
; 216  : 					Token = GetToken();

  0032e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 217  : 					iPattern[1] = (int)TokenNumber;

  00333	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00339	e8 00 00 00 00	 call	 __ftol2_sse
  0033e	89 45 d8	 mov	 DWORD PTR _iPattern$209762[ebp+4], eax

; 218  : 
; 219  : 					Token = GetToken();

  00341	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 220  : 					iPattern[2] = (int)TokenNumber;

  00346	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0034c	e8 00 00 00 00	 call	 __ftol2_sse
  00351	89 45 dc	 mov	 DWORD PTR _iPattern$209762[ebp+8], eax

; 221  : 
; 222  : 					Token = GetToken();

  00354	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 223  : 					iPattern[3] = (int)TokenNumber;

  00359	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0035f	e8 00 00 00 00	 call	 __ftol2_sse
  00364	89 45 e0	 mov	 DWORD PTR _iPattern$209762[ebp+12], eax

; 224  : 
; 225  : 					Token = GetToken();

  00367	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 226  : 					iPattern[4] = (int)TokenNumber;

  0036c	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00372	e8 00 00 00 00	 call	 __ftol2_sse
  00377	89 45 e4	 mov	 DWORD PTR _iPattern$209762[ebp+16], eax

; 227  : 
; 228  : 					Token = GetToken();

  0037a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 229  : 					iPattern[5] = (int)TokenNumber;

  0037f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00385	e8 00 00 00 00	 call	 __ftol2_sse
  0038a	89 45 e8	 mov	 DWORD PTR _iPattern$209762[ebp+20], eax

; 230  : 
; 231  : 					for ( int i = 0; i < 6; i++)

  0038d	33 f6		 xor	 esi, esi
  0038f	90		 npad	 1
$LL6@LoadData:
  00390	83 fe 06	 cmp	 esi, 6
  00393	0f 8d 6d fd ff
	ff		 jge	 $LL28@LoadData

; 232  : 					{
; 233  : 						if(iPattern[i] < 0)

  00399	8b 44 b5 d4	 mov	 eax, DWORD PTR _iPattern$209762[ebp+esi*4]

; 234  : 						{
; 235  : 							MsgBox("[ RAKLION ] - BossPatternCondition[%d] error : (%d)", i, iPattern[i]);

  0039d	50		 push	 eax
  0039e	56		 push	 esi
  0039f	3b c3		 cmp	 eax, ebx
  003a1	7d 12		 jge	 SHORT $LN3@LoadData
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@
  003a8	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  003ad	83 c4 0c	 add	 esp, 12			; 0000000cH

; 236  : 							break;

  003b0	e9 51 fd ff ff	 jmp	 $LL28@LoadData
$LN3@LoadData:

; 237  : 						}
; 238  : 						this->m_RaklionBattleOfSelupan.SetPatternCondition(i,iPattern[i]);

  003b5	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  003b8	83 c1 38	 add	 ecx, 56			; 00000038H
  003bb	e8 00 00 00 00	 call	 ?SetPatternCondition@CRaklionBattleOfSelupan@@QAEXHH@Z ; CRaklionBattleOfSelupan::SetPatternCondition
  003c0	46		 inc	 esi
  003c1	eb cd		 jmp	 SHORT $LL6@LoadData
__catch$?LoadData@CRaklion@@QAEHPAD@Z$0:

; 254  : 	}
; 255  : 	catch(...)
; 256  : 	{
; 257  : 		MsgBox("[ RAKLION ] - Loading Exception Error (%s) File. ",szFileName);

  003c3	8b 45 cc	 mov	 eax, DWORD PTR _szFileName$GSCopy$[ebp]
  003c6	50		 push	 eax
  003c7	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@
  003cc	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  003d1	83 c4 08	 add	 esp, 8

; 258  : 	}

  003d4	b8 00 00 00 00	 mov	 eax, $LN41@LoadData
  003d9	c3		 ret	 0
$LN8@LoadData:

; 239  : 					}
; 240  : 				}
; 241  : 				else
; 242  : 				{
; 243  : 					Token = (SMDToken)GetToken();
; 244  : 					
; 245  : 					if ( !strcmp("end", TokenString))

  003da	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003df	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  003e4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  003e9	8d a4 24 00 00
	00 00		 npad	 7
$LL73@LoadData:
  003f0	8a 10		 mov	 dl, BYTE PTR [eax]
  003f2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  003f4	75 1a		 jne	 SHORT $LN74@LoadData
  003f6	3a d3		 cmp	 dl, bl
  003f8	74 12		 je	 SHORT $LN75@LoadData
  003fa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  003fd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00400	75 0e		 jne	 SHORT $LN74@LoadData
  00402	83 c0 02	 add	 eax, 2
  00405	83 c1 02	 add	 ecx, 2
  00408	3a d3		 cmp	 dl, bl
  0040a	75 e4		 jne	 SHORT $LL73@LoadData
$LN75@LoadData:
  0040c	33 c0		 xor	 eax, eax
  0040e	eb 05		 jmp	 SHORT $LN76@LoadData
$LN74@LoadData:
  00410	1b c0		 sbb	 eax, eax
  00412	83 d8 ff	 sbb	 eax, -1
$LN76@LoadData:
  00415	3b c3		 cmp	 eax, ebx
  00417	0f 85 e9 fc ff
	ff		 jne	 $LL28@LoadData

; 246  : 						break;
; 247  : 				}
; 248  : 			}
; 249  : 		}

  0041d	e9 96 fc ff ff	 jmp	 $LN31@LoadData
$LN34@LoadData:

; 63   : 	{
; 64   : 		MsgBox("[ RAKLION ] - File load error : File Name Error");

  00422	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@
  00427	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0042c	83 c4 04	 add	 esp, 4
$LN89@LoadData:

; 65   : 		return FALSE;

  0042f	33 c0		 xor	 eax, eax
$LN36@LoadData:

; 261  : }

  00431	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00434	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0043b	59		 pop	 ecx
  0043c	5f		 pop	 edi
  0043d	5e		 pop	 esi
  0043e	5b		 pop	 ebx
  0043f	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00442	33 cd		 xor	 ecx, ebp
  00444	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00449	8b e5		 mov	 esp, ebp
  0044b	5d		 pop	 ebp
  0044c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?LoadData@CRaklion@@QAEHPAD@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CRaklion@@QAEHPAD@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CRaklion@@QAEHPAD@Z ENDP			; CRaklion::LoadData
PUBLIC	?CheckData@CRaklion@@QAEXXZ			; CRaklion::CheckData
; Function compile flags: /Ogtp
;	COMDAT ?CheckData@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?CheckData@CRaklion@@QAEXXZ PROC			; CRaklion::CheckData, COMDAT
; _this$ = ecx

; 265  : 	return;
; 266  : 	//come code lacking due to return
; 267  : }

  00000	c3		 ret	 0
?CheckData@CRaklion@@QAEXXZ ENDP			; CRaklion::CheckData
_TEXT	ENDS
PUBLIC	?ChangeState@CRaklion@@QAEXHH@Z			; CRaklion::ChangeState
; Function compile flags: /Ogtp
;	COMDAT ?ChangeState@CRaklion@@QAEXHH@Z
_TEXT	SEGMENT
_iState$ = 8						; size = 4
_iDetailState$ = 12					; size = 4
?ChangeState@CRaklion@@QAEXHH@Z PROC			; CRaklion::ChangeState, COMDAT
; _this$ = ecx

; 365  : 	//some stuff
; 366  : }

  00000	c2 08 00	 ret	 8
?ChangeState@CRaklion@@QAEXHH@Z ENDP			; CRaklion::ChangeState
_TEXT	ENDS
PUBLIC	?SetRaklionEnable@CRaklion@@QAEXH@Z		; CRaklion::SetRaklionEnable
; Function compile flags: /Ogtp
;	COMDAT ?SetRaklionEnable@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 4
?SetRaklionEnable@CRaklion@@QAEXH@Z PROC		; CRaklion::SetRaklionEnable, COMDAT
; _this$ = ecx

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 597  : 	this->m_IsRaklionEnable = bEnable;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bEnable$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 598  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetRaklionEnable@CRaklion@@QAEXH@Z ENDP		; CRaklion::SetRaklionEnable
_TEXT	ENDS
PUBLIC	?IsRaklionEnable@CRaklion@@QAEHXZ		; CRaklion::IsRaklionEnable
; Function compile flags: /Ogtp
;	COMDAT ?IsRaklionEnable@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?IsRaklionEnable@CRaklion@@QAEHXZ PROC			; CRaklion::IsRaklionEnable, COMDAT
; _this$ = ecx

; 602  : 	if(g_iUseRaklionEvent != 0 && this->m_IsRaklionEnable != 0)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_iUseRaklionEvent@@3HA, 0 ; g_iUseRaklionEvent
  00007	74 0c		 je	 SHORT $LN1@IsRaklionE
  00009	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0000d	74 06		 je	 SHORT $LN1@IsRaklionE

; 603  : 	{
; 604  : 		return TRUE;

  0000f	b8 01 00 00 00	 mov	 eax, 1

; 608  : }

  00014	c3		 ret	 0
$LN1@IsRaklionE:

; 605  : 	}
; 606  : 
; 607  : 	return FALSE;

  00015	33 c0		 xor	 eax, eax

; 608  : }

  00017	c3		 ret	 0
?IsRaklionEnable@CRaklion@@QAEHXZ ENDP			; CRaklion::IsRaklionEnable
_TEXT	ENDS
PUBLIC	?SetRaklionState@CRaklion@@QAEXH@Z		; CRaklion::SetRaklionState
; Function compile flags: /Ogtp
;	COMDAT ?SetRaklionState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iRaklionState$ = 8					; size = 4
?SetRaklionState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetRaklionState, COMDAT
; _this$ = ecx

; 611  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 	this->m_iRaklionState = iRaklionState;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iRaklionState$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 613  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetRaklionState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetRaklionState
_TEXT	ENDS
PUBLIC	?GetRaklionState@CRaklion@@QAEHXZ		; CRaklion::GetRaklionState
; Function compile flags: /Ogtp
;	COMDAT ?GetRaklionState@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?GetRaklionState@CRaklion@@QAEHXZ PROC			; CRaklion::GetRaklionState, COMDAT
; _this$ = ecx

; 617  : 	return this->m_iRaklionState; 

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 618  : }

  00003	c3		 ret	 0
?GetRaklionState@CRaklion@@QAEHXZ ENDP			; CRaklion::GetRaklionState
_TEXT	ENDS
PUBLIC	?SetRaklionDetailState@CRaklion@@QAEXH@Z	; CRaklion::SetRaklionDetailState
; Function compile flags: /Ogtp
;	COMDAT ?SetRaklionDetailState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iState$ = 8						; size = 4
?SetRaklionDetailState@CRaklion@@QAEXH@Z PROC		; CRaklion::SetRaklionDetailState, COMDAT
; _this$ = ecx

; 621  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 	this->m_RaklionBattleOfSelupan.SetBattleOfSelupanState(iState);

  00003	8b 45 08	 mov	 eax, DWORD PTR _iState$[ebp]
  00006	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 623  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetRaklionDetailState@CRaklion@@QAEXH@Z ENDP		; CRaklion::SetRaklionDetailState
_TEXT	ENDS
PUBLIC	?GetRaklionDetailState@CRaklion@@QAEHXZ		; CRaklion::GetRaklionDetailState
; Function compile flags: /Ogtp
;	COMDAT ?GetRaklionDetailState@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?GetRaklionDetailState@CRaklion@@QAEHXZ PROC		; CRaklion::GetRaklionDetailState, COMDAT
; _this$ = ecx

; 627  : 	return this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState();

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]

; 628  : }

  00003	c3		 ret	 0
?GetRaklionDetailState@CRaklion@@QAEHXZ ENDP		; CRaklion::GetRaklionDetailState
_TEXT	ENDS
PUBLIC	??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@ ; `string'
PUBLIC	?BossEggRegen@CRaklion@@QAEXXZ			; CRaklion::BossEggRegen
;	COMDAT ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
CONST	SEGMENT
??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@ DB '[RAKLIO'
	DB	'N] BossEggDieCount Error : (%d)', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?BossEggRegen@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?BossEggRegen@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggRegen, COMDAT
; _this$ = ecx

; 632  : 	if ( this->m_iBossEggCount >= this->m_iBossEggMax )

  00000	8b 81 0c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3596]
  00006	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00009	7c 12		 jl	 SHORT $LN1@BossEggReg

; 633  : 	{
; 634  : 		LogAddC(2, "[RAKLION] BossEggDieCount Error : (%d)",this->m_iBossEggCount);

  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
  00011	6a 02		 push	 2
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 639  : }

  0001c	c3		 ret	 0
$LN1@BossEggReg:

; 635  : 		return;
; 636  : 	}
; 637  : 
; 638  : 	this->m_iBossEggCount++;

  0001d	40		 inc	 eax
  0001e	89 81 0c 0e 00
	00		 mov	 DWORD PTR [ecx+3596], eax

; 639  : }

  00024	c3		 ret	 0
?BossEggRegen@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggRegen
_TEXT	ENDS
PUBLIC	?BossEggDie@CRaklion@@QAEXXZ			; CRaklion::BossEggDie
; Function compile flags: /Ogtp
;	COMDAT ?BossEggDie@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?BossEggDie@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggDie, COMDAT
; _this$ = ecx

; 643  : 	if ( this->m_iBossEggCount <= 0 )

  00000	8b 81 0c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3596]
  00006	85 c0		 test	 eax, eax
  00008	7f 12		 jg	 SHORT $LN1@BossEggDie

; 644  : 	{
; 645  : 		LogAddC(2, "[RAKLION] BossEggDieCount Error : (%d)",this->m_iBossEggCount);

  0000a	50		 push	 eax
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
  00010	6a 02		 push	 2
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 650  : }

  0001b	c3		 ret	 0
$LN1@BossEggDie:

; 646  : 		return;
; 647  : 	}
; 648  : 
; 649  : 	this->m_iBossEggCount--;

  0001c	48		 dec	 eax
  0001d	89 81 0c 0e 00
	00		 mov	 DWORD PTR [ecx+3596], eax

; 650  : }

  00023	c3		 ret	 0
?BossEggDie@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggDie
_TEXT	ENDS
PUBLIC	?GetBossEggCount@CRaklion@@QAEHXZ		; CRaklion::GetBossEggCount
; Function compile flags: /Ogtp
;	COMDAT ?GetBossEggCount@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?GetBossEggCount@CRaklion@@QAEHXZ PROC			; CRaklion::GetBossEggCount, COMDAT
; _this$ = ecx

; 654  :   return this->m_iBossEggCount;

  00000	8b 81 0c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3596]

; 655  : }

  00006	c3		 ret	 0
?GetBossEggCount@CRaklion@@QAEHXZ ENDP			; CRaklion::GetBossEggCount
_TEXT	ENDS
PUBLIC	??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@ ; `string'
PUBLIC	?BossEggRegenAll@CRaklion@@QAEXXZ		; CRaklion::BossEggRegenAll
EXTRN	?gObjMonsterRegen@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjMonsterRegen
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@
CONST	SEGMENT
??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@ DB '['
	DB	' RAKLION ] [ BossEggRegen ] : BossEgg(%d ea)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?BossEggRegenAll@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?BossEggRegenAll@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggRegenAll, COMDAT
; _this$ = ecx

; 658  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 659  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  00004	33 f6		 xor	 esi, esi
  00006	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL6@BossEggReg@2:

; 660  : 	{
; 661  : 		if (gObj[i].Class == 460 || 
; 662  : 			gObj[i].Class == 461 || 
; 663  : 			gObj[i].Class == 462 )

  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00016	0f b7 84 0e b8
	00 00 00	 movzx	 eax, WORD PTR [esi+ecx+184]
  0001e	ba cc 01 00 00	 mov	 edx, 460		; 000001ccH
  00023	66 3b c2	 cmp	 ax, dx
  00026	74 14		 je	 SHORT $LN2@BossEggReg@2
  00028	ba cd 01 00 00	 mov	 edx, 461		; 000001cdH
  0002d	66 3b c2	 cmp	 ax, dx
  00030	74 0a		 je	 SHORT $LN2@BossEggReg@2
  00032	ba ce 01 00 00	 mov	 edx, 462		; 000001ceH
  00037	66 3b c2	 cmp	 ax, dx
  0003a	75 40		 jne	 SHORT $LN5@BossEggReg@2
$LN2@BossEggReg@2:

; 664  : 		{
; 665  : 			gObjSetMonster(gObj[i].m_Index,gObj[i].Class);

  0003c	8b 0c 0e	 mov	 ecx, DWORD PTR [esi+ecx]
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster

; 666  : 
; 667  : 			if (gObjMonsterRegen(&gObj[i]))

  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004c	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?gObjMonsterRegen@@YAHPAUOBJECTSTRUCT@@@Z ; gObjMonsterRegen
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	85 c0		 test	 eax, eax
  0005a	74 20		 je	 SHORT $LN5@BossEggReg@2

; 668  : 			{
; 669  : 				gObj[i].Live = TRUE;

  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00062	c6 44 0e 6a 01	 mov	 BYTE PTR [esi+ecx+106], 1

; 670  : 				gObj[i].DieRegen = FALSE;

  00067	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 671  : 				this->BossEggRegen();

  0006d	8b cf		 mov	 ecx, edi
  0006f	c6 84 16 a2 03
	00 00 00	 mov	 BYTE PTR [esi+edx+930], 0
  00077	e8 00 00 00 00	 call	 ?BossEggRegen@CRaklion@@QAEXXZ ; CRaklion::BossEggRegen
$LN5@BossEggReg@2:

; 659  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  0007c	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00082	81 fe 80 76 97
	08		 cmp	 esi, 144144000		; 08977680H
  00088	7c 86		 jl	 SHORT $LL6@BossEggReg@2

; 672  : 			}
; 673  : 		}
; 674  : 	}
; 675  : 
; 676  : 	LogAddC(5, "[ RAKLION ] [ BossEggRegen ] : BossEgg(%d ea)",this->GetBossEggCount());

  0008a	8b cf		 mov	 ecx, edi
  0008c	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  00091	50		 push	 eax
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@
  00097	6a 05		 push	 5
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi

; 677  : }

  000a4	c3		 ret	 0
?BossEggRegenAll@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggRegenAll
_TEXT	ENDS
PUBLIC	??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@ ; `string'
PUBLIC	?BossEggDeleteAll@CRaklion@@QAEXXZ		; CRaklion::BossEggDeleteAll
EXTRN	?gObjViewportClose@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjViewportClose
EXTRN	?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjViewportListProtocolDestroy
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
;	COMDAT ??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@
CONST	SEGMENT
??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@ DB '['
	DB	' RAKLION ] [ BossEggDelete ] : BossEgg(%d ea)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?BossEggDeleteAll@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?BossEggDeleteAll@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggDeleteAll, COMDAT
; _this$ = ecx

; 680  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 681  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  00003	33 ff		 xor	 edi, edi
  00005	8b d9		 mov	 ebx, ecx
  00007	33 f6		 xor	 esi, esi
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL5@BossEggDel:

; 682  : 	{
; 683  : 		if (gObj[i].Class == 460 || 
; 684  : 			gObj[i].Class == 461 || 
; 685  : 			gObj[i].Class == 462 )

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	0f b7 84 06 b8
	00 00 00	 movzx	 eax, WORD PTR [esi+eax+184]
  0001d	b9 cc 01 00 00	 mov	 ecx, 460		; 000001ccH
  00022	66 3b c1	 cmp	 ax, cx
  00025	74 14		 je	 SHORT $LN1@BossEggDel
  00027	ba cd 01 00 00	 mov	 edx, 461		; 000001cdH
  0002c	66 3b c2	 cmp	 ax, dx
  0002f	74 0a		 je	 SHORT $LN1@BossEggDel
  00031	b9 ce 01 00 00	 mov	 ecx, 462		; 000001ceH
  00036	66 3b c1	 cmp	 ax, cx
  00039	75 48		 jne	 SHORT $LN4@BossEggDel
$LN1@BossEggDel:

; 686  : 		{
; 687  : 			gObjDel(i);

  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel

; 688  : 			gObj[i].Live = 0;

  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00047	c6 44 16 6a 00	 mov	 BYTE PTR [esi+edx+106], 0

; 689  : 			gObj[i].m_State = 0;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00051	c7 84 06 20 02
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+544], 0

; 690  : 			gObjViewportListProtocolDestroy(&gObj[i]);

  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00062	8d 14 0e	 lea	 edx, DWORD PTR [esi+ecx]
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 ?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportListProtocolDestroy

; 691  : 			gObjViewportClose(&gObj[i]);

  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00070	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00073	51		 push	 ecx
  00074	e8 00 00 00 00	 call	 ?gObjViewportClose@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportClose
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH

; 692  : 			this->BossEggDie();

  0007c	8b cb		 mov	 ecx, ebx
  0007e	e8 00 00 00 00	 call	 ?BossEggDie@CRaklion@@QAEXXZ ; CRaklion::BossEggDie
$LN4@BossEggDel:

; 681  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  00083	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00089	47		 inc	 edi
  0008a	81 fe 80 76 97
	08		 cmp	 esi, 144144000		; 08977680H
  00090	0f 8c 7a ff ff
	ff		 jl	 $LL5@BossEggDel

; 693  : 		}
; 694  : 	}
; 695  : 
; 696  : 	LogAddC(5, "[ RAKLION ] [ BossEggDelete ] : BossEgg(%d ea)",this->GetBossEggCount());

  00096	8b cb		 mov	 ecx, ebx
  00098	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  0009d	50		 push	 eax
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@
  000a3	6a 05		 push	 5
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx

; 697  : }

  000b1	c3		 ret	 0
?BossEggDeleteAll@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggDeleteAll
_TEXT	ENDS
PUBLIC	??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ ; `string'
PUBLIC	?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ	; CRaklion::CheckUserOnRaklionBossMap
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
EXTRN	?IsBattleUser@CRaklionBattleUserMng@@QAEHH@Z:PROC ; CRaklionBattleUserMng::IsBattleUser
EXTRN	?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A:BYTE ; g_RaklionBattleUserMng
;	COMDAT ??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
CONST	SEGMENT
??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ DB '['
	DB	' RAKLION ][ Invalid User ] Invalid Raklion Boss Map User[%s]['
	DB	'%s]', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ PROC	; CRaklion::CheckUserOnRaklionBossMap, COMDAT
; _this$ = ecx

; 701  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  0000d	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00012	bb 02 00 00 00	 mov	 ebx, 2
$LL7@CheckUserO:

; 702  : 	{
; 703  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 704  : 			 gObj[iCount].Type == OBJ_USER &&
; 705  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLION_BOSS)

  00017	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001c	75 77		 jne	 SHORT $LN6@CheckUserO
  0001e	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00024	75 6f		 jne	 SHORT $LN6@CheckUserO
  00026	80 bc 06 49 01
	00 00 3a	 cmp	 BYTE PTR [esi+eax+329], 58 ; 0000003aH
  0002e	75 65		 jne	 SHORT $LN6@CheckUserO

; 706  : 		{
; 707  : 			if ( (gObj[iCount].Authority&2) != 2 )

  00030	84 9c 06 0c 02
	00 00		 test	 BYTE PTR [esi+eax+524], bl
  00037	75 5c		 jne	 SHORT $LN6@CheckUserO

; 708  : 			{
; 709  : 				if (g_RaklionBattleUserMng.IsBattleUser(iCount) != 0)

  00039	57		 push	 edi
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  0003f	e8 00 00 00 00	 call	 ?IsBattleUser@CRaklionBattleUserMng@@QAEHH@Z ; CRaklionBattleUserMng::IsBattleUser
  00044	85 c0		 test	 eax, eax

; 710  : 				{
; 711  : 					continue;
; 712  : 				}
; 713  : 
; 714  : 				if (gObj[iCount].RegenOk == 0 &&
; 715  : 					gObj[iCount].m_State == 2 &&
; 716  : 					gObj[iCount].Live == TRUE)

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004b	75 48		 jne	 SHORT $LN6@CheckUserO
  0004d	80 bc 06 a3 03
	00 00 00	 cmp	 BYTE PTR [esi+eax+931], 0
  00055	75 3e		 jne	 SHORT $LN6@CheckUserO
  00057	39 9c 06 20 02
	00 00		 cmp	 DWORD PTR [esi+eax+544], ebx
  0005e	75 35		 jne	 SHORT $LN6@CheckUserO
  00060	80 7c 06 6a 01	 cmp	 BYTE PTR [esi+eax+106], 1
  00065	75 2e		 jne	 SHORT $LN6@CheckUserO

; 717  : 				{
; 718  : 					gObjMoveGate(iCount, 286);

  00067	68 1e 01 00 00	 push	 286			; 0000011eH
  0006c	57		 push	 edi
  0006d	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate

; 719  : 					LogAddC(2, "[ RAKLION ][ Invalid User ] Invalid Raklion Boss Map User[%s][%s]",
; 720  : 						gObj[iCount].AccountID, gObj[iCount].Name);

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00077	8d 4c 06 77	 lea	 ecx, DWORD PTR [esi+eax+119]
  0007b	51		 push	 ecx
  0007c	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  00080	52		 push	 edx
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
  00086	53		 push	 ebx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00092	83 c4 18	 add	 esp, 24			; 00000018H
$LN6@CheckUserO:

; 701  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00095	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  0009b	47		 inc	 edi
  0009c	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  000a2	0f 8c 6f ff ff
	ff		 jl	 $LL7@CheckUserO

; 721  : 				}
; 722  : 			}	
; 723  : 		}
; 724  : 	}
; 725  : }

  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	c3		 ret	 0
?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ ENDP	; CRaklion::CheckUserOnRaklionBossMap
_TEXT	ENDS
PUBLIC	??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ ; `string'
PUBLIC	??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ ; `string'
PUBLIC	?CheckEnterRaklion@CRaklion@@QAEHH@Z		; CRaklion::CheckEnterRaklion
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
CONST	SEGMENT
??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ DB '['
	DB	' RAKLION ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] S'
	DB	'tate(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ DB '['
	DB	' RAKLION ][ Entrance Fail ] [%s][%s] State(%d)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CheckEnterRaklion@CRaklion@@QAEHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
?CheckEnterRaklion@CRaklion@@QAEHH@Z PROC		; CRaklion::CheckEnterRaklion, COMDAT
; _this$ = ecx

; 728  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 729  : 	if ( !gObjIsConnected(iUserIndex) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iUserIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 09		 jne	 SHORT $LN3@CheckEnter

; 730  : 		return -1;

  00017	5f		 pop	 edi
  00018	83 c8 ff	 or	 eax, -1
  0001b	5e		 pop	 esi

; 749  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
$LN3@CheckEnter:

; 731  : 
; 732  : 	if( this->GetRaklionState() == RAKLION_STATE_CLOSE_DOOR )

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState

; 733  : 	{
; 734  : 		LogAddTD("[ RAKLION ][ Entrance Fail ] [%s][%s] State(%d)",
; 735  : 			gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,this->GetRaklionState());

  00027	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0002d	83 f8 07	 cmp	 eax, 7
  00030	75 2f		 jne	 SHORT $LN2@CheckEnter
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00037	8d 14 06	 lea	 edx, DWORD PTR [esi+eax]
  0003a	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  0003f	50		 push	 eax
  00040	8d 4a 77	 lea	 ecx, DWORD PTR [edx+119]
  00043	51		 push	 ecx
  00044	83 c2 6c	 add	 edx, 108		; 0000006cH
  00047	52		 push	 edx
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00053	83 c4 10	 add	 esp, 16			; 00000010H
  00056	5f		 pop	 edi

; 736  : 		
; 737  : 		return 3;

  00057	b8 03 00 00 00	 mov	 eax, 3
  0005c	5e		 pop	 esi

; 749  : }

  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN2@CheckEnter:

; 738  : 	}
; 739  : 
; 740  : 	if ( gObj[iUserIndex].MapNumber != MAP_INDEX_RAKLION_BOSS ) 

  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00067	03 d6		 add	 edx, esi
  00069	53		 push	 ebx
  0006a	8a 9a 49 01 00
	00		 mov	 bl, BYTE PTR [edx+329]
  00070	80 fb 3a	 cmp	 bl, 58			; 0000003aH
  00073	74 2c		 je	 SHORT $LN1@CheckEnter

; 741  : 	{
; 742  : 		LogAddTD("[ RAKLION ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] State(%d)",
; 743  : 			gObj[iUserIndex].MapNumber, gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,this->GetRaklionState());

  00075	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  0007a	50		 push	 eax
  0007b	8d 42 77	 lea	 eax, DWORD PTR [edx+119]
  0007e	50		 push	 eax
  0007f	83 c2 6c	 add	 edx, 108		; 0000006cH
  00082	0f b6 cb	 movzx	 ecx, bl
  00085	52		 push	 edx
  00086	51		 push	 ecx
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00092	83 c4 14	 add	 esp, 20			; 00000014H
  00095	5b		 pop	 ebx
  00096	5f		 pop	 edi

; 744  : 
; 745  : 		return 4;

  00097	b8 04 00 00 00	 mov	 eax, 4
  0009c	5e		 pop	 esi

; 749  : }

  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
$LN1@CheckEnter:
  000a1	5b		 pop	 ebx
  000a2	5f		 pop	 edi

; 746  : 	}
; 747  : 	
; 748  : 	return 0;

  000a3	33 c0		 xor	 eax, eax
  000a5	5e		 pop	 esi

; 749  : }

  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?CheckEnterRaklion@CRaklion@@QAEHH@Z ENDP		; CRaklion::CheckEnterRaklion
_TEXT	ENDS
PUBLIC	?OperateGmCommand@CRaklion@@QAEXHH@Z		; CRaklion::OperateGmCommand
; Function compile flags: /Ogtp
;	COMDAT ?OperateGmCommand@CRaklion@@QAEXHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
_iCommand$ = 12						; size = 4
?OperateGmCommand@CRaklion@@QAEXHH@Z PROC		; CRaklion::OperateGmCommand, COMDAT
; _this$ = ecx

; 753  : 	return;
; 754  : 	//
; 755  : }

  00000	c2 08 00	 ret	 8
?OperateGmCommand@CRaklion@@QAEXHH@Z ENDP		; CRaklion::OperateGmCommand
_TEXT	ENDS
PUBLIC	??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@ ; `string'
PUBLIC	??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@ ; `string'
PUBLIC	?UserMonsterCountCheck@CRaklion@@QAEXXZ		; CRaklion::UserMonsterCountCheck
EXTRN	?Output@CLogToFile@@QAAXPADZZ:PROC		; CLogToFile::Output
;	COMDAT ??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@
CONST	SEGMENT
??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@ DB '['
	DB	' RAKLION ][ Debug ] 4. Monster Info %s(%d/ObjIndex:%d) [%d]%d'
	DB	'-%d HP:%0.1f IsAlive:%d Connected:%d State:%d ActState:Attack'
	DB	'(%d)/Move(%d) DieRegen:%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@
CONST	SEGMENT
??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@ DB '['
	DB	' RAKLION ][ Debug ] 2. All User Check:%d/(Die:%d)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UserMonsterCountCheck@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?UserMonsterCountCheck@CRaklion@@QAEXXZ PROC		; CRaklion::UserMonsterCountCheck, COMDAT
; _this$ = ecx

; 762  : 	int iUserCount_Live = 0;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	33 f6		 xor	 esi, esi
  00009	57		 push	 edi

; 763  : 	int iUserCount_Die = 0;

  0000a	33 d2		 xor	 edx, edx
  0000c	05 68 a7 40 09	 add	 eax, 155232104		; 0940a768H
  00011	bf c8 00 00 00	 mov	 edi, 200		; 000000c8H
  00016	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00019	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  0001c	8d 64 24 00	 npad	 4
$LL11@UserMonste:

; 766  : 	{
; 767  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 768  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 769  : 			 (gObj[iAllUserCount].Authority&2) != 2 )

  00020	80 b8 e1 00 00
	00 3a		 cmp	 BYTE PTR [eax+225], 58	; 0000003aH
  00027	75 18		 jne	 SHORT $LN10@UserMonste
  00029	66 39 08	 cmp	 WORD PTR [eax], cx
  0002c	75 13		 jne	 SHORT $LN10@UserMonste
  0002e	84 98 a4 01 00
	00		 test	 BYTE PTR [eax+420], bl
  00034	75 0b		 jne	 SHORT $LN10@UserMonste

; 770  : 		{
; 771  : 			if ( gObj[iAllUserCount].Live == TRUE )

  00036	38 48 02	 cmp	 BYTE PTR [eax+2], cl
  00039	75 04		 jne	 SHORT $LN7@UserMonste

; 772  : 			{
; 773  : 				iUserCount_Live++;

  0003b	03 f1		 add	 esi, ecx

; 774  : 			}
; 775  : 			else

  0003d	eb 02		 jmp	 SHORT $LN10@UserMonste
$LN7@UserMonste:

; 776  : 			{
; 777  : 				iUserCount_Die++;

  0003f	03 d1		 add	 edx, ecx
$LN10@UserMonste:

; 766  : 	{
; 767  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 768  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 769  : 			 (gObj[iAllUserCount].Authority&2) != 2 )

  00041	80 b8 31 2c 00
	00 3a		 cmp	 BYTE PTR [eax+11313], 58 ; 0000003aH
  00048	75 1f		 jne	 SHORT $LN20@UserMonste
  0004a	66 39 88 50 2b
	00 00		 cmp	 WORD PTR [eax+11088], cx
  00051	75 16		 jne	 SHORT $LN20@UserMonste
  00053	84 98 f4 2c 00
	00		 test	 BYTE PTR [eax+11508], bl
  00059	75 0e		 jne	 SHORT $LN20@UserMonste

; 770  : 		{
; 771  : 			if ( gObj[iAllUserCount].Live == TRUE )

  0005b	38 88 52 2b 00
	00		 cmp	 BYTE PTR [eax+11090], cl
  00061	75 04		 jne	 SHORT $LN19@UserMonste

; 772  : 			{
; 773  : 				iUserCount_Live++;

  00063	03 f1		 add	 esi, ecx

; 774  : 			}
; 775  : 			else

  00065	eb 02		 jmp	 SHORT $LN20@UserMonste
$LN19@UserMonste:

; 776  : 			{
; 777  : 				iUserCount_Die++;

  00067	03 d1		 add	 edx, ecx
$LN20@UserMonste:

; 766  : 	{
; 767  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 768  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 769  : 			 (gObj[iAllUserCount].Authority&2) != 2 )

  00069	80 b8 81 57 00
	00 3a		 cmp	 BYTE PTR [eax+22401], 58 ; 0000003aH
  00070	75 1f		 jne	 SHORT $LN22@UserMonste
  00072	66 39 88 a0 56
	00 00		 cmp	 WORD PTR [eax+22176], cx
  00079	75 16		 jne	 SHORT $LN22@UserMonste
  0007b	84 98 44 58 00
	00		 test	 BYTE PTR [eax+22596], bl
  00081	75 0e		 jne	 SHORT $LN22@UserMonste

; 770  : 		{
; 771  : 			if ( gObj[iAllUserCount].Live == TRUE )

  00083	38 88 a2 56 00
	00		 cmp	 BYTE PTR [eax+22178], cl
  00089	75 04		 jne	 SHORT $LN21@UserMonste

; 772  : 			{
; 773  : 				iUserCount_Live++;

  0008b	03 f1		 add	 esi, ecx

; 774  : 			}
; 775  : 			else

  0008d	eb 02		 jmp	 SHORT $LN22@UserMonste
$LN21@UserMonste:

; 776  : 			{
; 777  : 				iUserCount_Die++;

  0008f	03 d1		 add	 edx, ecx
$LN22@UserMonste:

; 766  : 	{
; 767  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 768  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 769  : 			 (gObj[iAllUserCount].Authority&2) != 2 )

  00091	80 b8 d1 82 00
	00 3a		 cmp	 BYTE PTR [eax+33489], 58 ; 0000003aH
  00098	75 1f		 jne	 SHORT $LN24@UserMonste
  0009a	66 39 88 f0 81
	00 00		 cmp	 WORD PTR [eax+33264], cx
  000a1	75 16		 jne	 SHORT $LN24@UserMonste
  000a3	84 98 94 83 00
	00		 test	 BYTE PTR [eax+33684], bl
  000a9	75 0e		 jne	 SHORT $LN24@UserMonste

; 770  : 		{
; 771  : 			if ( gObj[iAllUserCount].Live == TRUE )

  000ab	38 88 f2 81 00
	00		 cmp	 BYTE PTR [eax+33266], cl
  000b1	75 04		 jne	 SHORT $LN23@UserMonste

; 772  : 			{
; 773  : 				iUserCount_Live++;

  000b3	03 f1		 add	 esi, ecx

; 774  : 			}
; 775  : 			else

  000b5	eb 02		 jmp	 SHORT $LN24@UserMonste
$LN23@UserMonste:

; 776  : 			{
; 777  : 				iUserCount_Die++;

  000b7	03 d1		 add	 edx, ecx
$LN24@UserMonste:

; 766  : 	{
; 767  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 768  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 769  : 			 (gObj[iAllUserCount].Authority&2) != 2 )

  000b9	80 b8 21 ae 00
	00 3a		 cmp	 BYTE PTR [eax+44577], 58 ; 0000003aH
  000c0	75 1f		 jne	 SHORT $LN26@UserMonste
  000c2	66 39 88 40 ad
	00 00		 cmp	 WORD PTR [eax+44352], cx
  000c9	75 16		 jne	 SHORT $LN26@UserMonste
  000cb	84 98 e4 ae 00
	00		 test	 BYTE PTR [eax+44772], bl
  000d1	75 0e		 jne	 SHORT $LN26@UserMonste

; 770  : 		{
; 771  : 			if ( gObj[iAllUserCount].Live == TRUE )

  000d3	38 88 42 ad 00
	00		 cmp	 BYTE PTR [eax+44354], cl
  000d9	75 04		 jne	 SHORT $LN25@UserMonste

; 772  : 			{
; 773  : 				iUserCount_Live++;

  000db	03 f1		 add	 esi, ecx

; 774  : 			}
; 775  : 			else

  000dd	eb 02		 jmp	 SHORT $LN26@UserMonste
$LN25@UserMonste:

; 776  : 			{
; 777  : 				iUserCount_Die++;

  000df	03 d1		 add	 edx, ecx
$LN26@UserMonste:

; 762  : 	int iUserCount_Live = 0;

  000e1	05 90 d8 00 00	 add	 eax, 55440		; 0000d890H

; 764  : 
; 765  : 	for ( int iAllUserCount=OBJ_STARTUSERINDZT;iAllUserCount<OBJMAX;iAllUserCount++)

  000e6	2b f9		 sub	 edi, ecx
  000e8	0f 85 32 ff ff
	ff		 jne	 $LL11@UserMonste

; 778  : 			}
; 779  : 		}
; 780  : 	}
; 781  : 
; 782  : 	RAKLION_TEST_LOG.Output("[ RAKLION ][ Debug ] 2. All User Check:%d/(Die:%d)", iUserCount_Live, iUserCount_Die);

  000ee	52		 push	 edx
  000ef	56		 push	 esi
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@
  000f5	68 00 00 00 00	 push	 OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  000fa	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00104	83 c4 10	 add	 esp, 16			; 00000010H
  00107	33 f6		 xor	 esi, esi
  00109	8d a4 24 00 00
	00 00		 npad	 7
$LL5@UserMonste:

; 787  : 	{
; 788  : 		if ( gObj[iAllMonsterCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 789  : 			 gObj[iAllMonsterCount].Connected == PLAYER_PLAYING &&
; 790  : 			 gObj[iAllMonsterCount].Type == OBJ_MONSTER )

  00110	80 bc 06 49 01
	00 00 3a	 cmp	 BYTE PTR [esi+eax+329], 58 ; 0000003aH
  00118	0f 85 a4 00 00
	00		 jne	 $LN4@UserMonste
  0011e	8b 7c 06 04	 mov	 edi, DWORD PTR [esi+eax+4]
  00122	83 ff 03	 cmp	 edi, 3
  00125	0f 85 97 00 00
	00		 jne	 $LN4@UserMonste
  0012b	66 39 5c 06 68	 cmp	 WORD PTR [esi+eax+104], bx
  00130	0f 85 8c 00 00
	00		 jne	 $LN4@UserMonste

; 791  : 		{
; 792  : 			if ( gObj[iAllMonsterCount].Class != 459 )

  00136	0f b7 94 06 b8
	00 00 00	 movzx	 edx, WORD PTR [esi+eax+184]
  0013e	b9 cb 01 00 00	 mov	 ecx, 459		; 000001cbH
  00143	66 3b d1	 cmp	 dx, cx
  00146	74 7a		 je	 SHORT $LN4@UserMonste

; 793  : 			{
; 794  : 				iMonsterCount++;
; 795  : 
; 796  : 				RAKLION_TEST_LOG.Output("[ RAKLION ][ Debug ] 4. Monster Info %s(%d/ObjIndex:%d) [%d]%d-%d HP:%0.1f IsAlive:%d Connected:%d State:%d ActState:Attack(%d)/Move(%d) DieRegen:%d",
; 797  : 					gObj[iAllMonsterCount].Name, gObj[iAllMonsterCount].Class,
; 798  : 					gObj[iAllMonsterCount].m_Index, gObj[iAllMonsterCount].MapNumber,
; 799  : 					gObj[iAllMonsterCount].X, gObj[iAllMonsterCount].Y,
; 800  : 					gObj[iAllMonsterCount].Life, gObj[iAllMonsterCount].Live,
; 801  : 					gObj[iAllMonsterCount].Connected, gObj[iAllMonsterCount].m_State,
; 802  : 					gObj[iAllMonsterCount].m_ActState.Attack, gObj[iAllMonsterCount].m_ActState.Move,
; 803  : 					gObj[iAllMonsterCount].DieRegen);

  00148	0f be 9c 06 a2
	03 00 00	 movsx	 ebx, BYTE PTR [esi+eax+930]
  00150	d9 84 06 fc 00
	00 00		 fld	 DWORD PTR [esi+eax+252]
  00157	8b 8c 06 18 02
	00 00		 mov	 ecx, DWORD PTR [esi+eax+536]
  0015e	53		 push	 ebx
  0015f	8b d9		 mov	 ebx, ecx
  00161	d1 e9		 shr	 ecx, 1
  00163	83 e1 01	 and	 ecx, 1
  00166	c1 eb 02	 shr	 ebx, 2
  00169	83 e3 01	 and	 ebx, 1
  0016c	53		 push	 ebx
  0016d	51		 push	 ecx
  0016e	8b 8c 06 20 02
	00 00		 mov	 ecx, DWORD PTR [esi+eax+544]
  00175	51		 push	 ecx
  00176	0f b6 4c 06 6a	 movzx	 ecx, BYTE PTR [esi+eax+106]
  0017b	57		 push	 edi
  0017c	51		 push	 ecx
  0017d	0f bf 8c 06 46
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+326]
  00185	83 ec 08	 sub	 esp, 8
  00188	dd 1c 24	 fstp	 QWORD PTR [esp]
  0018b	51		 push	 ecx
  0018c	0f bf 8c 06 44
	01 00 00	 movsx	 ecx, WORD PTR [esi+eax+324]
  00194	51		 push	 ecx
  00195	0f b6 8c 06 49
	01 00 00	 movzx	 ecx, BYTE PTR [esi+eax+329]
  0019d	51		 push	 ecx
  0019e	8b 0c 06	 mov	 ecx, DWORD PTR [esi+eax]
  001a1	51		 push	 ecx
  001a2	52		 push	 edx
  001a3	8d 44 06 77	 lea	 eax, DWORD PTR [esi+eax+119]
  001a7	50		 push	 eax
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@
  001ad	68 00 00 00 00	 push	 OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  001b2	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  001b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001bc	83 c4 40	 add	 esp, 64			; 00000040H
  001bf	8d 5f ff	 lea	 ebx, DWORD PTR [edi-1]
$LN4@UserMonste:

; 783  : 
; 784  : 	int iMonsterCount=0;
; 785  : 
; 786  : 	for ( int iAllMonsterCount=0;iAllMonsterCount<OBJ_STARTUSERINDZT;iAllMonsterCount++)

  001c2	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  001c8	81 fe 00 a7 40
	09		 cmp	 esi, 155232000		; 0940a700H
  001ce	0f 8c 3c ff ff
	ff		 jl	 $LL5@UserMonste

; 804  : 			}
; 805  : 		}
; 806  : 	}
; 807  : }

  001d4	5f		 pop	 edi
  001d5	5e		 pop	 esi
  001d6	5b		 pop	 ebx
  001d7	c3		 ret	 0
?UserMonsterCountCheck@CRaklion@@QAEXXZ ENDP		; CRaklion::UserMonsterCountCheck
_TEXT	ENDS
PUBLIC	??0CRaklion@@QAE@XZ				; CRaklion::CRaklion
EXTRN	??0CRaklionBattleOfSelupan@@QAE@XZ:PROC		; CRaklionBattleOfSelupan::CRaklionBattleOfSelupan
; Function compile flags: /Ogtp
;	COMDAT ??0CRaklion@@QAE@XZ
_TEXT	SEGMENT
_ltime$ = -8						; size = 8
??0CRaklion@@QAE@XZ PROC				; CRaklion::CRaklion, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0000c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRaklion@@6B@
  00012	e8 00 00 00 00	 call	 ??0CRaklionBattleOfSelupan@@QAE@XZ ; CRaklionBattleOfSelupan::CRaklionBattleOfSelupan

; 23   : 	tm *today;
; 24   : 	time_t ltime;
; 25   : 
; 26   : 	time(&ltime);

  00017	8d 45 f8	 lea	 eax, DWORD PTR _ltime$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __time64

; 27   : 	today=localtime(&ltime);

  00020	8d 4d f8	 lea	 ecx, DWORD PTR _ltime$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 __localtime64

; 28   : 	
; 29   : 	this->iYear = today->tm_year;

  00029	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0002c	89 96 14 0e 00
	00		 mov	 DWORD PTR [esi+3604], edx

; 30   : 	this->iMon = today->tm_mon;

  00032	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00035	89 8e 18 0e 00
	00		 mov	 DWORD PTR [esi+3608], ecx

; 31   : 	this->iDay = today->tm_mday;

  0003b	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0003e	83 c4 08	 add	 esp, 8

; 32   : 	this->isUsed = 0;
; 33   : 
; 34   : 	this->ClearData();

  00041	8b ce		 mov	 ecx, esi
  00043	89 96 1c 0e 00
	00		 mov	 DWORD PTR [esi+3612], edx
  00049	c7 86 10 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+3600], 0
  00053	e8 00 00 00 00	 call	 ?ClearData@CRaklion@@QAEXXZ ; CRaklion::ClearData

; 35   : }

  00058	8b c6		 mov	 eax, esi
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??0CRaklion@@QAE@XZ ENDP				; CRaklion::CRaklion
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCRaklion@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRaklion@@UAEPAXI@Z PROC				; CRaklion::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRaklion@@UAE@XZ	; CRaklion::~CRaklion
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCRaklion@@UAEPAXI@Z ENDP				; CRaklion::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@ ; `string'
PUBLIC	?SetState_IDLE@CRaklion@@QAEXXZ			; CRaklion::SetState_IDLE
;	COMDAT ??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@
CONST	SEGMENT
??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> IDLE', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_IDLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_IDLE@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_IDLE, COMDAT
; _this$ = ecx

; 369  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 370  : 	LogAddC(7, "[ RAKLION ] State(%d) -> IDLE", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 371  : 
; 372  : 	this->SetRaklionState(RAKLION_STATE_IDLE);

  00017	6a 00		 push	 0
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00020	5e		 pop	 esi

; 373  : }

  00021	c3		 ret	 0
?SetState_IDLE@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_IDLE
_TEXT	ENDS
PUBLIC	??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	?SetState_NOTIFY_1@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_1
;	COMDAT ??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_1', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_NOTIFY_1@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_1@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_1, COMDAT
; _this$ = ecx

; 376  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 377  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_1", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 378  : 
; 379  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_1);

  00017	6a 01		 push	 1
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00020	5e		 pop	 esi

; 380  : }

  00021	c3		 ret	 0
?SetState_NOTIFY_1@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_1
_TEXT	ENDS
PUBLIC	??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ ; `string'
PUBLIC	?SetState_STANDBY@CRaklion@@QAEXXZ		; CRaklion::SetState_STANDBY
EXTRN	__imp__GetTickCount@0:PROC
;	COMDAT ??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
CONST	SEGMENT
??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ DB '['
	DB	' RAKLION ] State(%d) -> STANDBY', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_STANDBY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_STANDBY@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_STANDBY, COMDAT
; _this$ = ecx

; 383  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 384  : 	LogAddC(7, "[ RAKLION ] State(%d) -> STANDBY", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 
; 386  : 	this->m_iAppearanceMSec = GetTickCount();

  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 387  : 
; 388  : 	this->SetRaklionState(RAKLION_STATE_STANDBY);

  0001d	6a 02		 push	 2
  0001f	8b ce		 mov	 ecx, esi
  00021	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00024	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00029	5e		 pop	 esi

; 389  : }

  0002a	c3		 ret	 0
?SetState_STANDBY@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_STANDBY
_TEXT	ENDS
PUBLIC	??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	?SetState_NOTIFY_2@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_2
EXTRN	?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ:PROC	; CRaklionUtil::SendMsgAllUser
EXTRN	?g_RaklionUtil@@3VCRaklionUtil@@A:DWORD		; g_RaklionUtil
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
;	COMDAT ??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_2', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_NOTIFY_2@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_2@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_2, COMDAT
; _this$ = ecx

; 392  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 393  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_2", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 394  : 
; 395  : 	int iGateClosedMsg = this->m_iBossZoneCloseDelay / 60;

  00014	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00017	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0001c	f7 e9		 imul	 ecx
  0001e	03 d1		 add	 edx, ecx
  00020	c1 fa 05	 sar	 edx, 5
  00023	8b c2		 mov	 eax, edx
  00025	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	03 c2		 add	 eax, edx

; 396  : 
; 397  : 	if(iGateClosedMsg == 0)

  0002d	75 05		 jne	 SHORT $LN1@SetState_N

; 398  : 	{
; 399  : 		iGateClosedMsg = 1;

  0002f	b8 01 00 00 00	 mov	 eax, 1
$LN1@SetState_N:

; 400  : 	}
; 401  : 
; 402  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3410),iGateClosedMsg);

  00034	50		 push	 eax
  00035	68 52 0d 00 00	 push	 3410			; 00000d52H
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0003f	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  0004a	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 
; 404  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_2);

  00052	6a 03		 push	 3
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0005b	5e		 pop	 esi

; 405  : }

  0005c	c3		 ret	 0
?SetState_NOTIFY_2@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_2
_TEXT	ENDS
PUBLIC	??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@ ; `string'
PUBLIC	?SetState_READY@CRaklion@@QAEXXZ		; CRaklion::SetState_READY
EXTRN	?SetState@CRaklionBattleOfSelupan@@QAEXH@Z:PROC	; CRaklionBattleOfSelupan::SetState
;	COMDAT ??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@
CONST	SEGMENT
??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> READY', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_READY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_READY@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_READY, COMDAT
; _this$ = ecx

; 408  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 409  : 	LogAddC(7, "[ RAKLION ] State(%d) -> READY", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 410  : 	
; 411  : 	this->m_RaklionBattleOfSelupan.SetState(1);

  00017	6a 01		 push	 1
  00019	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0001c	e8 00 00 00 00	 call	 ?SetState@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetState

; 412  : 	
; 413  : 	this->SetRaklionState(RAKLION_STATE_READY);

  00021	6a 04		 push	 4
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0002a	5e		 pop	 esi

; 414  : }

  0002b	c3		 ret	 0
?SetState_READY@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_READY
_TEXT	ENDS
PUBLIC	??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@ ; `string'
PUBLIC	?SetState_START_BATTLE@CRaklion@@QAEXXZ		; CRaklion::SetState_START_BATTLE
;	COMDAT ??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@
CONST	SEGMENT
??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@ DB '['
	DB	' RAKLION ] State(%d) -> START_BATTLE', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_START_BATTLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_START_BATTLE@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_START_BATTLE, COMDAT
; _this$ = ecx

; 417  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 418  : 	LogAddC(7, "[ RAKLION ] State(%d) -> START_BATTLE", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 419  : 	
; 420  : 	this->m_iBossZoneCloseMSec = GetTickCount();

  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 421  : 	
; 422  : 	this->SetRaklionState(RAKLION_STATE_START_BATTLE);

  0001d	6a 05		 push	 5
  0001f	8b ce		 mov	 ecx, esi
  00021	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00024	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00029	5e		 pop	 esi

; 423  : }

  0002a	c3		 ret	 0
?SetState_START_BATTLE@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_START_BATTLE
_TEXT	ENDS
PUBLIC	??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	?SetState_NOTIFY_3@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_3
;	COMDAT ??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_3', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_NOTIFY_3@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_3@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_3, COMDAT
; _this$ = ecx

; 426  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 427  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_3", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 428  : 	
; 429  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3411));

  00017	68 53 0d 00 00	 push	 3411			; 00000d53H
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00021	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00026	50		 push	 eax
  00027	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  0002c	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  00031	83 c4 08	 add	 esp, 8

; 430  : 	
; 431  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_3);

  00034	6a 06		 push	 6
  00036	8b ce		 mov	 ecx, esi
  00038	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0003d	5e		 pop	 esi

; 432  : 
; 433  : }

  0003e	c3		 ret	 0
?SetState_NOTIFY_3@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_3
_TEXT	ENDS
PUBLIC	??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@ ; `string'
PUBLIC	?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ		; CRaklion::SetState_CLOSE_DOOR
;	COMDAT ??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@
CONST	SEGMENT
??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@ DB '['
	DB	' RAKLION ] State(%d) -> CLOSE_DOOR', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_CLOSE_DOOR, COMDAT
; _this$ = ecx

; 436  : {	

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 437  : 	LogAddC(7, "[ RAKLION ] State(%d) -> CLOSE_DOOR", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 438  : 
; 439  : 	this->SetRaklionState(RAKLION_STATE_CLOSE_DOOR);

  00017	6a 07		 push	 7
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00020	5e		 pop	 esi

; 440  : }

  00021	c3		 ret	 0
?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_CLOSE_DOOR
_TEXT	ENDS
PUBLIC	??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@ ; `string'
PUBLIC	?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ		; CRaklion::SetState_ALL_USER_DIE
EXTRN	?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::DeleteSummonMonster
EXTRN	?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::DeleteSelupan
;	COMDAT ??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@
CONST	SEGMENT
??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@ DB '['
	DB	' RAKLION ] State(%d) -> ALL_USER_DIE', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_ALL_USER_DIE, COMDAT
; _this$ = ecx

; 443  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 444  : 	LogAddC(7, "[ RAKLION ] State(%d) -> ALL_USER_DIE", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	57		 push	 edi
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@
  0000d	6a 07		 push	 7
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 445  : 	
; 446  : 	this->m_RaklionBattleOfSelupan.DeleteSelupan();

  00018	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0001b	e8 00 00 00 00	 call	 ?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSelupan

; 447  : 	
; 448  : 	this->m_RaklionBattleOfSelupan.DeleteSummonMonster();

  00020	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00023	e8 00 00 00 00	 call	 ?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSummonMonster

; 449  : 	
; 450  : 	this->SetRaklionState(RAKLION_STATE_ALL_USER_DIE);

  00028	6a 08		 push	 8
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi

; 451  : }

  00033	c3		 ret	 0
?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_ALL_USER_DIE
_TEXT	ENDS
PUBLIC	??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	?SetState_NOTIFY_4@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_4
EXTRN	?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z:PROC ; CRaklionUtil::NotifyRaklionSuccessValue
;	COMDAT ??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
; File e:\work\tranet_version\gs\gameserver\raklionbattleofselupan.h
CONST	SEGMENT
??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_4', 00H	; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\raklion.cpp
CONST	ENDS
;	COMDAT ?SetState_NOTIFY_4@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_4@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_4, COMDAT
; _this$ = ecx

; 454  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 455  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_4", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	57		 push	 edi
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000d	6a 07		 push	 7
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 456  : 
; 457  : 	this->m_iBossZoneOpenMSec = GetTickCount();

  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 458  : 	
; 459  : 	int iSuccesValue = this->m_RaklionBattleOfSelupan.GetSuccessValue();
; 460  : 
; 461  : 	int iGateOpen = this->m_iBossZoneOpenDelay / 60;

  0001e	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00021	8b 7e 68	 mov	 edi, DWORD PTR [esi+104]
  00024	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00027	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0002c	f7 e9		 imul	 ecx
  0002e	03 d1		 add	 edx, ecx
  00030	c1 fa 05	 sar	 edx, 5
  00033	8b c2		 mov	 eax, edx
  00035	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00038	03 c2		 add	 eax, edx

; 462  : 
; 463  : 	if(iGateOpen == 0)

  0003a	75 05		 jne	 SHORT $LN1@SetState_N@2

; 464  : 	{
; 465  : 		iGateOpen = 1;

  0003c	b8 01 00 00 00	 mov	 eax, 1
$LN1@SetState_N@2:

; 466  : 	}
; 467  : 
; 468  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3413),iGateOpen);

  00041	50		 push	 eax
  00042	68 55 0d 00 00	 push	 3413			; 00000d55H
  00047	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0004c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00057	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 469  : 	g_RaklionUtil.NotifyRaklionSuccessValue(iSuccesValue);

  0005f	57		 push	 edi
  00060	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00065	e8 00 00 00 00	 call	 ?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z ; CRaklionUtil::NotifyRaklionSuccessValue

; 470  : 
; 471  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_4);

  0006a	6a 09		 push	 9
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi

; 472  : }

  00075	c3		 ret	 0
?SetState_NOTIFY_4@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_4
_TEXT	ENDS
PUBLIC	??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ ; `string'
PUBLIC	?SetState_END@CRaklion@@QAEXXZ			; CRaklion::SetState_END
EXTRN	?ResetAllData@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::ResetAllData
;	COMDAT ??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
CONST	SEGMENT
??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> END', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetState_END@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_END@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_END, COMDAT
; _this$ = ecx

; 475  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 476  : 	LogAddC(7, "[ RAKLION ] State(%d) -> END", this->m_iRaklionState);

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	57		 push	 edi
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
  0000d	6a 07		 push	 7
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 
; 478  : 	this->m_RaklionBattleOfSelupan.DeleteSelupan();

  00018	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0001b	e8 00 00 00 00	 call	 ?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSelupan

; 479  : 	this->m_RaklionBattleOfSelupan.DeleteSummonMonster();

  00020	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00023	e8 00 00 00 00	 call	 ?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSummonMonster

; 480  : 	this->m_RaklionBattleOfSelupan.ResetAllData();

  00028	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0002b	e8 00 00 00 00	 call	 ?ResetAllData@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::ResetAllData

; 481  : 
; 482  : 	this->ClearData();

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ?ClearData@CRaklion@@QAEXXZ ; CRaklion::ClearData

; 483  : 
; 484  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3414));

  00037	68 56 0d 00 00	 push	 3414			; 00000d56H
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00041	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00046	50		 push	 eax
  00047	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  0004c	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  00051	83 c4 08	 add	 esp, 8

; 485  : 
; 486  : 	this->SetRaklionState(RAKLION_STATE_END);

  00054	6a 0a		 push	 10			; 0000000aH
  00056	8b ce		 mov	 ecx, esi
  00058	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi

; 487  : 
; 488  : 	this->BossEggRegenAll();

  0005f	e9 00 00 00 00	 jmp	 ?BossEggRegenAll@CRaklion@@QAEXXZ ; CRaklion::BossEggRegenAll
?SetState_END@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_END
_TEXT	ENDS
PUBLIC	?SetState@CRaklion@@QAEXH@Z			; CRaklion::SetState
EXTRN	?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z:PROC ; CRaklionUtil::NotifyRaklionChangeState
; Function compile flags: /Ogtp
;	COMDAT ?SetState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iRaklionState$ = 8					; size = 4
?SetState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetState, COMDAT
; _this$ = ecx

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 332  : 	switch ( iRaklionState )

  00003	8b 45 08	 mov	 eax, DWORD PTR _iRaklionState$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0000c	77 52		 ja	 SHORT $LN12@SetState
  0000e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN18@SetState[eax*4]
$LN11@SetState:

; 333  : 	{
; 334  : 	case RAKLION_STATE_IDLE:			this->SetState_IDLE();			break;

  00015	e8 00 00 00 00	 call	 ?SetState_IDLE@CRaklion@@QAEXXZ ; CRaklion::SetState_IDLE
  0001a	eb 44		 jmp	 SHORT $LN12@SetState
$LN10@SetState:

; 335  : 	case RAKLION_STATE_NOTIFY_1:		this->SetState_NOTIFY_1();		break;

  0001c	e8 00 00 00 00	 call	 ?SetState_NOTIFY_1@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_1
  00021	eb 3d		 jmp	 SHORT $LN12@SetState
$LN9@SetState:

; 336  : 	case RAKLION_STATE_STANDBY:			this->SetState_STANDBY();		break;

  00023	e8 00 00 00 00	 call	 ?SetState_STANDBY@CRaklion@@QAEXXZ ; CRaklion::SetState_STANDBY
  00028	eb 36		 jmp	 SHORT $LN12@SetState
$LN8@SetState:

; 337  : 	case RAKLION_STATE_NOTIFY_2:		this->SetState_NOTIFY_2();		break;

  0002a	e8 00 00 00 00	 call	 ?SetState_NOTIFY_2@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_2
  0002f	eb 2f		 jmp	 SHORT $LN12@SetState
$LN7@SetState:

; 338  : 	case RAKLION_STATE_READY:			this->SetState_READY();			break;

  00031	e8 00 00 00 00	 call	 ?SetState_READY@CRaklion@@QAEXXZ ; CRaklion::SetState_READY
  00036	eb 28		 jmp	 SHORT $LN12@SetState
$LN6@SetState:

; 339  : 	case RAKLION_STATE_START_BATTLE:	this->SetState_START_BATTLE();	break;

  00038	e8 00 00 00 00	 call	 ?SetState_START_BATTLE@CRaklion@@QAEXXZ ; CRaklion::SetState_START_BATTLE
  0003d	eb 21		 jmp	 SHORT $LN12@SetState
$LN5@SetState:

; 340  : 	case RAKLION_STATE_NOTIFY_3:		this->SetState_NOTIFY_3();		break;

  0003f	e8 00 00 00 00	 call	 ?SetState_NOTIFY_3@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_3
  00044	eb 1a		 jmp	 SHORT $LN12@SetState
$LN4@SetState:

; 341  : 	case RAKLION_STATE_CLOSE_DOOR:		this->SetState_CLOSE_DOOR();	break;

  00046	e8 00 00 00 00	 call	 ?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ ; CRaklion::SetState_CLOSE_DOOR
  0004b	eb 13		 jmp	 SHORT $LN12@SetState
$LN3@SetState:

; 342  : 	case RAKLION_STATE_ALL_USER_DIE:	this->SetState_ALL_USER_DIE();	break;

  0004d	e8 00 00 00 00	 call	 ?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ ; CRaklion::SetState_ALL_USER_DIE
  00052	eb 0c		 jmp	 SHORT $LN12@SetState
$LN2@SetState:

; 343  : 	case RAKLION_STATE_NOTIFY_4:		this->SetState_NOTIFY_4();		break;

  00054	e8 00 00 00 00	 call	 ?SetState_NOTIFY_4@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_4
  00059	eb 05		 jmp	 SHORT $LN12@SetState
$LN1@SetState:

; 344  : 	case RAKLION_STATE_END:				this->SetState_END();			break;

  0005b	e8 00 00 00 00	 call	 ?SetState_END@CRaklion@@QAEXXZ ; CRaklion::SetState_END
$LN12@SetState:

; 345  : 	}
; 346  : 
; 347  : 	g_RaklionUtil.NotifyRaklionChangeState(this->GetRaklionState(),this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState());

  00060	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00063	50		 push	 eax
  00064	8b ce		 mov	 ecx, esi
  00066	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  0006b	50		 push	 eax
  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00071	e8 00 00 00 00	 call	 ?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z ; CRaklionUtil::NotifyRaklionChangeState
  00076	5e		 pop	 esi

; 348  : 
; 349  : }

  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
  0007b	90		 npad	 1
$LN18@SetState:
  0007c	00 00 00 00	 DD	 $LN11@SetState
  00080	00 00 00 00	 DD	 $LN10@SetState
  00084	00 00 00 00	 DD	 $LN9@SetState
  00088	00 00 00 00	 DD	 $LN8@SetState
  0008c	00 00 00 00	 DD	 $LN7@SetState
  00090	00 00 00 00	 DD	 $LN6@SetState
  00094	00 00 00 00	 DD	 $LN5@SetState
  00098	00 00 00 00	 DD	 $LN4@SetState
  0009c	00 00 00 00	 DD	 $LN3@SetState
  000a0	00 00 00 00	 DD	 $LN2@SetState
  000a4	00 00 00 00	 DD	 $LN1@SetState
?SetState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetState
_TEXT	ENDS
PUBLIC	?SetNextState@CRaklion@@QAEXH@Z			; CRaklion::SetNextState
; Function compile flags: /Ogtp
;	COMDAT ?SetNextState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iCurrentState$ = 8					; size = 4
?SetNextState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetNextState, COMDAT
; _this$ = ecx

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 353  : 	int iNextState = iCurrentState + 1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00006	40		 inc	 eax

; 354  : 
; 355  : 	if( iNextState > 12 )

  00007	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  0000a	7e 02		 jle	 SHORT $LN1@SetNextSta

; 356  : 	{
; 357  : 		iNextState = 0;

  0000c	33 c0		 xor	 eax, eax
$LN1@SetNextSta:

; 358  : 	}
; 359  : 
; 360  : 	this->SetState(iNextState);

  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 361  : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?SetNextState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetNextState
_TEXT	ENDS
PUBLIC	?ProcState_IDLE@CRaklion@@QAEXXZ		; CRaklion::ProcState_IDLE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_IDLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_IDLE@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_IDLE, COMDAT
; _this$ = ecx

; 493  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 494  : 	if ( this->GetBossEggCount() == 0 )

  00003	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  00008	85 c0		 test	 eax, eax
  0000a	75 09		 jne	 SHORT $LN3@ProcState_

; 495  : 	{
; 496  : 		this->SetState(RAKLION_STATE_STANDBY);

  0000c	6a 02		 push	 2
  0000e	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  00013	5e		 pop	 esi

; 507  : 		}
; 508  : 	}
; 509  : }

  00014	c3		 ret	 0
$LN3@ProcState_:

; 497  : 		return;
; 498  : 	}
; 499  : 
; 500  : 	if ( this->m_iBossEggHalfChecked == 0)

  00015	83 be 08 0e 00
	00 00		 cmp	 DWORD PTR [esi+3592], 0
  0001c	75 1b		 jne	 SHORT $LN1@ProcState_

; 501  : 	{
; 502  : 		if ( this->GetBossEggCount() == this->m_iBossEggHalf )

  0001e	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  00023	3b 46 30	 cmp	 eax, DWORD PTR [esi+48]
  00026	75 11		 jne	 SHORT $LN1@ProcState_

; 503  : 		{
; 504  : 			this->SetState(RAKLION_STATE_NOTIFY_1);

  00028	6a 01		 push	 1
  0002a	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 505  : 
; 506  : 			this->m_iBossEggHalfChecked = 1;

  0002f	c7 86 08 0e 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+3592], 1
$LN1@ProcState_:
  00039	5e		 pop	 esi

; 507  : 		}
; 508  : 	}
; 509  : }

  0003a	c3		 ret	 0
?ProcState_IDLE@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_IDLE
_TEXT	ENDS
PUBLIC	?ProcState_NOTIFY_1@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_1
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NOTIFY_1@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_1@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_1, COMDAT
; _this$ = ecx

; 513  : 	this->SetState(RAKLION_STATE_IDLE);

  00000	6a 00		 push	 0
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 514  : }

  00007	c3		 ret	 0
?ProcState_NOTIFY_1@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_1
_TEXT	ENDS
PUBLIC	?ProcState_STANDBY@CRaklion@@QAEXXZ		; CRaklion::ProcState_STANDBY
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_STANDBY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_STANDBY@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_STANDBY, COMDAT
; _this$ = ecx

; 517  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 518  : 	if ( 1000 * this->m_iAppearanceDelay <= GetTickCount() - this->m_iAppearanceMSec )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0000c	2b 46 14	 sub	 eax, DWORD PTR [esi+20]
  0000f	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  00015	3b c8		 cmp	 ecx, eax
  00017	77 09		 ja	 SHORT $LN1@ProcState_@2

; 519  : 	{
; 520  : 		this->SetState(RAKLION_STATE_NOTIFY_2);

  00019	6a 03		 push	 3
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN1@ProcState_@2:
  00022	5e		 pop	 esi

; 521  : 	}
; 522  : }

  00023	c3		 ret	 0
?ProcState_STANDBY@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_STANDBY
_TEXT	ENDS
PUBLIC	?ProcState_NOTIFY_2@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_2
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NOTIFY_2@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_2@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_2, COMDAT
; _this$ = ecx

; 526  : 	this->SetState(RAKLION_STATE_READY);

  00000	6a 04		 push	 4
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 527  : }

  00007	c3		 ret	 0
?ProcState_NOTIFY_2@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_2
_TEXT	ENDS
PUBLIC	?ProcState_READY@CRaklion@@QAEXXZ		; CRaklion::ProcState_READY
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_READY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_READY@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_READY, COMDAT
; _this$ = ecx

; 531  : 	this->SetState(RAKLION_STATE_START_BATTLE);

  00000	6a 05		 push	 5
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 532  : }

  00007	c3		 ret	 0
?ProcState_READY@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_READY
_TEXT	ENDS
PUBLIC	?ProcState_START_BATTLE@CRaklion@@QAEXXZ	; CRaklion::ProcState_START_BATTLE
EXTRN	?Run@CRaklionBattleOfSelupan@@QAEXXZ:PROC	; CRaklionBattleOfSelupan::Run
EXTRN	?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::SelupanLifeCheck
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_START_BATTLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_START_BATTLE@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_START_BATTLE, COMDAT
; _this$ = ecx

; 535  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 536  : 	if ( 1000 * this->m_iBossZoneCloseDelay < GetTickCount() - this->m_iBossZoneCloseMSec )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0000c	2b 46 18	 sub	 eax, DWORD PTR [esi+24]
  0000f	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  00015	3b c8		 cmp	 ecx, eax
  00017	73 09		 jae	 SHORT $LN1@ProcState_@3

; 537  : 	{
; 538  : 		this->SetState(RAKLION_STATE_NOTIFY_3);

  00019	6a 06		 push	 6
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN1@ProcState_@3:

; 539  : 	}
; 540  : 
; 541  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  00022	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00025	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 542  : 
; 543  : 	this->m_RaklionBattleOfSelupan.Run();

  0002a	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0002d	5e		 pop	 esi
  0002e	e9 00 00 00 00	 jmp	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run
?ProcState_START_BATTLE@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_START_BATTLE
_TEXT	ENDS
PUBLIC	?ProcState_NOTIFY_3@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_3
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NOTIFY_3@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_3@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_3, COMDAT
; _this$ = ecx

; 547  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 548  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  00004	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00007	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 549  : 
; 550  : 	this->m_RaklionBattleOfSelupan.Run();

  0000c	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0000f	e8 00 00 00 00	 call	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run

; 551  : 
; 552  : 	this->SetState(RAKLION_STATE_CLOSE_DOOR);

  00014	6a 07		 push	 7
  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi

; 553  : }

  0001f	c3		 ret	 0
?ProcState_NOTIFY_3@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_3
_TEXT	ENDS
PUBLIC	?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ		; CRaklion::ProcState_CLOSE_DOOR
EXTRN	?CheckBattleUsers@CRaklionBattleUserMng@@QAEHXZ:PROC ; CRaklionBattleUserMng::CheckBattleUsers
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_CLOSE_DOOR, COMDAT
; _this$ = ecx

; 556  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 557  : 	if ( g_RaklionBattleUserMng.CheckBattleUsers() == 1)

  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  00008	e8 00 00 00 00	 call	 ?CheckBattleUsers@CRaklionBattleUserMng@@QAEHXZ ; CRaklionBattleUserMng::CheckBattleUsers
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 12		 jne	 SHORT $LN2@ProcState_@4

; 558  : 	{
; 559  : 		this->m_RaklionBattleOfSelupan.SetSuccessValue(FALSE);
; 560  : 		this->SetState(RAKLION_STATE_ALL_USER_DIE);

  00012	6a 08		 push	 8

; 565  : 	{
; 566  : 		this->m_RaklionBattleOfSelupan.SetSuccessValue(TRUE);
; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  00014	8b ce		 mov	 ecx, esi
  00016	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
  0001d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  00022	5e		 pop	 esi

; 573  : 
; 574  : 
; 575  : }

  00023	c3		 ret	 0
$LN2@ProcState_@4:

; 561  : 		return;
; 562  : 	}		
; 563  : 
; 564  : 	if ( this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState() == 9 )

  00024	83 7e 40 09	 cmp	 DWORD PTR [esi+64], 9
  00028	75 12		 jne	 SHORT $LN1@ProcState_@4

; 565  : 	{
; 566  : 		this->m_RaklionBattleOfSelupan.SetSuccessValue(TRUE);
; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  0002a	6a 09		 push	 9
  0002c	8b ce		 mov	 ecx, esi
  0002e	c7 46 68 01 00
	00 00		 mov	 DWORD PTR [esi+104], 1
  00035	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  0003a	5e		 pop	 esi

; 573  : 
; 574  : 
; 575  : }

  0003b	c3		 ret	 0
$LN1@ProcState_@4:

; 568  : 		return;
; 569  : 	}
; 570  : 	
; 571  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  0003c	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0003f	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 572  : 	this->m_RaklionBattleOfSelupan.Run();

  00044	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00047	5e		 pop	 esi
  00048	e9 00 00 00 00	 jmp	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run
?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_CLOSE_DOOR
_TEXT	ENDS
PUBLIC	?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ	; CRaklion::ProcState_ALL_USER_DIE
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_ALL_USER_DIE, COMDAT
; _this$ = ecx

; 579  : 	this->SetState(RAKLION_STATE_NOTIFY_4);

  00000	6a 09		 push	 9
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 580  : }

  00007	c3		 ret	 0
?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_ALL_USER_DIE
_TEXT	ENDS
PUBLIC	?ProcState_NOTIFY_4@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_4
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_NOTIFY_4@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_4@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_4, COMDAT
; _this$ = ecx

; 583  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 584  : 	if ( 1000 * this->m_iBossZoneOpenDelay < GetTickCount() - this->m_iBossZoneOpenMSec )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0000c	2b 46 1c	 sub	 eax, DWORD PTR [esi+28]
  0000f	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  00015	3b c8		 cmp	 ecx, eax
  00017	73 09		 jae	 SHORT $LN1@ProcState_@5

; 585  : 	{
; 586  : 		this->SetState(RAKLION_STATE_END);

  00019	6a 0a		 push	 10			; 0000000aH
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN1@ProcState_@5:
  00022	5e		 pop	 esi

; 587  : 	}
; 588  : }

  00023	c3		 ret	 0
?ProcState_NOTIFY_4@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_4
_TEXT	ENDS
PUBLIC	?ProcState_END@CRaklion@@QAEXXZ			; CRaklion::ProcState_END
; Function compile flags: /Ogtp
;	COMDAT ?ProcState_END@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_END@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_END, COMDAT
; _this$ = ecx

; 592  : 	this->SetState(RAKLION_STATE_IDLE);

  00000	6a 00		 push	 0
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 593  : }

  00007	c3		 ret	 0
?ProcState_END@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_END
_TEXT	ENDS
PUBLIC	??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@ ; `string'
PUBLIC	?Run@CRaklion@@QAEXXZ				; CRaklion::Run
EXTRN	?CheckUserState@CRaklionBattleUserMng@@QAEXXZ:PROC ; CRaklionBattleUserMng::CheckUserState
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
;	COMDAT ??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
CONST	SEGMENT
??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@ DB '['
	DB	'RAKLION][IsInRaklionEvent] %d/%d/%d %dth User : %s (%s)', 00H ; `string'
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\raklion.cpp
CONST	ENDS
;	COMDAT ?Run@CRaklion@@QAEXXZ
_TEXT	SEGMENT
_Time$ = -12						; size = 8
_loc2$ = -4						; size = 4
?Run@CRaklion@@QAEXXZ PROC				; CRaklion::Run, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 271  : 	int loc2 = 0; //loc2
; 272  : 
; 273  : 	time_t Time; //loc3
; 274  : 	tm *today; //loc4
; 275  : 
; 276  : 	time(&Time);

  00008	8d 45 f4	 lea	 eax, DWORD PTR _Time$[ebp]
  0000b	57		 push	 edi
  0000c	33 f6		 xor	 esi, esi
  0000e	50		 push	 eax
  0000f	8b d9		 mov	 ebx, ecx
  00011	89 75 fc	 mov	 DWORD PTR _loc2$[ebp], esi
  00014	e8 00 00 00 00	 call	 __time64

; 277  : 	today = localtime(&Time);

  00019	8d 4d f4	 lea	 ecx, DWORD PTR _Time$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 __localtime64
  00022	8b f8		 mov	 edi, eax

; 278  : 
; 279  : 	if( this->iDay != today->tm_mday ||
; 280  : 		this->iMon != today->tm_mon ||
; 281  : 		this->iYear != today->tm_year)

  00024	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00027	83 c4 08	 add	 esp, 8
  0002a	39 83 1c 0e 00
	00		 cmp	 DWORD PTR [ebx+3612], eax
  00030	75 16		 jne	 SHORT $LN22@Run
  00032	8b 93 18 0e 00
	00		 mov	 edx, DWORD PTR [ebx+3608]
  00038	3b 57 10	 cmp	 edx, DWORD PTR [edi+16]
  0003b	75 0b		 jne	 SHORT $LN22@Run
  0003d	8b 8b 14 0e 00
	00		 mov	 ecx, DWORD PTR [ebx+3604]
  00043	3b 4f 14	 cmp	 ecx, DWORD PTR [edi+20]
  00046	74 1e		 je	 SHORT $LN23@Run
$LN22@Run:

; 282  : 	{
; 283  : 		this->iDay = today->tm_mday;

  00048	89 83 1c 0e 00
	00		 mov	 DWORD PTR [ebx+3612], eax

; 284  : 		this->iMon = today->tm_mon;

  0004e	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00051	89 93 18 0e 00
	00		 mov	 DWORD PTR [ebx+3608], edx

; 285  : 		this->iYear = today->tm_year;

  00057	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  0005a	89 83 14 0e 00
	00		 mov	 DWORD PTR [ebx+3604], eax

; 286  : 		this->isUsed = 0;

  00060	89 b3 10 0e 00
	00		 mov	 DWORD PTR [ebx+3600], esi
$LN23@Run:

; 287  : 	}
; 288  : 	
; 289  : 	if(this->isUsed == 0 && !today->tm_hour && !today->tm_min && !today->tm_sec)

  00066	39 b3 10 0e 00
	00		 cmp	 DWORD PTR [ebx+3600], esi
  0006c	0f 85 9d 00 00
	00		 jne	 $LN21@Run
  00072	39 77 08	 cmp	 DWORD PTR [edi+8], esi
  00075	0f 85 94 00 00
	00		 jne	 $LN21@Run
  0007b	39 77 04	 cmp	 DWORD PTR [edi+4], esi
  0007e	0f 85 8b 00 00
	00		 jne	 $LN21@Run
  00084	39 37		 cmp	 DWORD PTR [edi], esi
  00086	0f 85 83 00 00
	00		 jne	 $LN21@Run

; 290  : 	{
; 291  : 		for ( int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00091	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00096	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL20@Run:

; 292  : 		{
; 293  : 			if(gObj[i].MapNumber == MAP_INDEX_RAKLION || gObj[i].MapNumber == MAP_INDEX_RAKLION_BOSS)

  000a0	8a 8c 06 49 01
	00 00		 mov	 cl, BYTE PTR [esi+eax+329]
  000a7	80 f9 39	 cmp	 cl, 57			; 00000039H
  000aa	74 05		 je	 SHORT $LN16@Run
  000ac	80 f9 3a	 cmp	 cl, 58			; 0000003aH
  000af	75 46		 jne	 SHORT $LN19@Run
$LN16@Run:

; 294  : 			{
; 295  : 				if(gObj[i].Connected == PLAYER_PLAYING && gObj[i].Type == OBJ_USER)

  000b1	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  000b6	75 3f		 jne	 SHORT $LN19@Run
  000b8	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  000be	75 37		 jne	 SHORT $LN19@Run

; 296  : 				{
; 297  : 					loc2++;

  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _loc2$[ebp]

; 298  : 					LogAdd("[RAKLION][IsInRaklionEvent] %d/%d/%d %dth User : %s (%s)",
; 299  : 						today->tm_year+1900,today->tm_mon+1,today->tm_mday,loc2,gObj[i].Name,gObj[i].AccountID);

  000c3	8d 54 06 6c	 lea	 edx, DWORD PTR [esi+eax+108]
  000c7	52		 push	 edx
  000c8	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  000cb	8d 44 06 77	 lea	 eax, DWORD PTR [esi+eax+119]
  000cf	50		 push	 eax
  000d0	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  000d3	41		 inc	 ecx
  000d4	51		 push	 ecx
  000d5	89 4d fc	 mov	 DWORD PTR _loc2$[ebp], ecx
  000d8	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000db	51		 push	 ecx
  000dc	42		 inc	 edx
  000dd	52		 push	 edx
  000de	05 6c 07 00 00	 add	 eax, 1900		; 0000076cH
  000e3	50		 push	 eax
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000f4	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN19@Run:

; 290  : 	{
; 291  : 		for ( int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  000f7	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  000fd	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00103	7c 9b		 jl	 SHORT $LL20@Run

; 300  : 				}
; 301  : 			}
; 302  : 		}
; 303  : 		this->isUsed = 1;

  00105	c7 83 10 0e 00
	00 01 00 00 00	 mov	 DWORD PTR [ebx+3600], 1
$LN21@Run:

; 304  : 	}
; 305  : 
; 306  : 	if ( !this->IsRaklionEnable() )

  0010f	8b cb		 mov	 ecx, ebx
  00111	e8 00 00 00 00	 call	 ?IsRaklionEnable@CRaklion@@QAEHXZ ; CRaklion::IsRaklionEnable
  00116	85 c0		 test	 eax, eax
  00118	0f 84 b5 00 00
	00		 je	 $LN12@Run

; 307  : 		return;
; 308  : 
; 309  : 	this->CheckUserOnRaklionBossMap();

  0011e	e8 00 00 00 00	 call	 ?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ ; CRaklion::CheckUserOnRaklionBossMap

; 310  : 
; 311  : 	g_RaklionBattleUserMng.CheckUserState();

  00123	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  00128	e8 00 00 00 00	 call	 ?CheckUserState@CRaklionBattleUserMng@@QAEXXZ ; CRaklionBattleUserMng::CheckUserState

; 312  : 
; 313  : 	switch ( this->m_iRaklionState )

  0012d	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00130	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00133	0f 87 9a 00 00
	00		 ja	 $LN12@Run
  00139	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN32@Run[eax*4]
$LN11@Run:

; 314  : 	{
; 315  : 	case RAKLION_STATE_IDLE:			this->ProcState_IDLE();			break;

  00140	8b cb		 mov	 ecx, ebx
  00142	e8 00 00 00 00	 call	 ?ProcState_IDLE@CRaklion@@QAEXXZ ; CRaklion::ProcState_IDLE
  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c3		 ret	 0
$LN10@Run:

; 316  : 	case RAKLION_STATE_NOTIFY_1:		this->ProcState_NOTIFY_1();		break;

  0014e	8b cb		 mov	 ecx, ebx
  00150	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_1@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_1
  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c3		 ret	 0
$LN9@Run:

; 317  : 	case RAKLION_STATE_STANDBY:			this->ProcState_STANDBY();		break;

  0015c	8b cb		 mov	 ecx, ebx
  0015e	e8 00 00 00 00	 call	 ?ProcState_STANDBY@CRaklion@@QAEXXZ ; CRaklion::ProcState_STANDBY
  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c3		 ret	 0
$LN8@Run:

; 318  : 	case RAKLION_STATE_NOTIFY_2:		this->ProcState_NOTIFY_2();		break;

  0016a	8b cb		 mov	 ecx, ebx
  0016c	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_2@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_2
  00171	5f		 pop	 edi
  00172	5e		 pop	 esi
  00173	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c3		 ret	 0
$LN7@Run:

; 319  : 	case RAKLION_STATE_READY:			this->ProcState_READY();		break;

  00178	8b cb		 mov	 ecx, ebx
  0017a	e8 00 00 00 00	 call	 ?ProcState_READY@CRaklion@@QAEXXZ ; CRaklion::ProcState_READY
  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c3		 ret	 0
$LN6@Run:

; 320  : 	case RAKLION_STATE_START_BATTLE:	this->ProcState_START_BATTLE();	break;

  00186	8b cb		 mov	 ecx, ebx
  00188	e8 00 00 00 00	 call	 ?ProcState_START_BATTLE@CRaklion@@QAEXXZ ; CRaklion::ProcState_START_BATTLE
  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
$LN5@Run:

; 321  : 	case RAKLION_STATE_NOTIFY_3:		this->ProcState_NOTIFY_3();		break;

  00194	8b cb		 mov	 ecx, ebx
  00196	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_3@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_3
  0019b	5f		 pop	 edi
  0019c	5e		 pop	 esi
  0019d	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c3		 ret	 0
$LN4@Run:

; 322  : 	case RAKLION_STATE_CLOSE_DOOR:		this->ProcState_CLOSE_DOOR();	break;

  001a2	8b cb		 mov	 ecx, ebx
  001a4	e8 00 00 00 00	 call	 ?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ ; CRaklion::ProcState_CLOSE_DOOR
  001a9	5f		 pop	 edi
  001aa	5e		 pop	 esi
  001ab	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  001ac	8b e5		 mov	 esp, ebp
  001ae	5d		 pop	 ebp
  001af	c3		 ret	 0
$LN3@Run:

; 323  : 	case RAKLION_STATE_ALL_USER_DIE:	this->ProcState_ALL_USER_DIE();	break;

  001b0	8b cb		 mov	 ecx, ebx
  001b2	e8 00 00 00 00	 call	 ?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ ; CRaklion::ProcState_ALL_USER_DIE
  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c3		 ret	 0
$LN2@Run:

; 324  : 	case RAKLION_STATE_NOTIFY_4:		this->ProcState_NOTIFY_4();		break;

  001be	8b cb		 mov	 ecx, ebx
  001c0	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_4@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_4
  001c5	5f		 pop	 edi
  001c6	5e		 pop	 esi
  001c7	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  001c8	8b e5		 mov	 esp, ebp
  001ca	5d		 pop	 ebp
  001cb	c3		 ret	 0
$LN1@Run:

; 325  : 	case RAKLION_STATE_END:				this->ProcState_END();			break;

  001cc	8b cb		 mov	 ecx, ebx
  001ce	e8 00 00 00 00	 call	 ?ProcState_END@CRaklion@@QAEXXZ ; CRaklion::ProcState_END
$LN12@Run:
  001d3	5f		 pop	 edi
  001d4	5e		 pop	 esi
  001d5	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  001d6	8b e5		 mov	 esp, ebp
  001d8	5d		 pop	 ebp
  001d9	c3		 ret	 0
  001da	8b ff		 npad	 2
$LN32@Run:
  001dc	00 00 00 00	 DD	 $LN11@Run
  001e0	00 00 00 00	 DD	 $LN10@Run
  001e4	00 00 00 00	 DD	 $LN9@Run
  001e8	00 00 00 00	 DD	 $LN8@Run
  001ec	00 00 00 00	 DD	 $LN7@Run
  001f0	00 00 00 00	 DD	 $LN6@Run
  001f4	00 00 00 00	 DD	 $LN5@Run
  001f8	00 00 00 00	 DD	 $LN4@Run
  001fc	00 00 00 00	 DD	 $LN3@Run
  00200	00 00 00 00	 DD	 $LN2@Run
  00204	00 00 00 00	 DD	 $LN1@Run
?Run@CRaklion@@QAEXXZ ENDP				; CRaklion::Run
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_Raklion@@YAXXZ
text$yc	SEGMENT
??__Eg_Raklion@@YAXXZ PROC				; `dynamic initializer for 'g_Raklion'', COMDAT

; 19   : CRaklion g_Raklion;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  00005	e8 00 00 00 00	 call	 ??0CRaklion@@QAE@XZ	; CRaklion::CRaklion
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_Raklion@@YAXXZ ; `dynamic atexit destructor for 'g_Raklion''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_Raklion@@YAXXZ ENDP				; `dynamic initializer for 'g_Raklion''
text$yc	ENDS
PUBLIC	??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@	; `string'
PUBLIC	??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@	; `string'
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
;	COMDAT ??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@ DB 'RAKLION_TEST_LOG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@ DB '.\RAKLION_TEST_LOG', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??__ERAKLION_TEST_LOG@@YAXXZ
text$yc	SEGMENT
??__ERAKLION_TEST_LOG@@YAXXZ PROC			; `dynamic initializer for 'RAKLION_TEST_LOG'', COMDAT

; 758  : CLogToFile RAKLION_TEST_LOG("RAKLION_TEST_LOG", ".\\RAKLION_TEST_LOG", TRUE);//identical

  00000	6a 01		 push	 1
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  00011	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  00016	68 00 00 00 00	 push	 OFFSET ??__FRAKLION_TEST_LOG@@YAXXZ ; `dynamic atexit destructor for 'RAKLION_TEST_LOG''
  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__ERAKLION_TEST_LOG@@YAXXZ ENDP			; `dynamic initializer for 'RAKLION_TEST_LOG''
text$yc	ENDS
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
; Function compile flags: /Ogtp
;	COMDAT ??__FRAKLION_TEST_LOG@@YAXXZ
text$yd	SEGMENT
??__FRAKLION_TEST_LOG@@YAXXZ PROC			; `dynamic atexit destructor for 'RAKLION_TEST_LOG'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  00005	e9 00 00 00 00	 jmp	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
??__FRAKLION_TEST_LOG@@YAXXZ ENDP			; `dynamic atexit destructor for 'RAKLION_TEST_LOG''
; Function compile flags: /Ogtp
text$yd	ENDS
;	COMDAT ??__Fg_Raklion@@YAXXZ
text$yd	SEGMENT
??__Fg_Raklion@@YAXXZ PROC				; `dynamic atexit destructor for 'g_Raklion'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  00005	e9 00 00 00 00	 jmp	 ??1CRaklion@@UAE@XZ	; CRaklion::~CRaklion
??__Fg_Raklion@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_Raklion''
text$yd	ENDS
PUBLIC	?RAKLION_TEST_LOG@@3VCLogToFile@@A		; RAKLION_TEST_LOG
PUBLIC	?g_Raklion@@3VCRaklion@@A			; g_Raklion
_BSS	SEGMENT
?RAKLION_TEST_LOG@@3VCLogToFile@@A DB 010228H DUP (?)	; RAKLION_TEST_LOG
?g_Raklion@@3VCRaklion@@A DB 0e20H DUP (?)		; g_Raklion
_BSS	ENDS
CRT$XCU	SEGMENT
_g_Raklion$initializer$ DD FLAT:??__Eg_Raklion@@YAXXZ
_RAKLION_TEST_LOG$initializer$ DD FLAT:??__ERAKLION_TEST_LOG@@YAXXZ
CRT$XCU	ENDS
END
