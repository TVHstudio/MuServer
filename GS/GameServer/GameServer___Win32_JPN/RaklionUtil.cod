; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\RaklionUtil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CRaklionUtil@@6B@				; CRaklionUtil::`vftable'
PUBLIC	??0CRaklionUtil@@QAE@XZ				; CRaklionUtil::CRaklionUtil
PUBLIC	??_R4CRaklionUtil@@6B@				; CRaklionUtil::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRaklionUtil@@@8			; CRaklionUtil `RTTI Type Descriptor'
PUBLIC	??_R3CRaklionUtil@@8				; CRaklionUtil::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRaklionUtil@@8				; CRaklionUtil::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRaklionUtil@@8			; CRaklionUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECRaklionUtil@@UAEPAXI@Z:PROC		; CRaklionUtil::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CRaklionUtil@@8
; File e:\work\tranet_version\gs\gameserver\raklionutil.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CRaklionUtil@@8 DD FLAT:??_R0?AVCRaklionUtil@@@8 ; CRaklionUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRaklionUtil@@8
rdata$r	ENDS
;	COMDAT ??_R2CRaklionUtil@@8
rdata$r	SEGMENT
??_R2CRaklionUtil@@8 DD FLAT:??_R1A@?0A@EA@CRaklionUtil@@8 ; CRaklionUtil::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRaklionUtil@@8
rdata$r	SEGMENT
??_R3CRaklionUtil@@8 DD 00H				; CRaklionUtil::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRaklionUtil@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRaklionUtil@@@8
_DATA	SEGMENT
??_R0?AVCRaklionUtil@@@8 DD FLAT:??_7type_info@@6B@	; CRaklionUtil `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRaklionUtil@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRaklionUtil@@6B@
rdata$r	SEGMENT
??_R4CRaklionUtil@@6B@ DD 00H				; CRaklionUtil::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRaklionUtil@@@8
	DD	FLAT:??_R3CRaklionUtil@@8
rdata$r	ENDS
;	COMDAT ??_7CRaklionUtil@@6B@
CONST	SEGMENT
??_7CRaklionUtil@@6B@ DD FLAT:??_R4CRaklionUtil@@6B@	; CRaklionUtil::`vftable'
	DD	FLAT:??_ECRaklionUtil@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CRaklionUtil@@QAE@XZ
_TEXT	SEGMENT
??0CRaklionUtil@@QAE@XZ PROC				; CRaklionUtil::CRaklionUtil, COMDAT
; _this$ = ecx

; 19   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRaklionUtil@@6B@

; 20   : 
; 21   : }

  00008	c3		 ret	 0
??0CRaklionUtil@@QAE@XZ ENDP				; CRaklionUtil::CRaklionUtil
_TEXT	ENDS
PUBLIC	??1CRaklionUtil@@UAE@XZ				; CRaklionUtil::~CRaklionUtil
; Function compile flags: /Ogtp
;	COMDAT ??1CRaklionUtil@@UAE@XZ
_TEXT	SEGMENT
??1CRaklionUtil@@UAE@XZ PROC				; CRaklionUtil::~CRaklionUtil, COMDAT
; _this$ = ecx

; 24   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRaklionUtil@@6B@

; 25   : 
; 26   : }

  00006	c3		 ret	 0
??1CRaklionUtil@@UAE@XZ ENDP				; CRaklionUtil::~CRaklionUtil
_TEXT	ENDS
PUBLIC	?NotifyRaklionCurrentState@CRaklionUtil@@QAEXHEE@Z ; CRaklionUtil::NotifyRaklionCurrentState
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
; Function compile flags: /Ogtp
;	COMDAT ?NotifyRaklionCurrentState@CRaklionUtil@@QAEXHEE@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 6
_iIndex$ = 8						; size = 4
_btState$ = 12						; size = 1
_btDetailState$ = 16					; size = 1
?NotifyRaklionCurrentState@CRaklionUtil@@QAEXHEE@Z PROC	; CRaklionUtil::NotifyRaklionCurrentState, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 57   : 	PMSG_ANS_RAKLION_CURRENT_STATE pMsg = {0};

  00006	33 c0		 xor	 eax, eax

; 58   : 
; 59   : 	PHeadSubSetB((LPBYTE)&pMsg, 0xD1, 0x11, sizeof(pMsg));

  00008	6a 06		 push	 6
  0000a	6a 11		 push	 17			; 00000011H
  0000c	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp], al
  0000f	89 45 f9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00012	88 45 fd	 mov	 BYTE PTR _pMsg$[ebp+5], al
  00015	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00018	68 d1 00 00 00	 push	 209			; 000000d1H
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 60   : 	pMsg.btCurrentState = btState;

  00023	8a 4d 0c	 mov	 cl, BYTE PTR _btState$[ebp]

; 61   : 	pMsg.btCurrentDetailState = btDetailState;

  00026	8a 55 10	 mov	 dl, BYTE PTR _btDetailState$[ebp]

; 62   : 
; 63   : 	DataSend(iIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  00029	6a 06		 push	 6
  0002b	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0002e	88 4d fc	 mov	 BYTE PTR _pMsg$[ebp+4], cl
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00034	50		 push	 eax
  00035	51		 push	 ecx
  00036	88 55 fd	 mov	 BYTE PTR _pMsg$[ebp+5], dl
  00039	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0003e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 64   : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 0c 00	 ret	 12			; 0000000cH
?NotifyRaklionCurrentState@CRaklionUtil@@QAEXHEE@Z ENDP	; CRaklionUtil::NotifyRaklionCurrentState
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendMsgRaklionBossMapUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgRaklionBossMapUser
EXTRN	?SendNoticeToUser@TNotice@@SAXHPAX@Z:PROC	; TNotice::SendNoticeToUser
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
EXTRN	_vsprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?SendMsgRaklionBossMapUser@CRaklionUtil@@QAAXPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMsgRaklionBossMapUser@CRaklionUtil@@QAAXPADZZ PROC	; CRaklionUtil::SendMsgRaklionBossMapUser, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 116  : 	if ( !lpszMsg )

  00014	8b 75 0c	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	0f 84 91 00 00
	00		 je	 $LN2@SendMsgRak

; 117  : 		return;
; 118  : 
; 119  : 	char szBuffer[512] = "";

  0001f	57		 push	 edi
  00020	68 ff 01 00 00	 push	 511			; 000001ffH
  00025	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002b	6a 00		 push	 0
  0002d	50		 push	 eax
  0002e	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00035	e8 00 00 00 00	 call	 _memset

; 120  : 	va_list pArguments;
; 121  : 
; 122  : 	va_start(pArguments, lpszMsg);
; 123  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  0003a	8d 4d 10	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  0003d	51		 push	 ecx
  0003e	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00044	56		 push	 esi
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 _vsprintf

; 124  : 	va_end(pArguments);
; 125  : 
; 126  : 	PMSG_NOTICE pNotice;
; 127  : 	TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  0004b	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00051	50		 push	 eax
  00052	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00058	6a 00		 push	 0
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	83 c4 24	 add	 esp, 36			; 00000024H

; 128  : 
; 129  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00068	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  0006d	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL4@SendMsgRak:

; 130  : 	{
; 131  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 132  : 			 gObj[iCount].Type == OBJ_USER &&
; 133  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLION_BOSS)

  00072	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  00077	75 27		 jne	 SHORT $LN3@SendMsgRak
  00079	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  0007f	75 1f		 jne	 SHORT $LN3@SendMsgRak
  00081	80 bc 06 49 01
	00 00 3a	 cmp	 BYTE PTR [esi+eax+329], 58 ; 0000003aH
  00089	75 15		 jne	 SHORT $LN3@SendMsgRak

; 134  : 		{
; 135  : 			TNotice::SendNoticeToUser(iCount, &pNotice);

  0008b	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00091	52		 push	 edx
  00092	57		 push	 edi
  00093	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009d	83 c4 08	 add	 esp, 8
$LN3@SendMsgRak:

; 128  : 
; 129  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  000a0	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  000a6	47		 inc	 edi
  000a7	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  000ad	7c c3		 jl	 SHORT $LL4@SendMsgRak
  000af	5f		 pop	 edi
$LN2@SendMsgRak:

; 136  : 		}
; 137  : 	}
; 138  : }

  000b0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b3	33 cd		 xor	 ecx, ebp
  000b5	5e		 pop	 esi
  000b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
?SendMsgRaklionBossMapUser@CRaklionUtil@@QAAXPADZZ ENDP	; CRaklionUtil::SendMsgRaklionBossMapUser
_TEXT	ENDS
PUBLIC	?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z ; CRaklionUtil::SendDataRaklionBossMapUser
; Function compile flags: /Ogtp
;	COMDAT ?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z PROC ; CRaklionUtil::SendDataRaklionBossMapUser, COMDAT
; _this$ = ecx

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 142  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00013	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL4@SendDataRa:

; 143  : 	{
; 144  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 145  : 			 gObj[iCount].Type == OBJ_USER &&
; 146  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLION_BOSS)

  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 25		 jne	 SHORT $LN3@SendDataRa
  0001f	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00025	75 1d		 jne	 SHORT $LN3@SendDataRa
  00027	80 bc 06 49 01
	00 00 3a	 cmp	 BYTE PTR [esi+eax+329], 58 ; 0000003aH
  0002f	75 13		 jne	 SHORT $LN3@SendDataRa

; 147  : 		{
; 148  : 			DataSend(iCount, lpMsg, iSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00034	53		 push	 ebx
  00035	50		 push	 eax
  00036	57		 push	 edi
  00037	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@SendDataRa:

; 142  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00044	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  0004a	47		 inc	 edi
  0004b	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00051	7c c5		 jl	 SHORT $LL4@SendDataRa
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx

; 149  : 		}
; 150  : 	}
; 151  : }

  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z ENDP ; CRaklionUtil::SendDataRaklionBossMapUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendMsgRaklionMapUser@CRaklionUtil@@QAAXPADZZ	; CRaklionUtil::SendMsgRaklionMapUser
; Function compile flags: /Ogtp
;	COMDAT ?SendMsgRaklionMapUser@CRaklionUtil@@QAAXPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMsgRaklionMapUser@CRaklionUtil@@QAAXPADZZ PROC	; CRaklionUtil::SendMsgRaklionMapUser, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 155  : 	if ( !lpszMsg )

  00014	8b 75 0c	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	0f 84 98 00 00
	00		 je	 $LN3@SendMsgRak@2

; 156  : 		return;
; 157  : 
; 158  : 	char szBuffer[512] = "";

  0001f	57		 push	 edi
  00020	68 ff 01 00 00	 push	 511			; 000001ffH
  00025	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002b	6a 00		 push	 0
  0002d	50		 push	 eax
  0002e	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00035	e8 00 00 00 00	 call	 _memset

; 159  : 	va_list pArguments;
; 160  : 
; 161  : 	va_start(pArguments, lpszMsg);
; 162  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  0003a	8d 4d 10	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  0003d	51		 push	 ecx
  0003e	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00044	56		 push	 esi
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 _vsprintf

; 163  : 	va_end(pArguments);
; 164  : 
; 165  : 	PMSG_NOTICE pNotice;
; 166  : 	TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  0004b	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00051	50		 push	 eax
  00052	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00058	6a 00		 push	 0
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00066	83 c4 24	 add	 esp, 36			; 00000024H

; 167  : 
; 168  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00069	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  0006e	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL5@SendMsgRak@2:

; 169  : 	{
; 170  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 171  : 			 gObj[iCount].Type == OBJ_USER &&
; 172  : 			 ( gObj[iCount].MapNumber == MAP_INDEX_RAKLION ||
; 173  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLION_BOSS) )

  00073	83 7c 0e 04 03	 cmp	 DWORD PTR [esi+ecx+4], 3
  00078	75 2d		 jne	 SHORT $LN4@SendMsgRak@2
  0007a	66 83 7c 0e 68
	01		 cmp	 WORD PTR [esi+ecx+104], 1
  00080	75 25		 jne	 SHORT $LN4@SendMsgRak@2
  00082	8a 84 0e 49 01
	00 00		 mov	 al, BYTE PTR [esi+ecx+329]
  00089	3c 39		 cmp	 al, 57			; 00000039H
  0008b	74 04		 je	 SHORT $LN1@SendMsgRak@2
  0008d	3c 3a		 cmp	 al, 58			; 0000003aH
  0008f	75 16		 jne	 SHORT $LN4@SendMsgRak@2
$LN1@SendMsgRak@2:

; 174  : 		{
; 175  : 			TNotice::SendNoticeToUser(iCount, &pNotice);

  00091	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00097	52		 push	 edx
  00098	57		 push	 edi
  00099	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a4	83 c4 08	 add	 esp, 8
$LN4@SendMsgRak@2:

; 167  : 
; 168  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  000a7	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  000ad	47		 inc	 edi
  000ae	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  000b4	7c bd		 jl	 SHORT $LL5@SendMsgRak@2
  000b6	5f		 pop	 edi
$LN3@SendMsgRak@2:

; 176  : 		}
; 177  : 	}
; 178  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	5e		 pop	 esi
  000bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?SendMsgRaklionMapUser@CRaklionUtil@@QAAXPADZZ ENDP	; CRaklionUtil::SendMsgRaklionMapUser
_TEXT	ENDS
PUBLIC	?SendDataRaklionMapUser@CRaklionUtil@@QAEXPAEH@Z ; CRaklionUtil::SendDataRaklionMapUser
; Function compile flags: /Ogtp
;	COMDAT ?SendDataRaklionMapUser@CRaklionUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendDataRaklionMapUser@CRaklionUtil@@QAEXPAEH@Z PROC	; CRaklionUtil::SendDataRaklionMapUser, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00009	53		 push	 ebx
  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00014	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL5@SendDataRa@2:

; 183  : 	{
; 184  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 185  : 			 gObj[iCount].Type == OBJ_USER &&
; 186  : 			 ( gObj[iCount].MapNumber == MAP_INDEX_RAKLION ||
; 187  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLION_BOSS ) )

  00020	83 7c 0e 04 03	 cmp	 DWORD PTR [esi+ecx+4], 3
  00025	75 2b		 jne	 SHORT $LN4@SendDataRa@2
  00027	66 83 7c 0e 68
	01		 cmp	 WORD PTR [esi+ecx+104], 1
  0002d	75 23		 jne	 SHORT $LN4@SendDataRa@2
  0002f	8a 84 0e 49 01
	00 00		 mov	 al, BYTE PTR [esi+ecx+329]
  00036	3c 39		 cmp	 al, 57			; 00000039H
  00038	74 04		 je	 SHORT $LN1@SendDataRa@2
  0003a	3c 3a		 cmp	 al, 58			; 0000003aH
  0003c	75 14		 jne	 SHORT $LN4@SendDataRa@2
$LN1@SendDataRa@2:

; 188  : 		{
; 189  : 			DataSend(iCount, lpMsg, iSize);

  0003e	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00041	53		 push	 ebx
  00042	50		 push	 eax
  00043	57		 push	 edi
  00044	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00049	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@SendDataRa@2:

; 182  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00052	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00058	47		 inc	 edi
  00059	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  0005f	7c bf		 jl	 SHORT $LL5@SendDataRa@2
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx

; 190  : 		}
; 191  : 	}
; 192  : }

  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SendDataRaklionMapUser@CRaklionUtil@@QAEXPAEH@Z ENDP	; CRaklionUtil::SendDataRaklionMapUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ		; CRaklionUtil::SendMsgAllUser
EXTRN	?SendNoticeToAllUser@TNotice@@SAXPAX@Z:PROC	; TNotice::SendNoticeToAllUser
; Function compile flags: /Ogtp
;	COMDAT ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ PROC		; CRaklionUtil::SendMsgAllUser, COMDAT

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 196  : 	if ( !lpszMsg )

  00014	8b 75 0c	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	74 4f		 je	 SHORT $LN2@SendMsgAll

; 197  : 		return;
; 198  : 
; 199  : 	char szBuffer[512] = "";

  0001b	68 ff 01 00 00	 push	 511			; 000001ffH
  00020	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00026	6a 00		 push	 0
  00028	50		 push	 eax
  00029	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00030	e8 00 00 00 00	 call	 _memset

; 200  : 	va_list pArguments;
; 201  : 
; 202  : 	va_start(pArguments, lpszMsg);
; 203  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00035	8d 4d 10	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  00038	51		 push	 ecx
  00039	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  0003f	56		 push	 esi
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 _vsprintf

; 204  : 	va_end(pArguments);
; 205  : 
; 206  : 	PMSG_NOTICE pNotice;
; 207  : 	TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00046	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0004c	50		 push	 eax
  0004d	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00053	6a 00		 push	 0
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 208  : 	
; 209  : 	TNotice::SendNoticeToAllUser(&pNotice);

  0005b	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  00067	83 c4 28	 add	 esp, 40			; 00000028H
$LN2@SendMsgAll:

; 210  : }

  0006a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006d	33 cd		 xor	 ecx, ebp
  0006f	5e		 pop	 esi
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ENDP		; CRaklionUtil::SendMsgAllUser
_TEXT	ENDS
PUBLIC	?SendDataAllUser@CRaklionUtil@@QAEXPAEH@Z	; CRaklionUtil::SendDataAllUser
; Function compile flags: /Ogtp
;	COMDAT ?SendDataAllUser@CRaklionUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendDataAllUser@CRaklionUtil@@QAEXPAEH@Z PROC		; CRaklionUtil::SendDataAllUser, COMDAT
; _this$ = ecx

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00013	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL4@SendDataAl:

; 215  : 	{
; 216  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 217  : 			 gObj[iCount].Type == OBJ_USER )

  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 1b		 jne	 SHORT $LN3@SendDataAl
  0001f	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00025	75 13		 jne	 SHORT $LN3@SendDataAl

; 218  : 		{
; 219  : 			DataSend(iCount, lpMsg, iSize);

  00027	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0002a	53		 push	 ebx
  0002b	50		 push	 eax
  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@SendDataAl:

; 214  : 	for ( int iCount=OBJ_STARTUSERINDZT;iCount<OBJMAX;iCount++)

  0003a	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00040	47		 inc	 edi
  00041	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00047	7c cf		 jl	 SHORT $LL4@SendDataAl
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 220  : 		}
; 221  : 	}
; 222  : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?SendDataAllUser@CRaklionUtil@@QAEXPAEH@Z ENDP		; CRaklionUtil::SendDataAllUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendMsgToUser@CRaklionUtil@@QAAXHPADZZ		; CRaklionUtil::SendMsgToUser
; Function compile flags: /Ogtp
;	COMDAT ?SendMsgToUser@CRaklionUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iIndex$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendMsgToUser@CRaklionUtil@@QAAXHPADZZ PROC		; CRaklionUtil::SendMsgToUser, COMDAT

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 226  : 	if ( !lpszMsg )

  00014	8b 75 10	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	74 53		 je	 SHORT $LN2@SendMsgToU

; 227  : 		return;
; 228  : 
; 229  : 	char szBuffer[512] = "";

  0001b	68 ff 01 00 00	 push	 511			; 000001ffH
  00020	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00026	6a 00		 push	 0
  00028	50		 push	 eax
  00029	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00030	e8 00 00 00 00	 call	 _memset

; 230  : 	va_list pArguments;
; 231  : 
; 232  : 	va_start(pArguments, lpszMsg);
; 233  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00035	8d 4d 14	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  00038	51		 push	 ecx
  00039	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  0003f	56		 push	 esi
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 _vsprintf

; 234  : 	va_end(pArguments);
; 235  : 
; 236  : 	PMSG_NOTICE pNotice;
; 237  : 	TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00046	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0004c	50		 push	 eax
  0004d	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00053	6a 00		 push	 0
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 238  : 	
; 239  : 	TNotice::SendNoticeToUser(iIndex, &pNotice);

  0005b	8b 45 0c	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0005e	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  0006b	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN2@SendMsgToU:

; 240  : }

  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	5e		 pop	 esi
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?SendMsgToUser@CRaklionUtil@@QAAXHPADZZ ENDP		; CRaklionUtil::SendMsgToUser
_TEXT	ENDS
PUBLIC	?SendDataToUser@CRaklionUtil@@QAEXHPAEH@Z	; CRaklionUtil::SendDataToUser
; Function compile flags: /Ogtp
;	COMDAT ?SendDataToUser@CRaklionUtil@@QAEXHPAEH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
_lpMsg$ = 12						; size = 4
_iSize$ = 16						; size = 4
?SendDataToUser@CRaklionUtil@@QAEXHPAEH@Z PROC		; CRaklionUtil::SendDataToUser, COMDAT
; _this$ = ecx

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 244  : 	if ( gObj[iIndex].Connected == PLAYER_PLAYING &&
; 245  : 		 gObj[iIndex].Type == OBJ_USER )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00006	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0000c	8b c1		 mov	 eax, ecx
  0000e	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00014	83 7c 10 04 03	 cmp	 DWORD PTR [eax+edx+4], 3
  00019	75 19		 jne	 SHORT $LN1@SendDataTo
  0001b	66 83 7c 10 68
	01		 cmp	 WORD PTR [eax+edx+104], 1
  00021	75 11		 jne	 SHORT $LN1@SendDataTo

; 246  : 	{
; 247  : 		DataSend(iIndex, lpMsg, iSize);

  00023	8b 45 10	 mov	 eax, DWORD PTR _iSize$[ebp]
  00026	8b 55 0c	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SendDataTo:

; 248  : 	}
; 249  : }

  00034	5d		 pop	 ebp
  00035	c2 0c 00	 ret	 12			; 0000000cH
?SendDataToUser@CRaklionUtil@@QAEXHPAEH@Z ENDP		; CRaklionUtil::SendDataToUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendRaklionChattingMsg@CRaklionUtil@@QAAXHPADZZ ; CRaklionUtil::SendRaklionChattingMsg
EXTRN	?GCServerMsgStringSend@TNotice@@SAXPADHE@Z:PROC	; TNotice::GCServerMsgStringSend
; Function compile flags: /Ogtp
;	COMDAT ?SendRaklionChattingMsg@CRaklionUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iIndex$ = 12						; size = 4
_lpMsg$ = 16						; size = 4
?SendRaklionChattingMsg@CRaklionUtil@@QAAXHPADZZ PROC	; CRaklionUtil::SendRaklionChattingMsg, COMDAT

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 253  : 	if ( !lpMsg )

  00014	8b 75 10	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	74 3d		 je	 SHORT $LN2@SendRaklio

; 254  : 		return;
; 255  : 
; 256  : 	char szBuffer[512]="";

  0001b	68 ff 01 00 00	 push	 511			; 000001ffH
  00020	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00026	6a 00		 push	 0
  00028	50		 push	 eax
  00029	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00030	e8 00 00 00 00	 call	 _memset

; 257  : 	
; 258  : 	va_list pArguments;
; 259  : 	
; 260  : 	va_start( pArguments,  lpMsg);	// review
; 261  : 	vsprintf(szBuffer, lpMsg, pArguments);

  00035	8d 4d 14	 lea	 ecx, DWORD PTR _lpMsg$[ebp+4]
  00038	51		 push	 ecx
  00039	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  0003f	56		 push	 esi
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 _vsprintf

; 262  : 	va_end(pArguments);
; 263  : 
; 264  : 	TNotice::GCServerMsgStringSend(lpMsg, iIndex, 1);

  00046	8b 45 0c	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00049	8b 4d 10	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  0004c	6a 01		 push	 1
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@TNotice@@SAXPADHE@Z ; TNotice::GCServerMsgStringSend
  00055	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@SendRaklio:

; 265  : }

  00058	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005b	33 cd		 xor	 ecx, ebp
  0005d	5e		 pop	 esi
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?SendRaklionChattingMsg@CRaklionUtil@@QAAXHPADZZ ENDP	; CRaklionUtil::SendRaklionChattingMsg
_TEXT	ENDS
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCRaklionUtil@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRaklionUtil@@UAEPAXI@Z PROC			; CRaklionUtil::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRaklionUtil@@UAE@XZ	; CRaklionUtil::~CRaklionUtil
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCRaklionUtil@@UAEPAXI@Z ENDP			; CRaklionUtil::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z ; CRaklionUtil::NotifyRaklionChangeState
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\raklionutil.cpp
;	COMDAT ?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 6
_iState$ = 8						; size = 4
_iDetailState$ = 12					; size = 4
?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z PROC	; CRaklionUtil::NotifyRaklionChangeState, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 30   : 	PMSG_ANS_RAKLION_STATE_CHANGE pMsg = {0};

  00007	33 c0		 xor	 eax, eax

; 31   : 
; 32   : 	PHeadSubSetB((LPBYTE)&pMsg, 0xD1, 0x12, sizeof(pMsg));

  00009	6a 06		 push	 6
  0000b	6a 12		 push	 18			; 00000012H
  0000d	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp], al
  00010	89 45 f9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00013	88 45 fd	 mov	 BYTE PTR _pMsg$[ebp+5], al
  00016	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00019	68 d1 00 00 00	 push	 209			; 000000d1H
  0001e	50		 push	 eax
  0001f	8b f1		 mov	 esi, ecx
  00021	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 33   : 	pMsg.btState = iState;

  00026	8b 45 08	 mov	 eax, DWORD PTR _iState$[ebp]

; 34   : 	pMsg.btDetailState = iDetailState;

  00029	8a 4d 0c	 mov	 cl, BYTE PTR _iDetailState$[ebp]
  0002c	83 c4 10	 add	 esp, 16			; 00000010H
  0002f	88 4d fd	 mov	 BYTE PTR _pMsg$[ebp+5], cl
  00032	88 45 fc	 mov	 BYTE PTR _pMsg$[ebp+4], al

; 35   : 
; 36   : 	if(iState == 1)
; 37   : 	{
; 38   : 		this->SendDataRaklionMapUser((LPBYTE)&pMsg,sizeof(pMsg));	

  00035	6a 06		 push	 6
  00037	8b ce		 mov	 ecx, esi
  00039	83 f8 01	 cmp	 eax, 1
  0003c	75 10		 jne	 SHORT $LN1@NotifyRakl
  0003e	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ?SendDataRaklionMapUser@CRaklionUtil@@QAEXPAEH@Z ; CRaklionUtil::SendDataRaklionMapUser
  00047	5e		 pop	 esi

; 43   : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
$LN1@NotifyRakl:

; 39   : 		return;
; 40   : 	}
; 41   : 
; 42   : 	this->SendDataRaklionBossMapUser((LPBYTE)&pMsg, sizeof(pMsg));

  0004e	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z ; CRaklionUtil::SendDataRaklionBossMapUser
  00057	5e		 pop	 esi

; 43   : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z ENDP	; CRaklionUtil::NotifyRaklionChangeState
_TEXT	ENDS
PUBLIC	?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z ; CRaklionUtil::NotifyRaklionSuccessValue
; Function compile flags: /Ogtp
;	COMDAT ?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 5
_iSuccessValue$ = 8					; size = 4
?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z PROC	; CRaklionUtil::NotifyRaklionSuccessValue, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 47   : 	PMSG_ANS_RAKLION_SUCCESS_VALUE pMsg = {0};

  00007	33 c0		 xor	 eax, eax

; 48   : 
; 49   : 	PHeadSubSetB((LPBYTE)&pMsg, 0xD1, 0x13, sizeof(pMsg));

  00009	6a 05		 push	 5
  0000b	6a 13		 push	 19			; 00000013H
  0000d	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp], al
  00010	89 45 f9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  00013	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00016	68 d1 00 00 00	 push	 209			; 000000d1H
  0001b	50		 push	 eax
  0001c	8b f1		 mov	 esi, ecx
  0001e	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 50   : 	pMsg.btValue = iSuccessValue;

  00023	8a 4d 08	 mov	 cl, BYTE PTR _iSuccessValue$[ebp]
  00026	83 c4 10	 add	 esp, 16			; 00000010H

; 51   : 
; 52   : 	this->SendDataRaklionBossMapUser((LPBYTE)&pMsg, sizeof(pMsg));

  00029	6a 05		 push	 5
  0002b	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0002e	88 4d fc	 mov	 BYTE PTR _pMsg$[ebp+4], cl
  00031	52		 push	 edx
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z ; CRaklionUtil::SendDataRaklionBossMapUser
  00039	5e		 pop	 esi

; 53   : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z ENDP	; CRaklionUtil::NotifyRaklionSuccessValue
_TEXT	ENDS
PUBLIC	?NotifyRaklionWideAreaAttack@CRaklionUtil@@QAEXHHH@Z ; CRaklionUtil::NotifyRaklionWideAreaAttack
; Function compile flags: /Ogtp
;	COMDAT ?NotifyRaklionWideAreaAttack@CRaklionUtil@@QAEXHHH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 7
_iIndex$ = 8						; size = 4
_iTargetIndex$ = 12					; size = 4
_iSkillType$ = 16					; size = 4
?NotifyRaklionWideAreaAttack@CRaklionUtil@@QAEXHHH@Z PROC ; CRaklionUtil::NotifyRaklionWideAreaAttack, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 68   : 	PMSG_NOTIFY_RAKLION_WIDE_AREA_ATTACK pMsg;
; 69   : 
; 70   : 	PHeadSubSetB((LPBYTE)&pMsg, 0xD1, 0x14, sizeof(pMsg));

  00007	6a 07		 push	 7
  00009	6a 14		 push	 20			; 00000014H
  0000b	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0000e	68 d1 00 00 00	 push	 209			; 000000d1H
  00013	50		 push	 eax
  00014	8b f1		 mov	 esi, ecx
  00016	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 71   : 	pMsg.btObjClassH = SET_NUMBERH(gObj[iIndex].Class);

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0001e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00024	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0002a	8d 84 11 b8 00
	00 00		 lea	 eax, DWORD PTR [ecx+edx+184]
  00031	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00034	83 c4 10	 add	 esp, 16			; 00000010H
  00037	88 4d fc	 mov	 BYTE PTR _pMsg$[ebp+4], cl

; 72   : 	pMsg.btObjClassL = SET_NUMBERL(gObj[iIndex].Class);

  0003a	8a 10		 mov	 dl, BYTE PTR [eax]

; 73   : 	pMsg.btType = iSkillType;

  0003c	8a 45 10	 mov	 al, BYTE PTR _iSkillType$[ebp]

; 74   : 
; 75   : 	this->SendDataToUser(iTargetIndex, (LPBYTE)&pMsg, sizeof(pMsg));

  0003f	6a 07		 push	 7
  00041	8d 4d f8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00044	88 55 fd	 mov	 BYTE PTR _pMsg$[ebp+5], dl
  00047	8b 55 0c	 mov	 edx, DWORD PTR _iTargetIndex$[ebp]
  0004a	51		 push	 ecx
  0004b	52		 push	 edx
  0004c	8b ce		 mov	 ecx, esi
  0004e	88 45 fe	 mov	 BYTE PTR _pMsg$[ebp+6], al
  00051	e8 00 00 00 00	 call	 ?SendDataToUser@CRaklionUtil@@QAEXHPAEH@Z ; CRaklionUtil::SendDataToUser
  00056	5e		 pop	 esi

; 76   : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 0c 00	 ret	 12			; 0000000cH
?NotifyRaklionWideAreaAttack@CRaklionUtil@@QAEXHHH@Z ENDP ; CRaklionUtil::NotifyRaklionWideAreaAttack
_TEXT	ENDS
PUBLIC	?NotifyRaklionUserMonsterCount@CRaklionUtil@@QAEXEE@Z ; CRaklionUtil::NotifyRaklionUserMonsterCount
; Function compile flags: /Ogtp
;	COMDAT ?NotifyRaklionUserMonsterCount@CRaklionUtil@@QAEXEE@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 6
_btMonsterCount$ = 8					; size = 1
_btUserCount$ = 12					; size = 1
?NotifyRaklionUserMonsterCount@CRaklionUtil@@QAEXEE@Z PROC ; CRaklionUtil::NotifyRaklionUserMonsterCount, COMDAT
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 80   : 	PMSG_NOTIFY_RAKLION_USER_MONSTER_COUNT pMsg;
; 81   : 
; 82   : 	PHeadSubSetB((LPBYTE)&pMsg, 0xD1, 0x15, sizeof(pMsg));

  00007	6a 06		 push	 6
  00009	6a 15		 push	 21			; 00000015H
  0000b	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0000e	68 d1 00 00 00	 push	 209			; 000000d1H
  00013	50		 push	 eax
  00014	8b f1		 mov	 esi, ecx
  00016	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 83   : 	pMsg.btMonsterCount = btMonsterCount;

  0001b	8a 4d 08	 mov	 cl, BYTE PTR _btMonsterCount$[ebp]

; 84   : 	pMsg.btUserCount = btUserCount;

  0001e	8a 55 0c	 mov	 dl, BYTE PTR _btUserCount$[ebp]
  00021	83 c4 10	 add	 esp, 16			; 00000010H

; 85   : 
; 86   : 	this->SendDataRaklionBossMapUser((LPBYTE)&pMsg, sizeof(pMsg));

  00024	6a 06		 push	 6
  00026	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00029	88 4d fc	 mov	 BYTE PTR _pMsg$[ebp+4], cl
  0002c	50		 push	 eax
  0002d	8b ce		 mov	 ecx, esi
  0002f	88 55 fd	 mov	 BYTE PTR _pMsg$[ebp+5], dl
  00032	e8 00 00 00 00	 call	 ?SendDataRaklionBossMapUser@CRaklionUtil@@QAEXPAEH@Z ; CRaklionUtil::SendDataRaklionBossMapUser
  00037	5e		 pop	 esi

; 87   : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
?NotifyRaklionUserMonsterCount@CRaklionUtil@@QAEXEE@Z ENDP ; CRaklionUtil::NotifyRaklionUserMonsterCount
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendMsgUser@CRaklionUtil@@QAAXPADZZ		; CRaklionUtil::SendMsgUser
EXTRN	?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A:BYTE ; g_RaklionBattleUserMng
; Function compile flags: /Ogtp
;	COMDAT ?SendMsgUser@CRaklionUtil@@QAAXPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMsgUser@CRaklionUtil@@QAAXPADZZ PROC		; CRaklionUtil::SendMsgUser, COMDAT

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 91   : 	if ( !lpszMsg )

  00014	8b 75 0c	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	0f 84 a7 00 00
	00		 je	 $LN2@SendMsgUse

; 92   : 		return;
; 93   : 
; 94   : 	char szBuffer[512] = "";

  0001f	68 ff 01 00 00	 push	 511			; 000001ffH
  00024	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002a	6a 00		 push	 0
  0002c	50		 push	 eax
  0002d	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00034	e8 00 00 00 00	 call	 _memset

; 95   : 	va_list pArguments;
; 96   : 
; 97   : 	va_start(pArguments, lpszMsg);
; 98   : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00039	8d 4d 10	 lea	 ecx, DWORD PTR _lpszMsg$[ebp+4]
  0003c	51		 push	 ecx
  0003d	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00043	56		 push	 esi
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 _vsprintf

; 99   : 	va_end(pArguments);
; 100  : 
; 101  : 	PMSG_NOTICE pNotice;
; 102  : 	TNotice::MakeNoticeMsg(&pNotice, 1, szBuffer);

  0004a	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00050	50		 push	 eax
  00051	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00057	6a 01		 push	 1
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 103  : 
; 104  : 	for ( int iCount=0;iCount<g_RaklionBattleUserMng.m_vtUserInfo.size();iCount++)

  0005f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A+8
  00064	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A+4
  0006a	2b c2		 sub	 eax, edx
  0006c	c1 f8 02	 sar	 eax, 2
  0006f	83 c4 24	 add	 esp, 36			; 00000024H
  00072	33 f6		 xor	 esi, esi
  00074	85 c0		 test	 eax, eax
  00076	74 4e		 je	 SHORT $LN2@SendMsgUse
  00078	53		 push	 ebx
  00079	8d a4 24 00 00
	00 00		 npad	 7
$LL4@SendMsgUse:

; 105  : 	{
; 106  : 		if ( gObj[g_RaklionBattleUserMng.m_vtUserInfo[iCount]].Connected == PLAYER_PLAYING &&
; 107  : 			 gObj[g_RaklionBattleUserMng.m_vtUserInfo[iCount]].Type == OBJ_USER)

  00080	8b 04 b2	 mov	 eax, DWORD PTR [edx+esi*4]
  00083	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00089	8b c8		 mov	 ecx, eax
  0008b	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00091	83 7c 19 04 03	 cmp	 DWORD PTR [ecx+ebx+4], 3
  00096	75 1e		 jne	 SHORT $LN3@SendMsgUse
  00098	66 83 7c 19 68
	01		 cmp	 WORD PTR [ecx+ebx+104], 1
  0009e	75 16		 jne	 SHORT $LN3@SendMsgUse

; 108  : 		{
; 109  : 			TNotice::SendNoticeToUser(g_RaklionBattleUserMng.m_vtUserInfo[iCount], &pNotice);

  000a0	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  000a6	52		 push	 edx
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  000ad	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A+4
  000b3	83 c4 08	 add	 esp, 8
$LN3@SendMsgUse:

; 103  : 
; 104  : 	for ( int iCount=0;iCount<g_RaklionBattleUserMng.m_vtUserInfo.size();iCount++)

  000b6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A+8
  000bb	2b c2		 sub	 eax, edx
  000bd	46		 inc	 esi
  000be	c1 f8 02	 sar	 eax, 2
  000c1	3b f0		 cmp	 esi, eax
  000c3	72 bb		 jb	 SHORT $LL4@SendMsgUse
  000c5	5b		 pop	 ebx
$LN2@SendMsgUse:

; 110  : 		}
; 111  : 	}
; 112  : }

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c9	33 cd		 xor	 ecx, ebp
  000cb	5e		 pop	 esi
  000cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?SendMsgUser@CRaklionUtil@@QAAXPADZZ ENDP		; CRaklionUtil::SendMsgUser
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_RaklionUtil@@YAXXZ
text$yc	SEGMENT
??__Eg_RaklionUtil@@YAXXZ PROC				; `dynamic initializer for 'g_RaklionUtil'', COMDAT

; 16   : CRaklionUtil g_RaklionUtil;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00005	e8 00 00 00 00	 call	 ??0CRaklionUtil@@QAE@XZ	; CRaklionUtil::CRaklionUtil
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_RaklionUtil@@YAXXZ ; `dynamic atexit destructor for 'g_RaklionUtil''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_RaklionUtil@@YAXXZ ENDP				; `dynamic initializer for 'g_RaklionUtil''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_RaklionUtil@@YAXXZ
text$yd	SEGMENT
??__Fg_RaklionUtil@@YAXXZ PROC				; `dynamic atexit destructor for 'g_RaklionUtil'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00005	e9 00 00 00 00	 jmp	 ??1CRaklionUtil@@UAE@XZ	; CRaklionUtil::~CRaklionUtil
??__Fg_RaklionUtil@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_RaklionUtil''
text$yd	ENDS
PUBLIC	?g_RaklionUtil@@3VCRaklionUtil@@A		; g_RaklionUtil
_BSS	SEGMENT
?g_RaklionUtil@@3VCRaklionUtil@@A DD 01H DUP (?)	; g_RaklionUtil
_BSS	ENDS
CRT$XCU	SEGMENT
_g_RaklionUtil$initializer$ DD FLAT:??__Eg_RaklionUtil@@YAXXZ
CRT$XCU	ENDS
END
