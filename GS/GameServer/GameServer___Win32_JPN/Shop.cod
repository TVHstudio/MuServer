; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\Shop.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 64		 je	 SHORT $LN39@GetToken

; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 31		 jne	 SHORT $LN30@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 1b		 jne	 SHORT $LN30@GetToken
$LL24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	80 fb ff	 cmp	 bl, -1
  00053	74 44		 je	 SHORT $LN39@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _fgetc
  00061	8a d8		 mov	 bl, al
  00063	83 c4 04	 add	 esp, 4
  00066	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00069	75 e5		 jne	 SHORT $LL24@GetToken
$LN30@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE
; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006b	0f be c3	 movsx	 eax, bl
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _isspace
  00074	83 c4 04	 add	 esp, 4
  00077	85 c0		 test	 eax, eax
  00079	75 a5		 jne	 SHORT $LL31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  0007b	0f be c3	 movsx	 eax, bl
  0007e	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  00081	56		 push	 esi
  00082	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00085	0f 87 2b 01 00
	00		 ja	 $LN6@GetToken
  0008b	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN46@GetToken[ecx]
  00092	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN50@GetToken[ecx*4]
$LN39@GetToken:

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00099	b8 02 00 00 00	 mov	 eax, 2
  0009e	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a2	33 cd		 xor	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000ad	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b2	e9 99 01 00 00	 jmp	 $LN48@GetToken
$LN18@GetToken:

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000b7	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000bc	e9 8f 01 00 00	 jmp	 $LN48@GetToken
$LN17@GetToken:

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000c1	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000c6	e9 85 01 00 00	 jmp	 $LN48@GetToken
$LN16@GetToken:

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  000cb	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  000d0	e9 7b 01 00 00	 jmp	 $LN48@GetToken
$LN15@GetToken:

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  000d5	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  000da	e9 71 01 00 00	 jmp	 $LN48@GetToken
$LN14@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000f1	50		 push	 eax
  000f2	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  000f5	e8 00 00 00 00	 call	 _getc
  000fa	8a d8		 mov	 bl, al
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	80 fb ff	 cmp	 bl, -1
  00102	74 33		 je	 SHORT $LN12@GetToken
$LL13@GetToken:
  00104	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00107	74 15		 je	 SHORT $LN11@GetToken
  00109	0f be cb	 movsx	 ecx, bl
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _isdigit
  00112	83 c4 04	 add	 esp, 4
  00115	85 c0		 test	 eax, eax
  00117	75 05		 jne	 SHORT $LN11@GetToken
  00119	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  0011c	75 19		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00124	88 1e		 mov	 BYTE PTR [esi], bl
  00126	52		 push	 edx

; 102  : 			p++;

  00127	46		 inc	 esi
  00128	e8 00 00 00 00	 call	 _getc
  0012d	8a d8		 mov	 bl, al
  0012f	83 c4 04	 add	 esp, 4
  00132	80 fb ff	 cmp	 bl, -1
  00135	75 cd		 jne	 SHORT $LL13@GetToken
$LN12@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00137	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  0013a	50		 push	 eax
  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	e8 00 00 00 00	 call	 _atof
  00143	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  00149	83 c4 04	 add	 esp, 4
  0014c	5e		 pop	 esi

; 106  : 		return CurrentToken  = NUMBER ;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00157	b8 01 00 00 00	 mov	 eax, 1
  0015c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0015d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00171	51		 push	 ecx
  00172	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  00177	e8 00 00 00 00	 call	 _getc
  0017c	83 c4 04	 add	 esp, 4
  0017f	3c ff		 cmp	 al, -1
  00181	74 1e		 je	 SHORT $LN8@GetToken
$LL9@GetToken:
  00183	3c 22		 cmp	 al, 34			; 00000022H
  00185	0f 84 a1 00 00
	00		 je	 $LN7@GetToken
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 113  : 		{
; 114  : 			*p = ch;

  00191	88 06		 mov	 BYTE PTR [esi], al
  00193	52		 push	 edx

; 115  : 			p++;

  00194	46		 inc	 esi
  00195	e8 00 00 00 00	 call	 _getc
  0019a	83 c4 04	 add	 esp, 4
  0019d	3c ff		 cmp	 al, -1
  0019f	75 e2		 jne	 SHORT $LL9@GetToken
$LN8@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001a1	3c 22		 cmp	 al, 34			; 00000022H
  001a3	0f 84 83 00 00
	00		 je	 $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  001af	0f be d0	 movsx	 edx, al
  001b2	51		 push	 ecx
  001b3	52		 push	 edx

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  001b4	eb 6e		 jmp	 SHORT $LN49@GetToken
$LN6@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _isalpha
  001bc	83 c4 04	 add	 esp, 4
  001bf	85 c0		 test	 eax, eax
  001c1	0f 84 84 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  001d3	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  001d8	e8 00 00 00 00	 call	 _getc
  001dd	8a d8		 mov	 bl, al
  001df	83 c4 04	 add	 esp, 4
  001e2	80 fb ff	 cmp	 bl, -1
  001e5	74 33		 je	 SHORT $LN3@GetToken
$LL4@GetToken:
  001e7	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  001ea	74 15		 je	 SHORT $LN2@GetToken
  001ec	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  001ef	74 10		 je	 SHORT $LN2@GetToken
  001f1	0f be cb	 movsx	 ecx, bl
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 _isalnum
  001fa	83 c4 04	 add	 esp, 4
  001fd	85 c0		 test	 eax, eax
  001ff	74 19		 je	 SHORT $LN3@GetToken
$LN2@GetToken:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 133  : 			{
; 134  : 				*p=ch;

  00207	88 1e		 mov	 BYTE PTR [esi], bl
  00209	52		 push	 edx

; 135  : 				p++;

  0020a	46		 inc	 esi
  0020b	e8 00 00 00 00	 call	 _getc
  00210	8a d8		 mov	 bl, al
  00212	83 c4 04	 add	 esp, 4
  00215	80 fb ff	 cmp	 bl, -1
  00218	75 cd		 jne	 SHORT $LL4@GetToken
$LN3@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0021f	0f be cb	 movsx	 ecx, bl
  00222	50		 push	 eax
  00223	51		 push	 ecx
$LN49@GetToken:
  00224	e8 00 00 00 00	 call	 _ungetc
  00229	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 140  : 			*p=0;

  0022c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0022f	5e		 pop	 esi

; 141  : 			CurrentToken=NAME;

  00230	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0023a	33 c0		 xor	 eax, eax
  0023c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0023d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00240	33 cd		 xor	 ecx, ebp
  00242	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN5@GetToken:

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  0024b	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN48@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00250	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  0025b	5b		 pop	 ebx
  0025c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
  00265	8d 49 00	 npad	 3
$LN50@GetToken:
  00268	00 00 00 00	 DD	 $LN10@GetToken
  0026c	00 00 00 00	 DD	 $LN19@GetToken
  00270	00 00 00 00	 DD	 $LN17@GetToken
  00274	00 00 00 00	 DD	 $LN14@GetToken
  00278	00 00 00 00	 DD	 $LN18@GetToken
  0027c	00 00 00 00	 DD	 $LN16@GetToken
  00280	00 00 00 00	 DD	 $LN15@GetToken
  00284	00 00 00 00	 DD	 $LN6@GetToken
$LN46@GetToken:
  00288	00		 DB	 0
  00289	01		 DB	 1
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	02		 DB	 2
  00293	03		 DB	 3
  00294	03		 DB	 3
  00295	07		 DB	 7
  00296	03		 DB	 3
  00297	03		 DB	 3
  00298	03		 DB	 3
  00299	03		 DB	 3
  0029a	03		 DB	 3
  0029b	03		 DB	 3
  0029c	03		 DB	 3
  0029d	03		 DB	 3
  0029e	03		 DB	 3
  0029f	03		 DB	 3
  002a0	07		 DB	 7
  002a1	04		 DB	 4
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	07		 DB	 7
  002ad	07		 DB	 7
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	07		 DB	 7
  002b1	07		 DB	 7
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	07		 DB	 7
  002b9	07		 DB	 7
  002ba	07		 DB	 7
  002bb	07		 DB	 7
  002bc	07		 DB	 7
  002bd	07		 DB	 7
  002be	07		 DB	 7
  002bf	07		 DB	 7
  002c0	07		 DB	 7
  002c1	07		 DB	 7
  002c2	07		 DB	 7
  002c3	07		 DB	 7
  002c4	07		 DB	 7
  002c5	07		 DB	 7
  002c6	07		 DB	 7
  002c7	07		 DB	 7
  002c8	07		 DB	 7
  002c9	07		 DB	 7
  002ca	07		 DB	 7
  002cb	07		 DB	 7
  002cc	07		 DB	 7
  002cd	07		 DB	 7
  002ce	07		 DB	 7
  002cf	07		 DB	 7
  002d0	07		 DB	 7
  002d1	07		 DB	 7
  002d2	07		 DB	 7
  002d3	07		 DB	 7
  002d4	07		 DB	 7
  002d5	07		 DB	 7
  002d6	07		 DB	 7
  002d7	07		 DB	 7
  002d8	07		 DB	 7
  002d9	07		 DB	 7
  002da	07		 DB	 7
  002db	07		 DB	 7
  002dc	07		 DB	 7
  002dd	07		 DB	 7
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	05		 DB	 5
  002e2	07		 DB	 7
  002e3	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??_7CShop@@6B@					; CShop::`vftable'
PUBLIC	??0CShop@@QAE@XZ				; CShop::CShop
PUBLIC	??_R4CShop@@6B@					; CShop::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCShop@@@8				; CShop `RTTI Type Descriptor'
PUBLIC	??_R3CShop@@8					; CShop::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CShop@@8					; CShop::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CShop@@8				; CShop::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECShop@@UAEPAXI@Z:PROC			; CShop::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CShop@@8
; File e:\work\tranet_version\gs\gameserver\gameshop.h
rdata$r	SEGMENT
??_R1A@?0A@EA@CShop@@8 DD FLAT:??_R0?AVCShop@@@8	; CShop::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CShop@@8
rdata$r	ENDS
;	COMDAT ??_R2CShop@@8
rdata$r	SEGMENT
??_R2CShop@@8 DD FLAT:??_R1A@?0A@EA@CShop@@8		; CShop::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CShop@@8
rdata$r	SEGMENT
??_R3CShop@@8 DD 00H					; CShop::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CShop@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCShop@@@8
_DATA	SEGMENT
??_R0?AVCShop@@@8 DD FLAT:??_7type_info@@6B@		; CShop `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCShop@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CShop@@6B@
rdata$r	SEGMENT
??_R4CShop@@6B@ DD 00H					; CShop::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCShop@@@8
	DD	FLAT:??_R3CShop@@8
rdata$r	ENDS
;	COMDAT ??_7CShop@@6B@
CONST	SEGMENT
??_7CShop@@6B@ DD FLAT:??_R4CShop@@6B@			; CShop::`vftable'
	DD	FLAT:??_ECShop@@UAEPAXI@Z
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\shop.cpp
CONST	ENDS
;	COMDAT ??0CShop@@QAE@XZ
_TEXT	SEGMENT
??0CShop@@QAE@XZ PROC					; CShop::CShop, COMDAT
; _this$ = ecx

; 22   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b d9		 mov	 ebx, ecx
  00004	57		 push	 edi
  00005	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CShop@@6B@
  0000b	8d b3 80 00 00
	00		 lea	 esi, DWORD PTR [ebx+128]
  00011	bf 77 00 00 00	 mov	 edi, 119		; 00000077H
$LL4@CShop:
  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem
  0001d	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  00023	4f		 dec	 edi
  00024	79 f0		 jns	 SHORT $LL4@CShop

; 23   : 	return;
; 24   : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	8b c3		 mov	 eax, ebx
  0002a	5b		 pop	 ebx
  0002b	c3		 ret	 0
??0CShop@@QAE@XZ ENDP					; CShop::CShop
_TEXT	ENDS
PUBLIC	??1CShop@@UAE@XZ				; CShop::~CShop
; Function compile flags: /Ogtp
;	COMDAT ??1CShop@@UAE@XZ
_TEXT	SEGMENT
??1CShop@@UAE@XZ PROC					; CShop::~CShop, COMDAT
; _this$ = ecx

; 28   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CShop@@6B@

; 29   : 	return;
; 30   : }

  00006	c3		 ret	 0
??1CShop@@UAE@XZ ENDP					; CShop::~CShop
_TEXT	ENDS
PUBLIC	?Init@CShop@@QAEXXZ				; CShop::Init
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Init@CShop@@QAEXXZ
_TEXT	SEGMENT
?Init@CShop@@QAEXXZ PROC				; CShop::Init, COMDAT
; _this$ = ecx

; 33   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 34   : 	this->SendItemDataLen = 0;
; 35   : 	this->ItemCount = 0;
; 36   : 	memset(this->ShopInventoryMap, 0, sizeof(this->ShopInventoryMap));

  00003	6a 78		 push	 120			; 00000078H
  00005	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00008	6a 00		 push	 0
  0000a	50		 push	 eax
  0000b	c7 86 f8 69 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+27128], 0
  00015	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  0001c	e8 00 00 00 00	 call	 _memset

; 37   : #if(DONATE_SHOP==TRUE)
; 38   : 	ZeroMemory(&ShopEx,sizeof(ShopEx));

  00021	68 a0 05 00 00	 push	 1440			; 000005a0H
  00026	6a 00		 push	 0
  00028	81 c6 fc 69 00
	00		 add	 esi, 27132		; 000069fcH
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _memset
  00034	83 c4 18	 add	 esp, 24			; 00000018H
  00037	5e		 pop	 esi

; 39   : #endif
; 40   : }

  00038	c3		 ret	 0
?Init@CShop@@QAEXXZ ENDP				; CShop::Init
_TEXT	ENDS
PUBLIC	?InentoryMapCheck@CShop@@QAEHHHHH@Z		; CShop::InentoryMapCheck
; Function compile flags: /Ogtp
;	COMDAT ?InentoryMapCheck@CShop@@QAEHHHHH@Z
_TEXT	SEGMENT
_blank$ = -4						; size = 4
_sx$ = 8						; size = 4
_sy$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
?InentoryMapCheck@CShop@@QAEHHHHH@Z PROC		; CShop::InentoryMapCheck, COMDAT
; _this$ = ecx

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 297  : 	int x;
; 298  : 	int y;
; 299  : 	int blank = 0;
; 300  : 
; 301  : 	if ( (sx+width) > 8 )

  00004	8b 45 08	 mov	 eax, DWORD PTR _sx$[ebp]
  00007	53		 push	 ebx
  00008	8b 5d 10	 mov	 ebx, DWORD PTR _width$[ebp]
  0000b	8d 14 18	 lea	 edx, DWORD PTR [eax+ebx]
  0000e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _blank$[ebp], 0
  00015	83 fa 08	 cmp	 edx, 8
  00018	7e 0a		 jle	 SHORT $LN16@InentoryMa

; 302  : 		return -1;

  0001a	83 c8 ff	 or	 eax, -1
  0001d	5b		 pop	 ebx

; 333  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 10 00	 ret	 16			; 00000010H
$LN16@InentoryMa:

; 303  : 
; 304  : 	if ( (sy+height) > 15 )

  00024	8b 55 0c	 mov	 edx, DWORD PTR _sy$[ebp]
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	8b 7d 14	 mov	 edi, DWORD PTR _height$[ebp]
  0002c	8d 34 3a	 lea	 esi, DWORD PTR [edx+edi]
  0002f	83 fe 0f	 cmp	 esi, 15			; 0000000fH

; 305  : 		return -1;

  00032	7f 67		 jg	 SHORT $LN7@InentoryMa

; 306  : 
; 307  : 	for(y=0;y<height;y++)

  00034	85 ff		 test	 edi, edi
  00036	7e 51		 jle	 SHORT $LN4@InentoryMa
  00038	8d 04 d0	 lea	 eax, DWORD PTR [eax+edx*8]
  0003b	8d 54 08 04	 lea	 edx, DWORD PTR [eax+ecx+4]
  0003f	8b f7		 mov	 esi, edi
$LL14@InentoryMa:

; 308  : 	{
; 309  : 		for(x=0;x<width;x++)

  00041	33 c0		 xor	 eax, eax
  00043	85 db		 test	 ebx, ebx
  00045	7e 10		 jle	 SHORT $LN13@InentoryMa
$LL11@InentoryMa:

; 310  : 		{
; 311  : 			if ( this->ShopInventoryMap[( sy + y) * 8 + (sx + x)] )

  00047	80 3c 02 00	 cmp	 BYTE PTR [edx+eax], 0
  0004b	75 07		 jne	 SHORT $LN23@InentoryMa

; 308  : 	{
; 309  : 		for(x=0;x<width;x++)

  0004d	40		 inc	 eax
  0004e	3b c3		 cmp	 eax, ebx
  00050	7c f5		 jl	 SHORT $LL11@InentoryMa

; 310  : 		{
; 311  : 			if ( this->ShopInventoryMap[( sy + y) * 8 + (sx + x)] )

  00052	eb 03		 jmp	 SHORT $LN13@InentoryMa
$LN23@InentoryMa:

; 312  : 			{
; 313  : 				blank++;

  00054	ff 45 fc	 inc	 DWORD PTR _blank$[ebp]
$LN13@InentoryMa:

; 306  : 
; 307  : 	for(y=0;y<height;y++)

  00057	83 c2 08	 add	 edx, 8
  0005a	4e		 dec	 esi
  0005b	75 e4		 jne	 SHORT $LL14@InentoryMa

; 314  : 				break;
; 315  : 			}
; 316  : 		}
; 317  : 	}
; 318  : 
; 319  : 	if ( blank == 0 )

  0005d	39 75 fc	 cmp	 DWORD PTR _blank$[ebp], esi
  00060	75 39		 jne	 SHORT $LN7@InentoryMa

; 320  : 	{
; 321  : 		for(y=0;y<height;y++)

  00062	85 ff		 test	 edi, edi
  00064	7e 23		 jle	 SHORT $LN4@InentoryMa
  00066	8b 55 08	 mov	 edx, DWORD PTR _sx$[ebp]
  00069	8b 45 0c	 mov	 eax, DWORD PTR _sy$[ebp]
  0006c	8d 14 c2	 lea	 edx, DWORD PTR [edx+eax*8]
  0006f	8d 74 0a 04	 lea	 esi, DWORD PTR [edx+ecx+4]
$LL6@InentoryMa:

; 322  : 		{
; 323  : 			for(x=0;x<width;x++)

  00073	85 db		 test	 ebx, ebx
  00075	7e 0c		 jle	 SHORT $LN5@InentoryMa
  00077	53		 push	 ebx
  00078	6a 01		 push	 1
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 _memset
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@InentoryMa:

; 320  : 	{
; 321  : 		for(y=0;y<height;y++)

  00083	83 c6 08	 add	 esi, 8
  00086	4f		 dec	 edi
  00087	75 ea		 jne	 SHORT $LL6@InentoryMa
$LN4@InentoryMa:

; 324  : 			{
; 325  : 				this->ShopInventoryMap[( sy + y) * 8 + (sx + x)] = 1;
; 326  : 			}
; 327  : 		}
; 328  : 
; 329  : 		return (sx + sy*8);

  00089	8b 45 08	 mov	 eax, DWORD PTR _sx$[ebp]
  0008c	8b 4d 0c	 mov	 ecx, DWORD PTR _sy$[ebp]
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
  00094	5b		 pop	 ebx

; 333  : }

  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 10 00	 ret	 16			; 00000010H
$LN7@InentoryMa:
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi

; 330  : 	}
; 331  : 
; 332  : 	return -1;

  0009d	83 c8 ff	 or	 eax, -1
  000a0	5b		 pop	 ebx

; 333  : }

  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 10 00	 ret	 16			; 00000010H
?InentoryMapCheck@CShop@@QAEHHHHH@Z ENDP		; CShop::InentoryMapCheck
_TEXT	ENDS
PUBLIC	_aIndex$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GC_ShopInfo@CShop@@QAEXH@Z			; CShop::GC_ShopInfo
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GC_ShopInfo@CShop@@QAEXH@Z
_TEXT	SEGMENT
_aIndex$GSCopy$ = -5032					; size = 4
$T214404 = -5028					; size = 4
_this$GSCopy$ = -5024					; size = 4
_p$214068 = -5020					; size = 12
_i$214063 = -5008					; size = 4
_SendBuff$ = -5004					; size = 5000
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GC_ShopInfo@CShop@@QAEXH@Z PROC			; CShop::GC_ShopInfo, COMDAT
; _this$ = ecx

; 713  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 a8 13 00 00	 mov	 eax, 5032		; 000013a8H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b c1		 mov	 eax, ecx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0001c	56		 push	 esi

; 714  : 	if(OBJMAX_RANGE(aIndex) == 0)

  0001d	33 f6		 xor	 esi, esi

; 759  : 	{
; 760  : 		SendBuff[0]=0xC2;	// packet header

  0001f	89 85 60 ec ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], eax
  00025	89 8d 58 ec ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], ecx
  0002b	3b ce		 cmp	 ecx, esi
  0002d	0f 8c 1c 01 00
	00		 jl	 $LN1@GC_ShopInf

; 714  : 	if(OBJMAX_RANGE(aIndex) == 0)

  00033	33 d2		 xor	 edx, edx
  00035	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  0003b	0f 9e c2	 setle	 dl
  0003e	3b d6		 cmp	 edx, esi
  00040	0f 84 09 01 00
	00		 je	 $LN1@GC_ShopInf

; 715  : 	{
; 716  : 		return;
; 717  : 	}
; 718  : 
; 719  : 	LPOBJ lpUser = &gObj[aIndex];
; 720  : 
; 721  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004c	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00052	83 7c 11 04 03	 cmp	 DWORD PTR [ecx+edx+4], 3
  00057	0f 8c f2 00 00
	00		 jl	 $LN1@GC_ShopInf

; 727  : 	int datasize = 6;

  0005d	8b 50 7c	 mov	 edx, DWORD PTR [eax+124]
  00060	53		 push	 ebx
  00061	8d 5e 06	 lea	 ebx, DWORD PTR [esi+6]

; 728  : 	BYTE SendBuff[5000];
; 729  : 
; 730  : 	for(int i=0; i < this->ItemCount; i++)

  00064	89 b5 70 ec ff
	ff		 mov	 DWORD PTR _i$214063[ebp], esi

; 759  : 	{
; 760  : 		SendBuff[0]=0xC2;	// packet header

  0006a	89 95 5c ec ff
	ff		 mov	 DWORD PTR $T214404[ebp], edx
  00070	3b d6		 cmp	 edx, esi
  00072	0f 8e d6 00 00
	00		 jle	 $LN17@GC_ShopInf

; 722  : 	{
; 723  : 		return;
; 724  : 	}
; 725  : 
; 726  : 	int icount = 0;

  00078	8d 8d 7a ec ff
	ff		 lea	 ecx, DWORD PTR _SendBuff$[ebp+6]
  0007e	05 fd 69 00 00	 add	 eax, 27133		; 000069fdH
  00083	57		 push	 edi
$LL16@GC_ShopInf:

; 731  : 	{
; 732  : 		if(!this->ShopEx[i].PayType) 

  00084	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  00088	74 64		 je	 SHORT $LN5@GC_ShopInf

; 733  : 		{
; 734  : 			continue;
; 735  : 		}
; 736  : 
; 737  : 		GC_ShopPay p;
; 738  : 
; 739  : 		p.ItemType = this->ShopEx[i].ItemType;

  0008a	0f b6 50 ff	 movzx	 edx, BYTE PTR [eax-1]
  0008e	88 95 64 ec ff
	ff		 mov	 BYTE PTR _p$214068[ebp], dl

; 740  : 		p.ItemIndex = this->ShopEx[i].ItemIndex;

  00094	0f b6 10	 movzx	 edx, BYTE PTR [eax]
  00097	88 95 65 ec ff
	ff		 mov	 BYTE PTR _p$214068[ebp+1], dl

; 741  : 		p.ItemLevel = this->ShopEx[i].ItemLevel;

  0009d	0f b6 50 01	 movzx	 edx, BYTE PTR [eax+1]
  000a1	88 95 66 ec ff
	ff		 mov	 BYTE PTR _p$214068[ebp+2], dl

; 742  : 		p.ItemExl = this->ShopEx[i].ItemExl;

  000a7	0f b6 50 02	 movzx	 edx, BYTE PTR [eax+2]
  000ab	88 95 67 ec ff
	ff		 mov	 BYTE PTR _p$214068[ebp+3], dl

; 743  : 		p.ItemAnc = this->ShopEx[i].ItemAnc;

  000b1	0f b6 50 03	 movzx	 edx, BYTE PTR [eax+3]

; 744  : 		p.PayType = this->ShopEx[i].PayType;
; 745  : 		p.PayPrice = this->ShopEx[i].PayPrice;
; 746  : 
; 747  : 		memcpy(&SendBuff[datasize],&p,sizeof(p));

  000b5	8b bd 64 ec ff
	ff		 mov	 edi, DWORD PTR _p$214068[ebp]
  000bb	88 95 68 ec ff
	ff		 mov	 BYTE PTR _p$214068[ebp+4], dl
  000c1	0f b6 50 04	 movzx	 edx, BYTE PTR [eax+4]
  000c5	89 39		 mov	 DWORD PTR [ecx], edi
  000c7	88 95 69 ec ff
	ff		 mov	 BYTE PTR _p$214068[ebp+5], dl
  000cd	8b bd 68 ec ff
	ff		 mov	 edi, DWORD PTR _p$214068[ebp+4]
  000d3	8b 50 07	 mov	 edx, DWORD PTR [eax+7]
  000d6	89 79 04	 mov	 DWORD PTR [ecx+4], edi
  000d9	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 748  : 		datasize += sizeof(p);
; 749  : 
; 750  : 		icount++;

  000dc	46		 inc	 esi
  000dd	83 c3 0c	 add	 ebx, 12			; 0000000cH
  000e0	83 c1 0c	 add	 ecx, 12			; 0000000cH

; 751  : 
; 752  : 		if(icount >= MAX_ITEM_IN_SHOP-1)

  000e3	83 fe 77	 cmp	 esi, 119		; 00000077H
  000e6	7d 1a		 jge	 SHORT $LN14@GC_ShopInf
  000e8	8b 95 5c ec ff
	ff		 mov	 edx, DWORD PTR $T214404[ebp]
$LN5@GC_ShopInf:

; 728  : 	BYTE SendBuff[5000];
; 729  : 
; 730  : 	for(int i=0; i < this->ItemCount; i++)

  000ee	8b bd 70 ec ff
	ff		 mov	 edi, DWORD PTR _i$214063[ebp]
  000f4	47		 inc	 edi
  000f5	83 c0 0c	 add	 eax, 12			; 0000000cH
  000f8	89 bd 70 ec ff
	ff		 mov	 DWORD PTR _i$214063[ebp], edi
  000fe	3b fa		 cmp	 edi, edx
  00100	7c 82		 jl	 SHORT $LL16@GC_ShopInf
$LN14@GC_ShopInf:
  00102	5f		 pop	 edi

; 753  : 		{
; 754  : 			break;		
; 755  : 		}
; 756  : 	}
; 757  : 
; 758  : 	if(icount > 0)

  00103	85 f6		 test	 esi, esi
  00105	7e 47		 jle	 SHORT $LN17@GC_ShopInf

; 761  : 		SendBuff[1]=SET_NUMBERH(datasize);
; 762  : 		SendBuff[2]=SET_NUMBERL(datasize);
; 763  : 		SendBuff[3]=0xFA;
; 764  : 		SendBuff[4]=0x07;
; 765  : 		SendBuff[5]=this->ItemCount;

  00107	8b 8d 60 ec ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0010d	8a 51 7c	 mov	 dl, BYTE PTR [ecx+124]

; 766  : 		DataSend(aIndex,SendBuff,datasize);

  00110	8b 8d 58 ec ff
	ff		 mov	 ecx, DWORD PTR _aIndex$GSCopy$[ebp]
  00116	8b c3		 mov	 eax, ebx
  00118	c1 e8 08	 shr	 eax, 8
  0011b	88 85 75 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], al
  00121	53		 push	 ebx
  00122	8d 85 74 ec ff
	ff		 lea	 eax, DWORD PTR _SendBuff$[ebp]
  00128	50		 push	 eax
  00129	51		 push	 ecx
  0012a	c6 85 74 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H
  00131	88 9d 76 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], bl
  00137	66 c7 85 77 ec
	ff ff fa 07	 mov	 WORD PTR _SendBuff$[ebp+3], 2042 ; 000007faH
  00140	88 95 79 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], dl
  00146	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0014b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN17@GC_ShopInf:
  0014e	5b		 pop	 ebx
$LN1@GC_ShopInf:

; 767  : 	}
; 768  : }

  0014f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00152	33 cd		 xor	 ecx, ebp
  00154	5e		 pop	 esi
  00155	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c2 04 00	 ret	 4
?GC_ShopInfo@CShop@@QAEXH@Z ENDP			; CShop::GC_ShopInfo
_TEXT	ENDS
PUBLIC	?CheckExellent@@YA_NHH@Z			; CheckExellent
; Function compile flags: /Ogtp
;	COMDAT ?CheckExellent@@YA_NHH@Z
_TEXT	SEGMENT
_Exl1$ = 8						; size = 4
_Exl2$ = 12						; size = 4
?CheckExellent@@YA_NHH@Z PROC				; CheckExellent, COMDAT

; 771  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 772  : 	if(!Exl1 && !Exl2)

  00003	83 7d 08 00	 cmp	 DWORD PTR _Exl1$[ebp], 0
  00007	75 0a		 jne	 SHORT $LN6@CheckExell
  00009	83 7d 0c 00	 cmp	 DWORD PTR _Exl2$[ebp], 0
  0000d	75 0a		 jne	 SHORT $LN1@CheckExell
$LN7@CheckExell:

; 773  : 	{
; 774  : 		return true;

  0000f	b0 01		 mov	 al, 1

; 782  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
$LN6@CheckExell:

; 775  : 	}
; 776  : 	else if(Exl1 && Exl2)

  00013	83 7d 0c 00	 cmp	 DWORD PTR _Exl2$[ebp], 0

; 777  : 	{
; 778  : 		return true;

  00017	75 f6		 jne	 SHORT $LN7@CheckExell
$LN1@CheckExell:

; 779  : 	}
; 780  : 
; 781  : 	return false;

  00019	32 c0		 xor	 al, al

; 782  : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?CheckExellent@@YA_NHH@Z ENDP				; CheckExellent
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?NewShopRecv@@YAXPAUCG_NEW_CASH_SHOP@@H@Z	; NewShopRecv
EXTRN	?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z:PROC		; GCAnsCsMapSvrTaxInfo
EXTRN	?GetTaxRateStore@CCastleSiegeSync@@QAEHH@Z:PROC	; CCastleSiegeSync::GetTaxRateStore
EXTRN	?g_CastleSiegeSync@@3VCCastleSiegeSync@@A:BYTE	; g_CastleSiegeSync
EXTRN	?PHeadSetW@@YAXPAEEH@Z:PROC			; PHeadSetW
EXTRN	?InSafeZone@ZtUser@@QAE_NH@Z:PROC		; ZtUser::InSafeZone
EXTRN	?g_ZtUser@@3VZtUser@@A:BYTE			; g_ZtUser
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?NewShopRecv@@YAXPAUCG_NEW_CASH_SHOP@@H@Z
_TEXT	SEGMENT
_size$ = -1064						; size = 4
_ShopNum$ = -1060					; size = 4
_pShopItemCount$ = -1056				; size = 6
_pRequest$ = -1048					; size = 6
_pResult$ = -1040					; size = 11
_SendByte$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_Recv$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?NewShopRecv@@YAXPAUCG_NEW_CASH_SHOP@@H@Z PROC		; NewShopRecv, COMDAT

; 1034 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 04 00
	00		 sub	 esp, 1064		; 00000428H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 0c	 mov	 ebx, DWORD PTR _aIndex$[ebp]
  00017	57		 push	 edi
  00018	8b 7d 08	 mov	 edi, DWORD PTR _Recv$[ebp]

; 1035 : 	if(OBJMAX_RANGE(aIndex) == 0)

  0001b	85 db		 test	 ebx, ebx
  0001d	0f 88 7c 01 00
	00		 js	 $LN3@NewShopRec
  00023	33 c0		 xor	 eax, eax
  00025	81 fb 97 3a 00
	00		 cmp	 ebx, 14999		; 00003a97H
  0002b	0f 9e c0	 setle	 al
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 69 01 00
	00		 je	 $LN3@NewShopRec

; 1036 : 	{
; 1037 : 		return;
; 1038 : 	}
; 1039 : 
; 1040 : 	LPOBJ lpUser = &gObj[aIndex];

  00036	56		 push	 esi
  00037	8b f3		 mov	 esi, ebx
  00039	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0003f	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 1041 : 
; 1042 : 	if(lpUser->Connected < PLAYER_PLAYING)

  00045	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00049	0f 8c 4f 01 00
	00		 jl	 $LN13@NewShopRec

; 1043 : 	{
; 1044 : 		return;
; 1045 : 	}
; 1046 : 
; 1047 : 	if(g_ZtUser.InSafeZone(aIndex) == false)

  0004f	53		 push	 ebx
  00050	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtUser@@3VZtUser@@A ; g_ZtUser
  00055	e8 00 00 00 00	 call	 ?InSafeZone@ZtUser@@QAE_NH@Z ; ZtUser::InSafeZone
  0005a	84 c0		 test	 al, al
  0005c	0f 84 3c 01 00
	00		 je	 $LN13@NewShopRec

; 1048 : 	{
; 1049 : 		return;
; 1050 : 	}
; 1051 : 
; 1052 : 	int ShopNum = Recv->Number;

  00062	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  00066	89 85 dc fb ff
	ff		 mov	 DWORD PTR _ShopNum$[ebp], eax

; 1053 : 
; 1054 : 	if ( ShopNum < MAX_SHOP && ShopNum >= 0 )

  0006c	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  0006f	0f 87 29 01 00
	00		 ja	 $LN13@NewShopRec

; 1055 : 	{
; 1056 : 		if ( ShopC[ShopNum].ItemCount < TRUE )

  00075	8b f8		 mov	 edi, eax
  00077	69 ff 9c 6f 00
	00		 imul	 edi, 28572		; 00006f9cH
  0007d	83 bf 7c 00 00
	00 01		 cmp	 DWORD PTR ?ShopC@@3PAVCShop@@A[edi+124], 1
  00084	0f 8c 14 01 00
	00		 jl	 $LN13@NewShopRec

; 1057 : 		{
; 1058 : 			return;
; 1059 : 		}
; 1060 : 	}
; 1061 : 	else
; 1062 : 	{
; 1063 : 		return;
; 1064 : 	}
; 1065 : 
; 1066 : 	lpUser->TargetShopNumber = ShopNum;

  0008a	66 89 86 5a 04
	00 00		 mov	 WORD PTR [esi+1114], ax

; 1067 : 	lpUser->m_IfState.use = 1;
; 1068 : 	lpUser->m_IfState.type = 3;

  00091	8b 86 1c 0e 00
	00		 mov	 eax, DWORD PTR [esi+3612]
  00097	25 fd 00 ff ff	 and	 eax, -65283		; ffff00fdH

; 1069 : 	lpUser->m_ShopTime = 0;
; 1070 : 
; 1071 : 	PMSG_TALKRESULT pResult;
; 1072 : 	pResult.h.c = 0xC3;
; 1073 : 	pResult.h.headcode = 0x30;
; 1074 : 	pResult.h.size = sizeof(pResult);
; 1075 : 	pResult.result = 0;
; 1076 : 	DataSend(aIndex, (LPBYTE)&pResult, pResult.h.size);

  0009c	6a 0b		 push	 11			; 0000000bH
  0009e	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _pResult$[ebp]
  000a4	0d c1 00 00 00	 or	 eax, 193		; 000000c1H
  000a9	89 86 1c 0e 00
	00		 mov	 DWORD PTR [esi+3612], eax
  000af	c6 86 90 03 00
	00 00		 mov	 BYTE PTR [esi+912], 0
  000b6	51		 push	 ecx
  000b7	53		 push	 ebx
  000b8	c6 85 f0 fb ff
	ff c3		 mov	 BYTE PTR _pResult$[ebp], 195 ; 000000c3H
  000bf	66 c7 85 f1 fb
	ff ff 0b 30	 mov	 WORD PTR _pResult$[ebp+1], 12299 ; 0000300bH
  000c8	c6 85 f3 fb ff
	ff 00		 mov	 BYTE PTR _pResult$[ebp+3], 0
  000cf	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1077 : 
; 1078 : 	BYTE SendByte[1024];
; 1079 : 	int lOfs = 0;
; 1080 : 
; 1081 : 	PMSG_SHOPITEMCOUNT pShopItemCount;
; 1082 : 
; 1083 : 	lOfs += sizeof(pShopItemCount );
; 1084 : 
; 1085 : 	int size = lOfs + ShopC[ShopNum].SendItemDataLen;

  000d4	8b 87 f8 69 00
	00		 mov	 eax, DWORD PTR ?ShopC@@3PAVCShop@@A[edi+27128]
  000da	83 c0 06	 add	 eax, 6

; 1086 : 	PHeadSetW((LPBYTE)&pShopItemCount, 0x31, size);

  000dd	50		 push	 eax
  000de	8d 95 e0 fb ff
	ff		 lea	 edx, DWORD PTR _pShopItemCount$[ebp]
  000e4	6a 31		 push	 49			; 00000031H
  000e6	52		 push	 edx
  000e7	89 85 d8 fb ff
	ff		 mov	 DWORD PTR _size$[ebp], eax
  000ed	e8 00 00 00 00	 call	 ?PHeadSetW@@YAXPAEEH@Z	; PHeadSetW

; 1087 : 	pShopItemCount.Type = 0;
; 1088 : 	pShopItemCount.count = ShopC[ShopNum].ItemCount;

  000f2	8a 87 7c 00 00
	00		 mov	 al, BYTE PTR ?ShopC@@3PAVCShop@@A[edi+124]

; 1089 : 	memcpy(SendByte, &pShopItemCount, sizeof(pShopItemCount));

  000f8	8b 8d e0 fb ff
	ff		 mov	 ecx, DWORD PTR _pShopItemCount$[ebp]
  000fe	88 85 e5 fb ff
	ff		 mov	 BYTE PTR _pShopItemCount$[ebp+5], al

; 1090 : 	memcpy(&SendByte[lOfs], ShopC[ShopNum].SendItemData, ShopC[ShopNum].SendItemDataLen);

  00104	8b 87 f8 69 00
	00		 mov	 eax, DWORD PTR ?ShopC@@3PAVCShop@@A[edi+27128]
  0010a	c6 85 e4 fb ff
	ff 00		 mov	 BYTE PTR _pShopItemCount$[ebp+4], 0
  00111	66 8b 95 e4 fb
	ff ff		 mov	 dx, WORD PTR _pShopItemCount$[ebp+4]
  00118	89 8d fc fb ff
	ff		 mov	 DWORD PTR _SendByte$[ebp], ecx
  0011e	50		 push	 eax
  0011f	8d 8f e0 63 00
	00		 lea	 ecx, DWORD PTR ?ShopC@@3PAVCShop@@A[edi+25568]
  00125	66 89 95 00 fc
	ff ff		 mov	 WORD PTR _SendByte$[ebp+4], dx
  0012c	51		 push	 ecx
  0012d	8d 95 02 fc ff
	ff		 lea	 edx, DWORD PTR _SendByte$[ebp+6]
  00133	52		 push	 edx
  00134	e8 00 00 00 00	 call	 _memcpy

; 1091 : 
; 1092 : 	DataSend(aIndex, SendByte, size);

  00139	8b 85 d8 fb ff
	ff		 mov	 eax, DWORD PTR _size$[ebp]
  0013f	50		 push	 eax
  00140	8d 8d fc fb ff
	ff		 lea	 ecx, DWORD PTR _SendByte$[ebp]
  00146	51		 push	 ecx
  00147	53		 push	 ebx
  00148	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1093 : 	GCAnsCsMapSvrTaxInfo(lpUser->m_Index,2,  ::g_CastleSiegeSync.GetTaxRateStore(lpUser->m_Index));

  0014d	8b 16		 mov	 edx, DWORD PTR [esi]
  0014f	83 c4 30	 add	 esp, 48			; 00000030H
  00152	52		 push	 edx
  00153	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00158	e8 00 00 00 00	 call	 ?GetTaxRateStore@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateStore
  0015d	50		 push	 eax
  0015e	8b 06		 mov	 eax, DWORD PTR [esi]
  00160	6a 02		 push	 2
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 1094 : 	
; 1095 : 	GC_SHOP_CLICK pRequest;
; 1096 : 	pRequest.h.set((LPBYTE)&pRequest, 0xFB, 0x06, sizeof(GC_SHOP_CLICK));	//need next
; 1097 : 	// ----
; 1098 : 	pRequest.Shop_Num = ShopNum;

  00168	66 8b 8d dc fb
	ff ff		 mov	 cx, WORD PTR _ShopNum$[ebp]

; 1099 : 	// ----
; 1100 : 	DataSend(aIndex, (LPBYTE)&pRequest, sizeof(pRequest));

  0016f	6a 06		 push	 6
  00171	8d 95 e8 fb ff
	ff		 lea	 edx, DWORD PTR _pRequest$[ebp]
  00177	52		 push	 edx
  00178	53		 push	 ebx
  00179	c7 85 e8 fb ff
	ff c1 06 fb 06	 mov	 DWORD PTR _pRequest$[ebp], 117114561 ; 06fb06c1H
  00183	66 89 8d ec fb
	ff ff		 mov	 WORD PTR _pRequest$[ebp+4], cx
  0018a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0018f	83 c4 18	 add	 esp, 24			; 00000018H

; 1101 : 	                                       
; 1102 : 	ShopC[ShopNum].GC_ShopInfo(aIndex);

  00192	53		 push	 ebx
  00193	8d 8f 00 00 00
	00		 lea	 ecx, DWORD PTR ?ShopC@@3PAVCShop@@A[edi]
  00199	e8 00 00 00 00	 call	 ?GC_ShopInfo@CShop@@QAEXH@Z ; CShop::GC_ShopInfo
$LN13@NewShopRec:
  0019e	5e		 pop	 esi
$LN3@NewShopRec:

; 1103 : }

  0019f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a2	5f		 pop	 edi
  001a3	33 cd		 xor	 ecx, ebp
  001a5	5b		 pop	 ebx
  001a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ab	8b e5		 mov	 esp, ebp
  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
?NewShopRecv@@YAXPAUCG_NEW_CASH_SHOP@@H@Z ENDP		; NewShopRecv
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
EXTRN	_vsprintf_s:PROC
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 323  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, _Deref_post_z_ char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00006	8b 55 08	 mov	 edx, DWORD PTR __Dest$[ebp]
  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	68 00 01 00 00	 push	 256			; 00000100H
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 _vsprintf_s
  00019	83 c4 10	 add	 esp, 16			; 00000010H
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCShop@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCShop@@UAEPAXI@Z PROC				; CShop::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CShop@@UAE@XZ	; CShop::~CShop
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCShop@@UAEPAXI@Z ENDP				; CShop::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BB@FOBLMGCK@error?9L2?5?3?5?$CFs?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_08LFHMEAP@Shop?4cpp?$AA@			; `string'
PUBLIC	?InsertItem@CShop@@QAEHHHHHHHHHH@Z		; CShop::InsertItem
EXTRN	?ItemByteConvert@@YAXPAEVCItem@@@Z:PROC		; ItemByteConvert
EXTRN	?ClearSlotOption@CSocketOption@@QAEXPAVCItem@@E@Z:PROC ; CSocketOption::ClearSlotOption
EXTRN	?g_iShopBuySocketItemSlotCount@@3HA:DWORD	; g_iShopBuySocketItemSlotCount
EXTRN	?CheckItemType@CSocketOption@@QAEEH@Z:PROC	; CSocketOption::CheckItemType
EXTRN	?g_SocketOption@@3VCSocketOption@@A:BYTE	; g_SocketOption
EXTRN	?Value@CItem@@QAEXXZ:PROC			; CItem::Value
EXTRN	?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z:PROC	; CItem::Convert
EXTRN	?ItemGetDurability@@YAHHHHH@Z:PROC		; ItemGetDurability
EXTRN	?ItemGetSize@@YAXHAAH0@Z:PROC			; ItemGetSize
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
;	COMDAT ??_C@_0BB@FOBLMGCK@error?9L2?5?3?5?$CFs?5?$CFd?$AA@
; File e:\work\tranet_version\gs\gameserver\shop.cpp
CONST	SEGMENT
??_C@_0BB@FOBLMGCK@error?9L2?5?3?5?$CFs?5?$CFd?$AA@ DB 'error-L2 : %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LFHMEAP@Shop?4cpp?$AA@
CONST	SEGMENT
??_C@_08LFHMEAP@Shop?4cpp?$AA@ DB 'Shop.cpp', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?InsertItem@CShop@@QAEHHHHHHHHHH@Z
_TEXT	SEGMENT
tv225 = -12						; size = 4
_width$ = -8						; size = 4
_blank$ = -4						; size = 4
tv315 = 8						; size = 4
_type$ = 8						; size = 4
_height$ = 12						; size = 4
_index$ = 12						; size = 4
_level$ = 16						; size = 4
_dur$ = 20						; size = 4
_op1$ = 24						; size = 4
_op2$ = 28						; size = 4
_op3$ = 32						; size = 4
_Excellent$ = 36					; size = 4
_Ancient$ = 40						; size = 4
?InsertItem@CShop@@QAEHHHHHHHHHH@Z PROC			; CShop::InsertItem, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 44   : 	int itemp;
; 45   : 	int width;
; 46   : 	int height;
; 47   : 	int x;
; 48   : 	int y;
; 49   : 	int blank;
; 50   : 
; 51   : 	blank = -1;
; 52   : 	itemp = type * MAX_SUBTYPE_ITEMS + index;

  00006	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0000f	8b c1		 mov	 eax, ecx
  00011	c1 e0 09	 shl	 eax, 9
  00014	56		 push	 esi
  00015	03 c2		 add	 eax, edx
  00017	57		 push	 edi
  00018	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _blank$[ebp], -1
  0001f	89 45 f4	 mov	 DWORD PTR tv225[ebp], eax

; 53   : 	
; 54   : 	if ( itemp < 0 )

  00022	79 2c		 jns	 SHORT $LN15@InsertItem

; 55   : 	{
; 56   : 		MsgBox(lMsg.Get(MSGGET(2, 53)), __FILE__, __LINE__, type, index);

  00024	52		 push	 edx
  00025	51		 push	 ecx
  00026	6a 38		 push	 56			; 00000038H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  0002d	68 35 02 00 00	 push	 565			; 00000235H
  00032	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00037	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00042	83 c4 14	 add	 esp, 20			; 00000014H

; 65   : 		return FALSE;

  00045	33 c0		 xor	 eax, eax

; 113  : 
; 114  : 	return TRUE;
; 115  : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 24 00	 ret	 36			; 00000024H
$LN15@InsertItem:

; 57   : 		return false;
; 58   : 	}
; 59   : 	
; 60   : 	ItemGetSize(itemp, width, height);

  00050	8d 4d 0c	 lea	 ecx, DWORD PTR _height$[ebp]
  00053	51		 push	 ecx
  00054	8d 55 f8	 lea	 edx, DWORD PTR _width$[ebp]
  00057	52		 push	 edx
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?ItemGetSize@@YAXHAAH0@Z ; ItemGetSize
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 61   : 
; 62   : 	if ( width < 0 || height < 0 )

  00061	83 7d f8 00	 cmp	 DWORD PTR _width$[ebp], 0
  00065	0f 8c 51 01 00
	00		 jl	 $LN13@InsertItem
  0006b	83 7d 0c 00	 cmp	 DWORD PTR _height$[ebp], 0
  0006f	0f 8c 47 01 00
	00		 jl	 $LN13@InsertItem

; 66   : 	}
; 67   : 
; 68   : 	for ( y=0;y<15;y++)

  00075	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00078	33 ff		 xor	 edi, edi
  0007a	89 45 08	 mov	 DWORD PTR tv315[ebp], eax
  0007d	8d 49 00	 npad	 3
$LL24@InsertItem:

; 69   : 	{
; 70   : 		for ( x=0;x<8;x++)

  00080	33 f6		 xor	 esi, esi
$LL26@InsertItem:

; 71   : 		{
; 72   : 			if ( this->ShopInventoryMap[x + y*8] == 0 )

  00082	8b 4d 08	 mov	 ecx, DWORD PTR tv315[ebp]
  00085	80 3c 31 00	 cmp	 BYTE PTR [ecx+esi], 0
  00089	75 18		 jne	 SHORT $LN8@InsertItem

; 73   : 			{
; 74   : 				blank = this->InentoryMapCheck(x, y, width, height);

  0008b	8b 55 0c	 mov	 edx, DWORD PTR _height$[ebp]
  0008e	8b 45 f8	 mov	 eax, DWORD PTR _width$[ebp]
  00091	52		 push	 edx
  00092	50		 push	 eax
  00093	57		 push	 edi
  00094	56		 push	 esi
  00095	8b cb		 mov	 ecx, ebx
  00097	e8 00 00 00 00	 call	 ?InentoryMapCheck@CShop@@QAEHHHHH@Z ; CShop::InentoryMapCheck
  0009c	89 45 fc	 mov	 DWORD PTR _blank$[ebp], eax

; 75   : 
; 76   : 				if ( blank >= 0 )

  0009f	85 c0		 test	 eax, eax
  000a1	79 38		 jns	 SHORT $skiploop$213786
$LN8@InsertItem:

; 69   : 	{
; 70   : 		for ( x=0;x<8;x++)

  000a3	46		 inc	 esi
  000a4	83 fe 08	 cmp	 esi, 8
  000a7	7c d9		 jl	 SHORT $LL26@InsertItem

; 66   : 	}
; 67   : 
; 68   : 	for ( y=0;y<15;y++)

  000a9	83 45 08 08	 add	 DWORD PTR tv315[ebp], 8
  000ad	47		 inc	 edi
  000ae	83 ff 0f	 cmp	 edi, 15			; 0000000fH
  000b1	7c cd		 jl	 SHORT $LL24@InsertItem

; 77   : 				{
; 78   : 					goto skiploop;
; 79   : 				}
; 80   : 			}
; 81   : 		}
; 82   : 	}
; 83   : 
; 84   : 	if ( blank < 0 )

  000b3	83 7d fc 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000b7	7d 1f		 jge	 SHORT $LN23@InsertItem

; 85   : 	{
; 86   : 		MsgBox("error-L2 : %s %d", __FILE__, __LINE__);

  000b9	6a 56		 push	 86			; 00000056H
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FOBLMGCK@error?9L2?5?3?5?$CFs?5?$CFd?$AA@
  000c5	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cd	33 c0		 xor	 eax, eax

; 113  : 
; 114  : 	return TRUE;
; 115  : }

  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 24 00	 ret	 36			; 00000024H
$LN23@InsertItem:

; 77   : 				{
; 78   : 					goto skiploop;
; 79   : 				}
; 80   : 			}
; 81   : 		}
; 82   : 	}
; 83   : 
; 84   : 	if ( blank < 0 )

  000d8	8b 45 fc	 mov	 eax, DWORD PTR _blank$[ebp]
$skiploop$213786:

; 87   : 		return FALSE;
; 88   : 	}
; 89   : 
; 90   : skiploop:
; 91   : 
; 92   : 	this->m_item[blank].m_Level = level;
; 93   : 
; 94   : 	if ( dur == 0 )
; 95   : 	{
; 96   : 		dur = ItemGetDurability(ITEMGET(type, index), level, 0, 0);

  000db	8b 7d f4	 mov	 edi, DWORD PTR tv225[ebp]
  000de	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  000e4	83 7d 14 00	 cmp	 DWORD PTR _dur$[ebp], 0
  000e8	8d 34 18	 lea	 esi, DWORD PTR [eax+ebx]
  000eb	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  000ee	66 89 86 88 00
	00 00		 mov	 WORD PTR [esi+136], ax
  000f5	75 11		 jne	 SHORT $LN2@InsertItem
  000f7	6a 00		 push	 0
  000f9	6a 00		 push	 0
  000fb	50		 push	 eax
  000fc	57		 push	 edi
  000fd	e8 00 00 00 00	 call	 ?ItemGetDurability@@YAHHHHH@Z ; ItemGetDurability
  00102	83 c4 10	 add	 esp, 16			; 00000010H
  00105	89 45 14	 mov	 DWORD PTR _dur$[ebp], eax
$LN2@InsertItem:

; 97   : 	}
; 98   : 
; 99   : 	this->m_item[blank].m_Durability = (float)dur;
; 100  : 	this->m_item[blank].Convert(itemp, op1, op2, op3, Excellent, Ancient, 0, NULL, 0xFF, 0, CURRENT_DB_VERSION);

  00108	8b 4d 28	 mov	 ecx, DWORD PTR _Ancient$[ebp]
  0010b	db 45 14	 fild	 DWORD PTR _dur$[ebp]
  0010e	8b 55 24	 mov	 edx, DWORD PTR _Excellent$[ebp]
  00111	8b 45 20	 mov	 eax, DWORD PTR _op3$[ebp]
  00114	6a 03		 push	 3
  00116	d9 9e a4 00 00
	00		 fstp	 DWORD PTR [esi+164]
  0011c	6a 00		 push	 0
  0011e	68 ff 00 00 00	 push	 255			; 000000ffH
  00123	6a 00		 push	 0
  00125	6a 00		 push	 0
  00127	51		 push	 ecx
  00128	8b 4d 1c	 mov	 ecx, DWORD PTR _op2$[ebp]
  0012b	52		 push	 edx
  0012c	8b 55 18	 mov	 edx, DWORD PTR _op1$[ebp]
  0012f	50		 push	 eax
  00130	51		 push	 ecx
  00131	52		 push	 edx
  00132	83 ee 80	 sub	 esi, -128		; ffffff80H
  00135	57		 push	 edi
  00136	8b ce		 mov	 ecx, esi
  00138	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 101  : 	this->m_item[blank].Value();

  0013d	8b ce		 mov	 ecx, esi
  0013f	e8 00 00 00 00	 call	 ?Value@CItem@@QAEXXZ	; CItem::Value

; 102  : 
; 103  : 	if(g_SocketOption.CheckItemType(itemp) == 1)//Season 4.5 addon

  00144	57		 push	 edi
  00145	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  0014a	e8 00 00 00 00	 call	 ?CheckItemType@CSocketOption@@QAEEH@Z ; CSocketOption::CheckItemType
  0014f	3c 01		 cmp	 al, 1
  00151	75 13		 jne	 SHORT $LN1@InsertItem

; 104  : 	{
; 105  : 		g_SocketOption.ClearSlotOption(&this->m_item[blank],g_iShopBuySocketItemSlotCount);

  00153	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?g_iShopBuySocketItemSlotCount@@3HA
  0015a	50		 push	 eax
  0015b	56		 push	 esi
  0015c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  00161	e8 00 00 00 00	 call	 ?ClearSlotOption@CSocketOption@@QAEXPAVCItem@@E@Z ; CSocketOption::ClearSlotOption
$LN1@InsertItem:

; 106  : 	}
; 107  : 
; 108  : 	this->SendItemData[this->SendItemDataLen] = blank;

  00166	8b 8b f8 69 00
	00		 mov	 ecx, DWORD PTR [ebx+27128]
  0016c	8a 55 fc	 mov	 dl, BYTE PTR _blank$[ebp]
  0016f	88 94 19 e0 63
	00 00		 mov	 BYTE PTR [ecx+ebx+25568], dl

; 109  : 	this->SendItemDataLen++;

  00176	ff 83 f8 69 00
	00		 inc	 DWORD PTR [ebx+27128]
  0017c	8b 83 f8 69 00
	00		 mov	 eax, DWORD PTR [ebx+27128]

; 110  : 	ItemByteConvert((LPBYTE)&this->SendItemData[this->SendItemDataLen], this->m_item[blank]);

  00182	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00188	8d 84 18 e0 63
	00 00		 lea	 eax, DWORD PTR [eax+ebx+25568]
  0018f	8b fc		 mov	 edi, esp
  00191	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00196	50		 push	 eax
  00197	f3 a5		 rep movsd
  00199	e8 00 00 00 00	 call	 ?ItemByteConvert@@YAXPAEVCItem@@@Z ; ItemByteConvert

; 111  : 	this->SendItemDataLen += MAX_ITEM_INFO;

  0019e	83 83 f8 69 00
	00 0c		 add	 DWORD PTR [ebx+27128], 12 ; 0000000cH

; 112  : 	this->ItemCount++;

  001a5	b8 01 00 00 00	 mov	 eax, 1
  001aa	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  001b0	01 43 7c	 add	 DWORD PTR [ebx+124], eax

; 113  : 
; 114  : 	return TRUE;
; 115  : }

  001b3	5f		 pop	 edi
  001b4	5e		 pop	 esi
  001b5	5b		 pop	 ebx
  001b6	8b e5		 mov	 esp, ebp
  001b8	5d		 pop	 ebp
  001b9	c2 24 00	 ret	 36			; 00000024H
$LN13@InsertItem:

; 63   : 	{
; 64   : 		MsgBox(lMsg.Get(MSGGET(2, 54)), __FILE__, __LINE__);

  001bc	6a 40		 push	 64			; 00000040H
  001be	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  001c3	68 36 02 00 00	 push	 566			; 00000236H
  001c8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001cd	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001d8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 113  : 
; 114  : 	return TRUE;
; 115  : }

  001db	5f		 pop	 edi
  001dc	5e		 pop	 esi
  001dd	33 c0		 xor	 eax, eax
  001df	5b		 pop	 ebx
  001e0	8b e5		 mov	 esp, ebp
  001e2	5d		 pop	 ebp
  001e3	c2 24 00	 ret	 36			; 00000024H
?InsertItem@CShop@@QAEHHHHHHHHHH@Z ENDP			; CShop::InsertItem
_TEXT	ENDS
PUBLIC	?InsertItemSocket@CShop@@QAEHHHHHHHHHHEEEEEEK@Z	; CShop::InsertItemSocket
; Function compile flags: /Ogtp
;	COMDAT ?InsertItemSocket@CShop@@QAEHHHHHHHHHHEEEEEEK@Z
_TEXT	SEGMENT
_width$ = -20						; size = 4
_height$ = -16						; size = 4
tv353 = -12						; size = 4
tv486 = -8						; size = 4
_blank$ = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
_level$ = 16						; size = 4
_dur$ = 20						; size = 4
_op1$ = 24						; size = 4
_op2$ = 28						; size = 4
_op3$ = 32						; size = 4
_Excellent$ = 36					; size = 4
_Ancient$ = 40						; size = 4
_Sock1$ = 44						; size = 1
_Sock2$ = 48						; size = 1
_Sock3$ = 52						; size = 1
_Sock4$ = 56						; size = 1
_Sock5$ = 60						; size = 1
_iPayType$ = 64						; size = 1
_iPayPrice$ = 68					; size = 4
?InsertItemSocket@CShop@@QAEHHHHHHHHHHEEEEEEK@Z PROC	; CShop::InsertItemSocket, COMDAT
; _this$ = ecx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 120  : 	int itemp;
; 121  : 	int width;
; 122  : 	int height;
; 123  : 	int x;
; 124  : 	int y;
; 125  : 	int blank;
; 126  : 
; 127  : 	blank = -1;
; 128  : 	itemp = type * MAX_SUBTYPE_ITEMS + index;

  00006	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0000f	8b c1		 mov	 eax, ecx
  00011	c1 e0 09	 shl	 eax, 9
  00014	56		 push	 esi
  00015	03 c2		 add	 eax, edx
  00017	57		 push	 edi
  00018	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _blank$[ebp], -1
  0001f	89 45 f4	 mov	 DWORD PTR tv353[ebp], eax

; 129  : 	
; 130  : 	if ( itemp < 0 )

  00022	79 2f		 jns	 SHORT $LN15@InsertItem@2

; 131  : 	{
; 132  : 		MsgBox(lMsg.Get(MSGGET(2, 53)), __FILE__, __LINE__, type, index);

  00024	52		 push	 edx
  00025	51		 push	 ecx
  00026	68 84 00 00 00	 push	 132			; 00000084H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  00030	68 35 02 00 00	 push	 565			; 00000235H
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0003a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00045	83 c4 14	 add	 esp, 20			; 00000014H

; 141  : 		return FALSE;

  00048	33 c0		 xor	 eax, eax

; 203  : 
; 204  : 	return TRUE;
; 205  : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 40 00	 ret	 64			; 00000040H
$LN15@InsertItem@2:

; 133  : 		return false;
; 134  : 	}
; 135  : 	
; 136  : 	ItemGetSize(itemp, width, height);

  00053	8d 4d f0	 lea	 ecx, DWORD PTR _height$[ebp]
  00056	51		 push	 ecx
  00057	8d 55 ec	 lea	 edx, DWORD PTR _width$[ebp]
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?ItemGetSize@@YAXHAAH0@Z ; ItemGetSize
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH

; 137  : 
; 138  : 	if ( width < 0 || height < 0 )

  00064	83 7d ec 00	 cmp	 DWORD PTR _width$[ebp], 0
  00068	0f 8c eb 01 00
	00		 jl	 $LN13@InsertItem@2
  0006e	83 7d f0 00	 cmp	 DWORD PTR _height$[ebp], 0
  00072	0f 8c e1 01 00
	00		 jl	 $LN13@InsertItem@2

; 142  : 	}
; 143  : 
; 144  : 	for ( y=0;y<15;y++)

  00078	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0007b	33 ff		 xor	 edi, edi
  0007d	89 45 f8	 mov	 DWORD PTR tv486[ebp], eax
$LL24@InsertItem@2:

; 145  : 	{
; 146  : 		for ( x=0;x<8;x++)

  00080	33 f6		 xor	 esi, esi
$LL25@InsertItem@2:

; 147  : 		{
; 148  : 			if ( this->ShopInventoryMap[x + y*8] == 0 )

  00082	8b 4d f8	 mov	 ecx, DWORD PTR tv486[ebp]
  00085	80 3c 31 00	 cmp	 BYTE PTR [ecx+esi], 0
  00089	75 18		 jne	 SHORT $LN8@InsertItem@2

; 149  : 			{
; 150  : 				blank = this->InentoryMapCheck(x, y, width, height);

  0008b	8b 55 f0	 mov	 edx, DWORD PTR _height$[ebp]
  0008e	8b 45 ec	 mov	 eax, DWORD PTR _width$[ebp]
  00091	52		 push	 edx
  00092	50		 push	 eax
  00093	57		 push	 edi
  00094	56		 push	 esi
  00095	8b cb		 mov	 ecx, ebx
  00097	e8 00 00 00 00	 call	 ?InentoryMapCheck@CShop@@QAEHHHHH@Z ; CShop::InentoryMapCheck
  0009c	89 45 fc	 mov	 DWORD PTR _blank$[ebp], eax

; 151  : 
; 152  : 				if ( blank >= 0 )

  0009f	85 c0		 test	 eax, eax
  000a1	79 3b		 jns	 SHORT $skiploop$213830
$LN8@InsertItem@2:

; 145  : 	{
; 146  : 		for ( x=0;x<8;x++)

  000a3	46		 inc	 esi
  000a4	83 fe 08	 cmp	 esi, 8
  000a7	7c d9		 jl	 SHORT $LL25@InsertItem@2

; 142  : 	}
; 143  : 
; 144  : 	for ( y=0;y<15;y++)

  000a9	83 45 f8 08	 add	 DWORD PTR tv486[ebp], 8
  000ad	47		 inc	 edi
  000ae	83 ff 0f	 cmp	 edi, 15			; 0000000fH
  000b1	7c cd		 jl	 SHORT $LL24@InsertItem@2

; 153  : 				{
; 154  : 					goto skiploop;
; 155  : 				}
; 156  : 			}
; 157  : 		}
; 158  : 	}
; 159  : 
; 160  : 	if ( blank < 0 )

  000b3	83 7d fc 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000b7	7d 22		 jge	 SHORT $LN23@InsertItem@2

; 161  : 	{
; 162  : 		MsgBox("error-L2 : %s %d", __FILE__, __LINE__);

  000b9	68 a2 00 00 00	 push	 162			; 000000a2H
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FOBLMGCK@error?9L2?5?3?5?$CFs?5?$CFd?$AA@
  000c8	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	33 c0		 xor	 eax, eax

; 203  : 
; 204  : 	return TRUE;
; 205  : }

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 40 00	 ret	 64			; 00000040H
$LN23@InsertItem@2:

; 153  : 				{
; 154  : 					goto skiploop;
; 155  : 				}
; 156  : 			}
; 157  : 		}
; 158  : 	}
; 159  : 
; 160  : 	if ( blank < 0 )

  000db	8b 45 fc	 mov	 eax, DWORD PTR _blank$[ebp]
$skiploop$213830:

; 163  : 		return FALSE;
; 164  : 	}
; 165  : 
; 166  : skiploop:
; 167  : 
; 168  : 	this->m_item[blank].m_Level = level;

  000de	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H

; 169  : 
; 170  : 	if ( dur == 0 )

  000e4	83 7d 14 00	 cmp	 DWORD PTR _dur$[ebp], 0
  000e8	8d 3c 18	 lea	 edi, DWORD PTR [eax+ebx]
  000eb	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  000ee	66 89 87 88 00
	00 00		 mov	 WORD PTR [edi+136], ax
  000f5	75 14		 jne	 SHORT $LN2@InsertItem@2

; 171  : 	{
; 172  : 		dur = ItemGetDurability(ITEMGET(type, index), level, 0, 0);

  000f7	8b 4d f4	 mov	 ecx, DWORD PTR tv353[ebp]
  000fa	6a 00		 push	 0
  000fc	6a 00		 push	 0
  000fe	50		 push	 eax
  000ff	51		 push	 ecx
  00100	e8 00 00 00 00	 call	 ?ItemGetDurability@@YAHHHHH@Z ; ItemGetDurability
  00105	83 c4 10	 add	 esp, 16			; 00000010H
  00108	89 45 14	 mov	 DWORD PTR _dur$[ebp], eax
$LN2@InsertItem@2:

; 173  : 	}
; 174  : 
; 175  : 	this->m_item[blank].m_Durability = dur;
; 176  : 	this->m_item[blank].Convert(itemp, op1, op2, op3, Excellent, Ancient, 0, NULL, 0xFF, 0, CURRENT_DB_VERSION);

  0010b	8b 55 28	 mov	 edx, DWORD PTR _Ancient$[ebp]
  0010e	db 45 14	 fild	 DWORD PTR _dur$[ebp]
  00111	8b 45 24	 mov	 eax, DWORD PTR _Excellent$[ebp]
  00114	8b 4d 20	 mov	 ecx, DWORD PTR _op3$[ebp]
  00117	6a 03		 push	 3
  00119	d9 9f a4 00 00
	00		 fstp	 DWORD PTR [edi+164]
  0011f	6a 00		 push	 0
  00121	68 ff 00 00 00	 push	 255			; 000000ffH
  00126	6a 00		 push	 0
  00128	6a 00		 push	 0
  0012a	52		 push	 edx
  0012b	8b 55 1c	 mov	 edx, DWORD PTR _op2$[ebp]
  0012e	50		 push	 eax
  0012f	8b 45 18	 mov	 eax, DWORD PTR _op1$[ebp]
  00132	51		 push	 ecx
  00133	8b 4d f4	 mov	 ecx, DWORD PTR tv353[ebp]
  00136	52		 push	 edx
  00137	50		 push	 eax
  00138	8d b7 80 00 00
	00		 lea	 esi, DWORD PTR [edi+128]
  0013e	51		 push	 ecx
  0013f	8b ce		 mov	 ecx, esi
  00141	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 177  : 	this->m_item[blank].Value();

  00146	8b ce		 mov	 ecx, esi
  00148	e8 00 00 00 00	 call	 ?Value@CItem@@QAEXXZ	; CItem::Value

; 178  : 
; 179  : 	this->ShopEx[this->ItemCount].ItemType = type;

  0014d	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  00150	8d 94 40 7f 1a
	00 00		 lea	 edx, DWORD PTR [eax+eax*2+6783]
  00157	8a 45 08	 mov	 al, BYTE PTR _type$[ebp]
  0015a	88 04 93	 mov	 BYTE PTR [ebx+edx*4], al

; 180  : 	this->ShopEx[this->ItemCount].ItemIndex = index;

  0015d	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  00160	8a 55 0c	 mov	 dl, BYTE PTR _index$[ebp]
  00163	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00166	88 94 8b fd 69
	00 00		 mov	 BYTE PTR [ebx+ecx*4+27133], dl

; 181  : 	this->ShopEx[this->ItemCount].ItemLevel = level;

  0016d	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  00170	8a 4d 10	 mov	 cl, BYTE PTR _level$[ebp]
  00173	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00176	88 8c 83 fe 69
	00 00		 mov	 BYTE PTR [ebx+eax*4+27134], cl

; 182  : 	this->ShopEx[this->ItemCount].ItemExl = Excellent;

  0017d	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  00180	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  00183	8a 45 24	 mov	 al, BYTE PTR _Excellent$[ebp]
  00186	88 84 93 ff 69
	00 00		 mov	 BYTE PTR [ebx+edx*4+27135], al

; 183  : 	this->ShopEx[this->ItemCount].ItemAnc = Ancient;

  0018d	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  00190	8a 55 28	 mov	 dl, BYTE PTR _Ancient$[ebp]
  00193	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00196	88 94 8b 00 6a
	00 00		 mov	 BYTE PTR [ebx+ecx*4+27136], dl

; 184  : 	this->ShopEx[this->ItemCount].PayType = iPayType;

  0019d	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  001a0	8a 4d 40	 mov	 cl, BYTE PTR _iPayType$[ebp]
  001a3	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001a6	88 8c 83 01 6a
	00 00		 mov	 BYTE PTR [ebx+eax*4+27137], cl

; 185  : 	this->ShopEx[this->ItemCount].PayPrice = iPayPrice;

  001ad	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]

; 186  : 
; 187  : 	if(g_SocketOption.CheckItemType(itemp) == 1)

  001b0	8b 4d f4	 mov	 ecx, DWORD PTR tv353[ebp]
  001b3	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  001b6	8b 45 44	 mov	 eax, DWORD PTR _iPayPrice$[ebp]
  001b9	51		 push	 ecx
  001ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  001bf	89 84 93 04 6a
	00 00		 mov	 DWORD PTR [ebx+edx*4+27140], eax
  001c6	e8 00 00 00 00	 call	 ?CheckItemType@CSocketOption@@QAEEH@Z ; CSocketOption::CheckItemType
  001cb	3c 01		 cmp	 al, 1
  001cd	75 34		 jne	 SHORT $LN1@InsertItem@2

; 188  : 	{
; 189  : 		this->m_item[blank].m_SocketOption[0] = Sock1;

  001cf	8a 55 2c	 mov	 dl, BYTE PTR _Sock1$[ebp]

; 190  : 		this->m_item[blank].m_SocketOption[1] = Sock2;

  001d2	8a 45 30	 mov	 al, BYTE PTR _Sock2$[ebp]

; 191  : 		this->m_item[blank].m_SocketOption[2] = Sock3;

  001d5	8a 4d 34	 mov	 cl, BYTE PTR _Sock3$[ebp]
  001d8	88 97 4c 01 00
	00		 mov	 BYTE PTR [edi+332], dl

; 192  : 		this->m_item[blank].m_SocketOption[3] = Sock4;

  001de	8a 55 38	 mov	 dl, BYTE PTR _Sock4$[ebp]
  001e1	88 87 4d 01 00
	00		 mov	 BYTE PTR [edi+333], al

; 193  : 		this->m_item[blank].m_SocketOption[4] = Sock5;

  001e7	8a 45 3c	 mov	 al, BYTE PTR _Sock5$[ebp]
  001ea	88 8f 4e 01 00
	00		 mov	 BYTE PTR [edi+334], cl
  001f0	88 97 4f 01 00
	00		 mov	 BYTE PTR [edi+335], dl
  001f6	88 87 50 01 00
	00		 mov	 BYTE PTR [edi+336], al

; 194  : 
; 195  : 		this->m_item[blank].m_SocketOptionIndex = 0xFF;

  001fc	c6 87 4b 01 00
	00 ff		 mov	 BYTE PTR [edi+331], 255	; 000000ffH
$LN1@InsertItem@2:

; 196  : 	}
; 197  : 
; 198  : 	this->SendItemData[this->SendItemDataLen] = blank;

  00203	8b 8b f8 69 00
	00		 mov	 ecx, DWORD PTR [ebx+27128]
  00209	8a 55 fc	 mov	 dl, BYTE PTR _blank$[ebp]
  0020c	88 94 19 e0 63
	00 00		 mov	 BYTE PTR [ecx+ebx+25568], dl

; 199  : 	this->SendItemDataLen++;

  00213	ff 83 f8 69 00
	00		 inc	 DWORD PTR [ebx+27128]
  00219	8b 83 f8 69 00
	00		 mov	 eax, DWORD PTR [ebx+27128]

; 200  : 	ItemByteConvert((LPBYTE)&this->SendItemData[this->SendItemDataLen], this->m_item[blank]);

  0021f	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00225	8d 84 18 e0 63
	00 00		 lea	 eax, DWORD PTR [eax+ebx+25568]
  0022c	8b fc		 mov	 edi, esp
  0022e	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00233	50		 push	 eax
  00234	f3 a5		 rep movsd
  00236	e8 00 00 00 00	 call	 ?ItemByteConvert@@YAXPAEVCItem@@@Z ; ItemByteConvert

; 201  : 	this->SendItemDataLen += MAX_ITEM_INFO;

  0023b	83 83 f8 69 00
	00 0c		 add	 DWORD PTR [ebx+27128], 12 ; 0000000cH

; 202  : 	this->ItemCount++;

  00242	b8 01 00 00 00	 mov	 eax, 1
  00247	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0024d	01 43 7c	 add	 DWORD PTR [ebx+124], eax

; 203  : 
; 204  : 	return TRUE;
; 205  : }

  00250	5f		 pop	 edi
  00251	5e		 pop	 esi
  00252	5b		 pop	 ebx
  00253	8b e5		 mov	 esp, ebp
  00255	5d		 pop	 ebp
  00256	c2 40 00	 ret	 64			; 00000040H
$LN13@InsertItem@2:

; 139  : 	{
; 140  : 		MsgBox(lMsg.Get(MSGGET(2, 54)), __FILE__, __LINE__);

  00259	68 8c 00 00 00	 push	 140			; 0000008cH
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  00263	68 36 02 00 00	 push	 566			; 00000236H
  00268	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0026d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00278	83 c4 0c	 add	 esp, 12			; 0000000cH

; 203  : 
; 204  : 	return TRUE;
; 205  : }

  0027b	5f		 pop	 edi
  0027c	5e		 pop	 esi
  0027d	33 c0		 xor	 eax, eax
  0027f	5b		 pop	 ebx
  00280	8b e5		 mov	 esp, ebp
  00282	5d		 pop	 ebp
  00283	c2 40 00	 ret	 64			; 00000040H
?InsertItemSocket@CShop@@QAEHHHHHHHHHHEEEEEEK@Z ENDP	; CShop::InsertItemSocket
_TEXT	ENDS
PUBLIC	?InsertItemEx@CShop@@QAEHHHHHHHHHHEK@Z		; CShop::InsertItemEx
; Function compile flags: /Ogtp
;	COMDAT ?InsertItemEx@CShop@@QAEHHHHHHHHHHEK@Z
_TEXT	SEGMENT
tv289 = -20						; size = 4
_width$ = -16						; size = 4
_height$ = -12						; size = 4
tv404 = -8						; size = 4
_blank$ = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
_level$ = 16						; size = 4
_dur$ = 20						; size = 4
_op1$ = 24						; size = 4
_op2$ = 28						; size = 4
_op3$ = 32						; size = 4
_Excellent$ = 36					; size = 4
_Ancient$ = 40						; size = 4
_iPayType$ = 44						; size = 1
_iPayPrice$ = 48					; size = 4
?InsertItemEx@CShop@@QAEHHHHHHHHHHEK@Z PROC		; CShop::InsertItemEx, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 209  : 	int itemp;
; 210  : 	int width;
; 211  : 	int height;
; 212  : 	int x;
; 213  : 	int y;
; 214  : 	int blank;
; 215  : 
; 216  : 	blank = -1;
; 217  : 	itemp = type * MAX_SUBTYPE_ITEMS + index;

  00006	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0000f	8b c1		 mov	 eax, ecx
  00011	c1 e0 09	 shl	 eax, 9
  00014	56		 push	 esi
  00015	03 c2		 add	 eax, edx
  00017	57		 push	 edi
  00018	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _blank$[ebp], -1
  0001f	89 45 ec	 mov	 DWORD PTR tv289[ebp], eax

; 218  : 	
; 219  : 	if ( itemp < 0 )

  00022	79 2f		 jns	 SHORT $LN15@InsertItem@3

; 220  : 	{
; 221  : 		MsgBox(lMsg.Get(MSGGET(2, 53)), __FILE__, __LINE__, type, index);

  00024	52		 push	 edx
  00025	51		 push	 ecx
  00026	68 dd 00 00 00	 push	 221			; 000000ddH
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  00030	68 35 02 00 00	 push	 565			; 00000235H
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0003a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00045	83 c4 14	 add	 esp, 20			; 00000014H

; 230  : 		return FALSE;

  00048	33 c0		 xor	 eax, eax

; 290  : 
; 291  : 	return TRUE;
; 292  : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 2c 00	 ret	 44			; 0000002cH
$LN15@InsertItem@3:

; 222  : 		return false;
; 223  : 	}
; 224  : 	
; 225  : 	ItemGetSize(itemp, width, height);

  00053	8d 4d f4	 lea	 ecx, DWORD PTR _height$[ebp]
  00056	51		 push	 ecx
  00057	8d 55 f0	 lea	 edx, DWORD PTR _width$[ebp]
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?ItemGetSize@@YAXHAAH0@Z ; ItemGetSize
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH

; 226  : 
; 227  : 	if ( width < 0 || height < 0 )

  00064	83 7d f0 00	 cmp	 DWORD PTR _width$[ebp], 0
  00068	0f 8c c1 01 00
	00		 jl	 $LN13@InsertItem@3
  0006e	83 7d f4 00	 cmp	 DWORD PTR _height$[ebp], 0
  00072	0f 8c b7 01 00
	00		 jl	 $LN13@InsertItem@3

; 231  : 	}
; 232  : 
; 233  : 	for ( y=0;y<15;y++)

  00078	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0007b	33 ff		 xor	 edi, edi
  0007d	89 45 f8	 mov	 DWORD PTR tv404[ebp], eax
$LL24@InsertItem@3:

; 234  : 	{
; 235  : 		for ( x=0;x<8;x++)

  00080	33 f6		 xor	 esi, esi
$LL26@InsertItem@3:

; 236  : 		{
; 237  : 			if ( this->ShopInventoryMap[x + y*8] == 0 )

  00082	8b 4d f8	 mov	 ecx, DWORD PTR tv404[ebp]
  00085	80 3c 31 00	 cmp	 BYTE PTR [ecx+esi], 0
  00089	75 18		 jne	 SHORT $LN8@InsertItem@3

; 238  : 			{
; 239  : 				blank = this->InentoryMapCheck(x, y, width, height);

  0008b	8b 55 f4	 mov	 edx, DWORD PTR _height$[ebp]
  0008e	8b 45 f0	 mov	 eax, DWORD PTR _width$[ebp]
  00091	52		 push	 edx
  00092	50		 push	 eax
  00093	57		 push	 edi
  00094	56		 push	 esi
  00095	8b cb		 mov	 ecx, ebx
  00097	e8 00 00 00 00	 call	 ?InentoryMapCheck@CShop@@QAEHHHHH@Z ; CShop::InentoryMapCheck
  0009c	89 45 fc	 mov	 DWORD PTR _blank$[ebp], eax

; 240  : 
; 241  : 				if ( blank >= 0 )

  0009f	85 c0		 test	 eax, eax
  000a1	79 3b		 jns	 SHORT $skiploop$213867
$LN8@InsertItem@3:

; 234  : 	{
; 235  : 		for ( x=0;x<8;x++)

  000a3	46		 inc	 esi
  000a4	83 fe 08	 cmp	 esi, 8
  000a7	7c d9		 jl	 SHORT $LL26@InsertItem@3

; 231  : 	}
; 232  : 
; 233  : 	for ( y=0;y<15;y++)

  000a9	83 45 f8 08	 add	 DWORD PTR tv404[ebp], 8
  000ad	47		 inc	 edi
  000ae	83 ff 0f	 cmp	 edi, 15			; 0000000fH
  000b1	7c cd		 jl	 SHORT $LL24@InsertItem@3

; 242  : 				{
; 243  : 					goto skiploop;
; 244  : 				}
; 245  : 			}
; 246  : 		}
; 247  : 	}
; 248  : 
; 249  : 	if ( blank < 0 )

  000b3	83 7d fc 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000b7	7d 22		 jge	 SHORT $LN23@InsertItem@3

; 250  : 	{
; 251  : 		MsgBox("error-L2 : %s %d", __FILE__, __LINE__);

  000b9	68 fb 00 00 00	 push	 251			; 000000fbH
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FOBLMGCK@error?9L2?5?3?5?$CFs?5?$CFd?$AA@
  000c8	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	33 c0		 xor	 eax, eax

; 290  : 
; 291  : 	return TRUE;
; 292  : }

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 2c 00	 ret	 44			; 0000002cH
$LN23@InsertItem@3:

; 242  : 				{
; 243  : 					goto skiploop;
; 244  : 				}
; 245  : 			}
; 246  : 		}
; 247  : 	}
; 248  : 
; 249  : 	if ( blank < 0 )

  000db	8b 45 fc	 mov	 eax, DWORD PTR _blank$[ebp]
$skiploop$213867:

; 252  : 		return FALSE;
; 253  : 	}
; 254  : 
; 255  : skiploop:
; 256  : 
; 257  : 	this->m_item[blank].m_Level = level;
; 258  : 
; 259  : 	if ( dur == 0 )
; 260  : 	{
; 261  : 		dur = ItemGetDurability(ITEMGET(type, index), level, 0, 0);

  000de	8b 7d ec	 mov	 edi, DWORD PTR tv289[ebp]
  000e1	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  000e7	83 7d 14 00	 cmp	 DWORD PTR _dur$[ebp], 0
  000eb	8d 34 18	 lea	 esi, DWORD PTR [eax+ebx]
  000ee	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  000f1	66 89 86 88 00
	00 00		 mov	 WORD PTR [esi+136], ax
  000f8	75 11		 jne	 SHORT $LN2@InsertItem@3
  000fa	6a 00		 push	 0
  000fc	6a 00		 push	 0
  000fe	50		 push	 eax
  000ff	57		 push	 edi
  00100	e8 00 00 00 00	 call	 ?ItemGetDurability@@YAHHHHH@Z ; ItemGetDurability
  00105	83 c4 10	 add	 esp, 16			; 00000010H
  00108	89 45 14	 mov	 DWORD PTR _dur$[ebp], eax
$LN2@InsertItem@3:

; 262  : 	}
; 263  : 
; 264  : 	this->m_item[blank].m_Durability = dur;
; 265  : //#if(SHOP_EXL_ANC==TRUE)
; 266  : 	this->m_item[blank].Convert(itemp, op1, op2, op3, Excellent, Ancient, 0, NULL, 0xFF, 0, CURRENT_DB_VERSION);

  0010b	8b 4d 28	 mov	 ecx, DWORD PTR _Ancient$[ebp]
  0010e	db 45 14	 fild	 DWORD PTR _dur$[ebp]
  00111	8b 55 24	 mov	 edx, DWORD PTR _Excellent$[ebp]
  00114	8b 45 20	 mov	 eax, DWORD PTR _op3$[ebp]
  00117	6a 03		 push	 3
  00119	d9 9e a4 00 00
	00		 fstp	 DWORD PTR [esi+164]
  0011f	6a 00		 push	 0
  00121	68 ff 00 00 00	 push	 255			; 000000ffH
  00126	6a 00		 push	 0
  00128	6a 00		 push	 0
  0012a	51		 push	 ecx
  0012b	8b 4d 1c	 mov	 ecx, DWORD PTR _op2$[ebp]
  0012e	52		 push	 edx
  0012f	8b 55 18	 mov	 edx, DWORD PTR _op1$[ebp]
  00132	50		 push	 eax
  00133	51		 push	 ecx
  00134	52		 push	 edx
  00135	83 ee 80	 sub	 esi, -128		; ffffff80H
  00138	57		 push	 edi
  00139	8b ce		 mov	 ecx, esi
  0013b	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 267  : //#else
; 268  : //	this->m_item[blank].Convert(itemp, op1, op2, op3, 0, 0, 0, NULL, 0xFF, CURRENT_DB_VERSION);
; 269  : //#endif
; 270  : 	this->m_item[blank].Value();

  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?Value@CItem@@QAEXXZ	; CItem::Value

; 271  : 
; 272  : 	this->ShopEx[this->ItemCount].ItemType = type;

  00147	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  0014a	8a 4d 08	 mov	 cl, BYTE PTR _type$[ebp]
  0014d	8d 84 40 7f 1a
	00 00		 lea	 eax, DWORD PTR [eax+eax*2+6783]
  00154	88 0c 83	 mov	 BYTE PTR [ebx+eax*4], cl

; 273  : 	this->ShopEx[this->ItemCount].ItemIndex = index;

  00157	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  0015a	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  0015d	8a 45 0c	 mov	 al, BYTE PTR _index$[ebp]
  00160	88 84 93 fd 69
	00 00		 mov	 BYTE PTR [ebx+edx*4+27133], al

; 274  : 	this->ShopEx[this->ItemCount].ItemLevel = level;

  00167	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  0016a	8a 55 10	 mov	 dl, BYTE PTR _level$[ebp]
  0016d	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00170	88 94 8b fe 69
	00 00		 mov	 BYTE PTR [ebx+ecx*4+27134], dl

; 275  : 	this->ShopEx[this->ItemCount].ItemExl = Excellent;

  00177	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  0017a	8a 4d 24	 mov	 cl, BYTE PTR _Excellent$[ebp]
  0017d	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00180	88 8c 83 ff 69
	00 00		 mov	 BYTE PTR [ebx+eax*4+27135], cl

; 276  : 	this->ShopEx[this->ItemCount].ItemAnc = Ancient;

  00187	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  0018a	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  0018d	8a 45 28	 mov	 al, BYTE PTR _Ancient$[ebp]
  00190	88 84 93 00 6a
	00 00		 mov	 BYTE PTR [ebx+edx*4+27136], al

; 277  : 	this->ShopEx[this->ItemCount].PayType = iPayType;

  00197	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  0019a	8a 55 2c	 mov	 dl, BYTE PTR _iPayType$[ebp]
  0019d	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001a0	88 94 8b 01 6a
	00 00		 mov	 BYTE PTR [ebx+ecx*4+27137], dl

; 278  : 	this->ShopEx[this->ItemCount].PayPrice = iPayPrice;

  001a7	8b 43 7c	 mov	 eax, DWORD PTR [ebx+124]
  001aa	8b 4d 30	 mov	 ecx, DWORD PTR _iPayPrice$[ebp]
  001ad	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001b0	89 8c 83 04 6a
	00 00		 mov	 DWORD PTR [ebx+eax*4+27140], ecx

; 279  : 
; 280  : 	if(g_SocketOption.CheckItemType(itemp) == 1)//Season 4.5 addon

  001b7	57		 push	 edi
  001b8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  001bd	e8 00 00 00 00	 call	 ?CheckItemType@CSocketOption@@QAEEH@Z ; CSocketOption::CheckItemType
  001c2	3c 01		 cmp	 al, 1
  001c4	75 13		 jne	 SHORT $LN1@InsertItem@3

; 281  : 	{
; 282  : 		g_SocketOption.ClearSlotOption(&this->m_item[blank],g_iShopBuySocketItemSlotCount);

  001c6	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?g_iShopBuySocketItemSlotCount@@3HA
  001cd	52		 push	 edx
  001ce	56		 push	 esi
  001cf	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SocketOption@@3VCSocketOption@@A ; g_SocketOption
  001d4	e8 00 00 00 00	 call	 ?ClearSlotOption@CSocketOption@@QAEXPAVCItem@@E@Z ; CSocketOption::ClearSlotOption
$LN1@InsertItem@3:

; 283  : 	}
; 284  : 
; 285  : 	this->SendItemData[this->SendItemDataLen] = blank;

  001d9	8b 83 f8 69 00
	00		 mov	 eax, DWORD PTR [ebx+27128]
  001df	8a 4d fc	 mov	 cl, BYTE PTR _blank$[ebp]
  001e2	88 8c 18 e0 63
	00 00		 mov	 BYTE PTR [eax+ebx+25568], cl

; 286  : 	this->SendItemDataLen++;

  001e9	ff 83 f8 69 00
	00		 inc	 DWORD PTR [ebx+27128]
  001ef	8b 83 f8 69 00
	00		 mov	 eax, DWORD PTR [ebx+27128]

; 287  : 	ItemByteConvert((LPBYTE)&this->SendItemData[this->SendItemDataLen], this->m_item[blank]);

  001f5	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  001fb	8d 94 18 e0 63
	00 00		 lea	 edx, DWORD PTR [eax+ebx+25568]
  00202	8b fc		 mov	 edi, esp
  00204	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00209	52		 push	 edx
  0020a	f3 a5		 rep movsd
  0020c	e8 00 00 00 00	 call	 ?ItemByteConvert@@YAXPAEVCItem@@@Z ; ItemByteConvert

; 288  : 	this->SendItemDataLen += MAX_ITEM_INFO;

  00211	83 83 f8 69 00
	00 0c		 add	 DWORD PTR [ebx+27128], 12 ; 0000000cH

; 289  : 	this->ItemCount++;

  00218	b8 01 00 00 00	 mov	 eax, 1
  0021d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00223	01 43 7c	 add	 DWORD PTR [ebx+124], eax

; 290  : 
; 291  : 	return TRUE;
; 292  : }

  00226	5f		 pop	 edi
  00227	5e		 pop	 esi
  00228	5b		 pop	 ebx
  00229	8b e5		 mov	 esp, ebp
  0022b	5d		 pop	 ebp
  0022c	c2 2c 00	 ret	 44			; 0000002cH
$LN13@InsertItem@3:

; 228  : 	{
; 229  : 		MsgBox(lMsg.Get(MSGGET(2, 54)), __FILE__, __LINE__);

  0022f	68 e5 00 00 00	 push	 229			; 000000e5H
  00234	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  00239	68 36 02 00 00	 push	 566			; 00000236H
  0023e	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00243	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0024e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 290  : 
; 291  : 	return TRUE;
; 292  : }

  00251	5f		 pop	 edi
  00252	5e		 pop	 esi
  00253	33 c0		 xor	 eax, eax
  00255	5b		 pop	 ebx
  00256	8b e5		 mov	 esp, ebp
  00258	5d		 pop	 ebp
  00259	c2 2c 00	 ret	 44			; 0000002cH
?InsertItemEx@CShop@@QAEHHHHHHHHHHEK@Z ENDP		; CShop::InsertItemEx
_TEXT	ENDS
PUBLIC	??_C@_0BE@LCGMGNMN@error?9L3?5?3?5?$CFs?5?$CFs?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BI@IEDKKFGG@Shop?5data?5load?5error?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	?LoadShopItem@CShop@@QAEHPAD@Z			; CShop::LoadShopItem
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0BE@LCGMGNMN@error?9L3?5?3?5?$CFs?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@LCGMGNMN@error?9L3?5?3?5?$CFs?5?$CFs?5?$CFd?$AA@ DB 'error-L3 :'
	DB	' %s %s %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IEDKKFGG@Shop?5data?5load?5error?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BI@IEDKKFGG@Shop?5data?5load?5error?5?$CFs?$AA@ DB 'Shop data load'
	DB	' error %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadShopItem@CShop@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_dur$ = -20						; size = 4
_op1$ = -16						; size = 4
_op2$ = -12						; size = 4
_op3$ = -8						; size = 4
_Excellent$ = -4					; size = 4
_filename$ = 8						; size = 4
?LoadShopItem@CShop@@QAEHPAD@Z PROC			; CShop::LoadShopItem, COMDAT
; _this$ = ecx

; 336  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 337  : 	int Token;
; 338  : 	int type;
; 339  : 	int index;
; 340  : 	int level;
; 341  : 	int dur;
; 342  : 	int op1;
; 343  : 	int op2;
; 344  : 	int op3;
; 345  : 	int Excellent;
; 346  : 	int Ancient;
; 347  : 
; 348  : 	this->Init();

  0000a	e8 00 00 00 00	 call	 ?Init@CShop@@QAEXXZ	; CShop::Init

; 349  : 
; 350  : 	SMDFile = fopen(filename, "r");

  0000f	8b 75 08	 mov	 esi, DWORD PTR _filename$[ebp]
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _fopen
  0001d	83 c4 08	 add	 esp, 8
  00020	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 351  : 
; 352  : 	if ( SMDFile == NULL )

  00025	85 c0		 test	 eax, eax
  00027	75 17		 jne	 SHORT $LN11@LoadShopIt

; 353  : 	{
; 354  : 		MsgBox("Shop data load error %s", filename);

  00029	56		 push	 esi
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IEDKKFGG@Shop?5data?5load?5error?5?$CFs?$AA@
  0002f	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00034	83 c4 08	 add	 esp, 8

; 355  : 		return FALSE;

  00037	33 c0		 xor	 eax, eax
  00039	5e		 pop	 esi

; 409  : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN11@LoadShopIt:

; 356  : 	}
; 357  : 
; 358  : 	while ( true )
; 359  : 	{
; 360  : 		Token = GetToken();

  00040	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 361  : 
; 362  : 		if ( Token == 2 )

  00045	83 f8 02	 cmp	 eax, 2
  00048	0f 84 06 01 00
	00		 je	 $LN14@LoadShopIt
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
$LL6@LoadShopIt:

; 363  : 		{
; 364  : 			break;
; 365  : 		}
; 366  : 
; 367  : 		if ( Token == 1 )

  00050	83 f8 01	 cmp	 eax, 1
  00053	0f 85 eb 00 00
	00		 jne	 $LN13@LoadShopIt

; 368  : 		{
; 369  : 			type = (int)TokenNumber;

  00059	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0005f	e8 00 00 00 00	 call	 __ftol2_sse
  00064	8b f0		 mov	 esi, eax

; 370  : 
; 371  : 			Token = GetToken();

  00066	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 372  : 			index = (int)TokenNumber;

  0006b	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00071	e8 00 00 00 00	 call	 __ftol2_sse
  00076	8b f8		 mov	 edi, eax

; 373  : 
; 374  : 			Token = GetToken();

  00078	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 375  : 			level = (int)TokenNumber;

  0007d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00083	e8 00 00 00 00	 call	 __ftol2_sse
  00088	8b d8		 mov	 ebx, eax

; 376  : 
; 377  : 			Token = GetToken();

  0008a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 378  : 			dur = (int)TokenNumber;

  0008f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00095	e8 00 00 00 00	 call	 __ftol2_sse
  0009a	89 45 ec	 mov	 DWORD PTR _dur$[ebp], eax

; 379  : 
; 380  : 			Token = GetToken();

  0009d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 381  : 			op1 = (int)TokenNumber;

  000a2	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000a8	e8 00 00 00 00	 call	 __ftol2_sse
  000ad	89 45 f0	 mov	 DWORD PTR _op1$[ebp], eax

; 382  : 
; 383  : 			Token = GetToken();

  000b0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 384  : 			op2 = (int)TokenNumber;

  000b5	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000bb	e8 00 00 00 00	 call	 __ftol2_sse
  000c0	89 45 f4	 mov	 DWORD PTR _op2$[ebp], eax

; 385  : 
; 386  : 			Token = GetToken();

  000c3	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 387  : 			op3 = (int)TokenNumber;

  000c8	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000ce	e8 00 00 00 00	 call	 __ftol2_sse
  000d3	89 45 f8	 mov	 DWORD PTR _op3$[ebp], eax

; 388  : 
; 389  : 			Token = GetToken();

  000d6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 390  : 			Excellent = TokenNumber;

  000db	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000e1	e8 00 00 00 00	 call	 __ftol2_sse
  000e6	89 45 fc	 mov	 DWORD PTR _Excellent$[ebp], eax

; 391  : 
; 392  : 			Token = GetToken();

  000e9	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 393  : 			Ancient = TokenNumber;

  000ee	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000f4	e8 00 00 00 00	 call	 __ftol2_sse

; 394  : 
; 395  : 			if(Ancient != 5 && Ancient != 10)

  000f9	83 f8 05	 cmp	 eax, 5
  000fc	74 07		 je	 SHORT $LN2@LoadShopIt
  000fe	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00101	74 02		 je	 SHORT $LN2@LoadShopIt

; 396  : 			{
; 397  : 				Ancient = 0;

  00103	33 c0		 xor	 eax, eax
$LN2@LoadShopIt:

; 398  : 			}
; 399  : 
; 400  : 			if (this->InsertItem(type, index, level, dur, op1, op2, op3, Excellent, Ancient) == FALSE )

  00105	8b 4d f8	 mov	 ecx, DWORD PTR _op3$[ebp]
  00108	8b 55 f4	 mov	 edx, DWORD PTR _op2$[ebp]
  0010b	50		 push	 eax
  0010c	8b 45 fc	 mov	 eax, DWORD PTR _Excellent$[ebp]
  0010f	50		 push	 eax
  00110	8b 45 f0	 mov	 eax, DWORD PTR _op1$[ebp]
  00113	51		 push	 ecx
  00114	8b 4d ec	 mov	 ecx, DWORD PTR _dur$[ebp]
  00117	52		 push	 edx
  00118	50		 push	 eax
  00119	51		 push	 ecx
  0011a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	53		 push	 ebx
  0011e	57		 push	 edi
  0011f	56		 push	 esi
  00120	e8 00 00 00 00	 call	 ?InsertItem@CShop@@QAEHHHHHHHHHH@Z ; CShop::InsertItem
  00125	85 c0		 test	 eax, eax
  00127	75 1b		 jne	 SHORT $LN13@LoadShopIt

; 401  : 			{
; 402  : 				MsgBox("error-L3 : %s %s %d", filename, __FILE__, __LINE__);

  00129	8b 55 08	 mov	 edx, DWORD PTR _filename$[ebp]
  0012c	68 92 01 00 00	 push	 402			; 00000192H
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  00136	52		 push	 edx
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LCGMGNMN@error?9L3?5?3?5?$CFs?5?$CFs?5?$CFd?$AA@
  0013c	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00141	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@LoadShopIt:

; 361  : 
; 362  : 		if ( Token == 2 )

  00144	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00149	83 f8 02	 cmp	 eax, 2
  0014c	0f 85 fe fe ff
	ff		 jne	 $LL6@LoadShopIt
  00152	5f		 pop	 edi
  00153	5b		 pop	 ebx
$LN14@LoadShopIt:

; 403  : 			}
; 404  : 		}
; 405  : 	}
; 406  : 
; 407  : 	fclose(SMDFile);

  00154	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 _fclose
  0015f	83 c4 04	 add	 esp, 4

; 408  : 	return true;

  00162	b8 01 00 00 00	 mov	 eax, 1
  00167	5e		 pop	 esi

; 409  : }

  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c2 04 00	 ret	 4
?LoadShopItem@CShop@@QAEHPAD@Z ENDP			; CShop::LoadShopItem
_TEXT	ENDS
PUBLIC	?LoadShopItemEx@CShop@@QAEHPAD@Z		; CShop::LoadShopItemEx
; Function compile flags: /Ogtp
;	COMDAT ?LoadShopItemEx@CShop@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
_type$ = -56						; size = 4
_index$ = -52						; size = 4
_level$ = -48						; size = 4
_dur$ = -44						; size = 4
_op1$ = -40						; size = 4
_op2$ = -36						; size = 4
_op3$ = -32						; size = 4
_Sock1$ = -28						; size = 1
_Sock2$ = -24						; size = 1
_Sock3$ = -20						; size = 1
_Sock4$ = -16						; size = 1
_Sock5$ = -12						; size = 1
tv274 = -8						; size = 4
tv272 = -8						; size = 4
tv266 = -8						; size = 4
tv264 = -8						; size = 4
tv258 = -8						; size = 4
tv256 = -8						; size = 4
tv173 = -8						; size = 4
tv80 = -8						; size = 4
tv76 = -8						; size = 4
tv71 = -8						; size = 4
tv269 = -2						; size = 2
tv261 = -2						; size = 2
tv189 = -2						; size = 2
tv176 = -2						; size = 2
tv86 = -2						; size = 2
_filename$ = 8						; size = 4
?LoadShopItemEx@CShop@@QAEHPAD@Z PROC			; CShop::LoadShopItemEx, COMDAT
; _this$ = ecx

; 414  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	56		 push	 esi
  00007	89 4d c4	 mov	 DWORD PTR _this$[ebp], ecx

; 415  : 	int Token;
; 416  : 	int type;
; 417  : 	int index;
; 418  : 	int level;
; 419  : 	int dur;
; 420  : 	int op1;
; 421  : 	int op2;
; 422  : 	int op3;
; 423  : 	int Excellent;
; 424  : 	int Ancient;
; 425  : 	int iPayType;
; 426  : 	int iPayPrice;
; 427  : 
; 428  : 	BYTE Sock1;
; 429  : 	BYTE Sock2;
; 430  : 	BYTE Sock3;
; 431  : 	BYTE Sock4;
; 432  : 	BYTE Sock5;
; 433  : 
; 434  : 	this->Init();

  0000a	e8 00 00 00 00	 call	 ?Init@CShop@@QAEXXZ	; CShop::Init

; 435  : 
; 436  : 	SMDFile = fopen(filename, "r");

  0000f	8b 75 08	 mov	 esi, DWORD PTR _filename$[ebp]
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _fopen
  0001d	83 c4 08	 add	 esp, 8
  00020	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 437  : 
; 438  : 	if ( SMDFile == NULL )

  00025	85 c0		 test	 eax, eax
  00027	75 17		 jne	 SHORT $LN16@LoadShopIt@2

; 439  : 	{
; 440  : 		MsgBox("Shop data load error %s", filename);

  00029	56		 push	 esi
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IEDKKFGG@Shop?5data?5load?5error?5?$CFs?$AA@
  0002f	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00034	83 c4 08	 add	 esp, 8

; 441  : 		return FALSE;

  00037	33 c0		 xor	 eax, eax
  00039	5e		 pop	 esi

; 536  : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN16@LoadShopIt@2:

; 442  : 	}
; 443  : 
; 444  : 	while ( true )
; 445  : 	{
; 446  : 		Token = GetToken();

  00040	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 447  : 
; 448  : 		if ( Token == 2 )

  00045	83 f8 02	 cmp	 eax, 2
  00048	0f 84 35 02 00
	00		 je	 $LN19@LoadShopIt@2
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
$LL11@LoadShopIt@2:

; 449  : 		{
; 450  : 			break;
; 451  : 		}
; 452  : 
; 453  : 		if ( Token == 1 )

  00050	83 f8 01	 cmp	 eax, 1
  00053	0f 85 1a 02 00
	00		 jne	 $LN18@LoadShopIt@2

; 454  : 		{
; 455  : 			type = TokenNumber;

  00059	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0005f	e8 00 00 00 00	 call	 __ftol2_sse
  00064	89 45 c8	 mov	 DWORD PTR _type$[ebp], eax

; 456  : 
; 457  : 			Token = GetToken();

  00067	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 458  : 			index = TokenNumber;

  0006c	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00072	e8 00 00 00 00	 call	 __ftol2_sse
  00077	89 45 cc	 mov	 DWORD PTR _index$[ebp], eax

; 459  : 
; 460  : 			Token = GetToken();

  0007a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 461  : 			level = TokenNumber;

  0007f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00085	e8 00 00 00 00	 call	 __ftol2_sse
  0008a	89 45 d0	 mov	 DWORD PTR _level$[ebp], eax

; 462  : 
; 463  : 			Token = GetToken();

  0008d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 464  : 			dur = TokenNumber;

  00092	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00098	e8 00 00 00 00	 call	 __ftol2_sse
  0009d	89 45 d4	 mov	 DWORD PTR _dur$[ebp], eax

; 465  : 
; 466  : 			Token = GetToken();

  000a0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 467  : 			op1 = TokenNumber;

  000a5	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000ab	e8 00 00 00 00	 call	 __ftol2_sse
  000b0	89 45 d8	 mov	 DWORD PTR _op1$[ebp], eax

; 468  : 
; 469  : 			Token = GetToken();

  000b3	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 470  : 			op2 = TokenNumber;

  000b8	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000be	e8 00 00 00 00	 call	 __ftol2_sse
  000c3	89 45 dc	 mov	 DWORD PTR _op2$[ebp], eax

; 471  : 
; 472  : 			Token = GetToken();

  000c6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 473  : 			op3 = TokenNumber;

  000cb	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000d1	e8 00 00 00 00	 call	 __ftol2_sse
  000d6	89 45 e0	 mov	 DWORD PTR _op3$[ebp], eax

; 474  : 
; 475  : 			Token = GetToken();

  000d9	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 476  : 			Excellent = TokenNumber;

  000de	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000e4	e8 00 00 00 00	 call	 __ftol2_sse
  000e9	8b f0		 mov	 esi, eax

; 477  : 
; 478  : 			if(Excellent < 0 || Excellent > 63)

  000eb	85 f6		 test	 esi, esi
  000ed	78 05		 js	 SHORT $LN6@LoadShopIt@2
  000ef	83 fe 3f	 cmp	 esi, 63			; 0000003fH
  000f2	7e 02		 jle	 SHORT $LN7@LoadShopIt@2
$LN6@LoadShopIt@2:

; 479  : 			{
; 480  : 				Excellent = 0;

  000f4	33 f6		 xor	 esi, esi
$LN7@LoadShopIt@2:

; 481  : 			}
; 482  : 
; 483  : 			Token = GetToken();

  000f6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 484  : 			Ancient = TokenNumber;

  000fb	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00101	e8 00 00 00 00	 call	 __ftol2_sse
  00106	8b d8		 mov	 ebx, eax

; 485  : 
; 486  : 			if(Ancient != 5 && Ancient != 10)

  00108	83 fb 05	 cmp	 ebx, 5
  0010b	74 07		 je	 SHORT $LN5@LoadShopIt@2
  0010d	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00110	74 02		 je	 SHORT $LN5@LoadShopIt@2

; 487  : 			{
; 488  : 				Ancient = 0;

  00112	33 db		 xor	 ebx, ebx
$LN5@LoadShopIt@2:

; 489  : 			}
; 490  : 
; 491  : 			// ----
; 492  : 
; 493  : 			Token = GetToken();

  00114	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 494  : 			Sock1 = TokenNumber;

  00119	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0011f	d9 7d fe	 fnstcw	 WORD PTR tv86[ebp]
  00122	0f b7 45 fe	 movzx	 eax, WORD PTR tv86[ebp]
  00126	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0012b	89 45 f8	 mov	 DWORD PTR tv80[ebp], eax
  0012e	d9 6d f8	 fldcw	 WORD PTR tv80[ebp]
  00131	db 5d f8	 fistp	 DWORD PTR tv76[ebp]
  00134	0f b6 45 f8	 movzx	 eax, BYTE PTR tv76[ebp]
  00138	88 45 e4	 mov	 BYTE PTR _Sock1$[ebp], al
  0013b	d9 6d fe	 fldcw	 WORD PTR tv86[ebp]

; 495  : 
; 496  : 			Token = GetToken();

  0013e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 497  : 			Sock2 = TokenNumber;

  00143	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00149	d9 7d fe	 fnstcw	 WORD PTR tv176[ebp]
  0014c	0f b7 45 fe	 movzx	 eax, WORD PTR tv176[ebp]
  00150	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00155	89 45 f8	 mov	 DWORD PTR tv173[ebp], eax
  00158	d9 6d f8	 fldcw	 WORD PTR tv173[ebp]
  0015b	db 5d f8	 fistp	 DWORD PTR tv71[ebp]
  0015e	0f b6 4d f8	 movzx	 ecx, BYTE PTR tv71[ebp]
  00162	88 4d e8	 mov	 BYTE PTR _Sock2$[ebp], cl
  00165	d9 6d fe	 fldcw	 WORD PTR tv176[ebp]

; 498  : 
; 499  : 			Token = GetToken();

  00168	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 500  : 			Sock3 = TokenNumber;

  0016d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00173	d9 7d fe	 fnstcw	 WORD PTR tv189[ebp]
  00176	0f b7 45 fe	 movzx	 eax, WORD PTR tv189[ebp]
  0017a	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0017f	89 45 f8	 mov	 DWORD PTR tv256[ebp], eax
  00182	d9 6d f8	 fldcw	 WORD PTR tv256[ebp]
  00185	db 5d f8	 fistp	 DWORD PTR tv258[ebp]
  00188	8a 55 f8	 mov	 dl, BYTE PTR tv258[ebp]
  0018b	88 55 ec	 mov	 BYTE PTR _Sock3$[ebp], dl
  0018e	d9 6d fe	 fldcw	 WORD PTR tv189[ebp]

; 501  : 
; 502  : 			Token = GetToken();

  00191	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 503  : 			Sock4 = TokenNumber;

  00196	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0019c	d9 7d fe	 fnstcw	 WORD PTR tv261[ebp]
  0019f	0f b7 45 fe	 movzx	 eax, WORD PTR tv261[ebp]
  001a3	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001a8	89 45 f8	 mov	 DWORD PTR tv264[ebp], eax
  001ab	d9 6d f8	 fldcw	 WORD PTR tv264[ebp]
  001ae	db 5d f8	 fistp	 DWORD PTR tv266[ebp]
  001b1	0f b6 45 f8	 movzx	 eax, BYTE PTR tv266[ebp]
  001b5	88 45 f0	 mov	 BYTE PTR _Sock4$[ebp], al
  001b8	d9 6d fe	 fldcw	 WORD PTR tv261[ebp]

; 504  : 
; 505  : 			Token = GetToken();

  001bb	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 506  : 			Sock5 = TokenNumber;

  001c0	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001c6	d9 7d fe	 fnstcw	 WORD PTR tv269[ebp]
  001c9	0f b7 45 fe	 movzx	 eax, WORD PTR tv269[ebp]
  001cd	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001d2	89 45 f8	 mov	 DWORD PTR tv272[ebp], eax
  001d5	d9 6d f8	 fldcw	 WORD PTR tv272[ebp]
  001d8	db 5d f8	 fistp	 DWORD PTR tv274[ebp]
  001db	0f b6 4d f8	 movzx	 ecx, BYTE PTR tv274[ebp]
  001df	88 4d f4	 mov	 BYTE PTR _Sock5$[ebp], cl
  001e2	d9 6d fe	 fldcw	 WORD PTR tv269[ebp]

; 507  : 
; 508  : 			// ----
; 509  : 
; 510  : 			Token = GetToken();

  001e5	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 511  : 			iPayType = TokenNumber;

  001ea	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001f0	e8 00 00 00 00	 call	 __ftol2_sse
  001f5	8b f8		 mov	 edi, eax

; 512  : 
; 513  : 			if(iPayType < 0 || iPayType > 3)

  001f7	85 ff		 test	 edi, edi
  001f9	78 05		 js	 SHORT $LN3@LoadShopIt@2
  001fb	83 ff 03	 cmp	 edi, 3
  001fe	7e 02		 jle	 SHORT $LN4@LoadShopIt@2
$LN3@LoadShopIt@2:

; 514  : 			{
; 515  : 				iPayType = 0;

  00200	33 ff		 xor	 edi, edi
$LN4@LoadShopIt@2:

; 516  : 			}
; 517  : 
; 518  : 			Token = GetToken();

  00202	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 519  : 			iPayPrice = TokenNumber;

  00207	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0020d	e8 00 00 00 00	 call	 __ftol2_sse

; 520  : 
; 521  : 			if(iPayPrice < 0)

  00212	85 c0		 test	 eax, eax
  00214	79 02		 jns	 SHORT $LN2@LoadShopIt@2

; 522  : 			{
; 523  : 				iPayPrice = 0;

  00216	33 c0		 xor	 eax, eax
$LN2@LoadShopIt@2:

; 524  : 			}
; 525  : 
; 526  : 			//if (this->InsertItemEx(type, index, level, dur, op1, op2, op3, Excellent, Ancient, iPayType, iPayPrice) == FALSE )
; 527  : 			if (this->InsertItemSocket(type, index, level, dur, op1, op2, op3, Excellent, Ancient, Sock1, Sock2, Sock3, Sock4, Sock5, iPayType, iPayPrice) == FALSE )

  00218	8b 55 f4	 mov	 edx, DWORD PTR _Sock5$[ebp]
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR _Sock3$[ebp]
  0021e	50		 push	 eax
  0021f	8b 45 f0	 mov	 eax, DWORD PTR _Sock4$[ebp]
  00222	57		 push	 edi
  00223	52		 push	 edx
  00224	8b 55 e8	 mov	 edx, DWORD PTR _Sock2$[ebp]
  00227	50		 push	 eax
  00228	8b 45 e4	 mov	 eax, DWORD PTR _Sock1$[ebp]
  0022b	51		 push	 ecx
  0022c	8b 4d e0	 mov	 ecx, DWORD PTR _op3$[ebp]
  0022f	52		 push	 edx
  00230	8b 55 dc	 mov	 edx, DWORD PTR _op2$[ebp]
  00233	50		 push	 eax
  00234	8b 45 d8	 mov	 eax, DWORD PTR _op1$[ebp]
  00237	53		 push	 ebx
  00238	56		 push	 esi
  00239	51		 push	 ecx
  0023a	8b 4d d4	 mov	 ecx, DWORD PTR _dur$[ebp]
  0023d	52		 push	 edx
  0023e	8b 55 d0	 mov	 edx, DWORD PTR _level$[ebp]
  00241	50		 push	 eax
  00242	8b 45 cc	 mov	 eax, DWORD PTR _index$[ebp]
  00245	51		 push	 ecx
  00246	8b 4d c8	 mov	 ecx, DWORD PTR _type$[ebp]
  00249	52		 push	 edx
  0024a	50		 push	 eax
  0024b	51		 push	 ecx
  0024c	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  0024f	e8 00 00 00 00	 call	 ?InsertItemSocket@CShop@@QAEHHHHHHHHHHEEEEEEK@Z ; CShop::InsertItemSocket
  00254	85 c0		 test	 eax, eax
  00256	75 1b		 jne	 SHORT $LN18@LoadShopIt@2

; 528  : 			{
; 529  : 				MsgBox("error-L3 : %s %s %d", filename, __FILE__, __LINE__);

  00258	8b 55 08	 mov	 edx, DWORD PTR _filename$[ebp]
  0025b	68 11 02 00 00	 push	 529			; 00000211H
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_08LFHMEAP@Shop?4cpp?$AA@
  00265	52		 push	 edx
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LCGMGNMN@error?9L3?5?3?5?$CFs?5?$CFs?5?$CFd?$AA@
  0026b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00270	83 c4 10	 add	 esp, 16			; 00000010H
$LN18@LoadShopIt@2:

; 447  : 
; 448  : 		if ( Token == 2 )

  00273	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00278	83 f8 02	 cmp	 eax, 2
  0027b	0f 85 cf fd ff
	ff		 jne	 $LL11@LoadShopIt@2
  00281	5f		 pop	 edi
  00282	5b		 pop	 ebx
$LN19@LoadShopIt@2:

; 530  : 			}
; 531  : 		}
; 532  : 	}
; 533  : 
; 534  : 	fclose(SMDFile);

  00283	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 _fclose
  0028e	83 c4 04	 add	 esp, 4

; 535  : 	return true;

  00291	b8 01 00 00 00	 mov	 eax, 1
  00296	5e		 pop	 esi

; 536  : }

  00297	8b e5		 mov	 esp, ebp
  00299	5d		 pop	 ebp
  0029a	c2 04 00	 ret	 4
?LoadShopItemEx@CShop@@QAEHPAD@Z ENDP			; CShop::LoadShopItemEx
_TEXT	ENDS
PUBLIC	??_C@_0BD@KMLDPEDK@error?9L3?5?3?5Shop?5?$CFd?$AA@ ; `string'
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?LoadShopItem@CShop@@QAEHH@Z			; CShop::LoadShopItem
EXTRN	??1CWzMemScript@@UAE@XZ:PROC			; CWzMemScript::~CWzMemScript
EXTRN	?GetNumber@CWzMemScript@@QAEHXZ:PROC		; CWzMemScript::GetNumber
EXTRN	?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ:PROC ; CWzMemScript::GetToken
EXTRN	?SetBuffer@CWzMemScript@@QAEHPADH@Z:PROC	; CWzMemScript::SetBuffer
EXTRN	??0CWzMemScript@@QAE@XZ:PROC			; CWzMemScript::CWzMemScript
EXTRN	?GetDataBuffer@WzAG@@QAEPADXZ:PROC		; WzAG::GetDataBuffer
EXTRN	?GetDataBufferSize@WzAG@@QAEHXZ:PROC		; WzAG::GetDataBufferSize
EXTRN	?RequestData@WzAG@@QAEXH@Z:PROC			; WzAG::RequestData
EXTRN	?gWzAG@@3VWzAG@@A:BYTE				; gWzAG
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT ??_C@_0BD@KMLDPEDK@error?9L3?5?3?5Shop?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@KMLDPEDK@error?9L3?5?3?5Shop?5?$CFd?$AA@ DB 'error-L3 : Shop %d'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadShopItem@CShop@@QAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadShopItem@CShop@@QAEHH@Z$0
__ehfuncinfo$?LoadShopItem@CShop@@QAEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadShopItem@CShop@@QAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?LoadShopItem@CShop@@QAEHH@Z
_TEXT	SEGMENT
_op3$ = -172						; size = 4
_Excellent$ = -168					; size = 4
_this$GSCopy$ = -164					; size = 4
_op2$ = -160						; size = 4
_dur$ = -156						; size = 4
_op1$ = -152						; size = 4
_WzMemScript$ = -148					; size = 132
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ShopNumber$ = 8					; size = 4
?LoadShopItem@CShop@@QAEHH@Z PROC			; CShop::LoadShopItem, COMDAT
; _this$ = ecx

; 540  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadShopItem@CShop@@QAEHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 541  : 	gWzAG.RequestData(ShopNumber);

  0002e	8b 45 08	 mov	 eax, DWORD PTR _ShopNumber$[ebp]
  00031	8b d9		 mov	 ebx, ecx
  00033	50		 push	 eax
  00034	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWzAG@@3VWzAG@@A ; gWzAG

; 602  : 			}
; 603  : 
; 604  : 			if (this->InsertItem(type, index, level, dur, op1, op2, op3, Excellent, Ancient) == FALSE )

  00039	89 9d 5c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ebx
  0003f	e8 00 00 00 00	 call	 ?RequestData@WzAG@@QAEXH@Z ; WzAG::RequestData
  00044	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWzAG@@3VWzAG@@A ; gWzAG
  00049	e8 00 00 00 00	 call	 ?GetDataBufferSize@WzAG@@QAEHXZ ; WzAG::GetDataBufferSize
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWzAG@@3VWzAG@@A ; gWzAG
  00053	8b f0		 mov	 esi, eax
  00055	e8 00 00 00 00	 call	 ?GetDataBuffer@WzAG@@QAEPADXZ ; WzAG::GetDataBuffer
  0005a	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00060	8b f8		 mov	 edi, eax
  00062	e8 00 00 00 00	 call	 ??0CWzMemScript@@QAE@XZ	; CWzMemScript::CWzMemScript
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?SetBuffer@CWzMemScript@@QAEHPADH@Z ; CWzMemScript::SetBuffer
  0007b	8b cb		 mov	 ecx, ebx
  0007d	e8 00 00 00 00	 call	 ?Init@CShop@@QAEXXZ	; CShop::Init
  00082	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00088	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken
  0008d	83 f8 02	 cmp	 eax, 2
  00090	0f 84 43 01 00
	00		 je	 $LN12@LoadShopIt@3
$LL6@LoadShopIt@3:

; 567  : 		{
; 568  : 			break;
; 569  : 		}
; 570  : 
; 571  : 		if ( Token == 1 )

  00096	83 f8 01	 cmp	 eax, 1
  00099	0f 85 26 01 00
	00		 jne	 $LN1@LoadShopIt@3

; 572  : 		{
; 573  : 			type = WzMemScript.GetNumber();

  0009f	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000a5	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber

; 574  : 
; 575  : 			Token = WzMemScript.GetToken();

  000aa	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000b0	8b f0		 mov	 esi, eax
  000b2	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 576  : 			index = WzMemScript.GetNumber();

  000b7	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000bd	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber

; 577  : 
; 578  : 			Token = WzMemScript.GetToken();

  000c2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000c8	8b f8		 mov	 edi, eax
  000ca	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 579  : 			level = WzMemScript.GetNumber();

  000cf	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000d5	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber

; 580  : 
; 581  : 			Token = WzMemScript.GetToken();

  000da	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000e0	8b d8		 mov	 ebx, eax
  000e2	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 582  : 			dur = WzMemScript.GetNumber();

  000e7	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000ed	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber

; 583  : 
; 584  : 			Token = WzMemScript.GetToken();

  000f2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  000f8	89 85 64 ff ff
	ff		 mov	 DWORD PTR _dur$[ebp], eax
  000fe	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 585  : 			op1 = WzMemScript.GetNumber();

  00103	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00109	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber

; 586  : 
; 587  : 			Token = WzMemScript.GetToken();

  0010e	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00114	89 85 68 ff ff
	ff		 mov	 DWORD PTR _op1$[ebp], eax
  0011a	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 588  : 			op2 = WzMemScript.GetNumber();

  0011f	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00125	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber

; 589  : 
; 590  : 			Token = WzMemScript.GetToken();

  0012a	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00130	89 85 60 ff ff
	ff		 mov	 DWORD PTR _op2$[ebp], eax
  00136	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 591  : 			op3 = WzMemScript.GetNumber();

  0013b	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00141	e8 00 00 00 00	 call	 ?GetNumber@CWzMemScript@@QAEHXZ ; CWzMemScript::GetNumber
  00146	89 85 54 ff ff
	ff		 mov	 DWORD PTR _op3$[ebp], eax

; 592  : 
; 593  : 			Token = GetToken();

  0014c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 594  : 			Excellent = TokenNumber;

  00151	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00157	e8 00 00 00 00	 call	 __ftol2_sse
  0015c	89 85 58 ff ff
	ff		 mov	 DWORD PTR _Excellent$[ebp], eax

; 595  : 
; 596  : 			Token = GetToken();

  00162	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 597  : 			Ancient = TokenNumber;

  00167	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0016d	e8 00 00 00 00	 call	 __ftol2_sse

; 598  : 
; 599  : 			if(Ancient != 5 && Ancient != 10)

  00172	83 f8 05	 cmp	 eax, 5
  00175	74 07		 je	 SHORT $LN2@LoadShopIt@3
  00177	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0017a	74 02		 je	 SHORT $LN2@LoadShopIt@3

; 600  : 			{
; 601  : 				Ancient = 0;

  0017c	33 c0		 xor	 eax, eax
$LN2@LoadShopIt@3:

; 602  : 			}
; 603  : 
; 604  : 			if (this->InsertItem(type, index, level, dur, op1, op2, op3, Excellent, Ancient) == FALSE )

  0017e	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _Excellent$[ebp]
  00184	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _op3$[ebp]
  0018a	50		 push	 eax
  0018b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _op2$[ebp]
  00191	51		 push	 ecx
  00192	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _op1$[ebp]
  00198	52		 push	 edx
  00199	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR _dur$[ebp]
  0019f	50		 push	 eax
  001a0	51		 push	 ecx
  001a1	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001a7	52		 push	 edx
  001a8	53		 push	 ebx
  001a9	57		 push	 edi
  001aa	56		 push	 esi
  001ab	e8 00 00 00 00	 call	 ?InsertItem@CShop@@QAEHHHHHHHHHH@Z ; CShop::InsertItem
  001b0	85 c0		 test	 eax, eax
  001b2	75 11		 jne	 SHORT $LN1@LoadShopIt@3

; 605  : 			{
; 606  : 				MsgBox("error-L3 : Shop %d", ShopNumber);

  001b4	8b 45 08	 mov	 eax, DWORD PTR _ShopNumber$[ebp]
  001b7	50		 push	 eax
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KMLDPEDK@error?9L3?5?3?5Shop?5?$CFd?$AA@
  001bd	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001c2	83 c4 08	 add	 esp, 8
$LN1@LoadShopIt@3:

; 542  : 	int DataBufferSize = gWzAG.GetDataBufferSize();
; 543  : 	char* DataBuffer = gWzAG.GetDataBuffer();
; 544  : 
; 545  : 	CWzMemScript WzMemScript;
; 546  : 	int Token;
; 547  : 	int type;
; 548  : 	int index;
; 549  : 	int level;
; 550  : 	int dur;
; 551  : 	int op1;
; 552  : 	int op2;
; 553  : 	int op3;
; 554  : 	int Excellent;
; 555  : 	int Ancient;
; 556  : 
; 557  : 	WzMemScript.SetBuffer(DataBuffer, DataBufferSize);
; 558  : 
; 559  : 	this->Init();
; 560  : 
; 561  : 	
; 562  : 	while ( true )
; 563  : 	{
; 564  : 		Token = WzMemScript.GetToken();

  001c5	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  001cb	e8 00 00 00 00	 call	 ?GetToken@CWzMemScript@@QAE?AW4SMDToken@@XZ ; CWzMemScript::GetToken

; 565  : 
; 566  : 		if ( Token == 2 )

  001d0	83 f8 02	 cmp	 eax, 2
  001d3	0f 85 bd fe ff
	ff		 jne	 $LL6@LoadShopIt@3
$LN12@LoadShopIt@3:

; 607  : 			}
; 608  : 		}
; 609  : 	}
; 610  : 
; 611  : 	return TRUE;

  001d9	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  001df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e6	e8 00 00 00 00	 call	 ??1CWzMemScript@@UAE@XZ	; CWzMemScript::~CWzMemScript
  001eb	b8 01 00 00 00	 mov	 eax, 1

; 612  : }

  001f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fa	59		 pop	 ecx
  001fb	5f		 pop	 edi
  001fc	5e		 pop	 esi
  001fd	5b		 pop	 ebx
  001fe	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00201	33 cd		 xor	 ecx, ebp
  00203	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00208	8b e5		 mov	 esp, ebp
  0020a	5d		 pop	 ebp
  0020b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadShopItem@CShop@@QAEHH@Z$0:
  00000	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _WzMemScript$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CWzMemScript@@UAE@XZ	; CWzMemScript::~CWzMemScript
__ehhandler$?LoadShopItem@CShop@@QAEHH@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 50 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-176]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadShopItem@CShop@@QAEHH@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadShopItem@CShop@@QAEHH@Z ENDP			; CShop::LoadShopItem
PUBLIC	??_C@_0CA@CNAGFFMB@ZtData?2Donate?225_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@KKKAJOIC@ZtData?2Donate?224_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@IKDCOCMJ@ZtData?2Donate?223_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@NJECJIK@ZtData?2Donate?222_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@FOAOHCAO@ZtData?2Donate?221_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@NJKILJEN@ZtData?2Donate?220_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@FCJIOAPC@ZtData?2Donate?219_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@NFDOCLLB@ZtData?2Donate?218_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@BDLMBIGE@ZtData?2Donate?217_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@JEBKNDCH@ZtData?2Donate?216_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@MHIAIIKD@ZtData?2Donate?215_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@EACGEDOA@ZtData?2Donate?214_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@GALEDPKL@ZtData?2Donate?213_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@OHBCPEOI@ZtData?2Donate?212_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@LEIIKPGM@ZtData?2Donate?211_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@DDCOGECP@ZtData?2Donate?210_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@LNMKFGBD@ZtData?2Donate?209_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@DKGMJNFA@ZtData?2Donate?208_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@PMOOKOIF@ZtData?2Donate?207_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@HLEIGFMG@ZtData?2Donate?206_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@CINCDOEC@ZtData?2Donate?205_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@KPHEPFAB@ZtData?2Donate?204_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@IPOGIJEK@ZtData?2Donate?203_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@IEAECAJ@ZtData?2Donate?202_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@FLNKBJIN@ZtData?2Donate?201_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@NMHMNCMO@ZtData?2Donate?200_DonateShop?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BK@DAALLGMO@?4?4?2data?2Shops?219_Bolo?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BP@DECLLBLJ@?4?4?2data?2Shops?217_Marseille?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BK@IGCDNECK@?4?4?2data?2Shops?216_Leah?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BM@JIAGEDGL@?4?4?2data?2Shops?215_Silvia?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CD@NGJNBCCE@?4?4?2data?2Shops?213_FireworksGirl?4t@ ; `string'
PUBLIC	??_C@_0CE@NKNJDEGB@?4?4?2data?2Shops?212_ThompsonKennel?4@ ; `string'
PUBLIC	??_C@_0BK@LGIBBLFN@?4?4?2data?2Shops?211_Alex?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BN@FGBEABKN@?4?4?2data?2Shops?210_ElfLala?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CB@IAHGMIMA@?4?4?2data?2Shops?209_EoCraftsman?4txt@ ; `string'
PUBLIC	??_C@_0CC@MLCMHKLP@?4?4?2data?2Shops?208_ZiennaWeapon?4tx@ ; `string'
PUBLIC	??_C@_0BM@EJDMDOJK@?4?4?2data?2Shops?207_Wizard?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CB@NMKGPEHP@?4?4?2data?2Shops?206_LiamBarmaid?4txt@ ; `string'
PUBLIC	??_C@_0CA@GODIBBLI@?4?4?2data?2Shops?205_PotionGirl?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BP@BMDNDLCA@?4?4?2data?2Shops?204_Wandering?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CF@BCHJLHEB@?4?4?2data?2Shops?203_HaroldWandering@ ; `string'
PUBLIC	??_C@_0BO@GMDONJNJ@?4?4?2data?2Shops?202_PasiMage?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CC@JKNCBFBA@?4?4?2data?2Shops?201_LumenBarmaid?4tx@ ; `string'
PUBLIC	??_C@_0CF@PLNLJDFH@?4?4?2data?2Shops?200_HanzoBlacksmith@ ; `string'
PUBLIC	?ShopDataLoad@@YAHXZ				; ShopDataLoad
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?GetCustom@CZtLicense@@QAEHXZ:PROC		; CZtLicense::GetCustom
EXTRN	?CheckUser@CZtLicense@@QAE_NH@Z:PROC		; CZtLicense::CheckUser
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
;	COMDAT ??_C@_0CA@CNAGFFMB@ZtData?2Donate?225_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@CNAGFFMB@ZtData?2Donate?225_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\25_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KKKAJOIC@ZtData?2Donate?224_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@KKKAJOIC@ZtData?2Donate?224_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\24_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IKDCOCMJ@ZtData?2Donate?223_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@IKDCOCMJ@ZtData?2Donate?223_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\23_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NJECJIK@ZtData?2Donate?222_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@NJECJIK@ZtData?2Donate?222_DonateShop?4txt?$AA@ DB 'ZtData\Dona'
	DB	'te\22_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FOAOHCAO@ZtData?2Donate?221_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@FOAOHCAO@ZtData?2Donate?221_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\21_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NJKILJEN@ZtData?2Donate?220_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@NJKILJEN@ZtData?2Donate?220_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\20_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FCJIOAPC@ZtData?2Donate?219_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@FCJIOAPC@ZtData?2Donate?219_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\19_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NFDOCLLB@ZtData?2Donate?218_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@NFDOCLLB@ZtData?2Donate?218_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\18_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BDLMBIGE@ZtData?2Donate?217_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@BDLMBIGE@ZtData?2Donate?217_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\17_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JEBKNDCH@ZtData?2Donate?216_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@JEBKNDCH@ZtData?2Donate?216_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\16_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MHIAIIKD@ZtData?2Donate?215_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@MHIAIIKD@ZtData?2Donate?215_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\15_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EACGEDOA@ZtData?2Donate?214_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@EACGEDOA@ZtData?2Donate?214_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\14_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GALEDPKL@ZtData?2Donate?213_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@GALEDPKL@ZtData?2Donate?213_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\13_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OHBCPEOI@ZtData?2Donate?212_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@OHBCPEOI@ZtData?2Donate?212_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\12_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LEIIKPGM@ZtData?2Donate?211_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@LEIIKPGM@ZtData?2Donate?211_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\11_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DDCOGECP@ZtData?2Donate?210_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@DDCOGECP@ZtData?2Donate?210_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\10_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LNMKFGBD@ZtData?2Donate?209_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@LNMKFGBD@ZtData?2Donate?209_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\09_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DKGMJNFA@ZtData?2Donate?208_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@DKGMJNFA@ZtData?2Donate?208_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\08_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PMOOKOIF@ZtData?2Donate?207_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@PMOOKOIF@ZtData?2Donate?207_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\07_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HLEIGFMG@ZtData?2Donate?206_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@HLEIGFMG@ZtData?2Donate?206_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\06_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CINCDOEC@ZtData?2Donate?205_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@CINCDOEC@ZtData?2Donate?205_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\05_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KPHEPFAB@ZtData?2Donate?204_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@KPHEPFAB@ZtData?2Donate?204_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\04_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IPOGIJEK@ZtData?2Donate?203_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@IPOGIJEK@ZtData?2Donate?203_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\03_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IEAECAJ@ZtData?2Donate?202_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@IEAECAJ@ZtData?2Donate?202_DonateShop?4txt?$AA@ DB 'ZtData\Dona'
	DB	'te\02_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FLNKBJIN@ZtData?2Donate?201_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@FLNKBJIN@ZtData?2Donate?201_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\01_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NMHMNCMO@ZtData?2Donate?200_DonateShop?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@NMHMNCMO@ZtData?2Donate?200_DonateShop?4txt?$AA@ DB 'ZtData\Don'
	DB	'ate\00_DonateShop.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DAALLGMO@?4?4?2data?2Shops?219_Bolo?4txt?$AA@
CONST	SEGMENT
??_C@_0BK@DAALLGMO@?4?4?2data?2Shops?219_Bolo?4txt?$AA@ DB '..\data\Shops'
	DB	'\19_Bolo.txt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DECLLBLJ@?4?4?2data?2Shops?217_Marseille?4txt?$AA@
CONST	SEGMENT
??_C@_0BP@DECLLBLJ@?4?4?2data?2Shops?217_Marseille?4txt?$AA@ DB '..\data\'
	DB	'Shops\17_Marseille.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IGCDNECK@?4?4?2data?2Shops?216_Leah?4txt?$AA@
CONST	SEGMENT
??_C@_0BK@IGCDNECK@?4?4?2data?2Shops?216_Leah?4txt?$AA@ DB '..\data\Shops'
	DB	'\16_Leah.txt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JIAGEDGL@?4?4?2data?2Shops?215_Silvia?4txt?$AA@
CONST	SEGMENT
??_C@_0BM@JIAGEDGL@?4?4?2data?2Shops?215_Silvia?4txt?$AA@ DB '..\data\Sho'
	DB	'ps\15_Silvia.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NGJNBCCE@?4?4?2data?2Shops?213_FireworksGirl?4t@
CONST	SEGMENT
??_C@_0CD@NGJNBCCE@?4?4?2data?2Shops?213_FireworksGirl?4t@ DB '..\data\Sh'
	DB	'ops\13_FireworksGirl.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NKNJDEGB@?4?4?2data?2Shops?212_ThompsonKennel?4@
CONST	SEGMENT
??_C@_0CE@NKNJDEGB@?4?4?2data?2Shops?212_ThompsonKennel?4@ DB '..\data\Sh'
	DB	'ops\12_ThompsonKennel.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LGIBBLFN@?4?4?2data?2Shops?211_Alex?4txt?$AA@
CONST	SEGMENT
??_C@_0BK@LGIBBLFN@?4?4?2data?2Shops?211_Alex?4txt?$AA@ DB '..\data\Shops'
	DB	'\11_Alex.txt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FGBEABKN@?4?4?2data?2Shops?210_ElfLala?4txt?$AA@
CONST	SEGMENT
??_C@_0BN@FGBEABKN@?4?4?2data?2Shops?210_ElfLala?4txt?$AA@ DB '..\data\Sh'
	DB	'ops\10_ElfLala.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IAHGMIMA@?4?4?2data?2Shops?209_EoCraftsman?4txt@
CONST	SEGMENT
??_C@_0CB@IAHGMIMA@?4?4?2data?2Shops?209_EoCraftsman?4txt@ DB '..\data\Sh'
	DB	'ops\09_EoCraftsman.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MLCMHKLP@?4?4?2data?2Shops?208_ZiennaWeapon?4tx@
CONST	SEGMENT
??_C@_0CC@MLCMHKLP@?4?4?2data?2Shops?208_ZiennaWeapon?4tx@ DB '..\data\Sh'
	DB	'ops\08_ZiennaWeapon.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EJDMDOJK@?4?4?2data?2Shops?207_Wizard?4txt?$AA@
CONST	SEGMENT
??_C@_0BM@EJDMDOJK@?4?4?2data?2Shops?207_Wizard?4txt?$AA@ DB '..\data\Sho'
	DB	'ps\07_Wizard.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NMKGPEHP@?4?4?2data?2Shops?206_LiamBarmaid?4txt@
CONST	SEGMENT
??_C@_0CB@NMKGPEHP@?4?4?2data?2Shops?206_LiamBarmaid?4txt@ DB '..\data\Sh'
	DB	'ops\06_LiamBarmaid.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GODIBBLI@?4?4?2data?2Shops?205_PotionGirl?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@GODIBBLI@?4?4?2data?2Shops?205_PotionGirl?4txt?$AA@ DB '..\data'
	DB	'\Shops\05_PotionGirl.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BMDNDLCA@?4?4?2data?2Shops?204_Wandering?4txt?$AA@
CONST	SEGMENT
??_C@_0BP@BMDNDLCA@?4?4?2data?2Shops?204_Wandering?4txt?$AA@ DB '..\data\'
	DB	'Shops\04_Wandering.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BCHJLHEB@?4?4?2data?2Shops?203_HaroldWandering@
CONST	SEGMENT
??_C@_0CF@BCHJLHEB@?4?4?2data?2Shops?203_HaroldWandering@ DB '..\data\Sho'
	DB	'ps\03_HaroldWandering.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GMDONJNJ@?4?4?2data?2Shops?202_PasiMage?4txt?$AA@
CONST	SEGMENT
??_C@_0BO@GMDONJNJ@?4?4?2data?2Shops?202_PasiMage?4txt?$AA@ DB '..\data\S'
	DB	'hops\02_PasiMage.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JKNCBFBA@?4?4?2data?2Shops?201_LumenBarmaid?4tx@
CONST	SEGMENT
??_C@_0CC@JKNCBFBA@?4?4?2data?2Shops?201_LumenBarmaid?4tx@ DB '..\data\Sh'
	DB	'ops\01_LumenBarmaid.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PLNLJDFH@?4?4?2data?2Shops?200_HanzoBlacksmith@
CONST	SEGMENT
??_C@_0CF@PLNLJDFH@?4?4?2data?2Shops?200_HanzoBlacksmith@ DB '..\data\Sho'
	DB	'ps\00_HanzoBlacksmith.txt', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?ShopDataLoad@@YAHXZ
_TEXT	SEGMENT
?ShopDataLoad@@YAHXZ PROC				; ShopDataLoad, COMDAT

; 616  : 	ShopC[0].LoadShopItem("..\\data\\Shops\\00_HanzoBlacksmith.txt");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@PLNLJDFH@?4?4?2data?2Shops?200_HanzoBlacksmith@
  00005	b9 00 00 00 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A ; ShopC
  0000a	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 617  : 	ShopC[1].LoadShopItem("..\\data\\Shops\\01_LumenBarmaid.txt");

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JKNCBFBA@?4?4?2data?2Shops?201_LumenBarmaid?4tx@
  00014	b9 9c 6f 00 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+28572
  00019	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 618  : 	ShopC[2].LoadShopItem("..\\data\\Shops\\02_PasiMage.txt");

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GMDONJNJ@?4?4?2data?2Shops?202_PasiMage?4txt?$AA@
  00023	b9 38 df 00 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+57144
  00028	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 619  : 	ShopC[3].LoadShopItem("..\\data\\Shops\\03_HaroldWandering.txt");

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@BCHJLHEB@?4?4?2data?2Shops?203_HaroldWandering@
  00032	b9 d4 4e 01 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+85716
  00037	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 620  : 	ShopC[4].LoadShopItem("..\\data\\Shops\\04_Wandering.txt");

  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@BMDNDLCA@?4?4?2data?2Shops?204_Wandering?4txt?$AA@
  00041	b9 70 be 01 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+114288
  00046	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 621  : 	ShopC[5].LoadShopItem("..\\data\\Shops\\05_PotionGirl.txt");

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GODIBBLI@?4?4?2data?2Shops?205_PotionGirl?4txt?$AA@
  00050	b9 0c 2e 02 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+142860
  00055	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 622  : 	ShopC[6].LoadShopItem("..\\data\\Shops\\06_LiamBarmaid.txt");

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NMKGPEHP@?4?4?2data?2Shops?206_LiamBarmaid?4txt@
  0005f	b9 a8 9d 02 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+171432
  00064	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 623  : 	ShopC[7].LoadShopItem("..\\data\\Shops\\07_Wizard.txt");

  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EJDMDOJK@?4?4?2data?2Shops?207_Wizard?4txt?$AA@
  0006e	b9 44 0d 03 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+200004
  00073	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 624  : 	ShopC[8].LoadShopItem("..\\data\\Shops\\08_ZiennaWeapon.txt");

  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MLCMHKLP@?4?4?2data?2Shops?208_ZiennaWeapon?4tx@
  0007d	b9 e0 7c 03 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+228576
  00082	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 625  : 	ShopC[9].LoadShopItem("..\\data\\Shops\\09_EoCraftsman.txt");

  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@IAHGMIMA@?4?4?2data?2Shops?209_EoCraftsman?4txt@
  0008c	b9 7c ec 03 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+257148
  00091	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 626  : 	ShopC[10].LoadShopItem("..\\data\\Shops\\10_ElfLala.txt");

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@FGBEABKN@?4?4?2data?2Shops?210_ElfLala?4txt?$AA@
  0009b	b9 18 5c 04 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+285720
  000a0	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 627  : 	ShopC[11].LoadShopItem("..\\data\\Shops\\11_Alex.txt");

  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LGIBBLFN@?4?4?2data?2Shops?211_Alex?4txt?$AA@
  000aa	b9 b4 cb 04 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+314292
  000af	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 628  : 	ShopC[12].LoadShopItem("..\\data\\Shops\\12_ThompsonKennel.txt");

  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@NKNJDEGB@?4?4?2data?2Shops?212_ThompsonKennel?4@
  000b9	b9 50 3b 05 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+342864
  000be	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 629  : 
; 630  : 	//season 2.5 add-on
; 631  : 	ShopC[13].LoadShopItem("..\\data\\Shops\\13_FireworksGirl.txt"); //WzAG 0x1E

  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@NGJNBCCE@?4?4?2data?2Shops?213_FireworksGirl?4t@
  000c8	b9 ec aa 05 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+371436
  000cd	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 632  : 	//ShopC[14].LoadShopItem("..\\data\\Shops\\14_PCPoint.txt"); //WzAG 0x1F
; 633  : 
; 634  : 	//season 3.0 add-on
; 635  : 	ShopC[15].LoadShopItem("..\\data\\Shops\\15_Silvia.txt"); //WzAG 0x20

  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JIAGEDGL@?4?4?2data?2Shops?215_Silvia?4txt?$AA@
  000d7	b9 24 8a 06 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+428580
  000dc	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 636  : 	ShopC[16].LoadShopItem("..\\data\\Shops\\16_Leah.txt"); //WzAG 0x21

  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IGCDNECK@?4?4?2data?2Shops?216_Leah?4txt?$AA@
  000e6	b9 c0 f9 06 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+457152
  000eb	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 637  : 	ShopC[17].LoadShopItem("..\\data\\Shops\\17_Marseille.txt"); //WzAG 0x22

  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@DECLLBLJ@?4?4?2data?2Shops?217_Marseille?4txt?$AA@
  000f5	b9 5c 69 07 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+485724
  000fa	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 638  : 
; 639  : 	//season 4.5 add-on
; 640  : 	///
; 641  : 
; 642  : 	//Season 5 Shop
; 643  : 	ShopC[18].LoadShopItem("..\\data\\Shops\\19_Bolo.txt"); //WzAG 0x22

  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DAALLGMO@?4?4?2data?2Shops?219_Bolo?4txt?$AA@
  00104	b9 f8 d8 07 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+514296
  00109	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 644  : 	ShopC[19].LoadShopItem("..\\data\\Shops\\01_LumenBarmaid.txt"); //WzAG 0x22

  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JKNCBFBA@?4?4?2data?2Shops?201_LumenBarmaid?4tx@
  00113	b9 94 48 08 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+542868
  00118	e8 00 00 00 00	 call	 ?LoadShopItem@CShop@@QAEHPAD@Z ; CShop::LoadShopItem

; 645  : 
; 646  : #if(DONATE_SHOP==TRUE)
; 647  : 	if(g_ZtLicense.CheckUser(eZtUB::MedoniAndrei) || 
; 648  : 		g_ZtLicense.CheckUser(eZtUB::absolute) || 
; 649  : 		g_ZtLicense.CheckUser(eZtUB::MU2Play) || 
; 650  : 		g_ZtLicense.CheckUser(eZtUB::Local) ||
; 651  : 		g_ZtLicense.CheckUser(eZtUB::Stone) || g_ZtLicense.CheckUser(eZtUB::Sentinel) || g_ZtLicense.CheckUser(eZtUB::Artem) ||
; 652  : 		THINNAKORN_MAC == 1 ||
; 653  : 		g_ZtLicense.CheckUser(eZtUB::EpicMU) ||
; 654  : 		g_ZtLicense.CheckUser(eZtUB::Escalate) ||
; 655  : 		g_ZtLicense.CheckUser(eZtUB::Artem2) ||
; 656  : 		g_ZtLicense.CheckUser(eZtUB::RevoMU) ||
; 657  : 		g_ZtLicense.CheckUser(eZtUB::TGBA_LLC) ||
; 658  : 		g_ZtLicense.CheckUser(eZtUB::GloryMU) ||
; 659  : 		g_ZtLicense.CheckUser(eZtUB::ArcMu) ||
; 660  : 		g_ZtLicense.CheckUser(eZtUB::mu4you) ||
; 661  : 		g_ZtLicense.CheckUser(eZtUB::eternalmu) ||
; 662  : 		g_ZtLicense.CheckUser(eZtUB::NSGames) ||
; 663  : 		g_ZtLicense.CheckUser(eZtUB::AlterMU) ||
; 664  : 		g_ZtLicense.GetCustom()
; 665  : 		)

  0011d	6a 32		 push	 50			; 00000032H
  0011f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00124	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00129	84 c0		 test	 al, al
  0012b	0f 85 4a 01 00
	00		 jne	 $LN1@ShopDataLo
  00131	6a 2e		 push	 46			; 0000002eH
  00133	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00138	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0013d	84 c0		 test	 al, al
  0013f	0f 85 36 01 00
	00		 jne	 $LN1@ShopDataLo
  00145	6a 36		 push	 54			; 00000036H
  00147	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0014c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00151	84 c0		 test	 al, al
  00153	0f 85 22 01 00
	00		 jne	 $LN1@ShopDataLo
  00159	6a 00		 push	 0
  0015b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00160	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00165	84 c0		 test	 al, al
  00167	0f 85 0e 01 00
	00		 jne	 $LN1@ShopDataLo
  0016d	6a 37		 push	 55			; 00000037H
  0016f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00174	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00179	84 c0		 test	 al, al
  0017b	0f 85 fa 00 00
	00		 jne	 $LN1@ShopDataLo
  00181	6a 38		 push	 56			; 00000038H
  00183	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00188	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  0018d	84 c0		 test	 al, al
  0018f	0f 85 e6 00 00
	00		 jne	 $LN1@ShopDataLo
  00195	6a 30		 push	 48			; 00000030H
  00197	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0019c	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001a1	84 c0		 test	 al, al
  001a3	0f 85 d2 00 00
	00		 jne	 $LN1@ShopDataLo
  001a9	6a 3b		 push	 59			; 0000003bH
  001ab	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001b0	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001b5	84 c0		 test	 al, al
  001b7	0f 85 be 00 00
	00		 jne	 $LN1@ShopDataLo
  001bd	6a 40		 push	 64			; 00000040H
  001bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001c4	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001c9	84 c0		 test	 al, al
  001cb	0f 85 aa 00 00
	00		 jne	 $LN1@ShopDataLo
  001d1	6a 31		 push	 49			; 00000031H
  001d3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001d8	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001dd	84 c0		 test	 al, al
  001df	0f 85 96 00 00
	00		 jne	 $LN1@ShopDataLo
  001e5	6a 43		 push	 67			; 00000043H
  001e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001ec	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001f1	84 c0		 test	 al, al
  001f3	0f 85 82 00 00
	00		 jne	 $LN1@ShopDataLo
  001f9	6a 42		 push	 66			; 00000042H
  001fb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00200	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00205	84 c0		 test	 al, al
  00207	75 72		 jne	 SHORT $LN1@ShopDataLo
  00209	6a 46		 push	 70			; 00000046H
  0020b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00210	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00215	84 c0		 test	 al, al
  00217	75 62		 jne	 SHORT $LN1@ShopDataLo
  00219	6a 48		 push	 72			; 00000048H
  0021b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00220	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00225	84 c0		 test	 al, al
  00227	75 52		 jne	 SHORT $LN1@ShopDataLo
  00229	6a 4e		 push	 78			; 0000004eH
  0022b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00230	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00235	84 c0		 test	 al, al
  00237	75 42		 jne	 SHORT $LN1@ShopDataLo
  00239	6a 4f		 push	 79			; 0000004fH
  0023b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00240	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00245	84 c0		 test	 al, al
  00247	75 32		 jne	 SHORT $LN1@ShopDataLo
  00249	6a 51		 push	 81			; 00000051H
  0024b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00250	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00255	84 c0		 test	 al, al
  00257	75 22		 jne	 SHORT $LN1@ShopDataLo
  00259	6a 3e		 push	 62			; 0000003eH
  0025b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00260	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00265	84 c0		 test	 al, al
  00267	75 12		 jne	 SHORT $LN1@ShopDataLo
  00269	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  0026e	e8 00 00 00 00	 call	 ?GetCustom@CZtLicense@@QAEHXZ ; CZtLicense::GetCustom
  00273	85 c0		 test	 eax, eax
  00275	0f 84 a4 02 00
	00		 je	 $LN2@ShopDataLo
$LN1@ShopDataLo:

; 666  : 	{
; 667  : 		ShopC[20].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\00_DonateShop.txt"));

  0027b	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NMHMNCMO@ZtData?2Donate?200_DonateShop?4txt?$AA@
  00280	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00285	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0028a	50		 push	 eax
  0028b	b9 30 b8 08 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+571440
  00290	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 668  : 		ShopC[21].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\01_DonateShop.txt"));

  00295	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FLNKBJIN@ZtData?2Donate?201_DonateShop?4txt?$AA@
  0029a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0029f	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  002a4	50		 push	 eax
  002a5	b9 cc 27 09 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+600012
  002aa	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 669  : 		ShopC[22].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\02_DonateShop.txt"));

  002af	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IEAECAJ@ZtData?2Donate?202_DonateShop?4txt?$AA@
  002b4	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  002b9	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  002be	50		 push	 eax
  002bf	b9 68 97 09 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+628584
  002c4	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 670  : 		ShopC[23].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\03_DonateShop.txt"));

  002c9	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IPOGIJEK@ZtData?2Donate?203_DonateShop?4txt?$AA@
  002ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  002d3	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  002d8	50		 push	 eax
  002d9	b9 04 07 0a 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+657156
  002de	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 671  : 		ShopC[24].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\04_DonateShop.txt"));

  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KPHEPFAB@ZtData?2Donate?204_DonateShop?4txt?$AA@
  002e8	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  002ed	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  002f2	50		 push	 eax
  002f3	b9 a0 76 0a 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+685728
  002f8	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 672  : 		ShopC[25].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\05_DonateShop.txt"));

  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CINCDOEC@ZtData?2Donate?205_DonateShop?4txt?$AA@
  00302	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00307	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0030c	50		 push	 eax
  0030d	b9 3c e6 0a 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+714300
  00312	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 673  : 		ShopC[26].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\06_DonateShop.txt"));

  00317	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@HLEIGFMG@ZtData?2Donate?206_DonateShop?4txt?$AA@
  0031c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00321	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00326	50		 push	 eax
  00327	b9 d8 55 0b 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+742872
  0032c	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 674  : 		ShopC[27].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\07_DonateShop.txt"));

  00331	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@PMOOKOIF@ZtData?2Donate?207_DonateShop?4txt?$AA@
  00336	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0033b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00340	50		 push	 eax
  00341	b9 74 c5 0b 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+771444
  00346	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 675  : 		ShopC[28].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\08_DonateShop.txt"));

  0034b	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DKGMJNFA@ZtData?2Donate?208_DonateShop?4txt?$AA@
  00350	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00355	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0035a	50		 push	 eax
  0035b	b9 10 35 0c 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+800016
  00360	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 676  : 		ShopC[29].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\09_DonateShop.txt"));

  00365	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LNMKFGBD@ZtData?2Donate?209_DonateShop?4txt?$AA@
  0036a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0036f	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00374	50		 push	 eax
  00375	b9 ac a4 0c 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+828588
  0037a	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 677  : 		ShopC[30].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\10_DonateShop.txt"));

  0037f	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DDCOGECP@ZtData?2Donate?210_DonateShop?4txt?$AA@
  00384	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00389	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0038e	50		 push	 eax
  0038f	b9 48 14 0d 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+857160
  00394	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 678  : 		ShopC[31].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\11_DonateShop.txt"));

  00399	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LEIIKPGM@ZtData?2Donate?211_DonateShop?4txt?$AA@
  0039e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  003a3	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  003a8	50		 push	 eax
  003a9	b9 e4 83 0d 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+885732
  003ae	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 679  : 		ShopC[32].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\12_DonateShop.txt"));

  003b3	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@OHBCPEOI@ZtData?2Donate?212_DonateShop?4txt?$AA@
  003b8	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  003bd	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  003c2	50		 push	 eax
  003c3	b9 80 f3 0d 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+914304
  003c8	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 680  : 		ShopC[33].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\13_DonateShop.txt"));

  003cd	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GALEDPKL@ZtData?2Donate?213_DonateShop?4txt?$AA@
  003d2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  003d7	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  003dc	50		 push	 eax
  003dd	b9 1c 63 0e 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+942876
  003e2	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 681  : 		ShopC[34].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\14_DonateShop.txt"));

  003e7	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@EACGEDOA@ZtData?2Donate?214_DonateShop?4txt?$AA@
  003ec	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  003f1	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  003f6	50		 push	 eax
  003f7	b9 b8 d2 0e 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+971448
  003fc	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 682  : 		ShopC[35].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\15_DonateShop.txt"));

  00401	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MHIAIIKD@ZtData?2Donate?215_DonateShop?4txt?$AA@
  00406	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0040b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00410	50		 push	 eax
  00411	b9 54 42 0f 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1000020
  00416	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 683  : 		ShopC[36].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\16_DonateShop.txt"));

  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JEBKNDCH@ZtData?2Donate?216_DonateShop?4txt?$AA@
  00420	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00425	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0042a	50		 push	 eax
  0042b	b9 f0 b1 0f 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1028592
  00430	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 684  : 		ShopC[37].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\17_DonateShop.txt"));

  00435	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@BDLMBIGE@ZtData?2Donate?217_DonateShop?4txt?$AA@
  0043a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0043f	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00444	50		 push	 eax
  00445	b9 8c 21 10 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1057164
  0044a	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 685  : 		ShopC[38].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\18_DonateShop.txt"));

  0044f	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NFDOCLLB@ZtData?2Donate?218_DonateShop?4txt?$AA@
  00454	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00459	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0045e	50		 push	 eax
  0045f	b9 28 91 10 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1085736
  00464	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 686  : 		ShopC[39].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\19_DonateShop.txt"));

  00469	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FCJIOAPC@ZtData?2Donate?219_DonateShop?4txt?$AA@
  0046e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00473	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00478	50		 push	 eax
  00479	b9 c4 00 11 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1114308
  0047e	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 687  : 		ShopC[40].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\20_DonateShop.txt"));

  00483	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NJKILJEN@ZtData?2Donate?220_DonateShop?4txt?$AA@
  00488	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0048d	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00492	50		 push	 eax
  00493	b9 60 70 11 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1142880
  00498	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 688  : 		ShopC[41].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\21_DonateShop.txt"));

  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FOAOHCAO@ZtData?2Donate?221_DonateShop?4txt?$AA@
  004a2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  004a7	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  004ac	50		 push	 eax
  004ad	b9 fc df 11 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1171452
  004b2	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 689  : 		ShopC[42].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\22_DonateShop.txt"));

  004b7	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NJECJIK@ZtData?2Donate?222_DonateShop?4txt?$AA@
  004bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  004c1	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  004c6	50		 push	 eax
  004c7	b9 98 4f 12 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1200024
  004cc	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 690  : 		ShopC[43].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\23_DonateShop.txt"));

  004d1	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IKDCOCMJ@ZtData?2Donate?223_DonateShop?4txt?$AA@
  004d6	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  004db	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  004e0	50		 push	 eax
  004e1	b9 34 bf 12 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1228596
  004e6	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 691  : 		ShopC[44].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\24_DonateShop.txt"));

  004eb	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KKKAJOIC@ZtData?2Donate?224_DonateShop?4txt?$AA@
  004f0	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  004f5	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  004fa	50		 push	 eax
  004fb	b9 d0 2e 13 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1257168
  00500	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx

; 692  : 		ShopC[45].LoadShopItemEx(gDirPath.GetNewPath("ZtData\\Donate\\25_DonateShop.txt"));

  00505	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CNAGFFMB@ZtData?2Donate?225_DonateShop?4txt?$AA@
  0050a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0050f	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00514	50		 push	 eax
  00515	b9 6c 9e 13 00	 mov	 ecx, OFFSET ?ShopC@@3PAVCShop@@A+1285740
  0051a	e8 00 00 00 00	 call	 ?LoadShopItemEx@CShop@@QAEHPAD@Z ; CShop::LoadShopItemEx
$LN2@ShopDataLo:

; 693  : 	}
; 694  : #endif
; 695  : 
; 696  : 	LogAdd(lMsg.Get(MSGGET(1, 209)));

  0051f	68 d1 01 00 00	 push	 465			; 000001d1H
  00524	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00529	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0052e	50		 push	 eax
  0052f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00535	83 c4 04	 add	 esp, 4

; 697  : 	return TRUE;

  00538	b8 01 00 00 00	 mov	 eax, 1

; 698  : }

  0053d	c3		 ret	 0
?ShopDataLoad@@YAHXZ ENDP				; ShopDataLoad
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	??_C@_0BG@NFBGNLEO@?$FLBuy?$FN?5Need?5?$CFd?5NSPoint?$AA@ ; `string'
PUBLIC	__real@41f0000000000000
PUBLIC	_iStoreTaxMoney$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?CheckBuyItemEx@CShop@@QAE_NHHAAH@Z		; CShop::CheckBuyItemEx
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?GetText@CZtText@@QAEPADH@Z:PROC		; CZtText::GetText
EXTRN	?g_ZtText@@3VCZtText@@A:BYTE			; g_ZtText
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT ??_C@_0BG@NFBGNLEO@?$FLBuy?$FN?5Need?5?$CFd?5NSPoint?$AA@
CONST	SEGMENT
??_C@_0BG@NFBGNLEO@?$FLBuy?$FN?5Need?5?$CFd?5NSPoint?$AA@ DB '[Buy] Need '
	DB	'%d NSPoint', 00H				; `string'
CONST	ENDS
;	COMDAT __real@41f0000000000000
CONST	SEGMENT
__real@41f0000000000000 DQ 041f0000000000000r	; 4.29497e+009
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?CheckBuyItemEx@CShop@@QAE_NHHAAH@Z
_TEXT	SEGMENT
tv352 = -272						; size = 4
tv655 = -268						; size = 4
tv637 = -268						; size = 4
tv348 = -268						; size = 4
_iStoreTaxMoney$GSCopy$ = -264				; size = 4
_szBuff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_ItemPos$ = 12						; size = 4
_iStoreTaxMoney$ = 16					; size = 4
?CheckBuyItemEx@CShop@@QAE_NHHAAH@Z PROC		; CShop::CheckBuyItemEx, COMDAT
; _this$ = ecx

; 785  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0001a	57		 push	 edi

; 786  : 	char szBuff[256] = { 0 };

  0001b	68 ff 00 00 00	 push	 255			; 000000ffH
  00020	8b f9		 mov	 edi, ecx
  00022	8d 8d fd fe ff
	ff		 lea	 ecx, DWORD PTR _szBuff$[ebp+1]
  00028	6a 00		 push	 0
  0002a	51		 push	 ecx

; 870  : 				{
; 871  : 					sprintf_s(szBuff,g_ZtText.GetText(233),this->ShopEx[i].PayPrice);

  0002b	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _iStoreTaxMoney$GSCopy$[ebp], eax
  00031	c6 85 fc fe ff
	ff 00		 mov	 BYTE PTR _szBuff$[ebp], 0
  00038	e8 00 00 00 00	 call	 _memset
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	85 f6		 test	 esi, esi
  00042	78 0f		 js	 SHORT $LN32@CheckBuyIt

; 787  : 
; 788  : 	if(OBJMAX_RANGE(aIndex) == 0)

  00044	33 c0		 xor	 eax, eax
  00046	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  0004c	0f 9e c0	 setle	 al
  0004f	85 c0		 test	 eax, eax
  00051	75 14		 jne	 SHORT $LN22@CheckBuyIt
$LN32@CheckBuyIt:
  00053	5f		 pop	 edi

; 789  : 	{
; 790  : 		return false;

  00054	32 c0		 xor	 al, al
  00056	5e		 pop	 esi

; 878  : 				return true;
; 879  : 			}
; 880  : 		}
; 881  : 	}
; 882  : 
; 883  : 	return true;
; 884  : }

  00057	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005a	33 cd		 xor	 ecx, ebp
  0005c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 0c 00	 ret	 12			; 0000000cH
$LN22@CheckBuyIt:

; 791  : 	}
; 792  : 
; 793  : 	LPOBJ lpUser = &gObj[aIndex];

  00067	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0006d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00073	53		 push	 ebx
  00074	8b de		 mov	 ebx, esi

; 794  : 
; 795  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00076	83 7b 04 03	 cmp	 DWORD PTR [ebx+4], 3

; 796  : 	{
; 797  : 		return false;

  0007a	0f 8c 16 02 00
	00		 jl	 $LN37@CheckBuyIt

; 798  : 	}
; 799  : 
; 800  : 	for(int i=0; i<this->ItemCount; i++)

  00080	33 f6		 xor	 esi, esi
  00082	39 77 7c	 cmp	 DWORD PTR [edi+124], esi
  00085	0f 8e 2c 02 00
	00		 jle	 $LN18@CheckBuyIt
  0008b	8b 45 0c	 mov	 eax, DWORD PTR _ItemPos$[ebp]
  0008e	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00094	03 c7		 add	 eax, edi
  00096	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv348[ebp], eax
  0009c	0f bf 80 86 00
	00 00		 movsx	 eax, WORD PTR [eax+134]
  000a3	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv352[ebp], eax
  000a9	8d 8f 01 6a 00
	00		 lea	 ecx, DWORD PTR [edi+27137]
  000af	90		 npad	 1
$LL20@CheckBuyIt:

; 801  : 	{
; 802  : 		if ( this->m_item[ItemPos].m_Type != ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex))

  000b0	0f b6 51 fb	 movzx	 edx, BYTE PTR [ecx-5]
  000b4	0f b6 41 fc	 movzx	 eax, BYTE PTR [ecx-4]
  000b8	c1 e2 09	 shl	 edx, 9
  000bb	03 d0		 add	 edx, eax
  000bd	39 95 f0 fe ff
	ff		 cmp	 DWORD PTR tv352[ebp], edx
  000c3	75 51		 jne	 SHORT $LN19@CheckBuyIt

; 803  : 		{
; 804  : 			continue;
; 805  : 		}
; 806  : 		// ----
; 807  : 		if (this->m_item[ItemPos].m_Level != this->ShopEx[i].ItemLevel)

  000c5	0f b6 41 fd	 movzx	 eax, BYTE PTR [ecx-3]
  000c9	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR tv348[ebp]
  000cf	66 39 82 88 00
	00 00		 cmp	 WORD PTR [edx+136], ax
  000d6	75 3e		 jne	 SHORT $LN19@CheckBuyIt

; 808  : 		{
; 809  : 			continue;
; 810  : 		}
; 811  : 		// ----
; 812  : 		if(!CheckExellent(this->m_item[ItemPos].m_NewOption, this->ShopEx[i].ItemExl))

  000d8	0f b6 41 fe	 movzx	 eax, BYTE PTR [ecx-2]
  000dc	50		 push	 eax
  000dd	0f b6 82 17 01
	00 00		 movzx	 eax, BYTE PTR [edx+279]
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 ?CheckExellent@@YA_NHH@Z ; CheckExellent
  000ea	83 c4 08	 add	 esp, 8
  000ed	84 c0		 test	 al, al
  000ef	74 25		 je	 SHORT $LN19@CheckBuyIt

; 813  : 		{
; 814  : 			continue;
; 815  : 		}
; 816  : 		// ----
; 817  : 		if (this->ShopEx[i].ItemAnc != this->m_item[ItemPos].m_SetOption)

  000f1	8a 41 ff	 mov	 al, BYTE PTR [ecx-1]
  000f4	3a 82 2e 01 00
	00		 cmp	 al, BYTE PTR [edx+302]
  000fa	75 1a		 jne	 SHORT $LN19@CheckBuyIt

; 818  : 		{
; 819  : 			continue;
; 820  : 		}
; 821  : 		// ----
; 822  : 		if (this->ShopEx[i].PayType <= 0 || this->ShopEx[i].PayType > 3)

  000fc	8a 01		 mov	 al, BYTE PTR [ecx]
  000fe	84 c0		 test	 al, al
  00100	74 14		 je	 SHORT $LN19@CheckBuyIt
  00102	3c 03		 cmp	 al, 3
  00104	77 10		 ja	 SHORT $LN19@CheckBuyIt

; 823  : 		{
; 824  : 			continue;
; 825  : 		}
; 826  : 		// ----
; 827  : 
; 828  : 		if(this->ShopEx[i].PayType == ePriceZen)

  00106	3c 01		 cmp	 al, 1
  00108	74 1a		 je	 SHORT $LN28@CheckBuyIt

; 836  : 			}
; 837  : 			return true;
; 838  : 		}
; 839  : 		else if(this->ShopEx[i].PayType == ePriceBonus)

  0010a	3c 02		 cmp	 al, 2
  0010c	74 7a		 je	 SHORT $LN29@CheckBuyIt

; 851  : 		}
; 852  : 		else if(this->ShopEx[i].PayType == ePriceCredit)

  0010e	3c 03		 cmp	 al, 3
  00110	0f 84 b0 00 00
	00		 je	 $LN30@CheckBuyIt
$LN19@CheckBuyIt:

; 798  : 	}
; 799  : 
; 800  : 	for(int i=0; i<this->ItemCount; i++)

  00116	46		 inc	 esi
  00117	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0011a	3b 77 7c	 cmp	 esi, DWORD PTR [edi+124]
  0011d	7c 91		 jl	 SHORT $LL20@CheckBuyIt

; 851  : 		}
; 852  : 		else if(this->ShopEx[i].PayType == ePriceCredit)

  0011f	e9 93 01 00 00	 jmp	 $LN18@CheckBuyIt
$LN28@CheckBuyIt:

; 829  : 		{
; 830  : 			iStoreTaxMoney = this->ShopEx[i].PayPrice;

  00124	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _iStoreTaxMoney$GSCopy$[ebp]
  0012a	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  0012d	8b 84 8f 04 6a
	00 00		 mov	 eax, DWORD PTR [edi+ecx*4+27140]
  00134	89 02		 mov	 DWORD PTR [edx], eax

; 831  : 			if(iStoreTaxMoney > lpUser->Money)

  00136	3b 83 f0 00 00
	00		 cmp	 eax, DWORD PTR [ebx+240]
  0013c	0f 8e 75 01 00
	00		 jle	 $LN18@CheckBuyIt

; 832  : 			{
; 833  : 				sprintf_s(szBuff,g_ZtText.GetText(231),iStoreTaxMoney);

  00142	50		 push	 eax
  00143	68 e7 00 00 00	 push	 231			; 000000e7H
  00148	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  0014d	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00152	50		 push	 eax
  00153	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szBuff$[ebp]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 834  : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  0015f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00161	6a 01		 push	 1
  00163	51		 push	 ecx
  00164	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  0016a	52		 push	 edx
  0016b	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00170	83 c4 18	 add	 esp, 24			; 00000018H
  00173	5b		 pop	 ebx
  00174	5f		 pop	 edi

; 835  : 				return false;

  00175	32 c0		 xor	 al, al
  00177	5e		 pop	 esi

; 878  : 				return true;
; 879  : 			}
; 880  : 		}
; 881  : 	}
; 882  : 
; 883  : 	return true;
; 884  : }

  00178	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017b	33 cd		 xor	 ecx, ebp
  0017d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c2 0c 00	 ret	 12			; 0000000cH
$LN29@CheckBuyIt:

; 840  : 		{
; 841  : 			if(this->ShopEx[i].PayPrice > lpUser->GameShop.WCoinC)

  00188	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  0018b	8b 8c 87 04 6a
	00 00		 mov	 ecx, DWORD PTR [edi+eax*4+27140]
  00192	8b d1		 mov	 edx, ecx
  00194	89 95 f4 fe ff
	ff		 mov	 DWORD PTR tv655[ebp], edx
  0019a	db 85 f4 fe ff
	ff		 fild	 DWORD PTR tv655[ebp]
  001a0	85 d2		 test	 edx, edx
  001a2	79 06		 jns	 SHORT $LN34@CheckBuyIt
  001a4	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN34@CheckBuyIt:
  001aa	dc 9b 00 23 00
	00		 fcomp	 QWORD PTR [ebx+8960]
  001b0	df e0		 fnstsw	 ax
  001b2	f6 c4 41	 test	 ah, 65			; 00000041H
  001b5	0f 85 f0 00 00
	00		 jne	 $LN1@CheckBuyIt

; 842  : 			{
; 843  : 				sprintf_s(szBuff,g_ZtText.GetText(232),this->ShopEx[i].PayPrice);

  001bb	51		 push	 ecx
  001bc	68 e8 00 00 00	 push	 232			; 000000e8H

; 844  : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);
; 845  : 				return false;
; 846  : 			}
; 847  : 			//lpUser->Bonus -= this->ShopEx[i].PayPrice;
; 848  : 			//GJSetCharacterInfo(lpUser, lpUser->m_Index, 0);
; 849  : 			iStoreTaxMoney = 0;
; 850  : 			return true;

  001c1	e9 a5 00 00 00	 jmp	 $LN38@CheckBuyIt
$LN30@CheckBuyIt:

; 853  : 		{
; 854  : 			if(g_ZtLicense.CheckUser(eZtUB::NSGames))

  001c6	6a 51		 push	 81			; 00000051H
  001c8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  001cd	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  001d2	84 c0		 test	 al, al
  001d4	74 5e		 je	 SHORT $LN4@CheckBuyIt

; 855  : 			{
; 856  : 				if(this->ShopEx[i].PayPrice > lpUser->PCPoint)

  001d6	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  001d9	8b 84 8f 04 6a
	00 00		 mov	 eax, DWORD PTR [edi+ecx*4+27140]
  001e0	3b 83 88 22 00
	00		 cmp	 eax, DWORD PTR [ebx+8840]
  001e6	76 3b		 jbe	 SHORT $LN3@CheckBuyIt

; 857  : 				{
; 858  : 					sprintf_s(szBuff, "[Buy] Need %d NSPoint", this->ShopEx[i].PayPrice);

  001e8	50		 push	 eax
  001e9	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NFBGNLEO@?$FLBuy?$FN?5Need?5?$CFd?5NSPoint?$AA@
  001f4	52		 push	 edx
  001f5	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 859  : 					GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  001fa	8b 03		 mov	 eax, DWORD PTR [ebx]
  001fc	6a 01		 push	 1
  001fe	50		 push	 eax
  001ff	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szBuff$[ebp]
  00205	51		 push	 ecx
  00206	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0020b	83 c4 18	 add	 esp, 24			; 00000018H
  0020e	5b		 pop	 ebx
  0020f	5f		 pop	 edi

; 860  : 					return false;

  00210	32 c0		 xor	 al, al
  00212	5e		 pop	 esi

; 878  : 				return true;
; 879  : 			}
; 880  : 		}
; 881  : 	}
; 882  : 
; 883  : 	return true;
; 884  : }

  00213	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00216	33 cd		 xor	 ecx, ebp
  00218	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021d	8b e5		 mov	 esp, ebp
  0021f	5d		 pop	 ebp
  00220	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CheckBuyIt:

; 861  : 				}
; 862  : 				//lpUser->Credits -= this->ShopEx[i].PayPrice;
; 863  : 				//GJSetCharacterInfo(lpUser, lpUser->m_Index, 0);
; 864  : 				iStoreTaxMoney = 0;

  00223	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _iStoreTaxMoney$GSCopy$[ebp]
  00229	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 865  : 				return true;

  0022f	e9 83 00 00 00	 jmp	 $LN18@CheckBuyIt
$LN4@CheckBuyIt:

; 866  : 			}
; 867  : 			else
; 868  : 			{
; 869  : 				if(this->ShopEx[i].PayPrice > lpUser->ZtCred)

  00234	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00237	8b 8c 87 04 6a
	00 00		 mov	 ecx, DWORD PTR [edi+eax*4+27140]
  0023e	8b d1		 mov	 edx, ecx
  00240	89 95 f4 fe ff
	ff		 mov	 DWORD PTR tv637[ebp], edx
  00246	db 85 f4 fe ff
	ff		 fild	 DWORD PTR tv637[ebp]
  0024c	85 d2		 test	 edx, edx
  0024e	79 06		 jns	 SHORT $LN35@CheckBuyIt
  00250	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN35@CheckBuyIt:
  00256	d9 83 a8 22 00
	00		 fld	 DWORD PTR [ebx+8872]
  0025c	de d9		 fcompp
  0025e	df e0		 fnstsw	 ax
  00260	f6 c4 05	 test	 ah, 5
  00263	7a 46		 jp	 SHORT $LN1@CheckBuyIt

; 870  : 				{
; 871  : 					sprintf_s(szBuff,g_ZtText.GetText(233),this->ShopEx[i].PayPrice);

  00265	51		 push	 ecx
  00266	68 e9 00 00 00	 push	 233			; 000000e9H
$LN38@CheckBuyIt:
  0026b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00270	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00275	50		 push	 eax
  00276	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szBuff$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 872  : 					GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  00282	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00284	6a 01		 push	 1
  00286	51		 push	 ecx
  00287	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  0028d	52		 push	 edx
  0028e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00293	83 c4 18	 add	 esp, 24			; 00000018H
$LN37@CheckBuyIt:

; 873  : 					return false;

  00296	5b		 pop	 ebx
  00297	5f		 pop	 edi
  00298	32 c0		 xor	 al, al
  0029a	5e		 pop	 esi

; 878  : 				return true;
; 879  : 			}
; 880  : 		}
; 881  : 	}
; 882  : 
; 883  : 	return true;
; 884  : }

  0029b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029e	33 cd		 xor	 ecx, ebp
  002a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a5	8b e5		 mov	 esp, ebp
  002a7	5d		 pop	 ebp
  002a8	c2 0c 00	 ret	 12			; 0000000cH
$LN1@CheckBuyIt:

; 874  : 				}
; 875  : 				//lpUser->Credits -= this->ShopEx[i].PayPrice;
; 876  : 				//GJSetCharacterInfo(lpUser, lpUser->m_Index, 0);
; 877  : 				iStoreTaxMoney = 0;

  002ab	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _iStoreTaxMoney$GSCopy$[ebp]
  002b1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN18@CheckBuyIt:

; 878  : 				return true;
; 879  : 			}
; 880  : 		}
; 881  : 	}
; 882  : 
; 883  : 	return true;
; 884  : }

  002b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ba	5b		 pop	 ebx
  002bb	5f		 pop	 edi
  002bc	33 cd		 xor	 ecx, ebp
  002be	b0 01		 mov	 al, 1
  002c0	5e		 pop	 esi
  002c1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c6	8b e5		 mov	 esp, ebp
  002c8	5d		 pop	 ebp
  002c9	c2 0c 00	 ret	 12			; 0000000cH
?CheckBuyItemEx@CShop@@QAE_NHHAAH@Z ENDP		; CShop::CheckBuyItemEx
_TEXT	ENDS
PUBLIC	??_C@_0BB@JMOCLNGO@?$FLBuy?$FN?5?$CFd?5NSPoint?$AA@ ; `string'
PUBLIC	_aIndex$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?BuyItemEx@CShop@@QAE_NHH@Z			; CShop::BuyItemEx
EXTRN	?BuyDonateShopItem@CAchievements@@QAEXHH@Z:PROC	; CAchievements::BuyDonateShopItem
EXTRN	?g_Achievements@@3VCAchievements@@A:BYTE	; g_Achievements
EXTRN	?ZtUserDataSend@@YAXH@Z:PROC			; ZtUserDataSend
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
;	COMDAT ??_C@_0BB@JMOCLNGO@?$FLBuy?$FN?5?$CFd?5NSPoint?$AA@
CONST	SEGMENT
??_C@_0BB@JMOCLNGO@?$FLBuy?$FN?5?$CFd?5NSPoint?$AA@ DB '[Buy] %d NSPoint', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?BuyItemEx@CShop@@QAE_NHH@Z
_TEXT	SEGMENT
tv480 = -272						; size = 4
_aIndex$GSCopy$ = -268					; size = 4
tv775 = -264						; size = 4
tv732 = -264						; size = 4
tv545 = -264						; size = 4
tv476 = -264						; size = 4
_szBuff$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_ItemPos$ = 12						; size = 4
?BuyItemEx@CShop@@QAE_NHH@Z PROC			; CShop::BuyItemEx, COMDAT
; _this$ = ecx

; 887  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]

; 888  : 	char szBuff[256] = { 0 };

  00018	68 ff 00 00 00	 push	 255			; 000000ffH
  0001d	8d 85 fd fe ff
	ff		 lea	 eax, DWORD PTR _szBuff$[ebp+1]
  00023	6a 00		 push	 0
  00025	50		 push	 eax
  00026	8b d9		 mov	 ebx, ecx

; 996  : 			}
; 997  : 			else
; 998  : 			{
; 999  : 				if(this->ShopEx[i].PayPrice > lpUser->ZtCred)

  00028	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _aIndex$GSCopy$[ebp], esi
  0002e	c6 85 fc fe ff
	ff 00		 mov	 BYTE PTR _szBuff$[ebp], 0
  00035	e8 00 00 00 00	 call	 _memset
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	85 f6		 test	 esi, esi
  0003f	78 0f		 js	 SHORT $LN32@BuyItemEx

; 889  : 
; 890  : 	if(OBJMAX_RANGE(aIndex) == 0)

  00041	33 c0		 xor	 eax, eax
  00043	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  00049	0f 9e c0	 setle	 al
  0004c	85 c0		 test	 eax, eax
  0004e	75 14		 jne	 SHORT $LN22@BuyItemEx
$LN32@BuyItemEx:
  00050	5e		 pop	 esi

; 891  : 	{
; 892  : 		return false;

  00051	32 c0		 xor	 al, al
  00053	5b		 pop	 ebx

; 1031 : }

  00054	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00057	33 cd		 xor	 ecx, ebp
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN22@BuyItemEx:

; 893  : 	}
; 894  : 
; 895  : 	LPOBJ lpUser = &gObj[aIndex];

  00064	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  0006a	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 896  : 
; 897  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00070	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3

; 898  : 	{
; 899  : 		return false;

  00074	7c da		 jl	 SHORT $LN32@BuyItemEx

; 900  : 	}
; 901  : 
; 902  : 	for(int i=0; i<this->ItemCount; i++)

  00076	57		 push	 edi
  00077	33 ff		 xor	 edi, edi
  00079	39 7b 7c	 cmp	 DWORD PTR [ebx+124], edi
  0007c	0f 8e e8 00 00
	00		 jle	 $LN18@BuyItemEx
  00082	8b 45 0c	 mov	 eax, DWORD PTR _ItemPos$[ebp]
  00085	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0008b	0f bf 94 18 86
	00 00 00	 movsx	 edx, WORD PTR [eax+ebx+134]
  00093	03 c3		 add	 eax, ebx
  00095	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv476[ebp], eax
  0009b	89 95 f0 fe ff
	ff		 mov	 DWORD PTR tv480[ebp], edx
  000a1	8d 8b 01 6a 00
	00		 lea	 ecx, DWORD PTR [ebx+27137]
  000a7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL20@BuyItemEx:

; 903  : 	{
; 904  : 		if ( this->m_item[ItemPos].m_Type != ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex))

  000b0	0f b6 41 fb	 movzx	 eax, BYTE PTR [ecx-5]
  000b4	0f b6 51 fc	 movzx	 edx, BYTE PTR [ecx-4]
  000b8	c1 e0 09	 shl	 eax, 9
  000bb	03 c2		 add	 eax, edx
  000bd	39 85 f0 fe ff
	ff		 cmp	 DWORD PTR tv480[ebp], eax
  000c3	75 55		 jne	 SHORT $LN19@BuyItemEx

; 905  : 		{
; 906  : 			continue;
; 907  : 		}
; 908  : 		// ----
; 909  : 		if (this->m_item[ItemPos].m_Level != this->ShopEx[i].ItemLevel)

  000c5	0f b6 41 fd	 movzx	 eax, BYTE PTR [ecx-3]
  000c9	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR tv476[ebp]
  000cf	66 39 82 88 00
	00 00		 cmp	 WORD PTR [edx+136], ax
  000d6	75 42		 jne	 SHORT $LN19@BuyItemEx

; 910  : 		{
; 911  : 			continue;
; 912  : 		}
; 913  : 		// ----
; 914  : 		if(!CheckExellent(this->m_item[ItemPos].m_NewOption, this->ShopEx[i].ItemExl))

  000d8	0f b6 41 fe	 movzx	 eax, BYTE PTR [ecx-2]
  000dc	50		 push	 eax
  000dd	0f b6 82 17 01
	00 00		 movzx	 eax, BYTE PTR [edx+279]
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 ?CheckExellent@@YA_NHH@Z ; CheckExellent
  000ea	83 c4 08	 add	 esp, 8
  000ed	84 c0		 test	 al, al
  000ef	74 29		 je	 SHORT $LN19@BuyItemEx

; 915  : 		{
; 916  : 			continue;
; 917  : 		}
; 918  : 		// ----
; 919  : 		if (this->ShopEx[i].ItemAnc != this->m_item[ItemPos].m_SetOption)

  000f1	8a 41 ff	 mov	 al, BYTE PTR [ecx-1]
  000f4	3a 82 2e 01 00
	00		 cmp	 al, BYTE PTR [edx+302]
  000fa	75 1e		 jne	 SHORT $LN19@BuyItemEx

; 920  : 		{
; 921  : 			continue;
; 922  : 		}
; 923  : 		// ----
; 924  : 		if (this->ShopEx[i].PayType <= 0 || this->ShopEx[i].PayType > 3)

  000fc	8a 01		 mov	 al, BYTE PTR [ecx]
  000fe	84 c0		 test	 al, al
  00100	74 18		 je	 SHORT $LN19@BuyItemEx
  00102	3c 03		 cmp	 al, 3
  00104	77 14		 ja	 SHORT $LN19@BuyItemEx

; 925  : 		{
; 926  : 			continue;
; 927  : 		}
; 928  : 		// ----
; 929  : 
; 930  : 		if(this->ShopEx[i].PayType == ePriceZen)

  00106	3c 01		 cmp	 al, 1
  00108	74 1b		 je	 SHORT $LN28@BuyItemEx

; 940  : 			return true;
; 941  : 		}
; 942  : 		else if(this->ShopEx[i].PayType == ePriceBonus)

  0010a	3c 02		 cmp	 al, 2
  0010c	0f 84 9a 00 00
	00		 je	 $LN29@BuyItemEx

; 955  : #if(CREDIT_DONATE_LOG==TRUE)
; 956  : 			int iType = ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex);
; 957  : 
; 958  : 			g_BonusShopLog.Output("[%s] [%s] Buy: Item(Name:%s,Type:%d,Index:%d,Level:%d,Luck:%d,Add:%d,Exl:%d,Anc:%d)",
; 959  : 				lpUser->AccountID, lpUser->Name, 
; 960  : 				ItemAttribute[iType].Name, this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex, 
; 961  : 				this->ShopEx[i].ItemLevel, this->m_item->m_Option2, this->m_item->m_Option3, this->m_item->m_NewOption, this->m_item->m_SetOption);
; 962  : #endif
; 963  : 			return true;
; 964  : 		}
; 965  : 		else if(this->ShopEx[i].PayType == ePriceCredit)

  00112	3c 03		 cmp	 al, 3
  00114	0f 84 62 01 00
	00		 je	 $LN30@BuyItemEx
$LN19@BuyItemEx:

; 900  : 	}
; 901  : 
; 902  : 	for(int i=0; i<this->ItemCount; i++)

  0011a	47		 inc	 edi
  0011b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0011e	3b 7b 7c	 cmp	 edi, DWORD PTR [ebx+124]
  00121	7c 8d		 jl	 SHORT $LL20@BuyItemEx

; 955  : #if(CREDIT_DONATE_LOG==TRUE)
; 956  : 			int iType = ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex);
; 957  : 
; 958  : 			g_BonusShopLog.Output("[%s] [%s] Buy: Item(Name:%s,Type:%d,Index:%d,Level:%d,Luck:%d,Add:%d,Exl:%d,Anc:%d)",
; 959  : 				lpUser->AccountID, lpUser->Name, 
; 960  : 				ItemAttribute[iType].Name, this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex, 
; 961  : 				this->ShopEx[i].ItemLevel, this->m_item->m_Option2, this->m_item->m_Option3, this->m_item->m_NewOption, this->m_item->m_SetOption);
; 962  : #endif
; 963  : 			return true;
; 964  : 		}
; 965  : 		else if(this->ShopEx[i].PayType == ePriceCredit)

  00123	eb 45		 jmp	 SHORT $LN18@BuyItemEx
$LN28@BuyItemEx:

; 931  : 		{
; 932  : 			if(this->ShopEx[i].PayPrice > lpUser->Money)

  00125	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  0012b	8d 0c 7f	 lea	 ecx, DWORD PTR [edi+edi*2]
  0012e	8b 8c 8b 04 6a
	00 00		 mov	 ecx, DWORD PTR [ebx+ecx*4+27140]
  00135	3b c8		 cmp	 ecx, eax
  00137	76 46		 jbe	 SHORT $LN10@BuyItemEx

; 933  : 			{
; 934  : 				sprintf_s(szBuff,g_ZtText.GetText(234),this->ShopEx[i].PayPrice);

  00139	51		 push	 ecx
  0013a	68 ea 00 00 00	 push	 234			; 000000eaH
  0013f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00144	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  00149	50		 push	 eax
  0014a	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  00150	52		 push	 edx
  00151	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 935  : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  00156	8b 06		 mov	 eax, DWORD PTR [esi]
  00158	6a 01		 push	 1
  0015a	50		 push	 eax
  0015b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szBuff$[ebp]
  00161	51		 push	 ecx
$LN43@BuyItemEx:

; 947  : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  00162	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00167	83 c4 18	 add	 esp, 24			; 00000018H
$LN18@BuyItemEx:

; 1026 : 			}
; 1027 : 		}
; 1028 : 	}
; 1029 : 
; 1030 : 	return false;

  0016a	5f		 pop	 edi
  0016b	5e		 pop	 esi
  0016c	32 c0		 xor	 al, al
  0016e	5b		 pop	 ebx

; 1031 : }

  0016f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00172	33 cd		 xor	 ecx, ebp
  00174	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c2 08 00	 ret	 8
$LN10@BuyItemEx:

; 936  : 				return false;
; 937  : 			}
; 938  : 			lpUser->Money -= this->ShopEx[i].PayPrice;
; 939  : 			GCMoneySend(aIndex, lpUser->Money);

  0017f	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _aIndex$GSCopy$[ebp]
  00185	2b c1		 sub	 eax, ecx
  00187	50		 push	 eax
  00188	52		 push	 edx
  00189	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  0018f	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  00194	83 c4 08	 add	 esp, 8
  00197	5f		 pop	 edi
  00198	5e		 pop	 esi

; 1016 : 				#if(CREDIT_DONATE_LOG==TRUE)
; 1017 : 				int iType = ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex);
; 1018 : 
; 1019 : 				g_CreditShopLog.Output("[%s] [%s] Buy: Item(Name:%s,Type:%d,Index:%d,Level:%d,Luck:%d,Add:%d,Exl:%d,Anc:%d) Price: %d",
; 1020 : 					lpUser->AccountID, lpUser->Name, 
; 1021 : 					ItemAttribute[iType].Name, this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex, 
; 1022 : 					this->ShopEx[i].ItemLevel, this->m_item->m_Option2, this->m_item->m_Option3, this->m_item->m_NewOption, this->m_item->m_SetOption,
; 1023 : 					this->ShopEx[i].PayPrice);
; 1024 : 				#endif
; 1025 : 				return true;

  00199	b0 01		 mov	 al, 1
  0019b	5b		 pop	 ebx

; 1031 : }

  0019c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019f	33 cd		 xor	 ecx, ebp
  001a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 08 00	 ret	 8
$LN29@BuyItemEx:

; 943  : 		{
; 944  : 			if(this->ShopEx[i].PayPrice > lpUser->GameShop.WCoinC)

  001ac	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  001af	8b 8c 83 04 6a
	00 00		 mov	 ecx, DWORD PTR [ebx+eax*4+27140]
  001b6	8b d1		 mov	 edx, ecx
  001b8	89 95 f8 fe ff
	ff		 mov	 DWORD PTR tv775[ebp], edx
  001be	db 85 f8 fe ff
	ff		 fild	 DWORD PTR tv775[ebp]
  001c4	85 d2		 test	 edx, edx
  001c6	79 06		 jns	 SHORT $LN40@BuyItemEx
  001c8	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN40@BuyItemEx:
  001ce	dc 96 00 23 00
	00		 fcom	 QWORD PTR [esi+8960]
  001d4	df e0		 fnstsw	 ax
  001d6	f6 c4 41	 test	 ah, 65			; 00000041H
  001d9	75 30		 jne	 SHORT $LN7@BuyItemEx

; 945  : 			{
; 946  : 				sprintf_s(szBuff,g_ZtText.GetText(235),this->ShopEx[i].PayPrice);

  001db	51		 push	 ecx
  001dc	dd d8		 fstp	 ST(0)
  001de	68 eb 00 00 00	 push	 235			; 000000ebH
  001e3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  001e8	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  001ed	50		 push	 eax
  001ee	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szBuff$[ebp]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 947  : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  001fa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  001fc	6a 01		 push	 1
  001fe	51		 push	 ecx
  001ff	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  00205	52		 push	 edx

; 948  : 				return false;

  00206	e9 57 ff ff ff	 jmp	 $LN43@BuyItemEx
$LN7@BuyItemEx:

; 949  : 			}
; 950  : 			lpUser->GameShop.WCoinC -= this->ShopEx[i].PayPrice;

  0020b	dc ae 00 23 00
	00		 fsubr	 QWORD PTR [esi+8960]
  00211	dd 96 00 23 00
	00		 fst	 QWORD PTR [esi+8960]

; 951  : 			sprintf_s(szBuff,g_ZtText.GetText(236),(int)lpUser->GameShop.WCoinC);

  00217	e8 00 00 00 00	 call	 __ftol2_sse
  0021c	50		 push	 eax
  0021d	68 ec 00 00 00	 push	 236			; 000000ecH
  00222	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00227	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0022c	50		 push	 eax
  0022d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szBuff$[ebp]
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 952  : 			GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  00239	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023b	6a 01		 push	 1
  0023d	51		 push	 ecx
  0023e	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  00244	52		 push	 edx
  00245	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 953  : 			gGameShop.GDSaveUserInfo(aIndex);

  0024a	8b b5 f4 fe ff
	ff		 mov	 esi, DWORD PTR _aIndex$GSCopy$[ebp]
  00250	83 c4 18	 add	 esp, 24			; 00000018H
  00253	56		 push	 esi
  00254	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00259	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 954  : 			ZtUserDataSend(aIndex);

  0025e	56		 push	 esi
  0025f	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend
  00264	83 c4 04	 add	 esp, 4
  00267	5f		 pop	 edi
  00268	5e		 pop	 esi

; 1016 : 				#if(CREDIT_DONATE_LOG==TRUE)
; 1017 : 				int iType = ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex);
; 1018 : 
; 1019 : 				g_CreditShopLog.Output("[%s] [%s] Buy: Item(Name:%s,Type:%d,Index:%d,Level:%d,Luck:%d,Add:%d,Exl:%d,Anc:%d) Price: %d",
; 1020 : 					lpUser->AccountID, lpUser->Name, 
; 1021 : 					ItemAttribute[iType].Name, this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex, 
; 1022 : 					this->ShopEx[i].ItemLevel, this->m_item->m_Option2, this->m_item->m_Option3, this->m_item->m_NewOption, this->m_item->m_SetOption,
; 1023 : 					this->ShopEx[i].PayPrice);
; 1024 : 				#endif
; 1025 : 				return true;

  00269	b0 01		 mov	 al, 1
  0026b	5b		 pop	 ebx

; 1031 : }

  0026c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0026f	33 cd		 xor	 ecx, ebp
  00271	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00276	8b e5		 mov	 esp, ebp
  00278	5d		 pop	 ebp
  00279	c2 08 00	 ret	 8
$LN30@BuyItemEx:

; 966  : 		{
; 967  : 			if(g_ZtLicense.CheckUser(eZtUB::NSGames))

  0027c	6a 51		 push	 81			; 00000051H
  0027e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtLicense@@3VCZtLicense@@A ; g_ZtLicense
  00283	e8 00 00 00 00	 call	 ?CheckUser@CZtLicense@@QAE_NH@Z ; CZtLicense::CheckUser
  00288	84 c0		 test	 al, al
  0028a	74 70		 je	 SHORT $LN4@BuyItemEx

; 968  : 			{
; 969  : 				if(this->ShopEx[i].PayPrice > lpUser->PCPoint)

  0028c	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  0028f	8b 8c 83 04 6a
	00 00		 mov	 ecx, DWORD PTR [ebx+eax*4+27140]
  00296	8d 94 83 04 6a
	00 00		 lea	 edx, DWORD PTR [ebx+eax*4+27140]
  0029d	8b 86 88 22 00
	00		 mov	 eax, DWORD PTR [esi+8840]
  002a3	3b c8		 cmp	 ecx, eax
  002a5	76 23		 jbe	 SHORT $LN3@BuyItemEx

; 970  : 				{
; 971  : 					sprintf_s(szBuff, "[Buy] Need %d NSPoint", this->ShopEx[i].PayPrice);

  002a7	51		 push	 ecx
  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NFBGNLEO@?$FLBuy?$FN?5Need?5?$CFd?5NSPoint?$AA@
$LN42@BuyItemEx:
  002ad	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szBuff$[ebp]
  002b3	51		 push	 ecx
  002b4	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 972  : 					GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  002b9	8b 16		 mov	 edx, DWORD PTR [esi]
  002bb	6a 01		 push	 1
  002bd	52		 push	 edx
  002be	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szBuff$[ebp]
  002c4	50		 push	 eax

; 973  : 					return false;

  002c5	e9 98 fe ff ff	 jmp	 $LN43@BuyItemEx
$LN3@BuyItemEx:

; 974  : 				}
; 975  : 				lpUser->PCPoint -= this->ShopEx[i].PayPrice;
; 976  : 
; 977  : 				#if(SYSTEM_ACHIEVEMENTS)
; 978  : 				g_Achievements.BuyDonateShopItem(aIndex, this->ShopEx[i].PayPrice);

  002ca	8b bd f4 fe ff
	ff		 mov	 edi, DWORD PTR _aIndex$GSCopy$[ebp]
  002d0	2b c1		 sub	 eax, ecx
  002d2	89 86 88 22 00
	00		 mov	 DWORD PTR [esi+8840], eax
  002d8	8b 0a		 mov	 ecx, DWORD PTR [edx]
  002da	51		 push	 ecx
  002db	57		 push	 edi
  002dc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Achievements@@3VCAchievements@@A ; g_Achievements
  002e1	e8 00 00 00 00	 call	 ?BuyDonateShopItem@CAchievements@@QAEXHH@Z ; CAchievements::BuyDonateShopItem

; 979  : 				#endif
; 980  : 
; 981  : 				//GJSetCharacterInfo(lpUser, lpUser->m_Index, 0, FALSE, FALSE, FALSE, FALSE);
; 982  : 
; 983  : 				sprintf_s(szBuff,"[Buy] %d NSPoint",(int)lpUser->ZtCred);

  002e6	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  002ec	e8 00 00 00 00	 call	 __ftol2_sse
  002f1	50		 push	 eax
  002f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JMOCLNGO@?$FLBuy?$FN?5?$CFd?5NSPoint?$AA@

; 984  : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);
; 985  : 				ZtUserDataSend(aIndex);
; 986  : 				#if(CREDIT_DONATE_LOG==TRUE)
; 987  : 				int iType = ITEMGET(this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex);
; 988  : 
; 989  : 				g_CreditShopLog.Output("[%s] [%s] Buy: Item(Name:%s,Type:%d,Index:%d,Level:%d,Luck:%d,Add:%d,Exl:%d,Anc:%d) Price: %d",
; 990  : 					lpUser->AccountID, lpUser->Name, 
; 991  : 					ItemAttribute[iType].Name, this->ShopEx[i].ItemType, this->ShopEx[i].ItemIndex, 
; 992  : 					this->ShopEx[i].ItemLevel, this->m_item->m_Option2, this->m_item->m_Option3, this->m_item->m_NewOption, this->m_item->m_SetOption,
; 993  : 					this->ShopEx[i].PayPrice);
; 994  : 				#endif
; 995  : 				return true;

  002f7	e9 93 00 00 00	 jmp	 $LN44@BuyItemEx
$LN4@BuyItemEx:

; 996  : 			}
; 997  : 			else
; 998  : 			{
; 999  : 				if(this->ShopEx[i].PayPrice > lpUser->ZtCred)

  002fc	8d 14 7f	 lea	 edx, DWORD PTR [edi+edi*2]
  002ff	8d 8c 93 04 6a
	00 00		 lea	 ecx, DWORD PTR [ebx+edx*4+27140]
  00306	8b 11		 mov	 edx, DWORD PTR [ecx]
  00308	8b c2		 mov	 eax, edx
  0030a	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv732[ebp], eax
  00310	db 85 f8 fe ff
	ff		 fild	 DWORD PTR tv732[ebp]
  00316	85 c0		 test	 eax, eax
  00318	79 06		 jns	 SHORT $LN41@BuyItemEx
  0031a	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN41@BuyItemEx:
  00320	d9 9d f8 fe ff
	ff		 fstp	 DWORD PTR tv545[ebp]
  00326	d9 85 f8 fe ff
	ff		 fld	 DWORD PTR tv545[ebp]
  0032c	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  00332	d8 d9		 fcomp	 ST(1)
  00334	df e0		 fnstsw	 ax
  00336	f6 c4 05	 test	 ah, 5
  00339	7a 18		 jp	 SHORT $LN1@BuyItemEx

; 1000 : 				{
; 1001 : 					sprintf_s(szBuff,g_ZtText.GetText(237),this->ShopEx[i].PayPrice);

  0033b	52		 push	 edx
  0033c	dd d8		 fstp	 ST(0)
  0033e	68 ed 00 00 00	 push	 237			; 000000edH
  00343	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00348	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0034d	50		 push	 eax

; 1002 : 					GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);
; 1003 : 					return false;

  0034e	e9 5a ff ff ff	 jmp	 $LN42@BuyItemEx
$LN1@BuyItemEx:

; 1004 : 				}
; 1005 : 				lpUser->ZtCred -= this->ShopEx[i].PayPrice;

  00353	d8 ae a8 22 00
	00		 fsubr	 DWORD PTR [esi+8872]

; 1006 : 
; 1007 : 				#if(SYSTEM_ACHIEVEMENTS)
; 1008 : 				g_Achievements.BuyDonateShopItem(aIndex, this->ShopEx[i].PayPrice);

  00359	8b bd f4 fe ff
	ff		 mov	 edi, DWORD PTR _aIndex$GSCopy$[ebp]
  0035f	d9 9e a8 22 00
	00		 fstp	 DWORD PTR [esi+8872]
  00365	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00367	51		 push	 ecx
  00368	57		 push	 edi
  00369	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Achievements@@3VCAchievements@@A ; g_Achievements
  0036e	e8 00 00 00 00	 call	 ?BuyDonateShopItem@CAchievements@@QAEXHH@Z ; CAchievements::BuyDonateShopItem

; 1009 : 				#endif
; 1010 : 
; 1011 : 				//GJSetCharacterInfo(lpUser, lpUser->m_Index, 0, FALSE, FALSE, FALSE, FALSE);
; 1012 : 
; 1013 : 				sprintf_s(szBuff,g_ZtText.GetText(238),(int)lpUser->ZtCred);

  00373	d9 86 a8 22 00
	00		 fld	 DWORD PTR [esi+8872]
  00379	e8 00 00 00 00	 call	 __ftol2_sse
  0037e	50		 push	 eax
  0037f	68 ee 00 00 00	 push	 238			; 000000eeH
  00384	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ZtText@@3VCZtText@@A ; g_ZtText
  00389	e8 00 00 00 00	 call	 ?GetText@CZtText@@QAEPADH@Z ; CZtText::GetText
  0038e	50		 push	 eax
$LN44@BuyItemEx:
  0038f	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szBuff$[ebp]
  00395	52		 push	 edx
  00396	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 1014 : 				GCServerMsgStringSend(szBuff, lpUser->m_Index, 1);

  0039b	8b 06		 mov	 eax, DWORD PTR [esi]
  0039d	6a 01		 push	 1
  0039f	50		 push	 eax
  003a0	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szBuff$[ebp]
  003a6	51		 push	 ecx
  003a7	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 1015 : 				ZtUserDataSend(aIndex);

  003ac	57		 push	 edi
  003ad	e8 00 00 00 00	 call	 ?ZtUserDataSend@@YAXH@Z	; ZtUserDataSend

; 1031 : }

  003b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003b5	83 c4 1c	 add	 esp, 28			; 0000001cH
  003b8	5f		 pop	 edi
  003b9	5e		 pop	 esi
  003ba	33 cd		 xor	 ecx, ebp
  003bc	b0 01		 mov	 al, 1
  003be	5b		 pop	 ebx
  003bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003c4	8b e5		 mov	 esp, ebp
  003c6	5d		 pop	 ebp
  003c7	c2 08 00	 ret	 8
?BuyItemEx@CShop@@QAE_NHH@Z ENDP			; CShop::BuyItemEx
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??__EShopC@@YAXXZ
text$yc	SEGMENT
??__EShopC@@YAXXZ PROC					; `dynamic initializer for 'ShopC'', COMDAT

; 19   : CShop ShopC[MAX_SHOP];

  00000	68 00 00 00 00	 push	 OFFSET ??1CShop@@UAE@XZ	; CShop::~CShop
  00005	68 00 00 00 00	 push	 OFFSET ??0CShop@@QAE@XZ	; CShop::CShop
  0000a	6a 2e		 push	 46			; 0000002eH
  0000c	68 9c 6f 00 00	 push	 28572			; 00006f9cH
  00011	68 00 00 00 00	 push	 OFFSET ?ShopC@@3PAVCShop@@A ; ShopC
  00016	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  0001b	68 00 00 00 00	 push	 OFFSET ??__FShopC@@YAXXZ ; `dynamic atexit destructor for 'ShopC''
  00020	e8 00 00 00 00	 call	 _atexit
  00025	59		 pop	 ecx
  00026	c3		 ret	 0
??__EShopC@@YAXXZ ENDP					; `dynamic initializer for 'ShopC''
text$yc	ENDS
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??__FShopC@@YAXXZ
text$yd	SEGMENT
??__FShopC@@YAXXZ PROC					; `dynamic atexit destructor for 'ShopC'', COMDAT
  00000	68 00 00 00 00	 push	 OFFSET ??1CShop@@UAE@XZ	; CShop::~CShop
  00005	6a 2e		 push	 46			; 0000002eH
  00007	68 9c 6f 00 00	 push	 28572			; 00006f9cH
  0000c	68 00 00 00 00	 push	 OFFSET ?ShopC@@3PAVCShop@@A ; ShopC
  00011	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00016	c3		 ret	 0
??__FShopC@@YAXXZ ENDP					; `dynamic atexit destructor for 'ShopC''
text$yd	ENDS
PUBLIC	?ShopC@@3PAVCShop@@A				; ShopC
_BSS	SEGMENT
?ShopC@@3PAVCShop@@A DB 0140e08H DUP (?)		; ShopC
_BSS	ENDS
CRT$XCU	SEGMENT
_ShopC$initializer$ DD FLAT:??__EShopC@@YAXXZ
CRT$XCU	ENDS
END
