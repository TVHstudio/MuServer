; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\TMonsterAIAgro.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	?Reset@TMonsterAIAgroInfo@@QAEXXZ		; TMonsterAIAgroInfo::Reset
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\tmonsteraiagro.h
;	COMDAT ?Reset@TMonsterAIAgroInfo@@QAEXXZ
_TEXT	SEGMENT
?Reset@TMonsterAIAgroInfo@@QAEXXZ PROC			; TMonsterAIAgroInfo::Reset, COMDAT
; _this$ = ecx

; 22   : 		this->m_iUserIndex = -1;

  00000	c7 01 ff ff ff
	ff		 mov	 DWORD PTR [ecx], -1

; 23   : 		this->m_iAgroValue = -1;

  00006	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 24   : 	}

  0000d	c3		 ret	 0
?Reset@TMonsterAIAgroInfo@@QAEXXZ ENDP			; TMonsterAIAgroInfo::Reset
_TEXT	ENDS
PUBLIC	?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ	; TMonsterAIAgroInfo::GetUserIndex
; Function compile flags: /Ogtp
;	COMDAT ?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ
_TEXT	SEGMENT
?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ PROC		; TMonsterAIAgroInfo::GetUserIndex, COMDAT
; _this$ = ecx

; 28   : 		return this->m_iUserIndex;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 29   : 	}

  00002	c3		 ret	 0
?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ ENDP		; TMonsterAIAgroInfo::GetUserIndex
_TEXT	ENDS
PUBLIC	?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ	; TMonsterAIAgroInfo::GetAgroValue
; Function compile flags: /Ogtp
;	COMDAT ?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ
_TEXT	SEGMENT
?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ PROC		; TMonsterAIAgroInfo::GetAgroValue, COMDAT
; _this$ = ecx

; 34   : 		return this->m_iAgroValue;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 35   : 	}

  00003	c3		 ret	 0
?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ ENDP		; TMonsterAIAgroInfo::GetAgroValue
_TEXT	ENDS
PUBLIC	?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z		; TMonsterAIAgroInfo::SetAgro
; Function compile flags: /Ogtp
;	COMDAT ?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iValue$ = 12						; size = 4
?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z PROC		; TMonsterAIAgroInfo::SetAgro, COMDAT
; _this$ = ecx

; 39   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 40   : 		this->m_iUserIndex = iTargetIndex;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iTargetIndex$[ebp]

; 41   : 		this->m_iAgroValue = iValue;

  00006	8b 55 0c	 mov	 edx, DWORD PTR _iValue$[ebp]
  00009	89 01		 mov	 DWORD PTR [ecx], eax
  0000b	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 42   : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z ENDP		; TMonsterAIAgroInfo::SetAgro
_TEXT	ENDS
PUBLIC	?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z		; TMonsterAIAgroInfo::IncAgro
; Function compile flags: /Ogtp
;	COMDAT ?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z
_TEXT	SEGMENT
_iIncValue$ = 8						; size = 4
?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z PROC		; TMonsterAIAgroInfo::IncAgro, COMDAT
; _this$ = ecx

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 		this->m_iAgroValue += iIncValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iIncValue$[ebp]
  00006	01 41 04	 add	 DWORD PTR [ecx+4], eax

; 48   : 		return this->m_iAgroValue;

  00009	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 49   : 	}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z ENDP		; TMonsterAIAgroInfo::IncAgro
_TEXT	ENDS
PUBLIC	?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z		; TMonsterAIAgroInfo::DecAgro
; Function compile flags: /Ogtp
;	COMDAT ?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z
_TEXT	SEGMENT
_iDecValue$ = 8						; size = 4
?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z PROC		; TMonsterAIAgroInfo::DecAgro, COMDAT
; _this$ = ecx

; 53   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 54   : 		this->m_iAgroValue -= iDecValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iDecValue$[ebp]
  00006	29 41 04	 sub	 DWORD PTR [ecx+4], eax

; 55   : 
; 56   : 		if ( this->m_iAgroValue < 0 )

  00009	79 07		 jns	 SHORT $LN4@DecAgro

; 57   : 			this->m_iAgroValue = 0;

  0000b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
$LN4@DecAgro:

; 58   : 
; 59   : 		return this->m_iAgroValue;

  00012	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 60   : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z ENDP		; TMonsterAIAgroInfo::DecAgro
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7TMonsterAIAgro@@6B@				; TMonsterAIAgro::`vftable'
PUBLIC	??1TMonsterAIAgro@@UAE@XZ			; TMonsterAIAgro::~TMonsterAIAgro
PUBLIC	??_R4TMonsterAIAgro@@6B@			; TMonsterAIAgro::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTMonsterAIAgro@@@8			; TMonsterAIAgro `RTTI Type Descriptor'
PUBLIC	??_R3TMonsterAIAgro@@8				; TMonsterAIAgro::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TMonsterAIAgro@@8				; TMonsterAIAgro::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TMonsterAIAgro@@8			; TMonsterAIAgro::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ETMonsterAIAgro@@UAEPAXI@Z:PROC		; TMonsterAIAgro::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TMonsterAIAgro@@8
; File e:\work\tranet_version\gs\gameserver\tmonsteraiagro.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@TMonsterAIAgro@@8 DD FLAT:??_R0?AVTMonsterAIAgro@@@8 ; TMonsterAIAgro::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TMonsterAIAgro@@8
rdata$r	ENDS
;	COMDAT ??_R2TMonsterAIAgro@@8
rdata$r	SEGMENT
??_R2TMonsterAIAgro@@8 DD FLAT:??_R1A@?0A@EA@TMonsterAIAgro@@8 ; TMonsterAIAgro::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TMonsterAIAgro@@8
rdata$r	SEGMENT
??_R3TMonsterAIAgro@@8 DD 00H				; TMonsterAIAgro::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TMonsterAIAgro@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTMonsterAIAgro@@@8
_DATA	SEGMENT
??_R0?AVTMonsterAIAgro@@@8 DD FLAT:??_7type_info@@6B@	; TMonsterAIAgro `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTMonsterAIAgro@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TMonsterAIAgro@@6B@
rdata$r	SEGMENT
??_R4TMonsterAIAgro@@6B@ DD 00H				; TMonsterAIAgro::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTMonsterAIAgro@@@8
	DD	FLAT:??_R3TMonsterAIAgro@@8
rdata$r	ENDS
;	COMDAT ??_7TMonsterAIAgro@@6B@
CONST	SEGMENT
??_7TMonsterAIAgro@@6B@ DD FLAT:??_R4TMonsterAIAgro@@6B@ ; TMonsterAIAgro::`vftable'
	DD	FLAT:??_ETMonsterAIAgro@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1TMonsterAIAgro@@UAE@XZ
_TEXT	SEGMENT
??1TMonsterAIAgro@@UAE@XZ PROC				; TMonsterAIAgro::~TMonsterAIAgro, COMDAT
; _this$ = ecx

; 18   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7TMonsterAIAgro@@6B@

; 19   : 	return;
; 20   : }

  00006	c3		 ret	 0
??1TMonsterAIAgro@@UAE@XZ ENDP				; TMonsterAIAgro::~TMonsterAIAgro
_TEXT	ENDS
PUBLIC	?ResetAll@TMonsterAIAgro@@QAEXXZ		; TMonsterAIAgro::ResetAll
; Function compile flags: /Ogtp
;	COMDAT ?ResetAll@TMonsterAIAgro@@QAEXXZ
_TEXT	SEGMENT
?ResetAll@TMonsterAIAgro@@QAEXXZ PROC			; TMonsterAIAgro::ResetAll, COMDAT
; _this$ = ecx

; 26   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00008	83 ca ff	 or	 edx, -1
  0000b	eb 03 8d 49 00	 npad	 5
$LL3@ResetAll:

; 27   : 	{
; 28   : 		this->m_Agro[i].Reset();

  00010	89 10		 mov	 DWORD PTR [eax], edx
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00015	83 c0 08	 add	 eax, 8
  00018	49		 dec	 ecx
  00019	75 f5		 jne	 SHORT $LL3@ResetAll

; 29   : 	}
; 30   : }

  0001b	c3		 ret	 0
?ResetAll@TMonsterAIAgro@@QAEXXZ ENDP			; TMonsterAIAgro::ResetAll
_TEXT	ENDS
PUBLIC	?SetAgro@TMonsterAIAgro@@QAEHHH@Z		; TMonsterAIAgro::SetAgro
; Function compile flags: /Ogtp
;	COMDAT ?SetAgro@TMonsterAIAgro@@QAEHHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iValue$ = 12						; size = 4
?SetAgro@TMonsterAIAgro@@QAEHHH@Z PROC			; TMonsterAIAgro::SetAgro, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 36   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00003	33 c0		 xor	 eax, eax
  00005	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
$LL4@SetAgro:

; 37   : 	{
; 38   : 		if ( this->m_Agro[i].GetUserIndex() == -1 )

  00008	83 3a ff	 cmp	 DWORD PTR [edx], -1
  0000b	74 0f		 je	 SHORT $LN12@SetAgro

; 36   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  0000d	40		 inc	 eax
  0000e	83 c2 08	 add	 edx, 8
  00011	83 f8 64	 cmp	 eax, 100		; 00000064H
  00014	7c f2		 jl	 SHORT $LL4@SetAgro

; 42   : 		}
; 43   : 	}
; 44   : 
; 45   : 	return FALSE;

  00016	33 c0		 xor	 eax, eax

; 46   : }

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN12@SetAgro:

; 39   : 		{
; 40   : 			this->m_Agro[i].SetAgro(iTargetIndex, iValue);

  0001c	8b 55 08	 mov	 edx, DWORD PTR _iTargetIndex$[ebp]
  0001f	89 54 c1 04	 mov	 DWORD PTR [ecx+eax*8+4], edx
  00023	8b 55 0c	 mov	 edx, DWORD PTR _iValue$[ebp]
  00026	89 54 c1 08	 mov	 DWORD PTR [ecx+eax*8+8], edx

; 41   : 			return TRUE;

  0002a	b8 01 00 00 00	 mov	 eax, 1

; 46   : }

  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?SetAgro@TMonsterAIAgro@@QAEHHH@Z ENDP			; TMonsterAIAgro::SetAgro
_TEXT	ENDS
PUBLIC	?DelAgro@TMonsterAIAgro@@QAEHH@Z		; TMonsterAIAgro::DelAgro
; Function compile flags: /Ogtp
;	COMDAT ?DelAgro@TMonsterAIAgro@@QAEHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
?DelAgro@TMonsterAIAgro@@QAEHH@Z PROC			; TMonsterAIAgro::DelAgro, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 51   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	33 c0		 xor	 eax, eax
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	8d 64 24 00	 npad	 4
$LL4@DelAgro:

; 52   : 	{
; 53   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex)

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 10		 je	 SHORT $LN12@DelAgro

; 51   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@DelAgro

; 57   : 		}
; 58   : 	}
; 59   : 
; 60   : 	return FALSE;

  0001d	33 c0		 xor	 eax, eax
  0001f	5e		 pop	 esi

; 61   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN12@DelAgro:

; 54   : 		{
; 55   : 			this->m_Agro[i].Reset();

  00024	83 ca ff	 or	 edx, -1
  00027	89 54 c1 04	 mov	 DWORD PTR [ecx+eax*8+4], edx
  0002b	89 54 c1 08	 mov	 DWORD PTR [ecx+eax*8+8], edx

; 56   : 			return TRUE;

  0002f	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  00032	5e		 pop	 esi

; 61   : }

  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?DelAgro@TMonsterAIAgro@@QAEHH@Z ENDP			; TMonsterAIAgro::DelAgro
_TEXT	ENDS
PUBLIC	?GetAgro@TMonsterAIAgro@@QAEHH@Z		; TMonsterAIAgro::GetAgro
; Function compile flags: /Ogtp
;	COMDAT ?GetAgro@TMonsterAIAgro@@QAEHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
?GetAgro@TMonsterAIAgro@@QAEHH@Z PROC			; TMonsterAIAgro::GetAgro, COMDAT
; _this$ = ecx

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 66   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	33 c0		 xor	 eax, eax
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	8d 64 24 00	 npad	 4
$LL4@GetAgro:

; 67   : 	{
; 68   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 11		 je	 SHORT $LN12@GetAgro

; 66   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@GetAgro

; 71   : 		}
; 72   : 	}
; 73   : 
; 74   : 	return -1;

  0001d	83 c8 ff	 or	 eax, -1
  00020	5e		 pop	 esi

; 75   : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN12@GetAgro:

; 69   : 		{
; 70   : 			return this->m_Agro[i].GetAgroValue();

  00025	8b 44 c1 08	 mov	 eax, DWORD PTR [ecx+eax*8+8]
  00029	5e		 pop	 esi

; 75   : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?GetAgro@TMonsterAIAgro@@QAEHH@Z ENDP			; TMonsterAIAgro::GetAgro
_TEXT	ENDS
PUBLIC	?IncAgro@TMonsterAIAgro@@QAEHHH@Z		; TMonsterAIAgro::IncAgro
; Function compile flags: /Ogtp
;	COMDAT ?IncAgro@TMonsterAIAgro@@QAEHHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iIncValue$ = 12					; size = 4
?IncAgro@TMonsterAIAgro@@QAEHHH@Z PROC			; TMonsterAIAgro::IncAgro, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 81   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	33 c0		 xor	 eax, eax
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	8d 64 24 00	 npad	 4
$LL4@IncAgro:

; 82   : 	{
; 83   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 11		 je	 SHORT $LN12@IncAgro

; 81   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@IncAgro

; 86   : 		}
; 87   : 	}
; 88   : 
; 89   : 	return -1;

  0001d	83 c8 ff	 or	 eax, -1
  00020	5e		 pop	 esi

; 90   : }

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
$LN12@IncAgro:

; 84   : 		{
; 85   : 			return this->m_Agro[i].IncAgro(iIncValue);

  00025	8d 44 c1 08	 lea	 eax, DWORD PTR [ecx+eax*8+8]
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _iIncValue$[ebp]
  0002c	01 08		 add	 DWORD PTR [eax], ecx
  0002e	8b 00		 mov	 eax, DWORD PTR [eax]
  00030	5e		 pop	 esi

; 90   : }

  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?IncAgro@TMonsterAIAgro@@QAEHHH@Z ENDP			; TMonsterAIAgro::IncAgro
_TEXT	ENDS
PUBLIC	?DecAgro@TMonsterAIAgro@@QAEHHH@Z		; TMonsterAIAgro::DecAgro
; Function compile flags: /Ogtp
;	COMDAT ?DecAgro@TMonsterAIAgro@@QAEHHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iDecValue$ = 12					; size = 4
?DecAgro@TMonsterAIAgro@@QAEHHH@Z PROC			; TMonsterAIAgro::DecAgro, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 95   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	33 c0		 xor	 eax, eax
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	8d 64 24 00	 npad	 4
$LL4@DecAgro@2:

; 96   : 	{
; 97   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 11		 je	 SHORT $LN13@DecAgro@2

; 95   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@DecAgro@2

; 100  : 		}
; 101  : 	}
; 102  : 
; 103  : 	return -1;

  0001d	83 c8 ff	 or	 eax, -1
  00020	5e		 pop	 esi

; 104  : }

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
$LN13@DecAgro@2:

; 98   : 		{
; 99   : 			return this->m_Agro[i].DecAgro(iDecValue);

  00025	8d 44 c1 08	 lea	 eax, DWORD PTR [ecx+eax*8+8]
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _iDecValue$[ebp]
  0002c	29 08		 sub	 DWORD PTR [eax], ecx
  0002e	79 06		 jns	 SHORT $LN9@DecAgro@2
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN9@DecAgro@2:
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	5e		 pop	 esi

; 104  : }

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?DecAgro@TMonsterAIAgro@@QAEHHH@Z ENDP			; TMonsterAIAgro::DecAgro
_TEXT	ENDS
PUBLIC	?DecAllAgro@TMonsterAIAgro@@QAEXH@Z		; TMonsterAIAgro::DecAllAgro
; Function compile flags: /Ogtp
;	COMDAT ?DecAllAgro@TMonsterAIAgro@@QAEXH@Z
_TEXT	SEGMENT
_iDecValue$ = 8						; size = 4
?DecAllAgro@TMonsterAIAgro@@QAEXH@Z PROC		; TMonsterAIAgro::DecAllAgro, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00003	8b 55 08	 mov	 edx, DWORD PTR _iDecValue$[ebp]
  00006	56		 push	 esi
  00007	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  0000a	57		 push	 edi
  0000b	83 c9 ff	 or	 ecx, -1
  0000e	bf 14 00 00 00	 mov	 edi, 20			; 00000014H
  00013	33 f6		 xor	 esi, esi
$LL5@DecAllAgro:

; 111  : 	{
; 112  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  00015	39 48 f4	 cmp	 DWORD PTR [eax-12], ecx
  00018	74 0a		 je	 SHORT $LN2@DecAllAgro

; 113  : 		{
; 114  : 			this->m_Agro[i].DecAgro(iDecValue);

  0001a	29 50 f8	 sub	 DWORD PTR [eax-8], edx
  0001d	79 0b		 jns	 SHORT $LN4@DecAllAgro
  0001f	89 70 f8	 mov	 DWORD PTR [eax-8], esi

; 115  : 		}
; 116  : 		else

  00022	eb 06		 jmp	 SHORT $LN4@DecAllAgro
$LN2@DecAllAgro:

; 117  : 		{
; 118  : 			this->m_Agro[i].Reset();

  00024	89 48 f4	 mov	 DWORD PTR [eax-12], ecx
  00027	89 48 f8	 mov	 DWORD PTR [eax-8], ecx
$LN4@DecAllAgro:

; 111  : 	{
; 112  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  0002a	39 48 fc	 cmp	 DWORD PTR [eax-4], ecx
  0002d	74 08		 je	 SHORT $LN19@DecAllAgro

; 113  : 		{
; 114  : 			this->m_Agro[i].DecAgro(iDecValue);

  0002f	29 10		 sub	 DWORD PTR [eax], edx
  00031	79 09		 jns	 SHORT $LN20@DecAllAgro
  00033	89 30		 mov	 DWORD PTR [eax], esi

; 115  : 		}
; 116  : 		else

  00035	eb 05		 jmp	 SHORT $LN20@DecAllAgro
$LN19@DecAllAgro:

; 117  : 		{
; 118  : 			this->m_Agro[i].Reset();

  00037	89 48 fc	 mov	 DWORD PTR [eax-4], ecx
  0003a	89 08		 mov	 DWORD PTR [eax], ecx
$LN20@DecAllAgro:

; 111  : 	{
; 112  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  0003c	39 48 04	 cmp	 DWORD PTR [eax+4], ecx
  0003f	74 0a		 je	 SHORT $LN22@DecAllAgro

; 113  : 		{
; 114  : 			this->m_Agro[i].DecAgro(iDecValue);

  00041	29 50 08	 sub	 DWORD PTR [eax+8], edx
  00044	79 0b		 jns	 SHORT $LN23@DecAllAgro
  00046	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 115  : 		}
; 116  : 		else

  00049	eb 06		 jmp	 SHORT $LN23@DecAllAgro
$LN22@DecAllAgro:

; 117  : 		{
; 118  : 			this->m_Agro[i].Reset();

  0004b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0004e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN23@DecAllAgro:

; 111  : 	{
; 112  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  00051	39 48 0c	 cmp	 DWORD PTR [eax+12], ecx
  00054	74 0a		 je	 SHORT $LN25@DecAllAgro

; 113  : 		{
; 114  : 			this->m_Agro[i].DecAgro(iDecValue);

  00056	29 50 10	 sub	 DWORD PTR [eax+16], edx
  00059	79 0b		 jns	 SHORT $LN26@DecAllAgro
  0005b	89 70 10	 mov	 DWORD PTR [eax+16], esi

; 115  : 		}
; 116  : 		else

  0005e	eb 06		 jmp	 SHORT $LN26@DecAllAgro
$LN25@DecAllAgro:

; 117  : 		{
; 118  : 			this->m_Agro[i].Reset();

  00060	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00063	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN26@DecAllAgro:

; 111  : 	{
; 112  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  00066	39 48 14	 cmp	 DWORD PTR [eax+20], ecx
  00069	74 0a		 je	 SHORT $LN28@DecAllAgro

; 113  : 		{
; 114  : 			this->m_Agro[i].DecAgro(iDecValue);

  0006b	29 50 18	 sub	 DWORD PTR [eax+24], edx
  0006e	79 0b		 jns	 SHORT $LN29@DecAllAgro
  00070	89 70 18	 mov	 DWORD PTR [eax+24], esi

; 115  : 		}
; 116  : 		else

  00073	eb 06		 jmp	 SHORT $LN29@DecAllAgro
$LN28@DecAllAgro:

; 117  : 		{
; 118  : 			this->m_Agro[i].Reset();

  00075	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00078	89 48 18	 mov	 DWORD PTR [eax+24], ecx
$LN29@DecAllAgro:

; 110  : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  0007b	83 c0 28	 add	 eax, 40			; 00000028H
  0007e	4f		 dec	 edi
  0007f	75 94		 jne	 SHORT $LL5@DecAllAgro
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi

; 119  : 		}
; 120  : 	}
; 121  : }

  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?DecAllAgro@TMonsterAIAgro@@QAEXH@Z ENDP		; TMonsterAIAgro::DecAllAgro
_TEXT	ENDS
PUBLIC	?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z	; TMonsterAIAgro::GetMaxAgroUserIndex
EXTRN	?GetAttr@MapClass@@QAEEHH@Z:PROC		; MapClass::GetAttr
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjIsConnected
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
;	COMDAT ?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z
_TEXT	SEGMENT
_iMaxAgroUserIndex$ = -8				; size = 4
tv179 = -4						; size = 4
_iMonsterIndex$ = 8					; size = 4
?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z PROC	; TMonsterAIAgro::GetMaxAgroUserIndex, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 128  : 	int iMaxAgroUserIndex = -1;

  00008	83 cb ff	 or	 ebx, -1
  0000b	57		 push	 edi
  0000c	89 5d f8	 mov	 DWORD PTR _iMaxAgroUserIndex$[ebp], ebx
  0000f	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00012	c7 45 fc 64 00
	00 00		 mov	 DWORD PTR tv179[ebp], 100 ; 00000064H
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL30@GetMaxAgro:

; 132  : 	{
; 133  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
  00022	83 ff ff	 cmp	 edi, -1
  00025	0f 84 a1 00 00
	00		 je	 $LN9@GetMaxAgro

; 134  : 		{
; 135  : 			LPOBJ lpObj = &gObj[this->m_Agro[i].GetUserIndex()];

  0002b	69 ff 50 2b 00
	00		 imul	 edi, 11088		; 00002b50H
  00031	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 136  : 
; 137  : 			if ( (lpObj->Authority&2) == 2 )

  00037	f6 87 0c 02 00
	00 02		 test	 BYTE PTR [edi+524], 2
  0003e	0f 85 88 00 00
	00		 jne	 $LN9@GetMaxAgro

; 138  : 				continue;
; 139  : 
; 140  : 			if ( !gObjIsConnected(lpObj) )

  00044	57		 push	 edi
  00045	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  0004a	83 c4 04	 add	 esp, 4
  0004d	85 c0		 test	 eax, eax
  0004f	75 0f		 jne	 SHORT $LN5@GetMaxAgro

; 141  : 			{
; 142  : 				this->m_Agro[i].Reset();

  00051	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
  00057	c7 46 04 ff ff
	ff ff		 mov	 DWORD PTR [esi+4], -1

; 143  : 				continue;

  0005e	eb 6c		 jmp	 SHORT $LN9@GetMaxAgro
$LN5@GetMaxAgro:

; 144  : 			}
; 145  : 
; 146  : 			if ( lpObj->Live == FALSE )

  00060	80 7f 6a 00	 cmp	 BYTE PTR [edi+106], 0
  00064	75 0f		 jne	 SHORT $LN4@GetMaxAgro

; 147  : 			{
; 148  : 				this->m_Agro[i].Reset();

  00066	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
  0006c	c7 46 04 ff ff
	ff ff		 mov	 DWORD PTR [esi+4], -1

; 149  : 				continue;

  00073	eb 57		 jmp	 SHORT $LN9@GetMaxAgro
$LN4@GetMaxAgro:

; 150  : 			}
; 151  : 
; 152  : 			if ( gObjCalDistance(&gObj[iMonsterIndex], lpObj) > 7 )

  00075	8b 45 08	 mov	 eax, DWORD PTR _iMonsterIndex$[ebp]
  00078	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0007e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00084	57		 push	 edi
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0008b	83 c4 08	 add	 esp, 8
  0008e	83 f8 07	 cmp	 eax, 7
  00091	7f 39		 jg	 SHORT $LN9@GetMaxAgro

; 153  : 				continue;
; 154  : 
; 155  : 			BYTE btAttr = MapC[lpObj->MapNumber].GetAttr(lpObj->X, lpObj->Y);
; 156  : 
; 157  : 			if ( (btAttr&1) != 0 )

  00093	0f bf 8f 46 01
	00 00		 movsx	 ecx, WORD PTR [edi+326]
  0009a	0f bf 97 44 01
	00 00		 movsx	 edx, WORD PTR [edi+324]
  000a1	51		 push	 ecx
  000a2	0f b6 8f 49 01
	00 00		 movzx	 ecx, BYTE PTR [edi+329]
  000a9	69 c9 48 3d 05
	00		 imul	 ecx, 343368		; 00053d48H
  000af	52		 push	 edx
  000b0	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  000b6	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr
  000bb	a8 01		 test	 al, 1
  000bd	75 0d		 jne	 SHORT $LN9@GetMaxAgro

; 158  : 				continue;
; 159  : 
; 160  : 			if ( this->m_Agro[i].GetAgroValue() > iMaxAgro )

  000bf	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  000c2	7e 08		 jle	 SHORT $LN9@GetMaxAgro

; 161  : 			{
; 162  : 				iMaxAgroUserIndex =	this->m_Agro[i].GetUserIndex();

  000c4	8b 06		 mov	 eax, DWORD PTR [esi]

; 163  : 				iMaxAgro = this->m_Agro[i].GetAgroValue();

  000c6	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  000c9	89 45 f8	 mov	 DWORD PTR _iMaxAgroUserIndex$[ebp], eax
$LN9@GetMaxAgro:

; 129  : 	int iMaxAgro = -1;
; 130  : 
; 131  : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  000cc	83 c6 08	 add	 esi, 8
  000cf	ff 4d fc	 dec	 DWORD PTR tv179[ebp]
  000d2	0f 85 48 ff ff
	ff		 jne	 $LL30@GetMaxAgro

; 164  : 			}
; 165  : 		}
; 166  : 	}
; 167  : 
; 168  : 	return iMaxAgroUserIndex;

  000d8	8b 45 f8	 mov	 eax, DWORD PTR _iMaxAgroUserIndex$[ebp]
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx

; 169  : }

  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z ENDP	; TMonsterAIAgro::GetMaxAgroUserIndex
_TEXT	ENDS
PUBLIC	??0TMonsterAIAgroInfo@@QAE@XZ			; TMonsterAIAgroInfo::TMonsterAIAgroInfo
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\tmonsteraiagro.h
;	COMDAT ??0TMonsterAIAgroInfo@@QAE@XZ
_TEXT	SEGMENT
??0TMonsterAIAgroInfo@@QAE@XZ PROC			; TMonsterAIAgroInfo::TMonsterAIAgroInfo, COMDAT
; _this$ = ecx

; 16   : 	TMonsterAIAgroInfo()

  00000	8b c1		 mov	 eax, ecx

; 17   : 	{
; 18   : 		this->Reset();

  00002	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  00008	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1

; 19   : 	}

  0000f	c3		 ret	 0
??0TMonsterAIAgroInfo@@QAE@XZ ENDP			; TMonsterAIAgroInfo::TMonsterAIAgroInfo
_TEXT	ENDS
PUBLIC	??0TMonsterAIAgro@@QAE@XZ			; TMonsterAIAgro::TMonsterAIAgro
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\tmonsteraiagro.cpp
;	COMDAT ??0TMonsterAIAgro@@QAE@XZ
_TEXT	SEGMENT
??0TMonsterAIAgro@@QAE@XZ PROC				; TMonsterAIAgro::TMonsterAIAgro, COMDAT
; _this$ = ecx

; 13   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TMonsterAIAgro@@6B@
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0000c	b9 63 00 00 00	 mov	 ecx, 99			; 00000063H
  00011	83 ca ff	 or	 edx, -1
$LL4@TMonsterAI:
  00014	89 10		 mov	 DWORD PTR [eax], edx
  00016	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00019	83 c0 08	 add	 eax, 8
  0001c	49		 dec	 ecx
  0001d	79 f5		 jns	 SHORT $LL4@TMonsterAI

; 14   : 	this->ResetAll();

  0001f	8b ce		 mov	 ecx, esi
  00021	e8 00 00 00 00	 call	 ?ResetAll@TMonsterAIAgro@@QAEXXZ ; TMonsterAIAgro::ResetAll

; 15   : }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??0TMonsterAIAgro@@QAE@XZ ENDP				; TMonsterAIAgro::TMonsterAIAgro
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GTMonsterAIAgro@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GTMonsterAIAgro@@UAEPAXI@Z PROC			; TMonsterAIAgro::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GTMonsterAIAgro@@UAEPAXI@Z ENDP			; TMonsterAIAgro::`scalar deleting destructor'
_TEXT	ENDS
END
