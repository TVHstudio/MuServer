; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\TNotice.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?_ARGB@@YAKEEEE@Z				; _ARGB
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\tnotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  00007	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  0000b	0f b6 55 10	 movzx	 edx, BYTE PTR _g$[ebp]
  0000f	c1 e0 08	 shl	 eax, 8
  00012	03 c1		 add	 eax, ecx
  00014	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  00018	c1 e0 08	 shl	 eax, 8
  0001b	03 c2		 add	 eax, edx
  0001d	c1 e0 08	 shl	 eax, 8
  00020	03 c1		 add	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
PUBLIC	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z		; TNotice::MakeNoticeMsg
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	__imp__wsprintfA:PROC
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\tnotice.cpp
;	COMDAT ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_szNoticeMsg$ = 16					; size = 4
?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z PROC		; TNotice::MakeNoticeMsg, COMDAT

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 11   : 	pNotice->type  = btType;
; 12   : 
; 13   : 	wsprintf(pNotice->Notice, szNoticeMsg);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _szNoticeMsg$[ebp]
  00006	8a 45 0c	 mov	 al, BYTE PTR _btType$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _lpNotice$[ebp]
  0000e	51		 push	 ecx
  0000f	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
  00012	56		 push	 esi
  00013	88 47 03	 mov	 BYTE PTR [edi+3], al
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 14   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, strlen(pNotice->Notice) + sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + 1 );

  0001c	8b c6		 mov	 eax, esi
  0001e	83 c4 08	 add	 esp, 8
  00021	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL3@MakeNotice:
  00024	8a 08		 mov	 cl, BYTE PTR [eax]
  00026	40		 inc	 eax
  00027	84 c9		 test	 cl, cl
  00029	75 f9		 jne	 SHORT $LL3@MakeNotice
  0002b	2b c2		 sub	 eax, edx
  0002d	83 c0 11	 add	 eax, 17			; 00000011H
  00030	50		 push	 eax
  00031	6a 0d		 push	 13			; 0000000dH
  00033	57		 push	 edi
  00034	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi

; 15   : }

  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ENDP		; TNotice::MakeNoticeMsg
_TEXT	ENDS
PUBLIC	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ		; TNotice::MakeNoticeMsgEx
EXTRN	_vsprintf:PROC
; Function compile flags: /Ogtp
;	COMDAT ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_szNoticeMsg$ = 16					; size = 4
?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ PROC		; TNotice::MakeNoticeMsgEx, COMDAT

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 19   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 20   : 	pNotice->type = btType;
; 21   : 
; 22   : 	va_list pArguments;
; 23   : 	va_start(pArguments, szNoticeMsg);
; 24   : 	vsprintf((char*)pNotice->Notice, (char*)szNoticeMsg, pArguments);

  00003	8b 55 10	 mov	 edx, DWORD PTR _szNoticeMsg$[ebp]
  00006	8a 45 0c	 mov	 al, BYTE PTR _btType$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _lpNotice$[ebp]
  0000e	8d 4d 14	 lea	 ecx, DWORD PTR _szNoticeMsg$[ebp+4]
  00011	51		 push	 ecx
  00012	52		 push	 edx
  00013	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
  00016	56		 push	 esi
  00017	88 47 03	 mov	 BYTE PTR [edi+3], al
  0001a	e8 00 00 00 00	 call	 _vsprintf

; 25   : 	va_end(pArguments);
; 26   : 
; 27   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, strlen(pNotice->Notice)  + sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + 1);

  0001f	8b c6		 mov	 eax, esi
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL3@MakeNotice@2:
  00027	8a 08		 mov	 cl, BYTE PTR [eax]
  00029	40		 inc	 eax
  0002a	84 c9		 test	 cl, cl
  0002c	75 f9		 jne	 SHORT $LL3@MakeNotice@2
  0002e	2b c2		 sub	 eax, edx
  00030	83 c0 11	 add	 eax, 17			; 00000011H
  00033	50		 push	 eax
  00034	6a 0d		 push	 13			; 0000000dH
  00036	57		 push	 edi
  00037	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi

; 28   : }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ENDP		; TNotice::MakeNoticeMsgEx
_TEXT	ENDS
PUBLIC	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z	; TNotice::SetNoticeProperty
; Function compile flags: /Ogtp
;	COMDAT ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_dwColor$ = 16						; size = 4
_btCount$ = 20						; size = 1
_wDelay$ = 24						; size = 2
_btSpeed$ = 28						; size = 1
?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z PROC		; TNotice::SetNoticeProperty, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   : 	PMSG_NOTICE * pNotice =(PMSG_NOTICE *) lpNotice;
; 33   : 
; 34   : 	pNotice->type = btType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  00006	8a 4d 0c	 mov	 cl, BYTE PTR _btType$[ebp]

; 35   : 	pNotice->dwColor = dwColor;

  00009	8b 55 10	 mov	 edx, DWORD PTR _dwColor$[ebp]
  0000c	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 36   : 	pNotice->btCount = btCount;

  0000f	8a 4d 14	 mov	 cl, BYTE PTR _btCount$[ebp]
  00012	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 37   : 	pNotice->wDelay = wDelay;

  00015	66 8b 55 18	 mov	 dx, WORD PTR _wDelay$[ebp]
  00019	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 38   : 	pNotice->btSpeed = btSpeed;

  0001c	8a 4d 1c	 mov	 cl, BYTE PTR _btSpeed$[ebp]
  0001f	66 89 50 06	 mov	 WORD PTR [eax+6], dx
  00023	88 48 0c	 mov	 BYTE PTR [eax+12], cl

; 39   : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ENDP		; TNotice::SetNoticeProperty
_TEXT	ENDS
PUBLIC	?SendNoticeToAllUser@TNotice@@SAXPAX@Z		; TNotice::SendNoticeToAllUser
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
;	COMDAT ?SendNoticeToAllUser@TNotice@@SAXPAX@Z
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
?SendNoticeToAllUser@TNotice@@SAXPAX@Z PROC		; TNotice::SendNoticeToAllUser, COMDAT

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 43   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 44   : 
; 45   : 	for ( int n = OBJ_STARTUSERINDZT ; n < OBJMAX ; n++)

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00008	53		 push	 ebx
  00009	8b 5d 08	 mov	 ebx, DWORD PTR _lpNotice$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00013	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
$LL5@SendNotice:

; 46   : 	{
; 47   : 		if ( gObj[n].Connected == PLAYER_PLAYING )

  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 1c		 jne	 SHORT $LN4@SendNotice

; 48   : 		{
; 49   : 			if ( gObj[n].Type  == OBJ_USER )

  0001f	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  00025	75 14		 jne	 SHORT $LN4@SendNotice

; 50   : 			{
; 51   : 				DataSend(n, (LPBYTE)pNotice  , pNotice->h.size  );

  00027	0f b6 43 01	 movzx	 eax, BYTE PTR [ebx+1]
  0002b	50		 push	 eax
  0002c	53		 push	 ebx
  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@SendNotice:

; 43   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 44   : 
; 45   : 	for ( int n = OBJ_STARTUSERINDZT ; n < OBJMAX ; n++)

  0003b	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00041	47		 inc	 edi
  00042	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00048	7c ce		 jl	 SHORT $LL5@SendNotice
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 52   : 			}
; 53   : 		}
; 54   : 	}
; 55   : }

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?SendNoticeToAllUser@TNotice@@SAXPAX@Z ENDP		; TNotice::SendNoticeToAllUser
_TEXT	ENDS
PUBLIC	?SendNoticeToUser@TNotice@@SAXHPAX@Z		; TNotice::SendNoticeToUser
; Function compile flags: /Ogtp
;	COMDAT ?SendNoticeToUser@TNotice@@SAXHPAX@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_lpNotice$ = 12						; size = 4
?SendNoticeToUser@TNotice@@SAXHPAX@Z PROC		; TNotice::SendNoticeToUser, COMDAT

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 59   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 60   : 	DataSend(aIndex, (LPBYTE)pNotice, pNotice->h.size  );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  00006	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0000a	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0000d	51		 push	 ecx
  0000e	50		 push	 eax
  0000f	52		 push	 edx
  00010	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 61   : }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?SendNoticeToUser@TNotice@@SAXHPAX@Z ENDP		; TNotice::SendNoticeToUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?AllSendServerMsg@TNotice@@SAXPAD@Z		; TNotice::AllSendServerMsg
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?AllSendServerMsg@TNotice@@SAXPAD@Z
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_chatmsg$ = 8						; size = 4
?AllSendServerMsg@TNotice@@SAXPAD@Z PROC		; TNotice::AllSendServerMsg, COMDAT

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _chatmsg$[ebp]
  00016	56		 push	 esi
  00017	57		 push	 edi

; 65   : 	PMSG_NOTICE pNotice;
; 66   : 	
; 67   : 	MakeNoticeMsg((TNotice *)&pNotice, 0,  chatmsg);

  00018	50		 push	 eax
  00019	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  0001f	6a 00		 push	 0
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 70   : 	{
; 71   : 		if ( gObj[n].Connected == PLAYER_PLAYING )

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00034	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00039	8d a4 24 00 00
	00 00		 npad	 7
$LL5@AllSendSer:
  00040	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  00045	75 25		 jne	 SHORT $LN4@AllSendSer

; 72   : 		{
; 73   : 			if ( gObj[n].Type  == OBJ_USER )

  00047	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  0004d	75 1d		 jne	 SHORT $LN4@AllSendSer

; 74   : 			{
; 75   : 				DataSend(n, (LPBYTE)&pNotice , pNotice.h.size );

  0004f	0f b6 8d ed fe
	ff ff		 movzx	 ecx, BYTE PTR _pNotice$[ebp+1]
  00056	51		 push	 ecx
  00057	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  0005d	52		 push	 edx
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@AllSendSer:

; 68   : 
; 69   : 	for ( int n = OBJ_STARTUSERINDZT ; n < OBJMAX ; n++)

  0006c	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00072	47		 inc	 edi
  00073	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00079	7c c5		 jl	 SHORT $LL5@AllSendSer

; 76   : 			}
; 77   : 		}
; 78   : 	}
; 79   : }

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007e	5f		 pop	 edi
  0007f	33 cd		 xor	 ecx, ebp
  00081	5e		 pop	 esi
  00082	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
?AllSendServerMsg@TNotice@@SAXPAD@Z ENDP		; TNotice::AllSendServerMsg
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCServerMsgStringSend@TNotice@@SAXPADHE@Z	; TNotice::GCServerMsgStringSend
; Function compile flags: /Ogtp
;	COMDAT ?GCServerMsgStringSend@TNotice@@SAXPADHE@Z
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_szMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
_type$ = 16						; size = 1
?GCServerMsgStringSend@TNotice@@SAXPADHE@Z PROC		; TNotice::GCServerMsgStringSend, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _szMsg$[ebp]

; 83   : 	PMSG_NOTICE pNotice;
; 84   : 	
; 85   : 	MakeNoticeMsg(&pNotice, type, szMsg);

  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	50		 push	 eax
  0001b	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 86   : 	DataSend(aIndex, (LPBYTE)&pNotice, pNotice.h.size);

  00027	0f b6 95 ed fe
	ff ff		 movzx	 edx, BYTE PTR _pNotice$[ebp+1]
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00031	52		 push	 edx
  00032	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00038	50		 push	 eax
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 87   : }

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	83 c4 18	 add	 esp, 24			; 00000018H
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?GCServerMsgStringSend@TNotice@@SAXPADHE@Z ENDP		; TNotice::GCServerMsgStringSend
_TEXT	ENDS
PUBLIC	??0TNotice@@QAE@E@Z				; TNotice::TNotice
; Function compile flags: /Ogtp
;	COMDAT ??0TNotice@@QAE@E@Z
_TEXT	SEGMENT
_btType$ = 8						; size = 1
??0TNotice@@QAE@E@Z PROC				; TNotice::TNotice, COMDAT
; _this$ = ecx

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   : 	this->m_Notice.btCount = 1;
; 92   : 	this->m_Notice.btSpeed = 20;
; 93   : 	this->m_Notice.dwColor = _ARGB(255, 255, 200, 80 );
; 94   : 	this->m_Notice.wDelay = 0;
; 95   : 	this->m_Notice.type = btType;

  00003	8a 55 08	 mov	 dl, BYTE PTR _btType$[ebp]
  00006	8b c1		 mov	 eax, ecx
  00008	33 c9		 xor	 ecx, ecx
  0000a	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  0000e	c6 40 0c 14	 mov	 BYTE PTR [eax+12], 20	; 00000014H
  00012	c7 40 08 ff c8
	50 ff		 mov	 DWORD PTR [eax+8], -11482881 ; ff50c8ffH
  00019	66 89 48 06	 mov	 WORD PTR [eax+6], cx
  0001d	88 50 03	 mov	 BYTE PTR [eax+3], dl

; 96   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0TNotice@@QAE@E@Z ENDP				; TNotice::TNotice
_TEXT	ENDS
PUBLIC	?SendToAllUser@TNotice@@QAAXPADZZ		; TNotice::SendToAllUser
; Function compile flags: /Ogtp
;	COMDAT ?SendToAllUser@TNotice@@QAAXPADZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szMsg$ = 12						; size = 4
?SendToAllUser@TNotice@@QAAXPADZZ PROC			; TNotice::SendToAllUser, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	va_list pArguments;
; 101  : 	va_start(pArguments, szMsg);
; 102  : 	vsprintf(this->m_Notice.Notice, (char*)szMsg, pArguments);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _szMsg$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _this$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 45 10	 lea	 eax, DWORD PTR _szMsg$[ebp+4]
  0000f	50		 push	 eax
  00010	51		 push	 ecx
  00011	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 _vsprintf

; 103  : 	va_end(pArguments);
; 104  : 
; 105  : 	PHeadSetB((LPBYTE)&this->m_Notice, 0x0D, strlen(this->m_Notice.Notice)  + sizeof(PMSG_NOTICE) - sizeof(this->m_Notice.Notice) + 1);

  0001a	8b c6		 mov	 eax, esi
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL10@SendToAllU:
  00022	8a 08		 mov	 cl, BYTE PTR [eax]
  00024	40		 inc	 eax
  00025	84 c9		 test	 cl, cl
  00027	75 f9		 jne	 SHORT $LL10@SendToAllU
  00029	2b c2		 sub	 eax, edx
  0002b	83 c0 11	 add	 eax, 17			; 00000011H
  0002e	50		 push	 eax
  0002f	6a 0d		 push	 13			; 0000000dH
  00031	53		 push	 ebx
  00032	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 
; 107  : 	for ( int n = OBJ_STARTUSERINDZT ; n < OBJMAX ; n++)

  0003f	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00044	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00049	8d a4 24 00 00
	00 00		 npad	 7
$LL5@SendToAllU:

; 108  : 	{
; 109  : 		if ( gObj[n].Connected == PLAYER_PLAYING )

  00050	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  00055	75 1c		 jne	 SHORT $LN4@SendToAllU

; 110  : 		{
; 111  : 			if ( gObj[n].Type  == OBJ_USER )

  00057	66 83 7c 06 68
	01		 cmp	 WORD PTR [esi+eax+104], 1
  0005d	75 14		 jne	 SHORT $LN4@SendToAllU

; 112  : 			{
; 113  : 				DataSend(n, (LPBYTE)&this->m_Notice , this->m_Notice.h.size );

  0005f	0f b6 53 01	 movzx	 edx, BYTE PTR [ebx+1]
  00063	52		 push	 edx
  00064	53		 push	 ebx
  00065	57		 push	 edi
  00066	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@SendToAllU:

; 106  : 
; 107  : 	for ( int n = OBJ_STARTUSERINDZT ; n < OBJMAX ; n++)

  00073	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00079	47		 inc	 edi
  0007a	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00080	7c ce		 jl	 SHORT $LL5@SendToAllU
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx

; 114  : 			}
; 115  : 		}
; 116  : 	}
; 117  : }

  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?SendToAllUser@TNotice@@QAAXPADZZ ENDP			; TNotice::SendToAllUser
_TEXT	ENDS
PUBLIC	?SendToUser@TNotice@@QAAXHPADZZ			; TNotice::SendToUser
; Function compile flags: /Ogtp
;	COMDAT ?SendToUser@TNotice@@QAAXHPADZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_aIndex$ = 12						; size = 4
_szMsg$ = 16						; size = 4
?SendToUser@TNotice@@QAAXHPADZZ PROC			; TNotice::SendToUser, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 121  : 	va_list pArguments;
; 122  : 	va_start(pArguments, szMsg);
; 123  : 
; 124  : 	vsprintf(this->m_Notice.Notice, (char*)szMsg, pArguments);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _szMsg$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _this$[ebp]
  0000a	57		 push	 edi
  0000b	8d 45 14	 lea	 eax, DWORD PTR _szMsg$[ebp+4]
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	8d 7e 0d	 lea	 edi, DWORD PTR [esi+13]
  00013	57		 push	 edi
  00014	e8 00 00 00 00	 call	 _vsprintf

; 125  : 	va_end(pArguments);
; 126  : 
; 127  : 	PHeadSetB((LPBYTE)&this->m_Notice, 0x0D, strlen(this->m_Notice.Notice)  + sizeof(PMSG_NOTICE) - sizeof(this->m_Notice.Notice) + 1);

  00019	8b c7		 mov	 eax, edi
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001e	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL3@SendToUser:
  00021	8a 08		 mov	 cl, BYTE PTR [eax]
  00023	40		 inc	 eax
  00024	84 c9		 test	 cl, cl
  00026	75 f9		 jne	 SHORT $LL3@SendToUser
  00028	2b c2		 sub	 eax, edx
  0002a	83 c0 11	 add	 eax, 17			; 00000011H
  0002d	50		 push	 eax
  0002e	6a 0d		 push	 13			; 0000000dH
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 128  : 	DataSend(aIndex, (LPBYTE)&this->m_Notice , this->m_Notice.h.size );

  00036	0f b6 56 01	 movzx	 edx, BYTE PTR [esi+1]
  0003a	8b 45 0c	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0003d	52		 push	 edx
  0003e	56		 push	 esi
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi

; 129  : 
; 130  : }

  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?SendToUser@TNotice@@QAAXHPADZZ ENDP			; TNotice::SendToUser
_TEXT	ENDS
END
