; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\TeamVsTeam.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_g_sttBLOODCASTLE_LEVEL DD 0fH
	DD	050H
	DD	0aH
	DD	03cH
	DD	051H
	DD	082H
	DD	03dH
	DD	06eH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	014bH
	DD	03e8H
	DD	0137H
	DD	03e8H
	DD	0fH
	DD	04afH
	DD	0aH
	DD	04afH
_DATA	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 106  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 107  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 108  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	?set@PWMSG_HEAD2@@QAEXPAEEEH@Z			; PWMSG_HEAD2::set
; Function compile flags: /Ogtp
;	COMDAT ?set@PWMSG_HEAD2@@QAEXPAEEEH@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 4
?set@PWMSG_HEAD2@@QAEXPAEEEH@Z PROC			; PWMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 149  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 150  : 		lpBuf[0] = 0xC2;
; 151  : 		lpBuf[1] = SET_NUMBERH(size);

  00003	8b 4d 14	 mov	 ecx, DWORD PTR _size$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00009	8b d1		 mov	 edx, ecx
  0000b	c1 ea 08	 shr	 edx, 8
  0000e	88 50 01	 mov	 BYTE PTR [eax+1], dl

; 152  : 		lpBuf[2] = SET_NUMBERL(size);
; 153  : 		lpBuf[3] = head;
; 154  : 		lpBuf[4] = sub;

  00011	8a 55 10	 mov	 dl, BYTE PTR _sub$[ebp]
  00014	88 48 02	 mov	 BYTE PTR [eax+2], cl
  00017	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  0001a	c6 00 c2	 mov	 BYTE PTR [eax], 194	; 000000c2H
  0001d	88 48 03	 mov	 BYTE PTR [eax+3], cl
  00020	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 155  : 	}

  00023	5d		 pop	 ebp
  00024	c2 10 00	 ret	 16			; 00000010H
?set@PWMSG_HEAD2@@QAEXPAEEEH@Z ENDP			; PWMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b 7d 10	 mov	 edi, DWORD PTR ___n$[ebp]
  00007	4f		 dec	 edi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b ce		 mov	 ecx, esi
  00014	ff d3		 call	 ebx
  00016	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00019	4f		 dec	 edi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5f		 pop	 edi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??1CTeamVsTeam@@QAE@XZ				; CTeamVsTeam::~CTeamVsTeam
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\teamvsteam.cpp
;	COMDAT ??1CTeamVsTeam@@QAE@XZ
_TEXT	SEGMENT
??1CTeamVsTeam@@QAE@XZ PROC				; CTeamVsTeam::~CTeamVsTeam, COMDAT
; _this$ = ecx

; 25   : }

  00000	c3		 ret	 0
??1CTeamVsTeam@@QAE@XZ ENDP				; CTeamVsTeam::~CTeamVsTeam
_TEXT	ENDS
PUBLIC	?Init@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
?Init@CTeamVsTeam@@QAEXXZ PROC				; CTeamVsTeam::Init, COMDAT
; _this$ = ecx

; 29   : 	this->m_Enable				= false;

  00000	33 c0		 xor	 eax, eax
  00002	88 01		 mov	 BYTE PTR [ecx], al

; 30   : 	this->m_EventStartDay		= -1;

  00004	c7 41 2c ff ff
	ff ff		 mov	 DWORD PTR [ecx+44], -1

; 31   : 	this->m_EventStartHour		= 0;

  0000b	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 32   : 	this->m_EventeStartMin		= 0;

  0000e	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 33   : 	this->m_EventDurationTime	= 0;

  00011	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 34   : 	this->m_EventStatus			= eEVENT_TEAMVSTEAM_CLOSE;

  00014	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 35   : 	this->m_TeamScore1			= 0;

  00017	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 36   : 	this->m_TeamScore2			= 0;

  0001a	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 37   : 	this->m_TickCount			= 0;

  0001d	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 38   : 	this->m_TickRemain			= 0;

  00020	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 39   : 	this->m_TickWait			= 0;

  00023	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 40   : 	this->m_NpcClass			= 0;

  00026	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 41   : 	this->m_NpcMap				= 0;

  00029	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 42   : 	this->m_NpcX				= 0;

  0002c	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 43   : 	this->m_NpcY				= 0;

  0002f	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 44   : 	this->m_RewardBonusEnable	= false;

  00032	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 45   : 	this->m_RewardBonusCount    = 0;

  00035	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 46   : 	this->m_RewardItemEnable	= false;

  00038	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 47   : 	this->m_RewardItemType		= 0;

  0003b	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 48   : 	this->m_RewardItemIndex		= 0;

  0003e	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 49   : 	this->m_RewardItemLevel		= 0;

  00041	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 50   : 	this->m_MinReset            = 0;

  00044	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 51   : 	#if(NEW_UPDATE_1019)
; 52   : 	this->m_EventX				= 72;

  00047	c7 41 60 48 00
	00 00		 mov	 DWORD PTR [ecx+96], 72	; 00000048H

; 53   : 	this->m_EventY				= 46;

  0004e	c7 41 64 2e 00
	00 00		 mov	 DWORD PTR [ecx+100], 46	; 0000002eH

; 54   : 	this->m_TeamX1				= 36;

  00055	c7 41 68 24 00
	00 00		 mov	 DWORD PTR [ecx+104], 36	; 00000024H

; 55   : 	this->m_TeamY1				= 28;

  0005c	c7 41 6c 1c 00
	00 00		 mov	 DWORD PTR [ecx+108], 28	; 0000001cH

; 56   : 	this->m_TeamX2				= 93;

  00063	c7 41 70 5d 00
	00 00		 mov	 DWORD PTR [ecx+112], 93	; 0000005dH

; 57   : 	this->m_TeamY2				= 80;

  0006a	c7 41 74 50 00
	00 00		 mov	 DWORD PTR [ecx+116], 80	; 00000050H

; 58   : 	#endif
; 59   : }

  00071	c3		 ret	 0
?Init@CTeamVsTeam@@QAEXXZ ENDP				; CTeamVsTeam::Init
_TEXT	ENDS
PUBLIC	?CheckStatus@CTeamVsTeam@@QAE_NH@Z		; CTeamVsTeam::CheckStatus
; Function compile flags: /Ogtp
;	COMDAT ?CheckStatus@CTeamVsTeam@@QAE_NH@Z
_TEXT	SEGMENT
_Status$ = 8						; size = 4
?CheckStatus@CTeamVsTeam@@QAE_NH@Z PROC			; CTeamVsTeam::CheckStatus, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 260  : 	if(this->m_EventStatus == Status)

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	3b 45 08	 cmp	 eax, DWORD PTR _Status$[ebp]
  00009	0f 94 c0	 sete	 al

; 261  : 	{
; 262  : 		return true;
; 263  : 	}
; 264  : 
; 265  : 	return false;
; 266  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?CheckStatus@CTeamVsTeam@@QAE_NH@Z ENDP			; CTeamVsTeam::CheckStatus
_TEXT	ENDS
PUBLIC	?StatusWait@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::StatusWait
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Ogtp
;	COMDAT ?StatusWait@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
?StatusWait@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::StatusWait, COMDAT
; _this$ = ecx

; 323  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 324  : 	this->m_TickCount = GetTickCount();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 325  : 	this->m_TickRemain = (60000 * TEAMVSTEAM_WAIT);

  0000c	c7 46 14 e0 93
	04 00		 mov	 DWORD PTR [esi+20], 300000 ; 000493e0H
  00013	5e		 pop	 esi

; 326  : }

  00014	c3		 ret	 0
?StatusWait@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::StatusWait
_TEXT	ENDS
PUBLIC	?DivTeam@CTeamVsTeam@@QAEHXZ			; CTeamVsTeam::DivTeam
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
;	COMDAT ?DivTeam@CTeamVsTeam@@QAEHXZ
_TEXT	SEGMENT
_iCountPlayer$ = -4					; size = 4
?DivTeam@CTeamVsTeam@@QAEHXZ PROC			; CTeamVsTeam::DivTeam, COMDAT
; _this$ = ecx

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 408  : 	int iTeam = eEVENT_TVT_TEAM_1;

  00006	b8 01 00 00 00	 mov	 eax, 1

; 409  : 	int iCountPlayer = 0;

  0000b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iCountPlayer$[ebp], 0
  00012	57		 push	 edi
$LL12@DivTeam:

; 410  : 
; 411  : 	while(true)
; 412  : 	{
; 413  : 		int aIndex = -1;

  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00019	83 cb ff	 or	 ebx, -1

; 414  : 		int iMaxReset = 0;

  0001c	33 d2		 xor	 edx, edx
  0001e	be b2 36 00 00	 mov	 esi, 14002		; 000036b2H
  00023	81 c1 64 fb 40
	09		 add	 ecx, 155253604		; 0940fb64H
  00029	8d a4 24 00 00
	00 00		 npad	 7
$LL26@DivTeam:

; 417  : 		{
; 418  : 			LPOBJ lpUser = &gObj[i];
; 419  : 
; 420  : 			if(lpUser->Connected < PLAYER_PLAYING)

  00030	83 b9 a0 ab ff
	ff 03		 cmp	 DWORD PTR [ecx-21600], 3
  00037	7c 21		 jl	 SHORT $LN9@DivTeam

; 421  : 			{
; 422  : 				continue;
; 423  : 			}
; 424  : 
; 425  : 			if(lpUser->m_TvTTeam != 0 || lpUser->MapNumber != TEAMVSTEAM_MAP)

  00039	83 b9 b0 d4 ff
	ff 00		 cmp	 DWORD PTR [ecx-11088], 0
  00040	75 18		 jne	 SHORT $LN9@DivTeam
  00042	80 b9 e5 ac ff
	ff 52		 cmp	 BYTE PTR [ecx-21275], 82 ; 00000052H
  00049	75 0f		 jne	 SHORT $LN9@DivTeam

; 426  : 			{
; 427  : 				continue;
; 428  : 			}
; 429  : 
; 430  : 			if(lpUser->Reset >= iMaxReset)

  0004b	8b b9 2c ce ff
	ff		 mov	 edi, DWORD PTR [ecx-12756]
  00051	3b fa		 cmp	 edi, edx
  00053	7c 05		 jl	 SHORT $LN9@DivTeam

; 431  : 			{
; 432  : 				iMaxReset = lpUser->Reset;

  00055	8b d7		 mov	 edx, edi

; 433  : 				aIndex = i;

  00057	8d 5e fe	 lea	 ebx, DWORD PTR [esi-2]
$LN9@DivTeam:

; 417  : 		{
; 418  : 			LPOBJ lpUser = &gObj[i];
; 419  : 
; 420  : 			if(lpUser->Connected < PLAYER_PLAYING)

  0005a	83 b9 f0 d6 ff
	ff 03		 cmp	 DWORD PTR [ecx-10512], 3
  00061	7c 1d		 jl	 SHORT $LN28@DivTeam

; 421  : 			{
; 422  : 				continue;
; 423  : 			}
; 424  : 
; 425  : 			if(lpUser->m_TvTTeam != 0 || lpUser->MapNumber != TEAMVSTEAM_MAP)

  00063	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00066	75 18		 jne	 SHORT $LN28@DivTeam
  00068	80 b9 35 d8 ff
	ff 52		 cmp	 BYTE PTR [ecx-10187], 82 ; 00000052H
  0006f	75 0f		 jne	 SHORT $LN28@DivTeam

; 426  : 			{
; 427  : 				continue;
; 428  : 			}
; 429  : 
; 430  : 			if(lpUser->Reset >= iMaxReset)

  00071	8b b9 7c f9 ff
	ff		 mov	 edi, DWORD PTR [ecx-1668]
  00077	3b fa		 cmp	 edi, edx
  00079	7c 05		 jl	 SHORT $LN28@DivTeam

; 431  : 			{
; 432  : 				iMaxReset = lpUser->Reset;

  0007b	8b d7		 mov	 edx, edi

; 433  : 				aIndex = i;

  0007d	8d 5e ff	 lea	 ebx, DWORD PTR [esi-1]
$LN28@DivTeam:

; 417  : 		{
; 418  : 			LPOBJ lpUser = &gObj[i];
; 419  : 
; 420  : 			if(lpUser->Connected < PLAYER_PLAYING)

  00080	83 b9 40 02 00
	00 03		 cmp	 DWORD PTR [ecx+576], 3
  00087	7c 20		 jl	 SHORT $LN29@DivTeam

; 421  : 			{
; 422  : 				continue;
; 423  : 			}
; 424  : 
; 425  : 			if(lpUser->m_TvTTeam != 0 || lpUser->MapNumber != TEAMVSTEAM_MAP)

  00089	83 b9 50 2b 00
	00 00		 cmp	 DWORD PTR [ecx+11088], 0
  00090	75 17		 jne	 SHORT $LN29@DivTeam
  00092	80 b9 85 03 00
	00 52		 cmp	 BYTE PTR [ecx+901], 82	; 00000052H
  00099	75 0e		 jne	 SHORT $LN29@DivTeam

; 426  : 			{
; 427  : 				continue;
; 428  : 			}
; 429  : 
; 430  : 			if(lpUser->Reset >= iMaxReset)

  0009b	8b b9 cc 24 00
	00		 mov	 edi, DWORD PTR [ecx+9420]
  000a1	3b fa		 cmp	 edi, edx
  000a3	7c 04		 jl	 SHORT $LN29@DivTeam

; 431  : 			{
; 432  : 				iMaxReset = lpUser->Reset;

  000a5	8b d7		 mov	 edx, edi

; 433  : 				aIndex = i;

  000a7	8b de		 mov	 ebx, esi
$LN29@DivTeam:

; 417  : 		{
; 418  : 			LPOBJ lpUser = &gObj[i];
; 419  : 
; 420  : 			if(lpUser->Connected < PLAYER_PLAYING)

  000a9	83 b9 90 2d 00
	00 03		 cmp	 DWORD PTR [ecx+11664], 3
  000b0	7c 21		 jl	 SHORT $LN30@DivTeam

; 421  : 			{
; 422  : 				continue;
; 423  : 			}
; 424  : 
; 425  : 			if(lpUser->m_TvTTeam != 0 || lpUser->MapNumber != TEAMVSTEAM_MAP)

  000b2	83 b9 a0 56 00
	00 00		 cmp	 DWORD PTR [ecx+22176], 0
  000b9	75 18		 jne	 SHORT $LN30@DivTeam
  000bb	80 b9 d5 2e 00
	00 52		 cmp	 BYTE PTR [ecx+11989], 82 ; 00000052H
  000c2	75 0f		 jne	 SHORT $LN30@DivTeam

; 426  : 			{
; 427  : 				continue;
; 428  : 			}
; 429  : 
; 430  : 			if(lpUser->Reset >= iMaxReset)

  000c4	8b b9 1c 50 00
	00		 mov	 edi, DWORD PTR [ecx+20508]
  000ca	3b fa		 cmp	 edi, edx
  000cc	7c 05		 jl	 SHORT $LN30@DivTeam

; 431  : 			{
; 432  : 				iMaxReset = lpUser->Reset;

  000ce	8b d7		 mov	 edx, edi

; 433  : 				aIndex = i;

  000d0	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
$LN30@DivTeam:

; 417  : 		{
; 418  : 			LPOBJ lpUser = &gObj[i];
; 419  : 
; 420  : 			if(lpUser->Connected < PLAYER_PLAYING)

  000d3	83 b9 e0 58 00
	00 03		 cmp	 DWORD PTR [ecx+22752], 3
  000da	7c 21		 jl	 SHORT $LN24@DivTeam

; 421  : 			{
; 422  : 				continue;
; 423  : 			}
; 424  : 
; 425  : 			if(lpUser->m_TvTTeam != 0 || lpUser->MapNumber != TEAMVSTEAM_MAP)

  000dc	83 b9 f0 81 00
	00 00		 cmp	 DWORD PTR [ecx+33264], 0
  000e3	75 18		 jne	 SHORT $LN24@DivTeam
  000e5	80 b9 25 5a 00
	00 52		 cmp	 BYTE PTR [ecx+23077], 82 ; 00000052H
  000ec	75 0f		 jne	 SHORT $LN24@DivTeam

; 426  : 			{
; 427  : 				continue;
; 428  : 			}
; 429  : 
; 430  : 			if(lpUser->Reset >= iMaxReset)

  000ee	8b b9 6c 7b 00
	00		 mov	 edi, DWORD PTR [ecx+31596]
  000f4	3b fa		 cmp	 edi, edx
  000f6	7c 05		 jl	 SHORT $LN24@DivTeam

; 431  : 			{
; 432  : 				iMaxReset = lpUser->Reset;

  000f8	8b d7		 mov	 edx, edi

; 433  : 				aIndex = i;

  000fa	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
$LN24@DivTeam:

; 415  : 
; 416  : 		for(int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  000fd	83 c6 05	 add	 esi, 5
  00100	8d 7e fe	 lea	 edi, DWORD PTR [esi-2]
  00103	81 c1 90 d8 00
	00		 add	 ecx, 55440		; 0000d890H
  00109	81 ff 98 3a 00
	00		 cmp	 edi, 15000		; 00003a98H
  0010f	0f 8c 1b ff ff
	ff		 jl	 $LL26@DivTeam

; 434  : 			}
; 435  : 		}
; 436  : 
; 437  : 		if(aIndex == -1)

  00115	83 fb ff	 cmp	 ebx, -1
  00118	74 23		 je	 SHORT $LN25@DivTeam

; 438  : 		{
; 439  : 			break;
; 440  : 		}
; 441  : 
; 442  : 		LPOBJ lpUser = &gObj[aIndex];
; 443  : 		lpUser->m_TvTTeam = iTeam;

  0011a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00120	69 db 50 2b 00
	00		 imul	 ebx, 11088		; 00002b50H

; 444  : 		iCountPlayer++;

  00126	ff 45 fc	 inc	 DWORD PTR _iCountPlayer$[ebp]
  00129	89 84 0b 14 29
	00 00		 mov	 DWORD PTR [ebx+ecx+10516], eax

; 445  : 
; 446  : 		if(iTeam == eEVENT_TVT_TEAM_1)

  00130	48		 dec	 eax
  00131	f7 d8		 neg	 eax
  00133	1b c0		 sbb	 eax, eax
  00135	83 c0 02	 add	 eax, 2

; 447  : 		{
; 448  : 			iTeam = eEVENT_TVT_TEAM_2;
; 449  : 		}
; 450  : 		else
; 451  : 		{
; 452  : 			iTeam = eEVENT_TVT_TEAM_1;
; 453  : 		}
; 454  : 	}

  00138	e9 d6 fe ff ff	 jmp	 $LL12@DivTeam
$LN25@DivTeam:

; 455  : 
; 456  : 	return iCountPlayer;

  0013d	8b 45 fc	 mov	 eax, DWORD PTR _iCountPlayer$[ebp]
  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx

; 457  : }

  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c3		 ret	 0
?DivTeam@CTeamVsTeam@@QAEHXZ ENDP			; CTeamVsTeam::DivTeam
_TEXT	ENDS
PUBLIC	?AttackCheck@CTeamVsTeam@@QAE_NHH@Z		; CTeamVsTeam::AttackCheck
; Function compile flags: /Ogtp
;	COMDAT ?AttackCheck@CTeamVsTeam@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?AttackCheck@CTeamVsTeam@@QAE_NHH@Z PROC		; CTeamVsTeam::AttackCheck, COMDAT
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 511  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00003	6a 02		 push	 2
  00005	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  0000a	84 c0		 test	 al, al

; 512  : 	{
; 513  : 		return true;

  0000c	74 70		 je	 SHORT $LN6@AttackChec

; 514  : 	}
; 515  : 
; 516  : 	if(!OBJMAX_RANGE(aIndex) || !OBJMAX_RANGE(aTargetIndex))

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00011	85 c9		 test	 ecx, ecx
  00013	78 69		 js	 SHORT $LN6@AttackChec
  00015	33 c0		 xor	 eax, eax
  00017	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  0001d	0f 9e c0	 setle	 al
  00020	85 c0		 test	 eax, eax
  00022	74 5a		 je	 SHORT $LN6@AttackChec
  00024	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  00027	85 c0		 test	 eax, eax
  00029	78 53		 js	 SHORT $LN6@AttackChec
  0002b	33 d2		 xor	 edx, edx
  0002d	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00032	0f 9e c2	 setle	 dl
  00035	85 d2		 test	 edx, edx
  00037	74 45		 je	 SHORT $LN6@AttackChec

; 519  : 	}
; 520  : 
; 521  : 	LPOBJ lpUser = &gObj[aIndex];

  00039	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003f	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H

; 522  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  00045	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0004b	03 ca		 add	 ecx, edx
  0004d	03 c2		 add	 eax, edx

; 523  : 
; 524  : 	if(lpUser->Connected < PLAYER_PLAYING || lpTarget->Connected < PLAYER_PLAYING)

  0004f	ba 03 00 00 00	 mov	 edx, 3
  00054	39 51 04	 cmp	 DWORD PTR [ecx+4], edx
  00057	7c 25		 jl	 SHORT $LN6@AttackChec
  00059	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  0005c	7c 20		 jl	 SHORT $LN6@AttackChec

; 525  : 	{
; 526  : 		return true;
; 527  : 	}
; 528  : 
; 529  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  0005e	80 b9 49 01 00
	00 52		 cmp	 BYTE PTR [ecx+329], 82	; 00000052H

; 530  : 	{
; 531  : 		return true;

  00065	75 17		 jne	 SHORT $LN6@AttackChec

; 532  : 	}
; 533  : 
; 534  : 	if(lpUser->m_TvTTeam == 0)

  00067	8b 89 14 29 00
	00		 mov	 ecx, DWORD PTR [ecx+10516]
  0006d	85 c9		 test	 ecx, ecx

; 535  : 	{
; 536  : 		return true;

  0006f	74 0d		 je	 SHORT $LN6@AttackChec

; 537  : 	}
; 538  : 
; 539  : 	if(lpUser->m_TvTTeam != lpTarget->m_TvTTeam)

  00071	3b 88 14 29 00
	00		 cmp	 ecx, DWORD PTR [eax+10516]
  00077	0f 95 c0	 setne	 al

; 540  : 	{
; 541  : 		return true;
; 542  : 	}
; 543  : 
; 544  : 	return false;
; 545  : }

  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
$LN6@AttackChec:

; 517  : 	{
; 518  : 		return true;

  0007e	b0 01		 mov	 al, 1

; 540  : 	{
; 541  : 		return true;
; 542  : 	}
; 543  : 
; 544  : 	return false;
; 545  : }

  00080	5d		 pop	 ebp
  00081	c2 08 00	 ret	 8
?AttackCheck@CTeamVsTeam@@QAE_NHH@Z ENDP		; CTeamVsTeam::AttackCheck
_TEXT	ENDS
PUBLIC	?PKCheck@CTeamVsTeam@@QAE_NHH@Z			; CTeamVsTeam::PKCheck
; Function compile flags: /Ogtp
;	COMDAT ?PKCheck@CTeamVsTeam@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?PKCheck@CTeamVsTeam@@QAE_NHH@Z PROC			; CTeamVsTeam::PKCheck, COMDAT
; _this$ = ecx

; 548  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 549  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00003	6a 02		 push	 2
  00005	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  0000a	84 c0		 test	 al, al

; 550  : 	{
; 551  : 		return true;

  0000c	74 5a		 je	 SHORT $LN4@PKCheck

; 552  : 	}
; 553  : 
; 554  : 	if(!OBJMAX_RANGE(aIndex) || !OBJMAX_RANGE(aTargetIndex))

  0000e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00011	85 c0		 test	 eax, eax
  00013	78 53		 js	 SHORT $LN4@PKCheck
  00015	33 c9		 xor	 ecx, ecx
  00017	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001c	0f 9e c1	 setle	 cl
  0001f	85 c9		 test	 ecx, ecx
  00021	74 45		 je	 SHORT $LN4@PKCheck
  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _aTargetIndex$[ebp]
  00026	85 c9		 test	 ecx, ecx
  00028	78 3e		 js	 SHORT $LN4@PKCheck
  0002a	33 d2		 xor	 edx, edx
  0002c	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  00032	0f 9e c2	 setle	 dl
  00035	85 d2		 test	 edx, edx
  00037	74 2f		 je	 SHORT $LN4@PKCheck

; 557  : 	}
; 558  : 
; 559  : 	LPOBJ lpUser = &gObj[aIndex];

  00039	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003f	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H

; 560  : 	LPOBJ lpTarget = &gObj[aTargetIndex];
; 561  : 
; 562  : 	if(lpUser->Connected < PLAYER_PLAYING || lpTarget->Connected < PLAYER_PLAYING)

  00045	83 7c 10 04 03	 cmp	 DWORD PTR [eax+edx+4], 3
  0004a	7c 1c		 jl	 SHORT $LN4@PKCheck
  0004c	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00052	83 7c 11 04 03	 cmp	 DWORD PTR [ecx+edx+4], 3
  00057	7c 0f		 jl	 SHORT $LN4@PKCheck

; 563  : 	{
; 564  : 		return true;
; 565  : 	}
; 566  : 
; 567  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00059	80 bc 10 49 01
	00 00 52	 cmp	 BYTE PTR [eax+edx+329], 82 ; 00000052H
  00061	0f 95 c0	 setne	 al

; 568  : 	{
; 569  : 		return true;
; 570  : 	}
; 571  : 
; 572  : 	return false;
; 573  : }

  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
$LN4@PKCheck:

; 555  : 	{
; 556  : 		return true;

  00068	b0 01		 mov	 al, 1

; 568  : 	{
; 569  : 		return true;
; 570  : 	}
; 571  : 
; 572  : 	return false;
; 573  : }

  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
?PKCheck@CTeamVsTeam@@QAE_NHH@Z ENDP			; CTeamVsTeam::PKCheck
_TEXT	ENDS
PUBLIC	?PlayerRegen@CTeamVsTeam@@QAE_NH@Z		; CTeamVsTeam::PlayerRegen
EXTRN	_rand:PROC
; Function compile flags: /Ogtp
;	COMDAT ?PlayerRegen@CTeamVsTeam@@QAE_NH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?PlayerRegen@CTeamVsTeam@@QAE_NH@Z PROC			; CTeamVsTeam::PlayerRegen, COMDAT
; _this$ = ecx

; 576  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 577  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00004	6a 02		 push	 2
  00006	8b f9		 mov	 edi, ecx
  00008	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  0000d	84 c0		 test	 al, al
  0000f	75 05		 jne	 SHORT $LN7@PlayerRege
  00011	5f		 pop	 edi

; 628  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
$LN7@PlayerRege:
  00016	56		 push	 esi

; 578  : 	{
; 579  : 		return false;
; 580  : 	}
; 581  : 
; 582  : 	if(!OBJMAX_RANGE(aIndex))

  00017	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0001a	85 f6		 test	 esi, esi
  0001c	78 2a		 js	 SHORT $LN15@PlayerRege
  0001e	33 c0		 xor	 eax, eax
  00020	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  00026	0f 9e c0	 setle	 al
  00029	85 c0		 test	 eax, eax

; 583  : 	{
; 584  : 		return false;

  0002b	74 1b		 je	 SHORT $LN15@PlayerRege

; 585  : 	}
; 586  : 
; 587  : 	LPOBJ lpUser = &gObj[aIndex];

  0002d	69 f6 50 2b 00
	00		 imul	 esi, 11088		; 00002b50H
  00033	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 588  : 
; 589  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00039	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3

; 590  : 	{
; 591  : 		return false;

  0003d	7c 09		 jl	 SHORT $LN15@PlayerRege

; 592  : 	}
; 593  : 
; 594  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  0003f	80 be 49 01 00
	00 52		 cmp	 BYTE PTR [esi+329], 82	; 00000052H
  00046	74 08		 je	 SHORT $LN4@PlayerRege
$LN15@PlayerRege:
  00048	5e		 pop	 esi

; 595  : 	{
; 596  : 		return false;

  00049	32 c0		 xor	 al, al
  0004b	5f		 pop	 edi

; 628  : }

  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
$LN4@PlayerRege:

; 597  : 	}
; 598  : 	
; 599  : #if(NEW_UPDATE_1019)
; 600  : 
; 601  : 	if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  00050	8b 86 14 29 00
	00		 mov	 eax, DWORD PTR [esi+10516]
  00056	83 f8 01	 cmp	 eax, 1
  00059	75 40		 jne	 SHORT $LN3@PlayerRege

; 602  : 	{
; 603  : 		lpUser->X = this->m_TeamX1+(rand()%6-3);

  0005b	e8 00 00 00 00	 call	 _rand
  00060	99		 cdq
  00061	b9 06 00 00 00	 mov	 ecx, 6
  00066	f7 f9		 idiv	 ecx
  00068	66 03 57 68	 add	 dx, WORD PTR [edi+104]
  0006c	66 83 ea 03	 sub	 dx, 3
  00070	66 89 96 44 01
	00 00		 mov	 WORD PTR [esi+324], dx

; 604  : 		lpUser->Y = this->m_TeamY1+(rand()%6-3);

  00077	e8 00 00 00 00	 call	 _rand
  0007c	99		 cdq
  0007d	b9 06 00 00 00	 mov	 ecx, 6
  00082	f7 f9		 idiv	 ecx

; 610  : 	}
; 611  : 
; 612  : #else
; 613  : 
; 614  : 	if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)
; 615  : 	{
; 616  : 		lpUser->X = TEAMVSTEAM_X1+(rand()%6-3);
; 617  : 		lpUser->Y = TEAMVSTEAM_Y1+(rand()%6-3);
; 618  : 	}
; 619  : 	else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)
; 620  : 	{
; 621  : 		lpUser->X = TEAMVSTEAM_X2+(rand()%6-3);
; 622  : 		lpUser->Y = TEAMVSTEAM_Y2+(rand()%6-3);
; 623  : 	}
; 624  : 
; 625  : #endif
; 626  : 
; 627  : 	return true;

  00084	b0 01		 mov	 al, 1
  00086	66 03 57 6c	 add	 dx, WORD PTR [edi+108]
  0008a	66 83 ea 03	 sub	 dx, 3
  0008e	66 89 96 46 01
	00 00		 mov	 WORD PTR [esi+326], dx
  00095	5e		 pop	 esi
  00096	5f		 pop	 edi

; 628  : }

  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
$LN3@PlayerRege:

; 605  : 	}
; 606  : 	else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  0009b	83 f8 02	 cmp	 eax, 2
  0009e	75 38		 jne	 SHORT $LN1@PlayerRege

; 607  : 	{
; 608  : 		lpUser->X = this->m_TeamX2+(rand()%6-3);

  000a0	e8 00 00 00 00	 call	 _rand
  000a5	99		 cdq
  000a6	b9 06 00 00 00	 mov	 ecx, 6
  000ab	f7 f9		 idiv	 ecx
  000ad	66 03 57 70	 add	 dx, WORD PTR [edi+112]
  000b1	66 83 ea 03	 sub	 dx, 3
  000b5	66 89 96 44 01
	00 00		 mov	 WORD PTR [esi+324], dx

; 609  : 		lpUser->Y = this->m_TeamY2+(rand()%6-3);

  000bc	e8 00 00 00 00	 call	 _rand
  000c1	99		 cdq
  000c2	b9 06 00 00 00	 mov	 ecx, 6
  000c7	f7 f9		 idiv	 ecx
  000c9	66 03 57 74	 add	 dx, WORD PTR [edi+116]
  000cd	66 83 ea 03	 sub	 dx, 3
  000d1	66 89 96 46 01
	00 00		 mov	 WORD PTR [esi+326], dx
$LN1@PlayerRege:

; 610  : 	}
; 611  : 
; 612  : #else
; 613  : 
; 614  : 	if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)
; 615  : 	{
; 616  : 		lpUser->X = TEAMVSTEAM_X1+(rand()%6-3);
; 617  : 		lpUser->Y = TEAMVSTEAM_Y1+(rand()%6-3);
; 618  : 	}
; 619  : 	else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)
; 620  : 	{
; 621  : 		lpUser->X = TEAMVSTEAM_X2+(rand()%6-3);
; 622  : 		lpUser->Y = TEAMVSTEAM_Y2+(rand()%6-3);
; 623  : 	}
; 624  : 
; 625  : #endif
; 626  : 
; 627  : 	return true;

  000d8	5e		 pop	 esi
  000d9	b0 01		 mov	 al, 1
  000db	5f		 pop	 edi

; 628  : }

  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?PlayerRegen@CTeamVsTeam@@QAE_NH@Z ENDP			; CTeamVsTeam::PlayerRegen
_TEXT	ENDS
PUBLIC	??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@ ; `string'
PUBLIC	?PlayerReward@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::PlayerReward
EXTRN	?gObjLevelUp@@YA_NPAUOBJECTSTRUCT@@AA_JHH@Z:PROC ; gObjLevelUp
EXTRN	?gLevelExperience@@3PAKA:BYTE			; gLevelExperience
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?GDSavePoint@GameShop@@QAEXH@Z:PROC		; GameShop::GDSavePoint
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@
CONST	SEGMENT
??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@ DB '[T'
	DB	'eam Vs Team]: +%d WCoin', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?PlayerReward@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_exp$212874 = -16					; size = 8
tv279 = -8						; size = 4
_aIndex$212859 = -4					; size = 4
_WinTeam$ = 8						; size = 4
?PlayerReward@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::PlayerReward, COMDAT
; _this$ = ecx

; 631  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 632  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00008	bb b0 36 00 00	 mov	 ebx, 14000		; 000036b0H
  0000d	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00012	57		 push	 edi
  00013	8b f9		 mov	 edi, ecx
  00015	89 5d fc	 mov	 DWORD PTR _aIndex$212859[ebp], ebx
  00018	89 75 f8	 mov	 DWORD PTR tv279[ebp], esi
  0001b	eb 03 8d 49 00	 npad	 5
$LL10@PlayerRewa:

; 633  : 	{
; 634  : 		LPOBJ lpUser = &gObj[aIndex];

  00020	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 635  : 
; 636  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00026	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  0002a	0f 8c ce 00 00
	00		 jl	 $LN9@PlayerRewa

; 637  : 		{
; 638  : 			continue;
; 639  : 		}
; 640  : 
; 641  : 		if(lpUser->m_TvTTeam == WinTeam)

  00030	8b 4d 08	 mov	 ecx, DWORD PTR _WinTeam$[ebp]
  00033	39 8e 14 29 00
	00		 cmp	 DWORD PTR [esi+10516], ecx
  00039	0f 85 bf 00 00
	00		 jne	 $LN9@PlayerRewa

; 642  : 		{
; 643  : 			if(this->m_RewardBonusEnable)

  0003f	83 7f 44 00	 cmp	 DWORD PTR [edi+68], 0
  00043	74 2c		 je	 SHORT $LN5@PlayerRewa

; 644  : 			{
; 645  : 				lpUser->GameShop.WCoinC += this->m_RewardBonusCount;

  00045	db 47 48	 fild	 DWORD PTR [edi+72]

; 646  : 				gGameShop.GDSavePoint(aIndex);

  00048	53		 push	 ebx
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  0004e	dc 86 00 23 00
	00		 fadd	 QWORD PTR [esi+8960]
  00054	dd 9e 00 23 00
	00		 fstp	 QWORD PTR [esi+8960]
  0005a	e8 00 00 00 00	 call	 ?GDSavePoint@GameShop@@QAEXH@Z ; GameShop::GDSavePoint

; 647  : 				//g_ZtUser.UpdateCharEx(aIndex);
; 648  : 				MsgOutput(aIndex, "[Team Vs Team]: +%d WCoin", this->m_RewardBonusCount);

  0005f	8b 57 48	 mov	 edx, DWORD PTR [edi+72]
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@
  00068	53		 push	 ebx
  00069	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@PlayerRewa:

; 649  : 			}
; 650  : 
; 651  : 			if(this->m_RewardItemEnable)

  00071	83 7f 4c 00	 cmp	 DWORD PTR [edi+76], 0
  00075	74 3d		 je	 SHORT $LN4@PlayerRewa

; 652  : 			{
; 653  : 				int iItem = ITEMGET(this->m_RewardItemType, this->m_RewardItemIndex);
; 654  : 				ItemSerialCreateSend(aIndex, lpUser->MapNumber, lpUser->X, lpUser->Y, iItem, this->m_RewardItemLevel, 0, 0, 0, 0, aIndex, 0, 0);

  00077	0f b6 47 58	 movzx	 eax, BYTE PTR [edi+88]
  0007b	8b 4f 50	 mov	 ecx, DWORD PTR [edi+80]
  0007e	0f b6 96 46 01
	00 00		 movzx	 edx, BYTE PTR [esi+326]
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	53		 push	 ebx
  0008a	6a 00		 push	 0
  0008c	6a 00		 push	 0
  0008e	6a 00		 push	 0
  00090	6a 00		 push	 0
  00092	50		 push	 eax
  00093	0f b6 86 44 01
	00 00		 movzx	 eax, BYTE PTR [esi+324]
  0009a	c1 e1 09	 shl	 ecx, 9
  0009d	03 4f 54	 add	 ecx, DWORD PTR [edi+84]
  000a0	51		 push	 ecx
  000a1	0f b6 8e 49 01
	00 00		 movzx	 ecx, BYTE PTR [esi+329]
  000a8	52		 push	 edx
  000a9	50		 push	 eax
  000aa	51		 push	 ecx
  000ab	53		 push	 ebx
  000ac	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  000b1	83 c4 34	 add	 esp, 52			; 00000034H
$LN4@PlayerRewa:

; 655  : 			}
; 656  : 
; 657  : 			#if(ENABLE_NSGAME_UPDATE)
; 658  : 			for(int i = 0; i < this->m_RewardLevelUp; i++)

  000b4	33 db		 xor	 ebx, ebx
  000b6	39 5f 5c	 cmp	 DWORD PTR [edi+92], ebx
  000b9	7e 40		 jle	 SHORT $LN18@PlayerRewa
  000bb	eb 03 8d 49 00	 npad	 5
$LL17@PlayerRewa:

; 659  : 			{
; 660  : 				__int64 exp = gLevelExperience[lpUser->Level];

  000c0	0f bf 96 be 00
	00 00		 movsx	 edx, WORD PTR [esi+190]
  000c7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gLevelExperience@@3PAKA[edx*4]
  000ce	89 45 f0	 mov	 DWORD PTR _exp$212874[ebp], eax

; 661  : 				lpUser->Experience = exp;

  000d1	89 86 c8 00 00
	00		 mov	 DWORD PTR [esi+200], eax

; 662  : 				gObjLevelUp(lpUser, exp, lpUser->Class, 0);

  000d7	0f b7 86 b8 00
	00 00		 movzx	 eax, WORD PTR [esi+184]
  000de	6a 00		 push	 0
  000e0	50		 push	 eax
  000e1	8d 4d f0	 lea	 ecx, DWORD PTR _exp$212874[ebp]
  000e4	51		 push	 ecx
  000e5	56		 push	 esi
  000e6	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _exp$212874[ebp+4], 0
  000ed	e8 00 00 00 00	 call	 ?gObjLevelUp@@YA_NPAUOBJECTSTRUCT@@AA_JHH@Z ; gObjLevelUp
  000f2	43		 inc	 ebx
  000f3	83 c4 10	 add	 esp, 16			; 00000010H
  000f6	3b 5f 5c	 cmp	 ebx, DWORD PTR [edi+92]
  000f9	7c c5		 jl	 SHORT $LL17@PlayerRewa
$LN18@PlayerRewa:

; 655  : 			}
; 656  : 
; 657  : 			#if(ENABLE_NSGAME_UPDATE)
; 658  : 			for(int i = 0; i < this->m_RewardLevelUp; i++)

  000fb	8b 5d fc	 mov	 ebx, DWORD PTR _aIndex$212859[ebp]
$LN9@PlayerRewa:

; 632  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  000fe	8b 75 f8	 mov	 esi, DWORD PTR tv279[ebp]
  00101	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00107	43		 inc	 ebx
  00108	89 5d fc	 mov	 DWORD PTR _aIndex$212859[ebp], ebx
  0010b	89 75 f8	 mov	 DWORD PTR tv279[ebp], esi
  0010e	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00114	0f 8c 06 ff ff
	ff		 jl	 $LL10@PlayerRewa
  0011a	5f		 pop	 edi
  0011b	5e		 pop	 esi
  0011c	5b		 pop	 ebx

; 663  : 			}
; 664  : 			#endif
; 665  : 		}
; 666  : 	}
; 667  : }

  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?PlayerReward@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::PlayerReward
_TEXT	ENDS
PUBLIC	?GCEventStatusAll@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCEventStatusAll
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
; Function compile flags: /Ogtp
;	COMDAT ?GCEventStatusAll@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
_pMsg$212884 = -8					; size = 5
?GCEventStatusAll@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCEventStatusAll, COMDAT
; _this$ = ecx

; 670  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 671  : 	if(!this->m_Enable)

  00009	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  0000c	74 4b		 je	 SHORT $LN2@GCEventSta

; 672  : 	{
; 673  : 		return;
; 674  : 	}
; 675  : 
; 676  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	be b0 36 00 00	 mov	 esi, 14000		; 000036b0H
  00015	bf 00 a7 40 09	 mov	 edi, 155232000		; 0940a700H
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL4@GCEventSta:

; 677  : 	{
; 678  : 		if(gObj[aIndex].Connected < PLAYER_PLAYING)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00025	83 7c 07 04 03	 cmp	 DWORD PTR [edi+eax+4], 3
  0002a	7c 1c		 jl	 SHORT $LN3@GCEventSta

; 679  : 		{
; 680  : 			continue;
; 681  : 		}
; 682  : 
; 683  : 		PMSG_TVTGC_STATUS pMsg;
; 684  : 		pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x80, sizeof(pMsg));
; 685  : 		pMsg.Status = this->m_EventStatus;

  0002c	8a 4b 04	 mov	 cl, BYTE PTR [ebx+4]

; 686  : 		DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0002f	6a 05		 push	 5
  00031	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$212884[ebp]
  00034	52		 push	 edx
  00035	56		 push	 esi
  00036	c7 45 f8 c1 05
	fb 80		 mov	 DWORD PTR _pMsg$212884[ebp], -2131032639 ; 80fb05c1H
  0003d	88 4d fc	 mov	 BYTE PTR _pMsg$212884[ebp+4], cl
  00040	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GCEventSta:

; 672  : 	{
; 673  : 		return;
; 674  : 	}
; 675  : 
; 676  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00048	81 c7 50 2b 00
	00		 add	 edi, 11088		; 00002b50H
  0004e	46		 inc	 esi
  0004f	81 ff 80 d7 e9
	09		 cmp	 edi, 166320000		; 09e9d780H
  00055	7c c9		 jl	 SHORT $LL4@GCEventSta
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
$LN2@GCEventSta:
  00059	5b		 pop	 ebx

; 687  : 	}
; 688  : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?GCEventStatusAll@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCEventStatusAll
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCOpenWindow@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::GCOpenWindow
EXTRN	?gObjIsConnectedZt@@YA_NH@Z:PROC		; gObjIsConnectedZt
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GCOpenWindow@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GCOpenWindow@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::GCOpenWindow, COMDAT
; _this$ = ecx

; 691  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi

; 692  : 	if(!gObjIsConnectedZt(aIndex))

  00012	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00015	57		 push	 edi
  00016	8b f1		 mov	 esi, ecx
  00018	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  0001d	83 c4 04	 add	 esp, 4
  00020	84 c0		 test	 al, al
  00022	74 22		 je	 SHORT $LN2@GCOpenWind

; 693  : 	{
; 694  : 		return;
; 695  : 	}
; 696  : 
; 697  : 	PMSG_TVTGC_WINOPEN pMsg;
; 698  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x81, sizeof(pMsg));
; 699  : 	pMsg.MinLevel = this->m_MinLevel;

  00024	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]

; 700  : 	pMsg.MinReset = this->m_MinReset;

  00027	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]

; 701  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0002a	6a 0c		 push	 12			; 0000000cH
  0002c	8d 55 f0	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0002f	52		 push	 edx
  00030	57		 push	 edi
  00031	c7 45 f0 c1 0c
	fb 81		 mov	 DWORD PTR _pMsg$[ebp], -2114253631 ; 81fb0cc1H
  00038	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+4], eax
  0003b	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  0003e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCOpenWind:

; 702  : }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	5f		 pop	 edi
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5e		 pop	 esi
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?GCOpenWindow@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::GCOpenWindow
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCEventScoreAll@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCEventScoreAll
; Function compile flags: /Ogtp
;	COMDAT ?GCEventScoreAll@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
_pMsg$212913 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
?GCEventScoreAll@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCEventScoreAll, COMDAT
; _this$ = ecx

; 729  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b d9		 mov	 ebx, ecx

; 730  : 	if(!this->m_Enable)

  00013	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  00016	74 61		 je	 SHORT $LN2@GCEventSco

; 731  : 	{
; 732  : 		return;
; 733  : 	}
; 734  : 
; 735  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00024	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  00029	8d a4 24 00 00
	00 00		 npad	 7
$LL4@GCEventSco:

; 736  : 	{
; 737  : 		if(gObj[aIndex].Connected < PLAYER_PLAYING && gObj[aIndex].MapNumber != TEAMVSTEAM_MAP)

  00030	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  00035	7d 0a		 jge	 SHORT $LN1@GCEventSco
  00037	80 bc 06 49 01
	00 00 52	 cmp	 BYTE PTR [esi+eax+329], 82 ; 00000052H
  0003f	75 27		 jne	 SHORT $LN3@GCEventSco
$LN1@GCEventSco:

; 738  : 		{
; 739  : 			continue;
; 740  : 		}
; 741  : 
; 742  : 		PMSG_TVTGC_SCORE pMsg;
; 743  : 		pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x82, sizeof(pMsg));
; 744  : 		pMsg.TeamScore1 = this->m_TeamScore1;

  00041	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]

; 745  : 		pMsg.TeamScore2 = this->m_TeamScore2;

  00044	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]

; 746  : 		DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00047	6a 0c		 push	 12			; 0000000cH
  00049	8d 55 f0	 lea	 edx, DWORD PTR _pMsg$212913[ebp]
  0004c	52		 push	 edx
  0004d	57		 push	 edi
  0004e	c7 45 f0 c1 0c
	fb 82		 mov	 DWORD PTR _pMsg$212913[ebp], -2097476415 ; 82fb0cc1H
  00055	89 45 f4	 mov	 DWORD PTR _pMsg$212913[ebp+4], eax
  00058	89 4d f8	 mov	 DWORD PTR _pMsg$212913[ebp+8], ecx
  0005b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GCEventSco:

; 731  : 	{
; 732  : 		return;
; 733  : 	}
; 734  : 
; 735  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00068	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  0006e	47		 inc	 edi
  0006f	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00075	7c b9		 jl	 SHORT $LL4@GCEventSco
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
$LN2@GCEventSco:

; 747  : 	}
; 748  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	5b		 pop	 ebx
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
?GCEventScoreAll@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCEventScoreAll
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z		; CTeamVsTeam::GCMapAttribute
; Function compile flags: /Ogtp
;	COMDAT ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z
_TEXT	SEGMENT
_pMsg$ = -272						; size = 7
_pBodyMsg$ = -264					; size = 2
_btPacket$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_maptype$ = 12						; size = 4
?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z PROC		; CTeamVsTeam::GCMapAttribute, COMDAT
; _this$ = ecx

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 752  : 	if(!OBJMAX_RANGE(aIndex))

  00013	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00016	33 d2		 xor	 edx, edx
  00018	3b ca		 cmp	 ecx, edx
  0001a	0f 8c 93 00 00
	00		 jl	 $LN2@GCMapAttri
  00020	33 c0		 xor	 eax, eax
  00022	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  00028	0f 9e c0	 setle	 al
  0002b	3b c2		 cmp	 eax, edx
  0002d	0f 84 80 00 00
	00		 je	 $LN2@GCMapAttri

; 753  : 	{
; 754  : 		return;
; 755  : 	}
; 756  : 
; 757  : 	int iSizePacket = 0;
; 758  : 	unsigned char btPacket[256];
; 759  : 	
; 760  : 	PMSG_SETMAPATTR_COUNT pMsg;
; 761  : 	PMSG_SETMAPATTR pBodyMsg;
; 762  : 
; 763  : 	iSizePacket += sizeof(pMsg);
; 764  : 
; 765  : 	pMsg.btType = 0;
; 766  : 	pMsg.btMapAttr = 1;
; 767  : 	pMsg.btMapSetType = maptype;
; 768  : 	pMsg.btCount = 1;
; 769  : 
; 770  : 	pBodyMsg.btX = 0;

  00033	66 89 95 f8 fe
	ff ff		 mov	 WORD PTR _pBodyMsg$[ebp], dx

; 771  : 	pBodyMsg.btY = 0;
; 772  : 	memcpy(&btPacket[iSizePacket], &pBodyMsg, sizeof(pBodyMsg));

  0003a	0f b7 d2	 movzx	 edx, dx
  0003d	66 89 95 03 ff
	ff ff		 mov	 WORD PTR _btPacket$[ebp+7], dx

; 773  : 	iSizePacket += sizeof(pBodyMsg);
; 774  : 	pBodyMsg.btX   = 255;

  00044	66 c7 85 f8 fe
	ff ff ff ff	 mov	 WORD PTR _pBodyMsg$[ebp], 65535 ; 0000ffffH

; 775  : 	pBodyMsg.btY   = 255;
; 776  : 	memcpy(&btPacket[iSizePacket], &pBodyMsg, sizeof(pBodyMsg));

  0004d	0f b7 95 f8 fe
	ff ff		 movzx	 edx, WORD PTR _pBodyMsg$[ebp]
  00054	53		 push	 ebx
  00055	8a 5d 0c	 mov	 bl, BYTE PTR _maptype$[ebp]
  00058	66 89 95 05 ff
	ff ff		 mov	 WORD PTR _btPacket$[ebp+9], dx
  0005f	b0 01		 mov	 al, 1
  00061	66 c7 85 f3 fe
	ff ff 00 01	 mov	 WORD PTR _pMsg$[ebp+3], 256 ; 00000100H

; 777  : 	iSizePacket += sizeof(pBodyMsg);
; 778  : 
; 779  : 	pMsg.h.c = 0xC1;

  0006a	66 c7 85 f0 fe
	ff ff c1 0b	 mov	 WORD PTR _pMsg$[ebp], 3009 ; 00000bc1H

; 780  : 	pMsg.h.size = iSizePacket;
; 781  : 	pMsg.h.headcode = 0x46;

  00073	c6 85 f2 fe ff
	ff 46		 mov	 BYTE PTR _pMsg$[ebp+2], 70 ; 00000046H

; 782  : 	memcpy(&btPacket, &pMsg, sizeof(pMsg));

  0007a	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _pMsg$[ebp]
  00080	88 85 02 ff ff
	ff		 mov	 BYTE PTR _btPacket$[ebp+6], al
  00086	89 95 fc fe ff
	ff		 mov	 DWORD PTR _btPacket$[ebp], edx

; 783  : 	
; 784  : 	DataSend(aIndex, (LPBYTE)&btPacket, iSizePacket);

  0008c	6a 0b		 push	 11			; 0000000bH
  0008e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _btPacket$[ebp]
  00094	88 9d f5 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+5], bl
  0009a	0f b7 95 f4 fe
	ff ff		 movzx	 edx, WORD PTR _pMsg$[ebp+4]
  000a1	50		 push	 eax
  000a2	51		 push	 ecx
  000a3	66 89 95 00 ff
	ff ff		 mov	 WORD PTR _btPacket$[ebp+4], dx
  000aa	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b2	5b		 pop	 ebx
$LN2@GCMapAttri:

; 785  : }

  000b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	33 cd		 xor	 ecx, ebp
  000b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ENDP		; CTeamVsTeam::GCMapAttribute
_TEXT	ENDS
PUBLIC	?GCTeam@CTeamVsTeam@@QAEXH@Z			; CTeamVsTeam::GCTeam
; Function compile flags: /Ogtp
;	COMDAT ?GCTeam@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 5
_aIndex$ = 8						; size = 4
?GCTeam@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::GCTeam, COMDAT
; _this$ = ecx

; 877  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 878  : 	if(!OBJMAX_RANGE(aIndex))

  00003	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	85 c0		 test	 eax, eax
  0000b	78 3c		 js	 SHORT $LN2@GCTeam
  0000d	33 c9		 xor	 ecx, ecx
  0000f	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  00014	0f 9e c1	 setle	 cl
  00017	85 c9		 test	 ecx, ecx
  00019	74 2e		 je	 SHORT $LN2@GCTeam

; 879  : 	{
; 880  : 		return;
; 881  : 	}
; 882  : 
; 883  : 	PMSG_TVTGC_TEAM pMsg;
; 884  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x83, sizeof(pMsg));
; 885  : 	pMsg.Team = gObj[aIndex].m_TvTTeam;

  0001b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	8b c8		 mov	 ecx, eax
  00023	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  00029	c7 45 f8 c1 05
	fb 83		 mov	 DWORD PTR _pMsg$[ebp], -2080700991 ; 83fb05c1H
  00030	8a 8c 11 14 29
	00 00		 mov	 cl, BYTE PTR [ecx+edx+10516]

; 886  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00037	6a 05		 push	 5
  00039	8d 55 f8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0003c	52		 push	 edx
  0003d	50		 push	 eax
  0003e	88 4d fc	 mov	 BYTE PTR _pMsg$[ebp+4], cl
  00041	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCTeam:

; 887  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?GCTeam@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::GCTeam
_TEXT	ENDS
PUBLIC	?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z		; CTeamVsTeam::CheckDLTeleport
; Function compile flags: /Ogtp
;	COMDAT ?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z PROC		; CTeamVsTeam::CheckDLTeleport, COMDAT
; _this$ = ecx

; 890  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 891  : 	if(!OBJMAX_RANGE(aIndex))

  00003	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	78 0f		 js	 SHORT $LN9@CheckDLTel
  0000a	33 c0		 xor	 eax, eax
  0000c	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  00012	0f 9e c0	 setle	 al
  00015	85 c0		 test	 eax, eax
  00017	75 06		 jne	 SHORT $LN4@CheckDLTel
$LN9@CheckDLTel:

; 892  : 	{
; 893  : 		return false;

  00019	32 c0		 xor	 al, al

; 909  : 	{
; 910  : 		return true;
; 911  : 	}
; 912  : 
; 913  : 	return false;
; 914  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN4@CheckDLTel:

; 894  : 	}
; 895  : 
; 896  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  0001f	6a 02		 push	 2
  00021	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00026	84 c0		 test	 al, al
  00028	75 06		 jne	 SHORT $LN3@CheckDLTel

; 897  : 	{
; 898  : 		return true;

  0002a	b0 01		 mov	 al, 1

; 909  : 	{
; 910  : 		return true;
; 911  : 	}
; 912  : 
; 913  : 	return false;
; 914  : }

  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
$LN3@CheckDLTel:

; 899  : 	}
; 900  : 
; 901  : 	LPOBJ lpUser = &gObj[aIndex];

  00030	69 d2 50 2b 00
	00		 imul	 edx, 11088		; 00002b50H
  00036	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 902  : 
; 903  : 	if(lpUser->Connected < PLAYER_PLAYING)

  0003c	83 7a 04 03	 cmp	 DWORD PTR [edx+4], 3

; 904  : 	{
; 905  : 		return false;

  00040	7c d7		 jl	 SHORT $LN9@CheckDLTel

; 906  : 	}
; 907  : 
; 908  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00042	80 ba 49 01 00
	00 52		 cmp	 BYTE PTR [edx+329], 82	; 00000052H
  00049	0f 95 c0	 setne	 al

; 909  : 	{
; 910  : 		return true;
; 911  : 	}
; 912  : 
; 913  : 	return false;
; 914  : }

  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z ENDP		; CTeamVsTeam::CheckDLTeleport
_TEXT	ENDS
PUBLIC	?PlayerConnect@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::PlayerConnect
EXTRN	?GetMapPos@MapClass@@QAEXFAAF0@Z:PROC		; MapClass::GetMapPos
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
; Function compile flags: /Ogtp
;	COMDAT ?PlayerConnect@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 5
_aIndex$ = 8						; size = 4
?PlayerConnect@CTeamVsTeam@@QAEXH@Z PROC		; CTeamVsTeam::PlayerConnect, COMDAT
; _this$ = ecx

; 917  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 918  : 	if(!OBJMAX_RANGE(aIndex))

  00007	8b 75 08	 mov	 esi, DWORD PTR _aIndex$[ebp]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	85 f6		 test	 esi, esi
  0000f	78 62		 js	 SHORT $LN3@PlayerConn
  00011	33 c0		 xor	 eax, eax
  00013	81 fe 97 3a 00
	00		 cmp	 esi, 14999		; 00003a97H
  00019	0f 9e c0	 setle	 al
  0001c	85 c0		 test	 eax, eax
  0001e	74 53		 je	 SHORT $LN3@PlayerConn

; 919  : 	{
; 920  : 		return;
; 921  : 	}
; 922  : 
; 923  : 	LPOBJ lpUser = &gObj[aIndex];

  00020	8b c6		 mov	 eax, esi
  00022	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00028	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 924  : 
; 925  : #if(!DEBUG_MAP_MANAGER)
; 926  : 	if(lpUser->MapNumber == TEAMVSTEAM_MAP)

  0002e	80 b8 49 01 00
	00 52		 cmp	 BYTE PTR [eax+329], 82	; 00000052H
  00035	75 20		 jne	 SHORT $LN1@PlayerConn

; 927  : 	{
; 928  : 		lpUser->MapNumber = MAP_INDEX_RORENCIA;
; 929  : 		MapC[lpUser->MapNumber].GetMapPos(lpUser->MapNumber, lpUser->X, lpUser->Y);

  00037	8d 88 46 01 00
	00		 lea	 ecx, DWORD PTR [eax+326]
  0003d	51		 push	 ecx
  0003e	c6 80 49 01 00
	00 00		 mov	 BYTE PTR [eax+329], 0
  00045	05 44 01 00 00	 add	 eax, 324		; 00000144H
  0004a	50		 push	 eax
  0004b	6a 00		 push	 0
  0004d	b9 00 00 00 00	 mov	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00052	e8 00 00 00 00	 call	 ?GetMapPos@MapClass@@QAEXFAAF0@Z ; MapClass::GetMapPos
$LN1@PlayerConn:

; 930  : 	}
; 931  : #endif
; 932  : 
; 933  : 	PMSG_TVTGC_STATUS pMsg;
; 934  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x80, sizeof(pMsg));
; 935  : 	pMsg.Status = this->m_EventStatus;

  00057	8a 57 04	 mov	 dl, BYTE PTR [edi+4]

; 936  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0005a	6a 05		 push	 5
  0005c	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	c7 45 f8 c1 05
	fb 80		 mov	 DWORD PTR _pMsg$[ebp], -2131032639 ; 80fb05c1H
  00068	88 55 fc	 mov	 BYTE PTR _pMsg$[ebp+4], dl
  0006b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@PlayerConn:
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi

; 937  : }

  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
?PlayerConnect@CTeamVsTeam@@QAEXH@Z ENDP		; CTeamVsTeam::PlayerConnect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDEventInfo@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GDEventInfo
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
; Function compile flags: /Ogtp
;	COMDAT ?GDEventInfo@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
_pMsg$213001 = -24					; size = 20
__$ArrayPad$ = -4					; size = 4
?GDEventInfo@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::GDEventInfo, COMDAT
; _this$ = ecx

; 940  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 941  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00016	56		 push	 esi
  00017	be 00 a7 40 09	 mov	 esi, 155232000		; 0940a700H
  0001c	8d 64 24 00	 npad	 4
$LL5@GDEventInf:

; 942  : 	{
; 943  : 		LPOBJ lpUser = &gObj[aIndex];
; 944  : 
; 945  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00020	83 7c 0e 04 03	 cmp	 DWORD PTR [esi+ecx+4], 3
  00025	7c 65		 jl	 SHORT $LN4@GDEventInf

; 946  : 		{
; 947  : 			continue;
; 948  : 		}
; 949  : 
; 950  : 		if(lpUser->m_TvTTeam == 0)

  00027	83 bc 0e 14 29
	00 00 00	 cmp	 DWORD PTR [esi+ecx+10516], 0
  0002f	74 5b		 je	 SHORT $LN4@GDEventInf

; 951  : 		{
; 952  : 			continue;
; 953  : 		}
; 954  : 
; 955  : 		PMSG_TVTGD_INFO pMsg;
; 956  : 		pMsg.h.set((LPBYTE)&pMsg, 0xEA, 0x0C, sizeof(pMsg));
; 957  : 		memset(pMsg.Name, 0, sizeof(pMsg.Name));

  00031	33 c0		 xor	 eax, eax
  00033	89 45 ec	 mov	 DWORD PTR _pMsg$213001[ebp+4], eax
  00036	89 45 f0	 mov	 DWORD PTR _pMsg$213001[ebp+8], eax
  00039	66 89 45 f4	 mov	 WORD PTR _pMsg$213001[ebp+12], ax
  0003d	88 45 f6	 mov	 BYTE PTR _pMsg$213001[ebp+14], al
  00040	c7 45 e8 c1 14
	ea 0c		 mov	 DWORD PTR _pMsg$213001[ebp], 216667329 ; 0cea14c1H

; 958  : 		memcpy(pMsg.Name, lpUser->Name, sizeof(pMsg.Name));

  00047	8b 44 0e 77	 mov	 eax, DWORD PTR [esi+ecx+119]
  0004b	89 45 ec	 mov	 DWORD PTR _pMsg$213001[ebp+4], eax
  0004e	8b 44 0e 7b	 mov	 eax, DWORD PTR [esi+ecx+123]
  00052	89 45 f0	 mov	 DWORD PTR _pMsg$213001[ebp+8], eax
  00055	66 8b 44 0e 7f	 mov	 ax, WORD PTR [esi+ecx+127]
  0005a	66 89 45 f4	 mov	 WORD PTR _pMsg$213001[ebp+12], ax
  0005e	8a 84 0e 81 00
	00 00		 mov	 al, BYTE PTR [esi+ecx+129]
  00065	b2 14		 mov	 dl, 20			; 00000014H

; 959  : 		pMsg.KillCount = lpUser->m_TvTKill;
; 960  : 		cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00067	0f b6 d2	 movzx	 edx, dl
  0006a	88 45 f6	 mov	 BYTE PTR _pMsg$213001[ebp+14], al
  0006d	8b 8c 0e 18 29
	00 00		 mov	 ecx, DWORD PTR [esi+ecx+10520]
  00074	52		 push	 edx
  00075	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$213001[ebp]
  00078	89 4d f8	 mov	 DWORD PTR _pMsg$213001[ebp+16], ecx
  0007b	50		 push	 eax
  0007c	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00081	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
  00086	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN4@GDEventInf:

; 941  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  0008c	81 c6 50 2b 00
	00		 add	 esi, 11088		; 00002b50H
  00092	81 fe 80 d7 e9
	09		 cmp	 esi, 166320000		; 09e9d780H
  00098	7c 86		 jl	 SHORT $LL5@GDEventInf

; 961  : 	}
; 962  : }

  0009a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009d	33 cd		 xor	 ecx, ebp
  0009f	5e		 pop	 esi
  000a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
?GDEventInfo@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::GDEventInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCUserKillCount@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::GCUserKillCount
; Function compile flags: /Ogtp
;	COMDAT ?GCUserKillCount@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GCUserKillCount@CTeamVsTeam@@QAEXH@Z PROC		; CTeamVsTeam::GCUserKillCount, COMDAT
; _this$ = ecx

; 965  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]

; 966  : 	if(!OBJMAX_RANGE(aIndex))

  00013	85 c0		 test	 eax, eax
  00015	78 44		 js	 SHORT $LN2@GCUserKill
  00017	33 c9		 xor	 ecx, ecx
  00019	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0001e	0f 9e c1	 setle	 cl
  00021	85 c9		 test	 ecx, ecx
  00023	74 36		 je	 SHORT $LN2@GCUserKill

; 967  : 	{
; 968  : 		return;
; 969  : 	}
; 970  : 
; 971  : 	PMSG_TVTGC_KILL pMsg;
; 972  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x84, sizeof(pMsg));
; 973  : 	pMsg.KillCount = gObj[aIndex].m_TvTKill;

  00025	8b c8		 mov	 ecx, eax
  00027	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H
  0002d	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00033	c7 45 f0 c1 0c
	fb 84		 mov	 DWORD PTR _pMsg$[ebp], -2063921983 ; 84fb0cc1H
  0003a	8b 91 18 29 00
	00		 mov	 edx, DWORD PTR [ecx+10520]
  00040	89 55 f4	 mov	 DWORD PTR _pMsg$[ebp+4], edx

; 974  : 	pMsg.DieCount = gObj[aIndex].m_TvTDie;

  00043	8b 89 1c 29 00
	00		 mov	 ecx, DWORD PTR [ecx+10524]

; 975  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00049	6a 0c		 push	 12			; 0000000cH
  0004b	8d 55 f0	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0004e	52		 push	 edx
  0004f	50		 push	 eax
  00050	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  00053	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCUserKill:

; 976  : }

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005e	33 cd		 xor	 ecx, ebp
  00060	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?GCUserKillCount@CTeamVsTeam@@QAEXH@Z ENDP		; CTeamVsTeam::GCUserKillCount
_TEXT	ENDS
PUBLIC	?GCEventTimer@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::GCEventTimer
; Function compile flags: /Ogtp
;	COMDAT ?GCEventTimer@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 8
_aIndex$ = 8						; size = 4
?GCEventTimer@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::GCEventTimer, COMDAT
; _this$ = ecx

; 979  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 980  : 	PMSG_TVTGC_TIME pMsg;
; 981  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x85, sizeof(pMsg));
; 982  : 
; 983  : 	if(this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00006	6a 02		 push	 2
  00008	c7 45 f8 c1 08
	fb 85		 mov	 DWORD PTR _pMsg$[ebp], -2047145791 ; 85fb08c1H
  0000f	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00014	84 c0		 test	 al, al
  00016	74 08		 je	 SHORT $LN2@GCEventTim

; 984  : 	{
; 985  : 		pMsg.EventTime = this->m_TickRemain;

  00018	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0001b	89 45 fc	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 986  : 	}
; 987  : 	else

  0001e	eb 07		 jmp	 SHORT $LN1@GCEventTim
$LN2@GCEventTim:

; 988  : 	{
; 989  : 		pMsg.EventTime = 0;

  00020	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pMsg$[ebp+4], 0
$LN1@GCEventTim:

; 990  : 	}
; 991  : 	
; 992  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00027	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0002a	6a 08		 push	 8
  0002c	8d 4d f8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0002f	51		 push	 ecx
  00030	52		 push	 edx
  00031	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 993  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?GCEventTimer@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::GCEventTimer
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCEventStatistic@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCEventStatistic
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?GCEventStatistic@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
tv1530 = -15360						; size = 4
tv1522 = -15356						; size = 4
_iCount$ = -15352					; size = 4
_iCount2$ = -15348					; size = 4
_i$213034 = -15344					; size = 4
tv588 = -15340						; size = 4
tv582 = -15336						; size = 4
_pMsg$ = -15332						; size = 328
_iObjUser$ = -15004					; size = 15000
__$ArrayPad$ = -4					; size = 4
?GCEventStatistic@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCEventStatistic, COMDAT
; _this$ = ecx

; 997  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 3c 00 00	 mov	 eax, 15360		; 00003c00H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	56		 push	 esi

; 998  : 	PMSG_TVT_STATISTIC pMsg;
; 999  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFA, 0x11, sizeof(pMsg));
; 1000 : 	pMsg.Count = 0;
; 1001 : 	pMsg.Count2 = 0;
; 1002 : 
; 1003 : 	bool iObjUser[OBJMAX];
; 1004 : 	memset(iObjUser, 0, sizeof(iObjUser));

  00018	68 98 3a 00 00	 push	 15000			; 00003a98H
  0001d	33 f6		 xor	 esi, esi
  0001f	8d 85 64 c5 ff
	ff		 lea	 eax, DWORD PTR _iObjUser$[ebp]
  00025	56		 push	 esi
  00026	50		 push	 eax
  00027	c7 85 1c c4 ff
	ff c2 01 48 fa	 mov	 DWORD PTR _pMsg$[ebp], -95944254 ; fa4801c2H
  00031	66 c7 85 20 c4
	ff ff 11 00	 mov	 WORD PTR _pMsg$[ebp+4], 17 ; 00000011H
  0003a	c6 85 22 c4 ff
	ff 00		 mov	 BYTE PTR _pMsg$[ebp+6], 0
  00041	e8 00 00 00 00	 call	 _memset
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	8d 8d c4 c4 ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp+168]
  0004f	8d 95 24 c4 ff
	ff		 lea	 edx, DWORD PTR _pMsg$[ebp+8]
  00055	53		 push	 ebx

; 1005 : 	
; 1006 : 	int iCount = 0;

  00056	89 b5 08 c4 ff
	ff		 mov	 DWORD PTR _iCount$[ebp], esi

; 1007 : 	int iCount2 = 0;

  0005c	89 b5 0c c4 ff
	ff		 mov	 DWORD PTR _iCount2$[ebp], esi
  00062	89 8d 04 c4 ff
	ff		 mov	 DWORD PTR tv1522[ebp], ecx
  00068	89 95 00 c4 ff
	ff		 mov	 DWORD PTR tv1530[ebp], edx
  0006e	57		 push	 edi
  0006f	90		 npad	 1
$LL22@GCEventSta@2:

; 1008 : 
; 1009 : 	while(true)
; 1010 : 	{
; 1011 : 		int aIndex = -1;

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00075	bb b2 36 00 00	 mov	 ebx, 14002		; 000036b2H
  0007a	83 ce ff	 or	 esi, -1

; 1012 : 		int iMaxKill = 0;

  0007d	33 c9		 xor	 ecx, ecx

; 1013 : 
; 1014 : 		for(int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  0007f	c7 85 10 c4 ff
	ff b0 36 00 00	 mov	 DWORD PTR _i$213034[ebp], 14000 ; 000036b0H
  00089	c7 85 18 c4 ff
	ff b4 36 00 00	 mov	 DWORD PTR tv582[ebp], 14004 ; 000036b4H
  00093	c7 85 14 c4 ff
	ff b3 36 00 00	 mov	 DWORD PTR tv588[ebp], 14003 ; 000036b3H
  0009d	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  000a0	05 68 fb 40 09	 add	 eax, 155253608		; 0940fb68H
$LL48@GCEventSta@2:

; 1015 : 		{
; 1016 : 			LPOBJ lpUser = &gObj[i];
; 1017 : 
; 1018 : 			if(lpUser->Connected < PLAYER_PLAYING)

  000a5	83 b8 9c ab ff
	ff 03		 cmp	 DWORD PTR [eax-21604], 3
  000ac	7c 35		 jl	 SHORT $LN19@GCEventSta@2

; 1019 : 			{
; 1020 : 				continue;
; 1021 : 			}
; 1022 : 
; 1023 : 			if(lpUser->MapNumber == TEAMVSTEAM_MAP && iObjUser[i] == false)

  000ae	80 b8 e1 ac ff
	ff 52		 cmp	 BYTE PTR [eax-21279], 82 ; 00000052H
  000b5	75 2c		 jne	 SHORT $LN19@GCEventSta@2
  000b7	80 bc 3d 63 c5
	ff ff 00	 cmp	 BYTE PTR _iObjUser$[ebp+edi-1], 0
  000bf	75 22		 jne	 SHORT $LN19@GCEventSta@2

; 1024 : 			{
; 1025 : 				if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  000c1	8b 90 ac d4 ff
	ff		 mov	 edx, DWORD PTR [eax-11092]
  000c7	83 fa 01	 cmp	 edx, 1

; 1026 : 				{
; 1027 : 					if(lpUser->m_TvTKill >= iMaxKill)
; 1028 : 					{
; 1029 : 						iMaxKill = lpUser->m_TvTKill;
; 1030 : 						aIndex = i;
; 1031 : 					}
; 1032 : 				}

  000ca	74 05		 je	 SHORT $LN55@GCEventSta@2

; 1033 : 				else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  000cc	83 fa 02	 cmp	 edx, 2
  000cf	75 12		 jne	 SHORT $LN19@GCEventSta@2
$LN55@GCEventSta@2:

; 1034 : 				{
; 1035 : 					if(lpUser->m_TvTKill >= iMaxKill)

  000d1	8b 90 b0 d4 ff
	ff		 mov	 edx, DWORD PTR [eax-11088]
  000d7	3b d1		 cmp	 edx, ecx
  000d9	7c 08		 jl	 SHORT $LN19@GCEventSta@2

; 1036 : 					{
; 1037 : 						iMaxKill = lpUser->m_TvTKill;
; 1038 : 						aIndex = i;

  000db	8b b5 10 c4 ff
	ff		 mov	 esi, DWORD PTR _i$213034[ebp]
  000e1	8b ca		 mov	 ecx, edx
$LN19@GCEventSta@2:

; 1015 : 		{
; 1016 : 			LPOBJ lpUser = &gObj[i];
; 1017 : 
; 1018 : 			if(lpUser->Connected < PLAYER_PLAYING)

  000e3	83 b8 ec d6 ff
	ff 03		 cmp	 DWORD PTR [eax-10516], 3
  000ea	7c 2a		 jl	 SHORT $LN50@GCEventSta@2

; 1019 : 			{
; 1020 : 				continue;
; 1021 : 			}
; 1022 : 
; 1023 : 			if(lpUser->MapNumber == TEAMVSTEAM_MAP && iObjUser[i] == false)

  000ec	80 b8 31 d8 ff
	ff 52		 cmp	 BYTE PTR [eax-10191], 82 ; 00000052H
  000f3	75 21		 jne	 SHORT $LN50@GCEventSta@2
  000f5	80 bc 3d 64 c5
	ff ff 00	 cmp	 BYTE PTR _iObjUser$[ebp+edi], 0
  000fd	75 17		 jne	 SHORT $LN50@GCEventSta@2

; 1024 : 			{
; 1025 : 				if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  000ff	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00102	83 fa 01	 cmp	 edx, 1

; 1026 : 				{
; 1027 : 					if(lpUser->m_TvTKill >= iMaxKill)
; 1028 : 					{
; 1029 : 						iMaxKill = lpUser->m_TvTKill;
; 1030 : 						aIndex = i;
; 1031 : 					}
; 1032 : 				}

  00105	74 05		 je	 SHORT $LN57@GCEventSta@2

; 1033 : 				else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  00107	83 fa 02	 cmp	 edx, 2
  0010a	75 0a		 jne	 SHORT $LN50@GCEventSta@2
$LN57@GCEventSta@2:

; 1034 : 				{
; 1035 : 					if(lpUser->m_TvTKill >= iMaxKill)

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	3b d1		 cmp	 edx, ecx
  00110	7c 04		 jl	 SHORT $LN50@GCEventSta@2

; 1036 : 					{
; 1037 : 						iMaxKill = lpUser->m_TvTKill;
; 1038 : 						aIndex = i;

  00112	8b f7		 mov	 esi, edi
  00114	8b ca		 mov	 ecx, edx
$LN50@GCEventSta@2:

; 1015 : 		{
; 1016 : 			LPOBJ lpUser = &gObj[i];
; 1017 : 
; 1018 : 			if(lpUser->Connected < PLAYER_PLAYING)

  00116	83 b8 3c 02 00
	00 03		 cmp	 DWORD PTR [eax+572], 3
  0011d	7c 31		 jl	 SHORT $LN51@GCEventSta@2

; 1019 : 			{
; 1020 : 				continue;
; 1021 : 			}
; 1022 : 
; 1023 : 			if(lpUser->MapNumber == TEAMVSTEAM_MAP && iObjUser[i] == false)

  0011f	80 b8 81 03 00
	00 52		 cmp	 BYTE PTR [eax+897], 82	; 00000052H
  00126	75 28		 jne	 SHORT $LN51@GCEventSta@2
  00128	80 bc 1d 64 c5
	ff ff 00	 cmp	 BYTE PTR _iObjUser$[ebp+ebx], 0
  00130	75 1e		 jne	 SHORT $LN51@GCEventSta@2

; 1024 : 			{
; 1025 : 				if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  00132	8b 90 4c 2b 00
	00		 mov	 edx, DWORD PTR [eax+11084]
  00138	83 fa 01	 cmp	 edx, 1

; 1026 : 				{
; 1027 : 					if(lpUser->m_TvTKill >= iMaxKill)
; 1028 : 					{
; 1029 : 						iMaxKill = lpUser->m_TvTKill;
; 1030 : 						aIndex = i;
; 1031 : 					}
; 1032 : 				}

  0013b	74 05		 je	 SHORT $LN59@GCEventSta@2

; 1033 : 				else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  0013d	83 fa 02	 cmp	 edx, 2
  00140	75 0e		 jne	 SHORT $LN51@GCEventSta@2
$LN59@GCEventSta@2:

; 1034 : 				{
; 1035 : 					if(lpUser->m_TvTKill >= iMaxKill)

  00142	8b 90 50 2b 00
	00		 mov	 edx, DWORD PTR [eax+11088]
  00148	3b d1		 cmp	 edx, ecx
  0014a	7c 04		 jl	 SHORT $LN51@GCEventSta@2

; 1036 : 					{
; 1037 : 						iMaxKill = lpUser->m_TvTKill;
; 1038 : 						aIndex = i;

  0014c	8b f3		 mov	 esi, ebx
  0014e	8b ca		 mov	 ecx, edx
$LN51@GCEventSta@2:

; 1015 : 		{
; 1016 : 			LPOBJ lpUser = &gObj[i];
; 1017 : 
; 1018 : 			if(lpUser->Connected < PLAYER_PLAYING)

  00150	83 b8 8c 2d 00
	00 03		 cmp	 DWORD PTR [eax+11660], 3
  00157	7c 3b		 jl	 SHORT $LN52@GCEventSta@2

; 1019 : 			{
; 1020 : 				continue;
; 1021 : 			}
; 1022 : 
; 1023 : 			if(lpUser->MapNumber == TEAMVSTEAM_MAP && iObjUser[i] == false)

  00159	80 b8 d1 2e 00
	00 52		 cmp	 BYTE PTR [eax+11985], 82 ; 00000052H
  00160	75 32		 jne	 SHORT $LN52@GCEventSta@2
  00162	8b 95 14 c4 ff
	ff		 mov	 edx, DWORD PTR tv588[ebp]
  00168	80 bc 15 64 c5
	ff ff 00	 cmp	 BYTE PTR _iObjUser$[ebp+edx], 0
  00170	75 22		 jne	 SHORT $LN52@GCEventSta@2

; 1024 : 			{
; 1025 : 				if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  00172	8b 90 9c 56 00
	00		 mov	 edx, DWORD PTR [eax+22172]
  00178	83 fa 01	 cmp	 edx, 1

; 1026 : 				{
; 1027 : 					if(lpUser->m_TvTKill >= iMaxKill)
; 1028 : 					{
; 1029 : 						iMaxKill = lpUser->m_TvTKill;
; 1030 : 						aIndex = i;
; 1031 : 					}
; 1032 : 				}

  0017b	74 05		 je	 SHORT $LN61@GCEventSta@2

; 1033 : 				else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  0017d	83 fa 02	 cmp	 edx, 2
  00180	75 12		 jne	 SHORT $LN52@GCEventSta@2
$LN61@GCEventSta@2:

; 1034 : 				{
; 1035 : 					if(lpUser->m_TvTKill >= iMaxKill)

  00182	8b 90 a0 56 00
	00		 mov	 edx, DWORD PTR [eax+22176]
  00188	3b d1		 cmp	 edx, ecx
  0018a	7c 08		 jl	 SHORT $LN52@GCEventSta@2

; 1036 : 					{
; 1037 : 						iMaxKill = lpUser->m_TvTKill;
; 1038 : 						aIndex = i;

  0018c	8b b5 14 c4 ff
	ff		 mov	 esi, DWORD PTR tv588[ebp]
  00192	8b ca		 mov	 ecx, edx
$LN52@GCEventSta@2:

; 1015 : 		{
; 1016 : 			LPOBJ lpUser = &gObj[i];
; 1017 : 
; 1018 : 			if(lpUser->Connected < PLAYER_PLAYING)

  00194	83 b8 dc 58 00
	00 03		 cmp	 DWORD PTR [eax+22748], 3
  0019b	7c 3b		 jl	 SHORT $LN53@GCEventSta@2

; 1019 : 			{
; 1020 : 				continue;
; 1021 : 			}
; 1022 : 
; 1023 : 			if(lpUser->MapNumber == TEAMVSTEAM_MAP && iObjUser[i] == false)

  0019d	80 b8 21 5a 00
	00 52		 cmp	 BYTE PTR [eax+23073], 82 ; 00000052H
  001a4	75 32		 jne	 SHORT $LN53@GCEventSta@2
  001a6	8b 95 18 c4 ff
	ff		 mov	 edx, DWORD PTR tv582[ebp]
  001ac	80 bc 15 64 c5
	ff ff 00	 cmp	 BYTE PTR _iObjUser$[ebp+edx], 0
  001b4	75 22		 jne	 SHORT $LN53@GCEventSta@2

; 1024 : 			{
; 1025 : 				if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  001b6	8b 90 ec 81 00
	00		 mov	 edx, DWORD PTR [eax+33260]
  001bc	83 fa 01	 cmp	 edx, 1

; 1026 : 				{
; 1027 : 					if(lpUser->m_TvTKill >= iMaxKill)
; 1028 : 					{
; 1029 : 						iMaxKill = lpUser->m_TvTKill;
; 1030 : 						aIndex = i;
; 1031 : 					}
; 1032 : 				}

  001bf	74 05		 je	 SHORT $LN63@GCEventSta@2

; 1033 : 				else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  001c1	83 fa 02	 cmp	 edx, 2
  001c4	75 12		 jne	 SHORT $LN53@GCEventSta@2
$LN63@GCEventSta@2:

; 1034 : 				{
; 1035 : 					if(lpUser->m_TvTKill >= iMaxKill)

  001c6	8b 90 f0 81 00
	00		 mov	 edx, DWORD PTR [eax+33264]
  001cc	3b d1		 cmp	 edx, ecx
  001ce	7c 08		 jl	 SHORT $LN53@GCEventSta@2

; 1036 : 					{
; 1037 : 						iMaxKill = lpUser->m_TvTKill;
; 1038 : 						aIndex = i;

  001d0	8b b5 18 c4 ff
	ff		 mov	 esi, DWORD PTR tv582[ebp]
  001d6	8b ca		 mov	 ecx, edx
$LN53@GCEventSta@2:

; 1008 : 
; 1009 : 	while(true)
; 1010 : 	{
; 1011 : 		int aIndex = -1;

  001d8	83 85 10 c4 ff
	ff 05		 add	 DWORD PTR _i$213034[ebp], 5
  001df	83 85 14 c4 ff
	ff 05		 add	 DWORD PTR tv588[ebp], 5
  001e6	83 85 18 c4 ff
	ff 05		 add	 DWORD PTR tv582[ebp], 5
  001ed	83 c7 05	 add	 edi, 5
  001f0	05 90 d8 00 00	 add	 eax, 55440		; 0000d890H
  001f5	83 c3 05	 add	 ebx, 5

; 1013 : 
; 1014 : 		for(int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  001f8	81 ff 99 3a 00
	00		 cmp	 edi, 15001		; 00003a99H
  001fe	0f 8c a1 fe ff
	ff		 jl	 $LL48@GCEventSta@2

; 1039 : 					}
; 1040 : 				}
; 1041 : 			}
; 1042 : 		}
; 1043 : 
; 1044 : 		if(aIndex == -1)

  00204	83 fe ff	 cmp	 esi, -1
  00207	0f 84 be 00 00
	00		 je	 $LN32@GCEventSta@2

; 1045 : 		{
; 1046 : 			break;
; 1047 : 		}
; 1048 : 
; 1049 : 		if(gObj[aIndex].m_TvTTeam == eEVENT_TVT_TEAM_1)

  0020d	8b c6		 mov	 eax, esi
  0020f	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00215	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0021b	ba 01 00 00 00	 mov	 edx, 1
  00220	8b 88 14 29 00
	00		 mov	 ecx, DWORD PTR [eax+10516]
  00226	3b ca		 cmp	 ecx, edx
  00228	75 4e		 jne	 SHORT $LN9@GCEventSta@2

; 1050 : 		{
; 1051 : 			pMsg.stat[iCount].Name[10] = 0;

  0022a	8b 8d 00 c4 ff
	ff		 mov	 ecx, DWORD PTR tv1530[ebp]

; 1052 : 			memcpy(pMsg.stat[iCount].Name, gObj[aIndex].Name, 10);
; 1053 : 			pMsg.stat[iCount].Kill = gObj[aIndex].m_TvTKill;
; 1054 : 			pMsg.stat[iCount].Die = gObj[aIndex].m_TvTDie;
; 1055 : 
; 1056 : 			iCount++;

  00230	01 95 08 c4 ff
	ff		 add	 DWORD PTR _iCount$[ebp], edx
  00236	c6 41 0a 00	 mov	 BYTE PTR [ecx+10], 0
  0023a	8b 78 77	 mov	 edi, DWORD PTR [eax+119]
  0023d	89 39		 mov	 DWORD PTR [ecx], edi
  0023f	8b 78 7b	 mov	 edi, DWORD PTR [eax+123]
  00242	89 79 04	 mov	 DWORD PTR [ecx+4], edi
  00245	0f b7 78 7f	 movzx	 edi, WORD PTR [eax+127]
  00249	66 89 79 08	 mov	 WORD PTR [ecx+8], di
  0024d	0f b7 b8 18 29
	00 00		 movzx	 edi, WORD PTR [eax+10520]
  00254	66 89 79 0c	 mov	 WORD PTR [ecx+12], di
  00258	66 8b 80 1c 29
	00 00		 mov	 ax, WORD PTR [eax+10524]
  0025f	66 89 41 0e	 mov	 WORD PTR [ecx+14], ax
  00263	83 c1 10	 add	 ecx, 16			; 00000010H
  00266	89 8d 00 c4 ff
	ff		 mov	 DWORD PTR tv1530[ebp], ecx

; 1066 : 		}
; 1067 : 
; 1068 : 		iObjUser[aIndex] = true;

  0026c	88 94 35 64 c5
	ff ff		 mov	 BYTE PTR _iObjUser$[ebp+esi], dl

; 1069 : 
; 1070 : 		if(iCount >= 10 || iCount2 >= 10)
; 1071 : 		{
; 1072 : 			continue;

  00273	e9 f8 fd ff ff	 jmp	 $LL22@GCEventSta@2
$LN9@GCEventSta@2:

; 1057 : 		}
; 1058 : 		else if(gObj[aIndex].m_TvTTeam == eEVENT_TVT_TEAM_2)

  00278	83 f9 02	 cmp	 ecx, 2
  0027b	75 42		 jne	 SHORT $LN7@GCEventSta@2

; 1059 : 		{
; 1060 : 			pMsg.stat2[iCount2].Name[10] = 0;

  0027d	8b 8d 04 c4 ff
	ff		 mov	 ecx, DWORD PTR tv1522[ebp]

; 1061 : 			memcpy(pMsg.stat2[iCount2].Name, gObj[aIndex].Name, 10);
; 1062 : 			pMsg.stat2[iCount2].Kill = gObj[aIndex].m_TvTKill;
; 1063 : 			pMsg.stat2[iCount2].Die = gObj[aIndex].m_TvTDie;
; 1064 : 
; 1065 : 			iCount2++;

  00283	01 95 0c c4 ff
	ff		 add	 DWORD PTR _iCount2$[ebp], edx
  00289	c6 41 0a 00	 mov	 BYTE PTR [ecx+10], 0
  0028d	8b 78 77	 mov	 edi, DWORD PTR [eax+119]
  00290	89 39		 mov	 DWORD PTR [ecx], edi
  00292	8b 78 7b	 mov	 edi, DWORD PTR [eax+123]
  00295	89 79 04	 mov	 DWORD PTR [ecx+4], edi
  00298	0f b7 78 7f	 movzx	 edi, WORD PTR [eax+127]
  0029c	66 89 79 08	 mov	 WORD PTR [ecx+8], di
  002a0	0f b7 b8 18 29
	00 00		 movzx	 edi, WORD PTR [eax+10520]
  002a7	66 89 79 0c	 mov	 WORD PTR [ecx+12], di
  002ab	66 8b 80 1c 29
	00 00		 mov	 ax, WORD PTR [eax+10524]
  002b2	66 89 41 0e	 mov	 WORD PTR [ecx+14], ax
  002b6	83 c1 10	 add	 ecx, 16			; 00000010H
  002b9	89 8d 04 c4 ff
	ff		 mov	 DWORD PTR tv1522[ebp], ecx
$LN7@GCEventSta@2:

; 1066 : 		}
; 1067 : 
; 1068 : 		iObjUser[aIndex] = true;

  002bf	88 94 35 64 c5
	ff ff		 mov	 BYTE PTR _iObjUser$[ebp+esi], dl

; 1069 : 
; 1070 : 		if(iCount >= 10 || iCount2 >= 10)
; 1071 : 		{
; 1072 : 			continue;

  002c6	e9 a5 fd ff ff	 jmp	 $LL22@GCEventSta@2
$LN32@GCEventSta@2:

; 1073 : 		}
; 1074 : 	}
; 1075 : 
; 1076 : 	pMsg.Count = (BYTE)iCount;

  002cb	8a 8d 08 c4 ff
	ff		 mov	 cl, BYTE PTR _iCount$[ebp]

; 1077 : 	pMsg.Count2 = (BYTE)iCount2;

  002d1	8a 95 0c c4 ff
	ff		 mov	 dl, BYTE PTR _iCount2$[ebp]
  002d7	5f		 pop	 edi
  002d8	88 8d 21 c4 ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+5], cl
  002de	88 95 22 c4 ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+6], dl

; 1078 : 
; 1079 : 	for(int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  002e4	be b0 36 00 00	 mov	 esi, 14000		; 000036b0H
  002e9	5b		 pop	 ebx
  002ea	8d 9b 00 00 00
	00		 npad	 6
$LL4@GCEventSta@2:

; 1080 : 	{
; 1081 : 		if(iObjUser[i] == true)

  002f0	80 bc 35 64 c5
	ff ff 01	 cmp	 BYTE PTR _iObjUser$[ebp+esi], 1
  002f8	75 15		 jne	 SHORT $LN3@GCEventSta@2

; 1082 : 		{
; 1083 : 			DataSend(i, (LPBYTE)&pMsg, sizeof(pMsg));

  002fa	68 48 01 00 00	 push	 328			; 00000148H
  002ff	8d 85 1c c4 ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp]
  00305	50		 push	 eax
  00306	56		 push	 esi
  00307	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0030c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GCEventSta@2:

; 1078 : 
; 1079 : 	for(int i = OBJ_STARTUSERINDZT; i < OBJMAX; i++)

  0030f	46		 inc	 esi
  00310	81 fe 98 3a 00
	00		 cmp	 esi, 15000		; 00003a98H
  00316	7c d8		 jl	 SHORT $LL4@GCEventSta@2

; 1084 : 		}
; 1085 : 	}
; 1086 : }

  00318	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0031b	33 cd		 xor	 ecx, ebp
  0031d	5e		 pop	 esi
  0031e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00323	8b e5		 mov	 esp, ebp
  00325	5d		 pop	 ebp
  00326	c3		 ret	 0
?GCEventStatistic@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCEventStatistic
_TEXT	ENDS
PUBLIC	__real@4049000000000000
PUBLIC	__real@00000000
PUBLIC	?PlayerTrap@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::PlayerTrap
EXTRN	?GCItemDurSend@@YAXHEEE@Z:PROC			; GCItemDurSend
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
EXTRN	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjSearchActiveEffect
EXTRN	?gObjLifeCheck@@YAXPAUOBJECTSTRUCT@@0HHHHGH@Z:PROC ; gObjLifeCheck
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?PlayerTrap@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
tv353 = -24						; size = 4
tv351 = -24						; size = 4
_this$ = -20						; size = 4
tv378 = -16						; size = 4
_aIndex$213063 = -12					; size = 4
_n$213081 = -8						; size = 4
tv356 = -2						; size = 2
?PlayerTrap@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::PlayerTrap, COMDAT
; _this$ = ecx

; 1091 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1092 : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00009	bf 00 a7 40 09	 mov	 edi, 155232000		; 0940a700H
  0000e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00011	c7 45 f4 b0 36
	00 00		 mov	 DWORD PTR _aIndex$213063[ebp], 14000 ; 000036b0H
  00018	89 7d f0	 mov	 DWORD PTR tv378[ebp], edi
  0001b	eb 03 8d 49 00	 npad	 5
$LL30@PlayerTrap:

; 1093 : 	{
; 1094 : 		LPOBJ lpUser = &gObj[aIndex];

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00025	d9 ee		 fldz

; 1095 : 
; 1096 : 		if(lpUser->Connected >= PLAYER_PLAYING)

  00027	83 7c 07 04 03	 cmp	 DWORD PTR [edi+eax+4], 3
  0002c	8d 34 07	 lea	 esi, DWORD PTR [edi+eax]
  0002f	0f 8c ae 01 00
	00		 jl	 $LN50@PlayerTrap

; 1097 : 		{
; 1098 : 			if((lpUser->X >= 66 && lpUser->X <= 69) && (lpUser->Y >= 47 && lpUser->Y <= 51)  ||
; 1099 : 			   (lpUser->X >= 17 && lpUser->X <= 21) && (lpUser->Y >= 47 && lpUser->Y <= 51))

  00035	0f b7 86 44 01
	00 00		 movzx	 eax, WORD PTR [esi+324]
  0003c	66 83 f8 42	 cmp	 ax, 66			; 00000042H
  00040	7c 19		 jl	 SHORT $LN31@PlayerTrap
  00042	66 83 f8 45	 cmp	 ax, 69			; 00000045H
  00046	7f 13		 jg	 SHORT $LN31@PlayerTrap
  00048	0f b7 8e 46 01
	00 00		 movzx	 ecx, WORD PTR [esi+326]
  0004f	66 83 f9 2f	 cmp	 cx, 47			; 0000002fH
  00053	7c 06		 jl	 SHORT $LN31@PlayerTrap
  00055	66 83 f9 33	 cmp	 cx, 51			; 00000033H
  00059	7e 1f		 jle	 SHORT $LN17@PlayerTrap
$LN31@PlayerTrap:
  0005b	66 83 f8 11	 cmp	 ax, 17			; 00000011H
  0005f	7c 5d		 jl	 SHORT $LN61@PlayerTrap
  00061	66 83 f8 15	 cmp	 ax, 21			; 00000015H
  00065	7f 57		 jg	 SHORT $LN61@PlayerTrap
  00067	0f b7 8e 46 01
	00 00		 movzx	 ecx, WORD PTR [esi+326]
  0006e	66 83 f9 2f	 cmp	 cx, 47			; 0000002fH
  00072	7c 4a		 jl	 SHORT $LN61@PlayerTrap
  00074	66 83 f9 33	 cmp	 cx, 51			; 00000033H
  00078	7f 44		 jg	 SHORT $LN61@PlayerTrap
$LN17@PlayerTrap:

; 1100 : 			{
; 1101 : 				//lpUser->Life = 0;
; 1102 : 				//lpUser->Live = 0;
; 1103 : 				//lpUser->m_State = 4;
; 1104 : 				//lpUser->RegenTime = GetTickCount();
; 1105 : 				//lpUser->DieRegen = 1;
; 1106 : 				//lpUser->PathCount = 0;
; 1107 : 
; 1108 : 				//if(lpUser->Teleport == 1)
; 1109 : 				//{
; 1110 : 				//	lpUser->Teleport = 0;
; 1111 : 				//}
; 1112 : 
; 1113 : 				//GCDiePlayerSend(lpUser,lpUser->m_Index,0,0);
; 1114 : 
; 1115 : 				if(lpUser->Life > 0)

  0007a	d8 96 fc 00 00
	00		 fcom	 DWORD PTR [esi+252]
  00080	df e0		 fnstsw	 ax
  00082	f6 c4 05	 test	 ah, 5
  00085	0f 8a 58 01 00
	00		 jp	 $LN50@PlayerTrap

; 1116 : 				{
; 1117 : 					lpUser->Life = 0.0;
; 1118 : 
; 1119 : 					gObjLifeCheck(lpUser, lpUser, 0, 0, 0, 0, 0, 0);

  0008b	6a 00		 push	 0
  0008d	d9 9e fc 00 00
	00		 fstp	 DWORD PTR [esi+252]
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 00		 push	 0
  00099	6a 00		 push	 0
  0009b	6a 00		 push	 0
  0009d	56		 push	 esi
  0009e	56		 push	 esi
  0009f	e8 00 00 00 00	 call	 ?gObjLifeCheck@@YAXPAUOBJECTSTRUCT@@0HHHHGH@Z ; gObjLifeCheck

; 1120 : 
; 1121 : 					lpUser->m_TvTDie++;
; 1122 : 
; 1123 : 					GCUserKillCount(aIndex);

  000a4	8b 4d f4	 mov	 ecx, DWORD PTR _aIndex$213063[ebp]
  000a7	ff 86 1c 29 00
	00		 inc	 DWORD PTR [esi+10524]
  000ad	83 c4 20	 add	 esp, 32			; 00000020H
  000b0	51		 push	 ecx
  000b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	e8 00 00 00 00	 call	 ?GCUserKillCount@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCUserKillCount

; 1124 : 				}
; 1125 : 			}
; 1126 : 			else if(lpUser->X == 54 && lpUser->Y == 27 ||

  000b9	e9 27 01 00 00	 jmp	 $LN21@PlayerTrap
$LN61@PlayerTrap:

; 1097 : 		{
; 1098 : 			if((lpUser->X >= 66 && lpUser->X <= 69) && (lpUser->Y >= 47 && lpUser->Y <= 51)  ||
; 1099 : 			   (lpUser->X >= 17 && lpUser->X <= 21) && (lpUser->Y >= 47 && lpUser->Y <= 51))

  000be	dd d8		 fstp	 ST(0)

; 1127 : 					lpUser->X == 52 && lpUser->Y == 71 ||
; 1128 : 					lpUser->X == 33 && lpUser->Y == 71 ||
; 1129 : 					lpUser->X == 33 && lpUser->Y == 27)

  000c0	66 83 f8 36	 cmp	 ax, 54			; 00000036H
  000c4	75 0a		 jne	 SHORT $LN33@PlayerTrap
  000c6	66 83 be 46 01
	00 00 1b	 cmp	 WORD PTR [esi+326], 27	; 0000001bH
  000ce	74 3b		 je	 SHORT $LN11@PlayerTrap
$LN33@PlayerTrap:
  000d0	66 83 f8 34	 cmp	 ax, 52			; 00000034H
  000d4	75 0a		 jne	 SHORT $LN34@PlayerTrap
  000d6	66 83 be 46 01
	00 00 47	 cmp	 WORD PTR [esi+326], 71	; 00000047H
  000de	74 2b		 je	 SHORT $LN11@PlayerTrap
$LN34@PlayerTrap:
  000e0	66 83 f8 21	 cmp	 ax, 33			; 00000021H
  000e4	0f 85 fb 00 00
	00		 jne	 $LN21@PlayerTrap
  000ea	66 83 be 46 01
	00 00 47	 cmp	 WORD PTR [esi+326], 71	; 00000047H
  000f2	74 17		 je	 SHORT $LN11@PlayerTrap
  000f4	66 3b c0	 cmp	 ax, ax
  000f7	0f 85 e8 00 00
	00		 jne	 $LN21@PlayerTrap
  000fd	66 83 be 46 01
	00 00 1b	 cmp	 WORD PTR [esi+326], 27	; 0000001bH
  00105	0f 85 da 00 00
	00		 jne	 $LN21@PlayerTrap
$LN11@PlayerTrap:

; 1130 : 			{
; 1131 : 				if(gObjSearchActiveEffect(lpUser, AT_STUN) == FALSE)

  0010b	6a 3d		 push	 61			; 0000003dH
  0010d	56		 push	 esi
  0010e	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  00113	83 c4 08	 add	 esp, 8
  00116	84 c0		 test	 al, al
  00118	0f 85 c7 00 00
	00		 jne	 $LN21@PlayerTrap

; 1132 : 				{
; 1133 : 					gObjApplyBuffEffectDuration(lpUser, AT_STUN, 0, 0, 0, 0, 2);

  0011e	6a 02		 push	 2
  00120	33 ff		 xor	 edi, edi
  00122	57		 push	 edi
  00123	57		 push	 edi
  00124	57		 push	 edi
  00125	57		 push	 edi
  00126	6a 3d		 push	 61			; 0000003dH
  00128	56		 push	 esi
  00129	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  0012e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1134 : 
; 1135 : 					for(int n = 0; n < INVETORY_WEAR_SIZE; n++)

  00131	89 7d f8	 mov	 DWORD PTR _n$213081[ebp], edi
  00134	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL6@PlayerTrap:

; 1136 : 					{
; 1137 : 						if(lpUser->pInventory[n].IsItem() == TRUE)

  00140	8b 8e 24 0e 00
	00		 mov	 ecx, DWORD PTR [esi+3620]
  00146	03 cf		 add	 ecx, edi
  00148	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0014d	83 f8 01	 cmp	 eax, 1
  00150	75 77		 jne	 SHORT $LN5@PlayerTrap

; 1138 : 						{
; 1139 : 							if((int)lpUser->pInventory[n].m_Durability > 1)

  00152	8b 96 24 0e 00
	00		 mov	 edx, DWORD PTR [esi+3620]
  00158	d9 44 17 24	 fld	 DWORD PTR [edi+edx+36]
  0015c	8d 5c 17 24	 lea	 ebx, DWORD PTR [edi+edx+36]
  00160	e8 00 00 00 00	 call	 __ftol2_sse
  00165	83 f8 01	 cmp	 eax, 1
  00168	7e 5f		 jle	 SHORT $LN5@PlayerTrap

; 1140 : 							{
; 1141 : 								lpUser->pInventory[n].m_Durability -= 50;

  0016a	d9 03		 fld	 DWORD PTR [ebx]
  0016c	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@4049000000000000
  00172	d9 1b		 fstp	 DWORD PTR [ebx]

; 1142 : 
; 1143 : 								if(lpUser->pInventory[n].m_Durability < 0)

  00174	8b 86 24 0e 00
	00		 mov	 eax, DWORD PTR [esi+3620]
  0017a	d9 ee		 fldz
  0017c	8d 4c 07 24	 lea	 ecx, DWORD PTR [edi+eax+36]
  00180	d8 11		 fcom	 DWORD PTR [ecx]
  00182	df e0		 fnstsw	 ax
  00184	f6 c4 41	 test	 ah, 65			; 00000041H
  00187	75 04		 jne	 SHORT $LN63@PlayerTrap

; 1144 : 								{
; 1145 : 									lpUser->pInventory[n].m_Durability = 0;

  00189	d9 19		 fstp	 DWORD PTR [ecx]
  0018b	eb 02		 jmp	 SHORT $LN1@PlayerTrap
$LN63@PlayerTrap:
  0018d	dd d8		 fstp	 ST(0)
$LN1@PlayerTrap:

; 1146 : 								}
; 1147 : 
; 1148 : 								GCItemDurSend(lpUser->m_Index, (BYTE)n, (BYTE)lpUser->pInventory[n].m_Durability, 1);

  0018f	8b 8e 24 0e 00
	00		 mov	 ecx, DWORD PTR [esi+3620]
  00195	d9 7d fe	 fnstcw	 WORD PTR tv356[ebp]
  00198	0f b7 45 fe	 movzx	 eax, WORD PTR tv356[ebp]
  0019c	d9 44 0f 24	 fld	 DWORD PTR [edi+ecx+36]
  001a0	8b 4d f8	 mov	 ecx, DWORD PTR _n$213081[ebp]
  001a3	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001a8	89 45 e8	 mov	 DWORD PTR tv353[ebp], eax
  001ab	6a 01		 push	 1
  001ad	d9 6d e8	 fldcw	 WORD PTR tv353[ebp]
  001b0	db 5d e8	 fistp	 DWORD PTR tv351[ebp]
  001b3	8a 55 e8	 mov	 dl, BYTE PTR tv351[ebp]
  001b6	0f b6 c2	 movzx	 eax, dl
  001b9	8b 16		 mov	 edx, DWORD PTR [esi]
  001bb	d9 6d fe	 fldcw	 WORD PTR tv356[ebp]
  001be	50		 push	 eax
  001bf	51		 push	 ecx
  001c0	52		 push	 edx
  001c1	e8 00 00 00 00	 call	 ?GCItemDurSend@@YAXHEEE@Z ; GCItemDurSend
  001c6	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@PlayerTrap:

; 1134 : 
; 1135 : 					for(int n = 0; n < INVETORY_WEAR_SIZE; n++)

  001c9	ff 45 f8	 inc	 DWORD PTR _n$213081[ebp]
  001cc	81 c7 d4 00 00
	00		 add	 edi, 212		; 000000d4H
  001d2	81 ff f0 09 00
	00		 cmp	 edi, 2544		; 000009f0H
  001d8	0f 8c 62 ff ff
	ff		 jl	 $LL6@PlayerTrap
  001de	8b 7d f0	 mov	 edi, DWORD PTR tv378[ebp]
  001e1	eb 02		 jmp	 SHORT $LN21@PlayerTrap
$LN50@PlayerTrap:

; 1100 : 			{
; 1101 : 				//lpUser->Life = 0;
; 1102 : 				//lpUser->Live = 0;
; 1103 : 				//lpUser->m_State = 4;
; 1104 : 				//lpUser->RegenTime = GetTickCount();
; 1105 : 				//lpUser->DieRegen = 1;
; 1106 : 				//lpUser->PathCount = 0;
; 1107 : 
; 1108 : 				//if(lpUser->Teleport == 1)
; 1109 : 				//{
; 1110 : 				//	lpUser->Teleport = 0;
; 1111 : 				//}
; 1112 : 
; 1113 : 				//GCDiePlayerSend(lpUser,lpUser->m_Index,0,0);
; 1114 : 
; 1115 : 				if(lpUser->Life > 0)

  001e3	dd d8		 fstp	 ST(0)
$LN21@PlayerTrap:

; 1092 : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  001e5	ff 45 f4	 inc	 DWORD PTR _aIndex$213063[ebp]
  001e8	81 c7 50 2b 00
	00		 add	 edi, 11088		; 00002b50H
  001ee	89 7d f0	 mov	 DWORD PTR tv378[ebp], edi
  001f1	81 ff 80 d7 e9
	09		 cmp	 edi, 166320000		; 09e9d780H
  001f7	0f 8c 23 fe ff
	ff		 jl	 $LL30@PlayerTrap
  001fd	5f		 pop	 edi
  001fe	5e		 pop	 esi
  001ff	5b		 pop	 ebx

; 1149 : 							}
; 1150 : 						}
; 1151 : 					}
; 1152 : 				}
; 1153 : 			}
; 1154 : 		}
; 1155 : 	}
; 1156 : }

  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c3		 ret	 0
?PlayerTrap@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::PlayerTrap
_TEXT	ENDS
PUBLIC	??0CTeamVsTeam@@QAE@XZ				; CTeamVsTeam::CTeamVsTeam
; Function compile flags: /Ogtp
;	COMDAT ??0CTeamVsTeam@@QAE@XZ
_TEXT	SEGMENT
??0CTeamVsTeam@@QAE@XZ PROC				; CTeamVsTeam::CTeamVsTeam, COMDAT
; _this$ = ecx

; 20   : 	this->Init();

  00000	e8 00 00 00 00	 call	 ?Init@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::Init

; 21   : }

  00005	8b c1		 mov	 eax, ecx
  00007	c3		 ret	 0
??0CTeamVsTeam@@QAE@XZ ENDP				; CTeamVsTeam::CTeamVsTeam
_TEXT	ENDS
PUBLIC	??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@ ; `string'
PUBLIC	??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@ ; `string'
PUBLIC	??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@ ; `string'
PUBLIC	?StatusClose@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::StatusClose
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	?GCPkLevelSend@@YAXHE@Z:PROC			; GCPkLevelSend
;	COMDAT ??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@
CONST	SEGMENT
??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@ DB '[Team vs Team] En'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@
CONST	SEGMENT
??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@ DB '[Tea'
	DB	'm vs Team] GREEN Team Win', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@
CONST	SEGMENT
??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@ DB '[Team'
	DB	' vs Team] BLUE Team Win', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?StatusClose@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StatusClose@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::StatusClose, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 270  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  0000a	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  0000f	bb 00 a7 40 09	 mov	 ebx, 155232000		; 0940a700H
  00014	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL12@StatusClos:

; 271  : 	{
; 272  : 		LPOBJ lpUser = &gObj[aIndex];

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 273  : 
; 274  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00025	83 7c 03 04 03	 cmp	 DWORD PTR [ebx+eax+4], 3
  0002a	8d 34 03	 lea	 esi, DWORD PTR [ebx+eax]
  0002d	7c 25		 jl	 SHORT $LN11@StatusClos

; 275  : 		{
; 276  : 			continue;
; 277  : 		}
; 278  : 
; 279  : 		if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  0002f	80 be 49 01 00
	00 52		 cmp	 BYTE PTR [esi+329], 82	; 00000052H
  00036	75 1c		 jne	 SHORT $LN11@StatusClos

; 280  : 		{
; 281  : 			continue;
; 282  : 		}
; 283  : 
; 284  : 		this->GCMapAttribute(aIndex, 0);

  00038	6a 00		 push	 0
  0003a	57		 push	 edi
  0003b	e8 00 00 00 00	 call	 ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ; CTeamVsTeam::GCMapAttribute

; 285  : 		GCPkLevelSend(aIndex, lpUser->m_PK_Level);

  00040	0f b6 8e 3d 01
	00 00		 movzx	 ecx, BYTE PTR [esi+317]
  00047	51		 push	 ecx
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c4 08	 add	 esp, 8
$LN11@StatusClos:

; 270  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00054	81 c3 50 2b 00
	00		 add	 ebx, 11088		; 00002b50H
  0005a	47		 inc	 edi
  0005b	81 fb 80 d7 e9
	09		 cmp	 ebx, 166320000		; 09e9d780H
  00061	7c bd		 jl	 SHORT $LL12@StatusClos

; 286  : 	}
; 287  : 
; 288  : 	if(this->m_TeamScore1 > this->m_TeamScore2)

  00063	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00066	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00069	3b c2		 cmp	 eax, edx
  0006b	7d 11		 jge	 SHORT $LN25@StatusClos

; 289  : 	{
; 290  : 		AllSendServerMsg("[Team vs Team] BLUE Team Win");

  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@
  00072	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00077	83 c4 04	 add	 esp, 4

; 291  : 		this->PlayerReward(eEVENT_TVT_TEAM_1);

  0007a	6a 01		 push	 1
  0007c	eb 11		 jmp	 SHORT $LN26@StatusClos
$LN25@StatusClos:

; 292  : 	}
; 293  : 	else if(this->m_TeamScore2 > this->m_TeamScore1)

  0007e	7e 1a		 jle	 SHORT $LN5@StatusClos

; 294  : 	{
; 295  : 		AllSendServerMsg("[Team vs Team] GREEN Team Win");

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@
  00085	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0008a	83 c4 04	 add	 esp, 4

; 296  : 		this->PlayerReward(eEVENT_TVT_TEAM_2);

  0008d	6a 02		 push	 2
$LN26@StatusClos:
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?PlayerReward@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::PlayerReward
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN5@StatusClos:

; 297  : 	}	
; 298  : 
; 299  : 	this->GDEventInfo();

  0009a	e8 00 00 00 00	 call	 ?GDEventInfo@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GDEventInfo

; 300  : 	this->GCEventStatistic();

  0009f	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  000a2	8b cf		 mov	 ecx, edi
  000a4	e8 00 00 00 00	 call	 ?GCEventStatistic@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventStatistic
  000a9	b8 f0 28 41 09	 mov	 eax, 155265264		; 094128f0H
  000ae	8b ff		 npad	 2
$LL4@StatusClos:

; 303  : 	{
; 304  : 		LPOBJ lpUser = &gObj[aIndex];

  000b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000b6	8d 8c 10 10 7e
	ff ff		 lea	 ecx, DWORD PTR [eax+edx-33264]

; 305  : 
; 306  : 		if(lpUser->Connected < PLAYER_PLAYING)

  000bd	be 03 00 00 00	 mov	 esi, 3

; 307  : 		{
; 308  : 			continue;
; 309  : 		}
; 310  : 
; 311  : 		lpUser->m_TvTTeam = 0;

  000c2	33 d2		 xor	 edx, edx
  000c4	39 71 04	 cmp	 DWORD PTR [ecx+4], esi
  000c7	7c 12		 jl	 SHORT $LN3@StatusClos
  000c9	89 91 14 29 00
	00		 mov	 DWORD PTR [ecx+10516], edx

; 312  : 		lpUser->m_TvTKill = 0;

  000cf	89 91 18 29 00
	00		 mov	 DWORD PTR [ecx+10520], edx

; 313  : 		lpUser->m_TvTDie = 0;

  000d5	89 91 1c 29 00
	00		 mov	 DWORD PTR [ecx+10524], edx
$LN3@StatusClos:

; 305  : 
; 306  : 		if(lpUser->Connected < PLAYER_PLAYING)

  000db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e1	39 b4 08 64 a9
	ff ff		 cmp	 DWORD PTR [eax+ecx-22172], esi
  000e8	8d 8c 08 60 a9
	ff ff		 lea	 ecx, DWORD PTR [eax+ecx-22176]
  000ef	7c 12		 jl	 SHORT $LN20@StatusClos

; 307  : 		{
; 308  : 			continue;
; 309  : 		}
; 310  : 
; 311  : 		lpUser->m_TvTTeam = 0;

  000f1	89 91 14 29 00
	00		 mov	 DWORD PTR [ecx+10516], edx

; 312  : 		lpUser->m_TvTKill = 0;

  000f7	89 91 18 29 00
	00		 mov	 DWORD PTR [ecx+10520], edx

; 313  : 		lpUser->m_TvTDie = 0;

  000fd	89 91 1c 29 00
	00		 mov	 DWORD PTR [ecx+10524], edx
$LN20@StatusClos:

; 305  : 
; 306  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00109	39 b4 08 b4 d4
	ff ff		 cmp	 DWORD PTR [eax+ecx-11084], esi
  00110	8d 8c 08 b0 d4
	ff ff		 lea	 ecx, DWORD PTR [eax+ecx-11088]
  00117	7c 12		 jl	 SHORT $LN21@StatusClos

; 307  : 		{
; 308  : 			continue;
; 309  : 		}
; 310  : 
; 311  : 		lpUser->m_TvTTeam = 0;

  00119	89 91 14 29 00
	00		 mov	 DWORD PTR [ecx+10516], edx

; 312  : 		lpUser->m_TvTKill = 0;

  0011f	89 91 18 29 00
	00		 mov	 DWORD PTR [ecx+10520], edx

; 313  : 		lpUser->m_TvTDie = 0;

  00125	89 91 1c 29 00
	00		 mov	 DWORD PTR [ecx+10524], edx
$LN21@StatusClos:

; 303  : 	{
; 304  : 		LPOBJ lpUser = &gObj[aIndex];

  0012b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00131	03 c8		 add	 ecx, eax

; 305  : 
; 306  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00133	39 71 04	 cmp	 DWORD PTR [ecx+4], esi
  00136	7c 12		 jl	 SHORT $LN22@StatusClos

; 307  : 		{
; 308  : 			continue;
; 309  : 		}
; 310  : 
; 311  : 		lpUser->m_TvTTeam = 0;

  00138	89 91 14 29 00
	00		 mov	 DWORD PTR [ecx+10516], edx

; 312  : 		lpUser->m_TvTKill = 0;

  0013e	89 91 18 29 00
	00		 mov	 DWORD PTR [ecx+10520], edx

; 313  : 		lpUser->m_TvTDie = 0;

  00144	89 91 1c 29 00
	00		 mov	 DWORD PTR [ecx+10524], edx
$LN22@StatusClos:

; 305  : 
; 306  : 		if(lpUser->Connected < PLAYER_PLAYING)

  0014a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00150	39 b4 08 54 2b
	00 00		 cmp	 DWORD PTR [eax+ecx+11092], esi
  00157	8d 8c 08 50 2b
	00 00		 lea	 ecx, DWORD PTR [eax+ecx+11088]
  0015e	7c 12		 jl	 SHORT $LN23@StatusClos

; 307  : 		{
; 308  : 			continue;
; 309  : 		}
; 310  : 
; 311  : 		lpUser->m_TvTTeam = 0;

  00160	89 91 14 29 00
	00		 mov	 DWORD PTR [ecx+10516], edx

; 312  : 		lpUser->m_TvTKill = 0;

  00166	89 91 18 29 00
	00		 mov	 DWORD PTR [ecx+10520], edx

; 313  : 		lpUser->m_TvTDie = 0;

  0016c	89 91 1c 29 00
	00		 mov	 DWORD PTR [ecx+10524], edx
$LN23@StatusClos:

; 301  : 
; 302  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00172	05 90 d8 00 00	 add	 eax, 55440		; 0000d890H
  00177	3d 70 59 ea 09	 cmp	 eax, 166353264		; 09ea5970H
  0017c	0f 8c 2e ff ff
	ff		 jl	 $LL4@StatusClos

; 314  : 	}
; 315  : 
; 316  : 	this->m_TeamScore1 = 0;

  00182	33 c0		 xor	 eax, eax

; 317  : 	this->m_TeamScore2 = 0;
; 318  : 
; 319  : 	AllSendServerMsg("[Team vs Team] End");

  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@
  00189	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0018c	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  0018f	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00194	83 c4 04	 add	 esp, 4
  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx

; 320  : }

  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c3		 ret	 0
?StatusClose@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::StatusClose
_TEXT	ENDS
PUBLIC	??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@ ; `string'
PUBLIC	?StatusStart@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::StatusStart
EXTRN	?ZtUserVieweport@@YAXH@Z:PROC			; ZtUserVieweport
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
;	COMDAT ??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@
CONST	SEGMENT
??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@ DB '[Team vs Team] '
	DB	'Start', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?StatusStart@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
tv256 = -4						; size = 4
?StatusStart@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::StatusStart, COMDAT
; _this$ = ecx

; 329  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 330  : 	AllSendServerMsg("[Team vs Team] Start");

  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00013	83 c4 04	 add	 esp, 4

; 331  : 	this->m_TickCount = GetTickCount();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001c	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 332  : 	this->m_TickRemain = 60000 * this->m_EventDurationTime;

  0001f	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00022	69 c0 60 ea 00
	00		 imul	 eax, 60000		; 0000ea60H
  00028	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0002b	b8 00 a7 40 09	 mov	 eax, 155232000		; 0940a700H

; 333  : 
; 334  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  00030	bf b0 36 00 00	 mov	 edi, 14000		; 000036b0H
  00035	89 45 fc	 mov	 DWORD PTR tv256[ebp], eax
  00038	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL8@StatusStar:

; 335  : 	{
; 336  : 		LPOBJ lpUser = &gObj[aIndex];

  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 337  : 
; 338  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00046	83 7c 08 04 03	 cmp	 DWORD PTR [eax+ecx+4], 3
  0004b	8d 1c 08	 lea	 ebx, DWORD PTR [eax+ecx]
  0004e	0f 8c 9f 00 00
	00		 jl	 $LN7@StatusStar

; 339  : 		{
; 340  : 			continue;
; 341  : 		}
; 342  : 
; 343  : 		if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00054	80 bb 49 01 00
	00 52		 cmp	 BYTE PTR [ebx+329], 82	; 00000052H
  0005b	0f 85 92 00 00
	00		 jne	 $LN7@StatusStar

; 344  : 		{
; 345  : 			continue;
; 346  : 		}
; 347  : 
; 348  : 		this->GCTeam(aIndex);

  00061	57		 push	 edi
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?GCTeam@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCTeam

; 349  : 
; 350  : 		this->GCEventTimer(aIndex);

  00069	57		 push	 edi
  0006a	8b ce		 mov	 ecx, esi
  0006c	e8 00 00 00 00	 call	 ?GCEventTimer@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCEventTimer

; 351  : 		
; 352  : #if(NEW_UPDATE_1019)
; 353  : 
; 354  : 		if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  00071	8b 9b 14 29 00
	00		 mov	 ebx, DWORD PTR [ebx+10516]
  00077	83 fb 01	 cmp	 ebx, 1
  0007a	75 27		 jne	 SHORT $LN3@StatusStar

; 355  : 		{
; 356  : 			gObjTeleport(aIndex, TEAMVSTEAM_MAP, this->m_TeamX1+(rand()%6-3), this->m_TeamY1+(rand()%6-3));

  0007c	e8 00 00 00 00	 call	 _rand
  00081	99		 cdq
  00082	b9 06 00 00 00	 mov	 ecx, 6
  00087	f7 f9		 idiv	 ecx
  00089	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
  0008c	8d 4c 02 fd	 lea	 ecx, DWORD PTR [edx+eax-3]
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 _rand
  00096	99		 cdq
  00097	b9 06 00 00 00	 mov	 ecx, 6
  0009c	f7 f9		 idiv	 ecx
  0009e	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  000a1	eb 2a		 jmp	 SHORT $LN14@StatusStar
$LN3@StatusStar:

; 357  : 		}
; 358  : 		else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  000a3	83 fb 02	 cmp	 ebx, 2
  000a6	75 35		 jne	 SHORT $LN1@StatusStar

; 359  : 		{
; 360  : 			gObjTeleport(aIndex, TEAMVSTEAM_MAP, this->m_TeamX2+(rand()%6-3), this->m_TeamY2+(rand()%6-3));

  000a8	e8 00 00 00 00	 call	 _rand
  000ad	99		 cdq
  000ae	b9 06 00 00 00	 mov	 ecx, 6
  000b3	f7 f9		 idiv	 ecx
  000b5	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  000b8	8d 4c 02 fd	 lea	 ecx, DWORD PTR [edx+eax-3]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 _rand
  000c2	99		 cdq
  000c3	b9 06 00 00 00	 mov	 ecx, 6
  000c8	f7 f9		 idiv	 ecx
  000ca	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
$LN14@StatusStar:
  000cd	8d 4c 02 fd	 lea	 ecx, DWORD PTR [edx+eax-3]
  000d1	51		 push	 ecx
  000d2	6a 52		 push	 82			; 00000052H
  000d4	57		 push	 edi
  000d5	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  000da	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@StatusStar:

; 361  : 		}
; 362  : 
; 363  : #else
; 364  : 
; 365  : 		if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)
; 366  : 		{
; 367  : 			gObjTeleport(aIndex, TEAMVSTEAM_MAP, TEAMVSTEAM_X1+(rand()%6-3), TEAMVSTEAM_Y1+(rand()%6-3));
; 368  : 		}
; 369  : 		else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)
; 370  : 		{
; 371  : 			gObjTeleport(aIndex, TEAMVSTEAM_MAP, TEAMVSTEAM_X2+(rand()%6-3), TEAMVSTEAM_Y2+(rand()%6-3));
; 372  : 		}
; 373  : 
; 374  : #endif
; 375  : 
; 376  : 		this->GCMapAttribute(aIndex, 1);

  000dd	6a 01		 push	 1
  000df	57		 push	 edi
  000e0	8b ce		 mov	 ecx, esi
  000e2	e8 00 00 00 00	 call	 ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ; CTeamVsTeam::GCMapAttribute

; 377  : 		ZtUserVieweport(aIndex);

  000e7	57		 push	 edi
  000e8	e8 00 00 00 00	 call	 ?ZtUserVieweport@@YAXH@Z ; ZtUserVieweport
  000ed	8b 45 fc	 mov	 eax, DWORD PTR tv256[ebp]
  000f0	83 c4 04	 add	 esp, 4
$LN7@StatusStar:

; 333  : 
; 334  : 	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  000f3	05 50 2b 00 00	 add	 eax, 11088		; 00002b50H
  000f8	47		 inc	 edi
  000f9	89 45 fc	 mov	 DWORD PTR tv256[ebp], eax
  000fc	3d 80 d7 e9 09	 cmp	 eax, 166320000		; 09e9d780H
  00101	0f 8c 39 ff ff
	ff		 jl	 $LL8@StatusStar
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx

; 378  : 	}
; 379  : }

  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
?StatusStart@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::StatusStart
_TEXT	ENDS
PUBLIC	?NpcDialog@CTeamVsTeam@@QAE_NHH@Z		; CTeamVsTeam::NpcDialog
; Function compile flags: /Ogtp
;	COMDAT ?NpcDialog@CTeamVsTeam@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NpcDialog@CTeamVsTeam@@QAE_NHH@Z PROC			; CTeamVsTeam::NpcDialog, COMDAT
; _this$ = ecx

; 382  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 383  : 	LPOBJ lpUser = &gObj[aIndex];
; 384  : 	LPOBJ lpNpc = &gObj[aNpcIndex];

  00003	8b 45 0c	 mov	 eax, DWORD PTR _aNpcIndex$[ebp]
  00006	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  0000c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 385  : 
; 386  : 	if(lpNpc->Class == this->m_NpcClass && lpNpc->MapNumber == this->m_NpcMap && lpNpc->X == this->m_NpcX && lpNpc->Y == this->m_NpcY)

  00012	0f b7 90 b8 00
	00 00		 movzx	 edx, WORD PTR [eax+184]
  00019	3b 51 1c	 cmp	 edx, DWORD PTR [ecx+28]
  0001c	75 33		 jne	 SHORT $LN1@NpcDialog
  0001e	0f b6 90 49 01
	00 00		 movzx	 edx, BYTE PTR [eax+329]
  00025	3b 51 20	 cmp	 edx, DWORD PTR [ecx+32]
  00028	75 27		 jne	 SHORT $LN1@NpcDialog
  0002a	0f bf 90 44 01
	00 00		 movsx	 edx, WORD PTR [eax+324]
  00031	3b 51 24	 cmp	 edx, DWORD PTR [ecx+36]
  00034	75 1b		 jne	 SHORT $LN1@NpcDialog
  00036	0f bf 80 46 01
	00 00		 movsx	 eax, WORD PTR [eax+326]
  0003d	3b 41 28	 cmp	 eax, DWORD PTR [ecx+40]
  00040	75 0f		 jne	 SHORT $LN1@NpcDialog

; 387  : 	{
; 388  : 		//if(!this->CheckStatus(eEVENT_TEAMVSTEAM_WAIT))
; 389  : 		//{
; 390  : 		//	return true;
; 391  : 		//}
; 392  : 
; 393  : 		//if(this->m_MinReset > lpUser->Reset)
; 394  : 		//{
; 395  : 		//	MsgOutput(aIndex, "[Team Vs Team] Min reset %d", this->m_MinReset);
; 396  : 		//	return true;
; 397  : 		//}
; 398  : 
; 399  : 		this->GCOpenWindow(aIndex);

  00042	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?GCOpenWindow@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCOpenWindow

; 400  : 		return true;

  0004b	b0 01		 mov	 al, 1

; 404  : }

  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
$LN1@NpcDialog:

; 401  : 	}
; 402  : 
; 403  : 	return false;

  00051	32 c0		 xor	 al, al

; 404  : }

  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?NpcDialog@CTeamVsTeam@@QAE_NHH@Z ENDP			; CTeamVsTeam::NpcDialog
_TEXT	ENDS
PUBLIC	?PlayerKill@CTeamVsTeam@@QAE_NHH@Z		; CTeamVsTeam::PlayerKill
; Function compile flags: /Ogtp
;	COMDAT ?PlayerKill@CTeamVsTeam@@QAE_NHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?PlayerKill@CTeamVsTeam@@QAE_NHH@Z PROC			; CTeamVsTeam::PlayerKill, COMDAT
; _this$ = ecx

; 460  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 461  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00004	6a 02		 push	 2
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  0000d	84 c0		 test	 al, al
  0000f	75 07		 jne	 SHORT $LN11@PlayerKill
$LN9@PlayerKill:

; 462  : 	{
; 463  : 		return false;

  00011	32 c0		 xor	 al, al
  00013	5e		 pop	 esi

; 507  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
$LN11@PlayerKill:

; 464  : 	}
; 465  : 
; 466  : 	if(!OBJMAX_RANGE(aIndex) || !OBJMAX_RANGE(aTargetIndex))

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0001b	85 c9		 test	 ecx, ecx
  0001d	78 f2		 js	 SHORT $LN9@PlayerKill
  0001f	33 c0		 xor	 eax, eax
  00021	81 f9 97 3a 00
	00		 cmp	 ecx, 14999		; 00003a97H
  00027	0f 9e c0	 setle	 al
  0002a	85 c0		 test	 eax, eax
  0002c	74 e3		 je	 SHORT $LN9@PlayerKill
  0002e	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  00031	85 c0		 test	 eax, eax
  00033	78 dc		 js	 SHORT $LN9@PlayerKill
  00035	33 d2		 xor	 edx, edx
  00037	3d 97 3a 00 00	 cmp	 eax, 14999		; 00003a97H
  0003c	0f 9e c2	 setle	 dl
  0003f	85 d2		 test	 edx, edx
  00041	74 ce		 je	 SHORT $LN9@PlayerKill

; 467  : 	{
; 468  : 		return false;
; 469  : 	}
; 470  : 
; 471  : 	LPOBJ lpUser = &gObj[aIndex];

  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00049	69 c9 50 2b 00
	00		 imul	 ecx, 11088		; 00002b50H

; 472  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  0004f	69 c0 50 2b 00
	00		 imul	 eax, 11088		; 00002b50H
  00055	53		 push	 ebx
  00056	03 ca		 add	 ecx, edx

; 473  : 
; 474  : 	if(lpUser->Type != OBJ_USER || lpTarget->Type != OBJ_USER)

  00058	bb 01 00 00 00	 mov	 ebx, 1
  0005d	03 c2		 add	 eax, edx
  0005f	66 39 59 68	 cmp	 WORD PTR [ecx+104], bx
  00063	75 7a		 jne	 SHORT $LN7@PlayerKill
  00065	66 39 58 68	 cmp	 WORD PTR [eax+104], bx
  00069	75 74		 jne	 SHORT $LN7@PlayerKill

; 477  : 	}
; 478  : 
; 479  : 	if(lpUser->Connected < PLAYER_PLAYING || lpTarget->Connected < PLAYER_PLAYING)

  0006b	ba 03 00 00 00	 mov	 edx, 3
  00070	39 51 04	 cmp	 DWORD PTR [ecx+4], edx
  00073	7c 6a		 jl	 SHORT $LN7@PlayerKill
  00075	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  00078	7c 65		 jl	 SHORT $LN7@PlayerKill

; 480  : 	{
; 481  : 		return false;
; 482  : 	}
; 483  : 
; 484  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  0007a	80 b9 49 01 00
	00 52		 cmp	 BYTE PTR [ecx+329], 82	; 00000052H

; 485  : 	{
; 486  : 		return false;

  00081	75 5c		 jne	 SHORT $LN7@PlayerKill

; 487  : 	}
; 488  : 
; 489  : 	if(lpTarget->m_TvTTeam == eEVENT_TVT_TEAM_1 && lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  00083	8b 90 14 29 00
	00		 mov	 edx, DWORD PTR [eax+10516]
  00089	3b d3		 cmp	 edx, ebx
  0008b	75 1d		 jne	 SHORT $LN3@PlayerKill
  0008d	83 b9 14 29 00
	00 02		 cmp	 DWORD PTR [ecx+10516], 2
  00094	75 14		 jne	 SHORT $LN3@PlayerKill

; 490  : 	{
; 491  : 		lpTarget->m_TvTKill++;

  00096	01 98 18 29 00
	00		 add	 DWORD PTR [eax+10520], ebx

; 492  : 		lpUser->m_TvTDie++;

  0009c	01 99 1c 29 00
	00		 add	 DWORD PTR [ecx+10524], ebx

; 493  : 		this->m_TeamScore1++;	

  000a2	01 5e 08	 add	 DWORD PTR [esi+8], ebx

; 494  : 		GCUserKillCount(lpTarget->m_Index);

  000a5	8b 00		 mov	 eax, DWORD PTR [eax]
  000a7	50		 push	 eax
  000a8	eb 1f		 jmp	 SHORT $LN19@PlayerKill
$LN3@PlayerKill:

; 495  : 	}
; 496  : 	else if(lpTarget->m_TvTTeam == eEVENT_TVT_TEAM_2 && lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  000aa	83 fa 02	 cmp	 edx, 2
  000ad	75 21		 jne	 SHORT $LN1@PlayerKill
  000af	39 99 14 29 00
	00		 cmp	 DWORD PTR [ecx+10516], ebx
  000b5	75 19		 jne	 SHORT $LN1@PlayerKill

; 497  : 	{
; 498  : 		lpTarget->m_TvTKill++;

  000b7	01 98 18 29 00
	00		 add	 DWORD PTR [eax+10520], ebx

; 499  : 		lpUser->m_TvTDie++;

  000bd	01 99 1c 29 00
	00		 add	 DWORD PTR [ecx+10524], ebx

; 500  : 		this->m_TeamScore2++;

  000c3	01 5e 0c	 add	 DWORD PTR [esi+12], ebx

; 501  : 		GCUserKillCount(lpTarget->m_Index);

  000c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c8	51		 push	 ecx
$LN19@PlayerKill:
  000c9	8b ce		 mov	 ecx, esi
  000cb	e8 00 00 00 00	 call	 ?GCUserKillCount@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCUserKillCount
$LN1@PlayerKill:

; 502  : 	}
; 503  : 
; 504  : 	this->GCEventScoreAll();

  000d0	8b ce		 mov	 ecx, esi
  000d2	e8 00 00 00 00	 call	 ?GCEventScoreAll@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventScoreAll

; 505  : 
; 506  : 	return true;

  000d7	8a c3		 mov	 al, bl
  000d9	5b		 pop	 ebx
  000da	5e		 pop	 esi

; 507  : }

  000db	5d		 pop	 ebp
  000dc	c2 08 00	 ret	 8
$LN7@PlayerKill:
  000df	5b		 pop	 ebx

; 475  : 	{
; 476  : 		return false;

  000e0	32 c0		 xor	 al, al
  000e2	5e		 pop	 esi

; 507  : }

  000e3	5d		 pop	 ebp
  000e4	c2 08 00	 ret	 8
?PlayerKill@CTeamVsTeam@@QAE_NHH@Z ENDP			; CTeamVsTeam::PlayerKill
_TEXT	ENDS
PUBLIC	?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::CGTeleportEvent
; Function compile flags: /Ogtp
;	COMDAT ?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$ = -8						; size = 5
_aIndex$ = 8						; size = 4
?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z PROC		; CTeamVsTeam::CGTeleportEvent, COMDAT
; _this$ = ecx

; 705  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 706  : 	if(!this->m_Enable)

  00009	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0000c	74 6d		 je	 SHORT $LN3@CGTeleport

; 707  : 	{
; 708  : 		return;
; 709  : 	}
; 710  : 
; 711  : 	if(!gObjIsConnectedZt(aIndex))

  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 ?gObjIsConnectedZt@@YA_NH@Z ; gObjIsConnectedZt
  00018	83 c4 04	 add	 esp, 4
  0001b	84 c0		 test	 al, al
  0001d	74 5b		 je	 SHORT $LN7@CGTeleport

; 712  : 	{
; 713  : 		return;
; 714  : 	}
; 715  : #if(NEW_UPDATE_1019)
; 716  : 	gObjTeleport(aIndex, TEAMVSTEAM_MAP, this->m_EventX+(rand()%6-3), this->m_EventY+(rand()%6-3));

  0001f	e8 00 00 00 00	 call	 _rand
  00024	99		 cdq
  00025	b9 06 00 00 00	 mov	 ecx, 6
  0002a	f7 f9		 idiv	 ecx
  0002c	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  0002f	8d 4c 02 fd	 lea	 ecx, DWORD PTR [edx+eax-3]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 _rand
  00039	99		 cdq
  0003a	b9 06 00 00 00	 mov	 ecx, 6
  0003f	f7 f9		 idiv	 ecx
  00041	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00044	8d 4c 02 fd	 lea	 ecx, DWORD PTR [edx+eax-3]
  00048	51		 push	 ecx
  00049	6a 52		 push	 82			; 00000052H
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 717  : #else
; 718  : 	gObjTeleport(aIndex, TEAMVSTEAM_MAP, TEAMVSTEAM_X+(rand()%10-5), TEAMVSTEAM_Y+(rand()%10-5));
; 719  : #endif
; 720  : 	this->GCMapAttribute(aIndex, 0);

  00054	6a 00		 push	 0
  00056	57		 push	 edi
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ; CTeamVsTeam::GCMapAttribute

; 721  : 
; 722  : 	PMSG_TVTGC_STATUS pMsg;
; 723  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x80, sizeof(pMsg));
; 724  : 	pMsg.Status = this->m_EventStatus;

  0005e	8a 56 04	 mov	 dl, BYTE PTR [esi+4]

; 725  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00061	6a 05		 push	 5
  00063	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00066	50		 push	 eax
  00067	57		 push	 edi
  00068	c7 45 f8 c1 05
	fb 80		 mov	 DWORD PTR _pMsg$[ebp], -2131032639 ; 80fb05c1H
  0006f	88 55 fc	 mov	 BYTE PTR _pMsg$[ebp+4], dl
  00072	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@CGTeleport:
  0007a	5f		 pop	 edi
$LN3@CGTeleport:
  0007b	5e		 pop	 esi

; 726  : }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z ENDP		; CTeamVsTeam::CGTeleportEvent
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GCViewePortTvT@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCViewePortTvT
EXTRN	?gObjCheckViewport@@YAHHHH@Z:PROC		; gObjCheckViewport
; Function compile flags: /Ogtp
;	COMDAT ?GCViewePortTvT@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
_Vp$212954 = -5060					; size = 16
tv239 = -5044						; size = 4
_this$GSCopy$ = -5040					; size = 4
tv345 = -5036						; size = 4
tv364 = -5032						; size = 4
tv359 = -5028						; size = 8
tv351 = -5028						; size = 8
tv361 = -5024						; size = 4
tv353 = -5024						; size = 4
_datasize$212937 = -5020				; size = 4
_n$212943 = -5016					; size = 4
_aIndex$212931 = -5012					; size = 4
tv365 = -5006						; size = 2
tv356 = -5006						; size = 2
_SendBuff$212936 = -5004				; size = 5000
__$ArrayPad$ = -4					; size = 4
?GCViewePortTvT@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCViewePortTvT, COMDAT
; _this$ = ecx

; 788  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 c4 13 00 00	 mov	 eax, 5060		; 000013c4H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 789  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00017	6a 02		 push	 2

; 861  : 		{
; 862  : 			SendBuff[0]=0xC2;

  00019	89 8d 50 ec ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001f	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00024	84 c0		 test	 al, al
  00026	0f 84 62 02 00
	00		 je	 $LN16@GCViewePor

; 790  : 	{
; 791  : 		return;
; 792  : 	}
; 793  : 
; 794  : 	for (int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  0002c	53		 push	 ebx
  0002d	56		 push	 esi
  0002e	ba b0 36 00 00	 mov	 edx, 14000		; 000036b0H
  00033	b8 00 a7 40 09	 mov	 eax, 155232000		; 0940a700H
  00038	57		 push	 edi
  00039	89 95 6c ec ff
	ff		 mov	 DWORD PTR _aIndex$212931[ebp], edx
  0003f	89 85 58 ec ff
	ff		 mov	 DWORD PTR tv364[ebp], eax
$LL34@GCViewePor:

; 795  : 	{
; 796  : 		if(!OBJMAX_RANGE(aIndex))

  00045	85 d2		 test	 edx, edx
  00047	0f 88 21 02 00
	00		 js	 $LN17@GCViewePor
  0004d	33 c9		 xor	 ecx, ecx
  0004f	81 fa 97 3a 00
	00		 cmp	 edx, 14999		; 00003a97H
  00055	0f 9e c1	 setle	 cl
  00058	85 c9		 test	 ecx, ecx
  0005a	0f 84 0e 02 00
	00		 je	 $LN17@GCViewePor

; 797  : 		{
; 798  : 			continue;
; 799  : 		}
; 800  : 
; 801  : 		BYTE SendBuff[5000];
; 802  : 		int datasize = 6;
; 803  : 		BYTE icount = 0;
; 804  : 
; 805  : 		LPOBJ lpUser = &gObj[aIndex];
; 806  : 
; 807  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00060	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00066	32 db		 xor	 bl, bl
  00068	83 7c 30 04 03	 cmp	 DWORD PTR [eax+esi+4], 3
  0006d	c7 85 64 ec ff
	ff 06 00 00 00	 mov	 DWORD PTR _datasize$212937[ebp], 6
  00077	0f 8c f1 01 00
	00		 jl	 $LN17@GCViewePor

; 808  : 		{
; 809  : 			continue;
; 810  : 		}
; 811  : 
; 812  : #if(OFFLINE_MODE == TRUE)
; 813  : 		if(lpUser->m_OfflineMode == true)

  0007d	80 bc 30 d4 28
	00 00 01	 cmp	 BYTE PTR [eax+esi+10452], 1
  00085	0f 84 e3 01 00
	00		 je	 $LN17@GCViewePor

; 814  : 		{
; 815  : 			continue;
; 816  : 		}
; 817  : #endif
; 818  : 
; 819  : 		if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  0008b	80 bc 30 49 01
	00 00 52	 cmp	 BYTE PTR [eax+esi+329], 82 ; 00000052H
  00093	8d 8c 30 49 01
	00 00		 lea	 ecx, DWORD PTR [eax+esi+329]
  0009a	89 8d 4c ec ff
	ff		 mov	 DWORD PTR tv239[ebp], ecx
  000a0	0f 85 c8 01 00
	00		 jne	 $LN17@GCViewePor

; 820  : 		{
; 821  : 			continue;
; 822  : 		}
; 823  : 
; 824  : 		for(int n = OBJ_STARTUSERINDZT; n < OBJMAX; n++)

  000a6	b8 00 a7 40 09	 mov	 eax, 155232000		; 0940a700H
  000ab	c7 85 68 ec ff
	ff b0 36 00 00	 mov	 DWORD PTR _n$212943[ebp], 14000 ; 000036b0H
  000b5	8d bd 7a ec ff
	ff		 lea	 edi, DWORD PTR _SendBuff$212936[ebp+6]
  000bb	89 85 54 ec ff
	ff		 mov	 DWORD PTR tv345[ebp], eax
  000c1	eb 06		 jmp	 SHORT $LN11@GCViewePor
$LL33@GCViewePor:
  000c3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN11@GCViewePor:

; 825  : 		{
; 826  : 			LPOBJ lpTempObj = &gObj[n];

  000c9	03 f0		 add	 esi, eax

; 827  : 
; 828  : 			if(lpTempObj->Connected == PLAYER_PLAYING)

  000cb	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  000cf	0f 85 15 01 00
	00		 jne	 $LN10@GCViewePor

; 829  : 			{
; 830  : 				if(lpTempObj->m_State == 1 || lpTempObj->m_State == 2)

  000d5	8b 8e 20 02 00
	00		 mov	 ecx, DWORD PTR [esi+544]
  000db	83 f9 01	 cmp	 ecx, 1
  000de	74 09		 je	 SHORT $LN6@GCViewePor
  000e0	83 f9 02	 cmp	 ecx, 2
  000e3	0f 85 01 01 00
	00		 jne	 $LN10@GCViewePor
$LN6@GCViewePor:

; 831  : 				{
; 832  : 					if(lpUser->MapNumber == lpTempObj->MapNumber)

  000e9	8b 8d 4c ec ff
	ff		 mov	 ecx, DWORD PTR tv239[ebp]
  000ef	8a 09		 mov	 cl, BYTE PTR [ecx]
  000f1	3a 8e 49 01 00
	00		 cmp	 cl, BYTE PTR [esi+329]
  000f7	0f 85 ed 00 00
	00		 jne	 $LN10@GCViewePor

; 833  : 					{
; 834  : 						if(gObjCheckViewport(aIndex,lpTempObj->X,lpTempObj->Y) == 1)

  000fd	0f bf 86 46 01
	00 00		 movsx	 eax, WORD PTR [esi+326]
  00104	0f bf 8e 44 01
	00 00		 movsx	 ecx, WORD PTR [esi+324]
  0010b	50		 push	 eax
  0010c	51		 push	 ecx
  0010d	52		 push	 edx
  0010e	e8 00 00 00 00	 call	 ?gObjCheckViewport@@YAHHHH@Z ; gObjCheckViewport
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	83 f8 01	 cmp	 eax, 1
  00119	0f 85 bf 00 00
	00		 jne	 $LN29@GCViewePor

; 835  : 						{
; 836  : 							if(lpTempObj->Type != OBJ_USER) continue;

  0011f	66 39 46 68	 cmp	 WORD PTR [esi+104], ax
  00123	0f 85 b5 00 00
	00		 jne	 $LN29@GCViewePor

; 837  : 
; 838  : 							VIEWEPORT_TVT Vp;
; 839  : 
; 840  : 							Vp.aIndex = n;
; 841  : 							Vp.Life = (DWORD)lpTempObj->Life;

  00129	d9 86 fc 00 00
	00		 fld	 DWORD PTR [esi+252]
  0012f	66 8b 95 68 ec
	ff ff		 mov	 dx, WORD PTR _n$212943[ebp]
  00136	d9 bd 72 ec ff
	ff		 fnstcw	 WORD PTR tv365[ebp]

; 842  : 							Vp.MaxLife = (DWORD)(lpTempObj->MaxLife + lpTempObj->AddLife);
; 843  : 							Vp.TvTTeam = lpTempObj->m_TvTTeam;
; 844  : 
; 845  : 							memcpy(&SendBuff[datasize],&Vp,sizeof(Vp));
; 846  : 							datasize += sizeof(Vp);

  0013c	83 85 64 ec ff
	ff 10		 add	 DWORD PTR _datasize$212937[ebp], 16 ; 00000010H
  00143	0f b7 85 72 ec
	ff ff		 movzx	 eax, WORD PTR tv365[ebp]
  0014a	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0014f	89 85 60 ec ff
	ff		 mov	 DWORD PTR tv361[ebp], eax
  00155	66 89 95 3c ec
	ff ff		 mov	 WORD PTR _Vp$212954[ebp], dx
  0015c	8a 96 14 29 00
	00		 mov	 dl, BYTE PTR [esi+10516]
  00162	d9 ad 60 ec ff
	ff		 fldcw	 WORD PTR tv361[ebp]
  00168	88 95 48 ec ff
	ff		 mov	 BYTE PTR _Vp$212954[ebp+12], dl
  0016e	8b 95 3c ec ff
	ff		 mov	 edx, DWORD PTR _Vp$212954[ebp]

; 847  : 
; 848  : 							icount++;

  00174	fe c3		 inc	 bl
  00176	83 c7 10	 add	 edi, 16			; 00000010H
  00179	df bd 5c ec ff
	ff		 fistp	 QWORD PTR tv359[ebp]
  0017f	8b 8d 5c ec ff
	ff		 mov	 ecx, DWORD PTR tv359[ebp]
  00185	d9 ad 72 ec ff
	ff		 fldcw	 WORD PTR tv365[ebp]
  0018b	db 86 4c 01 00
	00		 fild	 DWORD PTR [esi+332]
  00191	d9 bd 72 ec ff
	ff		 fnstcw	 WORD PTR tv356[ebp]
  00197	d8 86 00 01 00
	00		 fadd	 DWORD PTR [esi+256]
  0019d	0f b7 85 72 ec
	ff ff		 movzx	 eax, WORD PTR tv356[ebp]
  001a4	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001a9	89 85 60 ec ff
	ff		 mov	 DWORD PTR tv353[ebp], eax
  001af	89 57 f0	 mov	 DWORD PTR [edi-16], edx
  001b2	89 4f f4	 mov	 DWORD PTR [edi-12], ecx
  001b5	d9 ad 60 ec ff
	ff		 fldcw	 WORD PTR tv353[ebp]
  001bb	df bd 5c ec ff
	ff		 fistp	 QWORD PTR tv351[ebp]
  001c1	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR tv351[ebp]
  001c7	89 47 f8	 mov	 DWORD PTR [edi-8], eax
  001ca	8b 85 48 ec ff
	ff		 mov	 eax, DWORD PTR _Vp$212954[ebp+12]
  001d0	d9 ad 72 ec ff
	ff		 fldcw	 WORD PTR tv356[ebp]
  001d6	89 47 fc	 mov	 DWORD PTR [edi-4], eax

; 849  : 
; 850  : 							if(icount >= MAX_VIEWPORT-1)

  001d9	80 fb 4a	 cmp	 bl, 74			; 0000004aH
  001dc	73 2a		 jae	 SHORT $LN31@GCViewePor
$LN29@GCViewePor:
  001de	8b 95 6c ec ff
	ff		 mov	 edx, DWORD PTR _aIndex$212931[ebp]
  001e4	8b 85 54 ec ff
	ff		 mov	 eax, DWORD PTR tv345[ebp]
$LN10@GCViewePor:

; 820  : 		{
; 821  : 			continue;
; 822  : 		}
; 823  : 
; 824  : 		for(int n = OBJ_STARTUSERINDZT; n < OBJMAX; n++)

  001ea	ff 85 68 ec ff
	ff		 inc	 DWORD PTR _n$212943[ebp]
  001f0	05 50 2b 00 00	 add	 eax, 11088		; 00002b50H
  001f5	89 85 54 ec ff
	ff		 mov	 DWORD PTR tv345[ebp], eax
  001fb	3d 80 d7 e9 09	 cmp	 eax, 166320000		; 09e9d780H
  00200	0f 8c bd fe ff
	ff		 jl	 $LL33@GCViewePor
  00206	eb 06		 jmp	 SHORT $LN26@GCViewePor
$LN31@GCViewePor:
  00208	8b 95 6c ec ff
	ff		 mov	 edx, DWORD PTR _aIndex$212931[ebp]
$LN26@GCViewePor:

; 851  : 							{
; 852  : 								break;		
; 853  : 							}
; 854  : 						}
; 855  : 					}
; 856  : 				}
; 857  : 			}
; 858  : 		}
; 859  : 
; 860  : 		if(icount > 0)

  0020e	84 db		 test	 bl, bl
  00210	74 44		 je	 SHORT $LN1@GCViewePor

; 863  : 			SendBuff[1]=SET_NUMBERH(datasize);

  00212	8b 85 64 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$212937[ebp]

; 864  : 			SendBuff[2]=SET_NUMBERL(datasize);
; 865  : 			SendBuff[3]=0xFA;
; 866  : 			SendBuff[4]=0x10;
; 867  : 			SendBuff[5]=icount;
; 868  : 
; 869  : 			DataSend(aIndex,SendBuff,datasize);

  00218	50		 push	 eax
  00219	8b c8		 mov	 ecx, eax
  0021b	88 85 76 ec ff
	ff		 mov	 BYTE PTR _SendBuff$212936[ebp+2], al
  00221	8d 85 74 ec ff
	ff		 lea	 eax, DWORD PTR _SendBuff$212936[ebp]
  00227	50		 push	 eax
  00228	c1 e9 08	 shr	 ecx, 8
  0022b	52		 push	 edx
  0022c	c6 85 74 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$212936[ebp], 194 ; 000000c2H
  00233	88 8d 75 ec ff
	ff		 mov	 BYTE PTR _SendBuff$212936[ebp+1], cl
  00239	66 c7 85 77 ec
	ff ff fa 10	 mov	 WORD PTR _SendBuff$212936[ebp+3], 4346 ; 000010faH
  00242	88 9d 79 ec ff
	ff		 mov	 BYTE PTR _SendBuff$212936[ebp+5], bl
  00248	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0024d	8b 95 6c ec ff
	ff		 mov	 edx, DWORD PTR _aIndex$212931[ebp]
  00253	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@GCViewePor:

; 870  : 		}
; 871  : 
; 872  : 		this->GCEventTimer(aIndex);

  00256	8b 8d 50 ec ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?GCEventTimer@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCEventTimer
  00262	8b 95 6c ec ff
	ff		 mov	 edx, DWORD PTR _aIndex$212931[ebp]
  00268	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR tv364[ebp]
$LN17@GCViewePor:

; 790  : 	{
; 791  : 		return;
; 792  : 	}
; 793  : 
; 794  : 	for (int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)

  0026e	05 50 2b 00 00	 add	 eax, 11088		; 00002b50H
  00273	42		 inc	 edx
  00274	89 95 6c ec ff
	ff		 mov	 DWORD PTR _aIndex$212931[ebp], edx
  0027a	89 85 58 ec ff
	ff		 mov	 DWORD PTR tv364[ebp], eax
  00280	3d 80 d7 e9 09	 cmp	 eax, 166320000		; 09e9d780H
  00285	0f 8c ba fd ff
	ff		 jl	 $LL34@GCViewePor
  0028b	5f		 pop	 edi
  0028c	5e		 pop	 esi
  0028d	5b		 pop	 ebx
$LN16@GCViewePor:

; 873  : 	}
; 874  : }

  0028e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00291	33 cd		 xor	 ecx, ebp
  00293	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00298	8b e5		 mov	 esp, ebp
  0029a	5d		 pop	 ebp
  0029b	c3		 ret	 0
?GCViewePortTvT@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCViewePortTvT
_TEXT	ENDS
PUBLIC	?SetStatus@CTeamVsTeam@@QAEXH@Z			; CTeamVsTeam::SetStatus
; Function compile flags: /Ogtp
;	COMDAT ?SetStatus@CTeamVsTeam@@QAEXH@Z
_TEXT	SEGMENT
_States$ = 8						; size = 4
?SetStatus@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::SetStatus, COMDAT
; _this$ = ecx

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 240  : 	this->m_EventStatus = States;

  00003	8b 45 08	 mov	 eax, DWORD PTR _States$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 241  : 
; 242  : 	switch(this->m_EventStatus)

  0000c	83 e8 00	 sub	 eax, 0
  0000f	74 28		 je	 SHORT $LN3@SetStatus
  00011	48		 dec	 eax
  00012	74 14		 je	 SHORT $LN2@SetStatus
  00014	48		 dec	 eax
  00015	75 27		 jne	 SHORT $LN4@SetStatus

; 249  : 			break;
; 250  : 		case eEVENT_TEAMVSTEAM_START:	
; 251  : 			this->StatusStart();	

  00017	e8 00 00 00 00	 call	 ?StatusStart@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::StatusStart

; 252  : 			break;
; 253  : 	}
; 254  : 
; 255  : 	this->GCEventStatusAll();

  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ?GCEventStatusAll@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventStatusAll
  00023	5e		 pop	 esi

; 256  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
$LN2@SetStatus:

; 246  : 			break;
; 247  : 		case eEVENT_TEAMVSTEAM_WAIT:	
; 248  : 			this->StatusWait();		

  00028	e8 00 00 00 00	 call	 ?StatusWait@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::StatusWait

; 252  : 			break;
; 253  : 	}
; 254  : 
; 255  : 	this->GCEventStatusAll();

  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?GCEventStatusAll@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventStatusAll
  00034	5e		 pop	 esi

; 256  : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN3@SetStatus:

; 243  : 	{
; 244  : 		case eEVENT_TEAMVSTEAM_CLOSE:	
; 245  : 			this->StatusClose();	

  00039	e8 00 00 00 00	 call	 ?StatusClose@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::StatusClose
$LN4@SetStatus:

; 252  : 			break;
; 253  : 	}
; 254  : 
; 255  : 	this->GCEventStatusAll();

  0003e	8b ce		 mov	 ecx, esi
  00040	e8 00 00 00 00	 call	 ?GCEventStatusAll@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventStatusAll
  00045	5e		 pop	 esi

; 256  : }

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?SetStatus@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::SetStatus
_TEXT	ENDS
PUBLIC	??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@	; `string'
PUBLIC	??_C@_06ODDEDKB@TeamY2?$AA@			; `string'
PUBLIC	??_C@_06PPBCJJG@TeamX2?$AA@			; `string'
PUBLIC	??_C@_06CFBOBAGC@TeamY1?$AA@			; `string'
PUBLIC	??_C@_06CENMHKFF@TeamX1?$AA@			; `string'
PUBLIC	??_C@_06BLHBMKBP@EventY?$AA@			; `string'
PUBLIC	??_C@_06CGKPLFO@EventX?$AA@			; `string'
PUBLIC	??_C@_08EOFHGIKD@MinReset?$AA@			; `string'
PUBLIC	??_C@_0O@NGOLDLNM@RewardLevelUp?$AA@		; `string'
PUBLIC	??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@		; `string'
PUBLIC	??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@		; `string'
PUBLIC	??_C@_0P@KMGPHJCD@RewardItemType?$AA@		; `string'
PUBLIC	??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@	; `string'
PUBLIC	??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@	; `string'
PUBLIC	??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@	; `string'
PUBLIC	??_C@_04JEMJNNDC@NpcY?$AA@			; `string'
PUBLIC	??_C@_04INNCOMHD@NpcX?$AA@			; `string'
PUBLIC	??_C@_06KMEDHGPI@NpcMap?$AA@			; `string'
PUBLIC	??_C@_08BNJJHKPI@NpcClass?$AA@			; `string'
PUBLIC	??_C@_0BC@LNOAINMO@EventDurationTime?$AA@	; `string'
PUBLIC	??_C@_0P@LJMNIACI@EventeStartMin?$AA@		; `string'
PUBLIC	??_C@_0P@BDCFPCEH@EventStartHour?$AA@		; `string'
PUBLIC	??_C@_0O@BLJMNMLG@EventStartDay?$AA@		; `string'
PUBLIC	??_C@_06CNKIADGI@ZtTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	?Read@CTeamVsTeam@@QAEXPAD@Z			; CTeamVsTeam::Read
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@
CONST	SEGMENT
??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@ DB '%s file load!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ODDEDKB@TeamY2?$AA@
CONST	SEGMENT
??_C@_06ODDEDKB@TeamY2?$AA@ DB 'TeamY2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PPBCJJG@TeamX2?$AA@
CONST	SEGMENT
??_C@_06PPBCJJG@TeamX2?$AA@ DB 'TeamX2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CFBOBAGC@TeamY1?$AA@
CONST	SEGMENT
??_C@_06CFBOBAGC@TeamY1?$AA@ DB 'TeamY1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CENMHKFF@TeamX1?$AA@
CONST	SEGMENT
??_C@_06CENMHKFF@TeamX1?$AA@ DB 'TeamX1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BLHBMKBP@EventY?$AA@
CONST	SEGMENT
??_C@_06BLHBMKBP@EventY?$AA@ DB 'EventY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGKPLFO@EventX?$AA@
CONST	SEGMENT
??_C@_06CGKPLFO@EventX?$AA@ DB 'EventX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EOFHGIKD@MinReset?$AA@
CONST	SEGMENT
??_C@_08EOFHGIKD@MinReset?$AA@ DB 'MinReset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NGOLDLNM@RewardLevelUp?$AA@
CONST	SEGMENT
??_C@_0O@NGOLDLNM@RewardLevelUp?$AA@ DB 'RewardLevelUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
CONST	SEGMENT
??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@ DB 'RewardItemLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
CONST	SEGMENT
??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@ DB 'RewardItemIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
CONST	SEGMENT
??_C@_0P@KMGPHJCD@RewardItemType?$AA@ DB 'RewardItemType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@
CONST	SEGMENT
??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@ DB 'RewardItemEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@
CONST	SEGMENT
??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@ DB 'RewardBonusCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@
CONST	SEGMENT
??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@ DB 'RewardBonusEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JEMJNNDC@NpcY?$AA@
CONST	SEGMENT
??_C@_04JEMJNNDC@NpcY?$AA@ DB 'NpcY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04INNCOMHD@NpcX?$AA@
CONST	SEGMENT
??_C@_04INNCOMHD@NpcX?$AA@ DB 'NpcX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KMEDHGPI@NpcMap?$AA@
CONST	SEGMENT
??_C@_06KMEDHGPI@NpcMap?$AA@ DB 'NpcMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNJJHKPI@NpcClass?$AA@
CONST	SEGMENT
??_C@_08BNJJHKPI@NpcClass?$AA@ DB 'NpcClass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LNOAINMO@EventDurationTime?$AA@
CONST	SEGMENT
??_C@_0BC@LNOAINMO@EventDurationTime?$AA@ DB 'EventDurationTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LJMNIACI@EventeStartMin?$AA@
CONST	SEGMENT
??_C@_0P@LJMNIACI@EventeStartMin?$AA@ DB 'EventeStartMin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDCFPCEH@EventStartHour?$AA@
CONST	SEGMENT
??_C@_0P@BDCFPCEH@EventStartHour?$AA@ DB 'EventStartHour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BLJMNMLG@EventStartDay?$AA@
CONST	SEGMENT
??_C@_0O@BLJMNMLG@EventStartDay?$AA@ DB 'EventStartDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CNKIADGI@ZtTeam?$AA@
CONST	SEGMENT
??_C@_06CNKIADGI@ZtTeam?$AA@ DB 'ZtTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Read@CTeamVsTeam@@QAEXPAD@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
?Read@CTeamVsTeam@@QAEXPAD@Z PROC			; CTeamVsTeam::Read, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 73   : 	this->m_Enable				= GetPrivateProfileInt("ZtTeam", "Enable", 0, filename);

  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetPrivateProfileIntA@16
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _filename$[ebp]
  0000f	57		 push	 edi
  00010	6a 00		 push	 0
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0001c	8b f1		 mov	 esi, ecx
  0001e	ff d3		 call	 ebx

; 74   : 	this->m_EventStartDay		= GetPrivateProfileInt("ZtTeam", "EventStartDay", 0, filename);

  00020	57		 push	 edi
  00021	6a 00		 push	 0
  00023	85 c0		 test	 eax, eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BLJMNMLG@EventStartDay?$AA@
  0002a	0f 95 c0	 setne	 al
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00032	88 06		 mov	 BYTE PTR [esi], al
  00034	ff d3		 call	 ebx

; 75   : 	this->m_EventStartHour		= GetPrivateProfileInt("ZtTeam", "EventStartHour", 0, filename);

  00036	57		 push	 edi
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDCFPCEH@EventStartHour?$AA@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00043	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  00046	ff d3		 call	 ebx

; 76   : 	this->m_EventeStartMin		= GetPrivateProfileInt("ZtTeam", "EventeStartMin", 0, filename);

  00048	57		 push	 edi
  00049	6a 00		 push	 0
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LJMNIACI@EventeStartMin?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00055	89 46 30	 mov	 DWORD PTR [esi+48], eax
  00058	ff d3		 call	 ebx

; 77   : 	this->m_EventDurationTime	= GetPrivateProfileInt("ZtTeam", "EventDurationTime", 0, filename);

  0005a	57		 push	 edi
  0005b	6a 00		 push	 0
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LNOAINMO@EventDurationTime?$AA@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00067	89 46 34	 mov	 DWORD PTR [esi+52], eax
  0006a	ff d3		 call	 ebx

; 78   : 	this->m_NpcClass			= GetPrivateProfileInt("ZtTeam", "NpcClass", 0, filename);

  0006c	57		 push	 edi
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_08BNJJHKPI@NpcClass?$AA@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00079	89 46 38	 mov	 DWORD PTR [esi+56], eax
  0007c	ff d3		 call	 ebx

; 79   : 	this->m_NpcMap				= GetPrivateProfileInt("ZtTeam", "NpcMap", 0, filename);

  0007e	57		 push	 edi
  0007f	6a 00		 push	 0
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_06KMEDHGPI@NpcMap?$AA@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0008b	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0008e	ff d3		 call	 ebx

; 80   : 	this->m_NpcX				= GetPrivateProfileInt("ZtTeam", "NpcX", 0, filename);

  00090	57		 push	 edi
  00091	6a 00		 push	 0
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_04INNCOMHD@NpcX?$AA@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0009d	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000a0	ff d3		 call	 ebx

; 81   : 	this->m_NpcY				= GetPrivateProfileInt("ZtTeam", "NpcY", 0, filename);

  000a2	57		 push	 edi
  000a3	6a 00		 push	 0
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_04JEMJNNDC@NpcY?$AA@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000af	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000b2	ff d3		 call	 ebx

; 82   : 	this->m_RewardBonusEnable	= GetPrivateProfileInt("ZtTeam", "RewardBonusEnable", 0, filename);

  000b4	57		 push	 edi
  000b5	6a 00		 push	 0
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000c1	89 46 28	 mov	 DWORD PTR [esi+40], eax
  000c4	ff d3		 call	 ebx

; 83   : 	this->m_RewardBonusCount    = GetPrivateProfileInt("ZtTeam", "RewardBonusCount", 0, filename);

  000c6	57		 push	 edi
  000c7	6a 00		 push	 0
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000d3	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000d6	ff d3		 call	 ebx

; 84   : 	this->m_RewardItemEnable	= GetPrivateProfileInt("ZtTeam", "RewardItemEnable", 0, filename);

  000d8	57		 push	 edi
  000d9	6a 00		 push	 0
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000e5	89 46 48	 mov	 DWORD PTR [esi+72], eax
  000e8	ff d3		 call	 ebx
  000ea	89 46 4c	 mov	 DWORD PTR [esi+76], eax

; 85   : 	this->m_RewardItemType		= GetPrivateProfileInt("ZtTeam", "RewardItemType", 0, filename);

  000ed	57		 push	 edi
  000ee	6a 00		 push	 0
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  000fa	ff d3		 call	 ebx

; 86   : 	this->m_RewardItemIndex		= GetPrivateProfileInt("ZtTeam", "RewardItemIndex", 0, filename);

  000fc	57		 push	 edi
  000fd	6a 00		 push	 0
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00109	89 46 50	 mov	 DWORD PTR [esi+80], eax
  0010c	ff d3		 call	 ebx

; 87   : 	this->m_RewardItemLevel		= GetPrivateProfileInt("ZtTeam", "RewardItemLevel", 0, filename);

  0010e	57		 push	 edi
  0010f	6a 00		 push	 0
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0011b	89 46 54	 mov	 DWORD PTR [esi+84], eax
  0011e	ff d3		 call	 ebx

; 88   : 	#if(ENABLE_NSGAME_UPDATE)
; 89   : 	this->m_RewardLevelUp		= GetPrivateProfileInt("ZtTeam", "RewardLevelUp", 0, filename);

  00120	57		 push	 edi
  00121	6a 00		 push	 0
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NGOLDLNM@RewardLevelUp?$AA@
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0012d	89 46 58	 mov	 DWORD PTR [esi+88], eax
  00130	ff d3		 call	 ebx

; 90   : 	#endif		
; 91   : 	this->m_MinReset			= GetPrivateProfileInt("ZtTeam", "MinReset", 0, filename);

  00132	57		 push	 edi
  00133	6a 00		 push	 0
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_08EOFHGIKD@MinReset?$AA@
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  0013f	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  00142	ff d3		 call	 ebx

; 92   : 	
; 93   : 	#if(NEW_UPDATE_1019)
; 94   : 	this->m_EventX				= GetPrivateProfileInt("ZtTeam", "EventX", 72, filename);

  00144	57		 push	 edi
  00145	6a 48		 push	 72			; 00000048H
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_06CGKPLFO@EventX?$AA@
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00151	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00154	ff d3		 call	 ebx

; 95   : 	this->m_EventY				= GetPrivateProfileInt("ZtTeam", "EventY", 46, filename);

  00156	57		 push	 edi
  00157	6a 2e		 push	 46			; 0000002eH
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_06BLHBMKBP@EventY?$AA@
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00163	89 46 60	 mov	 DWORD PTR [esi+96], eax
  00166	ff d3		 call	 ebx

; 96   : 	this->m_TeamX1				= GetPrivateProfileInt("ZtTeam", "TeamX1", 36, filename);

  00168	57		 push	 edi
  00169	6a 24		 push	 36			; 00000024H
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_06CENMHKFF@TeamX1?$AA@
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00175	89 46 64	 mov	 DWORD PTR [esi+100], eax
  00178	ff d3		 call	 ebx

; 97   : 	this->m_TeamY1				= GetPrivateProfileInt("ZtTeam", "TeamY1", 28, filename);

  0017a	57		 push	 edi
  0017b	6a 1c		 push	 28			; 0000001cH
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_06CFBOBAGC@TeamY1?$AA@
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00187	89 46 68	 mov	 DWORD PTR [esi+104], eax
  0018a	ff d3		 call	 ebx

; 98   : 	this->m_TeamX2				= GetPrivateProfileInt("ZtTeam", "TeamX2", 93, filename);

  0018c	57		 push	 edi
  0018d	6a 5d		 push	 93			; 0000005dH
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_06PPBCJJG@TeamX2?$AA@
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  00199	89 46 6c	 mov	 DWORD PTR [esi+108], eax
  0019c	ff d3		 call	 ebx

; 99   : 	this->m_TeamY2				= GetPrivateProfileInt("ZtTeam", "TeamY2", 80, filename);

  0019e	57		 push	 edi
  0019f	6a 50		 push	 80			; 00000050H
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_06ODDEDKB@TeamY2?$AA@
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_06CNKIADGI@ZtTeam?$AA@
  001ab	89 46 70	 mov	 DWORD PTR [esi+112], eax
  001ae	ff d3		 call	 ebx

; 100  : 	#endif
; 101  : 	if(!this->m_Enable/* && this->CheckStatus(eEVENT_TEAMVSTEAM_WAIT) || this->CheckStatus(eEVENT_TEAMVSTEAM_START)*/)

  001b0	80 3e 00	 cmp	 BYTE PTR [esi], 0
  001b3	89 46 74	 mov	 DWORD PTR [esi+116], eax
  001b6	75 09		 jne	 SHORT $LN1@Read

; 102  : 	{
; 103  : 		this->SetStatus(eEVENT_TEAMVSTEAM_CLOSE);

  001b8	6a 00		 push	 0
  001ba	8b ce		 mov	 ecx, esi
  001bc	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN1@Read:

; 104  : 	}
; 105  : 
; 106  : 	LogAdd("%s file load!", filename);

  001c1	57		 push	 edi
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@
  001c7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  001cd	83 c4 08	 add	 esp, 8
  001d0	5f		 pop	 edi
  001d1	5e		 pop	 esi
  001d2	5b		 pop	 ebx

; 107  : }

  001d3	5d		 pop	 ebp
  001d4	c2 04 00	 ret	 4
?Read@CTeamVsTeam@@QAEXPAD@Z ENDP			; CTeamVsTeam::Read
_TEXT	ENDS
PUBLIC	?ProcessStatusClose@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::ProcessStatusClose
EXTRN	?GetSecond@CTimerZt@@QAEHXZ:PROC		; CTimerZt::GetSecond
EXTRN	?g_TimerZt@@3VCTimerZt@@A:DWORD			; g_TimerZt
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?ProcessStatusClose@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
?ProcessStatusClose@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::ProcessStatusClose, COMDAT
; _this$ = ecx

; 133  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 134  : 	GetLocalTime(&this->systime);

  00003	8d 46 78	 lea	 eax, DWORD PTR [esi+120]
  00006	50		 push	 eax
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 135  : 
; 136  : 	if(this->m_EventStartDay == -1)

  0000d	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00010	83 f8 ff	 cmp	 eax, -1
  00013	75 18		 jne	 SHORT $LN4@ProcessSta

; 137  : 	{
; 138  : 		if(this->m_EventStartHour == this->systime.wHour		&&
; 139  : 		   this->m_EventeStartMin == this->systime.wMinute		&&
; 140  : #if(NEWTIMEREX)
; 141  : 			g_TimerZt.GetSecond() == 00)

  00015	0f b7 8e 80 00
	00 00		 movzx	 ecx, WORD PTR [esi+128]
  0001c	39 4e 30	 cmp	 DWORD PTR [esi+48], ecx
  0001f	75 43		 jne	 SHORT $LN1@ProcessSta
  00021	0f b7 96 82 00
	00 00		 movzx	 edx, WORD PTR [esi+130]
  00028	39 56 34	 cmp	 DWORD PTR [esi+52], edx

; 142  : #else
; 143  : 		   this->systime.wSecond == 0)
; 144  : #endif
; 145  : 		{
; 146  : 			this->SetStatus(eEVENT_TEAMVSTEAM_WAIT);
; 147  : 		}
; 148  : 	}
; 149  : 	else

  0002b	eb 1e		 jmp	 SHORT $LN8@ProcessSta
$LN4@ProcessSta:

; 150  : 	{
; 151  : 		if(this->m_EventStartDay == this->systime.wDayOfWeek	&&
; 152  : 		   this->m_EventStartHour == this->systime.wHour		&&
; 153  : 		   this->m_EventeStartMin == this->systime.wMinute		&&
; 154  : #if(NEWTIMEREX)
; 155  : 			g_TimerZt.GetSecond() == 00)

  0002d	0f b7 4e 7c	 movzx	 ecx, WORD PTR [esi+124]
  00031	3b c1		 cmp	 eax, ecx
  00033	75 2f		 jne	 SHORT $LN1@ProcessSta
  00035	0f b7 96 80 00
	00 00		 movzx	 edx, WORD PTR [esi+128]
  0003c	39 56 30	 cmp	 DWORD PTR [esi+48], edx
  0003f	75 23		 jne	 SHORT $LN1@ProcessSta
  00041	0f b7 86 82 00
	00 00		 movzx	 eax, WORD PTR [esi+130]
  00048	39 46 34	 cmp	 DWORD PTR [esi+52], eax
$LN8@ProcessSta:
  0004b	75 17		 jne	 SHORT $LN1@ProcessSta
  0004d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerZt@@3VCTimerZt@@A ; g_TimerZt
  00052	e8 00 00 00 00	 call	 ?GetSecond@CTimerZt@@QAEHXZ ; CTimerZt::GetSecond
  00057	85 c0		 test	 eax, eax
  00059	75 09		 jne	 SHORT $LN1@ProcessSta

; 156  : #else
; 157  : 		   this->systime.wSecond == 0)
; 158  : #endif
; 159  : 		{
; 160  : 			this->SetStatus(eEVENT_TEAMVSTEAM_WAIT);

  0005b	6a 01		 push	 1
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN1@ProcessSta:
  00064	5e		 pop	 esi

; 161  : 		}
; 162  : 	}
; 163  : }

  00065	c3		 ret	 0
?ProcessStatusClose@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::ProcessStatusClose
_TEXT	ENDS
PUBLIC	??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?PrecessStatusWait@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::PrecessStatusWait
EXTRN	_sprintf:PROC
;	COMDAT ??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@
CONST	SEGMENT
??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@ DB '['
	DB	'Team vs Team] start after %d minute(s)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?PrecessStatusWait@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
_szTemp$212699 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
?PrecessStatusWait@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::PrecessStatusWait, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 167  : 	int iTickMsec = (GetTickCount() - this->m_TickCount);

  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  0001b	8b f1		 mov	 esi, ecx
  0001d	ff d7		 call	 edi
  0001f	2b 46 10	 sub	 eax, DWORD PTR [esi+16]

; 168  : 
; 169  : 	if(iTickMsec >= 1000)

  00022	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00027	7c 56		 jl	 SHORT $LN4@PrecessSta

; 170  : 	{
; 171  : 		this->m_TickRemain -= iTickMsec;			

  00029	29 46 14	 sub	 DWORD PTR [esi+20], eax

; 172  : 		this->m_TickCount = GetTickCount();

  0002c	ff d7		 call	 edi

; 173  : 
; 174  : 		if(this->m_TickRemain <= (60000 * TEAMVSTEAM_WAIT))

  0002e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00031	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00034	81 f9 e0 93 04
	00		 cmp	 ecx, 300000		; 000493e0H
  0003a	7f 43		 jg	 SHORT $LN4@PrecessSta

; 175  : 		{
; 176  : 			if((this->m_TickCount - this->m_TickWait) > 60000)

  0003c	2b 46 18	 sub	 eax, DWORD PTR [esi+24]
  0003f	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  00044	7e 39		 jle	 SHORT $LN4@PrecessSta

; 177  : 			{
; 178  : 				int iWaitMin = (this->m_TickRemain/60000) + 1;

  00046	b8 73 b2 e7 45	 mov	 eax, 1172812403		; 45e7b273H
  0004b	f7 e9		 imul	 ecx
  0004d	c1 fa 0e	 sar	 edx, 14			; 0000000eH
  00050	8b c2		 mov	 eax, edx
  00052	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00055	8d 4c 02 01	 lea	 ecx, DWORD PTR [edx+eax+1]

; 179  : 				char szTemp[256];
; 180  : 				sprintf(szTemp, "[Team vs Team] start after %d minute(s)", iWaitMin);

  00059	51		 push	 ecx
  0005a	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szTemp$212699[ebp]
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 _sprintf

; 181  : 				AllSendServerMsg(szTemp);

  0006b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szTemp$212699[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00077	83 c4 10	 add	 esp, 16			; 00000010H

; 182  : 				this->m_TickWait = GetTickCount();

  0007a	ff d7		 call	 edi
  0007c	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN4@PrecessSta:

; 183  : 			}
; 184  : 		}
; 185  : 	}
; 186  : 
; 187  : 	if(this->m_TickRemain <= 0)

  0007f	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00083	7f 19		 jg	 SHORT $LN1@PrecessSta

; 188  : 	{
; 189  : 		int iTotalPlayer = this->DivTeam();

  00085	8b ce		 mov	 ecx, esi
  00087	e8 00 00 00 00	 call	 ?DivTeam@CTeamVsTeam@@QAEHXZ ; CTeamVsTeam::DivTeam

; 190  : 
; 191  : 		if(iTotalPlayer >= TEAMVSTEAM_MINPLAYER)
; 192  : 		{
; 193  : 			this->SetStatus(eEVENT_TEAMVSTEAM_START);

  0008c	8b ce		 mov	 ecx, esi
  0008e	83 f8 02	 cmp	 eax, 2
  00091	7c 04		 jl	 SHORT $LN2@PrecessSta
  00093	6a 02		 push	 2

; 194  : 		}
; 195  : 		else

  00095	eb 02		 jmp	 SHORT $LN9@PrecessSta
$LN2@PrecessSta:

; 196  : 		{
; 197  : 			this->SetStatus(eEVENT_TEAMVSTEAM_CLOSE);

  00097	6a 00		 push	 0
$LN9@PrecessSta:
  00099	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN1@PrecessSta:

; 198  : 		}
; 199  : 	}
; 200  : }

  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	5f		 pop	 edi
  000a2	33 cd		 xor	 ecx, ebp
  000a4	5e		 pop	 esi
  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
?PrecessStatusWait@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::PrecessStatusWait
_TEXT	ENDS
PUBLIC	?ProcessStatusStart@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::ProcessStatusStart
; Function compile flags: /Ogtp
;	COMDAT ?ProcessStatusStart@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
?ProcessStatusStart@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::ProcessStatusStart, COMDAT
; _this$ = ecx

; 203  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 204  : 	int iTickMsec = (GetTickCount() - this->m_TickCount);

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetTickCount@0
  00008	8b f1		 mov	 esi, ecx
  0000a	ff d7		 call	 edi
  0000c	2b 46 10	 sub	 eax, DWORD PTR [esi+16]

; 205  : 
; 206  : 	if(iTickMsec >= 1000)

  0000f	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00014	7c 0f		 jl	 SHORT $LN2@ProcessSta@2

; 207  : 	{
; 208  : 		this->m_TickRemain -= iTickMsec;			

  00016	29 46 14	 sub	 DWORD PTR [esi+20], eax

; 209  : 		this->m_TickCount = GetTickCount();

  00019	ff d7		 call	 edi

; 210  : 
; 211  : 	/*	for(int aIndex = OBJ_STARTUSERINDZT; aIndex < OBJMAX; aIndex++)
; 212  : 		{
; 213  : 			LPOBJ lpUser = &gObj[aIndex];
; 214  : 
; 215  : 			if(lpUser->Connected < PLAYER_PLAYING)
; 216  : 			{
; 217  : 				continue;
; 218  : 			}
; 219  : 
; 220  : 			if(lpUser->MapNumber != TEAMVSTEAM_MAP)
; 221  : 			{
; 222  : 				continue;
; 223  : 			}
; 224  : 			this->GCEventTimer(aIndex);
; 225  : 		}*/
; 226  : 
; 227  : 		#if(NEW_UPDATE_1019)
; 228  : 		this->PlayerTrap();

  0001b	8b ce		 mov	 ecx, esi
  0001d	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00020	e8 00 00 00 00	 call	 ?PlayerTrap@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::PlayerTrap
$LN2@ProcessSta@2:

; 229  : 		#endif
; 230  : 	}
; 231  : 
; 232  : 	if(this->m_TickRemain <= 0)

  00025	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00029	7f 09		 jg	 SHORT $LN1@ProcessSta@2

; 233  : 	{
; 234  : 		this->SetStatus(eEVENT_TEAMVSTEAM_CLOSE);

  0002b	6a 00		 push	 0
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN1@ProcessSta@2:

; 235  : 	}
; 236  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	c3		 ret	 0
?ProcessStatusStart@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::ProcessStatusStart
_TEXT	ENDS
PUBLIC	??_C@_0BN@IMCEMOKI@ZtData?2Events?2TeamVsTeam?4dat?$AA@ ; `string'
PUBLIC	?Load@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ZtLicense@@3VCZtLicense@@A:BYTE		; g_ZtLicense
;	COMDAT ??_C@_0BN@IMCEMOKI@ZtData?2Events?2TeamVsTeam?4dat?$AA@
CONST	SEGMENT
??_C@_0BN@IMCEMOKI@ZtData?2Events?2TeamVsTeam?4dat?$AA@ DB 'ZtData\Events'
	DB	'\TeamVsTeam.dat', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
?Load@CTeamVsTeam@@QAEXXZ PROC				; CTeamVsTeam::Load, COMDAT
; _this$ = ecx

; 63   : 	if(!g_ZtLicense.user.bTeamVsTeam2)

  00000	80 3d ec 00 00
	00 00		 cmp	 BYTE PTR ?g_ZtLicense@@3VCZtLicense@@A+236, 0
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 17		 je	 SHORT $LN2@Load

; 64   : 	{
; 65   : 		return;
; 66   : 	}
; 67   : 
; 68   : 	this->Read(gDirPath.GetNewPath("ZtData\\Events\\TeamVsTeam.dat"));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IMCEMOKI@ZtData?2Events?2TeamVsTeam?4dat?$AA@
  00011	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00016	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0001b	50		 push	 eax
  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ?Read@CTeamVsTeam@@QAEXPAD@Z ; CTeamVsTeam::Read
$LN2@Load:
  00023	5e		 pop	 esi

; 69   : }

  00024	c3		 ret	 0
?Load@CTeamVsTeam@@QAEXXZ ENDP				; CTeamVsTeam::Load
_TEXT	ENDS
PUBLIC	?Run@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::Run
; Function compile flags: /Ogtp
;	COMDAT ?Run@CTeamVsTeam@@QAEXXZ
_TEXT	SEGMENT
?Run@CTeamVsTeam@@QAEXXZ PROC				; CTeamVsTeam::Run, COMDAT
; _this$ = ecx

; 110  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 111  : 	if(!this->m_Enable)

  00003	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00006	74 35		 je	 SHORT $LN7@Run

; 112  : 	{
; 113  : 		return;
; 114  : 	}
; 115  : 
; 116  : 	switch(this->m_EventStatus)

  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	83 e8 00	 sub	 eax, 0
  0000e	74 20		 je	 SHORT $LN3@Run
  00010	48		 dec	 eax
  00011	74 10		 je	 SHORT $LN2@Run
  00013	48		 dec	 eax
  00014	75 1f		 jne	 SHORT $LN4@Run

; 123  : 			break;
; 124  : 		case eEVENT_TEAMVSTEAM_START:	
; 125  : 			this->ProcessStatusStart();		

  00016	e8 00 00 00 00	 call	 ?ProcessStatusStart@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::ProcessStatusStart

; 126  : 			break;
; 127  : 	}
; 128  : 
; 129  : 	this->GCViewePortTvT();

  0001b	8b ce		 mov	 ecx, esi
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?GCViewePortTvT@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCViewePortTvT
$LN2@Run:

; 120  : 			break;
; 121  : 		case eEVENT_TEAMVSTEAM_WAIT:	
; 122  : 			this->PrecessStatusWait();		

  00023	e8 00 00 00 00	 call	 ?PrecessStatusWait@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::PrecessStatusWait

; 126  : 			break;
; 127  : 	}
; 128  : 
; 129  : 	this->GCViewePortTvT();

  00028	8b ce		 mov	 ecx, esi
  0002a	5e		 pop	 esi
  0002b	e9 00 00 00 00	 jmp	 ?GCViewePortTvT@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCViewePortTvT
$LN3@Run:

; 117  : 	{
; 118  : 		case eEVENT_TEAMVSTEAM_CLOSE:	
; 119  : 			this->ProcessStatusClose();		

  00030	e8 00 00 00 00	 call	 ?ProcessStatusClose@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::ProcessStatusClose
$LN4@Run:

; 126  : 			break;
; 127  : 	}
; 128  : 
; 129  : 	this->GCViewePortTvT();

  00035	8b ce		 mov	 ecx, esi
  00037	5e		 pop	 esi
  00038	e9 00 00 00 00	 jmp	 ?GCViewePortTvT@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCViewePortTvT
$LN7@Run:
  0003d	5e		 pop	 esi

; 130  : }

  0003e	c3		 ret	 0
?Run@CTeamVsTeam@@QAEXXZ ENDP				; CTeamVsTeam::Run
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_TeamVsTeam@@YAXXZ
text$yc	SEGMENT
??__Eg_TeamVsTeam@@YAXXZ PROC				; `dynamic initializer for 'g_TeamVsTeam'', COMDAT

; 16   : CTeamVsTeam g_TeamVsTeam;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TeamVsTeam@@3VCTeamVsTeam@@A ; g_TeamVsTeam
  00005	e8 00 00 00 00	 call	 ??0CTeamVsTeam@@QAE@XZ	; CTeamVsTeam::CTeamVsTeam
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_TeamVsTeam@@YAXXZ ; `dynamic atexit destructor for 'g_TeamVsTeam''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_TeamVsTeam@@YAXXZ ENDP				; `dynamic initializer for 'g_TeamVsTeam''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_TeamVsTeam@@YAXXZ
text$yd	SEGMENT
??__Fg_TeamVsTeam@@YAXXZ PROC				; `dynamic atexit destructor for 'g_TeamVsTeam'', COMDAT
  00000	c3		 ret	 0
??__Fg_TeamVsTeam@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_TeamVsTeam''
text$yd	ENDS
PUBLIC	?g_TeamVsTeam@@3VCTeamVsTeam@@A			; g_TeamVsTeam
_BSS	SEGMENT
?g_TeamVsTeam@@3VCTeamVsTeam@@A DB 088H DUP (?)		; g_TeamVsTeam
_BSS	ENDS
CRT$XCU	SEGMENT
_g_TeamVsTeam$initializer$ DD FLAT:??__Eg_TeamVsTeam@@YAXXZ
CRT$XCU	ENDS
END
