; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\work\tranet_version\GS\GameServer\TimerZt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??1CTimerZt@@QAE@XZ				; CTimerZt::~CTimerZt
; Function compile flags: /Ogtp
; File e:\work\tranet_version\gs\gameserver\timerzt.cpp
;	COMDAT ??1CTimerZt@@QAE@XZ
_TEXT	SEGMENT
??1CTimerZt@@QAE@XZ PROC				; CTimerZt::~CTimerZt, COMDAT
; _this$ = ecx

; 13   : }

  00000	c3		 ret	 0
??1CTimerZt@@QAE@XZ ENDP				; CTimerZt::~CTimerZt
_TEXT	ENDS
PUBLIC	?Init@CTimerZt@@QAEXXZ				; CTimerZt::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CTimerZt@@QAEXXZ
_TEXT	SEGMENT
?Init@CTimerZt@@QAEXXZ PROC				; CTimerZt::Init, COMDAT
; _this$ = ecx

; 17   : 	this->m_TickSecond = 0;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 18   : }

  00006	c3		 ret	 0
?Init@CTimerZt@@QAEXXZ ENDP				; CTimerZt::Init
_TEXT	ENDS
PUBLIC	?Run@CTimerZt@@QAEXXZ				; CTimerZt::Run
; Function compile flags: /Ogtp
;	COMDAT ?Run@CTimerZt@@QAEXXZ
_TEXT	SEGMENT
?Run@CTimerZt@@QAEXXZ PROC				; CTimerZt::Run, COMDAT
; _this$ = ecx

; 22   : 	this->m_TickSecond++;

  00000	ff 01		 inc	 DWORD PTR [ecx]

; 23   : 
; 24   : 	if(this->m_TickSecond >= 60)

  00002	83 39 3c	 cmp	 DWORD PTR [ecx], 60	; 0000003cH
  00005	7c 06		 jl	 SHORT $LN1@Run

; 25   : 	{
; 26   : 		this->m_TickSecond = 0;

  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN1@Run:

; 27   : 	}
; 28   : }

  0000d	c3		 ret	 0
?Run@CTimerZt@@QAEXXZ ENDP				; CTimerZt::Run
_TEXT	ENDS
PUBLIC	?GetSecond@CTimerZt@@QAEHXZ			; CTimerZt::GetSecond
; Function compile flags: /Ogtp
;	COMDAT ?GetSecond@CTimerZt@@QAEHXZ
_TEXT	SEGMENT
?GetSecond@CTimerZt@@QAEHXZ PROC			; CTimerZt::GetSecond, COMDAT
; _this$ = ecx

; 32   : 	return this->m_TickSecond;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 33   : }

  00002	c3		 ret	 0
?GetSecond@CTimerZt@@QAEHXZ ENDP			; CTimerZt::GetSecond
_TEXT	ENDS
PUBLIC	??0CTimerZt@@QAE@XZ				; CTimerZt::CTimerZt
; Function compile flags: /Ogtp
;	COMDAT ??0CTimerZt@@QAE@XZ
_TEXT	SEGMENT
??0CTimerZt@@QAE@XZ PROC				; CTimerZt::CTimerZt, COMDAT
; _this$ = ecx

; 8    : 	this->Init();

  00000	e8 00 00 00 00	 call	 ?Init@CTimerZt@@QAEXXZ	; CTimerZt::Init

; 9    : }

  00005	8b c1		 mov	 eax, ecx
  00007	c3		 ret	 0
??0CTimerZt@@QAE@XZ ENDP				; CTimerZt::CTimerZt
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_TimerZt@@YAXXZ
text$yc	SEGMENT
??__Eg_TimerZt@@YAXXZ PROC				; `dynamic initializer for 'g_TimerZt'', COMDAT

; 4    : CTimerZt g_TimerZt;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerZt@@3VCTimerZt@@A ; g_TimerZt
  00005	e8 00 00 00 00	 call	 ??0CTimerZt@@QAE@XZ	; CTimerZt::CTimerZt
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_TimerZt@@YAXXZ ; `dynamic atexit destructor for 'g_TimerZt''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_TimerZt@@YAXXZ ENDP				; `dynamic initializer for 'g_TimerZt''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_TimerZt@@YAXXZ
text$yd	SEGMENT
??__Fg_TimerZt@@YAXXZ PROC				; `dynamic atexit destructor for 'g_TimerZt'', COMDAT
  00000	c3		 ret	 0
??__Fg_TimerZt@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_TimerZt''
text$yd	ENDS
PUBLIC	?g_TimerZt@@3VCTimerZt@@A			; g_TimerZt
_BSS	SEGMENT
?g_TimerZt@@3VCTimerZt@@A DD 01H DUP (?)		; g_TimerZt
_BSS	ENDS
CRT$XCU	SEGMENT
_g_TimerZt$initializer$ DD FLAT:??__Eg_TimerZt@@YAXXZ
CRT$XCU	ENDS
END
